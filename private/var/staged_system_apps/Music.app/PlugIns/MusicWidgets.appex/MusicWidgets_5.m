void sub_100346E60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;

  v5 = *(os_unfair_lock_s **)(v2 + 16);
  v6 = (uint64_t)&v5[4];
  v7 = v5 + 11;
  os_unfair_lock_lock(v5 + 11);
  sub_100348F78(v6, (uint64_t)&v11);
  os_unfair_lock_unlock(v7);
  v8 = v11;
  if (v11)
  {
    swift_bridgeObjectRetain();
    v9 = v8;
    v10 = sub_1003477D4(v9, a1, a2);
    __chkstk_darwin(v10);
    os_unfair_lock_lock(v7);
    sub_100348F94(v6);
    os_unfair_lock_unlock(v7);
    sub_100348FB8(v8);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100346FC4(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = *(unsigned __int8 *)(a2 + 8);
  unsigned int v3 = (*(void *)a1 == *(void *)a2) & ~v2;
  if (*(void *)a2) {
    unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  }
  else {
    unsigned int v4 = 0;
  }
  if (*(void *)a2) {
    unsigned int v2 = 0;
  }
  if (*(void *)a1) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = v2;
  }
  if (*(unsigned char *)(a1 + 8) == 1) {
    return v5;
  }
  else {
    return v3;
  }
}

void *sub_100347000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v5 = v4;
  uint64_t v10 = sub_100530920();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  v17 = (char *)&v44 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v44 - v18;
  v5[3] = a1;
  v5[4] = a2;
  v5[5] = a3;
  v5[6] = a4;
  v20 = self;
  swift_retain();
  id v21 = [v20 sharedBagProvider];
  LODWORD(a2) = [v21 useAMSBag];

  if (!a2)
  {
    if (qword_100663DA8 != -1) {
      swift_once();
    }
    id v34 = (id)static OS_os_log.musicBag;
    sub_100530930();
    v35 = sub_100530900();
    os_log_type_t v36 = sub_1005357E0();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "UserDefaults enabled as source for cached musicTabs.", v37, 2u);
      swift_slowDealloc();
    }

    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_22;
  }
  if (qword_100663DF0 != -1) {
    swift_once();
  }
  id v22 = [(id)static ICClientInfo.music bagProfile];
  if (!v22)
  {
LABEL_17:
    if (qword_100663DA8 != -1) {
      swift_once();
    }
    id v38 = (id)static OS_os_log.musicBag;
    sub_100530930();
    v39 = sub_100530900();
    os_log_type_t v40 = sub_1005357D0();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "    AMSBag was intended to be enabled as source for cached musicTabs, but bag profile and/or version were unexpectedly nil.\n    Defaulting to .userDefaults configuration.", v41, 2u);
      swift_slowDealloc();
    }

    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
LABEL_22:
    id v32 = 0;
    char v33 = 0;
    goto LABEL_23;
  }
  v23 = v22;
  uint64_t v45 = v10;
  uint64_t v44 = sub_100534CE0();

  id v24 = [(id)static ICClientInfo.music bagProfileVersion];
  if (!v24)
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = v45;
    goto LABEL_17;
  }
  v25 = v24;
  sub_100534CE0();

  if (qword_100663DA8 != -1) {
    swift_once();
  }
  id v26 = (id)static OS_os_log.musicBag;
  sub_100530930();
  v27 = sub_100530900();
  os_log_type_t v28 = sub_1005357E0();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "AMSBag enabled as source for cached musicTabs.", v29, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v45);
  NSString v30 = sub_100534CA0();
  swift_bridgeObjectRelease();
  NSString v31 = sub_100534CA0();
  swift_bridgeObjectRelease();
  id v32 = [self bagForProfile:v30 profileVersion:v31];
  swift_release();

  char v33 = 1;
LABEL_23:
  sub_10000BB04(&qword_10066E2E0);
  uint64_t v42 = swift_allocObject();
  *(_DWORD *)(v42 + 44) = 0;
  *(void *)(v42 + 24) = 0;
  *(void *)(v42 + 32) = 0;
  *(void *)(v42 + 16) = v32;
  *(unsigned char *)(v42 + 40) = v33;
  v5[2] = v42;
  return v5;
}

void sub_100347528(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100530920();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)a1;
  if (*(void *)a1)
  {
    uint64_t v11 = *(void *)(a1 + 8);
    if ((*(unsigned char *)(a1 + 24) & 1) != 0 && !*(void *)(a1 + 16))
    {
      *(void *)(a1 + 16) = 1;
      *(unsigned char *)(a1 + 24) = 1;
      *(void *)a2 = v10;
      *(void *)(a2 + 8) = v11;
      *(void *)(a2 + 16) = 1;
      *(unsigned char *)(a2 + 24) = 1;
      swift_bridgeObjectRetain();
      id v12 = v10;
      return;
    }
    uint64_t v13 = qword_100663DA8;
    id v24 = v10;
    swift_bridgeObjectRetain();
    if (v13 != -1) {
      swift_once();
    }
    id v14 = (id)static OS_os_log.musicBag;
    sub_100530930();
    uint64_t v15 = sub_100530900();
    os_log_type_t v16 = sub_1005357D0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v23 = v3;
      uint64_t v18 = v17;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v25 = v22;
      *(_DWORD *)uint64_t v18 = 136315394;
      uint64_t v19 = sub_100536A30();
      *(void *)(v18 + 4) = sub_1000F4A7C(v19, v20, &v25);
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      *(void *)(v18 + 14) = sub_1000F4A7C(0xD000000000000021, 0x8000000100565430, &v25);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "    An unexpected attempt to configure an %s instance twice using %s will be ignored.", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
  }
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 24) = 0;
  *(void *)(a2 + 16) = 0;
}

id sub_1003477D4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v42 = a1;
  uint64_t v7 = sub_100530920();
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v44 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v41 = (char *)&v40 - v11;
  id v46 = [self uninitializedToken];
  uint64_t v12 = *(void *)(v3 + 24);
  uint64_t v13 = *(void *)(v4 + 32);
  sub_10000BB04((uint64_t *)&unk_100669190);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10053A3B0;
  *(void *)(inited + 32) = v12;
  *(void *)(inited + 40) = v13;
  swift_bridgeObjectRetain_n();
  sub_1001DF41C(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  Class isa = sub_100535490().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v16;
  v17[3] = v12;
  v17[4] = v13;
  v17[5] = a2;
  v17[6] = a3;
  v49 = sub_10034949C;
  v50 = v17;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v48 = sub_100348EF4;
  *((void *)&v48 + 1) = &unk_10062BE30;
  uint64_t v18 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v19 = v42;
  swift_release();
  id v20 = [v19 cachedValuesForKeys:isa observationToken:&v46 updateHandler:v18];
  _Block_release(v18);

  uint64_t v21 = sub_100534AB0();
  if (*(void *)(v21 + 16) && (unint64_t v22 = sub_1001A1AC8(v12, v13), (v23 & 1) != 0))
  {
    sub_10009B1D4(*(void *)(v21 + 56) + 32 * v22, (uint64_t)&aBlock);
  }
  else
  {
    long long aBlock = 0u;
    long long v48 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)&v48 + 1))
  {
    sub_10000BB04(&qword_1006682F8);
    if (swift_dynamicCast())
    {
      uint64_t v24 = v45;
      uint64_t v25 = qword_100663DA8;
      swift_bridgeObjectRetain();
      if (v25 != -1) {
        swift_once();
      }
      id v26 = (id)static OS_os_log.musicBag;
      v27 = v41;
      sub_100530930();
      swift_bridgeObjectRetain();
      os_log_type_t v28 = sub_100530900();
      os_log_type_t v29 = sub_1005357E0();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = swift_slowAlloc();
        *(void *)&long long aBlock = swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 136315138;
        sub_100348FF8(v24);
        sub_10000BB04(&qword_10066A8C0);
        uint64_t v31 = sub_100534AC0();
        id v32 = v19;
        unint64_t v34 = v33;
        swift_release();
        *(void *)(v30 + 4) = sub_1000F4A7C(v31, v34, (uint64_t *)&aBlock);
        swift_bridgeObjectRelease_n();
        uint64_t v19 = v32;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "AMSBag provided initial state of musicTabs: %s", (uint8_t *)v30, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v43 + 8))(v41, v44);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v44);
      }
      return v19;
    }
  }
  else
  {
    sub_100013C44((uint64_t)&aBlock, (uint64_t *)&unk_100668240);
  }
  if (qword_100663DA8 != -1) {
    swift_once();
  }
  id v35 = (id)static OS_os_log.musicBag;
  sub_100530930();
  os_log_type_t v36 = sub_100530900();
  os_log_type_t v37 = sub_1005357E0();
  if (os_log_type_enabled(v36, v37))
  {
    id v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v38 = 0;
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "AMSBag didn't provide initial state of musicTabs. No cached value was found.", v38, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v43 + 8))(v10, v44);
  return v19;
}

id sub_100347DF0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  char v9 = a5 & 1;
  sub_100348FB8(*(void **)a1);
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = a4;
  *(unsigned char *)(a1 + 24) = v9;
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_100347E60@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (*a1)
  {
    *a4 = a1[1];
    return swift_bridgeObjectRetain();
  }
  else if (a2 {
         && (NSString v8 = sub_100534CA0(),
  }
             id v9 = [a2 dictionaryForBagKey:v8],
             v8,
             v9)
         && (uint64_t v10 = sub_100534AB0(), v9,
                                    unint64_t v11 = sub_100346700(v10),
                                    uint64_t result = swift_bridgeObjectRelease(),
                                    v11))
  {
    *a4 = v11;
  }
  else
  {
    uint64_t v12 = (*(uint64_t (**)(void))(a3 + 40))();
    uint64_t result = swift_bridgeObjectRelease();
    *a4 = v12;
  }
  return result;
}

uint64_t sub_100347F58()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 11;
  os_unfair_lock_lock(v2 + 11);
  sub_10034862C(v3, (uint64_t)v7);
  os_unfair_lock_unlock(v4);
  id v5 = v7[0];
  if (v7[0])
  {
    if ((v8 & 1) == 0) {
      [v7[0] removeObserverWithToken:v7[2]];
    }

    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v1;
}

id sub_100348030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100530920();
  uint64_t v7 = *(void *)(v6 - 8);
  id result = (id)__chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void **)a1;
  if (*(void *)a1)
  {
    long long v12 = *(_OWORD *)(a1 + 8);
    if ((*(unsigned char *)(a1 + 24) & 1) == 0)
    {
      *(void *)a2 = v11;
      *(_OWORD *)(a2 + 8) = v12;
      *(unsigned char *)(a2 + 24) = 0;
      swift_bridgeObjectRetain();
      return v11;
    }
    uint64_t v13 = *(void *)(a1 + 8);
    uint64_t v14 = qword_100663DA8;
    id v15 = v11;
    uint64_t v27 = v13;
    swift_bridgeObjectRetain();
    if (v14 != -1) {
      swift_once();
    }
    id v16 = (id)static OS_os_log.musicBag;
    sub_100530930();
    uint64_t v17 = sub_100530900();
    os_log_type_t v18 = sub_1005357D0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      id v25 = v15;
      uint64_t v20 = v19;
      uint64_t v21 = swift_slowAlloc();
      uint64_t v26 = v3;
      uint64_t v28 = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      uint64_t v22 = sub_100536A30();
      *(void *)(v20 + 4) = sub_1000F4A7C(v22, v23, &v28);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "    %s wasn't configured with an AMSBag update handler prior to deallocation. This may have caused musicTabs updates to be missed after initialization.", (uint8_t *)v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    id result = (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 24) = 0;
  *(void *)(a2 + 16) = 0;
  return result;
}

uint64_t sub_1003482B8()
{
  sub_100347F58();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MusicTabsDictionaryProvider()
{
  return self;
}

id *destroy for MusicTabsDictionaryProvider.Configuration(id *result)
{
  if ((unint64_t)*result >= 0xFFFFFFFF)
  {

    return (id *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MusicTabsDictionaryProvider.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  }
  else
  {
    uint64_t v5 = *(void *)(a2 + 8);
    uint64_t v4 = *(void *)(a2 + 16);
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v4;
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    id v6 = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for MusicTabsDictionaryProvider.Configuration(uint64_t a1, long long *a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  if (*(void *)a1 < 0xFFFFFFFFuLL)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      uint64_t v8 = *((void *)a2 + 2);
      *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
      *(void *)(a1 + 16) = v8;
      id v9 = v5;
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v10 = *a2;
    *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
    *(_OWORD *)a1 = v10;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF)
  {

    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(void *)a1 = v5;
  id v6 = v5;

  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *((void *)a2 + 2);
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v7;
  return a1;
}

__n128 initializeWithTake for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MusicTabsDictionaryProvider.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  if (*(void *)a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {

    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    return a1;
  }
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicTabsDictionaryProvider.Configuration(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 25)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MusicTabsDictionaryProvider.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

uint64_t sub_1003485F8(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *(void *)__n128 result = v2;
  return result;
}

ValueMetadata *type metadata accessor for MusicTabsDictionaryProvider.Configuration()
{
  return &type metadata for MusicTabsDictionaryProvider.Configuration;
}

id sub_10034862C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100348030(a1, a2);
}

uint64_t sub_100348648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  uint64_t v9 = sub_100533280();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  long long v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005332B0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v18 = *(void *)(a1 + 16);
    uint64_t v31 = v14;
    uint64_t v32 = v10;
    if (v18)
    {
      swift_bridgeObjectRetain();
      unint64_t v19 = sub_1001A1AC8(a3, a4);
      if (v20)
      {
        sub_10009B1D4(*(void *)(a1 + 56) + 32 * v19, (uint64_t)&aBlock);
      }
      else
      {
        long long aBlock = 0u;
        long long v37 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v37 + 1))
      {
        sub_10000BB04(&qword_1006682F8);
        uint64_t v21 = swift_dynamicCast();
        if (v21) {
          uint64_t v22 = v35;
        }
        else {
          uint64_t v22 = 0;
        }
        goto LABEL_12;
      }
    }
    else
    {
      long long aBlock = 0u;
      long long v37 = 0u;
    }
    uint64_t v21 = sub_100013C44((uint64_t)&aBlock, (uint64_t *)&unk_100668240);
    uint64_t v22 = 0;
LABEL_12:
    __chkstk_darwin(v21);
    *(&v30 - 2) = v22;
    uint64_t v24 = (uint64_t)&v23[4];
    id v25 = v23 + 11;
    os_unfair_lock_lock(v23 + 11);
    sub_1003494C4(v24, (char *)&aBlock);
    os_unfair_lock_unlock(v25);
    if (aBlock == 1)
    {
      sub_100159F7C();
      uint64_t v26 = (void *)sub_100535960();
      uint64_t v27 = (void *)swift_allocObject();
      uint64_t v28 = v34;
      v27[2] = v33;
      v27[3] = v28;
      v27[4] = v22;
      id v38 = sub_100349520;
      v39 = v27;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v37 = sub_1001CB5A0;
      *((void *)&v37 + 1) = &unk_10062BE80;
      os_log_type_t v29 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      sub_1005332A0();
      *(void *)&long long aBlock = _swiftEmptyArrayStorage;
      sub_1001CA630();
      sub_10000BB04(&qword_100667F18);
      sub_1001BAA18();
      sub_1005360C0();
      sub_100535980();
      _Block_release(v29);
      swift_release();

      (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v9);
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v16, v13);
    }
    else
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_100348A3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v7 = sub_100530920();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v39 - v12;
  uint64_t v14 = *(void **)a1;
  if (*(void *)a1)
  {
    uint64_t v41 = v7;
    uint64_t v42 = v3;
    uint64_t v16 = *(void *)(a1 + 8);
    uint64_t v15 = *(void *)(a1 + 16);
    char v17 = *(unsigned char *)(a1 + 24) & 1;
    uint64_t v46 = a2;
    uint64_t v47 = v15;
    char v48 = v17;
    id v45 = v14;
    *(void *)(a1 + 8) = a2;
    *(unsigned char *)(a1 + 24) = v17;
    uint64_t v18 = qword_100663DA8;
    swift_bridgeObjectRetain_n();
    id v19 = v14;
    if (v18 != -1) {
      swift_once();
    }
    id v20 = (id)static OS_os_log.musicBag;
    sub_100530930();
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_100530900();
    os_log_type_t v22 = sub_1005357E0();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v40 = a3;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315394;
      if (v16)
      {
        uint64_t v24 = v42;
        uint64_t v25 = sub_100348FF8(v16);
        uint64_t v42 = v24;
      }
      else
      {
        uint64_t v25 = 0;
      }
      uint64_t v44 = v25;
      sub_10000BB04(&qword_10066E2D8);
      uint64_t v32 = sub_100534D70();
      *(void *)(v23 + 4) = sub_1000F4A7C(v32, v33, &v49);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      swift_beginAccess();
      if (v46)
      {
        uint64_t v34 = swift_bridgeObjectRetain();
        uint64_t v35 = v42;
        uint64_t v36 = sub_100348FF8(v34);
        uint64_t v42 = v35;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v36 = 0;
      }
      uint64_t v43 = v36;
      uint64_t v37 = sub_100534D70();
      *(void *)(v23 + 14) = sub_1000F4A7C(v37, v38, &v49);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "    AMSBag provided updated musicTabs dictionary.\n    Previous: %s\n    Updated: %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v41);
      uint64_t result = swift_bridgeObjectRelease();
      a3 = v40;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v41);

      uint64_t result = swift_bridgeObjectRelease();
    }
    char v31 = 1;
  }
  else
  {
    if (qword_100663DA8 != -1) {
      swift_once();
    }
    id v26 = (id)static OS_os_log.musicBag;
    sub_100530930();
    uint64_t v27 = sub_100530900();
    os_log_type_t v28 = sub_1005357D0();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      id v45 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315138;
      *(void *)(v29 + 4) = sub_1000F4A7C(0xD000000000000047, 0x80000001005653E0, (uint64_t *)&v45);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Unexpected update handler call in %s with .userDefaults configuration. This is likely programmer error.", (uint8_t *)v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    char v31 = 0;
  }
  *a3 = v31;
  return result;
}

uint64_t sub_100348EF4(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = sub_100534AB0();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_100348F78(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

id sub_100348F94(uint64_t a1)
{
  return sub_100347DF0(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
}

void *sub_100348FB8(void *result)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100348FF8(uint64_t a1)
{
  sub_10000BB04(&qword_10066E2D0);
  uint64_t result = sub_100536490();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v38 = a1;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v34 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v36 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v37 = result + 64;
  uint64_t v35 = (void *)result;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v9 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    uint64_t v14 = (uint64_t *)(*(void *)(v38 + 48) + 16 * i);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    uint64_t v17 = *(void *)(*(void *)(v38 + 56) + 8 * i);
    int64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      uint64_t v39 = *v14;
      unint64_t v41 = i;
      int64_t v42 = v4;
      uint64_t v47 = _swiftEmptyArrayStorage;
      uint64_t v40 = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100174BF4(0, v18, 0);
      uint64_t v19 = 0;
      id v20 = v47;
      do
      {
        uint64_t v21 = *(void *)(v17 + 8 * v19 + 32);
        *(void *)&long long v43 = 25705;
        *((void *)&v43 + 1) = 0xE200000000000000;
        sub_100536160();
        if (*(void *)(v21 + 16) && (unint64_t v22 = sub_1001AE410((uint64_t)v45), (v23 & 1) != 0))
        {
          sub_10009B1D4(*(void *)(v21 + 56) + 32 * v22, (uint64_t)&v43);
        }
        else
        {
          long long v43 = 0u;
          long long v44 = 0u;
        }
        sub_1001A20BC((uint64_t)v45);
        if (*((void *)&v44 + 1))
        {
          sub_1001A20AC(&v43, v46);
          sub_10009B1D4((uint64_t)v46, (uint64_t)v45);
          int v24 = swift_dynamicCast();
          unint64_t v26 = *((void *)&v43 + 1);
          uint64_t v25 = v43;
          sub_10009B1D4((uint64_t)v46, (uint64_t)&v43);
          if (!v24 || !v26)
          {
            sub_1005361C0(23);
            v48._countAndFlagsBits = 0xD000000000000014;
            v48._object = (void *)0x80000001005653C0;
            sub_100534E80(v48);
            sub_100536370();
            v49._countAndFlagsBits = 62;
            v49._object = (void *)0xE100000000000000;
            sub_100534E80(v49);
            uint64_t v25 = 0;
            unint64_t v26 = 0xE000000000000000;
          }
          sub_100013D48((uint64_t)&v43);
          sub_100013D48((uint64_t)v46);
        }
        else
        {
          sub_100013C44((uint64_t)&v43, (uint64_t *)&unk_100668240);
          unint64_t v26 = 0xEF3E746E65736261;
          uint64_t v25 = 0x204449206261743CLL;
        }
        uint64_t v47 = v20;
        unint64_t v28 = v20[2];
        unint64_t v27 = v20[3];
        if (v28 >= v27 >> 1)
        {
          sub_100174BF4((char *)(v27 > 1), v28 + 1, 1);
          id v20 = v47;
        }
        ++v19;
        v20[2] = v28 + 1;
        uint64_t v29 = &v20[2 * v28];
        v29[4] = v25;
        v29[5] = v26;
      }
      while (v18 != v19);
      swift_bridgeObjectRelease();
      uint64_t v3 = v35;
      int64_t v4 = v42;
      uint64_t result = v40;
      unint64_t i = v41;
      uint64_t v16 = v39;
    }
    else
    {
      uint64_t result = swift_bridgeObjectRetain();
      id v20 = _swiftEmptyArrayStorage;
    }
    *(void *)(v37 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v30 = (void *)(v3[6] + 16 * i);
    *uint64_t v30 = v16;
    v30[1] = result;
    *(void *)(v3[7] + 8 * i) = v20;
    uint64_t v31 = v3[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32)
    {
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v3[2] = v33;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_39;
    }
    if (v11 >= v36) {
      return (uint64_t)v3;
    }
    unint64_t v12 = *(void *)(v34 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v36) {
        return (uint64_t)v3;
      }
      unint64_t v12 = *(void *)(v34 + 8 * v4);
      if (!v12) {
        break;
      }
    }
LABEL_16:
    unint64_t v8 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 2;
  if (v13 >= v36) {
    return (uint64_t)v3;
  }
  unint64_t v12 = *(void *)(v34 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v36) {
      return (uint64_t)v3;
    }
    unint64_t v12 = *(void *)(v34 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_16;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10034941C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100349454()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10034949C(uint64_t a1)
{
  return sub_100348648(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1003494AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003494BC()
{
  return swift_release();
}

uint64_t sub_1003494C4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_100348A3C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1003494E0()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100349520()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t destroy for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v7;
  return a1;
}

uint64_t assignWithTake for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration()
{
  return &type metadata for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration;
}

uint64_t getEnumTagSinglePayload for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration.State(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration.State(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_10034977C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100349798(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration.State()
{
  return &type metadata for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration.State;
}

unint64_t PlayActivityFeatureIdentifier.rawValue.getter(char a1)
{
  unint64_t result = 0x65645F6D75626C61;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x736D75626C61;
      break;
    case 2:
      unint64_t result = 0x5F7972617262696CLL;
      break;
    case 3:
      unint64_t result = 0x74616C69706D6F63;
      break;
    case 4:
      unint64_t result = 0x7265736F706D6F63;
      break;
    case 5:
      unint64_t result = 0x7365726E6567;
      break;
    case 6:
      unint64_t result = 0x726F665F6564616DLL;
      break;
    case 7:
      unint64_t result = 0x736569766F6DLL;
      break;
    case 8:
      unint64_t result = 0x69765F636973756DLL;
      break;
    case 9:
      unint64_t result = 0x7473696C79616C70;
      break;
    case 10:
    case 11:
      unint64_t result = 0x7473696C79616C70;
      break;
    case 12:
      unint64_t result = 0x796C746E65636572;
      break;
    case 13:
      unint64_t result = 0xD000000000000013;
      break;
    case 14:
      unint64_t result = 0x73676E6F73;
      break;
    case 15:
      unint64_t result = 0x73776F6873;
      break;
    case 16:
      unint64_t result = 0x7365646F73697065;
      break;
    case 17:
      unint64_t result = 0x79616C705F776F6ELL;
      break;
    case 18:
      unint64_t result = 0x616C705F696E696DLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t PlayActivityFeatureIdentifier.id.getter(char a1)
{
  unint64_t result = 0x65645F6D75626C61;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x736D75626C61;
      break;
    case 2:
      unint64_t result = 0x5F7972617262696CLL;
      break;
    case 3:
      unint64_t result = 0x74616C69706D6F63;
      break;
    case 4:
      unint64_t result = 0x7265736F706D6F63;
      break;
    case 5:
      unint64_t result = 0x7365726E6567;
      break;
    case 6:
      unint64_t result = 0x726F665F6564616DLL;
      break;
    case 7:
      unint64_t result = 0x736569766F6DLL;
      break;
    case 8:
      unint64_t result = 0x69765F636973756DLL;
      break;
    case 9:
      unint64_t result = 0x7473696C79616C70;
      break;
    case 10:
    case 11:
      unint64_t result = 0x7473696C79616C70;
      break;
    case 12:
      unint64_t result = 0x796C746E65636572;
      break;
    case 13:
      unint64_t result = 0xD000000000000013;
      break;
    case 14:
      unint64_t result = 0x73676E6F73;
      break;
    case 15:
      unint64_t result = 0x73776F6873;
      break;
    case 16:
      unint64_t result = 0x7365646F73697065;
      break;
    case 17:
      unint64_t result = 0x79616C705F776F6ELL;
      break;
    case 18:
      unint64_t result = 0x616C705F696E696DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100349CC4(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = PlayActivityFeatureIdentifier.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == PlayActivityFeatureIdentifier.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_100536780();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_100349D50()
{
  char v1 = *v0;
  sub_100536950();
  PlayActivityFeatureIdentifier.rawValue.getter(v1);
  sub_100534DD0();
  swift_bridgeObjectRelease();
  return sub_1005369A0();
}

uint64_t sub_100349DB4()
{
  PlayActivityFeatureIdentifier.rawValue.getter(*v0);
  sub_100534DD0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100349E08()
{
  char v1 = *v0;
  sub_100536950();
  PlayActivityFeatureIdentifier.rawValue.getter(v1);
  sub_100534DD0();
  swift_bridgeObjectRelease();
  return sub_1005369A0();
}

uint64_t sub_100349E68@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s9MusicCore29PlayActivityFeatureIdentifierO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_100349E98@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = PlayActivityFeatureIdentifier.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_100349EC4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = PlayActivityFeatureIdentifier.id.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t _s9MusicCore29PlayActivityFeatureIdentifierO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_1005367D0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x13) {
    return 19;
  }
  else {
    return v0;
  }
}

unint64_t sub_100349F48()
{
  unint64_t result = qword_10066E2E8;
  if (!qword_10066E2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066E2E8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PlayActivityFeatureIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEE) {
    goto LABEL_17;
  }
  if (a2 + 18 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 18) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 18;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x13;
  int v8 = v6 - 19;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PlayActivityFeatureIdentifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 18 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 18) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xED)
  {
    unsigned int v6 = ((a2 - 238) >> 8) + 1;
    *unint64_t result = a2 + 18;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10034A0F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 18;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayActivityFeatureIdentifier()
{
  return &type metadata for PlayActivityFeatureIdentifier;
}

uint64_t QRCode.init(data:errorCorrectionLevel:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_10034AABC(a1, a2, a3, v6);
  return sub_10034B23C((uint64_t)v6, a4);
}

void sub_10034A16C()
{
  qword_10066E2F0 = Int.seconds.getter(10);
}

uint64_t QRCode.data.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_10004A0A8(v1, *(void *)(v0 + 16));
  return v1;
}

id QRCode.image.getter()
{
  return *(id *)(v0 + 24);
}

void sub_10034A1CC(void *a1, void *a2, CGImage *a3, uint64_t a4, CGContext *a5, double a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10, double a11)
{
  [a1 beginPage];
  id v64 = a1;
  int64_t v18 = (CGContext *)[a1 CGContext];
  if (qword_100664598 != -1) {
    goto LABEL_66;
  }
  while (1)
  {
    CGContextSetLineWidth(v18, *(CGFloat *)&qword_10066E2F0);

    uint64_t v19 = self;
    id v20 = [v19 whiteColor];
    [v20 setStroke];

    id v21 = [v19 whiteColor];
    [v21 setFill];

    double v22 = *(double *)&qword_10066E2F0;
    double v23 = *(double *)&qword_10066E2F0 * a6;
    v68.origin.x = a7;
    v68.origin.y = a8;
    v68.size.width = a9;
    v68.size.height = a10;
    double v24 = CGRectGetWidth(v68) - v23;
    v69.origin.x = a7;
    v69.origin.y = a8;
    v69.size.width = a9;
    v69.size.height = a10;
    double Height = CGRectGetHeight(v69);
    unint64_t v26 = self;
    a8 = 0.5;
    v70.origin.x = 0.0;
    v70.origin.y = 0.0;
    v70.size.width = v22 * a6;
    v70.size.height = v22 * a6;
    CGRect v71 = CGRectInset(v70, v22 * 0.5, v22 * 0.5);
    id v27 = [v26 _bezierPathWithPillRect:v71.origin.x, v71.origin.y, v71.size.width, v71.size.height, 10.0];
    if (v27)
    {
      unint64_t v28 = v27;
      [v27 setLineWidth:v22];
      [v28 stroke];
      double v29 = v22 * a11;
      v72.origin.x = 0.0;
      v72.origin.y = 0.0;
      v72.size.width = v23;
      v72.size.height = v23;
      a7 = v29 * 0.5;
      a9 = CGRectGetMidX(v72) - v29 * 0.5;
      v73.origin.x = 0.0;
      v73.origin.y = 0.0;
      v73.size.width = v23;
      v73.size.height = v23;
      id v30 = [v26 _bezierPathWithPillRect:a9 cornerRadius:CGRectGetMidY(v73) - v29 * 0.5, v29, v29, 2.0];
      [v30 fill];
    }
    double v31 = Height - v23;
    double v32 = *(double *)&qword_10066E2F0;
    v74.origin.y = 0.0;
    v74.origin.x = v24;
    v74.size.width = v23;
    v74.size.height = v23;
    CGRect v75 = CGRectInset(v74, *(double *)&qword_10066E2F0 * 0.5, *(double *)&qword_10066E2F0 * 0.5);
    id v33 = [v26 _bezierPathWithPillRect:v75.origin.x, v75.origin.y, v75.size.width, v75.size.height, 10.0];
    if (v33)
    {
      uint64_t v34 = v33;
      [v33 setLineWidth:v32];
      [v34 stroke];
      double v35 = v32 * a11;
      v76.origin.y = 0.0;
      v76.origin.x = v24;
      v76.size.width = v23;
      v76.size.height = v23;
      a8 = v35 * 0.5;
      a9 = CGRectGetMidX(v76) - v35 * 0.5;
      v77.origin.y = 0.0;
      v77.origin.x = v24;
      v77.size.width = v23;
      v77.size.height = v23;
      id v36 = [v26 _bezierPathWithPillRect:a9 cornerRadius:CGRectGetMidY(v77) - v35 * 0.5 v35, v35, 2.0];
      [v36 fill];
    }
    double v37 = *(double *)&qword_10066E2F0;
    v78.origin.x = 0.0;
    v78.origin.y = v31;
    v78.size.width = v23;
    v78.size.height = v23;
    CGRect v79 = CGRectInset(v78, *(double *)&qword_10066E2F0 * 0.5, *(double *)&qword_10066E2F0 * 0.5);
    id v38 = [v26 _bezierPathWithPillRect:v79.origin.x, v79.origin.y, v79.size.width, v79.size.height, 10.0];
    if (v38)
    {
      uint64_t v39 = v38;
      [v38 setLineWidth:v37];
      [v39 stroke];
      double v40 = v37 * a11;
      v80.origin.x = 0.0;
      v80.origin.y = v31;
      v80.size.width = v23;
      v80.size.height = v23;
      a9 = v40 * 0.5;
      CGFloat v41 = CGRectGetMidX(v80) - v40 * 0.5;
      v81.origin.x = 0.0;
      v81.origin.y = v31;
      v81.size.width = v23;
      v81.size.height = v23;
      id v42 = [v26 _bezierPathWithPillRect:v41 cornerRadius:CGRectGetMidY(v81) - v40 * 0.5, v40, v40, 2.0];
      [v42 fill];
    }
    [a2 extent];
    double v43 = CGRectGetHeight(v82);
    if ((~*(void *)&v43 & 0x7FF0000000000000) == 0) {
      break;
    }
    if (v43 <= -9.22337204e18) {
      goto LABEL_68;
    }
    if (v43 >= 9.22337204e18) {
      goto LABEL_69;
    }
    uint64_t v44 = (uint64_t)v43;
    if ((uint64_t)v43 < 1) {
      goto LABEL_70;
    }
    int64_t v18 = a5;
    if ((uint64_t)v43 == 1) {
      return;
    }
    uint64_t v45 = (uint64_t)a6;
    uint64_t v46 = 1;
    a10 = -1.0;
    *(void *)&a11 = (uint64_t)v43;
    while (1)
    {
      if (v46 == v44) {
        goto LABEL_61;
      }
      [a2 extent];
      double Width = CGRectGetWidth(v83);
      if ((~*(void *)&Width & 0x7FF0000000000000) == 0) {
        break;
      }
      if (Width <= -9.22337204e18) {
        goto LABEL_63;
      }
      if (Width >= 9.22337204e18) {
        goto LABEL_64;
      }
      uint64_t v48 = (uint64_t)Width;
      if ((uint64_t)Width < 1) {
        goto LABEL_65;
      }
      if ((uint64_t)Width != 1)
      {
        a9 = (double)(v46 - 1);
        for (uint64_t i = 1; v48 != i; ++i)
        {
          int64_t BytesPerRow = CGImageGetBytesPerRow(a3);
          int64_t v55 = BytesPerRow * v46;
          if ((unsigned __int128)(BytesPerRow * (__int128)v46) >> 64 != (BytesPerRow * v46) >> 63)
          {
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
            goto LABEL_62;
          }
          uint64_t v56 = i * a4;
          if ((unsigned __int128)(i * (__int128)a4) >> 64 != (i * a4) >> 63) {
            goto LABEL_48;
          }
          BOOL v57 = __OFADD__(v55, v56);
          int64_t v58 = v55 + v56;
          if (v57) {
            goto LABEL_49;
          }
          if (!*((unsigned char *)v18 + v58))
          {
            if ((*(void *)&a6 & 0x7FF0000000000000) == 0x7FF0000000000000) {
              goto LABEL_50;
            }
            if (a6 <= -9.22337204e18) {
              goto LABEL_51;
            }
            if (a6 >= 9.22337204e18) {
              goto LABEL_52;
            }
            [a2 extent];
            double v59 = CGRectGetWidth(v85);
            if ((~*(void *)&v59 & 0x7FF0000000000000) == 0) {
              goto LABEL_53;
            }
            if (v59 <= -9.22337204e18) {
              goto LABEL_54;
            }
            if (v59 >= 9.22337204e18) {
              goto LABEL_55;
            }
            uint64_t v60 = (uint64_t)v59;
            if (v46 <= v45)
            {
              if (i <= v45) {
                continue;
              }
              BOOL v57 = __OFSUB__(v60, v45);
              uint64_t v61 = v60 - v45;
              if (v57) {
                goto LABEL_59;
              }
              if (__OFSUB__(v61, 1)) {
                goto LABEL_60;
              }
              if (i >= v61 - 1) {
                continue;
              }
            }
            else
            {
              BOOL v57 = __OFSUB__(v60, v45);
              uint64_t v61 = v60 - v45;
              if (v57) {
                goto LABEL_56;
              }
            }
            BOOL v57 = __OFSUB__(v61, 1);
            uint64_t v62 = v61 - 1;
            if (v57) {
              goto LABEL_57;
            }
            if (v46 < v62 || i > v45)
            {
              if (__OFSUB__(i, 1)) {
                goto LABEL_58;
              }
              CGFloat v50 = *(double *)&qword_10066E2F0 * (double)(i - 1);
              CGFloat v51 = *(double *)&qword_10066E2F0 * a9;
              CGFloat v52 = *(double *)&qword_10066E2F0 + -1.0;
              v53 = (CGContext *)[v64 CGContext];
              v84.origin.x = v50;
              v84.origin.y = v51;
              v84.size.width = v52;
              v84.size.height = v52;
              CGContextFillEllipseInRect(v53, v84);

              int64_t v18 = a5;
            }
          }
        }
      }
      ++v46;
      uint64_t v44 = *(void *)&a11;
      if (v46 == *(void *)&a11) {
        return;
      }
    }
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    swift_once();
  }
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
}

uint64_t QRCode.with(errorCorrectionLevel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = *(void *)(v2 + 8);
  unint64_t v5 = *(void *)(v2 + 16);
  sub_10004A0A8(v6, v5);
  sub_10034AABC(v6, v5, a1, v8);
  return sub_10034B23C((uint64_t)v8, a2);
}

double QRCode.dotAdjustedWidth(with:scale:)()
{
  double v1 = (double)*v0;
  UIRoundToScale();
  return v2 * v1;
}

CGMutablePathRef QRCode.dotAlignedPath(with:in:imageBounds:)(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  v18.origin.x = a6;
  v18.origin.y = a7;
  v18.size.width = a8;
  v18.size.height = a9;
  CGRectGetWidth(v18);
  v19.origin.x = a2;
  v19.origin.y = a3;
  v19.size.width = a4;
  v19.size.height = a5;
  CGRectGetMinX(v19);
  v20.origin.x = a2;
  v20.origin.y = a3;
  v20.size.width = a4;
  v20.size.height = a5;
  CGRectGetMinY(v20);
  swift_bridgeObjectRetain();
  CGMutablePathRef result = CGPathCreateMutable();
  if (*(void *)(a1 + 16))
  {
    CGMutablePathRef v15 = result;
    sub_100128CCC(0, 1);
    sub_100535860();
    uint64_t v16 = *(void *)(a1 + 16);
    if (v16)
    {
      uint64_t v17 = a1 + 40;
      do
      {
        sub_100535870();
        v17 += 16;
        --v16;
      }
      while (v16);
    }
    swift_bridgeObjectRelease();
    return v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10034AABC(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  int v8 = self;
  sub_10004A0A8(a1, a2);
  id v9 = [v8 QRCodeGenerator];
  Class isa = sub_10052F3C0().super.isa;
  NSString v11 = sub_100534CA0();
  [v9 setValue:isa forKey:v11];

  id v12 = v9;
  NSString v13 = sub_100534CA0();
  swift_bridgeObjectRelease();
  NSString v14 = sub_100534CA0();
  [v12 setValue:v13 forKey:v14];

  id v15 = [v12 outputImage];
  if (!v15)
  {
    sub_10004A100(a1, a2);
LABEL_19:

    CFDataRef v21 = 0;
    goto LABEL_20;
  }
  uint64_t v16 = v15;
  id v17 = [objc_allocWithZone((Class)CIContext) init];
  [v16 extent];
  CGRect v18 = [v17 createCGImage:v16];

  if (!v18)
  {
    sub_10004A100(a1, a2);

    goto LABEL_19;
  }
  CGRect v19 = CGImageGetDataProvider(v18);
  CGRect v20 = v19;
  if (!v19)
  {
    sub_10004A100(a1, a2);

    CFDataRef v21 = 0;
    goto LABEL_20;
  }
  CFDataRef v21 = CGDataProviderCopyData(v19);

  if (!v21)
  {
    sub_10004A100(a1, a2);

    goto LABEL_20;
  }
  CFDataRef v56 = v21;
  BytePtr = CFDataGetBytePtr(v21);
  if (BytePtr)
  {
    double v23 = BytePtr;
    uint64_t v55 = a3;
    uint64_t v24 = (uint64_t)CGImageGetBitsPerPixel(v18) / 8;
    double v25 = Int.seconds.getter(7);
    double v26 = Int.seconds.getter(3);
    [v16 extent];
    double v27 = CGRectGetWidth(v59) + -2.0;
    if (qword_100664598 != -1) {
      swift_once();
    }
    double v28 = *(double *)&qword_10066E2F0;
    double v29 = v27 * *(double *)&qword_10066E2F0;
    [v16 extent];
    double v30 = v28 * (CGRectGetHeight(v60) + -2.0);
    id v57 = [objc_allocWithZone((Class)UIGraphicsPDFRenderer) initWithBounds:0.0, 0.0, v29, v30];
    uint64_t v31 = swift_allocObject();
    *(double *)(v31 + 16) = v25;
    *(void *)(v31 + 24) = 0;
    *(void *)(v31 + 32) = 0;
    *(double *)(v31 + 40) = v29;
    *(double *)(v31 + 48) = v30;
    *(double *)(v31 + 56) = v26;
    *(void *)(v31 + 64) = v16;
    *(void *)(v31 + 72) = v18;
    *(void *)(v31 + 80) = v24;
    *(void *)(v31 + 88) = v23;
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = sub_10034B458;
    *(void *)(v32 + 24) = v31;
    aBlock[4] = sub_1001FD1F4;
    aBlock[5] = v32;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001F83F8;
    aBlock[3] = &unk_10062C128;
    id v33 = _Block_copy(aBlock);
    swift_retain();
    v53 = v18;
    id v54 = v16;
    swift_release();
    id v34 = [v57 PDFDataWithActions:v33];
    _Block_release(v33);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
      goto LABEL_30;
    }
    uint64_t v36 = sub_10052F3D0();
    unint64_t v38 = v37;

    CFDataRef v39 = sub_10052F3C0().super.isa;
    double v40 = CGDataProviderCreateWithCFData(v39);

    uint64_t v41 = v55;
    if (v40)
    {
      id v42 = CGPDFDocumentCreateWithProvider(v40);
      if (v42)
      {
        double v43 = v42;
        CGFloat v52 = CGPDFDocumentGetPage(v42, 1uLL);
        if (v52)
        {
          unint64_t v51 = v38;
          id v44 = [self _imageWithCGPDFPage:v52];
          if (v44)
          {
            uint64_t v45 = (uint64_t)v44;
            id v50 = v44;
            [v54 extent];
            double Width = CGRectGetWidth(v61);

            sub_10004A100(v36, v51);
            double v47 = Width + -2.0;
            if ((~COERCE__INT64(Width + -2.0) & 0x7FF0000000000000) != 0)
            {
              if (v47 > -9.22337204e18)
              {
                if (v47 < 9.22337204e18)
                {
                  uint64_t v48 = (uint64_t)v47;
                  sub_10004A0A8(a1, a2);
                  id v49 = v50;
                  sub_10004A100(a1, a2);

                  sub_10004A100(a1, a2);
                  swift_release();

LABEL_21:
                  *a4 = v48;
                  a4[1] = a1;
                  a4[2] = a2;
                  a4[3] = v45;
                  a4[4] = v41;
                  return;
                }
                goto LABEL_32;
              }
LABEL_31:
              __break(1u);
LABEL_32:
              __break(1u);
              goto LABEL_33;
            }
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
          sub_10004A100(a1, a2);

          sub_10004A100(v36, v38);
        }
        else
        {
          sub_10004A100(a1, a2);

          sub_10004A100(v36, v38);
        }
      }
      else
      {
        sub_10004A100(a1, a2);

        sub_10004A100(v36, v38);
      }
    }
    else
    {
      sub_10004A100(a1, a2);

      sub_10004A100(v36, v38);
    }

    CFDataRef v21 = (const __CFData *)sub_10034B458;
LABEL_20:
    sub_10004A100(a1, a2);
    sub_100121638((uint64_t)v21);
    uint64_t v48 = 0;
    a1 = 0;
    a2 = 0;
    uint64_t v45 = 0;
    uint64_t v41 = 0;
    goto LABEL_21;
  }
LABEL_33:
  __break(1u);
}

uint64_t sub_10034B23C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000BB04(&qword_10066CD58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void destroy for QRCode(void *a1)
{
  sub_10004A100(a1[1], a1[2]);
  double v2 = (void *)a1[3];
}

void *initializeWithCopy for QRCode(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  unint64_t v5 = a2[2];
  sub_10004A0A8(v4, v5);
  a1[1] = v4;
  a1[2] = v5;
  uint64_t v6 = (void *)a2[3];
  uint64_t v7 = a2[4];
  a1[3] = v6;
  a1[4] = v7;
  id v8 = v6;
  return a1;
}

void *assignWithCopy for QRCode(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_10004A0A8(v4, v5);
  uint64_t v6 = a1[1];
  unint64_t v7 = a1[2];
  a1[1] = v4;
  a1[2] = v5;
  sub_10004A100(v6, v7);
  id v8 = (void *)a2[3];
  id v9 = (void *)a1[3];
  a1[3] = v8;
  id v10 = v8;

  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for QRCode(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  sub_10004A100(v5, v6);
  unint64_t v7 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for QRCode()
{
  return &type metadata for QRCode;
}

uint64_t sub_10034B418()
{
  return swift_deallocObject();
}

void sub_10034B458(void *a1)
{
  sub_10034A1CC(a1, *(void **)(v1 + 64), *(CGImage **)(v1 + 72), *(void *)(v1 + 80), *(CGContext **)(v1 + 88), *(double *)(v1 + 16), *(CGFloat *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40), *(CGFloat *)(v1 + 48), *(double *)(v1 + 56));
}

uint64_t sub_10034B470()
{
  return swift_deallocObject();
}

uint64_t sub_10034B480(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10034B490()
{
  return swift_release();
}

uint64_t OSSignposter.sharePlay.unsafeMutableAddressor()
{
  return sub_10034B698(&qword_1006645A8, (uint64_t)static OSSignposter.sharePlay);
}

uint64_t *OS_os_log.sharePlay.unsafeMutableAddressor()
{
  if (qword_1006645B0 != -1) {
    swift_once();
  }
  return &static OS_os_log.sharePlay;
}

uint64_t static OSSignposter.music(_:)()
{
  swift_bridgeObjectRetain();

  return sub_100530890();
}

uint64_t static OSSignposter.music(_:)(void *a1)
{
  uint64_t v2 = sub_100530920();
  __chkstk_darwin(v2 - 8);
  id v3 = a1;
  sub_100530930();
  return sub_100530870();
}

uint64_t sub_10034B600()
{
  uint64_t v0 = sub_1005308A0();
  sub_10000ED18(v0, static OSSignposter.launch);
  sub_10000EA90(v0, (uint64_t)static OSSignposter.launch);
  return sub_100530890();
}

uint64_t OSSignposter.launch.unsafeMutableAddressor()
{
  return sub_10034B698(&qword_1006645A0, (uint64_t)static OSSignposter.launch);
}

uint64_t sub_10034B698(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1005308A0();

  return sub_10000EA90(v3, a2);
}

uint64_t static OSSignposter.launch.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10034B81C(&qword_1006645A0, (uint64_t)static OSSignposter.launch, a1);
}

uint64_t sub_10034B710()
{
  uint64_t v0 = sub_100530920();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1005308A0();
  sub_10000ED18(v1, static OSSignposter.sharePlay);
  sub_10000EA90(v1, (uint64_t)static OSSignposter.sharePlay);
  if (qword_1006645B0 != -1) {
    swift_once();
  }
  id v2 = (id)static OS_os_log.sharePlay;
  sub_100530930();
  return sub_100530870();
}

uint64_t static OSSignposter.sharePlay.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10034B81C(&qword_1006645A8, (uint64_t)static OSSignposter.sharePlay, a1);
}

uint64_t sub_10034B81C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1005308A0();
  uint64_t v6 = sub_10000EA90(v5, a2);
  unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_10034B8B4()
{
  sub_10020324C();
  uint64_t result = sub_100535F10();
  static OS_os_log.sharePlay = result;
  return result;
}

id static OS_os_log.sharePlay.getter()
{
  if (qword_1006645B0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static OS_os_log.sharePlay;

  return v0;
}

uint64_t sub_10034B978()
{
  sub_1003505C0(v0, (uint64_t)v7);
  if (v8 == 1)
  {
    uint64_t v1 = *(void **)&v7[0];
    switch(MPModelObject.mediaKitPlayableKind.getter())
    {
      case 1u:

        uint64_t v2 = 0x6F736970652D7674;
        break;
      case 2u:

        uint64_t v2 = 0x73776F68732D7674;
        break;
      case 3u:
      case 4u:
        uint64_t v2 = 0x646564616F6C7075;

        break;
      case 5u:

        uint64_t v2 = 0x736E6F6974617473;
        break;
      case 6u:

        uint64_t v2 = 0x69762D636973756DLL;
        break;
      case 7u:

        uint64_t v2 = 0x6F6D2D636973756DLL;
        break;
      case 8u:

        uint64_t v2 = 0x7473696C79616C70;
        break;
      case 9u:

        uint64_t v2 = 0x736D75626C61;
        break;
      case 0xAu:

        uint64_t v2 = 0x3F74616877;
        break;
      default:

        uint64_t v2 = 0x73676E6F73;
        break;
    }
  }
  else
  {
    sub_1000ECF64(v7, (uint64_t)v5);
    uint64_t v3 = v6;
    sub_10000ECD4(v5, v6);
    uint64_t v2 = sub_10034BBB8(v3);
    sub_100013D48((uint64_t)v5);
  }
  return v2;
}

uint64_t sub_10034BBB8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005346E0();
  uint64_t v104 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v105 = (char *)&v97 - v8;
  uint64_t v110 = sub_100534150();
  uint64_t v107 = *(void *)(v110 - 8);
  uint64_t v9 = __chkstk_darwin(v110);
  v106 = (char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v108 = (char *)&v97 - v11;
  uint64_t v114 = sub_10052FFA0();
  uint64_t v109 = *(void *)(v114 - 8);
  uint64_t v12 = __chkstk_darwin(v114);
  v113 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v112 = (char *)&v97 - v14;
  uint64_t v117 = sub_100530480();
  uint64_t v111 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  v116 = (char *)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_100530430();
  uint64_t v115 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  v119 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_100530500();
  uint64_t v118 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  v122 = (char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_1005305C0();
  uint64_t v121 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  v125 = (char *)&v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_1005343B0();
  uint64_t v124 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  v128 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_100533F70();
  uint64_t v127 = *(void *)(v132 - 8);
  __chkstk_darwin(v132);
  v131 = (char *)&v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_100534720();
  uint64_t v130 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  v134 = (char *)&v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_1005339C0();
  uint64_t v133 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  v137 = (char *)&v97 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_1005302D0();
  uint64_t v136 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  v140 = (char *)&v97 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_100534080();
  uint64_t v139 = *(void *)(v142 - 8);
  uint64_t v24 = __chkstk_darwin(v142);
  double v26 = (char *)&v97 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = *(void *)(a1 - 8);
  uint64_t v27 = __chkstk_darwin(v24);
  v102 = (char *)&v97 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v97 - v30;
  uint64_t v32 = __chkstk_darwin(v29);
  id v34 = (char *)&v97 - v33;
  __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v97 - v35;
  if (qword_1006645B8 != -1) {
    swift_once();
  }
  v103 = v7;
  uint64_t v37 = sub_100530920();
  uint64_t v38 = sub_10000EA90(v37, (uint64_t)static Logger.capabilityUpsell);
  CFDataRef v39 = *(void (**)(char *, uint64_t, uint64_t))(v144 + 16);
  uint64_t v143 = v2;
  v39(v36, v2, a1);
  uint64_t v101 = v38;
  double v40 = sub_100530900();
  os_log_type_t v41 = sub_1005357B0();
  BOOL v42 = os_log_type_enabled(v40, v41);
  v99 = v34;
  if (v42)
  {
    uint64_t v43 = swift_slowAlloc();
    uint64_t v98 = v4;
    uint64_t v44 = a1;
    uint64_t v45 = v43;
    uint64_t v46 = swift_slowAlloc();
    v100 = v31;
    uint64_t v145 = v46;
    *(_DWORD *)uint64_t v45 = 136315138;
    v39(v34, (uint64_t)v36, v44);
    uint64_t v47 = sub_100534D70();
    *(void *)(v45 + 4) = sub_1000F4A7C(v47, v48, &v145);
    swift_bridgeObjectRelease();
    id v49 = *(void (**)(char *, uint64_t))(v144 + 8);
    v49(v36, v44);
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "MusicItem - mediaKind =%s", (uint8_t *)v45, 0xCu);
    swift_arrayDestroy();
    uint64_t v31 = v100;
    swift_slowDealloc();
    a1 = v44;
    uint64_t v4 = v98;
    swift_slowDealloc();
  }
  else
  {
    id v49 = *(void (**)(char *, uint64_t))(v144 + 8);
    v49(v36, a1);
  }

  uint64_t v50 = v143;
  v39(v31, v143, a1);
  uint64_t v51 = v142;
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v139 + 8))(v26, v51);
    uint64_t v52 = 0x736D75626C61;
    goto LABEL_46;
  }
  id v54 = v140;
  uint64_t v53 = v141;
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v136 + 8))(v54, v53);
    uint64_t v52 = 0x6F6D2D636973756DLL;
    goto LABEL_46;
  }
  CFDataRef v56 = v137;
  uint64_t v55 = v138;
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v133 + 8))(v56, v55);
    uint64_t v52 = 0x69762D636973756DLL;
    goto LABEL_46;
  }
  int64_t v58 = v134;
  uint64_t v57 = v135;
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v130 + 8))(v58, v57);
    uint64_t v52 = 0x7473696C79616C70;
    goto LABEL_46;
  }
  CGRect v60 = v131;
  uint64_t v59 = v132;
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v127 + 8))(v60, v59);
    uint64_t v52 = 0x73676E6F73;
    goto LABEL_46;
  }
  CGRect v61 = v128;
  uint64_t v62 = v129;
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v61, v62);
    uint64_t v52 = 0x736E6F6974617473;
    goto LABEL_46;
  }
  v63 = v125;
  uint64_t v64 = v126;
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v121 + 8))(v63, v64);
    uint64_t v52 = 0x6F736970652D7674;
    goto LABEL_46;
  }
  v65 = v122;
  uint64_t v66 = v123;
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v65, v66);
    uint64_t v52 = 0x73776F68732D7674;
    goto LABEL_46;
  }
  v67 = v119;
  uint64_t v68 = v120;
  if (swift_dynamicCast())
  {
    uint64_t v52 = 0x646564616F6C7075;
    (*(void (**)(char *, uint64_t))(v115 + 8))(v67, v68);
    goto LABEL_46;
  }
  CGRect v69 = v116;
  uint64_t v70 = v117;
  if (swift_dynamicCast())
  {
    uint64_t v52 = 0x646564616F6C7075;
    (*(void (**)(char *, uint64_t))(v111 + 8))(v69, v70);
    goto LABEL_46;
  }
  CGRect v71 = v112;
  uint64_t v72 = v114;
  if (!swift_dynamicCast())
  {
    CGRect v77 = v108;
    uint64_t v78 = v110;
    if (swift_dynamicCast())
    {
      CGRect v79 = v77;
      uint64_t v80 = v107;
      CGRect v81 = v106;
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v106, v79, v78);
      Track.musicItem.getter((uint64_t)&v145);
      uint64_t v82 = v146;
      if (v146)
      {
        uint64_t v83 = v147;
        sub_10000ECD4(&v145, v146);
        uint64_t v52 = sub_10034BBB8(v82, v83);
        (*(void (**)(char *, uint64_t))(v80 + 8))(v81, v78);
LABEL_35:
        sub_100013D48((uint64_t)&v145);
        goto LABEL_46;
      }
      (*(void (**)(char *, uint64_t))(v80 + 8))(v81, v78);
    }
    else
    {
      CGRect v84 = v105;
      if (!swift_dynamicCast())
      {
        v89 = v102;
        v39(v102, v50, a1);
        v90 = sub_100530900();
        os_log_type_t v91 = sub_1005357D0();
        if (os_log_type_enabled(v90, v91))
        {
          uint64_t v92 = swift_slowAlloc();
          uint64_t v93 = swift_slowAlloc();
          v100 = v31;
          uint64_t v145 = v93;
          *(_DWORD *)uint64_t v92 = 136315138;
          v39(v99, (uint64_t)v89, a1);
          uint64_t v94 = sub_100534D70();
          *(void *)(v92 + 4) = sub_1000F4A7C(v94, v95, &v145);
          swift_bridgeObjectRelease();
          v49(v89, a1);
          _os_log_impl((void *)&_mh_execute_header, v90, v91, "Unsupported MusicItem kind=%s", (uint8_t *)v92, 0xCu);
          swift_arrayDestroy();
          uint64_t v31 = v100;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          v49(v89, a1);
        }

        goto LABEL_45;
      }
      uint64_t v85 = v104;
      v86 = v103;
      (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v103, v84, v4);
      sub_10034E1FC((uint64_t)&v145);
      uint64_t v87 = v146;
      if (v146)
      {
        uint64_t v88 = v147;
        sub_10000ECD4(&v145, v146);
        uint64_t v52 = sub_10034BBB8(v87, v88);
        (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v4);
        goto LABEL_35;
      }
      (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v4);
    }
    sub_100013C44((uint64_t)&v145, &qword_10066AA80);
LABEL_45:
    uint64_t v52 = 0;
    goto LABEL_46;
  }
  CGRect v73 = v71;
  uint64_t v74 = v109;
  (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v113, v73, v72);
  sub_10034E81C((uint64_t)&v145);
  uint64_t v75 = v146;
  if (v146)
  {
    uint64_t v76 = v147;
    sub_10000ECD4(&v145, v146);
    uint64_t v52 = sub_10034BBB8(v75, v76);
    sub_100013D48((uint64_t)&v145);
  }
  else
  {
    sub_100013C44((uint64_t)&v145, &qword_10066AA80);
    uint64_t v52 = 0;
  }
  (*(void (**)(char *, uint64_t))(v74 + 8))(v113, v72);
LABEL_46:
  v49(v31, a1);
  return v52;
}

uint64_t sub_10034CDB4(uint64_t a1)
{
  uint64_t v121 = sub_1005346E0();
  uint64_t v117 = *(void *)(v121 - 8);
  uint64_t v2 = __chkstk_darwin(v121);
  v116 = (char *)&v112 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v118 = (char *)&v112 - v4;
  uint64_t v125 = sub_100534150();
  uint64_t v120 = *(void *)(v125 - 8);
  uint64_t v5 = __chkstk_darwin(v125);
  v119 = (char *)&v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v122 = (char *)&v112 - v7;
  uint64_t v129 = sub_10052FFA0();
  uint64_t v124 = *(void *)(v129 - 8);
  uint64_t v8 = __chkstk_darwin(v129);
  uint64_t v123 = (char *)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v128 = (char *)&v112 - v10;
  uint64_t v133 = sub_100530480();
  uint64_t v127 = *(void *)(v133 - 8);
  uint64_t v11 = __chkstk_darwin(v133);
  uint64_t v126 = (char *)&v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v132 = (char *)&v112 - v13;
  uint64_t v137 = sub_100530430();
  uint64_t v131 = *(void *)(v137 - 8);
  uint64_t v14 = __chkstk_darwin(v137);
  uint64_t v130 = (char *)&v112 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v136 = (char *)&v112 - v16;
  uint64_t v141 = sub_100530500();
  uint64_t v135 = *(void *)(v141 - 8);
  uint64_t v17 = __chkstk_darwin(v141);
  v134 = (char *)&v112 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v140 = (char *)&v112 - v19;
  uint64_t v145 = sub_1005305C0();
  uint64_t v139 = *(void *)(v145 - 8);
  uint64_t v20 = __chkstk_darwin(v145);
  uint64_t v138 = (char *)&v112 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v144 = (char *)&v112 - v22;
  uint64_t v149 = sub_1005343B0();
  uint64_t v143 = *(void *)(v149 - 8);
  uint64_t v23 = __chkstk_darwin(v149);
  uint64_t v142 = (char *)&v112 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v148 = (char *)&v112 - v25;
  uint64_t v153 = sub_100533F70();
  uint64_t v147 = *(void *)(v153 - 8);
  uint64_t v26 = __chkstk_darwin(v153);
  uint64_t v146 = (char *)&v112 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v152 = (char *)&v112 - v28;
  uint64_t v157 = sub_100534720();
  uint64_t v151 = *(void *)(v157 - 8);
  uint64_t v29 = __chkstk_darwin(v157);
  v150 = (char *)&v112 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v156 = (char *)&v112 - v31;
  uint64_t v159 = sub_1005339C0();
  uint64_t v155 = *(void *)(v159 - 8);
  uint64_t v32 = __chkstk_darwin(v159);
  v154 = (char *)&v112 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v112 - v34;
  uint64_t v36 = sub_1005302D0();
  uint64_t v158 = *(void *)(v36 - 8);
  uint64_t v37 = __chkstk_darwin(v36);
  CFDataRef v39 = (char *)&v112 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  os_log_type_t v41 = (char *)&v112 - v40;
  uint64_t v42 = sub_100534080();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v46 = (char *)&v112 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __chkstk_darwin(v44);
  id v49 = (char *)&v112 - v48;
  uint64_t v50 = *(void *)(a1 - 8);
  uint64_t v51 = __chkstk_darwin(v47);
  v112 = (char *)&v112 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v115 = (char *)&v112 - v54;
  __chkstk_darwin(v53);
  CFDataRef v56 = (char *)&v112 - v55;
  uint64_t v160 = v50;
  uint64_t v57 = v50 + 16;
  int64_t v58 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
  uint64_t v60 = v59;
  uint64_t v114 = v57;
  v113 = v58;
  ((void (*)(char *, char *))v58)((char *)&v112 - v55, v161);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v46, v49, v42);
    uint64_t v61 = sub_100533FD0();
    uint64_t v63 = v62;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v46, v42);
    if (!v63) {
      uint64_t v61 = 0;
    }
    uint64_t v64 = v60;
    goto LABEL_28;
  }
  uint64_t v64 = v60;
  if (swift_dynamicCast())
  {
    uint64_t v65 = v158;
    (*(void (**)(char *, char *, uint64_t))(v158 + 32))(v39, v41, v36);
    uint64_t v61 = sub_1005302C0();
    uint64_t v67 = v66;
    (*(void (**)(char *, uint64_t))(v65 + 8))(v39, v36);
    goto LABEL_26;
  }
  uint64_t v68 = v159;
  if (swift_dynamicCast())
  {
    uint64_t v70 = v154;
    uint64_t v69 = v155;
    (*(void (**)(char *, char *, uint64_t))(v155 + 32))(v154, v35, v68);
    uint64_t v71 = sub_100533950();
    uint64_t v73 = v72;
    (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v68);
    if (v73) {
      uint64_t v61 = v71;
    }
    else {
      uint64_t v61 = 0;
    }
    goto LABEL_28;
  }
  uint64_t v74 = v156;
  uint64_t v75 = v157;
  if (swift_dynamicCast())
  {
    CGRect v77 = v150;
    uint64_t v76 = v151;
    (*(void (**)(char *, char *, uint64_t))(v151 + 32))(v150, v74, v75);
    uint64_t v78 = sub_1005345D0();
LABEL_25:
    uint64_t v61 = v78;
    uint64_t v67 = v79;
    (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v75);
LABEL_26:
    if (!v67) {
      uint64_t v61 = 0;
    }
    goto LABEL_28;
  }
  uint64_t v80 = v152;
  uint64_t v75 = v153;
  if (swift_dynamicCast())
  {
    CGRect v77 = v146;
    uint64_t v76 = v147;
    (*(void (**)(char *, char *, uint64_t))(v147 + 32))(v146, v80, v75);
    uint64_t v78 = sub_100533EC0();
    goto LABEL_25;
  }
  CGRect v81 = v148;
  uint64_t v82 = v149;
  if (swift_dynamicCast())
  {
    uint64_t v83 = v143;
    CGRect v84 = v142;
    (*(void (**)(char *, char *, uint64_t))(v143 + 32))(v142, v81, v82);
    uint64_t v61 = _s8MusicKit7StationV0A4CoreE9catalogIDAA0a4ItemF0VSgvg_0();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v84, v82);
LABEL_28:
    uint64_t v89 = v160;
    goto LABEL_29;
  }
  uint64_t v85 = v144;
  uint64_t v75 = v145;
  if (swift_dynamicCast())
  {
    uint64_t v76 = v139;
    CGRect v77 = v138;
    (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v138, v85, v75);
    uint64_t v78 = sub_1005305B0();
    goto LABEL_25;
  }
  v86 = v140;
  uint64_t v75 = v141;
  if (swift_dynamicCast())
  {
    uint64_t v76 = v135;
    CGRect v77 = v134;
    (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v134, v86, v75);
    uint64_t v78 = sub_1005304F0();
    goto LABEL_25;
  }
  uint64_t v87 = v136;
  uint64_t v75 = v137;
  if (swift_dynamicCast())
  {
    uint64_t v76 = v131;
    CGRect v77 = v130;
    (*(void (**)(char *, char *, uint64_t))(v131 + 32))(v130, v87, v75);
    uint64_t v78 = sub_100530420();
    goto LABEL_25;
  }
  uint64_t v88 = v132;
  uint64_t v75 = v133;
  if (swift_dynamicCast())
  {
    uint64_t v76 = v127;
    CGRect v77 = v126;
    (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v126, v88, v75);
    uint64_t v78 = sub_100530470();
    goto LABEL_25;
  }
  os_log_type_t v91 = v128;
  uint64_t v92 = v129;
  if (swift_dynamicCast())
  {
    uint64_t v93 = v56;
    uint64_t v94 = v124;
    unint64_t v95 = v123;
    (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v123, v91, v92);
    sub_10034E81C((uint64_t)&v162);
    uint64_t v61 = v163;
    if (v163)
    {
      uint64_t v96 = v164;
      sub_10000ECD4(&v162, v163);
      uint64_t v61 = sub_10034CDB4(v61, v96);
      sub_100013D48((uint64_t)&v162);
    }
    else
    {
      sub_100013C44((uint64_t)&v162, &qword_10066AA80);
    }
    uint64_t v89 = v160;
    (*(void (**)(char *, uint64_t))(v94 + 8))(v95, v92);
    CFDataRef v56 = v93;
    goto LABEL_29;
  }
  uint64_t v97 = v122;
  uint64_t v98 = v125;
  if (swift_dynamicCast())
  {
    uint64_t v99 = v120;
    v100 = v119;
    (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v119, v97, v98);
    Track.musicItem.getter((uint64_t)&v162);
    goto LABEL_37;
  }
  uint64_t v101 = v118;
  uint64_t v98 = v121;
  if (swift_dynamicCast())
  {
    uint64_t v99 = v117;
    v100 = v116;
    (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v116, v101, v98);
    sub_10034E1FC((uint64_t)&v162);
LABEL_37:
    uint64_t v61 = v163;
    if (v163)
    {
      uint64_t v102 = v164;
      sub_10000ECD4(&v162, v163);
      uint64_t v61 = sub_10034CDB4(v61, v102);
      (*(void (**)(char *, uint64_t))(v99 + 8))(v100, v98);
      sub_100013D48((uint64_t)&v162);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v99 + 8))(v100, v98);
      sub_100013C44((uint64_t)&v162, &qword_10066AA80);
    }
    goto LABEL_28;
  }
  if (qword_1006645B8 != -1) {
    swift_once();
  }
  uint64_t v103 = sub_100530920();
  sub_10000EA90(v103, (uint64_t)static Logger.capabilityUpsell);
  uint64_t v104 = v115;
  uint64_t v105 = v60;
  v106 = v113;
  v113(v115, v161, v105);
  uint64_t v107 = sub_100530900();
  os_log_type_t v108 = sub_1005357D0();
  if (os_log_type_enabled(v107, v108))
  {
    uint64_t v109 = swift_slowAlloc();
    uint64_t v162 = swift_slowAlloc();
    *(_DWORD *)uint64_t v109 = 136315138;
    v106(v112, v104, v64);
    uint64_t v110 = sub_100534D70();
    *(void *)(v109 + 4) = sub_1000F4A7C(v110, v111, &v162);
    swift_bridgeObjectRelease();
    uint64_t v89 = v160;
    (*(void (**)(char *, uint64_t))(v160 + 8))(v104, v64);
    _os_log_impl((void *)&_mh_execute_header, v107, v108, "Unsupported MusicItem catalogID=%s", (uint8_t *)v109, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v89 = v160;
    (*(void (**)(char *, uint64_t))(v160 + 8))(v104, v64);
  }

  uint64_t v61 = 0;
LABEL_29:
  (*(void (**)(char *, uint64_t))(v89 + 8))(v56, v64);
  return v61;
}

uint64_t Logger.capabilityUpsell.unsafeMutableAddressor()
{
  if (qword_1006645B8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100530920();

  return sub_10000EA90(v0, (uint64_t)static Logger.capabilityUpsell);
}

uint64_t sub_10034E030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  sub_1005352C0();
  *(void *)(v4 + 24) = sub_1005352B0();
  uint64_t v6 = sub_100535240();
  return _swift_task_switch(sub_10034E0C8, v6, v5);
}

uint64_t sub_10034E0C8()
{
  swift_release();
  id v1 = [self sharedApplication];
  sub_10052F2B0(v2);
  uint64_t v4 = v3;
  sub_10019FAA8((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_100350628((unint64_t *)&qword_10066DDE0, type metadata accessor for OpenExternalURLOptionsKey);
  Class isa = sub_100534A90().super.isa;
  swift_bridgeObjectRelease();
  [v1 openURL:v4 options:isa completionHandler:0];

  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_10034E1FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1005346E0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100534680();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v32 - v12;
  sub_100534690();
  int v14 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v13, v7);
  if (v14 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v13, v7);
    uint64_t v15 = sub_1005302D0();
    *(void *)(a1 + 24) = v15;
    uint64_t v16 = (unint64_t *)&unk_1006662A0;
    uint64_t v17 = &type metadata accessor for MusicMovie;
LABEL_3:
    *(void *)(a1 + 32) = sub_100350628(v16, (void (*)(uint64_t))v17);
LABEL_9:
    uint64_t v20 = sub_1000FF040((uint64_t *)a1);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v20, v13, v15);
  }
  if (v14 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v13, v7);
    uint64_t v18 = sub_1005339C0();
    uint64_t v15 = v18;
    uint64_t v19 = &protocol witness table for MusicVideo;
LABEL_8:
    *(void *)(a1 + 24) = v18;
    *(void *)(a1 + 32) = v19;
    goto LABEL_9;
  }
  if (v14 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v13, v7);
    uint64_t v18 = sub_100533F70();
    uint64_t v15 = v18;
    uint64_t v19 = &protocol witness table for Song;
    goto LABEL_8;
  }
  if (v14 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v13, v7);
    uint64_t v15 = sub_1005305C0();
    *(void *)(a1 + 24) = v15;
    uint64_t v16 = (unint64_t *)&unk_1006662A8;
    uint64_t v17 = &type metadata accessor for TVEpisode;
    goto LABEL_3;
  }
  if (v14 == enum case for Playlist.Entry.InternalItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v13, v7);
    uint64_t v15 = sub_100530430();
    *(void *)(a1 + 24) = v15;
    uint64_t v16 = (unint64_t *)&unk_100666C70;
    uint64_t v17 = &type metadata accessor for UploadedAudio;
    goto LABEL_3;
  }
  if (v14 == enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v13, v7);
    uint64_t v15 = sub_100530480();
    *(void *)(a1 + 24) = v15;
    uint64_t v16 = (unint64_t *)&unk_1006662C0;
    uint64_t v17 = &type metadata accessor for UploadedVideo;
    goto LABEL_3;
  }
  if (qword_1006645B8 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_100530920();
  sub_10000EA90(v22, (uint64_t)static Logger.capabilityUpsell);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1, v3);
  uint64_t v23 = sub_100530900();
  os_log_type_t v24 = sub_1005357D0();
  int v38 = v24;
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (_DWORD *)swift_slowAlloc();
    uint64_t v34 = v25;
    uint64_t v37 = swift_slowAlloc();
    uint64_t v39 = v37;
    _DWORD *v25 = 136315138;
    os_log_t v35 = v23;
    sub_100534690();
    sub_100350628(&qword_1006650F0, (void (*)(uint64_t))&type metadata accessor for Playlist.Entry.InternalItem);
    uint64_t v33 = sub_100536700();
    unint64_t v27 = v26;
    uint64_t v28 = *(void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v36 = (v8 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v28(v11, v7);
    unint64_t v29 = sub_1000F4A7C(v33, v27, &v39);
    uint64_t v30 = (uint8_t *)v34;
    *(void *)(v34 + 1) = v29;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    os_log_t v31 = v35;
    _os_log_impl((void *)&_mh_execute_header, v35, (os_log_type_t)v38, "Unknown Entry internalItem=%s", v30, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);

    uint64_t v28 = *(void (**)(char *, uint64_t))(v8 + 8);
  }
  *(void *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return ((uint64_t (*)(char *, uint64_t))v28)(v13, v7);
}

uint64_t sub_10034E81C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10052FFA0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v26 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v26 - v8, v1, v3);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v9, v3);
  if (v11 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    uint64_t v12 = sub_100534080();
    uint64_t v13 = v12;
    int v14 = &protocol witness table for Album;
LABEL_14:
    *(void *)(a1 + 24) = v12;
    *(void *)(a1 + 32) = v14;
    goto LABEL_15;
  }
  if (v11 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    uint64_t v13 = sub_1005302D0();
    *(void *)(a1 + 24) = v13;
    uint64_t v15 = (unint64_t *)&unk_1006662A0;
    uint64_t v16 = &type metadata accessor for MusicMovie;
LABEL_5:
    *(void *)(a1 + 32) = sub_100350628(v15, (void (*)(uint64_t))v16);
LABEL_15:
    uint64_t v17 = sub_1000FF040((uint64_t *)a1);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v17, v9, v13);
  }
  if (v11 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    uint64_t v12 = sub_1005339C0();
    uint64_t v13 = v12;
    int v14 = &protocol witness table for MusicVideo;
    goto LABEL_14;
  }
  if (v11 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    uint64_t v12 = sub_100534720();
    uint64_t v13 = v12;
    int v14 = &protocol witness table for Playlist;
    goto LABEL_14;
  }
  if (v11 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    uint64_t v12 = sub_100533F70();
    uint64_t v13 = v12;
    int v14 = &protocol witness table for Song;
    goto LABEL_14;
  }
  if (v11 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    uint64_t v12 = sub_1005343B0();
    uint64_t v13 = v12;
    int v14 = &protocol witness table for Station;
    goto LABEL_14;
  }
  if (v11 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    uint64_t v13 = sub_1005305C0();
    *(void *)(a1 + 24) = v13;
    uint64_t v15 = (unint64_t *)&unk_1006662A8;
    uint64_t v16 = &type metadata accessor for TVEpisode;
    goto LABEL_5;
  }
  if (v11 == enum case for GenericMusicItem.tvShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    uint64_t v13 = sub_100530500();
    *(void *)(a1 + 24) = v13;
    uint64_t v15 = (unint64_t *)&unk_1006662B8;
    uint64_t v16 = &type metadata accessor for TVShow;
    goto LABEL_5;
  }
  if (v11 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    uint64_t v13 = sub_100530430();
    *(void *)(a1 + 24) = v13;
    uint64_t v15 = (unint64_t *)&unk_100666C70;
    uint64_t v16 = &type metadata accessor for UploadedAudio;
    goto LABEL_5;
  }
  if (v11 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    uint64_t v13 = sub_100530480();
    *(void *)(a1 + 24) = v13;
    uint64_t v15 = (unint64_t *)&unk_1006662C0;
    uint64_t v16 = &type metadata accessor for UploadedVideo;
    goto LABEL_5;
  }
  if (qword_1006645B8 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_100530920();
  sub_10000EA90(v19, (uint64_t)static Logger.capabilityUpsell);
  v10(v7, v1, v3);
  uint64_t v20 = sub_100530900();
  os_log_type_t v21 = sub_1005357D0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v27 = v26;
    *(_DWORD *)uint64_t v22 = 136315138;
    sub_100350628(&qword_100665F40, (void (*)(uint64_t))&type metadata accessor for GenericMusicItem);
    uint64_t v23 = sub_100536700();
    *(void *)(v22 + 4) = sub_1000F4A7C(v23, v24, &v27);
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void (**)(char *, uint64_t))(v4 + 8);
    v25(v7, v3);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Unsupported GenericMusicItem kind=%s", (uint8_t *)v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v25 = *(void (**)(char *, uint64_t))(v4 + 8);
    v25(v7, v3);
  }

  *(void *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return ((uint64_t (*)(char *, uint64_t))v25)(v9, v3);
}

uint64_t sub_10034EEBC()
{
  uint64_t v0 = sub_100530920();
  sub_10000ED18(v0, static Logger.capabilityUpsell);
  sub_10000EA90(v0, (uint64_t)static Logger.capabilityUpsell);
  return sub_100530910();
}

uint64_t static Logger.capabilityUpsell.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1006645B8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100530920();
  uint64_t v3 = sub_10000EA90(v2, (uint64_t)static Logger.capabilityUpsell);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

void _s9MusicCore27SubscriptionUpsellPresenterV7present3foryAC9PlacementO_tFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_10000BB04(&qword_100668010);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10052EF60();
  uint64_t v84 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v76 - v9;
  uint64_t v11 = sub_10000BB04(&qword_100664BB0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10052F360();
  uint64_t v86 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v86 + 64);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v82 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v85 = (char *)&v76 - v17;
  if (qword_100663D60 != -1) {
    swift_once();
  }
  sub_10000BB04(&qword_100668600);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_1000E48B0);
  uint64_t v18 = *(void **)&v92[0];
  if (!*(void *)&v92[0]) {
    goto LABEL_8;
  }
  uint64_t v83 = v14;
  CGRect v81 = v4;
  sub_100534CE0();
  NSString v19 = sub_100534CA0();
  swift_bridgeObjectRelease();
  id v20 = [v18 stringForBagKey:v19];

  if (!v20)
  {

    goto LABEL_8;
  }
  uint64_t v21 = sub_100534CE0();
  uint64_t v23 = v22;

  *(void *)&v92[0] = 0x2F2F3A636973756DLL;
  *((void *)&v92[0] + 1) = 0xE800000000000000;
  v94._countAndFlagsBits = v21;
  v94._object = v23;
  sub_100534E80(v94);
  swift_bridgeObjectRelease();
  sub_10052F330();
  swift_bridgeObjectRelease();
  uint64_t v24 = v86;
  uint64_t v25 = v83;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v13, 1, v83) == 1)
  {

    sub_100013C44((uint64_t)v13, &qword_100664BB0);
LABEL_8:
    if (qword_1006645B8 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_100530920();
    sub_10000EA90(v26, (uint64_t)static Logger.capabilityUpsell);
    uint64_t v27 = sub_100530900();
    os_log_type_t v28 = sub_1005357C0();
    if (os_log_type_enabled(v27, v28))
    {
      unint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Could not build marketingURL", v29, 2u);
      swift_slowDealloc();
    }

    return;
  }
  uint64_t v30 = *(void (**)(unint64_t, char *, uint64_t))(v24 + 32);
  uint64_t v78 = v24 + 32;
  CGRect v77 = v30;
  v30((unint64_t)v85, v13, v25);
  sub_10000BB04(&qword_100665EF0);
  unint64_t v31 = (*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
  uint64_t v80 = *(void *)(v84 + 72);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_10053A3A0;
  uint64_t v79 = (char *)v32;
  unint64_t v76 = v31;
  sub_10052EF30();
  sub_1003503D0(a1, (uint64_t)v92);
  if (v93 == 253)
  {
    uint64_t v33 = v85;
  }
  else
  {
    uint64_t v33 = v85;
    if (v93 != 255 && v93 != 254) {
      sub_1000EE7A4((uint64_t)v92);
    }
  }
  uint64_t v34 = v80;
  sub_10052EF30();
  swift_bridgeObjectRelease();
  sub_1003503D0(a1, (uint64_t)v90);
  if (v91 < 0xFDu)
  {
    sub_1002DECA4(v90, v92);
    sub_10034B978();
    os_log_t v35 = v79;
    if (v36)
    {
      sub_10052EF30();
      swift_bridgeObjectRelease();
      unint64_t v38 = *((void *)v35 + 2);
      unint64_t v37 = *((void *)v35 + 3);
      if (v38 >= v37 >> 1) {
        os_log_t v35 = (char *)sub_100125CD0(v37 > 1, v38 + 1, 1, v35);
      }
      *((void *)v35 + 2) = v38 + 1;
      (*(void (**)(char *, char *, uint64_t))(v84 + 32))(&v35[v76 + v38 * v34], v10, v5);
    }
    else
    {
      if (qword_1006645B8 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_100530920();
      sub_10000EA90(v39, (uint64_t)static Logger.capabilityUpsell);
      sub_1003505C0((uint64_t)v92, (uint64_t)v90);
      uint64_t v40 = sub_100530900();
      os_log_type_t v41 = sub_1005357D0();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = swift_slowAlloc();
        uint64_t v89 = swift_slowAlloc();
        *(_DWORD *)uint64_t v42 = 136315138;
        sub_1003505C0((uint64_t)v90, (uint64_t)v87);
        uint64_t v43 = sub_100534D70();
        *(void *)(v42 + 4) = sub_1000F4A7C(v43, v44, &v89);
        swift_bridgeObjectRelease();
        sub_1003505F8((uint64_t)v90);
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "Missing kind for item=%s", (uint8_t *)v42, 0xCu);
        swift_arrayDestroy();
        os_log_t v35 = v79;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_1003505F8((uint64_t)v90);
      }

      uint64_t v34 = v80;
    }
    sub_1003505C0((uint64_t)v92, (uint64_t)v90);
    if (v91 == 1)
    {
      uint64_t v45 = *(void **)&v90[0];
      MPModelObject.bestIdentifier(for:)(2, 1u);
      uint64_t v47 = v46;

      if (v47)
      {
LABEL_34:
        sub_10052EF30();
        swift_bridgeObjectRelease();
        unint64_t v49 = *((void *)v35 + 2);
        unint64_t v48 = *((void *)v35 + 3);
        if (v49 >= v48 >> 1) {
          os_log_t v35 = (char *)sub_100125CD0(v48 > 1, v49 + 1, 1, v35);
        }
        uint64_t v33 = v85;
        *((void *)v35 + 2) = v49 + 1;
        (*(void (**)(char *, char *, uint64_t))(v84 + 32))(&v35[v76 + v49 * v34], v8, v5);
        sub_1003505F8((uint64_t)v92);
        goto LABEL_44;
      }
    }
    else
    {
      sub_1000ECF64(v90, (uint64_t)v87);
      uint64_t v50 = v88;
      sub_10000ECD4(v87, v88);
      sub_10034CDB4(v50);
      uint64_t v52 = v51;
      sub_100013D48((uint64_t)v87);
      if (v52) {
        goto LABEL_34;
      }
    }
    if (qword_1006645B8 != -1) {
      swift_once();
    }
    uint64_t v53 = sub_100530920();
    sub_10000EA90(v53, (uint64_t)static Logger.capabilityUpsell);
    sub_1003505C0((uint64_t)v92, (uint64_t)v90);
    uint64_t v54 = sub_100530900();
    os_log_type_t v55 = sub_1005357D0();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = swift_slowAlloc();
      uint64_t v89 = swift_slowAlloc();
      *(_DWORD *)uint64_t v56 = 136315138;
      sub_1003505C0((uint64_t)v90, (uint64_t)v87);
      uint64_t v57 = sub_100534D70();
      *(void *)(v56 + 4) = sub_1000F4A7C(v57, v58, &v89);
      swift_bridgeObjectRelease();
      sub_1003505F8((uint64_t)v90);
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "Missing id for item=%s", (uint8_t *)v56, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_1003505F8((uint64_t)v90);
    }
    sub_1003505F8((uint64_t)v92);
    uint64_t v33 = v85;
    goto LABEL_44;
  }
  sub_1000EE7A4((uint64_t)v90);
  os_log_t v35 = v79;
LABEL_44:
  v59._rawValue = v35;
  sub_10052F320(v59);
  swift_bridgeObjectRelease();
  if (qword_1006645B8 != -1) {
    swift_once();
  }
  uint64_t v60 = sub_100530920();
  sub_10000EA90(v60, (uint64_t)static Logger.capabilityUpsell);
  uint64_t v61 = sub_100530900();
  os_log_type_t v62 = sub_1005357E0();
  BOOL v63 = os_log_type_enabled(v61, v62);
  uint64_t v64 = (uint64_t)v81;
  if (v63)
  {
    uint64_t v65 = swift_slowAlloc();
    *(void *)&v92[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v65 = 136446210;
    swift_beginAccess();
    sub_100350628((unint64_t *)&qword_100668938, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v66 = v83;
    uint64_t v67 = sub_100536700();
    *(void *)(v65 + 4) = sub_1000F4A7C(v67, v68, (uint64_t *)v92);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v61, v62, "Will present upsell with URL=%{public}s", (uint8_t *)v65, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v66 = v83;
  }
  uint64_t v69 = sub_100535300();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v64, 1, 1, v69);
  swift_beginAccess();
  uint64_t v70 = v86;
  uint64_t v71 = v82;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v82, v33, v66);
  sub_1005352C0();
  uint64_t v72 = sub_1005352B0();
  uint64_t v73 = v33;
  unint64_t v74 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
  uint64_t v75 = swift_allocObject();
  *(void *)(v75 + 16) = v72;
  *(void *)(v75 + 24) = &protocol witness table for MainActor;
  v77(v75 + v74, v71, v66);
  sub_1001D43D4(v64, (uint64_t)&unk_10066E300, v75);
  swift_release();

  (*(void (**)(char *, uint64_t))(v70 + 8))(v73, v66);
}

ValueMetadata *type metadata accessor for SubscriptionUpsellPresenter()
{
  return &type metadata for SubscriptionUpsellPresenter;
}

void destroy for SubscriptionUpsellPresenter.Placement(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 <= 1)
  {
    if (v1 == 1) {

    }
    else {
      sub_100013D48(a1);
    }
  }
}

uint64_t initializeWithCopy for SubscriptionUpsellPresenter.Placement(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 > 1)
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else if (v3 == 1)
  {
    uint64_t v4 = *(void **)a2;
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 40) = 1;
    id v5 = v4;
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t))(v7 - 8))(a1);
    *(unsigned char *)(a1 + 40) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for SubscriptionUpsellPresenter.Placement(uint64_t a1, long long *a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
  unsigned int v5 = *((unsigned __int8 *)a2 + 40);
  if (v4 > 1)
  {
    if (v5 <= 1)
    {
      if (v5 != 1)
      {
LABEL_17:
        uint64_t v11 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v11;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v11 - 8))(a1, a2);
        *(unsigned char *)(a1 + 40) = 0;
        return a1;
      }
      goto LABEL_8;
    }
LABEL_12:
    long long v8 = *a2;
    long long v9 = a2[1];
    *(_OWORD *)(a1 + 25) = *(long long *)((char *)a2 + 25);
    *(_OWORD *)a1 = v8;
    *(_OWORD *)(a1 + 16) = v9;
    return a1;
  }
  if (v5 > 1)
  {
    if (v4 == 1) {

    }
    else {
      sub_100013D48(a1);
    }
    goto LABEL_12;
  }
  if ((long long *)a1 != a2)
  {
    if (v4 == 1) {

    }
    else {
      sub_100013D48(a1);
    }
    unsigned int v10 = *((unsigned __int8 *)a2 + 40);
    if (v10 >= 2) {
      unsigned int v10 = *(_DWORD *)a2 + 2;
    }
    if (v10 != 1) {
      goto LABEL_17;
    }
LABEL_8:
    long long v6 = *(void **)a2;
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 40) = 1;
    id v7 = v6;
  }
  return a1;
}

uint64_t assignWithTake for SubscriptionUpsellPresenter.Placement(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
  unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
  if (v4 > 1)
  {
    if (v5 <= 1)
    {
      if (v5 != 1)
      {
LABEL_17:
        long long v8 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v8;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(unsigned char *)(a1 + 40) = 0;
        return a1;
      }
      goto LABEL_8;
    }
LABEL_12:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    return a1;
  }
  if (v5 > 1)
  {
    if (v4 == 1) {

    }
    else {
      sub_100013D48(a1);
    }
    goto LABEL_12;
  }
  if (a1 != a2)
  {
    if (v4 == 1) {

    }
    else {
      sub_100013D48(a1);
    }
    unsigned int v7 = *(unsigned __int8 *)(a2 + 40);
    if (v7 >= 2) {
      unsigned int v7 = *(_DWORD *)a2 + 2;
    }
    if (v7 != 1) {
      goto LABEL_17;
    }
LABEL_8:
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 40) = 1;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionUpsellPresenter.Placement(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 2) {
    unsigned int v4 = (v3 ^ 0xFF) + 1;
  }
  else {
    unsigned int v4 = 0;
  }
  if (v4 >= 4) {
    return v4 - 3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SubscriptionUpsellPresenter.Placement(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -3 - a2;
    }
  }
  return result;
}

uint64_t sub_1003500AC(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 2) {
    return (v1 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

double sub_1003500C0(uint64_t a1, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 25) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_DWORD *)a1 = a2 - 255;
  }
  else if (a2)
  {
    *(unsigned char *)(a1 + 40) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionUpsellPresenter.Placement()
{
  return &type metadata for SubscriptionUpsellPresenter.Placement;
}

void destroy for SubscriptionUpsellPresenter.Placement.Source(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)a1 + 2;
  }
  if (v1 == 1) {

  }
  else {
    sub_100013D48(a1);
  }
}

uint64_t initializeWithCopy for SubscriptionUpsellPresenter.Placement.Source(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    unsigned int v4 = *(void **)a2;
    *(void *)a1 = *(void *)a2;
    id v5 = v4;
    char v6 = 1;
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t))(v7 - 8))(a1);
    char v6 = 0;
  }
  *(unsigned char *)(a1 + 40) = v6;
  return a1;
}

uint64_t assignWithCopy for SubscriptionUpsellPresenter.Placement.Source(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1) {

    }
    else {
      sub_100013D48(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      char v6 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 1;
      id v7 = v6;
    }
    else
    {
      uint64_t v8 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v8;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t assignWithTake for SubscriptionUpsellPresenter.Placement.Source(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1) {

    }
    else {
      sub_100013D48(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(void *)a1 = *(void *)a2;
      char v6 = 1;
    }
    else
    {
      char v6 = 0;
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    *(unsigned char *)(a1 + 40) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionUpsellPresenter.Placement.Source(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SubscriptionUpsellPresenter.Placement.Source(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)double result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)double result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionUpsellPresenter.Placement.Source()
{
  return &type metadata for SubscriptionUpsellPresenter.Placement.Source;
}

uint64_t sub_1003503D0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100350408()
{
  uint64_t v1 = sub_10052F360();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1003504D4(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10052F360() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10000F280;
  return sub_10034E030(a1, v5, v6, v7);
}

uint64_t sub_1003505C0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1003505F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100350628(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static ApplicationRecordUtilities.isApplicationInstalled(identifier:)(uint64_t a1, uint64_t a2)
{
  objc_allocWithZone((Class)LSApplicationRecord);
  swift_bridgeObjectRetain();
  uint64_t result = (uint64_t)sub_100351578(a1, a2, 0);
  if (result)
  {

    return 1;
  }
  return result;
}

uint64_t static ApplicationRecordUtilities.openApplication(identifier:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = a2;
  return _swift_task_switch(sub_100350714, 0, 0);
}

uint64_t sub_100350714()
{
  id v1 = [self defaultWorkspace];
  v0[17] = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    NSString v3 = sub_100534CA0();
    v0[18] = v3;
    v0[2] = v0;
    v0[7] = v0 + 20;
    v0[3] = sub_10035085C;
    uint64_t v4 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_100350A4C;
    v0[13] = &unk_10062CB00;
    v0[14] = v4;
    [v2 openApplicationWithBundleIdentifier:v3 configuration:0 completionHandler:v0 + 10];
    id v1 = v0 + 2;
  }
  else
  {
    __break(1u);
  }
  return _swift_continuation_await(v1);
}

uint64_t sub_10035085C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    uint64_t v2 = sub_1003509D4;
  }
  else {
    uint64_t v2 = sub_10035096C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10035096C()
{
  uint64_t v1 = *(void **)(v0 + 144);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1003509D4()
{
  uint64_t v1 = (void *)v0[18];
  uint64_t v2 = (void *)v0[17];
  swift_willThrow();

  NSString v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100350A4C(uint64_t a1, char a2, void *a3)
{
  if (a3)
  {
    sub_10000BB04(&qword_10066E578);
    swift_allocError();
    *uint64_t v4 = a3;
    id v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(unsigned char **)(*(void *)(*(void *)(a1 + 32) + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

NSString sub_100350B00()
{
  NSString result = sub_100534CA0();
  static NSNotificationName.applicationRegistered = (uint64_t)result;
  return result;
}

uint64_t *NSNotificationName.applicationRegistered.unsafeMutableAddressor()
{
  if (qword_10066E310 != -1) {
    swift_once();
  }
  return &static NSNotificationName.applicationRegistered;
}

id static NSNotificationName.applicationRegistered.getter()
{
  if (qword_10066E310 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static NSNotificationName.applicationRegistered;

  return v0;
}

id variable initialization expression of BrightnessManager.brightnessClient()
{
  id v0 = objc_allocWithZone((Class)BrightnessSystemClient);

  return [v0 init];
}

unint64_t variable initialization expression of BrightnessManager.minimumBrightness()
{
  return sub_100350C24((uint64_t)&off_10062C3E0);
}

unint64_t sub_100350C24(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000BB04(&qword_10066E568);
  uint64_t v2 = (void *)sub_1005364C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100367E3C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100350D38(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000BB04(&qword_10066E560);
  uint64_t v2 = (void *)sub_1005364C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100367E3C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100350E4C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000BB04(&qword_10066E550);
  uint64_t v2 = (void *)sub_1005364C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unint64_t *)(a1 + 40);
  while (1)
  {
    unint64_t v5 = *(v4 - 1);
    unint64_t v6 = *v4;
    uint64_t v7 = v4[1];
    uint64_t v8 = v4[2];
    unint64_t v9 = v4[3];
    unint64_t v10 = v4[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_100367F28(v5, v6, v7, v8);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (unint64_t *)(v2[6] + 32 * result);
    *uint64_t v13 = v5;
    v13[1] = v6;
    v13[2] = v7;
    v13[3] = v8;
    uint64_t v14 = (unint64_t *)(v2[7] + 16 * result);
    unint64_t *v14 = v9;
    v14[1] = v10;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v4 += 6;
    v2[2] = v17;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100350F8C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000BB04(&qword_10066E540);
  uint64_t v2 = (void *)sub_1005364C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100367E3C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003510A0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000BB04(&qword_10066E518);
  uint64_t v2 = (void *)sub_1005364C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_100367E3C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    BOOL v12 = (void *)(v2[7] + 16 * result);
    *BOOL v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003511C4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000BB04(&qword_10066E510);
  uint64_t v2 = (void *)sub_1005364C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = (void *)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v9 = v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100368064(v5, v6, (uint64_t)v9);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v12 = (uint64_t *)(v2[6] + 24 * result);
    *BOOL v12 = v5;
    v12[1] = v6;
    v12[2] = (uint64_t)v9;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v2[2] = v15;
    v4 += 4;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100351304(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000BB04(&qword_10066E570);
  uint64_t v2 = (void *)sub_1005364C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_100367E3C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t variable initialization expression of BrightnessManager.resetBrightness()
{
  return sub_100350C24((uint64_t)&off_10062C430);
}

unint64_t variable initialization expression of BrightnessManager.disableCBFeatures()
{
  return sub_100350D38((uint64_t)&off_10062C480);
}

unint64_t variable initialization expression of BrightnessManager.enableCBFeatures()
{
  return sub_100350D38((uint64_t)&off_10062C4B8);
}

uint64_t variable initialization expression of Datavault.logger@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100530920();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t variable initialization expression of AIDiffingUpdate.insertedIndexPathsSet()
{
  return 0;
}

uint64_t variable initialization expression of WeakArray.items()
{
  type metadata accessor for WeakArray.WeakBox();

  return sub_100535160();
}

uint64_t variable initialization expression of WeakValuesDictionary.storage()
{
  sub_100351D00();
  swift_getTupleTypeMetadata2();
  sub_100535160();

  return sub_100534AE0();
}

id sub_100351578(uint64_t a1, uint64_t a2, char a3)
{
  NSString v5 = sub_100534CA0();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithBundleIdentifier:v5 allowPlaceholder:a3 & 1 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    sub_10052F1E0();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_100351654(uint64_t a1, uint64_t a2)
{
  return sub_100351B4C(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

NSNumber sub_10035166C()
{
  return sub_100535430();
}

uint64_t sub_100351674(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100535440();
  *(_DWORD *)a2 = 0;
  *(unsigned char *)(a2 + 4) = 1;
  return result;
}

uint64_t sub_1003516C8(uint64_t a1, uint64_t a2)
{
  char v3 = sub_100535450();
  *(_DWORD *)a2 = 0;
  *(unsigned char *)(a2 + 4) = 1;
  return v3 & 1;
}

uint64_t sub_100351720@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = sub_100535460();
  *a1 = v3;
  return result;
}

Swift::Int sub_100351748()
{
  Swift::UInt v1 = *v0;
  sub_100536950();
  sub_100536960(v1);
  return sub_1005369A0();
}

void sub_100351790()
{
  sub_100536960(*v0);
}

Swift::Int sub_1003517BC()
{
  Swift::UInt v1 = *v0;
  sub_100536950();
  sub_100536960(v1);
  return sub_1005369A0();
}

BOOL sub_100351800(_DWORD *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_100351814(_DWORD *a1)
{
  return (*a1 & ~*v1) == 0;
}

uint64_t sub_100351828()
{
  sub_100351F50(&qword_10066E4F0, _s3__C4NameVMa_0);
  sub_100351F50(&qword_10066E4F8, _s3__C4NameVMa_0);

  return sub_100536510();
}

uint64_t sub_1003518E4()
{
  sub_100351F50(&qword_10066E500, _s3__C3KeyVMa_0);
  sub_100351F50(&qword_10066E508, _s3__C3KeyVMa_0);

  return sub_100536510();
}

_DWORD *sub_1003519A0@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

float sub_1003519B0@<S0>(_DWORD *a1@<X8>)
{
  float result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_1003519BC()
{
  return sub_100536510();
}

uint64_t sub_100351A78()
{
  sub_100351F50((unint64_t *)&qword_10066E5A8, type metadata accessor for NSKeyValueChangeKey);
  sub_100351F50(qword_10066E5B0, type metadata accessor for NSKeyValueChangeKey);

  return sub_100536510();
}

uint64_t sub_100351B34(uint64_t a1, uint64_t a2)
{
  return sub_100351B4C(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_100351B4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_100534CE0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100351B90()
{
  return Float.hashValue.getter(*v0);
}

void sub_100351B98()
{
  if ((*v0 & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v1 = *v0;
  }
  else {
    Swift::UInt32 v1 = 0;
  }
  sub_100536980(v1);
}

uint64_t sub_100351BCC(uint64_t a1)
{
  if ((*v1 & 0x7FFFFFFF) != 0) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  return static Hasher._hash(seed:bytes:count:)(a1, v2, 4);
}

BOOL sub_100351BE0(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100351BF4(uint64_t a1)
{
  return sub_100351CAC(a1, &qword_10066E528);
}

unint64_t sub_100351C00(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v1 = result;
    if (result)
    {
      sub_10052FA30();
      uint64_t v2 = (void *)sub_100535170();
      v2[2] = v1;
    }
    else
    {
      uint64_t v2 = _swiftEmptyArrayStorage;
    }
    sub_10052FA30();
    return (unint64_t)v2;
  }
  return result;
}

uint64_t sub_100351C94(uint64_t a1)
{
  return sub_100351CAC(a1, &qword_10066E538);
}

uint64_t sub_100351CA0(uint64_t a1)
{
  return sub_100351CAC(a1, &qword_10066E548);
}

uint64_t sub_100351CAC(uint64_t result, uint64_t *a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = result;
    if (result)
    {
      sub_10000BB04(a2);
      float result = sub_100535170();
      *(void *)(result + 16) = v2;
    }
    else
    {
      return (uint64_t)_swiftEmptyArrayStorage;
    }
  }
  return result;
}

unint64_t sub_100351D00()
{
  unint64_t result = qword_10066E3E0;
  if (!qword_10066E3E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10066E3E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ApplicationRecordUtilities()
{
  return &type metadata for ApplicationRecordUtilities;
}

void type metadata accessor for AnimationCurve(uint64_t a1)
{
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
}

__n128 initializeWithTake for UserDefaultsKeyValueTrigger(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for NSDirectionalEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for CTFrame(uint64_t a1)
{
}

void type metadata accessor for Event(uint64_t a1)
{
}

void _s3__C4NameVMa_0(uint64_t a1)
{
}

void _s3__C16os_unfair_lock_sVMa_0(uint64_t a1)
{
}

void _s3__C24MPCPlaybackIntentOptionsVMa_0(uint64_t a1)
{
}

__n128 initializeWithTake for NotificationTrigger(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

void _s3__C6CGRectVMa_0(uint64_t a1)
{
}

void type metadata accessor for State(uint64_t a1)
{
}

void type metadata accessor for Attribute(uint64_t a1)
{
}

void _s3__C6CGSizeVMa_1(uint64_t a1)
{
}

void _s3__C3KeyVMa_0(uint64_t a1)
{
}

void _s3__C7CGPointVMa_0(uint64_t a1)
{
}

void type metadata accessor for CTRun(uint64_t a1)
{
}

void type metadata accessor for CTLine(uint64_t a1)
{
}

uint64_t sub_100351EC0()
{
  return sub_100351F50(&qword_10066E470, _s3__C3KeyVMa_0);
}

uint64_t sub_100351F08()
{
  return sub_100351F50(&qword_10066E478, _s3__C3KeyVMa_0);
}

uint64_t sub_100351F50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100351F98()
{
  return sub_100351F50(&qword_10066E480, type metadata accessor for Attribute);
}

uint64_t sub_100351FE0()
{
  return sub_100351F50(&qword_10066E488, _s3__C24MPCPlaybackIntentOptionsVMa_0);
}

uint64_t sub_100352028()
{
  return sub_100351F50(&qword_10066E490, _s3__C24MPCPlaybackIntentOptionsVMa_0);
}

uint64_t sub_100352070()
{
  return sub_100351F50(&qword_10066E498, _s3__C24MPCPlaybackIntentOptionsVMa_0);
}

uint64_t sub_1003520B8()
{
  return sub_100351F50(&qword_10066E4A0, _s3__C24MPCPlaybackIntentOptionsVMa_0);
}

uint64_t sub_100352100()
{
  return sub_100351F50(&qword_10066E4A8, _s3__C4NameVMa_0);
}

uint64_t sub_100352148()
{
  return sub_100351F50(&qword_10066E4B0, _s3__C4NameVMa_0);
}

uint64_t sub_100352190()
{
  return sub_100351F50(&qword_10066E4B8, _s3__C4NameVMa_0);
}

uint64_t sub_1003521D8()
{
  return sub_100351F50(&qword_10066E4C0, type metadata accessor for UILayoutPriority);
}

uint64_t sub_100352220()
{
  return sub_100351F50(&qword_10066E4C8, type metadata accessor for UILayoutPriority);
}

uint64_t sub_100352268()
{
  return sub_100351F50(&qword_10066E4D0, type metadata accessor for UILayoutPriority);
}

uint64_t sub_1003522B0()
{
  return sub_100351F50(&qword_10066E4D8, _s3__C3KeyVMa_0);
}

unint64_t sub_1003522F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_10000BB04(&qword_10066E558);
  long long v3 = (void *)sub_1005364C0();
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  char v6 = *(unsigned char *)(a1 + 48);
  unint64_t result = sub_100367E68(v5, v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  char v9 = (unsigned char *)(a1 + 72);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v10 = (uint64_t *)(v3[6] + 16 * result);
    *id v10 = v5;
    v10[1] = v4;
    *(unsigned char *)(v3[7] + result) = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    BOOL v14 = v9 + 24;
    uint64_t v5 = *((void *)v9 - 2);
    uint64_t v15 = *((void *)v9 - 1);
    char v6 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100367E68(v5, v15);
    char v9 = v14;
    uint64_t v4 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_100352410(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10000BB04(&qword_10066E530);
    long long v3 = (void *)sub_1005364C0();
    for (uint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      unint64_t result = sub_100367FB4(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 8 * result;
      *(void *)(v3[6] + v9) = v5;
      *(void *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_1003524E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10000BB04(&qword_10066E520);
    long long v3 = (void *)sub_1005364C0();
    for (uint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      Swift::UInt v5 = *(i - 1);
      uint64_t v6 = *i;
      unint64_t result = sub_100367FF8(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 8 * result;
      *(void *)(v3[6] + v9) = v5;
      *(void *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

void type metadata accessor for MPModelPlaylistEntryType(uint64_t a1)
{
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
}

uint64_t sub_1003525EC()
{
  return sub_100351F50(&qword_10066E590, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_100352634()
{
  return sub_100351F50(&qword_10066E598, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_10035267C()
{
  return sub_100351F50(&qword_10066E5A0, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t static ArrayBuilder.buildBlock(_:)()
{
  return sub_100535020();
}

uint64_t static ArrayBuilder.buildExpression(_:)(uint64_t a1)
{
  uint64_t v2 = sub_100535F20();
  sub_100536710();
  uint64_t v3 = *(void *)(v2 - 8);
  swift_allocObject();
  sub_100535110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v4, a1, v2);
  v5.location = sub_100535200();
  CFRange.init(_:)(v5);
  swift_getWitnessTable();
  uint64_t v6 = sub_100534FA0();
  swift_bridgeObjectRelease();
  return v6;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1003528E0()
{
  v0.location = sub_100535200();
  CFRange.init(_:)(v0);
}

uint64_t sub_10035291C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100535F20();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t type metadata accessor for ArrayBuilder()
{
  return sub_100086CCC();
}

uint64_t Whitetail.Binding.configurationBlock.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  return v1;
}

uint64_t Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(a1, a2, a3, a4);
  return v8;
}

{
  uint64_t inited;
  uint64_t v9;

  sub_10000BB04(&qword_10066E648);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10053A3B0;
  sub_100104808(a1, inited + 32);
  uint64_t v9 = swift_allocObject();
  Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(inited, a2, a3, a4);
  sub_100013D48(a1);
  return v9;
}

{
  uint64_t inited;
  uint64_t v9;

  sub_10000BB04(&qword_10066E648);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10053A3B0;
  *(void *)(inited + 56) = &type metadata for NotificationTrigger;
  *(void *)(inited + 64) = &protocol witness table for NotificationTrigger;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = 0;
  uint64_t v9 = swift_allocObject();
  Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(inited, a2, a3, a4);
  return v9;
}

uint64_t Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_100533280();
  uint64_t v22 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005332B0();
  uint64_t v21 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)(v5 + 32) = 0;
  *(unsigned char *)(v5 + 36) = 0;
  *(void *)(v5 + 40) = _swiftEmptyArrayStorage;
  *(void *)(v5 + 16) = a3;
  *(void *)(v5 + 24) = a4;
  swift_retain();
  swift_retain();
  char v16 = sub_100354428(a1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_beginAccess();
  *(void *)(v5 + 40) = v16;
  swift_bridgeObjectRelease();
  if (a2)
  {
    uint64_t v17 = self;
    swift_retain_n();
    if ([v17 isMainThread])
    {
      (*(void (**)(void))(v5 + 16))();
    }
    else
    {
      sub_1003545B4();
      uint64_t v18 = (void *)sub_100535960();
      aBlock[4] = sub_10011C994;
      aBlock[5] = v5;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1001CB5A0;
      aBlock[3] = &unk_10062CFE8;
      NSString v19 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      sub_1005332A0();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_10035475C((unint64_t *)&qword_10066F7D0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10000BB04(&qword_10066E640);
      sub_10035460C();
      sub_1005360C0();
      sub_100535980();
      _Block_release(v19);

      (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v10);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v13);
    }
    swift_release_n();
  }
  swift_release();
  return v5;
}

Swift::Void __swiftcall Whitetail.Binding.setNeedsUpdate()()
{
  uint64_t v1 = sub_100533280();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005332B0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (os_unfair_lock_s *)(v0 + 32);
  swift_beginAccess();
  os_unfair_lock_lock((os_unfair_lock_t)(v0 + 32));
  swift_endAccess();
  if ((*(unsigned char *)(v0 + 36) & 1) == 0)
  {
    *(unsigned char *)(v0 + 36) = 1;
    sub_1003545B4();
    uint64_t v10 = sub_100535960();
    aBlock[4] = sub_100354668;
    aBlock[5] = v0;
    uint64_t v14 = (void *)v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001CB5A0;
    aBlock[3] = &unk_10062D010;
    uint64_t v11 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_1005332A0();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10035475C((unint64_t *)&qword_10066F7D0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000BB04(&qword_10066E640);
    sub_10035460C();
    sub_1005360C0();
    uint64_t v12 = v14;
    sub_100535980();
    _Block_release(v11);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_beginAccess();
  os_unfair_lock_unlock(v9);
  swift_endAccess();
}

uint64_t Whitetail.Binding.add(_:)(void *a1)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  sub_10000ECD4(a1, v3);
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v4 + 8);
  swift_retain();
  v6(sub_1003546A8, v5, v3, v4);
  if (v2)
  {
    swift_errorRelease();
    return swift_release_n();
  }
  else
  {
    swift_release_n();
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_1005350A0();
    if (*(void *)((*(void *)(v1 + 40) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v1 + 40) & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
      sub_100535130();
    sub_100535190();
    sub_100535100();
    swift_endAccess();
    return swift_unknownObjectRelease();
  }
}

uint64_t sub_100353360()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    Whitetail.Binding.setNeedsUpdate()();
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Whitetail.Binding.add(_:)(Swift::OpaquePointer a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = *((void *)a1._rawValue + 2);
  if (v4)
  {
    uint64_t v5 = (char *)a1._rawValue + 32;
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v7 = v5[3];
      uint64_t v6 = v5[4];
      sub_10000ECD4(v5, v7);
      uint64_t v8 = swift_allocObject();
      swift_weakInit();
      uint64_t v9 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v6 + 8);
      swift_retain();
      v9(sub_1003546A8, v8, v7, v6);
      if (v3)
      {
        swift_errorRelease();
        swift_release_n();
        uint64_t v3 = 0;
      }
      else
      {
        swift_release_n();
        swift_beginAccess();
        swift_unknownObjectRetain();
        sub_1005350A0();
        if (*(void *)((*(void *)(v1 + 40) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v1 + 40) & 0xFFFFFFFFFFFFFF8)
                                                                                           + 0x18) >> 1)
          sub_100535130();
        sub_100535190();
        sub_100535100();
        swift_endAccess();
        swift_unknownObjectRelease();
      }
      v5 += 5;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10035355C(uint64_t a1)
{
  uint64_t v2 = (os_unfair_lock_s *)(a1 + 32);
  swift_beginAccess();
  os_unfair_lock_lock(v2);
  *(unsigned char *)(a1 + 36) = 0;
  os_unfair_lock_unlock(v2);
  uint64_t v3 = swift_endAccess();
  return (*(uint64_t (**)(uint64_t))(a1 + 16))(v3);
}

uint64_t Whitetail.Binding.description.getter()
{
  sub_1005361C0(21);
  v1._countAndFlagsBits = 60;
  v1._object = (void *)0xE100000000000000;
  sub_100534E80(v1);
  v2._countAndFlagsBits = sub_100536A30();
  sub_100534E80(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 8250;
  v3._object = (void *)0xE200000000000000;
  sub_100534E80(v3);
  sub_100536370();
  v4._countAndFlagsBits = 0x6576726573626F20;
  v4._object = (void *)0xEB000000003D7372;
  sub_100534E80(v4);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = sub_1005350F0();
  sub_100534E80(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = 62;
  v6._object = (void *)0xE100000000000000;
  sub_100534E80(v6);
  return 0;
}

uint64_t Whitetail.Binding.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Whitetail.Binding.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100353788()
{
  return Whitetail.Binding.description.getter();
}

id DistributedNotificationTrigger.createObserver(_:)(uint64_t a1, uint64_t a2)
{
  sub_100534CE0();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  id v5 = objc_allocWithZone((Class)MusicDarwinNotificationObserver);
  swift_retain();
  NSString v6 = sub_100534CA0();
  swift_bridgeObjectRelease();
  v10[4] = sub_10011C994;
  v10[5] = v4;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_1001CB5A0;
  v10[3] = &unk_10062D088;
  uint64_t v7 = _Block_copy(v10);
  id v8 = [v5 initWithNotificationName:v6 handler:v7];

  _Block_release(v7);
  swift_release();
  return v8;
}

id sub_1003538DC(uint64_t a1, uint64_t a2)
{
  return DistributedNotificationTrigger.createObserver(_:)(a1, a2);
}

uint64_t NotificationTrigger.object.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t NotificationTrigger.createObserver(_:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  type metadata accessor for NotificationObserver();
  swift_allocObject();
  swift_unknownObjectRetain();
  swift_retain();
  return NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(a3, a4, 1, 1, (uint64_t)sub_10011C994, v8);
}

uint64_t sub_1003539C0(uint64_t a1, uint64_t a2)
{
  NSString v6 = *(void **)v2;
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  type metadata accessor for NotificationObserver();
  swift_allocObject();
  swift_unknownObjectRetain();
  swift_retain();
  return NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v6, v5, 1, 1, (uint64_t)sub_100122AF8, v7);
}

uint64_t KeyValueObservationTrigger.keyPath.getter()
{
  return swift_retain();
}

uint64_t KeyValueObservationTrigger.createObserver(_:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a5;
  v11[3] = a6;
  v11[4] = a1;
  v11[5] = a2;
  id v12 = a3;
  swift_retain();
  uint64_t v13 = sub_10052F230();
  swift_release();

  return v13;
}

uint64_t sub_100353B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return KeyValueObservationTrigger.createObserver(_:)(a1, a2, *(void **)v3, *(void *)(v3 + 8), *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t UserDefaultsKeyValueTrigger.init<A>(suiteName:key:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1;
}

char *UserDefaultsKeyValueTrigger.createObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v13 = sub_100353CD0(a5, a6, a3, a4, (uint64_t)sub_100122AF8, v12);
  swift_bridgeObjectRelease();
  swift_release();
  return v13;
}

char *sub_100353CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v34 = a5;
  uint64_t v35 = a6;
  uint64_t v10 = _s20KeyValueRegistrationC10IdentifierVMa(0);
  uint64_t v11 = v10 - 8;
  uint64_t v33 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v33 + 64);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v32 - v16;
  __chkstk_darwin(v15);
  NSString v19 = (char *)&v32 - v18;
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_100534F50();
  uint64_t v22 = v21;
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  uint64_t v23 = &v19[*(int *)(v11 + 28)];
  *(void *)uint64_t v23 = a3;
  *((void *)v23 + 1) = a4;
  uint64_t v24 = (uint64_t *)&v19[*(int *)(v11 + 32)];
  *uint64_t v24 = v20;
  v24[1] = v22;
  if (qword_10066E398 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_10066F8B8;
  uint64_t v26 = *(void *)(qword_10066F8B8
                  + OBJC_IVAR____TtCE14MusicUtilitiesCSo14NSUserDefaultsP33_0EE8F48931DDE162065F15584D7CE3A39_Observer_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v26 + 16));
  uint64_t v27 = v38;
  sub_10039AC08(v25, (uint64_t)v19, v34, v35);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v26 + 16));
  if (v27)
  {
    sub_100354FB4((uint64_t)v19);
  }
  else
  {
    sub_100355010((uint64_t)v19, (uint64_t)v17);
    sub_100355074((uint64_t)v19, (uint64_t)v14);
    unint64_t v28 = (*(unsigned __int8 *)(v33 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    uint64_t v29 = swift_allocObject();
    sub_100355074((uint64_t)v14, v29 + v28);
    type metadata accessor for NSUserDefaults.KeyValueRegistration(0);
    uint64_t v14 = (char *)swift_allocObject();
    sub_100355074((uint64_t)v17, (uint64_t)&v14[OBJC_IVAR____TtCE14MusicUtilitiesCSo14NSUserDefaults20KeyValueRegistration_identifier]);
    uint64_t v30 = (void (**)())&v14[OBJC_IVAR____TtCE14MusicUtilitiesCSo14NSUserDefaults20KeyValueRegistration_onInvalidate];
    *uint64_t v30 = sub_1003551DC;
    v30[1] = (void (*)())v29;
  }
  return v14;
}

char *sub_100353F60(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v8 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v10 = sub_100353CD0(v8, v7, v5, v6, (uint64_t)sub_100122AF8, v9);
  swift_bridgeObjectRelease();
  swift_release();
  return v10;
}

uint64_t PublisherTrigger.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100530D40();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t PublisherTrigger.createObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  uint64_t v4 = sub_10000BB04(&qword_10066E650);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(void *)(a3 + 16);
  uint64_t v7 = (void *)sub_100530D40();
  unint64_t v8 = sub_1003545B4();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v24 = WitnessTable;
  uint64_t v23 = sub_10035475C(&qword_10066E658, (void (*)(uint64_t))sub_1003545B4);
  id v29 = v7;
  unint64_t v30 = v8;
  uint64_t v31 = WitnessTable;
  uint64_t v32 = v23;
  uint64_t v10 = sub_100530C50();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v22 - v12;
  swift_getWitnessTable();
  uint64_t v14 = sub_100530C30();
  uint64_t v25 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v22 - v15;
  id v29 = (id)sub_100535960();
  uint64_t v17 = sub_100535940();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v6, 1, 1, v17);
  sub_100530D90();
  sub_1003547A4((uint64_t)v6);

  sub_100530DA0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v18 = (void *)swift_allocObject();
  uint64_t v19 = v27;
  v18[2] = v26;
  v18[3] = v19;
  v18[4] = v28;
  swift_retain();
  swift_getWitnessTable();
  uint64_t v20 = sub_100530DC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v14);
  return v20;
}

uint64_t sub_100354410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PublisherTrigger.createObserver(_:)(a1, a2, a3);
}

void *sub_100354428(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v6 = (void *)(a1 + 32);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v8 = v6[3];
      uint64_t v7 = v6[4];
      sub_10000ECD4(v6, v8);
      uint64_t v9 = swift_allocObject();
      swift_weakInit();
      uint64_t v10 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v7 + 8);
      swift_retain();
      v10(sub_1003546A8, v9, v8, v7);
      if (v2)
      {
        swift_errorRelease();
        swift_release_n();
        uint64_t v2 = 0;
      }
      else
      {
        swift_release_n();
        sub_1005350A0();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_100535130();
        }
        sub_100535190();
        sub_100535100();
      }
      v6 += 5;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

unint64_t sub_1003545B4()
{
  unint64_t result = qword_10066E638;
  if (!qword_10066E638)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10066E638);
  }
  return result;
}

uint64_t sub_1003545F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100354604()
{
  return swift_release();
}

unint64_t sub_10035460C()
{
  unint64_t result = qword_10066F7E0;
  if (!qword_10066F7E0)
  {
    sub_100013BFC(&qword_10066E640);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066F7E0);
  }
  return result;
}

uint64_t sub_100354668()
{
  return sub_10035355C(v0);
}

uint64_t sub_100354670()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1003546A8()
{
  return sub_100353360();
}

uint64_t sub_1003546C4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003546FC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100354734()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_10035475C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003547A4(uint64_t a1)
{
  uint64_t v2 = sub_10000BB04(&qword_10066E650);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100354804()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10035483C()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

ValueMetadata *type metadata accessor for Whitetail()
{
  return &type metadata for Whitetail;
}

uint64_t type metadata accessor for Whitetail.Binding()
{
  return self;
}

ValueMetadata *type metadata accessor for DistributedNotificationTrigger()
{
  return &type metadata for DistributedNotificationTrigger;
}

void *initializeBufferWithCopyOfBuffer for NotificationTrigger(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for NotificationTrigger(id *a1)
{
  return swift_unknownObjectRelease();
}

uint64_t assignWithCopy for NotificationTrigger(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

id *assignWithTake for NotificationTrigger(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for NotificationTrigger()
{
  return &type metadata for NotificationTrigger;
}

void *sub_1003549C8(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_retain();
  return a1;
}

uint64_t sub_100354A00(id *a1)
{
  return swift_release();
}

uint64_t sub_100354A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

id *sub_100354A98(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for KeyValueObservationTrigger()
{
  return sub_100086CCC();
}

uint64_t getEnumTagSinglePayload for UserDefaultsKeyValueTrigger(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UserDefaultsKeyValueTrigger(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserDefaultsKeyValueTrigger()
{
  return &type metadata for UserDefaultsKeyValueTrigger;
}

uint64_t sub_100354B88()
{
  uint64_t result = sub_100530D40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100354C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100530D40();
  id v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_100354C88(uint64_t a1)
{
  uint64_t v2 = sub_100530D40();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_100354CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100530D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_100354D58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100530D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_100354DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100530D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_100354E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100530D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_100354E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100354EA4);
}

uint64_t sub_100354EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100530D40();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100354F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100354F28);
}

uint64_t sub_100354F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100530D40();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PublisherTrigger()
{
  return sub_100086CCC();
}

uint64_t sub_100354FB4(uint64_t a1)
{
  uint64_t v2 = _s20KeyValueRegistrationC10IdentifierVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100355010(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s20KeyValueRegistrationC10IdentifierVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100355074(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s20KeyValueRegistrationC10IdentifierVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003550D8()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(_s20KeyValueRegistrationC10IdentifierVMa(0) - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  uint64_t v3 = sub_10052F780();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1003551DC()
{
  uint64_t v1 = *(void *)(_s20KeyValueRegistrationC10IdentifierVMa(0) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_10039A944(v2);
}

uint64_t NotificationObserver.__allocating_init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(void *a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

uint64_t NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(void *a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  swift_unknownObjectWeakInit();
  *(void *)(v6 + 16) = a1;
  swift_unknownObjectWeakAssign();
  *(unsigned char *)(v6 + 32) = a3;
  *(void *)(v6 + 48) = a5;
  *(void *)(v6 + 56) = a6;
  if (a4) {
    uint64_t v12 = &selRef_defaultCenter;
  }
  else {
    uint64_t v12 = &selRef_default;
  }
  uint64_t v13 = self;
  id v14 = a1;
  swift_retain();
  id v15 = [v13 *v12];
  *(void *)(v6 + 40) = v15;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  id v17 = v14;
  id v18 = v15;
  swift_retain();
  [v18 addObserver:v6 selector:"handleNotification:" name:v17 object:Strong];

  swift_release();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_release();
  return v6;
}

uint64_t NotificationObserver.deinit()
{
  [*(id *)(v0 + 40) removeObserver:v0 name:*(void *)(v0 + 16) object:swift_unknownObjectWeakLoadStrong()];
  swift_unknownObjectRelease();

  sub_1002146E4(v0 + 24);
  swift_release();
  return v0;
}

uint64_t NotificationObserver.__deallocating_deinit()
{
  [*(id *)(v0 + 40) removeObserver:v0 name:*(void *)(v0 + 16) object:swift_unknownObjectWeakLoadStrong()];
  swift_unknownObjectRelease();

  sub_1002146E4(v0 + 24);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_100355568(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v42 = a1;
  uint64_t v3 = sub_100533280();
  uint64_t v41 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005332B0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10052EF20();
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v33 - v15;
  __chkstk_darwin(v14);
  if (*(unsigned char *)(v2 + 32) != 1) {
    return (*(uint64_t (**)(uint64_t))(v2 + 48))(v42);
  }
  uint64_t v35 = v9;
  uint64_t v36 = v7;
  uint64_t v37 = v5;
  uint64_t v38 = v6;
  uint64_t v39 = v3;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v20 = (char *)&v33 - v17;
  uint64_t v21 = v18;
  v19((char *)&v33 - v17, v42, v10);
  uint64_t v40 = v20;
  v19(v16, (uint64_t)v20, v10);
  v19(v13, (uint64_t)v16, v10);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v2;
  uint64_t v42 = v21;
  (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v23 + v22, v16, v10);
  uint64_t v24 = self;
  swift_retain_n();
  uint64_t v25 = v13;
  if ([v24 isMainThread])
  {
    (*(void (**)(char *))(v2 + 48))(v13);
  }
  else
  {
    sub_100123DA4(0, (unint64_t *)&qword_10066E638);
    uint64_t v34 = sub_100535960();
    aBlock[4] = sub_100355E30;
    aBlock[5] = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001CB5A0;
    aBlock[3] = &unk_10062D438;
    uint64_t v27 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    uint64_t v28 = v35;
    sub_1005332A0();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100355EB0();
    sub_10000BB04(&qword_10066E640);
    sub_10035460C();
    id v29 = v37;
    uint64_t v30 = v39;
    sub_1005360C0();
    uint64_t v31 = (void *)v34;
    sub_100535980();
    _Block_release(v27);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v29, v30);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v28, v38);
  }
  swift_release();
  swift_release();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v42 + 8);
  v32(v25, v10);
  return ((uint64_t (*)(char *, uint64_t))v32)(v40, v10);
}

uint64_t NotificationObserver.debugDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = 7104878;
  sub_1005361C0(65);
  v16._object = (void *)0x8000000100565620;
  v16._countAndFlagsBits = 0xD00000000000002ALL;
  sub_100534E80(v16);
  v17._countAndFlagsBits = sub_100534CE0();
  sub_100534E80(v17);
  swift_bridgeObjectRelease();
  v18._countAndFlagsBits = 0x3D7463656A626F20;
  v18._object = (void *)0xE800000000000000;
  sub_100534E80(v18);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    if ([Strong respondsToSelector:"description"])
    {
      id v5 = [v4 description];
      swift_unknownObjectRelease();
      uint64_t v2 = sub_100534CE0();
      uint64_t v7 = v6;

      goto LABEL_6;
    }
    swift_unknownObjectRelease();
  }
  uint64_t v7 = (void *)0xE300000000000000;
LABEL_6:
  v19._countAndFlagsBits = v2;
  v19._object = v7;
  sub_100534E80(v19);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 0x3D7265746E656320;
  v20._object = (void *)0xE800000000000000;
  sub_100534E80(v20);
  sub_100123DA4(0, (unint64_t *)&unk_10066F7B0);
  uint64_t v8 = *(void **)(v1 + 40);
  id v9 = [self defaultCenter];
  char v10 = sub_100535D90();

  if (v10)
  {
    uint64_t v11 = (void *)0xE700000000000000;
    uint64_t v12 = 0x746C7561666564;
  }
  else
  {
    id v13 = [v8 description];
    uint64_t v12 = sub_100534CE0();
    uint64_t v11 = v14;
  }
  v21._countAndFlagsBits = v12;
  v21._object = v11;
  sub_100534E80(v21);
  swift_bridgeObjectRelease();
  v22._countAndFlagsBits = 62;
  v22._object = (void *)0xE100000000000000;
  sub_100534E80(v22);
  return 0;
}

uint64_t sub_100355D1C()
{
  return NotificationObserver.debugDescription.getter();
}

uint64_t type metadata accessor for NotificationObserver()
{
  return self;
}

uint64_t sub_100355D64()
{
  uint64_t v1 = sub_10052EF20();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_100355E30()
{
  uint64_t v1 = *(void *)(sub_10052EF20() - 8);
  return (*(uint64_t (**)(unint64_t))(*(void *)(v0 + 16) + 48))(v0 + ((*(unsigned __int8 *)(v1 + 80)
                                                                                          + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_100355E98(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100355EA8()
{
  return swift_release();
}

unint64_t sub_100355EB0()
{
  unint64_t result = qword_10066F7D0;
  if (!qword_10066F7D0)
  {
    sub_100533280();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066F7D0);
  }
  return result;
}

uint64_t BrightnessManager.__allocating_init(windowScene:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  BrightnessManager.init(windowScene:)(a1);
  return v2;
}

void *BrightnessManager.init(windowScene:)(void *a1)
{
  uint64_t v2 = v1;
  v1[2] = [objc_allocWithZone((Class)BrightnessSystemClient) init];
  v1[3] = sub_100350C24((uint64_t)&off_10062C4F0);
  v1[4] = sub_100350C24((uint64_t)&off_10062C540);
  v1[5] = sub_100350D38((uint64_t)&off_10062C590);
  v1[6] = sub_100350D38((uint64_t)&off_10062C5C8);
  v1[7] = _swiftEmptyArrayStorage;
  sub_10000BB04(&qword_10066E900);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10053DFD0;
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for NotificationObserver();
  swift_allocObject();
  uint64_t v6 = UISceneWillDeactivateNotification;
  id v7 = a1;
  *(void *)(v4 + 32) = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v6, (uint64_t)a1, 1, 1, (uint64_t)sub_10035618C, v5);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  swift_allocObject();
  id v9 = v7;
  *(void *)(v4 + 40) = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(UISceneDidActivateNotification, (uint64_t)a1, 1, 1, (uint64_t)sub_10035632C, v8);
  sub_100535100();

  v2[7] = v4;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_100356154()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10035618C(uint64_t a1)
{
  return sub_1003562CC(a1, v1, BrightnessManager.resetBrightnessToSystemDefault());
}

Swift::Void __swiftcall BrightnessManager.resetBrightnessToSystemDefault()()
{
  uint64_t v1 = *(void **)(v0 + 16);
  Class isa = sub_100534A90().super.isa;
  NSString v3 = sub_100534CA0();
  [v1 setProperty:isa forKey:v3];

  Class v4 = sub_100534A90().super.isa;
  id v5 = sub_100534CA0();
  [v1 setProperty:v4 forKey:v5];
}

uint64_t sub_1003562CC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3();
    return swift_release();
  }
  return result;
}

uint64_t sub_10035632C(uint64_t a1)
{
  return sub_1003562CC(a1, v1, BrightnessManager.increaseBrightnessIfNeeded());
}

Swift::Void __swiftcall BrightnessManager.increaseBrightnessIfNeeded()()
{
  uint64_t v1 = *(void **)(v0 + 16);
  Class isa = sub_100534A90().super.isa;
  NSString v3 = sub_100534CA0();
  [v1 setProperty:isa forKey:v3];

  Class v4 = sub_100534A90().super.isa;
  id v5 = sub_100534CA0();
  [v1 setProperty:v4 forKey:v5];
}

uint64_t BrightnessManager.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BrightnessManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BrightnessManager()
{
  return self;
}

uint64_t ControlEventHandler.__allocating_init<A>(control:events:handler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  ControlEventHandler.init<A>(control:events:handler:)(a1, a2, a3, a4, a5);
  return v10;
}

void *ControlEventHandler.init<A>(control:events:handler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  void v5[3] = a2;
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a5;
  v11[3] = a3;
  v11[4] = a4;
  v5[4] = sub_100356744;
  v5[5] = v11;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v13 = (void *)Strong;
    swift_retain();
    [v13 addTarget:v5 action:"handleActionFromControl:" forControlEvents:a2];

    swift_release();
  }

  return v5;
}

void sub_100356688(void *a1, void (*a2)(uint64_t))
{
  uint64_t v4 = swift_dynamicCastUnknownClass();
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = a1;
    a2(v5);
  }
}

uint64_t sub_10035670C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100356744(void *a1)
{
  sub_100356688(a1, *(void (**)(uint64_t))(v1 + 24));
}

uint64_t ControlEventHandler.deinit()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    [Strong removeTarget:v0 action:"handleActionFromControl:" forControlEvents:*(void *)(v0 + 24)];
  }
  swift_unknownObjectWeakDestroy();
  swift_release();
  return v0;
}

uint64_t ControlEventHandler.__deallocating_deinit()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    [Strong removeTarget:v0 action:"handleActionFromControl:" forControlEvents:*(void *)(v0 + 24)];
  }
  swift_unknownObjectWeakDestroy();
  swift_release();

  return swift_deallocClassInstance();
}

void ControlEventHandling<>.on(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  sub_100123DA4(0, &qword_10066E9D0);
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a4;
  v11[3] = v10;
  v11[4] = a2;
  v11[5] = a3;
  swift_retain();
  id v12 = (id)sub_100535DC0();
  [v5 addAction:v12 forControlEvents:a1];
}

void sub_1003569CC(void *a1, uint64_t a2, void (*a3)(void *))
{
  if ([a1 sender])
  {
    sub_100536090();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100356DE8((uint64_t)v6, (uint64_t)v7);
  if (!v8)
  {
    sub_100356E50((uint64_t)v7);
LABEL_8:
    swift_beginAccess();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (!Strong) {
      return;
    }
    goto LABEL_9;
  }
  sub_100123DA4(0, &qword_10066EAC8);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t Strong = v5;
LABEL_9:
  a3(Strong);
}

void sub_100356AD4(void *a1, uint64_t a2, void (*a3)(void *))
{
  if ([a1 sender])
  {
    sub_100536090();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100356DE8((uint64_t)v6, (uint64_t)v7);
  if (!v8)
  {
    sub_100356E50((uint64_t)v7);
LABEL_8:
    swift_beginAccess();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (!Strong) {
      return;
    }
    goto LABEL_9;
  }
  if (!swift_dynamicCast()) {
    goto LABEL_8;
  }
  uint64_t Strong = v5;
LABEL_9:
  a3(Strong);
}

uint64_t sub_100356BD0()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_100356C10(void *a1)
{
  sub_100356AD4(a1, *(void *)(v1 + 24), *(void (**)(void *))(v1 + 32));
}

void sub_100356C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = *v3;
  sub_100123DA4(0, &qword_10066E9D0);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v9 = (void *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a2;
  v9[4] = a3;
  swift_retain();
  id v10 = (id)sub_100535DC0();
  [v7 addAction:v10 forControlEvents:a1];
}

uint64_t type metadata accessor for ControlEventHandler()
{
  return self;
}

uint64_t sub_100356D64()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100356D9C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_100356DDC(void *a1)
{
  sub_1003569CC(a1, *(void *)(v1 + 16), *(void (**)(void *))(v1 + 24));
}

uint64_t sub_100356DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000BB04(&qword_10066EAC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100356E50(uint64_t a1)
{
  uint64_t v2 = sub_10000BB04(&qword_10066EAC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Datavault.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC14MusicUtilities9Datavault_url;
  uint64_t v4 = sub_10052F360();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t Datavault.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC14MusicUtilities9Datavault_logger;
  swift_beginAccess();
  return sub_100356F7C(v3, a1);
}

uint64_t sub_100356F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000BB04(&qword_10066EAD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Datavault.logger.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC14MusicUtilities9Datavault_logger;
  swift_beginAccess();
  sub_100357040(a1, v3);
  return swift_endAccess();
}

uint64_t sub_100357040(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000BB04(&qword_10066EAD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*Datavault.logger.modify())()
{
  return j__swift_endAccess;
}

void *Datavault.__allocating_init(url:storageClass:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10052F360();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10052F310();
  unint64_t v12 = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  swift_allocObject();
  id v13 = sub_1003573D8(v10, v12, (uint64_t)v9, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return v13;
}

void *Datavault.__allocating_init(path:storageClass:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10052F360();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v17 - v13;
  sub_10052F280();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  swift_allocObject();
  uint64_t v15 = sub_1003573D8(a1, a2, (uint64_t)v12, a3, a4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  return v15;
}

void *sub_1003573D8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v83 = a5;
  unint64_t v84 = a2;
  uint64_t v74 = a4;
  uint64_t v75 = a1;
  uint64_t v76 = *v5;
  uint64_t v7 = sub_100530920();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v67 - v13;
  __chkstk_darwin(v12);
  Swift::String v16 = (char *)&v67 - v15;
  uint64_t v17 = sub_10052F360();
  uint64_t v80 = *(void *)(v17 - 8);
  uint64_t v81 = v17;
  __chkstk_darwin(v17);
  Swift::String v19 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = v5;
  Swift::String v20 = (char *)v5 + OBJC_IVAR____TtC14MusicUtilities9Datavault_logger;
  uint64_t v73 = v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))((uint64_t)v5 + OBJC_IVAR____TtC14MusicUtilities9Datavault_logger, 1, 1, v7);
  uint64_t v82 = a3;
  sub_10052F2E0();
  id v21 = [self defaultManager];
  uint64_t v79 = v19;
  Swift::String v22 = v77;
  NSFileManager.createDirectoryIfNeeded(at:)();
  if (!v22)
  {
    uint64_t v28 = v11;
    id v29 = v16;
    CGRect v77 = v20;
    uint64_t v69 = v14;
    uint64_t v30 = v73;
    uint64_t v72 = v7;
    uint64_t v70 = 0;
    v86[0] = 0;
    uint64_t v31 = v75;
    unint64_t v32 = v84;
    NSString v33 = sub_100534CA0();
    id v71 = v21;
    [v21 fileExistsAtPath:v33 isDirectory:v86];

    unint64_t v34 = v32;
    if (v86[0] == 1)
    {
      sub_100534DA0();
      sub_100534DA0();
      int v35 = rootless_check_datavault_flag();
      swift_release();
      swift_release();
      if (v35)
      {
        uint64_t v36 = v77;
        swift_beginAccess();
        unint64_t v68 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
        int v37 = v68(v36, 1, v72);
        uint64_t v24 = v78;
        if (!v37)
        {
          uint64_t v38 = v31;
          (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v29, v77, v72);
          unint64_t v39 = v84;
          swift_bridgeObjectRetain_n();
          uint64_t v40 = sub_100530900();
          os_log_type_t v41 = sub_1005357E0();
          if (os_log_type_enabled(v40, v41))
          {
            uint64_t v42 = swift_slowAlloc();
            uint64_t v67 = swift_slowAlloc();
            v85[0] = v67;
            *(_DWORD *)uint64_t v42 = 136315138;
            swift_bridgeObjectRetain();
            *(void *)(v42 + 4) = sub_10037ECEC(v38, v39, v85);
            uint64_t v31 = v38;
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v40, v41, "Found unsecure directory %s attempting to convert to datavault", (uint8_t *)v42, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v73 + 8))(v29, v72);
          }
          else
          {

            swift_bridgeObjectRelease_n();
            (*(void (**)(char *, uint64_t))(v73 + 8))(v29, v72);
            uint64_t v31 = v38;
          }
        }
        sub_100534DA0();
        sub_100534DA0();
        swift_bridgeObjectRelease();
        int v55 = rootless_convert_to_datavault();
        swift_release();
        swift_release();
        if (v55)
        {
          swift_bridgeObjectRelease();
          int v56 = sub_100530BE0();
          sub_1003582D0();
          swift_allocError();
          *(_DWORD *)uint64_t v57 = v56;
          *(unsigned char *)(v57 + 4) = 1;
          swift_willThrow();

          uint64_t v23 = v80;
          goto LABEL_4;
        }
        unint64_t v58 = v77;
        swift_beginAccess();
        uint64_t v59 = v72;
        if (v68(v58, 1, v72))
        {
          uint64_t v49 = v80;
          uint64_t v50 = v81;
          (*(void (**)(char *, uint64_t))(v80 + 8))(v79, v81);
          swift_endAccess();

          unint64_t v34 = v84;
        }
        else
        {
          uint64_t v60 = v73;
          uint64_t v61 = v69;
          (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v69, v58, v59);
          swift_endAccess();
          unint64_t v34 = v84;
          swift_bridgeObjectRetain_n();
          os_log_type_t v62 = sub_100530900();
          os_log_type_t v63 = sub_1005357E0();
          BOOL v64 = os_log_type_enabled(v62, v63);
          id v65 = v71;
          if (v64)
          {
            uint64_t v66 = swift_slowAlloc();
            v85[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v66 = 136315138;
            swift_bridgeObjectRetain();
            *(void *)(v66 + 4) = sub_10037ECEC(v31, v34, v85);
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v62, v63, "Datavault directory conversion successful %s", (uint8_t *)v66, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v60 + 8))(v69, v72);
          }
          else
          {
            swift_bridgeObjectRelease_n();

            (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v59);
          }
          uint64_t v49 = v80;
          uint64_t v50 = v81;
          (*(void (**)(char *, uint64_t))(v80 + 8))(v79, v81);
        }
LABEL_21:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32))((uint64_t)v24 + OBJC_IVAR____TtC14MusicUtilities9Datavault_url, v82, v50);
        v24[2] = v31;
        v24[3] = v34;
        return v24;
      }
      uint64_t v49 = v80;
      uint64_t v50 = v81;
      (*(void (**)(char *, uint64_t))(v80 + 8))(v79, v81);

      swift_bridgeObjectRelease();
      unint64_t v34 = v84;
    }
    else
    {
      uint64_t v43 = v77;
      swift_beginAccess();
      uint64_t v44 = v30;
      uint64_t v45 = v72;
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v43, 1, v72))
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v28, v43, v45);
        swift_bridgeObjectRetain_n();
        uint64_t v46 = sub_100530900();
        os_log_type_t v47 = sub_1005357E0();
        if (os_log_type_enabled(v46, v47))
        {
          uint64_t v48 = swift_slowAlloc();
          v85[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v48 = 136315138;
          swift_bridgeObjectRetain();
          *(void *)(v48 + 4) = sub_10037ECEC(v75, v32, v85);
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v46, v47, "Creating DataVault directory %s", (uint8_t *)v48, 0xCu);
          swift_arrayDestroy();
          unint64_t v34 = v32;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        (*(void (**)(char *, uint64_t))(v44 + 8))(v28, v45);
      }
      sub_100530C00();
      sub_100530C10();
      sub_100530C20();
      uint64_t v51 = v75;
      sub_100534DA0();
      sub_100534DA0();
      swift_bridgeObjectRelease();
      int v52 = rootless_mkdir_datavault();
      swift_release();
      swift_release();
      if (v52)
      {
        swift_bridgeObjectRelease();
        int v53 = sub_100530BE0();
        sub_1003582D0();
        swift_allocError();
        *(_DWORD *)uint64_t v54 = v53;
        *(unsigned char *)(v54 + 4) = 0;
        swift_willThrow();

        goto LABEL_3;
      }
      uint64_t v49 = v80;
      uint64_t v50 = v81;
      (*(void (**)(char *, uint64_t))(v80 + 8))(v79, v81);

      uint64_t v31 = v51;
    }
    uint64_t v24 = v78;
    goto LABEL_21;
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
LABEL_3:
  uint64_t v23 = v80;
  uint64_t v24 = v78;
LABEL_4:
  uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  uint64_t v26 = v81;
  v25(v82, v81);
  v25((uint64_t)v79, v26);
  sub_100357F54((uint64_t)v24 + OBJC_IVAR____TtC14MusicUtilities9Datavault_logger);
  swift_deallocPartialClassInstance();
  return v24;
}

uint64_t Datavault.deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC14MusicUtilities9Datavault_url;
  uint64_t v2 = sub_10052F360();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100357F54(v0 + OBJC_IVAR____TtC14MusicUtilities9Datavault_logger);
  return v0;
}

uint64_t sub_100357F54(uint64_t a1)
{
  uint64_t v2 = sub_10000BB04(&qword_10066EAD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Datavault.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC14MusicUtilities9Datavault_url;
  uint64_t v2 = sub_10052F360();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100357F54(v0 + OBJC_IVAR____TtC14MusicUtilities9Datavault_logger);

  return swift_deallocClassInstance();
}

uint64_t sub_10035806C()
{
  return type metadata accessor for Datavault();
}

uint64_t type metadata accessor for Datavault()
{
  uint64_t result = qword_10066EB00;
  if (!qword_10066EB00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1003580C0()
{
  sub_10052F360();
  if (v0 <= 0x3F)
  {
    sub_100358198();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_100358198()
{
  if (!qword_10066EB10)
  {
    sub_100530920();
    unint64_t v0 = sub_100535F20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10066EB10);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for Datavault.Error(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Datavault.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Datavault.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 5) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 5) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100358290(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 4) <= 1u) {
    return *(unsigned __int8 *)(a1 + 4);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1003582A8(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 4) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Datavault.Error()
{
  return &type metadata for Datavault.Error;
}

unint64_t sub_1003582D0()
{
  unint64_t result = qword_10066EBA0;
  if (!qword_10066EBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066EBA0);
  }
  return result;
}

id sub_1003583F4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DisplayLinkHandler();
  return [super dealloc];
}

uint64_t sub_100358440()
{
  uint64_t result = swift_slowAlloc();
  qword_10066EBA8 = result;
  return result;
}

id CADisplayLink.init(handler:)(uint64_t a1, uint64_t a2)
{
  int v4 = (objc_class *)type metadata accessor for DisplayLinkHandler();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  uint64_t v6 = &v5[OBJC_IVAR____TtC14MusicUtilitiesP33_A1FC62D80C043A876151FA559C82DA5918DisplayLinkHandler__handler];
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  v14.receiver = v5;
  v14.super_class = v4;
  swift_retain();
  [super init];
  id v8 = [swift_getObjCClassFromMetadata() displayLinkWithTarget:v7 selector:"handleDisplayLinkFired:" v14.receiver, v14.super_class];
  uint64_t v9 = qword_10066E318;
  id v10 = v8;
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v11 = (const void *)qword_10066EBA8;
  id v12 = v7;
  objc_setAssociatedObject(v10, v11, v12, (void *)1);

  swift_release();
  return v10;
}

uint64_t type metadata accessor for DisplayLinkHandler()
{
  return self;
}

uint64_t EdgePairSequence.next()@<X0>(uint64_t a1@<X8>)
{
  sub_100535200();
  swift_getWitnessTable();
  if (sub_100535610())
  {
    sub_100535F20();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(a1, 1, 1, TupleTypeMetadata2);
  }
  else
  {
    swift_getWitnessTable();
    sub_100535680();
    sub_100535F20();
    uint64_t v4 = swift_getTupleTypeMetadata2();
    swift_getWitnessTable();
    sub_100535690();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, 0, 1, v4);
  }
}

uint64_t sub_100358758()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for EdgePairSequence()
{
  return sub_100086CCC();
}

uint64_t static Task<>.sleep(for:)(double a1)
{
  *(double *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1003587AC, 0, 0);
}

uint64_t sub_1003587AC(unint64_t a1)
{
  double v2 = *(double *)(v1 + 16) * 1000000000.0;
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v2 <= -1.0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v2 >= 1.84467441e19)
  {
LABEL_9:
    __break(1u);
    return static Task<>.sleep(nanoseconds:)(a1);
  }
  unint64_t v3 = (unint64_t)v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1000F6E78;
  a1 = v3;
  return static Task<>.sleep(nanoseconds:)(a1);
}

uint64_t static Task<>.delayed(by:priority:task:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v10 = sub_10000BB04(&qword_10066EC68);
  __chkstk_darwin(v10 - 8);
  id v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100358984(a1, (uint64_t)v12);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + 24) = 0;
  *(void *)(v13 + 32) = a4;
  *(double *)(v13 + 40) = a5;
  *(void *)(v13 + 48) = a2;
  *(void *)(v13 + 56) = a3;
  swift_retain();
  return sub_100358DA8((uint64_t)v12, (uint64_t)&unk_10066EC78, v13);
}

uint64_t sub_100358984(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000BB04(&qword_10066EC68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003589EC(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 32) = a5;
  *(void *)(v6 + 40) = a6;
  *(double *)(v6 + 24) = a2;
  *(void *)(v6 + 16) = a1;
  return _swift_task_switch(sub_100358A14, 0, 0);
}

uint64_t sub_100358A14(unint64_t a1)
{
  double v2 = *(double *)(v1 + 24) * 1000000000.0;
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v2 <= -1.0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v2 >= 1.84467441e19)
  {
LABEL_9:
    __break(1u);
    return static Task<>.sleep(nanoseconds:)(a1);
  }
  unint64_t v3 = (unint64_t)v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 48) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100358AF8;
  a1 = v3;
  return static Task<>.sleep(nanoseconds:)(a1);
}

uint64_t sub_100358AF8()
{
  double v2 = (void *)*v1;
  unint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = (uint64_t (*)(void))v3[1];
    return v4();
  }
  else
  {
    id v8 = (uint64_t (*)(uint64_t))(v2[4] + *(int *)v2[4]);
    uint64_t v6 = (void *)swift_task_alloc();
    v2[7] = v6;
    *uint64_t v6 = v3;
    v6[1] = sub_10009FE9C;
    uint64_t v7 = v2[2];
    return v8(v7);
  }
}

uint64_t sub_100358CA4()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100358CE4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 48);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_10000F280;
  *(_OWORD *)(v5 + 32) = v6;
  *(void *)(v5 + 24) = v4;
  *(void *)(v5 + 16) = a1;
  return _swift_task_switch(sub_100358A14, 0, 0);
}

uint64_t sub_100358DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_100535300();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1005352F0();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_100359010(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_100535240();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t static Task<>.userFeedbackDelayed(task:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000BB04(&qword_10066EC68);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005352D0();
  uint64_t v9 = sub_100535300();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
  uint64_t v10 = static Task<>.delayed(by:priority:task:)((uint64_t)v8, a1, a2, a3, 2.0);
  sub_100359010((uint64_t)v8);
  return v10;
}

uint64_t sub_100359010(uint64_t a1)
{
  uint64_t v2 = sub_10000BB04(&qword_10066EC68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id CASpringAnimation.springParameters.getter()
{
  [v0 mass];
  double v2 = v1;
  [v0 stiffness];
  double v4 = v3;
  [v0 damping];
  double v6 = v5;
  id v7 = objc_allocWithZone((Class)UISpringTimingParameters);

  return [v7 initWithMass:v2 stiffness:v4 damping:v6 initialVelocity:0.0, 0.0];
}

void CASpringAnimation.springParameters.setter(void *a1)
{
  [a1 mass];
  [v1 setMass:];
  [a1 stiffness];
  [v1 setStiffness:];
  [a1 damping];
  [v1 setDamping:];
  [v1 setInitialVelocity:0.0];
}

void (*CASpringAnimation.springParameters.modify(void *a1))(uint64_t a1, char a2)
{
  a1[1] = v1;
  [v1 mass];
  double v4 = v3;
  [v1 stiffness];
  double v6 = v5;
  [v1 damping];
  *a1 = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:v4 stiffness:v6 damping:v7 initialVelocity:0.0];
  return sub_100359268;
}

void sub_100359268(uint64_t a1, char a2)
{
  id v2 = *(id *)a1;
  double v3 = *(void **)(a1 + 8);
  id v5 = *(id *)a1;
  if (a2)
  {
    id v4 = v2;
    [v4 mass];
    [v3 setMass:];
    [v4 stiffness];
    [v3 setStiffness:];
    [v4 damping];
    [v3 setDamping:];
    [v3 setInitialVelocity:0.0];
  }
  else
  {
    [v2 mass];
    [v3 setMass:];
    [v5 stiffness];
    [v3 setStiffness:];
    [v5 damping];
    [v3 setDamping:];
    [v3 setInitialVelocity:0.0];
  }
}

void static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, double a7)
{
  [a1 settlingDuration];
  double v15 = v14;
  [a1 mass];
  double v17 = v16;
  [a1 stiffness];
  double v19 = v18;
  [a1 damping];
  double v21 = v20;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v23 = _NSConcreteStackBlock;
  uint64_t v24 = 1107296256;
  uint64_t v25 = sub_1001CB5A0;
  uint64_t v26 = &unk_10062D608;
  Swift::String v22 = _Block_copy(&v23);
  swift_retain();
  swift_release();
  if (a5)
  {
    uint64_t v27 = a5;
    uint64_t v28 = a6;
    uint64_t v23 = _NSConcreteStackBlock;
    uint64_t v24 = 1107296256;
    uint64_t v25 = sub_100359584;
    uint64_t v26 = &unk_10062D630;
    a5 = _Block_copy(&v23);
    swift_retain();
    swift_release();
  }
  [self _animateUsingSpringWithDuration:a2 delay:v22 options:a5 mass:v15 stiffness:a7 damping:v17 initialVelocity:v19 animations:v21 completion:0.0];
  _Block_release(a5);
  _Block_release(v22);
}

uint64_t sub_10035956C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10035957C()
{
  return swift_release();
}

uint64_t sub_100359584(uint64_t a1, uint64_t a2)
{
  double v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

id static UIView.animate(withTimingFunction:duration:delay:options:animations:completion:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, double a7, double a8)
{
  double v16 = self;
  [v16 begin];
  [v16 setAnimationTimingFunction:a1];
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  double v19 = _NSConcreteStackBlock;
  uint64_t v20 = 1107296256;
  double v21 = sub_1001CB5A0;
  Swift::String v22 = &unk_10062D658;
  double v17 = _Block_copy(&v19);
  swift_retain();
  swift_release();
  if (a5)
  {
    uint64_t v23 = a5;
    uint64_t v24 = a6;
    double v19 = _NSConcreteStackBlock;
    uint64_t v20 = 1107296256;
    double v21 = sub_100359584;
    Swift::String v22 = &unk_10062D680;
    a5 = _Block_copy(&v19);
    swift_retain();
    swift_release();
  }
  [self animateWithDuration:a2 delay:v17 options:a5 animations:a7 completion:a8];
  _Block_release(a5);
  _Block_release(v17);
  return [v16 commit];
}

void sub_10035978C(void *a1)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating))
  {
    [a1 duration];
    uint64_t v2 = v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animationDuration;
    *(void *)uint64_t v2 = v3;
    *(unsigned char *)(v2 + 8) = 0;
    CFTimeInterval v4 = CACurrentMediaTime();
    uint64_t v5 = v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_startTime;
    *(CFTimeInterval *)uint64_t v5 = v4;
    *(unsigned char *)(v5 + 8) = 0;
    id v6 = [self displayLinkWithTarget:v1 selector:"displayLinkFiredWithDisplayLink:"];
    uint64_t v7 = OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_displayLink;
    uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_displayLink);
    *(void *)(v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_displayLink) = v6;

    uint64_t v9 = *(void **)(v1 + v7);
    if (v9)
    {
      uint64_t v10 = self;
      id v11 = v9;
      id v12 = [v10 currentRunLoop];
      [v11 addToRunLoop:v12 forMode:NSDefaultRunLoopMode];
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_100359998(void *a1)
{
  id result = [a1 timestamp];
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_startTime + 8))
  {
    __break(1u);
    goto LABEL_9;
  }
  CFTimeInterval v4 = *(void (**)(uint64_t, double))(v1
                                              + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating);
  if (!v4) {
    return result;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animationDuration + 8))
  {
LABEL_9:
    __break(1u);
    return result;
  }
  double v5 = (v3 - *(double *)(v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_startTime))
     / *(double *)(v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animationDuration);
  uint64_t v6 = swift_retain();
  v4(v6, v5);

  return (id)sub_100121638((uint64_t)v4);
}

uint64_t CAAnimation.progress.getter()
{
  return sub_100359E6C(&OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating, (void (*)(void, void))sub_10035B74C);
}

uint64_t type metadata accessor for CAAnimationCompletionHandler()
{
  return self;
}

id CAAnimation.progress.setter(uint64_t a1, uint64_t a2)
{
  double v3 = v2;
  id result = [v3 delegate];
  if (result)
  {
    type metadata accessor for CAAnimationCompletionHandler();
    uint64_t v7 = swift_dynamicCastClass();
    if (v7)
    {
      uint64_t v8 = (uint64_t *)(v7 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating);
      uint64_t v9 = *(void *)(v7 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating);
      *uint64_t v8 = a1;
      v8[1] = a2;
      sub_100121638(v9);
      return (id)swift_unknownObjectRelease();
    }
    id result = (id)swift_unknownObjectRelease();
  }
  if (a1)
  {
    uint64_t v10 = (objc_class *)type metadata accessor for CAAnimationCompletionHandler();
    id v11 = (char *)objc_allocWithZone(v10);
    id v12 = &v11[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating];
    *(void *)id v12 = 0;
    *((void *)v12 + 1) = 0;
    uint64_t v13 = &v11[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion];
    *(void *)uint64_t v13 = 0;
    *((void *)v13 + 1) = 0;
    double v14 = &v11[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_startTime];
    *(void *)double v14 = 0;
    v14[8] = 1;
    double v15 = &v11[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animationDuration];
    *(void *)double v15 = 0;
    v15[8] = 1;
    *(void *)&v11[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_displayLink] = 0;
    v22.receiver = v11;
    v22.super_class = v10;
    swift_retain_n();
    double v16 = (char *)[super init];
    double v17 = (uint64_t *)&v16[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating];
    uint64_t v18 = *(void *)&v16[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating];
    uint64_t *v17 = a1;
    v17[1] = a2;
    sub_100121638(v18);
    double v19 = &v16[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion];
    uint64_t v20 = *(void *)&v16[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion];
    *(void *)double v19 = 0;
    *((void *)v19 + 1) = 0;
    sub_100121638(v20);
    double v21 = v16;
    [v3 setDelegate:v21];
    sub_100121638(a1);

    return (id)sub_100121638(a1);
  }
  return result;
}

uint64_t (*CAAnimation.progress.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = (uint64_t)v1;
  if ([v1 delegate])
  {
    type metadata accessor for CAAnimationCompletionHandler();
    uint64_t v3 = swift_dynamicCastClass();
    if (v3)
    {
      uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating);
      uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating + 8);
      sub_100121440(v4);
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v5 = 0;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  *a1 = v4;
  a1[1] = v5;
  return sub_100359E0C;
}

uint64_t sub_100359E0C(uint64_t *a1, char a2)
{
  return sub_10035A1C0(a1, a2, (uint64_t (*)(uint64_t, uint64_t))CAAnimation.progress.setter, (void (*)(uint64_t, uint64_t))sub_10035B74C, (uint64_t (*)(uint64_t, uint64_t))sub_10035B748);
}

uint64_t CAAnimation.completion.getter()
{
  return sub_100359E6C(&OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion, (void (*)(void, void))sub_100121440);
}

uint64_t sub_100359E6C(void *a1, void (*a2)(void, void))
{
  if (![v2 delegate]) {
    return 0;
  }
  type metadata accessor for CAAnimationCompletionHandler();
  uint64_t v5 = swift_dynamicCastClass();
  if (v5)
  {
    uint64_t v6 = (void *)(v5 + *a1);
    uint64_t v7 = *v6;
    a2(*v6, v6[1]);
  }
  else
  {
    uint64_t v7 = 0;
  }
  swift_unknownObjectRelease();
  return v7;
}

id CAAnimation.completion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id result = [v3 delegate];
  if (result)
  {
    type metadata accessor for CAAnimationCompletionHandler();
    uint64_t v7 = swift_dynamicCastClass();
    if (v7)
    {
      uint64_t v8 = (uint64_t *)(v7 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion);
      uint64_t v9 = *(void *)(v7 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion);
      *uint64_t v8 = a1;
      v8[1] = a2;
      sub_100121638(v9);
      return (id)swift_unknownObjectRelease();
    }
    id result = (id)swift_unknownObjectRelease();
  }
  if (a1)
  {
    uint64_t v10 = (objc_class *)type metadata accessor for CAAnimationCompletionHandler();
    id v11 = (char *)objc_allocWithZone(v10);
    id v12 = &v11[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating];
    *(void *)id v12 = 0;
    *((void *)v12 + 1) = 0;
    uint64_t v13 = &v11[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion];
    *(void *)uint64_t v13 = 0;
    *((void *)v13 + 1) = 0;
    double v14 = &v11[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_startTime];
    *(void *)double v14 = 0;
    v14[8] = 1;
    double v15 = &v11[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animationDuration];
    *(void *)double v15 = 0;
    v15[8] = 1;
    *(void *)&v11[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_displayLink] = 0;
    v22.receiver = v11;
    v22.super_class = v10;
    swift_retain_n();
    double v16 = [v22 init];
    double v17 = &v16[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating];
    uint64_t v18 = *(void *)&v16[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating];
    *(void *)double v17 = 0;
    *((void *)v17 + 1) = 0;
    sub_100121638(v18);
    double v19 = (uint64_t *)&v16[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion];
    uint64_t v20 = *(void *)&v16[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion];
    uint64_t *v19 = a1;
    v19[1] = a2;
    sub_100121638(v20);
    double v21 = v16;
    [v3 setDelegate:v21];
    sub_100121638(a1);

    return (id)sub_100121638(a1);
  }
  return result;
}

uint64_t (*CAAnimation.completion.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = (uint64_t)v1;
  if ([v1 delegate])
  {
    type metadata accessor for CAAnimationCompletionHandler();
    uint64_t v3 = swift_dynamicCastClass();
    if (v3)
    {
      uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion);
      uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion + 8);
      sub_100121440(v4);
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v5 = 0;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  *a1 = v4;
  a1[1] = v5;
  return sub_10035A180;
}

uint64_t sub_10035A180(uint64_t *a1, char a2)
{
  return sub_10035A1C0(a1, a2, (uint64_t (*)(uint64_t, uint64_t))CAAnimation.completion.setter, (void (*)(uint64_t, uint64_t))sub_100121440, (uint64_t (*)(uint64_t, uint64_t))sub_100121638);
}

uint64_t sub_10035A1C0(uint64_t *a1, char a2, uint64_t (*a3)(uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  if ((a2 & 1) == 0) {
    return a3(*a1, v7);
  }
  a4(*a1, v7);
  a3(v6, v7);

  return a5(v6, v7);
}

uint64_t CALayer.addAsyncAnimation(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = sub_1005352C0();
  v4[7] = sub_1005352B0();
  uint64_t v6 = sub_100535240();
  v4[8] = v6;
  v4[9] = v5;
  return _swift_task_switch(sub_10035A304, v6, v5);
}

{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned char v11[16];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  uint64_t v7 = sub_10000BB04(&qword_10066ECB0);
  __chkstk_darwin(v7);
  id v12 = a1;
  uint64_t v13 = v3;
  double v14 = a2;
  double v15 = a3;
  (*(void (**)(unsigned char *, void))(v9 + 104))(&v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:));
  return sub_100535340();
}

uint64_t sub_10035A304()
{
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v4 = v0[2];
  uint64_t v5 = sub_1005352B0();
  v0[10] = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[11] = v6;
  _OWORD v6[2] = v4;
  v6[3] = v1;
  v6[4] = v3;
  uint64_t v6[5] = v2;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[12] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_10035A42C;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 13, v5, &protocol witness table for MainActor, 0xD00000000000001CLL, 0x80000001005658A0, sub_10035AADC, v6, &type metadata for Bool);
}

uint64_t sub_10035A42C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_10035A58C, v3, v2);
}

uint64_t sub_10035A58C()
{
  swift_release();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 104);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

id sub_10035A5F0(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v40 = a3;
  uint64_t v8 = sub_10000BB04(&qword_10066ED58);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v12 + v11, (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  CAAnimation.completion.setter((uint64_t)sub_10035B6BC, v12);
  uint64_t v13 = self;
  [v13 begin];
  [v13 setDisableActions:1];
  if (a5) {
    NSString v14 = sub_100534CA0();
  }
  else {
    NSString v14 = 0;
  }
  [v40 addAnimation:a2 forKey:v14];

  self;
  uint64_t v15 = swift_dynamicCastObjCClass();
  if (v15)
  {
    if (a5)
    {
      double v16 = (void *)v15;
      id v17 = a2;
      id v18 = [v16 toValue];
      NSString v19 = sub_100534CA0();
      [v40 setValue:v18 forKey:v19];

      swift_unknownObjectRelease();
    }
    return [v13 commit];
  }
  self;
  uint64_t v20 = swift_dynamicCastObjCClass();
  if (!v20) {
    return [v13 commit];
  }
  double v21 = (void *)v20;
  id v22 = a2;
  id result = [v21 animations];
  unint64_t v24 = (unint64_t)_swiftEmptyArrayStorage;
  if (result)
  {
    uint64_t v25 = result;
    sub_10035B5E4();
    unint64_t v26 = sub_1005350E0();

    unint64_t v41 = (unint64_t)_swiftEmptyArrayStorage;
    if (v26 >> 62)
    {
      swift_bridgeObjectRetain();
      id result = (id)sub_100536470();
      uint64_t v27 = (uint64_t)result;
      if (result) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id result = (id)swift_bridgeObjectRetain();
      if (v27)
      {
LABEL_11:
        if (v27 < 1) {
          goto LABEL_41;
        }
        for (uint64_t i = 0; i != v27; ++i)
        {
          if ((v26 & 0xC000000000000001) != 0) {
            id v29 = (id)sub_100536210();
          }
          else {
            id v29 = *(id *)(v26 + 8 * i + 32);
          }
          uint64_t v30 = v29;
          self;
          if (swift_dynamicCastObjCClass())
          {
            sub_1005350A0();
            if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_100535130();
            }
            sub_100535190();
            sub_100535100();
          }
          else
          {
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v24 = v41;
        goto LABEL_25;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v24 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_25:
    id result = (id)swift_bridgeObjectRelease();
  }
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_100536470();
    id result = (id)swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_28;
    }
    goto LABEL_38;
  }
  uint64_t v31 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v31)
  {
LABEL_38:

    swift_bridgeObjectRelease();
    return [v13 commit];
  }
LABEL_28:
  id v38 = v22;
  unint64_t v39 = v13;
  if (v31 >= 1)
  {
    for (uint64_t j = 0; j != v31; ++j)
    {
      if ((v24 & 0xC000000000000001) != 0) {
        id v33 = (id)sub_100536210();
      }
      else {
        id v33 = *(id *)(v24 + 8 * j + 32);
      }
      unint64_t v34 = v33;
      id v35 = [v33 keyPath:v38];
      if (v35)
      {
        id v36 = v35;
        id v37 = [v34 toValue];
        [v40 setValue:v37 forKey:v36];

        swift_unknownObjectRelease();
        unint64_t v34 = v36;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = v39;
    return [v13 commit];
  }
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

id sub_10035AADC(uint64_t a1)
{
  return sub_10035A5F0(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

id sub_10035AC00(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v45 = a5;
  id v46 = a3;
  uint64_t v42 = a4;
  id v44 = a1;
  uint64_t v7 = sub_10000BB04(&qword_10066ED40);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = *(void (**)(char *, void *, uint64_t))(v8 + 16);
  v43(v10, a1, v7);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  v13(v12 + v11, v10, v7);
  CAAnimation.progress.setter((uint64_t)sub_10035B4F0, v12);
  v43(v10, v44, v7);
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = v7;
  double v16 = v45;
  v13(v14 + v11, v10, v15);
  CAAnimation.completion.setter((uint64_t)sub_10035B570, v14);
  id v17 = self;
  [v17 begin:v42];
  [v17 setDisableActions:1];
  if (v16) {
    NSString v18 = sub_100534CA0();
  }
  else {
    NSString v18 = 0;
  }
  [v46 addAnimation:a2 forKey:v18];

  self;
  uint64_t v19 = swift_dynamicCastObjCClass();
  if (v19)
  {
    if (v16)
    {
      uint64_t v20 = (void *)v19;
      id v21 = a2;
      id v22 = [v20 toValue];
      NSString v23 = sub_100534CA0();
      [v46 setValue:v22 forKey:v23];

      swift_unknownObjectRelease();
    }
    return [v17 commit];
  }
  self;
  uint64_t v24 = swift_dynamicCastObjCClass();
  if (!v24) {
    return [v17 commit];
  }
  uint64_t v25 = (void *)v24;
  id v26 = a2;
  id result = [v25 animations];
  unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
  if (result)
  {
    id v29 = result;
    sub_10035B5E4();
    unint64_t v30 = sub_1005350E0();

    unint64_t v47 = (unint64_t)_swiftEmptyArrayStorage;
    if (v30 >> 62)
    {
      swift_bridgeObjectRetain();
      id result = (id)sub_100536470();
      uint64_t v31 = (uint64_t)result;
      if (result) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id result = (id)swift_bridgeObjectRetain();
      if (v31)
      {
LABEL_11:
        if (v31 < 1) {
          goto LABEL_41;
        }
        for (uint64_t i = 0; i != v31; ++i)
        {
          if ((v30 & 0xC000000000000001) != 0) {
            id v33 = (id)sub_100536210();
          }
          else {
            id v33 = *(id *)(v30 + 8 * i + 32);
          }
          unint64_t v34 = v33;
          self;
          if (swift_dynamicCastObjCClass())
          {
            sub_1005350A0();
            if (*(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_100535130();
            }
            sub_100535190();
            sub_100535100();
          }
          else
          {
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v28 = v47;
        goto LABEL_25;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_25:
    id result = (id)swift_bridgeObjectRelease();
  }
  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_100536470();
    id result = (id)swift_bridgeObjectRelease();
    if (v35) {
      goto LABEL_28;
    }
    goto LABEL_38;
  }
  uint64_t v35 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v35)
  {
LABEL_38:

    swift_bridgeObjectRelease();
    return [v17 commit];
  }
LABEL_28:
  id v44 = v26;
  uint64_t v45 = v17;
  if (v35 >= 1)
  {
    for (uint64_t j = 0; j != v35; ++j)
    {
      if ((v28 & 0xC000000000000001) != 0) {
        id v37 = (id)sub_100536210();
      }
      else {
        id v37 = *(id *)(v28 + 8 * j + 32);
      }
      id v38 = v37;
      id v39 = [v37 keyPath];
      if (v39)
      {
        id v40 = v39;
        id v41 = [v38 toValue];
        [v46 setValue:v41 forKey:v40];

        swift_unknownObjectRelease();
        id v38 = v40;
      }
    }
    swift_bridgeObjectRelease();
    id v17 = v45;
    return [v17 commit];
  }
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

id sub_10035B168(void *a1)
{
  return sub_10035AC00(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_10035B174(double a1)
{
  uint64_t v2 = sub_10000BB04(&qword_10066ED50);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = a1;
  char v8 = 0;
  sub_10000BB04(&qword_10066ED40);
  sub_100535320();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_10035B268(char a1)
{
  uint64_t v2 = sub_10000BB04(&qword_10066ED50);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = a1 & 1;
  char v7 = 1;
  sub_10000BB04(&qword_10066ED40);
  sub_100535320();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_100535330();
}

id static CATransaction.performWithoutAnimation(_:)(void (*a1)(id))
{
  uint64_t v2 = self;
  [v2 begin];
  a1([v2 setDisableActions:1]);

  return [v2 commit];
}

uint64_t _s15AnimationStatusOwCP(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)id result = v2;
  return result;
}

ValueMetadata *type metadata accessor for CALayer.AnimationStatus()
{
  return &type metadata for CALayer.AnimationStatus;
}

void sub_10035B414(char a1)
{
  uint64_t v3 = OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_displayLink;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_displayLink);
  if (v4)
  {
    [v4 invalidate];
    uint64_t v5 = *(void **)(v1 + v3);
    *(void *)(v1 + v3) = 0;
  }
  uint64_t v6 = v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animationDuration;
  *(void *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 8) = 1;
  uint64_t v7 = v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_startTime;
  *(void *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 8) = 1;
  char v8 = *(void (**)(void))(v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion);
  if (v8)
  {
    swift_retain();
    v8(a1 & 1);
    sub_100121638((uint64_t)v8);
  }
}

uint64_t sub_10035B4E4()
{
  return sub_10035B630(&qword_10066ED40);
}

uint64_t sub_10035B4F0(double a1)
{
  sub_10000BB04(&qword_10066ED40);

  return sub_10035B174(a1);
}

uint64_t sub_10035B564()
{
  return sub_10035B630(&qword_10066ED40);
}

void sub_10035B570(char a1)
{
  sub_10000BB04(&qword_10066ED40);

  sub_10035B268(a1);
}

unint64_t sub_10035B5E4()
{
  unint64_t result = qword_10066ED48;
  if (!qword_10066ED48)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10066ED48);
  }
  return result;
}

uint64_t sub_10035B624()
{
  return sub_10035B630(&qword_10066ED58);
}

uint64_t sub_10035B630(uint64_t *a1)
{
  uint64_t v2 = sub_10000BB04(a1);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80)), v2);

  return swift_deallocObject();
}

uint64_t sub_10035B6BC()
{
  return sub_100535260();
}

double Int.seconds.getter(uint64_t a1)
{
  return (double)a1;
}

double CGSize.nonNegative()(double result)
{
  if (result < 0.0) {
    return 0.0;
  }
  return result;
}

double static CGSize.* infix(_:_:)(double a1, double a2, double a3)
{
  return a1 * a3;
}

CGFloat static CGAffineTransform.+ infix(_:_:)@<D0>(_OWORD *a1@<X0>, _OWORD *a2@<X1>, _OWORD *a3@<X8>)
{
  long long v4 = a1[1];
  *(_OWORD *)&t1.a = *a1;
  *(_OWORD *)&t1.c = v4;
  *(_OWORD *)&t1.tx = a1[2];
  long long v5 = a2[1];
  *(_OWORD *)&t2.a = *a2;
  *(_OWORD *)&t2.c = v5;
  *(_OWORD *)&t2.tx = a2[2];
  CGAffineTransformConcat(&v9, &t1, &t2);
  CGFloat result = v9.a;
  long long v7 = *(_OWORD *)&v9.c;
  long long v8 = *(_OWORD *)&v9.tx;
  *a3 = *(_OWORD *)&v9.a;
  a3[1] = v7;
  a3[2] = v8;
  return result;
}

void sub_10035B7FC()
{
  static CGPoint.topLeft = 0;
  *(void *)algn_10067B248 = 0;
}

uint64_t *CGPoint.topLeft.unsafeMutableAddressor()
{
  if (qword_10066E320 != -1) {
    swift_once();
  }
  return &static CGPoint.topLeft;
}

double static CGPoint.topLeft.getter()
{
  if (qword_10066E320 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return *(double *)&static CGPoint.topLeft;
}

uint64_t static CGPoint.topLeft.setter(double a1, double a2)
{
  if (qword_10066E320 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  static CGPoint.topLeft = *(void *)&a1;
  *(double *)algn_10067B248 = a2;
  return result;
}

uint64_t (*static CGPoint.topLeft.modify())()
{
  if (qword_10066E320 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t *CGPoint.topCenter.unsafeMutableAddressor()
{
  return &static CGPoint.topCenter;
}

double static CGPoint.topCenter.getter()
{
  return *(double *)&static CGPoint.topCenter;
}

uint64_t static CGPoint.topCenter.setter(double a1, double a2)
{
  uint64_t result = swift_beginAccess();
  static CGPoint.topCenter = *(void *)&a1;
  *(double *)algn_10066EDC8 = a2;
  return result;
}

uint64_t (*static CGPoint.topCenter.modify())()
{
  return j_j__swift_endAccess;
}

double sub_10035BAD4()
{
  double result = 1.0;
  static CGPoint.topRight = xmmword_10054DC60;
  return result;
}

long long *CGPoint.topRight.unsafeMutableAddressor()
{
  if (qword_10066E328 != -1) {
    swift_once();
  }
  return &static CGPoint.topRight;
}

double static CGPoint.topRight.getter()
{
  return sub_10035C1B8(&qword_10066E328, (uint64_t)&static CGPoint.topRight);
}

uint64_t static CGPoint.topRight.setter(double a1, double a2)
{
  return sub_10035C240(&qword_10066E328, (double *)&static CGPoint.topRight, (double *)&static CGPoint.topRight + 1, a1, a2);
}

uint64_t (*static CGPoint.topRight.modify())()
{
  if (qword_10066E328 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t *CGPoint.centerLeft.unsafeMutableAddressor()
{
  return &static CGPoint.centerLeft;
}

double static CGPoint.centerLeft.getter()
{
  return *(double *)&static CGPoint.centerLeft;
}

uint64_t static CGPoint.centerLeft.setter(double a1, double a2)
{
  uint64_t result = swift_beginAccess();
  static CGPoint.centerLeft = *(void *)&a1;
  unk_10066EDD8 = *(void *)&a2;
  return result;
}

uint64_t (*static CGPoint.centerLeft.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t *CGPoint.center.unsafeMutableAddressor()
{
  return &static CGPoint.center;
}

double static CGPoint.center.getter()
{
  return *(double *)&static CGPoint.center;
}

uint64_t static CGPoint.center.setter(double a1, double a2)
{
  uint64_t result = swift_beginAccess();
  static CGPoint.center = *(void *)&a1;
  unk_10066EDE8 = *(void *)&a2;
  return result;
}

uint64_t (*static CGPoint.center.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t *CGPoint.centerRight.unsafeMutableAddressor()
{
  return &static CGPoint.centerRight;
}

double static CGPoint.centerRight.getter()
{
  return *(double *)&static CGPoint.centerRight;
}

uint64_t static CGPoint.centerRight.setter(double a1, double a2)
{
  uint64_t result = swift_beginAccess();
  static CGPoint.centerRight = *(void *)&a1;
  unk_10066EDF8 = *(void *)&a2;
  return result;
}

uint64_t (*static CGPoint.centerRight.modify())()
{
  return j_j__swift_endAccess;
}

double sub_10035BF00()
{
  double result = 0.0;
  static CGPoint.bottomLeft = xmmword_10053E020;
  return result;
}

long long *CGPoint.bottomLeft.unsafeMutableAddressor()
{
  if (qword_10066E330 != -1) {
    swift_once();
  }
  return &static CGPoint.bottomLeft;
}

double static CGPoint.bottomLeft.getter()
{
  return sub_10035C1B8(&qword_10066E330, (uint64_t)&static CGPoint.bottomLeft);
}

uint64_t static CGPoint.bottomLeft.setter(double a1, double a2)
{
  return sub_10035C240(&qword_10066E330, (double *)&static CGPoint.bottomLeft, (double *)&static CGPoint.bottomLeft + 1, a1, a2);
}

uint64_t (*static CGPoint.bottomLeft.modify())()
{
  if (qword_10066E330 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t *CGPoint.bottomCenter.unsafeMutableAddressor()
{
  return &static CGPoint.bottomCenter;
}

double static CGPoint.bottomCenter.getter()
{
  return *(double *)&static CGPoint.bottomCenter;
}

uint64_t static CGPoint.bottomCenter.setter(double a1, double a2)
{
  uint64_t result = swift_beginAccess();
  static CGPoint.bottomCenter = *(void *)&a1;
  unk_10066EE08 = *(void *)&a2;
  return result;
}

uint64_t (*static CGPoint.bottomCenter.modify())()
{
  return j_j__swift_endAccess;
}

__n128 sub_10035C134()
{
  __asm { FMOV            V0.2D, #1.0 }
  static CGPoint.bottomRight = (__int128)result;
  return result;
}

long long *CGPoint.bottomRight.unsafeMutableAddressor()
{
  if (qword_10066E338 != -1) {
    swift_once();
  }
  return &static CGPoint.bottomRight;
}

double static CGPoint.bottomRight.getter()
{
  return sub_10035C1B8(&qword_10066E338, (uint64_t)&static CGPoint.bottomRight);
}

double sub_10035C1B8(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return *(double *)a2;
}

uint64_t static CGPoint.bottomRight.setter(double a1, double a2)
{
  return sub_10035C240(&qword_10066E338, (double *)&static CGPoint.bottomRight, (double *)&static CGPoint.bottomRight + 1, a1, a2);
}

uint64_t sub_10035C240(void *a1, double *a2, double *a3, double a4, double a5)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  *a2 = a4;
  *a3 = a5;
  return result;
}

uint64_t (*static CGPoint.bottomRight.modify())()
{
  if (qword_10066E338 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t CGRect.outset(by:for:)()
{
  return sub_100535BC0();
}

CTFrameRef CTFramesetterRef.createFrame(_:)(double a1, double a2, double a3, double a4)
{
  long long v5 = CGPathCreateWithRect(*(CGRect *)&a1, 0);
  v8.location = 0;
  v8.length = 0;
  CTFrameRef Frame = CTFramesetterCreateFrame(v4, v8, v5, 0);

  return Frame;
}

double CTFramesetterRef.suggestedFrameSize(constraints:)(double a1, double a2)
{
  v4.location = 0;
  v4.length = 0;
  *(void *)&double result = *(_OWORD *)&CTFramesetterSuggestFrameSizeWithConstraints(v2, v4, 0, *(CGSize *)&a1, 0);
  return result;
}

Swift::Void __swiftcall CTFrameRef.draw(in:)(CGContextRef in)
{
  CTFrameDraw(v1, in);
}

void *CTFrameRef.lines.getter()
{
  return sub_10035CE34((uint64_t (*)(uint64_t))&_CTFrameGetLines, type metadata accessor for CTLine);
}

CGPoint **CTFrameRef.lineOrigins.getter()
{
  CFArrayRef v1 = CTFrameGetLines(v0);
  type metadata accessor for CTLine(0);
  sub_1005350D0();

  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = (CGPoint **)sub_100536470();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(CGPoint ***)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t v3 = v0;
  CFRange v4 = sub_10035EAE0(v2, v3);

  return v4;
}

CGPoint **sub_10035C4C4(CGPoint **result, uint64_t *a2, CTFrameRef frame)
{
  uint64_t v3 = *result;
  if (*result)
  {
    v9.location = 0;
    v9.length = 0;
    CTFrameGetLineOrigins(frame, v9, v3);
    CFArrayRef v7 = CTFrameGetLines(frame);
    type metadata accessor for CTLine(0);
    sub_1005350D0();

    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_100536470();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    double result = (CGPoint **)swift_bridgeObjectRelease();
    *a2 = v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *CTFrameRef.lineFrames(lines:origins:flippedCoordinates:useExtendedLineBounds:)(unint64_t a1, uint64_t a2, char a3, void *a4)
{
  if (!(a1 >> 62))
  {
    uint64_t v13 = *(const __CTLine **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_3;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = (const __CTLine *)sub_100536470();
  if (!v13) {
    goto LABEL_39;
  }
LABEL_3:
  unint64_t v39 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    goto LABEL_43;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_45;
  }
  for (uint64_t i = (const __CTLine *)*(id *)(a1 + 32); ; uint64_t i = (const __CTLine *)sub_100536210())
  {
    uint64_t v15 = i;
    uint64_t v4 = *(void *)(a2 + 16);
    if (!v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return _swiftEmptyArrayStorage;
    }
    uint64_t v9 = *(void *)(a2 + 32);
    double v8 = *(double *)(a2 + 40);
    if (a4) {
      CTLineBoundsOptions v16 = 32;
    }
    else {
      CTLineBoundsOptions v16 = 0;
    }
    CTLineBoundsOptions options = v16;
    CGRect BoundsWithOptions = CTLineGetBoundsWithOptions(i, v16);
    CGFloat width = BoundsWithOptions.size.width;
    CGFloat height = BoundsWithOptions.size.height;
    if ((a3 & 1) == 0) {
      double v8 = 0.0;
    }
    long long v5 = v15;
    a4 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_45:
    }
      a4 = sub_10035E294(0, a4[2] + 1, 1, a4);
    unint64_t v18 = a4[2];
    unint64_t v17 = a4[3];
    if (v18 >= v17 >> 1) {
      a4 = sub_10035E294((void *)(v17 > 1), v18 + 1, 1, a4);
    }
    a4[2] = v18 + 1;
    uint64_t v19 = (CGFloat *)&a4[5 * v18];
    *((void *)v19 + 4) = v5;
    *((void *)v19 + 5) = v9;
    v19[6] = 0.0;
    v19[7] = width;
    v19[8] = height;

    if (v13 == (const __CTLine *)1) {
      goto LABEL_16;
    }
    if (v39)
    {
      uint64_t v20 = (const __CTLine *)sub_100536210();
      goto LABEL_22;
    }
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL) {
      break;
    }
LABEL_42:
    __break(1u);
LABEL_43:
    ;
  }
  uint64_t v20 = (const __CTLine *)*(id *)(a1 + 40);
LABEL_22:
  id v21 = v20;
  id v22 = (char *)(v4 - 1);
  if (v4 != 1)
  {
    NSString v23 = 0;
    uint64_t v24 = (double *)(a2 + 56);
    uint64_t v25 = (char *)v13 - 2;
    double v26 = 0.0;
    while (1)
    {
      uint64_t v28 = *((void *)v24 - 1);
      double v29 = *v24;
      CGRect v42 = CTLineGetBoundsWithOptions(v21, options);
      CGFloat v30 = v42.size.width;
      CGFloat v31 = v42.size.height;
      double v32 = v26 + v8 - v29;
      if (a3)
      {
        double v8 = v29;
        double v26 = v32;
        double v33 = v32;
      }
      else
      {
        double v33 = 0.0;
      }
      uint64_t v13 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a4 = sub_10035E294(0, a4[2] + 1, 1, a4);
      }
      unint64_t v35 = a4[2];
      unint64_t v34 = a4[3];
      if (v35 >= v34 >> 1) {
        a4 = sub_10035E294((void *)(v34 > 1), v35 + 1, 1, a4);
      }
      a4[2] = v35 + 1;
      id v36 = (double *)&a4[5 * v35];
      *((void *)v36 + 4) = v13;
      *((void *)v36 + 5) = v28;
      v36[6] = v33;
      v36[7] = v30;
      v36[8] = v31;

      if (v25 == v23) {
        break;
      }
      if (v39)
      {
        uint64_t v27 = (const __CTLine *)sub_100536210();
      }
      else
      {
        if ((unint64_t)(v23 + 2) >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_42;
        }
        uint64_t v27 = (const __CTLine *)*(id *)(a1 + 8 * (void)v23 + 48);
      }
      id v21 = v27;
      v24 += 2;
      if (v22 == ++v23) {
        goto LABEL_23;
      }
    }
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return a4;
  }
LABEL_23:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a4;
}

double CTLineRef.extendedBounds.getter()
{
  return sub_10035C948(0x20uLL);
}

double CTLineRef.bounds.getter()
{
  return sub_10035C948(0);
}

double sub_10035C948(CTLineBoundsOptions options)
{
  *(void *)&double result = (unint64_t)CTLineGetBoundsWithOptions(v1, options);
  return result;
}

CGPoint **CTFrameRef.linesWithFrames(flippedCoordinates:useExtendedLineBounds:)(char a1, char a2)
{
  double v8 = (CGPoint **)v2;
  LOBYTE(v9) = a2;
  CFArrayRef v10 = CTFrameGetLines(v2);
  type metadata accessor for CTLine(0);
  sub_1005350D0();

  unint64_t v11 = (double *)_swiftEmptyArrayStorage;
  CFArrayRef v12 = CTFrameGetLines((CTFrameRef)v8);
  sub_1005350D0();

  if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
    goto LABEL_45;
  }
  uint64_t v13 = *(CGPoint ***)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = v8;
    double v8 = sub_10035EAE0(v13, (const __CTFrame *)v14);

    if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
      break;
    }
    uint64_t v15 = *(char **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v15) {
      goto LABEL_50;
    }
LABEL_5:
    unint64_t v36 = (unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) == 0)
    {
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        CTLineBoundsOptions v16 = (const __CTLine *)(id)_swiftEmptyArrayStorage[4];
        goto LABEL_8;
      }
      __break(1u);
LABEL_56:
      uint64_t v14 = (CGPoint **)sub_10035E294(0, (int64_t)&v14[2]->x + 1, 1, v14);
      goto LABEL_15;
    }
    while (1)
    {
      CTLineBoundsOptions v16 = (const __CTLine *)sub_100536210();
LABEL_8:
      unint64_t v17 = v16;
      unint64_t v11 = (double *)v8[2];
      if (!v11)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_51;
      }
      CFArrayRef v7 = v8[4];
      double v6 = *((double *)v8 + 5);
      if (v9) {
        CTLineBoundsOptions v18 = 32;
      }
      else {
        CTLineBoundsOptions v18 = 0;
      }
      CGRect BoundsWithOptions = CTLineGetBoundsWithOptions(v16, v18);
      CGFloat width = BoundsWithOptions.size.width;
      CGFloat height = BoundsWithOptions.size.height;
      if ((a1 & 1) == 0) {
        double v6 = 0.0;
      }
      uint64_t v3 = v17;
      uint64_t v14 = (CGPoint **)_swiftEmptyArrayStorage;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        goto LABEL_56;
      }
LABEL_15:
      unint64_t v20 = (unint64_t)v14[2];
      unint64_t v19 = (unint64_t)v14[3];
      if (v20 >= v19 >> 1) {
        uint64_t v14 = (CGPoint **)sub_10035E294((void *)(v19 > 1), v20 + 1, 1, v14);
      }
      v14[2] = (CGPoint *)(v20 + 1);
      id v21 = (CGFloat *)&v14[5 * v20];
      *((void *)v21 + 4) = v3;
      *((void *)v21 + 5) = v7;
      v21[6] = 0.0;
      v21[7] = width;
      v21[8] = height;

      if (v15 == (char *)1)
      {
LABEL_18:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_52;
      }
      if (v36)
      {
        id v22 = (const __CTLine *)sub_100536210();
        goto LABEL_24;
      }
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL) {
        break;
      }
LABEL_53:
      __break(1u);
    }
    id v22 = (const __CTLine *)(id)_swiftEmptyArrayStorage[5];
LABEL_24:
    uint64_t v3 = v22;
    unint64_t v35 = (char *)v11 - 1;
    if (v11 == (double *)1)
    {
LABEL_25:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_52;
    }
    NSString v23 = 0;
    if (v9) {
      CTLineBoundsOptions v9 = 32;
    }
    else {
      CTLineBoundsOptions v9 = 0;
    }
    unint64_t v11 = (double *)(v8 + 7);
    uint64_t v24 = v15 - 2;
    CFArrayRef v7 = 0;
    double v25 = 0.0;
    while (v23 + 1 < (char *)v8[2])
    {
      uint64_t v27 = *((void *)v11 - 1);
      double v28 = *v11;
      CGRect v39 = CTLineGetBoundsWithOptions(v3, v9);
      CGFloat width = v39.size.width;
      CGFloat height = v39.size.height;
      double v29 = v25 + v6 - v28;
      if (a1)
      {
        double v6 = v28;
        double v25 = v29;
        double v30 = v29;
      }
      else
      {
        double v30 = 0.0;
      }
      uint64_t v15 = v3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v14 = (CGPoint **)sub_10035E294(0, (int64_t)&v14[2]->x + 1, 1, v14);
      }
      unint64_t v32 = (unint64_t)v14[2];
      unint64_t v31 = (unint64_t)v14[3];
      if (v32 >= v31 >> 1) {
        uint64_t v14 = (CGPoint **)sub_10035E294((void *)(v31 > 1), v32 + 1, 1, v14);
      }
      v14[2] = (CGPoint *)(v32 + 1);
      double v33 = (double *)&v14[5 * v32];
      *((void *)v33 + 4) = v15;
      *((void *)v33 + 5) = v27;
      v33[6] = v30;
      v33[7] = width;
      v33[8] = height;

      if (v24 == v23) {
        goto LABEL_18;
      }
      if (v36)
      {
        double v26 = (const __CTLine *)sub_100536210();
      }
      else
      {
        if ((unint64_t)(v23 + 2) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)
                                                      + 0x10))
          goto LABEL_53;
        double v26 = (const __CTLine *)(id)_swiftEmptyArrayStorage[(void)v23 + 6];
      }
      uint64_t v3 = v26;
      ++v23;
      v11 += 2;
      if (v35 == v23) {
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_45:
    swift_bridgeObjectRetain();
    uint64_t v13 = (CGPoint **)sub_100536470();
    swift_bridgeObjectRelease();
  }
  if ((uint64_t)_swiftEmptyArrayStorage < 0) {
    uint64_t v14 = (CGPoint **)_swiftEmptyArrayStorage;
  }
  else {
    uint64_t v14 = (CGPoint **)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = (char *)sub_100536470();
  if (v15) {
    goto LABEL_5;
  }
LABEL_50:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_51:
  uint64_t v14 = (CGPoint **)_swiftEmptyArrayStorage;
LABEL_52:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

Swift::Void __swiftcall CTLineRef.draw(in:)(CGContextRef in)
{
  CTLineDraw(v1, in);
}

void *CTLineRef.glyphRuns.getter()
{
  return sub_10035CE34((uint64_t (*)(uint64_t))&CTLineGetGlyphRuns, type metadata accessor for CTRun);
}

void *sub_10035CE34(uint64_t (*a1)(uint64_t), void (*a2)(void))
{
  id v4 = (id)a1(v2);
  a2(0);
  sub_1005350D0();

  return _swiftEmptyArrayStorage;
}

CFIndex CTLineRef.glyphCount.getter()
{
  return CTLineGetGlyphCount(v0);
}

CFIndex CTLineRef.cfStringRange.getter()
{
  return CTLineGetStringRange(v0).location;
}

CGFloat CTLineRef.offset(stringIndex:)(CFIndex charIndex)
{
  return CTLineGetOffsetForStringIndex(v1, charIndex, 0);
}

__C::_NSRange __swiftcall CTRunRef.convertToGlyphRange(textRange:)(__C::_NSRange textRange)
{
  uint64_t v2 = v1;
  Swift::Int length = textRange.length;
  Swift::Int location = textRange.location;
  char Status = CTRunGetStatus(v2);
  CFIndex GlyphCount = CTRunGetGlyphCount(v2);
  CFIndex v8 = GlyphCount;
  if ((Status & 1) == 0)
  {
    if ((GlyphCount & 0x8000000000000000) == 0)
    {
      CTLineBoundsOptions v9 = v2;
      if (v8)
      {
        CFArrayRef v10 = (void *)sub_100535170();
        v10[2] = v8;
      }
      else
      {
        CFArrayRef v10 = _swiftEmptyArrayStorage;
      }
      v25.Swift::Int location = 0;
      v25.Swift::Int length = 0;
      CTRunGetStringIndices(v9, v25, v10 + 4);
      CFIndex GlyphCount = CTRunGetGlyphCount(v9);
      if (v8 >= GlyphCount)
      {
        v10[2] = GlyphCount;

        uint64_t v13 = v10[2];
        if (!v13) {
          goto LABEL_31;
        }
        goto LABEL_15;
      }
      goto LABEL_35;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (GlyphCount < 0) {
    goto LABEL_34;
  }
  unint64_t v11 = v2;
  if (v8)
  {
    CFArrayRef v12 = (void *)sub_100535170();
    v12[2] = v8;
  }
  else
  {
    CFArrayRef v12 = _swiftEmptyArrayStorage;
  }
  v26.Swift::Int location = 0;
  v26.Swift::Int length = 0;
  CTRunGetStringIndices(v11, v26, v12 + 4);
  CFIndex GlyphCount = CTRunGetGlyphCount(v11);
  if (v8 < GlyphCount) {
    goto LABEL_36;
  }
  v12[2] = GlyphCount;

  CFIndex GlyphCount = sub_10035D0F4((uint64_t)v12);
  CFArrayRef v10 = (void *)GlyphCount;
  uint64_t v13 = *(void *)(GlyphCount + 16);
  if (!v13) {
    goto LABEL_31;
  }
LABEL_15:
  uint64_t v14 = v10[4];
  if (v14 != location)
  {
    CFIndex v15 = 0;
    while (v13 - 1 != v15)
    {
      uint64_t v16 = v10[v15++ + 5];
      if (v16 == location) {
        goto LABEL_20;
      }
    }
    goto LABEL_31;
  }
  CFIndex v15 = 0;
LABEL_20:
  Swift::Int v17 = location + length;
  if (__OFADD__(location, length)) {
    goto LABEL_37;
  }
  BOOL v18 = __OFSUB__(v17, 1);
  Swift::Int v19 = v17 - 1;
  if (v18)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (v14 != v19)
  {
    uint64_t v20 = 0;
    uint64_t v21 = v13 - 1;
    while (v21 != v20)
    {
      uint64_t v22 = v10[v20++ + 5];
      if (v22 == v19) {
        goto LABEL_27;
      }
    }
    goto LABEL_31;
  }
  uint64_t v20 = 0;
LABEL_27:
  CFIndex GlyphCount = swift_bridgeObjectRelease();
  CFIndex v23 = v20 - v15;
  if (__OFSUB__(v20, v15))
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  Swift::Int v7 = v23 + 1;
  if (!__OFADD__(v23, 1)) {
    goto LABEL_32;
  }
  __break(1u);
LABEL_31:
  swift_bridgeObjectRelease();
  CFIndex v15 = 0;
  Swift::Int v7 = 0;
LABEL_32:
  CFIndex GlyphCount = v15;
LABEL_40:
  result.Swift::Int length = v7;
  result.Swift::Int location = GlyphCount;
  return result;
}

uint64_t CTRunRef.status.getter()
{
  return CTRunGetStatus(v0);
}

CFIndex CTRunRef.stringIndices.getter()
{
  return sub_10035D45C((uint64_t)&type metadata for Int, (void (*)(const __CTRun *, void, void, void *))&_CTRunGetStringIndices);
}

uint64_t sub_10035D0F4(uint64_t result)
{
  uint64_t v1 = result;
  unint64_t v2 = *(void *)(result + 16);
  if (v2 < 2) {
    return v1;
  }
  unint64_t v3 = 0;
  unint64_t v4 = v2 >> 1;
  for (unint64_t i = v2 + 3; ; --i)
  {
    if (v3 == i - 4) {
      goto LABEL_5;
    }
    unint64_t v6 = *(void *)(v1 + 16);
    if (v3 >= v6) {
      break;
    }
    if (i - 4 >= v6) {
      goto LABEL_12;
    }
    uint64_t v7 = *(void *)(v1 + 8 * v3 + 32);
    uint64_t v8 = *(void *)(v1 + 8 * i);
    __C::_NSRange result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      __C::_NSRange result = (uint64_t)sub_1003957F8(v1);
      uint64_t v1 = result;
    }
    *(void *)(v1 + 8 * v3 + 32) = v8;
    *(void *)(v1 + 8 * i) = v7;
LABEL_5:
    if (v4 == ++v3) {
      return v1;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

void sub_10035D1B0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v4 = (id)sub_100536210();
      }
      else
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v4 = *(id *)(a2 + 32);
      }
      long long v5 = v4;
      sub_10035EEE4();
      char v6 = sub_100535D90();

      if ((v6 & 1) == 0)
      {
        for (uint64_t i = 0; ; ++i)
        {
          unint64_t v11 = i + 1;
          if (__OFADD__(i, 1)) {
            break;
          }
          if (v11 == v3) {
            return;
          }
          if ((a2 & 0xC000000000000001) != 0)
          {
            id v8 = (id)sub_100536210();
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0) {
              goto LABEL_18;
            }
            if (v11 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_19;
            }
            id v8 = *(id *)(a2 + 32 + 8 * v11);
          }
          CTLineBoundsOptions v9 = v8;
          char v10 = sub_100535D90();

          if (v10) {
            return;
          }
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_100536470();
        swift_bridgeObjectRelease();
        if (v3) {
          continue;
        }
      }
      return;
    }
  }
}

Swift::Void __swiftcall CTRunRef.draw(in:range:)(CGContextRef in, __C::_NSRange range)
{
  CTRunDraw(v2, in, (CFRange)range);
}

double CTRunRef.typographicBounds(range:)(CFRange range)
{
  return CTRunGetTypographicBounds(v1, range, 0, 0, 0);
}

double CTRunRef.typographicBounds(forGlyphAtIndex:)(CFRange range)
{
  v3.Swift::Int location = range.location;
  v3.Swift::Int length = 1;
  return CTRunGetTypographicBounds(v1, v3, 0, 0, 0);
}

CFIndex CTRunRef.cfStringRange.getter()
{
  return CTRunGetStringRange(v0).location;
}

CFIndex CTRunRef.positions.getter()
{
  CFIndex result = CTRunGetGlyphCount(v0);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    CFIndex v2 = result;
    if (result)
    {
      _s3__C7CGPointVMa_0(0);
      CFRange v3 = v0;
      id v4 = (CGPoint *)sub_100535170();
      *(void *)&v4[1].x = v2;
    }
    else
    {
      long long v5 = v0;
      id v4 = (CGPoint *)_swiftEmptyArrayStorage;
    }
    v6.Swift::Int location = 0;
    v6.Swift::Int length = 0;
    CTRunGetPositions(v0, v6, v4 + 2);
    CFIndex result = CTRunGetGlyphCount(v0);
    if (v2 >= result)
    {
      *(void *)&v4[1].x = result;

      return (CFIndex)v4;
    }
  }
  __break(1u);
  return result;
}

CFIndex CTRunRef.glyphCount.getter()
{
  return CTRunGetGlyphCount(v0);
}

CFIndex CTRunRef.glyphs.getter()
{
  return sub_10035D45C((uint64_t)&type metadata for UInt16, (void (*)(const __CTRun *, void, void, void *))&CTRunGetGlyphs);
}

CFIndex sub_10035D45C(uint64_t a1, void (*a2)(const __CTRun *, void, void, void *))
{
  CFIndex result = CTRunGetGlyphCount(v2);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    CFIndex v5 = result;
    CFRange v6 = v2;
    if (v5)
    {
      uint64_t v7 = (void *)sub_100535170();
      long long v7[2] = v5;
    }
    else
    {
      uint64_t v7 = _swiftEmptyArrayStorage;
    }
    a2(v6, 0, 0, v7 + 4);
    CFIndex result = CTRunGetGlyphCount(v6);
    if (v5 >= result)
    {
      long long v7[2] = result;

      return (CFIndex)v7;
    }
  }
  __break(1u);
  return result;
}

void *CTLabel.Frame.colorOverride.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtCO14MusicUtilities7CTLabel5Frame_colorOverride);
  swift_beginAccess();
  CFIndex v2 = *v1;
  id v3 = v2;
  return v2;
}

void CTLabel.Frame.colorOverride.setter(void *a1)
{
  id v3 = (void **)&v1[OBJC_IVAR____TtCO14MusicUtilities7CTLabel5Frame_colorOverride];
  swift_beginAccess();
  id v4 = *v3;
  *id v3 = a1;
  id v5 = a1;

  [v1 setNeedsDisplay];
}

id (*CTLabel.Frame.colorOverride.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_10035D628;
}

id sub_10035D628(uint64_t a1, char a2)
{
  id result = (id)swift_endAccess();
  if ((a2 & 1) == 0)
  {
    id v5 = *(void **)(a1 + 24);
    return [v5 setNeedsDisplay];
  }
  return result;
}

id CTLabel.Frame.__allocating_init(ctFrame:suggestedSize:colorOverride:)(void *a1, void *a2, double a3, double a4)
{
  CTLineBoundsOptions v9 = (char *)objc_allocWithZone(v4);
  char v10 = (void **)&v9[OBJC_IVAR____TtCO14MusicUtilities7CTLabel5Frame_colorOverride];
  *(void *)&v9[OBJC_IVAR____TtCO14MusicUtilities7CTLabel5Frame_colorOverride] = 0;
  *(void *)&v9[OBJC_IVAR____TtCO14MusicUtilities7CTLabel5Frame_ctFrame] = a1;
  unint64_t v11 = (double *)&v9[OBJC_IVAR____TtCO14MusicUtilities7CTLabel5Frame_suggestedSize];
  *unint64_t v11 = a3;
  v11[1] = a4;
  swift_beginAccess();
  CFArrayRef v12 = *v10;
  *char v10 = a2;
  id v13 = a1;
  id v14 = a2;

  v17.receiver = v9;
  v17.super_class = v4;
  id v15 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];

  return v15;
}

id CTLabel.Frame.init(ctFrame:suggestedSize:colorOverride:)(void *a1, void *a2, double a3, double a4)
{
  uint64_t v7 = (void **)&v4[OBJC_IVAR____TtCO14MusicUtilities7CTLabel5Frame_colorOverride];
  *(void *)&v4[OBJC_IVAR____TtCO14MusicUtilities7CTLabel5Frame_colorOverride] = 0;
  *(void *)&v4[OBJC_IVAR____TtCO14MusicUtilities7CTLabel5Frame_ctFrame] = a1;
  id v8 = (double *)&v4[OBJC_IVAR____TtCO14MusicUtilities7CTLabel5Frame_suggestedSize];
  *id v8 = a3;
  v8[1] = a4;
  swift_beginAccess();
  CTLineBoundsOptions v9 = *v7;
  *uint64_t v7 = a2;
  id v10 = a1;
  id v11 = a2;

  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for CTLabel.Frame();
  id v12 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];

  return v12;
}

double CTLabel.Frame.sizeThatFits(_:)()
{
  return *(double *)(v0 + OBJC_IVAR____TtCO14MusicUtilities7CTLabel5Frame_suggestedSize);
}

void CTLabel.Frame.draw(_:)(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  CTLineBoundsOptions v9 = UIGraphicsGetCurrentContext();
  if (v9)
  {
    id v10 = v9;
    CGContextTranslateCTM(v9, 0.0, *(CGFloat *)(v4 + OBJC_IVAR____TtCO14MusicUtilities7CTLabel5Frame_suggestedSize + 8));
    CGContextScaleCTM(v10, 1.0, -1.0);
    CTFrameDraw(*(CTFrameRef *)(v4 + OBJC_IVAR____TtCO14MusicUtilities7CTLabel5Frame_ctFrame), v10);
    id v11 = (id *)(v4 + OBJC_IVAR____TtCO14MusicUtilities7CTLabel5Frame_colorOverride);
    swift_beginAccess();
    if (*v11)
    {
      id v12 = *v11;
      CGContextSetBlendMode(v10, kCGBlendModeOverlay);
      id v13 = (CGColor *)[v12 CGColor];
      CGContextSetFillColorWithColor(v10, v13);

      v14.origin.x = a1;
      v14.origin.y = a2;
      v14.size.CGFloat width = a3;
      v14.size.CGFloat height = a4;
      CGContextFillRect(v10, v14);
    }
  }
}

void CTLabel.Frame.init(frame:)()
{
}

id CTLabel.Frame.__deallocating_deinit()
{
  return sub_10035E25C(type metadata accessor for CTLabel.Frame);
}

id CTLabel.Line.__allocating_init(ctLine:size:useExtendedLineBounds:)(void *a1, char a2, double a3, double a4)
{
  CTLineBoundsOptions v9 = objc_allocWithZone(v4);
  *(void *)&v9[OBJC_IVAR____TtCO14MusicUtilities7CTLabel4Line_ctLine] = a1;
  id v10 = (double *)&v9[OBJC_IVAR____TtCO14MusicUtilities7CTLabel4Line_size];
  *id v10 = a3;
  v10[1] = a4;
  v9[OBJC_IVAR____TtCO14MusicUtilities7CTLabel4Line_useExtendedLineBounds] = a2;
  v14.receiver = v9;
  v14.super_class = v4;
  id v11 = a1;
  id v12 = [super initWithFrame:0.0, 0.0, a3, a4];
  [v12 setOpaque:0];

  return v12;
}

id CTLabel.Line.init(ctLine:size:useExtendedLineBounds:)(void *a1, char a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtCO14MusicUtilities7CTLabel4Line_ctLine] = a1;
  id v8 = (double *)&v4[OBJC_IVAR____TtCO14MusicUtilities7CTLabel4Line_size];
  *id v8 = a3;
  v8[1] = a4;
  v4[OBJC_IVAR____TtCO14MusicUtilities7CTLabel4Line_useExtendedLineBounds] = a2;
  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for CTLabel.Line();
  id v9 = a1;
  [super initWithFrame:0.0, 0.0, a3, a4];
  [v10 setOpaque:0];

  return v10;
}

void CTLabel.Line.init(frame:)()
{
}

id CTLabel.Line.__deallocating_deinit()
{
  return sub_10035E25C(type metadata accessor for CTLabel.Line);
}

id CTLabel.Run.__allocating_init(ctRun:size:range:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  id v11 = (char *)objc_allocWithZone(v5);
  *(void *)&v11[OBJC_IVAR____TtCO14MusicUtilities7CTLabel3Run_ctRun] = a1;
  objc_super v12 = (double *)&v11[OBJC_IVAR____TtCO14MusicUtilities7CTLabel3Run_size];
  *objc_super v12 = a4;
  v12[1] = a5;
  id v13 = &v11[OBJC_IVAR____TtCO14MusicUtilities7CTLabel3Run_range];
  *(void *)id v13 = a2;
  *((void *)v13 + 1) = a3;
  v15.receiver = v11;
  v15.super_class = v5;
  return [super initWithFrame:0.0, 0.0, 0.0, 0.0];
}

id CTLabel.Run.init(ctRun:size:range:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  *(void *)&v5[OBJC_IVAR____TtCO14MusicUtilities7CTLabel3Run_ctRun] = a1;
  CFRange v6 = (double *)&v5[OBJC_IVAR____TtCO14MusicUtilities7CTLabel3Run_size];
  *CFRange v6 = a4;
  v6[1] = a5;
  uint64_t v7 = &v5[OBJC_IVAR____TtCO14MusicUtilities7CTLabel3Run_range];
  *(void *)uint64_t v7 = a2;
  *((void *)v7 + 1) = a3;
  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for CTLabel.Run();
  return [super initWithFrame:0.0, 0.0, 0.0, 0.0];
}

double CTLabel.Run.sizeThatFits(_:)()
{
  return *(double *)(v0 + OBJC_IVAR____TtCO14MusicUtilities7CTLabel3Run_size);
}

void CTLabel.Run.init(frame:)()
{
}

id CTLabel.Run.__deallocating_deinit()
{
  return sub_10035E25C(type metadata accessor for CTLabel.Run);
}

id CTLabel.Glyph.__allocating_init(cgGlyph:size:)(__int16 a1, double a2, double a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  *(_WORD *)&v7[OBJC_IVAR____TtCO14MusicUtilities7CTLabel5Glyph_cgGlyph] = a1;
  id v8 = (double *)&v7[OBJC_IVAR____TtCO14MusicUtilities7CTLabel5Glyph_size];
  *id v8 = a2;
  v8[1] = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return [super initWithFrame:0.0, 0.0, 0.0, 0.0];
}

id CTLabel.Glyph.init(cgGlyph:size:)(__int16 a1, double a2, double a3)
{
  *(_WORD *)&v3[OBJC_IVAR____TtCO14MusicUtilities7CTLabel5Glyph_cgGlyph] = a1;
  uint64_t v4 = (double *)&v3[OBJC_IVAR____TtCO14MusicUtilities7CTLabel5Glyph_size];
  *uint64_t v4 = a2;
  v4[1] = a3;
  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for CTLabel.Glyph();
  return [super initWithFrame:0.0, 0.0, 0.0, 0.0];
}

double CTLabel.Glyph.sizeThatFits(_:)()
{
  return *(double *)(v0 + OBJC_IVAR____TtCO14MusicUtilities7CTLabel5Glyph_size);
}

id UIStackView.SpacerView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return [v9 initWithFrame:a1, a2, a3, a4];
}

void CTLabel.Glyph.init(frame:)()
{
}

void sub_10035E1E4()
{
}

void sub_10035E218()
{
}

id CTLabel.Glyph.__deallocating_deinit()
{
  return sub_10035E25C(type metadata accessor for CTLabel.Glyph);
}

id sub_10035E25C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

void *sub_10035E294(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_10066EF50);
    objc_super v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    objc_super v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_10000BB04(&qword_10066EF58);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_10035E3CC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_10066EF48);
    objc_super v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    objc_super v10 = (char *)_swiftEmptyArrayStorage;
  }
  id v13 = v10 + 32;
  objc_super v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_10035E4C8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_10066EF30);
    objc_super v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    objc_super v10 = (char *)_swiftEmptyArrayStorage;
  }
  id v13 = v10 + 32;
  objc_super v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

size_t sub_10035E5CC(size_t a1, int64_t a2, char a3, void *a4)
{
  return sub_10035E904(a1, a2, a3, a4, &qword_10066EF10, (uint64_t (*)(void))&type metadata accessor for IndexPath);
}

size_t sub_10035E5EC(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    id v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000BB04(&qword_10066EF18);
  uint64_t v10 = *(void *)(sub_10000BB04(&qword_10066EF20) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  id v13 = (void *)swift_allocObject();
  id result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(sub_10000BB04(&qword_10066EF20) - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v13;
}

char *sub_10035E7C8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_10066EF28);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  id v13 = v10 + 32;
  objc_super v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

size_t sub_10035E8C4(size_t a1, int64_t a2, char a3, void *a4)
{
  return sub_10035E904(a1, a2, a3, a4, &qword_10066EF08, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
}

size_t sub_10035E8E4(size_t a1, int64_t a2, char a3, void *a4)
{
  return sub_10035E904(a1, a2, a3, a4, &qword_10066EF60, _s9_ObserverC18HandlerAssociationVMa);
}

size_t sub_10035E904(size_t result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  char v8 = result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000BB04(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  id result = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_29;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(result - v15) / v14);
LABEL_19:
  uint64_t v18 = *(void *)(a6(0) - 8);
  if (v8)
  {
    if (v16 < a4
      || (unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80),
          (char *)v16 + v19 >= (char *)a4 + v19 + *(void *)(v18 + 72) * v11))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v16;
}

CGPoint **sub_10035EAE0(CGPoint **result, const __CTFrame *a2)
{
  if (((unint64_t)result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v4 = (CGPoint *)result;
  if (result)
  {
    _s3__C7CGPointVMa_0(0);
    char v5 = (CGPoint *)sub_100535170();
    *(void *)&v5[1].x = v4;
  }
  else
  {
    char v5 = (CGPoint *)_swiftEmptyArrayStorage;
  }
  v6[1] = v4;
  CGFloat v7 = 0.0;
  v6[0] = v5 + 2;
  id result = sub_10035C4C4(v6, (uint64_t *)&v7, a2);
  if (v2)
  {
    if (*(uint64_t *)&v7 <= (uint64_t)v4)
    {
      v5[1].x = v7;
      swift_bridgeObjectRelease();
      return (CGPoint **)v5;
    }
    goto LABEL_12;
  }
  if (*(uint64_t *)&v7 <= (uint64_t)v4)
  {
    v5[1].x = v7;
    return (CGPoint **)v5;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for CTLabel.Frame()
{
  return self;
}

uint64_t type metadata accessor for CTLabel.Line()
{
  return self;
}

void _s14MusicUtilities7CTLabelO4LineC4drawyySo6CGRectVF_0()
{
  uint64_t v1 = UIGraphicsGetCurrentContext();
  if (v1)
  {
    c = v1;
    CGContextTranslateCTM(v1, 0.0, *(CGFloat *)(v0 + OBJC_IVAR____TtCO14MusicUtilities7CTLabel4Line_size + 8));
    CGContextScaleCTM(c, 1.0, -1.0);
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtCO14MusicUtilities7CTLabel4Line_useExtendedLineBounds)) {
      CTLineBoundsOptions v2 = 32;
    }
    else {
      CTLineBoundsOptions v2 = 0;
    }
    CTLineGetBoundsWithOptions(*(CTLineRef *)(v0 + OBJC_IVAR____TtCO14MusicUtilities7CTLabel4Line_ctLine), v2);
    sub_100535700();
    sub_100535710();
    CTLineDraw(*(CTLineRef *)(v0 + OBJC_IVAR____TtCO14MusicUtilities7CTLabel4Line_ctLine), c);
  }
}

uint64_t type metadata accessor for CTLabel.Run()
{
  return self;
}

void _s14MusicUtilities7CTLabelO3RunC4drawyySo6CGRectVF_0()
{
  uint64_t v1 = UIGraphicsGetCurrentContext();
  if (v1)
  {
    c = v1;
    CGContextTranslateCTM(v1, 0.0, *(CGFloat *)(v0 + OBJC_IVAR____TtCO14MusicUtilities7CTLabel3Run_size + 8));
    CGContextScaleCTM(c, 1.0, -1.0);
    CTRunDraw(*(CTRunRef *)(v0 + OBJC_IVAR____TtCO14MusicUtilities7CTLabel3Run_ctRun), c, *(CFRange *)(v0 + OBJC_IVAR____TtCO14MusicUtilities7CTLabel3Run_range));
  }
}

uint64_t type metadata accessor for CTLabel.Glyph()
{
  return self;
}

CGContext *_s14MusicUtilities7CTLabelO5GlyphC4drawyySo6CGRectVF_0()
{
  id result = UIGraphicsGetCurrentContext();
  if (result)
  {
    CTLineBoundsOptions v2 = result;
    CGContextTranslateCTM(result, 0.0, *(CGFloat *)(v0 + OBJC_IVAR____TtCO14MusicUtilities7CTLabel5Glyph_size + 8));
    CGContextScaleCTM(v2, 1.0, -1.0);
    sub_10000BB04(&qword_10066EF38);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_10053A3B0;
    *(_WORD *)(v3 + 32) = *(_WORD *)(v0 + OBJC_IVAR____TtCO14MusicUtilities7CTLabel5Glyph_cgGlyph);
    sub_10000BB04(&qword_10066EF40);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_10053A3B0;
    *(void *)(v4 + 32) = 0;
    *(void *)(v4 + 40) = 0;
    v5._rawValue = (void *)v3;
    v6._rawValue = (void *)v4;
    sub_1005356F0(v5, v6);

    swift_bridgeObjectRelease();
    return (CGContext *)swift_bridgeObjectRelease();
  }
  return result;
}

ValueMetadata *type metadata accessor for CTLabel()
{
  return &type metadata for CTLabel;
}

unint64_t sub_10035EEE4()
{
  unint64_t result = qword_10066F7A0;
  if (!qword_10066F7A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10066F7A0);
  }
  return result;
}

uint64_t static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v4 = sub_100533280();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  CGFloat v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005332B0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([self isMainThread]) {
    return a1();
  }
  sub_1003545B4();
  uint64_t v13 = (void *)sub_100535960();
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001CB5A0;
  aBlock[3] = &unk_10062D7D0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1005332A0();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100355EB0();
  sub_10000BB04(&qword_10066E640);
  sub_10035460C();
  sub_1005360C0();
  sub_100535980();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_10035F1AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10035F1BC()
{
  return swift_release();
}

uint64_t DeinitTriggeredClosure.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t DeinitTriggeredClosure.init(_:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t DeinitTriggeredClosure.deinit()
{
  (*(void (**)(void))(v0 + 16))();
  swift_release();
  return v0;
}

uint64_t DeinitTriggeredClosure.__deallocating_deinit()
{
  (*(void (**)(void))(v0 + 16))();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t static OS_dispatch_queue.syncOnMainIfNeeded(_:)(uint64_t (*a1)(void), uint64_t a2)
{
  if ([self isMainThread]) {
    return a1();
  }
  sub_1003545B4();
  uint64_t v5 = sub_100535960();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  v8[4] = sub_10011C994;
  uint64_t v8[5] = v6;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_1001F5E38;
  v8[3] = &unk_10062D820;
  CGFloat v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  dispatch_sync((dispatch_queue_t)v5, v7);

  _Block_release(v7);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v5) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10035F3EC()
{
  return swift_deallocObject();
}

uint64_t OS_dispatch_queue.asyncAfter(_:block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100533280();
  uint64_t v23 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005332B0();
  uint64_t v21 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005332E0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  unint64_t v16 = (char *)&v20 - v15;
  sub_1005332D0();
  sub_100533340();
  objc_super v17 = *(void (**)(char *, uint64_t))(v11 + 8);
  v17(v14, v10);
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001CB5A0;
  aBlock[3] = &unk_10062D848;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  sub_1005332A0();
  uint64_t v24 = _swiftEmptyArrayStorage;
  sub_100355EB0();
  sub_10000BB04(&qword_10066E640);
  sub_10035460C();
  sub_1005360C0();
  sub_100535920();
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v22);
  v17(v16, v10);
  return swift_release();
}

uint64_t OS_dispatch_queue.asyncAfterUIFeedbackDeadline(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005332E0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v14 - v9;
  uint64_t v11 = sub_100533280();
  __chkstk_darwin(v11);
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001CB5A0;
  aBlock[3] = &unk_10062D870;
  _Block_copy(aBlock);
  v14[1] = _swiftEmptyArrayStorage;
  sub_100355EB0();
  swift_retain();
  sub_10000BB04(&qword_10066E640);
  sub_10035460C();
  sub_1005360C0();
  sub_100533310();
  swift_allocObject();
  sub_1005332F0();
  swift_release();
  sub_1005332D0();
  sub_100533340();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  sub_100535930();
  v12(v10, v4);
  return swift_release();
}

uint64_t OS_dispatch_queue.asyncAfterUIFeedbackDeadline(_:)()
{
  uint64_t v0 = sub_1005332E0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v9 - v5;
  sub_1005332D0();
  sub_100533340();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  sub_100535930();
  return ((uint64_t (*)(char *, uint64_t))v7)(v6, v0);
}

uint64_t static OS_dispatch_queue.UIFeedbackDeadline.getter()
{
  uint64_t v0 = sub_1005332E0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005332D0();
  sub_100533340();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t type metadata accessor for DeinitTriggeredClosure()
{
  return self;
}

void NSFileManager.createDirectoryIfNeeded(at:)()
{
  uint64_t v1 = v0;
  sub_10052F310();
  LOBYTE(v15) = 0;
  NSString v2 = sub_100534CA0();
  unsigned int v3 = [v0 fileExistsAtPath:v2 isDirectory:&v15];
  swift_bridgeObjectRelease();

  if (v3)
  {
    if (v15) {
      return;
    }
    sub_10052F2B0((NSURL *)v15);
    uint64_t v6 = v5;
    id v15 = 0;
    unsigned int v7 = [v0 removeItemAtURL:v5 error:&v15];

    id v8 = v15;
    if (!v7) {
      goto LABEL_7;
    }
    id v9 = v15;
  }
  sub_10052F2B0(v4);
  uint64_t v11 = v10;
  id v15 = 0;
  unsigned int v12 = [v1 createDirectoryAtURL:v10 withIntermediateDirectories:1 attributes:0 error:&v15];

  id v8 = v15;
  if (v12)
  {
    id v13 = v15;
    return;
  }
LABEL_7:
  id v14 = v8;
  sub_10052F1E0();

  swift_willThrow();
}

Swift::tuple_exists_Bool_isDirectory_Bool __swiftcall NSFileManager.directoryExists(at:)(Swift::String at)
{
  char v7 = 0;
  NSString v2 = sub_100534CA0();
  unsigned __int8 v3 = [v1 fileExistsAtPath:v2 isDirectory:&v7];

  Swift::Bool v5 = v3;
  result.isDirectory = v4;
  result.exists = v5;
  return result;
}

uint64_t NSFileManager.groupCacheURL(for:)@<X0>(uint64_t a1@<X8>)
{
  NSString v2 = v1;
  uint64_t v4 = sub_10000BB04(&qword_10066F008);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  char v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v9 = (char *)&v20 - v8;
  uint64_t v10 = sub_10052F360();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v14 = sub_100534CA0();
  id v15 = [v2 containerURLForSecurityApplicationGroupIdentifier:v14];

  if (v15)
  {
    sub_10052F300();

    unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v16(v7, 0, 1, v10);
  }
  else
  {
    unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v16(v7, 1, 1, v10);
  }
  sub_100360030((uint64_t)v7, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_100360098((uint64_t)v9);
    uint64_t v17 = 1;
  }
  else
  {
    sub_10052F2C0();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v11 + 8);
    v18(v9, v10);
    sub_10052F2C0();
    v18(v13, v10);
    uint64_t v17 = 0;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v16)(a1, v17, 1, v10);
}

uint64_t sub_100360030(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000BB04(&qword_10066F008);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100360098(uint64_t a1)
{
  uint64_t v2 = sub_10000BB04(&qword_10066F008);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1003600FC()
{
  unint64_t result = qword_10066F010;
  if (!qword_10066F010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066F010);
  }
  return result;
}

unsigned char *_s7FailureOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1003601F0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NSFileManager.Failure()
{
  return &type metadata for NSFileManager.Failure;
}

uint64_t String.sha256Data.getter()
{
  uint64_t v0 = sub_100534840();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100534D30();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100534D20();
  uint64_t v8 = sub_100534CF0();
  unint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v10 >> 60 != 15)
  {
    sub_10004A0A8(v8, v10);
    Data.Digest.SHA256.getter(v8, v10);
    sub_1000D0F4C(v8, v10);
    uint64_t v16 = v0;
    uint64_t v17 = sub_100361040(&qword_10066F018, (void (*)(uint64_t))&type metadata accessor for SHA256Digest);
    uint64_t v11 = sub_1000FF040(v15);
    (*(void (**)(uint64_t *, char *, uint64_t))(v1 + 16))(v11, v3, v0);
    sub_10000ECD4(v15, v16);
    sub_10052F110();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    uint64_t v12 = v14[1];
    sub_100013D48((uint64_t)v15);
    sub_1000D0F4C(v8, v10);
    return v12;
  }
  return v8;
}

uint64_t Data.digest.getter(uint64_t a1, unint64_t a2)
{
  return a1;
}

uint64_t Data.Digest.SHA256.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_100534850();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A0A8(a1, a2);
  sub_100361040(&qword_10066F020, (void (*)(uint64_t))&type metadata accessor for SHA256);
  sub_100534830();
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_10004A0A8(a1, a2);
      sub_100360F60((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, (uint64_t)v7, (void (*)(void))&type metadata accessor for SHA256, &qword_10066F020, (void (*)(uint64_t))&type metadata accessor for SHA256);
      break;
    case 2uLL:
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      sub_10004A0A8(a1, a2);
      swift_retain();
      swift_retain();
      sub_100360F60(v8, v9, a2 & 0x3FFFFFFFFFFFFFFFLL, (uint64_t)v7, (void (*)(void))&type metadata accessor for SHA256, &qword_10066F020, (void (*)(uint64_t))&type metadata accessor for SHA256);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      memset(v11, 0, 14);
      goto LABEL_7;
    default:
      v11[0] = a1;
      LOWORD(v11[1]) = a2;
      BYTE2(v11[1]) = BYTE2(a2);
      BYTE3(v11[1]) = BYTE3(a2);
      BYTE4(v11[1]) = BYTE4(a2);
      BYTE5(v11[1]) = BYTE5(a2);
LABEL_7:
      sub_100534810();
      break;
  }
  sub_10004A100(a1, a2);
  sub_100534820();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_10004A100(a1, a2);
}

uint64_t Data.Digest.MD5.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_100534870();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A0A8(a1, a2);
  sub_100361040(&qword_10066F028, (void (*)(uint64_t))&type metadata accessor for Insecure.MD5);
  sub_100534830();
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_10004A0A8(a1, a2);
      sub_100360F60((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, (uint64_t)v7, (void (*)(void))&type metadata accessor for Insecure.MD5, &qword_10066F028, (void (*)(uint64_t))&type metadata accessor for Insecure.MD5);
      break;
    case 2uLL:
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      sub_10004A0A8(a1, a2);
      swift_retain();
      swift_retain();
      sub_100360F60(v8, v9, a2 & 0x3FFFFFFFFFFFFFFFLL, (uint64_t)v7, (void (*)(void))&type metadata accessor for Insecure.MD5, &qword_10066F028, (void (*)(uint64_t))&type metadata accessor for Insecure.MD5);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      memset(v11, 0, 14);
      goto LABEL_7;
    default:
      v11[0] = a1;
      LOWORD(v11[1]) = a2;
      BYTE2(v11[1]) = BYTE2(a2);
      BYTE3(v11[1]) = BYTE3(a2);
      BYTE4(v11[1]) = BYTE4(a2);
      BYTE5(v11[1]) = BYTE5(a2);
LABEL_7:
      sub_100534810();
      break;
  }
  sub_10004A100(a1, a2);
  sub_100534820();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_10004A100(a1, a2);
}

uint64_t Data.Digest.SHA512.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_100534860();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A0A8(a1, a2);
  sub_100361040(&qword_10066F030, (void (*)(uint64_t))&type metadata accessor for SHA512);
  sub_100534830();
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_10004A0A8(a1, a2);
      sub_100360F60((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, (uint64_t)v7, (void (*)(void))&type metadata accessor for SHA512, &qword_10066F030, (void (*)(uint64_t))&type metadata accessor for SHA512);
      break;
    case 2uLL:
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      sub_10004A0A8(a1, a2);
      swift_retain();
      swift_retain();
      sub_100360F60(v8, v9, a2 & 0x3FFFFFFFFFFFFFFFLL, (uint64_t)v7, (void (*)(void))&type metadata accessor for SHA512, &qword_10066F030, (void (*)(uint64_t))&type metadata accessor for SHA512);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      memset(v11, 0, 14);
      goto LABEL_7;
    default:
      v11[0] = a1;
      LOWORD(v11[1]) = a2;
      BYTE2(v11[1]) = BYTE2(a2);
      BYTE3(v11[1]) = BYTE3(a2);
      BYTE4(v11[1]) = BYTE4(a2);
      BYTE5(v11[1]) = BYTE5(a2);
LABEL_7:
      sub_100534810();
      break;
  }
  sub_10004A100(a1, a2);
  sub_100534820();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_10004A100(a1, a2);
}

uint64_t sub_100360F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), unint64_t *a6, void (*a7)(uint64_t))
{
  uint64_t result = sub_10052F050();
  if (!result || (uint64_t result = sub_10052F080(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_10052F070();
      a5(0);
      sub_100361040(a6, a7);
      return sub_100534810();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100361040(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *_s6DigestVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_10004A0A8(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t _s6DigestVwxx(uint64_t a1)
{
  return sub_10004A100(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t *_s6DigestVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_10004A0A8(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_10004A100(v5, v6);
  return a1;
}

uint64_t *_s6DigestVwta(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_10004A100(v3, v4);
  return a1;
}

uint64_t _s6DigestVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s6DigestVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)uint64_t result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Data.Digest()
{
  return &type metadata for Data.Digest;
}

uint64_t sub_10036120C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 >= 1) {
    uint64_t v5 = a4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!a2)
  {
LABEL_19:
    a3 = 0;
    goto LABEL_20;
  }
  if (!a3)
  {
LABEL_20:
    *(void *)uint64_t result = a4;
    *(void *)(result + 8) = a5;
    *(void *)(result + 16) = v5;
    *(unsigned char *)(result + 24) = a5 < 1;
    return a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = a4 + a5;
    BOOL v7 = __OFADD__(a4, a5);
    if (v5 > v6) {
      uint64_t v6 = v5;
    }
    if (a5 >= 1)
    {
      uint64_t v8 = 0;
      uint64_t v9 = v6 - v5;
      while (!v7)
      {
        if (v9 == v8)
        {
          v5 += v8;
          a3 = v9;
          goto LABEL_20;
        }
        *(void *)(a2 + 8 * v8) = v5 + v8;
        if (a3 - 1 == v8)
        {
          v5 += v8 + 1;
          goto LABEL_20;
        }
        ++v8;
      }
      __break(1u);
      goto LABEL_24;
    }
    uint64_t v5 = 0;
    goto LABEL_19;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t Array.append(_:if:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = v10(v7);
  if (v11)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
    sub_1005351C0();
  }
  return v11 & 1;
}

uint64_t Array.append<A>(contentsOf:if:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *(void *)(a5 - 8);
  uint64_t v8 = __chkstk_darwin(a1);
  unint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = v11(v8);
  if (v12)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, a5);
    sub_1005351B0();
  }
  return v12 & 1;
}

uint64_t Array.item(where:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  sub_100535200();
  swift_getWitnessTable();
  sub_1005355C0();
  if (v6)
  {
    uint64_t v4 = 1;
  }
  else
  {
    sub_100535220();
    uint64_t v4 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, v4, 1, a1);
}

Swift::Void __swiftcall Array.moveItem(at:to:)(Swift::Int at, Swift::Int to)
{
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(at);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v10 - v8;
  sub_1005351E0();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  sub_1005351D0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t Array.subscript.getter@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  sub_100535200();
  swift_getWitnessTable();
  sub_100535550();
  sub_10000BB04(&qword_10066F040);
  if (sub_1005356C0())
  {
    sub_100535220();
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, v4, 1, a1);
}

uint64_t Array.inserting(separator:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[2] = a3;
  v4[3] = a1;
  return Array.inserting(separator:)((uint64_t)sub_100361828, (uint64_t)v4, a2, a3);
}

uint64_t sub_100361828@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(*(void *)(v1 + 16) - 8) + 16))(a1, *(void *)(v1 + 24));
}

uint64_t Array.inserting(separator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_1005351A0();
  if (result < 2)
  {
    swift_bridgeObjectRetain();
    return a3;
  }
  if (result + 0x4000000000000000 >= 0)
  {
    v12[8] = 0;
    v12[9] = 2 * result - 1;
    __chkstk_darwin(result);
    v12[2] = a4;
    v12[3] = a3;
    v12[4] = a1;
    v12[5] = a2;
    uint64_t v9 = sub_10000BB04(&qword_10066F040);
    unint64_t v10 = sub_100361DB4();
    return sub_1003619B4((void (*)(char *, char *))sub_100361964, (uint64_t)v12, v9, a4, (uint64_t)&type metadata for Never, v10, (uint64_t)&protocol witness table for Never, v11);
  }
  __break(1u);
  return result;
}

uint64_t sub_100361964(void *a1)
{
  if (*a1) {
    return (*(uint64_t (**)(void))(v1 + 32))();
  }
  else {
    return sub_100535220();
  }
}

uint64_t sub_1003619B4(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  id v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  __chkstk_darwin(a1);
  id v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  double v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = __chkstk_darwin(AssociatedTypeWitness);
  char v12 = (char *)&v26 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_100535570();
  if (!v18) {
    return sub_100535160();
  }
  Swift::Int v19 = v18;
  uint64_t v43 = sub_100536310();
  uint64_t v32 = sub_100536320();
  sub_1005362B0(v19);
  uint64_t v36 = v8;
  uint64_t result = sub_100535560();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v34 = (void (**)(char *))(v33 + 2);
    unint64_t v35 = v14;
    ++v33;
    while (1)
    {
      uint64_t v21 = (void (*)(char *, void))sub_100535670();
      uint64_t v22 = v12;
      uint64_t v23 = v12;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_100536300();
      sub_1005355B0();
      --v19;
      char v12 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

unint64_t sub_100361DB4()
{
  unint64_t result = qword_10066F048;
  if (!qword_10066F048)
  {
    sub_100013BFC(&qword_10066F040);
    sub_100361E30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066F048);
  }
  return result;
}

unint64_t sub_100361E30()
{
  unint64_t result = qword_10066F050;
  if (!qword_10066F050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066F050);
  }
  return result;
}

uint64_t Set.insert(_:if:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *(void *)(a5 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(a1);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12(v9))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a2, v7);
    char v13 = sub_1005354D0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, 1, 1, v7);
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t NSBundle.displayName.getter()
{
  id v1 = [v0 localizedInfoDictionary];
  if (!v1)
  {
    long long v8 = 0u;
    long long v9 = 0u;
    goto LABEL_11;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_100534AB0();

  if (!*(void *)(v3 + 16)
    || (uint64_t v4 = sub_100367E94(0xD000000000000013, 0x8000000100565C00, (void (*)(unsigned char *, uint64_t, uint64_t))&String.hash(into:), (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_1001A1B40), (v5 & 1) == 0))
  {
    long long v8 = 0u;
    long long v9 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_10009B1D4(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1))
  {
LABEL_11:
    sub_100013C44((uint64_t)&v8, &qword_10066EAC0);
    return 0;
  }
  if (swift_dynamicCast()) {
    return v7;
  }
  else {
    return 0;
  }
}

uint64_t NSBundle.exportedTypeDeclarations.getter()
{
  NSString v1 = sub_100534CA0();
  id v2 = [v0 objectForInfoDictionaryKey:v1];

  if (v2)
  {
    sub_100536090();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_100356DE8((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    sub_10000BB04(&qword_10066F058);
    if (swift_dynamicCast()) {
      return v4;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_100013C44((uint64_t)v6, &qword_10066EAC0);
    return 0;
  }
}

uint64_t Comparable.clamp(to:)()
{
  uint64_t v1 = sub_100534BE0();
  return ClosedRange.clamp(_:)(v0, v1);
}

uint64_t ClosedRange.clamp(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(a1);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100536820();
  sub_100536830();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t ClosedRange<>.scaledValue(relativeTo:relativeValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v33 = a5;
  uint64_t v31 = a1;
  uint64_t v32 = a4;
  uint64_t v27 = a2;
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) + 8);
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v28 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  unint64_t v35 = (char *)&v26 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v26 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v26 - v21;
  uint64_t v29 = a3;
  uint64_t v30 = v6;
  uint64_t v26 = *(void *)(v6 + 8);
  sub_100536420();
  swift_getAssociatedConformanceWitness();
  sub_100536800();
  sub_100536760();
  LOBYTE(v6) = sub_100534BB0();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v23(v20, v7);
  if (v6)
  {
    ClosedRange.clamp(_:)(v27, v29);
    sub_100536420();
    sub_100534B30();
    v23(v15, v7);
    uint64_t v24 = v28;
    sub_100536420();
    sub_100535540();
    v23(v24, v7);
    sub_100536410();
    v23(v15, v7);
    v23(v35, v7);
    v23(v20, v7);
    return ((uint64_t (*)(char *, uint64_t))v23)(v22, v7);
  }
  else
  {
    v23(v22, v7);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v33, v34, v7);
  }
}

uint64_t Data.hexRepresentation.getter(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_10004A0A8(a1, a2);
      uint64_t v6 = sub_100368D6C((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a1, a2);
      uint64_t v8 = v9;
      goto LABEL_8;
    case 2uLL:
      uint64_t v4 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      sub_10004A0A8(a1, a2);
      swift_retain();
      swift_retain();
      uint64_t v6 = sub_100368D6C(v4, v5, a2 & 0x3FFFFFFFFFFFFFFFLL, a1, a2);
      uint64_t v8 = v7;
      swift_release();
      swift_release();
LABEL_8:
      sub_10004A100(a1, a2);
      goto LABEL_9;
    case 3uLL:
      memset(v11, 0, 14);
      goto LABEL_5;
    default:
      v11[0] = a1;
      LOWORD(v11[1]) = a2;
      BYTE2(v11[1]) = BYTE2(a2);
      BYTE3(v11[1]) = BYTE3(a2);
      BYTE4(v11[1]) = BYTE4(a2);
      BYTE5(v11[1]) = BYTE5(a2);
LABEL_5:
      sub_100362970((unint64_t)v11, a1, a2, v12);
      sub_10004A100(a1, a2);
      uint64_t v6 = v12[0];
      uint64_t v8 = v12[1];
LABEL_9:
      if (v8) {
        return v6;
      }
      else {
        return 0;
      }
  }
}

uint64_t sub_100362970@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_100534D30();
  __chkstk_darwin(v8 - 8);
  unint64_t v9 = a3 >> 62;
  switch(a3 >> 62)
  {
    case 1uLL:
      LODWORD(v10) = HIDWORD(a2) - a2;
      if (__OFSUB__(HIDWORD(a2), a2)) {
        goto LABEL_41;
      }
      uint64_t v10 = (int)v10;
LABEL_6:
      if (v10 + 0x4000000000000000 < 0) {
        goto LABEL_39;
      }
      unint64_t v14 = swift_slowAlloc();
      if (v9)
      {
        if (v9 == 1)
        {
          LODWORD(v15) = HIDWORD(a2) - a2;
          if (__OFSUB__(HIDWORD(a2), a2))
          {
LABEL_43:
            __break(1u);
            goto LABEL_44;
          }
          uint64_t v15 = (int)v15;
        }
        else
        {
          uint64_t v17 = *(void *)(a2 + 16);
          uint64_t v16 = *(void *)(a2 + 24);
          BOOL v13 = __OFSUB__(v16, v17);
          uint64_t v15 = v16 - v17;
          if (v13)
          {
LABEL_44:
            __break(1u);
            JUMPOUT(0x100362C28);
          }
        }
        if (v15 < 0)
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          goto LABEL_43;
        }
      }
      else
      {
        uint64_t v15 = BYTE6(a3);
      }
      if (v15)
      {
        unint64_t v18 = v15 - 1;
        if ((unint64_t)(v15 - 1) >= 0x4000000000000000) {
          unint64_t v19 = 0x4000000000000000;
        }
        else {
          unint64_t v19 = v15 - 1;
        }
        if (v19 <= 0xF) {
          goto LABEL_24;
        }
        if (v18 >= 0x4000000000000000) {
          unint64_t v18 = 0x4000000000000000;
        }
        if (v14 >= v18 + a1 + 1 || v14 + 2 * v18 + 2 <= a1)
        {
          unint64_t v21 = v19 + 1;
          uint64_t v22 = v21 & 0xF;
          if ((v21 & 0xF) == 0) {
            uint64_t v22 = 16;
          }
          unint64_t v20 = v21 - v22;
          v23.i64[0] = 0x9F9F9F9F9F9F9F9FLL;
          v23.i64[1] = 0x9F9F9F9F9F9F9F9FLL;
          v24.i64[0] = 0x5757575757575757;
          v24.i64[1] = 0x5757575757575757;
          v25.i64[0] = 0x3030303030303030;
          v25.i64[1] = 0x3030303030303030;
          v26.i64[0] = 0xF0F0F0F0F0F0F0FLL;
          v26.i64[1] = 0xF0F0F0F0F0F0F0FLL;
          v27.i64[0] = 0x909090909090909;
          v27.i64[1] = 0x909090909090909;
          unint64_t v28 = v20;
          uint64_t v29 = (int8x16_t *)a1;
          uint64_t v30 = (char *)v14;
          do
          {
            int8x16_t v31 = *v29++;
            v32.i64[0] = 0x5757575757575757;
            v32.i64[1] = 0x5757575757575757;
            v33.i64[0] = 0x3030303030303030;
            v33.i64[1] = 0x3030303030303030;
            v46.val[0] = vbslq_s8((int8x16_t)vcgtq_u8((uint8x16_t)v31, v23), (int8x16_t)vsraq_n_u8(v32, (uint8x16_t)v31, 4uLL), (int8x16_t)vsraq_n_u8(v33, (uint8x16_t)v31, 4uLL));
            int8x16_t v34 = vandq_s8(v31, v26);
            v46.val[1] = vbslq_s8((int8x16_t)vcgtq_u8((uint8x16_t)v34, v27), vaddq_s8(v34, v24), vorrq_s8(v34, v25));
            vst2q_s8(v30, v46);
            v30 += 32;
            v28 -= 16;
          }
          while (v28);
        }
        else
        {
LABEL_24:
          unint64_t v20 = 0;
        }
        unint64_t v35 = v20 - 0x4000000000000000;
        uint64_t v36 = (unsigned char *)(v14 + 2 * v20 + 1);
        uint64_t v37 = v15 - v20;
        id v38 = (unsigned __int8 *)(a1 + v20);
        while (v35)
        {
          unsigned int v40 = *v38++;
          char v39 = v40;
          int v41 = (v40 >> 4) + 87;
          int v42 = (v40 >> 4) | 0x30;
          if (v40 > 0x9F) {
            LOBYTE(v42) = v41;
          }
          *(v36 - 1) = v42;
          if ((v39 & 0xFu) <= 9) {
            char v43 = v39 & 0xF | 0x30;
          }
          else {
            char v43 = (v39 & 0xF) + 87;
          }
          *uint64_t v36 = v43;
          v36 += 2;
          ++v35;
          if (!--v37) {
            goto LABEL_37;
          }
        }
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
LABEL_37:
      sub_100534D20();
      uint64_t result = sub_100534C10();
      *a4 = result;
      a4[1] = v45;
      return result;
    case 2uLL:
      uint64_t v12 = *(void *)(a2 + 16);
      uint64_t v11 = *(void *)(a2 + 24);
      BOOL v13 = __OFSUB__(v11, v12);
      uint64_t v10 = v11 - v12;
      if (!v13) {
        goto LABEL_6;
      }
      goto LABEL_42;
    case 3uLL:
      swift_slowAlloc();
      goto LABEL_37;
    default:
      uint64_t v10 = BYTE6(a3);
      goto LABEL_6;
  }
}

uint64_t sub_100362C38()
{
  unint64_t v0 = sub_1003522F8((uint64_t)&off_10062C600);
  sub_10000BB04(&qword_10066F180);
  uint64_t result = swift_arrayDestroy();
  static Data.Hexadecimal.hexToDecimalMapping = v0;
  return result;
}

uint64_t *Data.Hexadecimal.hexToDecimalMapping.unsafeMutableAddressor()
{
  if (qword_10066E340 != -1) {
    swift_once();
  }
  return &static Data.Hexadecimal.hexToDecimalMapping;
}

uint64_t static Data.Hexadecimal.hexToDecimalMapping.getter()
{
  if (qword_10066E340 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static Data.Hexadecimal.hexToDecimalMapping.setter(uint64_t a1)
{
  if (qword_10066E340 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static Data.Hexadecimal.hexToDecimalMapping = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static Data.Hexadecimal.hexToDecimalMapping.modify())()
{
  if (qword_10066E340 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t Data.init(hexString:)(uint64_t a1, void *a2)
{
  if (sub_100534E00())
  {
    v18[0] = 48;
    v18[1] = 0xE100000000000000;
    v20._countAndFlagsBits = a1;
    v20._object = a2;
    sub_100534E80(v20);
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = 0;
  LOBYTE(v5) = 0;
  long long v19 = xmmword_10053E010;
  while (1)
  {
    uint64_t v7 = sub_100534E90();
    if (!v8) {
      break;
    }
    uint64_t v9 = v7;
    uint64_t v10 = v8;
    if (qword_10066E340 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v11 = static Data.Hexadecimal.hexToDecimalMapping;
    if (!*(void *)(static Data.Hexadecimal.hexToDecimalMapping + 16)
      || (uint64_t v12 = sub_100367E94(v9, v10, (void (*)(unsigned char *, uint64_t, uint64_t))&Character.hash(into:), (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_1001A1B40), (v13 & 1) == 0))
    {
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10004A100(v19, *((unint64_t *)&v19 + 1));
      return 0;
    }
    __int16 v14 = *(unsigned __int8 *)(*(void *)(v11 + 56) + v12);
    swift_endAccess();
    swift_bridgeObjectRelease();
    if (v4)
    {
      char v15 = v14 + v5;
      if (((v14 + v5) & 0x100) != 0) {
        goto LABEL_18;
      }
      uint64_t v16 = sub_10000BB04(&qword_10066F060);
      v18[3] = v16;
      v18[4] = sub_100014CCC(&qword_10066F068, &qword_10066F060);
      LOBYTE(v18[0]) = v15;
      sub_10000ECD4(v18, v16);
      sub_10052F3A0();
      sub_100013D48((uint64_t)v18);
      LOBYTE(v5) = 0;
    }
    else
    {
      __int16 v5 = 16 * (v14 & 0xF) + v5;
      if ((v5 & 0x100) != 0) {
        goto LABEL_17;
      }
    }
    if (__OFADD__(v4++, 1))
    {
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
    }
  }
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_10036312C()
{
  uint64_t v0 = sub_10000BB04(&qword_10066F070);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10052F850();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10052F910();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000ED18(v9, static Calendar.musicDefaultCalendar);
  uint64_t v12 = sub_10000EA90(v7, (uint64_t)static Calendar.musicDefaultCalendar);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Calendar.Identifier.gregorian(_:), v3);
  sub_10052F860();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_10052F990();
  uint64_t v13 = sub_10052F9C0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v2, 1, v13);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_10052F8F0();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v12, v11, v7);
  }
  return result;
}

uint64_t Calendar.musicDefaultCalendar.unsafeMutableAddressor()
{
  if (qword_10066E348 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10052F910();

  return sub_10000EA90(v0, (uint64_t)static Calendar.musicDefaultCalendar);
}

uint64_t static Calendar.musicDefaultCalendar.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10066E348 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10052F910();
  uint64_t v3 = sub_10000EA90(v2, (uint64_t)static Calendar.musicDefaultCalendar);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

id static NSDateFormatter.iso8601ExtendedDateFormatter.getter()
{
  uint64_t v0 = sub_10000BB04(&qword_10066F070);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10052F840();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [objc_allocWithZone((Class)NSDateFormatter) init];
  sub_10052F790();
  Class isa = sub_10052F7D0().super.isa;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  [v7 setLocale:isa];

  NSString v9 = sub_100534CA0();
  [v7 setDateFormat:v9];

  sub_10052F990();
  uint64_t v10 = sub_10052F9C0();
  uint64_t v11 = *(void *)(v10 - 8);
  Class v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v2, 1, v10) != 1)
  {
    Class v12 = sub_10052F9A0().super.isa;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v2, v10);
  }
  [v7 setTimeZone:v12];

  return v7;
}

id static NSDateFormatter.dayNameDateFormatter.getter()
{
  id v0 = [objc_allocWithZone((Class)NSDateFormatter) init];
  NSString v1 = sub_100534CA0();
  [v0 setLocalizedDateFormatFromTemplate:v1];

  return v0;
}

void sub_100363744()
{
  uint64_t v0 = sub_10052F9C0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [objc_allocWithZone((Class)NSDateFormatter) init];
  [v4 setDateStyle:3];
  if (qword_10066E348 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_10052F910();
  sub_10000EA90(v5, (uint64_t)static Calendar.musicDefaultCalendar);
  sub_10052F8E0();
  Class isa = sub_10052F9A0().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  [v4 setTimeZone:isa];

  static NSDateFormatter.releaseDateFormatter = (uint64_t)v4;
}

uint64_t *NSDateFormatter.releaseDateFormatter.unsafeMutableAddressor()
{
  if (qword_10066E350 != -1) {
    swift_once();
  }
  return &static NSDateFormatter.releaseDateFormatter;
}

id static NSDateFormatter.releaseDateFormatter.getter()
{
  return sub_1001C49B4(&qword_10066E350, (void **)&static NSDateFormatter.releaseDateFormatter);
}

id sub_10036391C()
{
  id v0 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  [v0 setUnitsStyle:3];
  id result = [v0 setAllowedUnits:96];
  static NSDateFormatter.collectionsDurationFormatter = (uint64_t)v0;
  return result;
}

uint64_t *NSDateFormatter.collectionsDurationFormatter.unsafeMutableAddressor()
{
  if (qword_10066E358 != -1) {
    swift_once();
  }
  return &static NSDateFormatter.collectionsDurationFormatter;
}

id static NSDateFormatter.collectionsDurationFormatter.getter()
{
  return sub_1001C49B4(&qword_10066E358, (void **)&static NSDateFormatter.collectionsDurationFormatter);
}

uint64_t Dictionary.filterIncludingPairsWithStringValues()(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a3;
  uint64_t v55 = *(void *)(a3 - 8);
  uint64_t v8 = __chkstk_darwin(a1);
  uint64_t v10 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v8);
  uint64_t v57 = (char *)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v70 = (char *)v48 - v14;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v66 = sub_100535F20();
  uint64_t v16 = *(void *)(v66 - 8);
  uint64_t v17 = __chkstk_darwin(v66);
  uint64_t v59 = (char *)v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  Swift::String v20 = (char *)v48 - v19;
  swift_getTupleTypeMetadata2();
  sub_100535160();
  uint64_t v58 = a4;
  uint64_t v73 = sub_100534AE0();
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v21 = sub_1005363A0();
    unint64_t v49 = 0;
    uint64_t v22 = 0;
    unint64_t v23 = 0;
    unint64_t v24 = v21 | 0x8000000000000000;
  }
  else
  {
    uint64_t v25 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v22 = ~v25;
    uint64_t v26 = *(void *)(a1 + 64);
    unint64_t v49 = a1 + 64;
    uint64_t v27 = -v25;
    if (v27 < 64) {
      uint64_t v28 = ~(-1 << v27);
    }
    else {
      uint64_t v28 = -1;
    }
    unint64_t v23 = v28 & v26;
    unint64_t v24 = a1;
  }
  unint64_t v67 = v24;
  uint64_t v51 = v24 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v65 = TupleTypeMetadata2 - 8;
  v48[1] = v22;
  unint64_t v68 = (void (**)(char *, char *, uint64_t))(v54 + 16);
  uint64_t v52 = v55 + 16;
  BOOL v64 = (void (**)(char *, char *, uint64_t))(v16 + 32);
  os_log_type_t v63 = (void (**)(char *, char *, uint64_t))(v54 + 32);
  uint64_t v61 = (void (**)(char *, uint64_t))(v55 + 8);
  os_log_type_t v62 = (void (**)(char *, char *, uint64_t))(v55 + 32);
  uint64_t v60 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
  int64_t v50 = (unint64_t)(v22 + 64) >> 6;
  v48[0] = v50 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v30 = v67;
  int64_t v31 = 0;
  int v56 = v10;
  uint8x16_t v32 = v59;
  uint64_t v53 = v5;
  if ((v67 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_32:
  if (sub_1005363D0())
  {
    sub_100536750();
    swift_unknownObjectRelease();
    sub_100536750();
    swift_unknownObjectRelease();
    uint64_t v40 = 0;
  }
  else
  {
    uint64_t v40 = 1;
  }
  int64_t v37 = v31;
  uint64_t v69 = v23;
  uint64_t v10 = v56;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
LABEL_36:
          uint64_t v43 = *(void *)(TupleTypeMetadata2 - 8);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v32, v40, 1, TupleTypeMetadata2);
          (*v64)(v20, v32, v66);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v20, 1, TupleTypeMetadata2) == 1)
          {
            sub_100206FC4();
            return v73;
          }
          id v44 = &v20[*(int *)(TupleTypeMetadata2 + 48)];
          (*v63)(v70, v20, a2);
          (*v62)(v10, v44, v5);
          if (swift_dynamicCast())
          {
            id v33 = v71;
            uint64_t v34 = v72;
            goto LABEL_10;
          }
          sub_100123DA4(0, &qword_10066F078);
          if (swift_dynamicCast())
          {
            id v45 = v71;
            id v46 = [v71 description];
            id v33 = (id)sub_100534CE0();
            uint64_t v34 = v47;

            uint64_t v10 = v56;
LABEL_10:
            (*v61)(v10, v5);
            unint64_t v35 = v70;
            (*v68)(v57, v70, a2);
            id v71 = v33;
            uint64_t v72 = v34;
            sub_100534AF0();
            sub_100534B20();
            uint64_t result = (*v60)(v35, a2);
            int64_t v31 = v37;
            unint64_t v23 = v69;
            uint8x16_t v32 = v59;
            unint64_t v30 = v67;
            if ((v67 & 0x8000000000000000) != 0) {
              goto LABEL_32;
            }
            goto LABEL_11;
          }
          (*v61)(v10, v5);
          uint64_t result = (*v60)(v70, a2);
          int64_t v31 = v37;
          unint64_t v23 = v69;
          unint64_t v30 = v67;
          if ((v67 & 0x8000000000000000) != 0) {
            goto LABEL_32;
          }
LABEL_11:
          if (v23)
          {
            uint64_t v69 = (v23 - 1) & v23;
            unint64_t v36 = __clz(__rbit64(v23)) | (v31 << 6);
            int64_t v37 = v31;
            goto LABEL_13;
          }
          int64_t v37 = v31 + 1;
          if (__OFADD__(v31, 1))
          {
            __break(1u);
            goto LABEL_44;
          }
          if (v37 < v50) {
            break;
          }
          uint64_t v69 = 0;
          uint64_t v40 = 1;
          int64_t v37 = v31;
        }
        unint64_t v41 = *(void *)(v49 + 8 * v37);
        if (!v41) {
          break;
        }
LABEL_17:
        uint64_t v69 = (v41 - 1) & v41;
        unint64_t v36 = __clz(__rbit64(v41)) + (v37 << 6);
LABEL_13:
        unint64_t v38 = v30;
        (*(void (**)(char *, unint64_t, uint64_t))(v54 + 16))(v32, *(void *)(v30 + 48) + *(void *)(v54 + 72) * v36, a2);
        unint64_t v39 = *(void *)(v38 + 56) + *(void *)(v55 + 72) * v36;
        uint64_t v5 = v53;
        (*(void (**)(char *, unint64_t, uint64_t))(v55 + 16))(&v32[*(int *)(TupleTypeMetadata2 + 48)], v39, v53);
        uint64_t v40 = 0;
      }
      if (v31 + 2 < v50) {
        break;
      }
      uint64_t v69 = 0;
      uint64_t v40 = 1;
    }
    unint64_t v41 = *(void *)(v49 + 8 * (v31 + 2));
    if (v41)
    {
      int64_t v37 = v31 + 2;
      goto LABEL_17;
    }
    int64_t v42 = v31 + 3;
    if (v31 + 3 < v50) {
      break;
    }
    uint64_t v69 = 0;
    uint64_t v40 = 1;
    int64_t v37 = v31 + 2;
  }
  unint64_t v41 = *(void *)(v49 + 8 * v42);
  if (v41)
  {
    int64_t v37 = v31 + 3;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v37 = v42 + 1;
    if (__OFADD__(v42, 1)) {
      break;
    }
    if (v37 >= v50)
    {
      uint64_t v69 = 0;
      uint64_t v40 = 1;
      int64_t v37 = v48[0];
      goto LABEL_36;
    }
    unint64_t v41 = *(void *)(v49 + 8 * v37);
    ++v42;
    if (v41) {
      goto LABEL_17;
    }
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t Dictionary.filteredDictionary(_:)(uint64_t (*a1)(char *, char *), uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v66 = a1;
  uint64_t v67 = a2;
  uint64_t v10 = sub_100535F20();
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v54 = (char *)&v46 - v12;
  uint64_t v57 = *(void *)(a5 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v65 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = *(void *)(a4 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v53 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v46 - v17;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v71 = sub_100535F20();
  uint64_t v20 = *(void *)(v71 - 8);
  uint64_t v21 = __chkstk_darwin(v71);
  uint64_t v58 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  unint64_t v24 = (char *)&v46 - v23;
  swift_getTupleTypeMetadata2();
  sub_100535160();
  uint64_t v55 = a6;
  uint64_t v74 = sub_100534AE0();
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v25 = sub_1005363A0();
    unint64_t v49 = 0;
    uint64_t v26 = 0;
    unint64_t v27 = 0;
    unint64_t v28 = v25 | 0x8000000000000000;
  }
  else
  {
    uint64_t v29 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v26 = ~v29;
    uint64_t v30 = *(void *)(a3 + 64);
    unint64_t v49 = a3 + 64;
    uint64_t v31 = -v29;
    if (v31 < 64) {
      uint64_t v32 = ~(-1 << v31);
    }
    else {
      uint64_t v32 = -1;
    }
    unint64_t v27 = v32 & v30;
    unint64_t v28 = a3;
  }
  uint64_t v51 = v28 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v69 = TupleTypeMetadata2 - 8;
  uint64_t v48 = v26;
  uint64_t v60 = (void (**)(char *, char *, uint64_t))(v56 + 16);
  uint64_t v59 = (void (**)(char *, char *, uint64_t))(v57 + 16);
  unint64_t v68 = (void (**)(char *, char *, uint64_t))(v20 + 32);
  BOOL v64 = (void (**)(char *, char *, uint64_t))(v56 + 32);
  os_log_type_t v63 = (void (**)(char *, char *, uint64_t))(v57 + 32);
  uint64_t v61 = (uint64_t (**)(char *, uint64_t))(v56 + 8);
  os_log_type_t v62 = (void (**)(char *, uint64_t))(v57 + 8);
  uint64_t v52 = (void (**)(char *, void, uint64_t, uint64_t))(v57 + 56);
  int64_t v50 = (unint64_t)(v26 + 64) >> 6;
  int64_t v47 = v50 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v34 = 0;
  unint64_t v35 = v58;
  uint64_t v70 = v24;
  unint64_t v72 = v28;
  while ((v28 & 0x8000000000000000) != 0)
  {
    if (sub_1005363D0())
    {
      sub_100536750();
      swift_unknownObjectRelease();
      sub_100536750();
      swift_unknownObjectRelease();
      uint64_t v38 = 0;
    }
    else
    {
      uint64_t v38 = 1;
    }
    int64_t v37 = v34;
    uint64_t v73 = v27;
LABEL_22:
    uint64_t v40 = *(void *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v35, v38, 1, TupleTypeMetadata2);
    unint64_t v41 = v70;
    (*v68)(v70, v35, v71);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v41, 1, TupleTypeMetadata2) == 1)
    {
      sub_100206FC4();
      return v74;
    }
    int64_t v42 = &v41[*(int *)(TupleTypeMetadata2 + 48)];
    (*v64)(v18, v41, a4);
    uint64_t v43 = v65;
    (*v63)(v65, v42, a5);
    if (v66(v18, v43))
    {
      (*v60)(v53, v18, a4);
      id v44 = v54;
      (*v59)(v54, v43, a5);
      (*v52)(v44, 0, 1, a5);
      sub_100534AF0();
      unint64_t v35 = v58;
      sub_100534B20();
    }
    (*v62)(v43, a5);
    uint64_t result = (*v61)(v18, a4);
    int64_t v34 = v37;
    unint64_t v28 = v72;
    unint64_t v27 = v73;
  }
  if (v27)
  {
    uint64_t v73 = (v27 - 1) & v27;
    unint64_t v36 = __clz(__rbit64(v27)) | (v34 << 6);
    int64_t v37 = v34;
    goto LABEL_12;
  }
  int64_t v37 = v34 + 1;
  if (__OFADD__(v34, 1))
  {
    __break(1u);
    goto LABEL_41;
  }
  if (v37 >= v50)
  {
    uint64_t v73 = 0;
    uint64_t v38 = 1;
    int64_t v37 = v34;
    goto LABEL_22;
  }
  unint64_t v39 = *(void *)(v49 + 8 * v37);
  if (v39) {
    goto LABEL_18;
  }
  if (v34 + 2 >= v50)
  {
    uint64_t v73 = 0;
    uint64_t v38 = 1;
    goto LABEL_22;
  }
  unint64_t v39 = *(void *)(v49 + 8 * (v34 + 2));
  if (v39)
  {
    int64_t v37 = v34 + 2;
    unint64_t v28 = v72;
    goto LABEL_18;
  }
  int64_t v45 = v34 + 3;
  if (v34 + 3 >= v50)
  {
    uint64_t v73 = 0;
    uint64_t v38 = 1;
    int64_t v37 = v34 + 2;
    goto LABEL_22;
  }
  unint64_t v39 = *(void *)(v49 + 8 * v45);
  if (v39)
  {
    int64_t v37 = v34 + 3;
    unint64_t v28 = v72;
LABEL_18:
    uint64_t v73 = (v39 - 1) & v39;
    unint64_t v36 = __clz(__rbit64(v39)) + (v37 << 6);
LABEL_12:
    (*(void (**)(char *, unint64_t, uint64_t))(v56 + 16))(v35, *(void *)(v28 + 48) + *(void *)(v56 + 72) * v36, a4);
    (*(void (**)(char *, unint64_t, uint64_t))(v57 + 16))(&v35[*(int *)(TupleTypeMetadata2 + 48)], *(void *)(v28 + 56) + *(void *)(v57 + 72) * v36, a5);
    uint64_t v38 = 0;
    goto LABEL_22;
  }
  unint64_t v28 = v72;
  while (1)
  {
    int64_t v37 = v45 + 1;
    if (__OFADD__(v45, 1)) {
      break;
    }
    if (v37 >= v50)
    {
      uint64_t v73 = 0;
      uint64_t v38 = 1;
      int64_t v37 = v47;
      goto LABEL_22;
    }
    unint64_t v39 = *(void *)(v49 + 8 * v37);
    ++v45;
    if (v39) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t IndexPath.safeSection.getter()
{
  if ((unint64_t)(sub_10052FA20() - 1) > 1)
  {
    return sub_10052EDE0();
  }
  else
  {
    return sub_10052FA40();
  }
}

uint64_t IndexPath.safeSection.setter()
{
  uint64_t result = sub_10052FA20();
  if ((unint64_t)(result - 1) <= 1)
  {
    return sub_10052FA50();
  }
  return result;
}

uint64_t (*IndexPath.safeSection.modify(uint64_t *a1))()
{
  a1[1] = v1;
  if ((unint64_t)(sub_10052FA20() - 1) > 1) {
    uint64_t v3 = sub_10052EDE0();
  }
  else {
    uint64_t v3 = sub_10052FA40();
  }
  *a1 = v3;
  return sub_100364AB8;
}

uint64_t sub_100364AB8()
{
  uint64_t result = sub_10052FA20();
  if ((unint64_t)(result - 1) <= 1) {
    return sub_10052FA50();
  }
  return result;
}

uint64_t IndexPath.safeItem.getter()
{
  if ((unint64_t)sub_10052FA20() > 1)
  {
    return sub_10052FA40();
  }
  else
  {
    return sub_10052EDE0();
  }
}

unint64_t IndexPath.safeItem.setter()
{
  unint64_t result = sub_10052FA20();
  if (result >= 2)
  {
    return sub_10052FA50();
  }
  return result;
}

unint64_t (*IndexPath.safeItem.modify(uint64_t *a1))()
{
  a1[1] = v1;
  if ((unint64_t)sub_10052FA20() > 1) {
    uint64_t v3 = sub_10052FA40();
  }
  else {
    uint64_t v3 = sub_10052EDE0();
  }
  *a1 = v3;
  return sub_100364BF0;
}

unint64_t sub_100364BF0()
{
  unint64_t result = sub_10052FA20();
  if (result >= 2) {
    return sub_10052FA50();
  }
  return result;
}

void *String.nonBreakingSpace.unsafeMutableAddressor()
{
  return &static String.nonBreakingSpace;
}

uint64_t static String.nonBreakingSpace.getter()
{
  return 41154;
}

Swift::String __swiftcall String.trim()()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v4 = sub_10052EEE0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = v3;
  v15[1] = v2;
  id v8 = [self whitespaceAndNewlineCharacterSet];
  sub_10052EEB0();

  sub_100368E28();
  uint64_t v9 = sub_100536010();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v12 = v9;
  uint64_t v13 = v11;
  result._object = v13;
  result._countAndFlagsBits = v12;
  return result;
}

Swift::String __swiftcall String.removeSpaces()()
{
  sub_100368E28();
  uint64_t v0 = sub_100536020();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

Swift::String __swiftcall String.replace(usingRegexPattern:with:options:)(Swift::String usingRegexPattern, Swift::String with, NSRegularExpressionOptions options)
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  object = usingRegexPattern._object;
  uint64_t countAndFlagsBits = usingRegexPattern._countAndFlagsBits;
  objc_allocWithZone((Class)NSRegularExpression);
  swift_bridgeObjectRetain();
  id v10 = sub_100367D60(countAndFlagsBits, (uint64_t)object, options);
  uint64_t v11 = v10;
  if (v10)
  {
    uint64_t v12 = sub_100534E00();
    NSString v13 = sub_100534CA0();
    NSString v14 = sub_100534CA0();
    id v15 = [v11 stringByReplacingMatchesInString:v13 options:0 range:0 withTemplate:v14];

    uint64_t v6 = sub_100534CE0();
    uint64_t v5 = v16;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v17 = v6;
  uint64_t v18 = v5;
  result._object = v18;
  result._uint64_t countAndFlagsBits = v17;
  return result;
}

Swift::String __swiftcall String.htmlizedString()()
{
  sub_100368E28();
  uint64_t v0 = sub_100536020();
  sub_100365024(v0, v1);
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_100536020();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  uint64_t v5 = v2;
  uint64_t v6 = v4;
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

unint64_t sub_100365024(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_10000BB04(&qword_10066F088);
  __chkstk_darwin(v4 - 8);
  uint64_t v52 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = 0;
  unint64_t v59 = 0xE000000000000000;
  uint64_t v6 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v7 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0) {
    uint64_t v7 = 11;
  }
  unint64_t v48 = 4 * v6;
  uint64_t v56 = a1;
  unint64_t v57 = a2;
  uint64_t v53 = v7 | (v6 << 16);
  uint64_t v54 = 38;
  unint64_t v55 = 0xE100000000000000;
  unint64_t v8 = 0;
  uint64_t v51 = sub_10052F840();
  uint64_t v9 = *(void *)(v51 - 8);
  unint64_t v10 = 15;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v49 = v9 + 56;
  int64_t v50 = v11;
  uint64_t v46 = a1;
  unint64_t v47 = a2;
  while (1)
  {
    uint64_t v13 = (uint64_t)v52;
    v50(v52, 1, 1, v51);
    sub_100368E28();
    unint64_t v14 = sub_100536040();
    char v16 = v15;
    sub_100013C44(v13, &qword_10066F088);
    unint64_t result = swift_bridgeObjectRelease();
    if (v16) {
      break;
    }
    unint64_t v17 = v14 >> 14;
    if (v14 >> 14 < v8)
    {
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    sub_100534F60();
    sub_100534E50();
    unint64_t result = swift_bridgeObjectRelease();
    uint64_t v56 = a1;
    unint64_t v57 = a2;
    uint64_t v54 = 59;
    unint64_t v55 = 0xE100000000000000;
    if (v48 < v17) {
      goto LABEL_34;
    }
    uint64_t v18 = (uint64_t)v52;
    v50(v52, 1, 1, v51);
    sub_100536040();
    unint64_t v10 = v19;
    char v21 = v20;
    sub_100013C44(v18, &qword_10066F088);
    unint64_t result = swift_bridgeObjectRelease();
    if (v21) {
      goto LABEL_31;
    }
    unint64_t v8 = v10 >> 14;
    if (v10 >> 14 < v17) {
      goto LABEL_36;
    }
    unint64_t v22 = sub_100534F60();
    unint64_t v24 = v23;
    uint64_t v26 = v25;
    uint64_t v28 = v27;
    if (sub_100368B00(8998, 0xE200000000000000, v22, v23))
    {
      unint64_t result = sub_100535F50();
      if (v24 >> 14 < result >> 14) {
        goto LABEL_37;
      }
      unint64_t v29 = sub_100535F80();
      unint64_t v31 = v30;
      if (sub_100368B00(120, 0xE100000000000000, v29, v30))
      {
        swift_bridgeObjectRelease();
        uint64_t v32 = 16;
      }
      else
      {
        BOOL v39 = sub_100368B00(88, 0xE100000000000000, v29, v31);
        swift_bridgeObjectRelease();
        if (v39) {
          uint64_t v32 = 16;
        }
        else {
          uint64_t v32 = 10;
        }
      }
      unint64_t v40 = sub_100535F50();
      unint64_t result = sub_100535F50();
      if (result >> 14 < v40 >> 14) {
        goto LABEL_38;
      }
      unint64_t v41 = sub_100535F80();
      uint64_t v38 = sub_100365BE8(v41, v42, v43, v44, v32);
      int64_t v37 = v45;
      swift_bridgeObjectRelease();
      if (v37)
      {
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
    }
    else
    {
      if (qword_10066E360 != -1) {
        swift_once();
      }
      id v33 = off_10066F038;
      if (*((void *)off_10066F038 + 2))
      {
        swift_bridgeObjectRetain();
        unint64_t v34 = sub_100367F28(v22, v24, v26, v28);
        if (v35)
        {
          unint64_t v36 = (uint64_t *)(v33[7] + 16 * v34);
          uint64_t v38 = *v36;
          int64_t v37 = (void *)v36[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
LABEL_29:
          v60._uint64_t countAndFlagsBits = v38;
          v60._object = v37;
          sub_100534E70(v60);
          goto LABEL_8;
        }
        swift_bridgeObjectRelease();
      }
    }
    sub_100534E50();
LABEL_8:
    a1 = v46;
    unint64_t result = swift_bridgeObjectRelease();
    a2 = v47;
    uint64_t v56 = a1;
    unint64_t v57 = v47;
    uint64_t v54 = 38;
    unint64_t v55 = 0xE100000000000000;
    if (v48 < v8) {
      goto LABEL_35;
    }
  }
  unint64_t v17 = v10 >> 14;
LABEL_31:
  if (v48 >= v17)
  {
    sub_100534F60();
    sub_100534E50();
    swift_bridgeObjectRelease();
    return v58;
  }
LABEL_39:
  __break(1u);
  return result;
}

Swift::String __swiftcall String.insensitiveCompareString()()
{
  unint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v4 = sub_10000BB04(&qword_10066F088);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v7 = 0xE000000000000000;
  uint64_t v29 = 0;
  unint64_t v30 = 0xE000000000000000;
  uint64_t v8 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v8 = v3 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v25 = v3;
  unint64_t v26 = v2;
  uint64_t v27 = 0;
  uint64_t v28 = v8;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_100534E90();
  if (v10)
  {
    uint64_t v11 = v9;
    uint64_t v12 = v10;
    do
    {
      if ((sub_100534B70() & 1) == 0)
      {
        v31._uint64_t countAndFlagsBits = v11;
        v31._object = v12;
        sub_100534E70(v31);
      }
      swift_bridgeObjectRelease();
      uint64_t v11 = sub_100534E90();
      uint64_t v12 = v13;
    }
    while (v13);
    uint64_t v14 = v29;
    unint64_t v7 = v30;
  }
  else
  {
    uint64_t v14 = 0;
  }
  swift_bridgeObjectRelease();
  uint64_t v25 = v14;
  unint64_t v26 = v7;
  sub_100368E28();
  uint64_t v15 = sub_100536000();
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  uint64_t v25 = v15;
  unint64_t v26 = v17;
  sub_10052F7F0();
  uint64_t v18 = sub_10052F840();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v6, 0, 1, v18);
  uint64_t v19 = sub_100536050();
  char v21 = v20;
  sub_100013C44((uint64_t)v6, &qword_10066F088);
  swift_bridgeObjectRelease();
  uint64_t v22 = v19;
  unint64_t v23 = v21;
  result._object = v23;
  result._uint64_t countAndFlagsBits = v22;
  return result;
}

id String.BOOLValue.getter()
{
  NSString v0 = sub_100534CA0();
  id v1 = [v0 BOOLValue];

  return v1;
}

BOOL String.containsExcessiveHeightCharacters.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  sub_10000BB04(&qword_10066F090);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v20 - v5;
  uint64_t v7 = sub_10052EEE0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  unint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = CTFontCopySystemUIFontExcessiveLineHeightCharacterSet();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v11
    && (uint64_t v13 = (void *)v11,
        v12(v4, 1, 1, v7),
        sub_1003698E0(&qword_10066F098, (void (*)(uint64_t))&type metadata accessor for CharacterSet),
        sub_100536520(),
        v13,
        uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48),
        v14(v4, 1, v7) != 1))
  {
    uint64_t v20 = a2;
    unint64_t v17 = v4;
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v18(v6, v17, v7);
    v12(v6, 0, 1, v7);
    if (v14(v6, 1, v7) != 1)
    {
      v18(v10, v6, v7);
      uint64_t v22 = v21;
      uint64_t v23 = v20;
      sub_100368E28();
      sub_100535FF0();
      BOOL v15 = (v19 & 1) == 0;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      return v15;
    }
  }
  else
  {
    v12(v6, 1, 1, v7);
  }
  sub_100013C44((uint64_t)v6, &qword_10066F090);
  return 0;
}

BOOL String.containsCharacter(from:)()
{
  sub_100368E28();
  sub_100535FF0();
  return (v0 & 1) == 0;
}

void *sub_100365AD4()
{
  sub_10000BB04(&qword_10066F178);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10053DF50;
  *(void *)(inited + 32) = sub_100535F70();
  *(void *)(inited + 40) = v1;
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 56) = v3;
  *(void *)(inited + 64) = 34;
  *(void *)(inited + 72) = 0xE100000000000000;
  *(void *)(inited + 80) = sub_100535F70();
  *(void *)(inited + 88) = v4;
  *(void *)(inited + 96) = v5;
  *(void *)(inited + 104) = v6;
  *(void *)(inited + 112) = 38;
  *(void *)(inited + 120) = 0xE100000000000000;
  *(void *)(inited + 128) = sub_100535F70();
  *(void *)(inited + 136) = v7;
  *(void *)(inited + 144) = v8;
  *(void *)(inited + 152) = v9;
  *(void *)(inited + 160) = 39;
  *(void *)(inited + 168) = 0xE100000000000000;
  *(void *)(inited + 176) = sub_100535F70();
  *(void *)(inited + 184) = v10;
  *(void *)(inited + 192) = v11;
  *(void *)(inited + 200) = v12;
  *(void *)(inited + 208) = 60;
  *(void *)(inited + 216) = 0xE100000000000000;
  *(void *)(inited + 224) = sub_100535F70();
  *(void *)(inited + 232) = v13;
  *(void *)(inited + 240) = v14;
  *(void *)(inited + 248) = v15;
  *(void *)(inited + 256) = 62;
  *(void *)(inited + 264) = 0xE100000000000000;
  Swift::String result = (void *)sub_100350E4C(inited);
  off_10066F038 = result;
  return result;
}

uint64_t sub_100365BE8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((unint64_t)(a5 - 37) < 0xFFFFFFFFFFFFFFDDLL)
  {
    __break(1u);
    return sub_100534DC0();
  }
  if ((a2 ^ a1) < 0x4000) {
    return 0;
  }
  uint64_t v10 = sub_100368C98(a1, a2, a3, a4, a5);
  if ((v10 & 0x10000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1003685B4(a1, a2, a3, a4, a5);
    swift_bridgeObjectRelease();
    if ((v11 & 0x100000000) != 0) {
      return 0;
    }
  }
  else
  {
    LODWORD(v11) = v10;
    if ((v10 & 0x100000000) != 0) {
      return 0;
    }
  }
  uint64_t result = 0;
  if (WORD1(v11) <= 0x10u && (v11 & 0xFFFFF800) != 0xD800)
  {
    if ((v11 & 0xFFFFFF80) == 0 && v11 > 0xFF)
    {
      __break(1u);
      return result;
    }
    return sub_100534DC0();
  }
  return result;
}

uint64_t Optional<A>.isEmpty.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  BOOL v3 = v2 == 0;
  return !a2 || v3;
}

uint64_t Optional<A>.nonEmpty.getter(uint64_t a1, unint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v2 = a1;
  uint64_t v3 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v3 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3) {
    return 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

NSAttributedString __swiftcall NSAttributedString.init(string:attributes:replacingPlaceholder:withImage:imageAttributes:)(Swift::String string, Swift::OpaquePointer attributes, Swift::String replacingPlaceholder, UIImage_optional withImage, Swift::OpaquePointer imageAttributes)
{
  Class isa = withImage.value.super.isa;
  sub_100534CB0();
  id v6 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v7 = sub_100534CA0();
  swift_bridgeObjectRelease();
  _s3__C3KeyVMa_0(0);
  uint64_t v9 = v8;
  sub_1003698E0(&qword_10066E500, _s3__C3KeyVMa_0);
  uint64_t v23 = v9;
  Class v10 = sub_100534A90().super.isa;
  swift_bridgeObjectRelease();
  id v11 = [v6 initWithString:v7 attributes:v10];

  NSString v12 = sub_100534CA0();
  swift_bridgeObjectRelease();
  NSString v13 = sub_100534CA0();
  swift_bridgeObjectRelease();
  id v14 = [v12 rangeOfString:v13 options:129];
  uint64_t v16 = v15;

  if (isa)
  {
    unint64_t v17 = self;
    Class isa = isa;
    id v18 = [v17 textAttachmentWithImage:isa];
    Class v19 = sub_100534A90().super.isa;
    swift_bridgeObjectRelease();
    id v20 = [self attributedStringWithAttachment:v18 attributes:v19];
  }
  else
  {
    swift_bridgeObjectRelease();
    id v20 = [objc_allocWithZone((Class)NSAttributedString) init];
  }
  [v11 replaceCharactersInRange:v14 withAttributedString:v16];
  id v21 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithAttributedString:v11];

  return (NSAttributedString)v21;
}

void sub_1003660B8()
{
  static Double.epsilon = 0x3E80000000000000;
}

uint64_t *Double.epsilon.unsafeMutableAddressor()
{
  if (qword_10066E368 != -1) {
    swift_once();
  }
  return &static Double.epsilon;
}

double static Double.epsilon.getter()
{
  if (qword_10066E368 != -1) {
    swift_once();
  }
  return *(double *)&static Double.epsilon;
}

double TimeIntervalSyntaxSugar.minutes.getter(uint64_t a1, uint64_t a2)
{
  return (*(double (**)(void))(a2 + 16))() * 60.0;
}

double TimeIntervalSyntaxSugar.hours.getter(uint64_t a1, uint64_t a2)
{
  return (*(double (**)(void))(a2 + 24))() * 60.0;
}

double sub_1003661C8()
{
  return (double)*v0;
}

double sub_1003661D4()
{
  return (double)*v0 * 60.0;
}

double sub_1003661EC()
{
  return (double)*v0 * 60.0 * 60.0;
}

double sub_100366208()
{
  return *v0 * 60.0;
}

double sub_10036621C()
{
  return *v0 * 60.0 * 60.0;
}

uint64_t _NSRange.init(range:in:)()
{
  sub_100534DF0();
  if (v0 & 1) != 0 || (sub_100534DF0(), (v1))
  {
    uint64_t result = sub_1005363F0();
    __break(1u);
  }
  else
  {
    uint64_t v2 = sub_100534F10();
    sub_100534F10();
    swift_bridgeObjectRelease();
    return v2;
  }
  return result;
}

{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t result;

  sub_100534E10();
  sub_100534DF0();
  if (v0 & 1) != 0 || (sub_100534DF0(), (v1))
  {
    uint64_t result = sub_1005363F0();
    __break(1u);
  }
  else
  {
    uint64_t v2 = sub_100534F10();
    sub_100534F10();
    swift_bridgeObjectRelease();
    return v2;
  }
  return result;
}

Swift::Bool __swiftcall _NSRange.contains(_:)(__C::_NSRange a1)
{
  if (a1.location >= v1)
  {
    if (__OFADD__(a1.location, a1.length))
    {
      __break(1u);
    }
    else if (!__OFADD__(v1, v2))
    {
      LOBYTE(a1.location) = v1 + v2 >= a1.location + a1.length;
      return a1.location;
    }
    __break(1u);
    return a1.location;
  }
  LOBYTE(a1.location) = 0;
  return a1.location;
}

__C::_NSRange __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> _NSRange.convert(from:to:preserveLength:)(Swift::String from, Swift::String to, Swift::Bool preserveLength)
{
  sub_100368E28();
  if (sub_100536070())
  {
    swift_bridgeObjectRetain();
    Swift::Int v4 = sub_100534EF0();
    swift_bridgeObjectRelease();
    NSString v5 = sub_100534CA0();
    NSString v6 = sub_100534CA0();
    id v7 = [v5 rangeOfString:v6 to._countAndFlagsBits, to._object, from._countAndFlagsBits, from._object];
    Swift::Int v9 = v8;

    v10.Swift::Int location = 0;
    v10.Swift::Int length = v4;
    v11.Swift::Int location = (Swift::Int)v7;
    v11.Swift::Int length = v9;
    __C::_NSRange v14 = _NSRange.convert(from:to:preserveLength:)(v10, v11, preserveLength);
    Swift::Int length = v14.length;
    Swift::Int location = v14.location;
  }
  else
  {
    sub_100368E7C();
    swift_allocError();
    *uint64_t v15 = 4;
    Swift::Int location = swift_willThrow();
  }
  result.Swift::Int length = length;
  result.Swift::Int location = location;
  return result;
}

__C::_NSRange __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> _NSRange.convert(from:to:preserveLength:)(__C::_NSRange from, __C::_NSRange to, Swift::Bool preserveLength)
{
  if (to.location < from.location) {
    goto LABEL_5;
  }
  if (__OFADD__(to.location, to.length))
  {
    __break(1u);
    goto LABEL_19;
  }
  Swift::Int v5 = from.location + from.length;
  if (__OFADD__(from.location, from.length))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v5 < to.location + to.length)
  {
LABEL_5:
    char v6 = 0;
LABEL_6:
    sub_100368E7C();
    swift_allocError();
    *id v7 = v6;
    from.Swift::Int location = swift_willThrow();
    return from;
  }
  if (v3 < from.location)
  {
LABEL_11:
    char v6 = 1;
    goto LABEL_6;
  }
  uint64_t v8 = v4;
  if (__OFADD__(v3, v4)) {
    goto LABEL_20;
  }
  if (v5 < v3 + v4) {
    goto LABEL_11;
  }
  if (__OFSUB__(v3, to.location))
  {
LABEL_21:
    __break(1u);
    return from;
  }
  v11.Swift::Int location = 0;
  v11.Swift::Int length = to.length;
  from.Swift::Int location = sub_100535E90(v11);
  if (v10)
  {
    char v6 = 2;
    goto LABEL_6;
  }
  if (preserveLength && from.length != v8)
  {
    char v6 = 3;
    goto LABEL_6;
  }
  return from;
}

Swift::Bool __swiftcall _NSRange.intersects(_:)(__C::_NSRange a1)
{
  if (__OFADD__(v1, v2))
  {
    __break(1u);
    goto LABEL_13;
  }
  if (__OFADD__(a1.location, a1.length))
  {
LABEL_13:
    __break(1u);
    return a1.location;
  }
  if (v1 >= a1.location && a1.location + a1.length > v1) {
    return 1;
  }
  LOBYTE(a1.location) = a1.location >= v1 && v1 + v2 > a1.location;
  return a1.location;
}

uint64_t sub_10036672C()
{
  uint64_t result = sub_10052EDE0();
  static _NSRange.notFound = result;
  unk_10067B2C0 = 0;
  return result;
}

uint64_t *_NSRange.notFound.unsafeMutableAddressor()
{
  if (qword_10066E370 != -1) {
    swift_once();
  }
  return &static _NSRange.notFound;
}

uint64_t static _NSRange.notFound.getter()
{
  if (qword_10066E370 != -1) {
    swift_once();
  }
  return static _NSRange.notFound;
}

Swift::tuple_first___C__NSRange_second___C__NSRange __swiftcall _NSRange.difference(_:)(__C::_NSRange a1)
{
  Swift::Int v3 = v2;
  Swift::Int v4 = v1;
  Swift::Int v5 = v1 + v2;
  BOOL v6 = __OFADD__(v1, v2);
  if (v1 < a1.location)
  {
    if (!v6) {
      goto LABEL_10;
    }
    __break(1u);
  }
  if (v6)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  if (__OFADD__(a1.location, a1.length))
  {
LABEL_52:
    __break(1u);
LABEL_53:
    swift_once();
    goto LABEL_43;
  }
  if (a1.location + a1.length >= v5)
  {
    if (qword_10066E370 == -1)
    {
LABEL_45:
      Swift::Int v4 = static _NSRange.notFound;
      Swift::Int v3 = unk_10067B2C0;
      Swift::Int v7 = static _NSRange.notFound;
      Swift::Int v9 = unk_10067B2C0;
      goto LABEL_46;
    }
LABEL_48:
    swift_once();
    goto LABEL_45;
  }
LABEL_10:
  Swift::Int v7 = a1.location + a1.length;
  if (__OFADD__(a1.location, a1.length))
  {
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if (v4 < a1.location || v7 <= v4) {
    goto LABEL_27;
  }
  BOOL v8 = 0;
  Swift::Int v3 = a1.location - v4;
  if (!__OFSUB__(a1.location, v4))
  {
    while (1)
    {
      Swift::Int v9 = v5 - v7;
      if (__OFSUB__(v5, v7)) {
        goto LABEL_50;
      }
      if (!v8) {
        break;
      }
      if (v7 >= v5) {
        goto LABEL_38;
      }
      Swift::Int v5 = v4 + v3;
      if (__OFADD__(v4, v3))
      {
        __break(1u);
LABEL_55:
        Swift::Int v11 = a1.location + a1.length;
        Swift::Int v12 = v9;
        swift_once();
        Swift::Int v9 = v12;
        Swift::Int v7 = v11;
LABEL_42:
        Swift::Int v4 = v7;
        Swift::Int v3 = v9;
        goto LABEL_43;
      }
      if (v5 < v7) {
        goto LABEL_46;
      }
      if (__OFADD__(v7, v9))
      {
        __break(1u);
        goto LABEL_57;
      }
      if (v5 <= v7 + v9) {
        Swift::Int v5 = v7 + v9;
      }
      if (v7 < v4) {
        Swift::Int v4 = a1.location + a1.length;
      }
      Swift::Int v3 = v5 - v4;
      if (!__OFSUB__(v5, v4)) {
        goto LABEL_38;
      }
      __break(1u);
LABEL_27:
      if (a1.location < v4 || v5 <= a1.location) {
        goto LABEL_38;
      }
      BOOL v8 = v4 < a1.location && v3 > 0;
      Swift::Int v3 = a1.location - v4;
      if (__OFSUB__(a1.location, v4)) {
        goto LABEL_37;
      }
    }
    if (v7 < v5)
    {
      if (qword_10066E370 != -1) {
        goto LABEL_55;
      }
      goto LABEL_42;
    }
    if (qword_10066E370 == -1) {
      goto LABEL_45;
    }
    goto LABEL_48;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  if (qword_10066E370 != -1) {
    goto LABEL_53;
  }
LABEL_43:
  Swift::Int v7 = static _NSRange.notFound;
  Swift::Int v9 = unk_10067B2C0;
LABEL_46:
  a1.Swift::Int location = v4;
  a1.Swift::Int length = v3;
LABEL_57:
  result.first = a1;
  result.second.Swift::Int length = v9;
  result.second.Swift::Int location = v7;
  return result;
}

uint64_t _NSRange.extendRangeToBounds(of:allowedCharacterSet:forbiddenCharacterSet:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v6 = sub_1005356B0();
  if (v8)
  {
LABEL_22:
    int v31 = 0;
    uint64_t v30 = 667;
    goto LABEL_25;
  }
  unint64_t v9 = v6;
  unint64_t v10 = v7;
  uint64_t v11 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v11 = a1 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v12 = 4 * v11;
  unint64_t v35 = a2;
  uint64_t v32 = 4 * v11;
LABEL_5:
  if (v9 >= 0x4000)
  {
    unint64_t v15 = sub_100534E20();
    if (v10 >> 14 >= v15 >> 14)
    {
      char v16 = 0;
      unint64_t v17 = v15;
      unint64_t v14 = v10;
      do
      {
        unint64_t v36 = v9;
        uint64_t v18 = sub_100534F40();
        uint64_t v19 = a1;
        unint64_t v21 = v20;
        __chkstk_darwin(v18);
        uint64_t v30 = v33;
        swift_bridgeObjectRetain();
        char v22 = sub_100366EB8((uint64_t (*)(void *))sub_100368ED0, (uint64_t)v29, v18, v21);
        uint64_t v23 = swift_bridgeObjectRelease();
        __chkstk_darwin(v23);
        uint64_t v30 = v34;
        char v24 = sub_1003671EC(0, (void (*)(uint64_t *__return_ptr, char *, void *))sub_100368EF0, (uint64_t)v29, v18, v21);
        a1 = v19;
        uint64_t v12 = v32;
        swift_bridgeObjectRelease();
        if (v22 & 1) == 0 || (v24)
        {
          unint64_t v9 = v36;
          if (v16) {
            goto LABEL_18;
          }
        }
        else
        {
          unint64_t v9 = v17;
          unint64_t v14 = v10;
          if ((v16 & 1) == 0) {
            goto LABEL_5;
          }
        }
LABEL_10:
        char v13 = 1;
        if (v12 == v14 >> 14) {
          goto LABEL_9;
        }
        unint64_t v10 = sub_100534E10();
        char v16 = 1;
        unint64_t v17 = v9;
      }
      while (v10 >> 14 >= v9 >> 14);
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
  char v13 = 0;
  unint64_t v14 = v10;
LABEL_9:
  if ((v13 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_18:
  swift_bridgeObjectRetain();
  sub_100534DF0();
  if (v25)
  {
    int v31 = 0;
    uint64_t v30 = 719;
  }
  else
  {
    sub_100534DF0();
    if ((v26 & 1) == 0)
    {
      uint64_t v27 = sub_100534F10();
      sub_100534F10();
      swift_bridgeObjectRelease();
      return v27;
    }
    int v31 = 0;
    uint64_t v30 = 720;
  }
LABEL_25:
  uint64_t result = sub_1005363F0();
  __break(1u);
  return result;
}

uint64_t sub_100366D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10052EEE0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000BB04(&qword_10066F090);
  __chkstk_darwin(v7 - 8);
  unint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100369A6C(a2, (uint64_t)v9);
  char v10 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
    char v10 = sub_10052EEC0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v10 & 1;
}

uint64_t sub_100366EB8(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  v17[3] = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) != 0) {
    uint64_t v5 = HIBYTE(a4) & 0xF;
  }
  else {
    uint64_t v5 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    uint64_t v16 = a4 & 0xFFFFFFFFFFFFFFLL;
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    while (1)
    {
      if ((a4 & 0x1000000000000000) != 0)
      {
        int v10 = sub_1005361B0();
      }
      else
      {
        if ((a4 & 0x2000000000000000) != 0)
        {
          v17[0] = a3;
          v17[1] = v16;
        }
        else if ((a3 & 0x1000000000000000) == 0)
        {
          sub_100536250();
        }
        int v10 = sub_100536260();
      }
      uint64_t v12 = v11;
      LODWORD(v17[0]) = v10;
      char v13 = a1(v17);
      if (v4)
      {
        swift_bridgeObjectRelease();
        return v14 & 1;
      }
      if ((v13 & 1) == 0) {
        break;
      }
      v9 += v12;
      if (v9 >= v5)
      {
        swift_bridgeObjectRelease();
        char v14 = 1;
        return v14 & 1;
      }
    }
    swift_bridgeObjectRelease();
    char v14 = 0;
  }
  else
  {
    char v14 = 1;
  }
  return v14 & 1;
}

uint64_t sub_100366FFC@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  uint64_t v6 = sub_10052EEE0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000BB04(&qword_10066F090);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  char v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v18 - v14;
  LOBYTE(a1) = *a1;
  sub_100369A6C(a2, (uint64_t)&v18 - v14);
  if (a1)
  {
    char v16 = 1;
  }
  else
  {
    sub_100369A6C((uint64_t)v15, (uint64_t)v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
    {
      char v16 = 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
      char v16 = sub_10052EEC0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
  uint64_t result = sub_100013C44((uint64_t)v15, &qword_10066F090);
  *a3 = v16 & 1;
  return result;
}

uint64_t sub_1003671EC(char a1, void (*a2)(uint64_t *__return_ptr, char *, void *), uint64_t a3, uint64_t a4, unint64_t a5)
{
  BYTE1(v17) = a1;
  if ((a5 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a5) & 0xF;
  }
  else {
    uint64_t v6 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v6)
  {
    uint64_t v15 = a5 & 0xFFFFFFFFFFFFFFLL;
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    do
    {
      if ((a5 & 0x1000000000000000) != 0)
      {
        int v11 = sub_1005361B0();
      }
      else
      {
        if ((a5 & 0x2000000000000000) != 0)
        {
          v16[0] = a4;
          v16[1] = v15;
        }
        else if ((a4 & 0x1000000000000000) == 0)
        {
          sub_100536250();
        }
        int v11 = sub_100536260();
      }
      uint64_t v13 = v12;
      LODWORD(v16[0]) = v11;
      a2(&v17, (char *)&v17 + 1, v16);
      if (v5) {
        break;
      }
      v10 += v13;
      LOBYTE(v13) = v17;
      BYTE1(v17) = v17;
    }
    while (v10 < v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v13) = a1;
  }
  return v13 & 1;
}

Swift::Int_optional __swiftcall _NSRange.NSRangeIterator.next()()
{
  Swift::Int v1 = *(void *)(v0 + 16);
  if (*(unsigned char *)(v0 + 24))
  {
    Swift::Bool v2 = 1;
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 8);
    if (__OFADD__(*(void *)v0, v3))
    {
      __break(1u);
    }
    else if (v1 >= *(void *)v0 + v3)
    {
      Swift::Int v1 = 0;
      Swift::Bool v2 = 1;
    }
    else
    {
      Swift::Bool v2 = 0;
      *(void *)(v0 + 16) = v1 + 1;
    }
  }
  result.value = v1;
  result.is_nil = v2;
  return result;
}

void sub_100367370(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  if (*(unsigned char *)(v1 + 24)) {
    goto LABEL_6;
  }
  uint64_t v3 = *(void *)(v1 + 8);
  if (!__OFADD__(*(void *)v1, v3))
  {
    if (v2 < *(void *)v1 + v3)
    {
      char v4 = 0;
      *(void *)(v1 + 16) = v2 + 1;
LABEL_7:
      *(void *)a1 = v2;
      *(unsigned char *)(a1 + 8) = v4;
      return;
    }
    uint64_t v2 = 0;
LABEL_6:
    char v4 = 1;
    goto LABEL_7;
  }
  __break(1u);
}

void sub_1003673C8(uint64_t a1@<X8>)
{
  uint64_t v2 = v1[1];
  if (v2 >= 1) {
    uint64_t v3 = *v1;
  }
  else {
    uint64_t v3 = 0;
  }
  *(void *)a1 = *v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v2 < 1;
}

uint64_t sub_1003673E8()
{
  return sub_100368438(*v0, v0[1]);
}

uint64_t sub_1003673F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10036120C(a1, a2, a3, *v3, v3[1]);
}

uint64_t WeakWrapper.value.setter()
{
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

uint64_t (*WeakWrapper.value.modify(uint64_t *a1))()
{
  a1[1] = v1;
  *a1 = swift_unknownObjectWeakLoadStrong();
  return sub_100367484;
}

uint64_t sub_100367484()
{
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

uint64_t WeakWrapper.init(value:)()
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

uint64_t Int.romanNumeral.getter(uint64_t a1)
{
  if (a1 < 1) {
    return 0;
  }
  uint64_t v1 = a1;
  for (unint64_t i = 0; i != 13; ++i)
  {
    if (i >= 0xD)
    {
      __break(1u);
      JUMPOUT(0x100367690);
    }
    uint64_t v3 = qword_10054C930[*((char *)&off_10062C830 + i + 32)];
    if (v1 >= v3)
    {
      char v4 = (void *)0xE100000000000000;
      uint64_t v5 = 77;
      switch(*((unsigned char *)&off_10062C830 + i + 32))
      {
        case 1:
          char v4 = (void *)0xE200000000000000;
          uint64_t v5 = 19779;
          break;
        case 2:
          uint64_t v5 = 68;
          break;
        case 3:
          char v4 = (void *)0xE200000000000000;
          uint64_t v5 = 17475;
          break;
        case 4:
          uint64_t v5 = 67;
          break;
        case 5:
          char v4 = (void *)0xE200000000000000;
          uint64_t v5 = 17240;
          break;
        case 6:
          uint64_t v5 = 76;
          break;
        case 7:
          char v4 = (void *)0xE200000000000000;
          uint64_t v5 = 19544;
          break;
        case 8:
          uint64_t v5 = 88;
          break;
        case 9:
          char v4 = (void *)0xE200000000000000;
          uint64_t v5 = 22601;
          break;
        case 0xA:
          uint64_t v5 = 86;
          break;
        case 0xB:
          char v4 = (void *)0xE200000000000000;
          uint64_t v5 = 22089;
          break;
        case 0xC:
          uint64_t v5 = 73;
          break;
        default:
          goto LABEL_19;
      }
      do
      {
LABEL_19:
        v1 -= v3;
        v7._uint64_t countAndFlagsBits = v5;
        v7._object = v4;
        sub_100534E80(v7);
      }
      while (v1 >= v3);
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

_UNKNOWN **static RomanNumerals.allCases.getter()
{
  return &off_10062C830;
}

uint64_t RomanNumerals.arabicNumber.getter(char a1)
{
  return qword_10054C930[a1];
}

uint64_t RomanNumerals.rawValue.getter(char a1)
{
  uint64_t result = 77;
  switch(a1)
  {
    case 1:
      uint64_t result = 19779;
      break;
    case 2:
      uint64_t result = 68;
      break;
    case 3:
      uint64_t result = 17475;
      break;
    case 4:
      uint64_t result = 67;
      break;
    case 5:
      uint64_t result = 17240;
      break;
    case 6:
      uint64_t result = 76;
      break;
    case 7:
      uint64_t result = 19544;
      break;
    case 8:
      uint64_t result = 88;
      break;
    case 9:
      uint64_t result = 22601;
      break;
    case 10:
      uint64_t result = 86;
      break;
    case 11:
      uint64_t result = 22089;
      break;
    case 12:
      uint64_t result = 73;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1003677C4(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = RomanNumerals.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == RomanNumerals.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_100536780();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_100367850()
{
  char v1 = *v0;
  sub_100536950();
  RomanNumerals.rawValue.getter(v1);
  sub_100534DD0();
  swift_bridgeObjectRelease();
  return sub_1005369A0();
}

uint64_t sub_1003678B4()
{
  RomanNumerals.rawValue.getter(*v0);
  sub_100534DD0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100367908()
{
  char v1 = *v0;
  sub_100536950();
  RomanNumerals.rawValue.getter(v1);
  sub_100534DD0();
  swift_bridgeObjectRelease();
  return sub_1005369A0();
}

uint64_t sub_100367968@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s14MusicUtilities13RomanNumeralsO8rawValueACSgSS_tcfC_0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_100367998@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = RomanNumerals.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1003679C4(void *a1@<X8>)
{
  *a1 = &off_10062C830;
}

Swift::Int sub_1003679D4()
{
  Swift::Int result = sub_100369928((uint64_t)&off_10062C9B8);
  static NSDirectionalEdgeInsets.Edge.all = result;
  return result;
}

uint64_t *NSDirectionalEdgeInsets.Edge.all.unsafeMutableAddressor()
{
  if (qword_10066E378 != -1) {
    swift_once();
  }
  return &static NSDirectionalEdgeInsets.Edge.all;
}

uint64_t static NSDirectionalEdgeInsets.Edge.all.getter()
{
  if (qword_10066E378 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

double NSDirectionalEdgeInsets.init(edge:length:)(uint64_t a1, double a2)
{
  if (sub_1001D5900(0, a1)) {
    double v4 = a2;
  }
  else {
    double v4 = 0.0;
  }
  sub_1001D5900(1u, a1);
  sub_1001D5900(2u, a1);
  sub_1001D5900(3u, a1);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100367B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10052FA30();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_1003698E0(&qword_10066F158, (void (*)(uint64_t))&type metadata accessor for IndexPath),
        uint64_t v7 = sub_100534B40(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_1003698E0(&qword_10066F160, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      char v15 = sub_100534BF0();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

id sub_100367D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v5 = sub_100534CA0();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithPattern:v5 options:a3 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    sub_10052F1E0();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_100367E3C(uint64_t a1, uint64_t a2)
{
  return sub_100367E94(a1, a2, (void (*)(unsigned char *, uint64_t, uint64_t))&String.hash(into:), (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_1001A1B40);
}

uint64_t sub_100367E68(uint64_t a1, uint64_t a2)
{
  return sub_100367E94(a1, a2, (void (*)(unsigned char *, uint64_t, uint64_t))&Character.hash(into:), (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_1001A1B40);
}

uint64_t sub_100367E94(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, Swift::Int))
{
  sub_100536950();
  a3(v10, a1, a2);
  Swift::Int v7 = sub_1005369A0();

  return a4(a1, a2, v7);
}

unint64_t sub_100367F28(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100534B40();
  return sub_100368118(a1, a2, a3, a4, v8);
}

unint64_t sub_100367FB4(uint64_t a1)
{
  uint64_t v2 = sub_100536940();

  return sub_100368254(a1, v2);
}

unint64_t sub_100367FF8(Swift::UInt a1)
{
  sub_100536950();
  sub_100536960(a1);
  Swift::Int v2 = sub_1005369A0();

  return sub_100368254(a1, v2);
}

unint64_t sub_100368064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100536950();
  if (a2)
  {
    sub_100536960(1uLL);
    swift_bridgeObjectRetain();
    sub_100534DD0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100536960(0);
  }
  Swift::Int v6 = sub_1005369A0();

  return sub_1003682F0(a1, a2, a3, v6);
}

unint64_t sub_100368118(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = a5 & ~v7;
  if ((*(void *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v11 = *(void *)(v5 + 48);
    uint64_t v12 = (unint64_t *)(v11 + 32 * v8);
    unint64_t v13 = *v12;
    unint64_t v14 = v12[1];
    unint64_t v15 = v12[2];
    unint64_t v16 = v12[3];
    unint64_t v17 = a1 >> 16;
    unint64_t v18 = a2 >> 16;
    BOOL v19 = v15 == a3 && v16 == a4;
    BOOL v20 = v19 && v13 >> 16 == v17;
    BOOL v21 = v20 && v14 >> 16 == v18;
    if (!v21 && (sub_100536690() & 1) == 0)
    {
      uint64_t v22 = ~v7;
      do
      {
        unint64_t v8 = (v8 + 1) & v22;
        if (((*(void *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        uint64_t v23 = (void *)(v11 + 32 * v8);
        BOOL v24 = v23[2] == a3 && v23[3] == a4;
        BOOL v25 = v24 && *v23 >> 16 == v17;
        BOOL v26 = v25 && v23[1] >> 16 == v18;
      }
      while (!v26 && (sub_100536690() & 1) == 0);
    }
  }
  return v8;
}

unint64_t sub_100368254(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1003682F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = a4 & ~v6;
  if ((*(void *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v8 = v4;
    uint64_t v11 = ~v6;
    do
    {
      unint64_t v14 = (void *)(*(void *)(v8 + 48) + 24 * v7);
      uint64_t v15 = v14[1];
      unint64_t v16 = (void *)v14[2];
      if (v15)
      {
        if (a2)
        {
          BOOL v17 = *v14 == a1 && v15 == a2;
          if (v17 || (sub_100536780() & 1) != 0)
          {
LABEL_3:
            sub_100123DA4(0, (unint64_t *)&unk_10066F7B0);
            swift_bridgeObjectRetain();
            id v12 = v16;
            char v13 = sub_100535D90();

            swift_bridgeObjectRelease();
            if (v13) {
              return v7;
            }
          }
        }
      }
      else if (!a2)
      {
        goto LABEL_3;
      }
      unint64_t v7 = (v7 + 1) & v11;
    }
    while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

uint64_t sub_100368438(uint64_t result, uint64_t a2)
{
  uint64_t v2 = _swiftEmptyArrayStorage;
  BOOL v21 = a2 < 1;
  if (a2 < 1)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v3 = result;
    if (__OFADD__(result, a2))
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v4 = 0;
    if (result <= result + a2) {
      uint64_t v5 = result + a2;
    }
    else {
      uint64_t v5 = result;
    }
    uint64_t v6 = &_swiftEmptyArrayStorage[4];
    while (v5 != v3)
    {
      if (!v4)
      {
        unint64_t v7 = v2[3];
        if ((uint64_t)((v7 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_33;
        }
        int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
        if (v8 <= 1) {
          uint64_t v9 = 1;
        }
        else {
          uint64_t v9 = v8;
        }
        sub_10000BB04(&qword_10066EF48);
        id v10 = (void *)swift_allocObject();
        int64_t v11 = j__malloc_size(v10);
        uint64_t v12 = v11 - 32;
        if (v11 < 32) {
          uint64_t v12 = v11 - 25;
        }
        uint64_t v13 = v12 >> 3;
        v10[2] = v9;
        v10[3] = 2 * (v12 >> 3);
        unint64_t v14 = (unint64_t)(v10 + 4);
        uint64_t v15 = v2[3] >> 1;
        if (v2[2])
        {
          if (v10 != v2 || v14 >= (unint64_t)&v2[v15 + 4]) {
            memmove(v10 + 4, v2 + 4, 8 * v15);
          }
          v2[2] = 0;
        }
        uint64_t v6 = (void *)(v14 + 8 * v15);
        uint64_t v4 = (v13 & 0x7FFFFFFFFFFFFFFFLL) - v15;
        unint64_t result = swift_release();
        uint64_t v2 = v10;
      }
      BOOL v17 = __OFSUB__(v4--, 1);
      if (v17)
      {
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      *v6++ = v3++;
      if (v21) {
        break;
      }
    }
  }
  unint64_t v18 = v2[3];
  if (v18 < 2) {
    return (uint64_t)v2;
  }
  unint64_t v19 = v18 >> 1;
  BOOL v17 = __OFSUB__(v19, v4);
  uint64_t v20 = v19 - v4;
  if (!v17)
  {
    v2[2] = v20;
    return (uint64_t)v2;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1003685B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_100369AD4();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_100534F50();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_100368928();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (unsigned __int8 *)sub_100536250();
  }
LABEL_7:
  uint64_t v13 = sub_1003686A8(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13 | ((((unint64_t)v13 >> 32) & 1) << 32);
}

unsigned __int8 *sub_1003686A8(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            unint64_t v23 = v8 * (unint64_t)a3;
            if ((v23 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__CFADD__(v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned int v12 = 0;
      unsigned __int8 v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          unsigned int v28 = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            unint64_t v31 = v28 * (unint64_t)a3;
            if ((v31 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v32 = v29 + v30;
            unsigned int v28 = v31 + v32;
            if (__CFADD__(v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          unsigned __int8 v13 = 0;
          unsigned int v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            unint64_t v14 = v8 * (unint64_t)a3;
            if ((v14 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v15 = v10 + v11;
            unsigned int v8 = v14 - v15;
            if (v14 < v15) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned int v12 = 0;
        unsigned __int8 v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100368928()
{
  unint64_t v0 = sub_100534F60();
  uint64_t v4 = sub_1003689A8(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1003689A8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_10033BBB0(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          char v11 = sub_10037EFF4(v9, 0),
          unint64_t v12 = sub_10033BCB0((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = sub_100534DC0();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return sub_100534DC0();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  sub_100536250();
LABEL_4:

  return sub_100534DC0();
}

BOOL sub_100368B00(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5 = a4 >> 14;
  swift_bridgeObjectRetain();
  if (v5 == a3 >> 14)
  {
LABEL_10:
    sub_100534E90();
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    BOOL v15 = v14 == 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    while (1)
    {
      while (1)
      {
        uint64_t v7 = sub_100535F60();
        uint64_t v9 = v8;
        unint64_t v10 = sub_100535F40();
        uint64_t v11 = sub_100534E90();
        if (!v12)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          BOOL v15 = 1;
          goto LABEL_13;
        }
        if (v7 != v11 || v12 != v9) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v5 == v10 >> 14)
        {
LABEL_9:
          swift_bridgeObjectRelease();
          goto LABEL_10;
        }
      }
      char v6 = sub_100536780();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v6 & 1) == 0) {
        break;
      }
      if (v5 == v10 >> 14) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    BOOL v15 = 0;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_100368C98(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    LODWORD(result) = 0;
    unsigned __int8 v14 = 0;
    return result | ((unint64_t)v14 << 32) | (((a4 >> 60) & 1) << 40);
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v13[0] = a3;
    v13[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v11 = v13;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    uint64_t v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    uint64_t v11 = (void *)sub_100536250();
  }
  uint64_t result = sub_100368F0C((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    unsigned __int8 v14 = BYTE4(result) & 1;
    return result | ((unint64_t)v14 << 32) | (((a4 >> 60) & 1) << 40);
  }
  return result;
}

uint64_t sub_100368D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_10052F050();
  unint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_10052F080();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_10052F070();
  uint64_t result = sub_100362970(v11, a4, a5, &v12);
  if (!v5) {
    return v12;
  }
  return result;
}

unint64_t sub_100368E28()
{
  unint64_t result = qword_10066F080;
  if (!qword_10066F080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066F080);
  }
  return result;
}

unint64_t sub_100368E7C()
{
  unint64_t result = qword_10066F0A0;
  if (!qword_10066F0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066F0A0);
  }
  return result;
}

uint64_t sub_100368ED0(uint64_t a1)
{
  return sub_100366D2C(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_100368EF0@<X0>(unsigned char *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_100366FFC(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_100368F0C(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    unint64_t result = sub_1002C8288(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_104;
  }
  unint64_t result = sub_100534ED0();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    unint64_t result = sub_1002C8288(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    unint64_t result = sub_1002C8288(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    unint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_100;
  }
  if (v17 < a3 >> 16)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  unint64_t result = sub_100534ED0();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_99;
  }
  if (v18 < v15)
  {
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  unsigned __int8 v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    unsigned __int8 v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v33 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v34 = a6 + 55;
        }
        else
        {
          unsigned __int8 v33 = 97;
          unsigned __int8 v34 = 65;
        }
        if (a6 <= 10) {
          unsigned __int8 v35 = a6 + 48;
        }
        else {
          unsigned __int8 v35 = 58;
        }
        if (v19)
        {
          unsigned int v24 = 0;
          unint64_t v36 = v19 + 1;
          uint64_t v37 = result - 1;
          do
          {
            unsigned int v38 = *v36;
            if (v38 < 0x30 || v38 >= v35)
            {
              if (v38 < 0x41 || v38 >= v34)
              {
                unsigned int v29 = 0;
                unsigned __int8 v30 = 1;
                if (v38 < 0x61 || v38 >= v33) {
                  return v29 | ((unint64_t)v30 << 32);
                }
                char v39 = -87;
              }
              else
              {
                char v39 = -55;
              }
            }
            else
            {
              char v39 = -48;
            }
            unint64_t v40 = v24 * (unint64_t)a6;
            if ((v40 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_96;
            }
            unsigned __int8 v41 = v38 + v39;
            unsigned int v24 = v40 + v41;
            if (__CFADD__(v40, v41)) {
              goto LABEL_96;
            }
            ++v36;
            --v37;
          }
          while (v37);
LABEL_94:
          unsigned __int8 v30 = 0;
          unsigned int v29 = v24;
          return v29 | ((unint64_t)v30 << 32);
        }
        goto LABEL_95;
      }
      goto LABEL_96;
    }
    goto LABEL_103;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v42 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v43 = a6 + 55;
      }
      else
      {
        unsigned __int8 v42 = 97;
        unsigned __int8 v43 = 65;
      }
      if (a6 <= 10) {
        unsigned __int8 v44 = a6 + 48;
      }
      else {
        unsigned __int8 v44 = 58;
      }
      if (v19)
      {
        unsigned int v24 = 0;
        while (1)
        {
          unsigned int v45 = *v19;
          if (v45 < 0x30 || v45 >= v44)
          {
            if (v45 < 0x41 || v45 >= v43)
            {
              unsigned int v29 = 0;
              unsigned __int8 v30 = 1;
              if (v45 < 0x61 || v45 >= v42) {
                return v29 | ((unint64_t)v30 << 32);
              }
              char v46 = -87;
            }
            else
            {
              char v46 = -55;
            }
          }
          else
          {
            char v46 = -48;
          }
          unint64_t v47 = v24 * (unint64_t)a6;
          if ((v47 & 0xFFFFFFFF00000000) != 0) {
            goto LABEL_96;
          }
          unsigned __int8 v48 = v45 + v46;
          unsigned int v24 = v47 + v48;
          if (__CFADD__(v47, v48)) {
            goto LABEL_96;
          }
          ++v19;
          if (!--result) {
            goto LABEL_94;
          }
        }
      }
      goto LABEL_95;
    }
LABEL_96:
    unsigned int v29 = 0;
    unsigned __int8 v30 = 1;
    return v29 | ((unint64_t)v30 << 32);
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v22 = a6 + 55;
      }
      else
      {
        unsigned __int8 v21 = 97;
        unsigned __int8 v22 = 65;
      }
      if (a6 <= 10) {
        unsigned __int8 v23 = a6 + 48;
      }
      else {
        unsigned __int8 v23 = 58;
      }
      if (v19)
      {
        unsigned int v24 = 0;
        unsigned __int8 v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              unsigned int v29 = 0;
              unsigned __int8 v30 = 1;
              if (v27 < 0x61 || v27 >= v21) {
                return v29 | ((unint64_t)v30 << 32);
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          unint64_t v31 = v24 * (unint64_t)a6;
          if ((v31 & 0xFFFFFFFF00000000) != 0) {
            goto LABEL_96;
          }
          unsigned __int8 v32 = v27 + v28;
          unsigned int v24 = v31 - v32;
          if (v31 < v32) {
            goto LABEL_96;
          }
          ++v25;
          if (!--v26) {
            goto LABEL_94;
          }
        }
      }
LABEL_95:
      unsigned int v29 = 0;
      unsigned __int8 v30 = 0;
      return v29 | ((unint64_t)v30 << 32);
    }
    goto LABEL_96;
  }
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
  return result;
}

uint64_t _s14MusicUtilities13RomanNumeralsO8rawValueACSgSS_tcfC_0(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_10062C860;
  v6._object = a2;
  unint64_t v4 = sub_100536530(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xD) {
    return 13;
  }
  else {
    return v4;
  }
}

unint64_t sub_100369384()
{
  unint64_t result = qword_10066F0A8;
  if (!qword_10066F0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066F0A8);
  }
  return result;
}

unint64_t sub_1003693DC()
{
  unint64_t result = qword_10066F0B0;
  if (!qword_10066F0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066F0B0);
  }
  return result;
}

unint64_t sub_100369434()
{
  unint64_t result = qword_10066F0B8;
  if (!qword_10066F0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066F0B8);
  }
  return result;
}

uint64_t sub_100369488()
{
  return sub_100014CCC(&qword_10066F0C0, &qword_10066F0C8);
}

unint64_t sub_1003694C8()
{
  unint64_t result = qword_10066F0D0[0];
  if (!qword_10066F0D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10066F0D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for Data.Hexadecimal()
{
  return &type metadata for Data.Hexadecimal;
}

unsigned char *_s15ConversionErrorOwCP(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

unsigned char *_s15ConversionErrorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100369604);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _NSRange.ConversionError()
{
  return &type metadata for _NSRange.ConversionError;
}

__n128 _s15NSRangeIteratorVwcp(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s15NSRangeIteratorVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s15NSRangeIteratorVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 25) = v3;
  return result;
}

ValueMetadata *type metadata accessor for _NSRange.NSRangeIterator()
{
  return &type metadata for _NSRange.NSRangeIterator;
}

uint64_t type metadata accessor for WeakWrapper()
{
  return sub_100086CCC();
}

unsigned char *storeEnumTagSinglePayload for RomanNumerals(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *__n128 result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003697A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RomanNumerals()
{
  return &type metadata for RomanNumerals;
}

unsigned char *_s4EdgeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003698A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NSDirectionalEdgeInsets.Edge()
{
  return &type metadata for NSDirectionalEdgeInsets.Edge;
}

uint64_t sub_1003698E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Int sub_100369928(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10000BB04(&qword_10066F168);
    uint64_t v3 = sub_1005361A0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      Swift::UInt v7 = *(unsigned __int8 *)(v6 + v4);
      sub_100536950();
      sub_100536960(v7);
      Swift::Int result = sub_1005369A0();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == v7) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v14 + v10) == v7) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(unsigned char *)(v14 + v10) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_100369A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000BB04(&qword_10066F090);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100369AD4()
{
  unint64_t result = qword_10066F170;
  if (!qword_10066F170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066F170);
  }
  return result;
}

BOOL static MPModelObject.LoggingComponent.__derived_enum_less_than(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 < a2;
}

BOOL sub_100369B38(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_100369B4C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_100369B60(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_100369B74(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t MPModelObject.humanDescription(including:)(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  v13._uint64_t countAndFlagsBits = sub_100536A30();
  sub_100534E80(v13);
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = 8250;
  v14._object = (void *)0xE200000000000000;
  sub_100534E80(v14);
  sub_100536370();
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  uint64_t v4 = self;
  uint64_t v5 = (void *)swift_allocObject();
  _OWORD v5[2] = a1;
  void v5[3] = v12;
  v5[4] = v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_10036A078;
  *(void *)(v6 + 24) = v5;
  v11[4] = sub_1001BA934;
  v11[5] = v6;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_1001F5E38;
  void v11[3] = &unk_10062DCF0;
  Swift::UInt v7 = _Block_copy(v11);
  swift_bridgeObjectRetain();
  id v8 = v2;
  swift_retain();
  swift_release();
  [v4 performWithoutEnforcement:v7];
  _Block_release(v7);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = v12[0];
    swift_release();
    return v10;
  }
  return result;
}

uint64_t sub_100369D80(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_10039705C(v4);
  swift_bridgeObjectRelease();
  *(void *)&v23[0] = v5;
  sub_10036B134((char **)v23);
  uint64_t v6 = *(void *)&v23[0];
  uint64_t v7 = *(void *)(*(void *)&v23[0] + 16);
  if (v7)
  {
    swift_retain();
    uint64_t v8 = 0;
    while (*(unsigned char *)(v6 + v8 + 32))
    {
      if (*(unsigned char *)(v6 + v8 + 32) == 1)
      {
        *(void *)&v23[0] = 23328;
        *((void *)&v23[0] + 1) = 0xE200000000000000;
        id v16 = [a3 shortDescription];
        uint64_t v17 = sub_100534CE0();
        unsigned __int8 v19 = v18;

        v27._uint64_t countAndFlagsBits = v17;
        v27._object = v19;
        sub_100534E80(v27);
        swift_bridgeObjectRelease();
        v28._uint64_t countAndFlagsBits = 93;
        v28._object = (void *)0xE100000000000000;
        sub_100534E80(v28);
        goto LABEL_4;
      }
      sub_10036B1A0();
      ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
      InstanceVariable = class_getInstanceVariable(ObjCClassFromMetadata, "_storage");
      if (!InstanceVariable) {
        goto LABEL_6;
      }
      strcpy((char *)v24, " properties=");
      BYTE5(v24[1]) = 0;
      HIWORD(v24[1]) = -5120;
      if (object_getIvar(a3, InstanceVariable))
      {
        sub_100536090();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v23, 0, sizeof(v23));
      }
      sub_10000BB04(&qword_10066EAC0);
      v29._uint64_t countAndFlagsBits = sub_100534D70();
      sub_100534E80(v29);
      swift_bridgeObjectRelease();
      v14._uint64_t countAndFlagsBits = v24[0];
      uint64_t v15 = (void *)v24[1];
LABEL_5:
      v14._object = v15;
      sub_100534E80(v14);
      swift_bridgeObjectRelease();
LABEL_6:
      if (v7 == ++v8) {
        return swift_release_n();
      }
    }
    strcpy((char *)v23, " identifiers=");
    HIWORD(v23[0]) = -4864;
    id v9 = [a3 identifiers];
    id v10 = [v9 description];
    uint64_t v11 = sub_100534CE0();
    Swift::String v13 = v12;

    v26._uint64_t countAndFlagsBits = v11;
    v26._object = v13;
    sub_100534E80(v26);

    swift_bridgeObjectRelease();
LABEL_4:
    uint64_t v15 = (void *)*((void *)&v23[0] + 1);
    v14._uint64_t countAndFlagsBits = *(void *)&v23[0];
    goto LABEL_5;
  }

  return swift_release();
}

uint64_t sub_10036A038()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10036A078()
{
  return sub_100369D80(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10036A084()
{
  return swift_deallocObject();
}

uint64_t sub_10036A094(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10036A0A4()
{
  return swift_release();
}

unint64_t sub_10036A0B0()
{
  unint64_t result = qword_10066F188;
  if (!qword_10066F188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066F188);
  }
  return result;
}

unsigned char *_s16LoggingComponentOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10036A1D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MPModelObject.LoggingComponent()
{
  return &type metadata for MPModelObject.LoggingComponent;
}

uint64_t sub_10036A260()
{
  uint64_t v1 = v0;
  id v2 = [v0 title];
  if (v2)
  {
    int v3 = v2;
    uint64_t v4 = sub_100534CE0();
    unsigned int v6 = v5;
  }
  else
  {
    unsigned int v6 = (void *)0xED0000676E6F5320;
    uint64_t v4 = 0x64656C7469746E55;
  }
  v20._uint64_t countAndFlagsBits = v4;
  v20._object = v6;
  sub_100534E80(v20);
  swift_bridgeObjectRelease();
  v21._uint64_t countAndFlagsBits = 34;
  v21._object = (void *)0xE100000000000000;
  sub_100534E80(v21);
  id v7 = [v1 album];
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = [v7 shortDescription];
    uint64_t v10 = sub_100534CE0();
    uint64_t v12 = v11;

    v22._uint64_t countAndFlagsBits = v10;
    v22._object = v12;
    sub_100534E80(v22);
    swift_bridgeObjectRelease();
    v23._uint64_t countAndFlagsBits = 0x206D75626C41203BLL;
    v23._object = (void *)0xE800000000000000;
    sub_100534E80(v23);

    swift_bridgeObjectRelease();
  }
  id v13 = [v1 artist];
  if (v13)
  {
    Swift::String v14 = v13;
    id v15 = [v13 shortDescription];
    uint64_t v16 = sub_100534CE0();
    uint64_t v18 = v17;

    v24._uint64_t countAndFlagsBits = v16;
    v24._object = v18;
    sub_100534E80(v24);
    swift_bridgeObjectRelease();
    v25._uint64_t countAndFlagsBits = 0x747369747241203BLL;
    v25._object = (void *)0xE900000000000020;
    sub_100534E80(v25);

    swift_bridgeObjectRelease();
  }
  return 0x22203A656C746954;
}

uint64_t sub_10036A660()
{
  id v1 = [v0 name];
  if (v1)
  {
    id v2 = v1;
    unint64_t v3 = sub_100534CE0();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v5 = (void *)0x8000000100563710;
    unint64_t v3 = 0xD000000000000011;
  }
  v7._uint64_t countAndFlagsBits = v3;
  v7._object = v5;
  sub_100534E80(v7);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 34;
  v8._object = (void *)0xE100000000000000;
  sub_100534E80(v8);
  return 0x22203A656D614ELL;
}

uint64_t sub_10036A734()
{
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = v0;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_10036B0BC;
  *(void *)(v2 + 24) = v1;
  uint64_t v8 = v2;
  id v3 = v0;
  sub_10000BB04(&qword_10066F190);
  v9._uint64_t countAndFlagsBits = sub_100534D70();
  sub_100534E80(v9);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 2236475;
  v10._object = (void *)0xE300000000000000;
  sub_100534E80(v10);
  id v4 = [v3 anyObject:sub_10036B104 v8];
  uint64_t v5 = v4;
  if (v4)
  {
    id v6 = [v4 shortDescription];

    sub_100534CE0();
  }
  sub_10000BB04(&qword_10066F198);
  v11._uint64_t countAndFlagsBits = sub_100534D70();
  sub_100534E80(v11);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 34;
  v12._object = (void *)0xE100000000000000;
  sub_100534E80(v12);
  return 0x203A65707954;
}

uint64_t sub_10036AA6C()
{
  uint64_t v1 = v0;
  id v2 = [v0 title];
  if (v2)
  {
    id v3 = v2;
    unint64_t v4 = sub_100534CE0();
    id v6 = v5;
  }
  else
  {
    id v6 = (void *)0x8000000100565D50;
    unint64_t v4 = 0xD000000000000010;
  }
  v20._uint64_t countAndFlagsBits = v4;
  v20._object = v6;
  sub_100534E80(v20);
  swift_bridgeObjectRelease();
  v21._uint64_t countAndFlagsBits = 34;
  v21._object = (void *)0xE100000000000000;
  sub_100534E80(v21);
  id v7 = [v1 show];
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = [v7 shortDescription];
    uint64_t v10 = sub_100534CE0();
    Swift::String v12 = v11;

    v22._uint64_t countAndFlagsBits = v10;
    v22._object = v12;
    sub_100534E80(v22);
    swift_bridgeObjectRelease();
    v23._uint64_t countAndFlagsBits = 0x20776F6853203BLL;
    v23._object = (void *)0xE700000000000000;
    sub_100534E80(v23);

    swift_bridgeObjectRelease();
  }
  id v13 = [v1 season];
  if (v13)
  {
    Swift::String v14 = v13;
    id v15 = [v13 shortDescription];
    uint64_t v16 = sub_100534CE0();
    uint64_t v18 = v17;

    v24._uint64_t countAndFlagsBits = v16;
    v24._object = v18;
    sub_100534E80(v24);
    swift_bridgeObjectRelease();
    v25._uint64_t countAndFlagsBits = 0x6E6F73616553203BLL;
    v25._object = (void *)0xE900000000000020;
    sub_100534E80(v25);

    swift_bridgeObjectRelease();
  }
  return 0x22203A656C746954;
}

id sub_10036AD70(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  NSString v5 = sub_100534CA0();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_10036ADE0()
{
  id v1 = [v0 name];
  if (v1)
  {
    id v2 = v1;
    unint64_t v3 = sub_100534CE0();
    NSString v5 = v4;
  }
  else
  {
    NSString v5 = (void *)0x8000000100565D30;
    unint64_t v3 = 0xD000000000000010;
  }
  v7._uint64_t countAndFlagsBits = v3;
  v7._object = v5;
  sub_100534E80(v7);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 34;
  v8._object = (void *)0xE100000000000000;
  sub_100534E80(v8);
  return 0x22203A656D614ELL;
}

uint64_t sub_10036B084()
{
  return swift_deallocObject();
}

id sub_10036B0BC()
{
  return [*(id *)(v0 + 16) type];
}

uint64_t sub_10036B0CC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10036B104@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_10036B134(char **a1)
{
  id v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v2 = sub_100397ECC((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_10036B1E0(v5);
  *a1 = v2;
  return result;
}

unint64_t sub_10036B1A0()
{
  unint64_t result = qword_10066F1A0;
  if (!qword_10066F1A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10066F1A0);
  }
  return result;
}

uint64_t sub_10036B1E0(void *a1)
{
  id v2 = a1;
  Swift::Int v3 = a1[1];
  uint64_t result = sub_100536680(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v76 = 0;
      uint64_t v77 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        unsigned int v79 = *(unsigned __int8 *)(v77 + i);
        uint64_t v80 = v76;
        do
        {
          unsigned int v81 = *(unsigned __int8 *)(v77 + v80);
          if (v79 >= v81) {
            break;
          }
          if (!v77) {
            goto LABEL_142;
          }
          *(unsigned char *)(v77 + v80 + 1) = v81;
          *(unsigned char *)(v77 + v80--) = v79;
        }
        while (v80 != -1);
        ++v76;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_137;
    }
    uint64_t v92 = result;
    Swift::Int v93 = v3;
    if (v3 > 1)
    {
      uint64_t v6 = v5 >> 1;
      uint64_t result = sub_100535170();
      *(void *)(result + 16) = v6;
      Swift::Int v3 = v93;
      unsigned __int8 v91 = (void *)result;
      unint64_t v95 = (unsigned __int8 *)(result + 32);
LABEL_13:
      Swift::Int v8 = 0;
      v90 = v2;
      uint64_t v9 = *v2;
      uint64_t v10 = (char *)_swiftEmptyArrayStorage;
      uint64_t v94 = *v2;
      while (1)
      {
        Swift::Int v12 = v8++;
        if (v8 < v3)
        {
          unsigned int v13 = *(unsigned __int8 *)(v9 + v8);
          unsigned int v14 = *(unsigned __int8 *)(v9 + v12);
          Swift::Int v8 = v12 + 2;
          if (v12 + 2 < v3)
          {
            unsigned int v15 = v13;
            while (1)
            {
              unsigned int v16 = *(unsigned __int8 *)(v9 + v8);
              if (v13 < v14 == v16 >= v15) {
                break;
              }
              ++v8;
              unsigned int v15 = v16;
              if (v3 == v8)
              {
                Swift::Int v8 = v3;
                break;
              }
            }
          }
          if (v13 < v14)
          {
            if (v8 < v12) {
              goto LABEL_139;
            }
            if (v12 < v8)
            {
              Swift::Int v17 = v8 - 1;
              Swift::Int v18 = v12;
              do
              {
                if (v18 != v17)
                {
                  if (!v9) {
                    goto LABEL_145;
                  }
                  char v19 = *(unsigned char *)(v9 + v18);
                  *(unsigned char *)(v9 + v18) = *(unsigned char *)(v9 + v17);
                  *(unsigned char *)(v9 + v17) = v19;
                }
                BOOL v58 = ++v18 < v17--;
              }
              while (v58);
            }
          }
        }
        if (v8 < v3)
        {
          if (__OFSUB__(v8, v12)) {
            goto LABEL_136;
          }
          if (v8 - v12 < v92)
          {
            Swift::Int v20 = v12 + v92;
            if (__OFADD__(v12, v92)) {
              goto LABEL_140;
            }
            if (v20 >= v3) {
              Swift::Int v20 = v3;
            }
            if (v20 < v12)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v8 != v20)
            {
              Swift::String v21 = (unsigned char *)(v9 + v8);
              do
              {
                unsigned int v22 = *(unsigned __int8 *)(v9 + v8);
                Swift::Int v23 = v12;
                Swift::String v24 = v21;
                do
                {
                  unsigned int v25 = *(v24 - 1);
                  if (v22 >= v25) {
                    break;
                  }
                  if (!v9) {
                    goto LABEL_143;
                  }
                  *Swift::String v24 = v25;
                  *--Swift::String v24 = v22;
                  ++v23;
                }
                while (v8 != v23);
                ++v8;
                ++v21;
              }
              while (v8 != v20);
              Swift::Int v8 = v20;
            }
          }
        }
        if (v8 < v12) {
          goto LABEL_131;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_100397DBC(0, *((void *)v10 + 2) + 1, 1, v10);
          uint64_t v10 = (char *)result;
        }
        unint64_t v27 = *((void *)v10 + 2);
        unint64_t v26 = *((void *)v10 + 3);
        unint64_t v11 = v27 + 1;
        uint64_t v9 = v94;
        if (v27 >= v26 >> 1)
        {
          uint64_t result = (uint64_t)sub_100397DBC((char *)(v26 > 1), v27 + 1, 1, v10);
          uint64_t v9 = v94;
          uint64_t v10 = (char *)result;
        }
        *((void *)v10 + 2) = v11;
        Swift::String v28 = v10 + 32;
        Swift::String v29 = &v10[16 * v27 + 32];
        *(void *)Swift::String v29 = v12;
        *((void *)v29 + 1) = v8;
        if (v27)
        {
          while (1)
          {
            unint64_t v30 = v11 - 1;
            if (v11 >= 4)
            {
              unsigned __int8 v35 = &v28[2 * v11];
              uint64_t v36 = *(v35 - 8);
              uint64_t v37 = *(v35 - 7);
              BOOL v41 = __OFSUB__(v37, v36);
              uint64_t v38 = v37 - v36;
              if (v41) {
                goto LABEL_120;
              }
              uint64_t v40 = *(v35 - 6);
              uint64_t v39 = *(v35 - 5);
              BOOL v41 = __OFSUB__(v39, v40);
              uint64_t v33 = v39 - v40;
              char v34 = v41;
              if (v41) {
                goto LABEL_121;
              }
              unint64_t v42 = v11 - 2;
              unsigned __int8 v43 = &v28[2 * v11 - 4];
              uint64_t v45 = *v43;
              uint64_t v44 = v43[1];
              BOOL v41 = __OFSUB__(v44, v45);
              uint64_t v46 = v44 - v45;
              if (v41) {
                goto LABEL_122;
              }
              BOOL v41 = __OFADD__(v33, v46);
              uint64_t v47 = v33 + v46;
              if (v41) {
                goto LABEL_124;
              }
              if (v47 >= v38)
              {
                uint64_t v65 = &v28[2 * v30];
                uint64_t v67 = *v65;
                uint64_t v66 = v65[1];
                BOOL v41 = __OFSUB__(v66, v67);
                uint64_t v68 = v66 - v67;
                if (v41) {
                  goto LABEL_130;
                }
                BOOL v58 = v33 < v68;
                goto LABEL_84;
              }
            }
            else
            {
              if (v11 != 3)
              {
                uint64_t v59 = *((void *)v10 + 4);
                uint64_t v60 = *((void *)v10 + 5);
                BOOL v41 = __OFSUB__(v60, v59);
                uint64_t v52 = v60 - v59;
                char v53 = v41;
                goto LABEL_78;
              }
              uint64_t v32 = *((void *)v10 + 4);
              uint64_t v31 = *((void *)v10 + 5);
              BOOL v41 = __OFSUB__(v31, v32);
              uint64_t v33 = v31 - v32;
              char v34 = v41;
            }
            if (v34) {
              goto LABEL_123;
            }
            unint64_t v42 = v11 - 2;
            unsigned __int8 v48 = &v28[2 * v11 - 4];
            uint64_t v50 = *v48;
            uint64_t v49 = v48[1];
            BOOL v51 = __OFSUB__(v49, v50);
            uint64_t v52 = v49 - v50;
            char v53 = v51;
            if (v51) {
              goto LABEL_125;
            }
            uint64_t v54 = &v28[2 * v30];
            uint64_t v56 = *v54;
            uint64_t v55 = v54[1];
            BOOL v41 = __OFSUB__(v55, v56);
            uint64_t v57 = v55 - v56;
            if (v41) {
              goto LABEL_127;
            }
            if (__OFADD__(v52, v57)) {
              goto LABEL_129;
            }
            if (v52 + v57 >= v33)
            {
              BOOL v58 = v33 < v57;
LABEL_84:
              if (v58) {
                unint64_t v30 = v42;
              }
              goto LABEL_86;
            }
LABEL_78:
            if (v53) {
              goto LABEL_126;
            }
            uint64_t v61 = &v28[2 * v30];
            uint64_t v63 = *v61;
            uint64_t v62 = v61[1];
            BOOL v41 = __OFSUB__(v62, v63);
            uint64_t v64 = v62 - v63;
            if (v41) {
              goto LABEL_128;
            }
            if (v64 < v52) {
              goto LABEL_15;
            }
LABEL_86:
            unint64_t v69 = v30 - 1;
            if (v30 - 1 >= v11)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v9) {
              goto LABEL_144;
            }
            uint64_t v70 = &v28[2 * v69];
            uint64_t v71 = *v70;
            unint64_t v72 = v28;
            uint64_t v73 = &v28[2 * v30];
            uint64_t v74 = v73[1];
            uint64_t result = sub_10036B818((unsigned __int8 *)(v9 + *v70), (unsigned __int8 *)(v9 + *v73), v9 + v74, v95);
            if (v1) {
              goto LABEL_114;
            }
            if (v74 < v71) {
              goto LABEL_117;
            }
            if (v30 > *((void *)v10 + 2)) {
              goto LABEL_118;
            }
            *uint64_t v70 = v71;
            v72[2 * v69 + 1] = v74;
            unint64_t v75 = *((void *)v10 + 2);
            if (v30 >= v75) {
              goto LABEL_119;
            }
            unint64_t v11 = v75 - 1;
            uint64_t result = (uint64_t)memmove(v73, v73 + 2, 16 * (v75 - 1 - v30));
            Swift::String v28 = v72;
            *((void *)v10 + 2) = v75 - 1;
            uint64_t v9 = v94;
            if (v75 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v11 = 1;
LABEL_15:
        Swift::Int v3 = v93;
        if (v8 >= v93)
        {
          id v2 = v90;
          Swift::String v7 = v91;
          goto LABEL_103;
        }
      }
    }
    Swift::String v7 = _swiftEmptyArrayStorage;
    unint64_t v95 = (unsigned __int8 *)&_swiftEmptyArrayStorage[4];
    if (v3 == 1)
    {
      unsigned __int8 v91 = _swiftEmptyArrayStorage;
      goto LABEL_13;
    }
    unint64_t v11 = _swiftEmptyArrayStorage[2];
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
    unsigned __int8 v91 = v7;
    if (v11 >= 2)
    {
      uint64_t v82 = *v2;
      do
      {
        unint64_t v83 = v11 - 2;
        if (v11 < 2) {
          goto LABEL_132;
        }
        if (!v82) {
          goto LABEL_146;
        }
        uint64_t v84 = (uint64_t)v10;
        uint64_t v85 = v10 + 32;
        uint64_t v86 = *(void *)&v10[16 * v83 + 32];
        uint64_t v87 = *(void *)&v10[16 * v11 + 24];
        uint64_t result = sub_10036B818((unsigned __int8 *)(v82 + v86), (unsigned __int8 *)(v82 + v85[2 * v11 - 2]), v82 + v87, v95);
        if (v1) {
          break;
        }
        if (v87 < v86) {
          goto LABEL_133;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_100397EB8(v84);
          uint64_t v84 = result;
        }
        if (v83 >= *(void *)(v84 + 16)) {
          goto LABEL_134;
        }
        uint64_t v88 = (void *)(v84 + 32 + 16 * v83);
        *uint64_t v88 = v86;
        v88[1] = v87;
        unint64_t v89 = *(void *)(v84 + 16);
        if (v11 > v89) {
          goto LABEL_135;
        }
        uint64_t result = (uint64_t)memmove((void *)(v84 + 32 + 16 * (v11 - 1)), (const void *)(v84 + 32 + 16 * v11), 16 * (v89 - v11));
        uint64_t v10 = (char *)v84;
        *(void *)(v84 + 16) = v89 - 1;
        unint64_t v11 = v89 - 1;
      }
      while (v89 > 2);
    }
LABEL_114:
    swift_bridgeObjectRelease();
    v91[2] = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10036B818(unsigned __int8 *__dst, unsigned __int8 *__src, unint64_t a3, unsigned __int8 *a4)
{
  id v4 = a4;
  uint64_t v6 = __src;
  Swift::String v7 = __dst;
  int64_t v8 = __src - __dst;
  uint64_t v9 = a3 - (void)__src;
  if (__src - __dst < (uint64_t)(a3 - (void)__src))
  {
    if (a4 != __dst || __src <= a4) {
      memmove(a4, __dst, v8);
    }
    uint64_t v10 = &v4[v8];
    if ((unint64_t)v6 >= a3 || v8 < 1)
    {
LABEL_15:
      uint64_t v6 = v7;
      if (v7 != v4) {
        goto LABEL_38;
      }
      goto LABEL_37;
    }
    while (1)
    {
      unsigned int v11 = *v6;
      if (v11 >= *v4) {
        break;
      }
      BOOL v12 = v7 == v6++;
      if (!v12) {
        goto LABEL_12;
      }
LABEL_13:
      ++v7;
      if (v4 >= v10 || (unint64_t)v6 >= a3) {
        goto LABEL_15;
      }
    }
    LOBYTE(v11) = *v4;
    BOOL v12 = v7 == v4++;
    if (v12) {
      goto LABEL_13;
    }
LABEL_12:
    *Swift::String v7 = v11;
    goto LABEL_13;
  }
  if (a4 != __src || a3 <= (unint64_t)a4) {
    memmove(a4, __src, a3 - (void)__src);
  }
  uint64_t v10 = &v4[v9];
  if (v7 >= v6 || v9 < 1)
  {
LABEL_36:
    if (v6 != v4) {
      goto LABEL_38;
    }
    goto LABEL_37;
  }
  unsigned int v13 = (unsigned __int8 *)(a3 - 1);
  unsigned int v14 = v6;
  while (1)
  {
    unsigned int v15 = v13 + 1;
    unsigned int v17 = *--v14;
    unsigned __int8 v16 = v17;
    if (*(v10 - 1) >= v17)
    {
      unsigned __int8 v16 = *(v10 - 1);
      unsigned int v14 = v6;
      if (v15 != v10)
      {
        --v10;
LABEL_32:
        *unsigned int v13 = v16;
        goto LABEL_33;
      }
      if (v13 >= v10--) {
        goto LABEL_32;
      }
    }
    else if (v15 != v6 || v13 >= v6)
    {
      goto LABEL_32;
    }
LABEL_33:
    if (v14 <= v7) {
      break;
    }
    --v13;
    uint64_t v6 = v14;
    if (v10 <= v4)
    {
      uint64_t v6 = v14;
      goto LABEL_36;
    }
  }
  uint64_t v6 = v14;
  if (v14 != v4)
  {
LABEL_38:
    memmove(v6, v4, v10 - v4);
    return 1;
  }
LABEL_37:
  if (v6 >= v10) {
    goto LABEL_38;
  }
  return 1;
}

uint64_t sub_10036B9F0(uint64_t result, uint64_t a2)
{
  if (a2 > result) {
    return a2;
  }
  return result;
}

uint64_t sub_10036B9FC(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_10036BA04(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = (uint64_t)sub_10035E4C8((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_10036BAF0(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v11 = v4 + v2;
  }
  else {
    int64_t v11 = v4;
  }
  uint64_t result = (uint64_t)sub_10035E7C8((char *)result, v11, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  uint64_t v7 = *(void *)(v3 + 16);
  if ((*(void *)(v3 + 24) >> 1) - v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = (uint64_t)memcpy((void *)(v3 + 16 * v7 + 32), (const void *)(v6 + 32), 16 * v2);
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v8 = *(void *)(v3 + 16);
  BOOL v9 = __OFADD__(v8, v2);
  uint64_t v10 = v8 + v2;
  if (!v9)
  {
    *(void *)(v3 + 16) = v10;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

size_t sub_10036BBD4(size_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  size_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= v3[3] >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v11 = v4 + v2;
  }
  else {
    int64_t v11 = v4;
  }
  uint64_t result = sub_10035E5EC(result, v11, 1, v3);
  uint64_t v3 = (void *)result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  uint64_t v7 = (v3[3] >> 1) - v3[2];
  uint64_t result = sub_10000BB04(&qword_10066EF20);
  if (v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v8 = v3[2];
  BOOL v9 = __OFADD__(v8, v2);
  uint64_t v10 = v8 + v2;
  if (!v9)
  {
    v3[2] = v10;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_10036BD00(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_100536470();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_100536470();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_100536220();
    swift_bridgeObjectRelease();
    *uint64_t v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_10036CFA0(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    sub_100536470();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_100535100();
}

size_t sub_10036BECC(size_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  size_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= v3[3] >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v11 = v4 + v2;
  }
  else {
    int64_t v11 = v4;
  }
  uint64_t result = sub_10035E8C4(result, v11, 1, v3);
  uint64_t v3 = (void *)result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  uint64_t v7 = (v3[3] >> 1) - v3[2];
  uint64_t result = sub_10052EF60();
  if (v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v8 = v3[2];
  BOOL v9 = __OFADD__(v8, v2);
  uint64_t v10 = v8 + v2;
  if (!v9)
  {
    v3[2] = v10;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

char *String.components(wrappedToLineLength:bullet:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_10052EEE0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  BOOL v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  sub_10052EED0();
  sub_100368E28();
  uint64_t v14 = sub_100535FC0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v15 = (char *)_swiftEmptyArrayStorage;
  unsigned int v22 = (char *)_swiftEmptyArrayStorage;
  uint64_t v16 = *(void *)(v14 + 16);
  if (v16)
  {
    swift_bridgeObjectRetain();
    unsigned int v17 = (uint64_t *)(v14 + 40);
    do
    {
      uint64_t v18 = *v17;
      uint64_t v23 = *(v17 - 1);
      uint64_t v24 = v18;
      swift_bridgeObjectRetain();
      sub_10036C190(&v22, &v23, a2, a3, a1, &v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v21;
      unsigned int v22 = v21;
      v17 += 2;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v15;
}

void sub_10036C190(char **a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, char **a6@<X8>)
{
  unint64_t v67 = a4;
  uint64_t v12 = sub_10052EEE0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v17 = *a1;
  uint64_t v19 = *a2;
  unint64_t v18 = a2[1];
  unsigned int v79 = v17;
  uint64_t v20 = HIBYTE(v18) & 0xF;
  if ((v18 & 0x2000000000000000) == 0) {
    uint64_t v20 = v19 & 0xFFFFFFFFFFFFLL;
  }
  if (v20)
  {
    uint64_t v64 = (char *)a6;
    uint64_t v65 = v6;
    uint64_t v21 = v14;
    uint64_t v22 = a3;
    id v23 = objc_allocWithZone((Class)NSScanner);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSString v24 = sub_100534CA0();
    swift_bridgeObjectRelease();
    id v25 = [v23 initWithString:v24];

    uint64_t v66 = v22;
    v78._uint64_t countAndFlagsBits = sub_10036C77C(v22, v67, (uint64_t)&v79);
    v78._object = v26;
    swift_beginAccess();
    sub_10052EEA0();
    uint64_t v27 = sub_100535EC0();
    Swift::String v29 = v28;
    uint64_t v31 = *(void (**)(char *, uint64_t))(v13 + 8);
    uint64_t v30 = v13 + 8;
    unint64_t v72 = v31;
    v31(v16, v21);
    id v70 = v25;
    if (v29)
    {
      uint64_t v32 = v21;
      uint64_t v33 = v16;
      unint64_t v34 = HIBYTE(v67) & 0xF;
      if ((v67 & 0x2000000000000000) == 0) {
        unint64_t v34 = v66 & 0xFFFFFFFFFFFFLL;
      }
      uint64_t v68 = a5;
      unint64_t v69 = v34;
      uint64_t v71 = v30;
      while (1)
      {
        uint64_t v36 = v32;
        object = (char *)v78._object;
        uint64_t countAndFlagsBits = v78._countAndFlagsBits;
        swift_bridgeObjectRetain();
        uint64_t v39 = sub_100534E00();
        swift_bridgeObjectRelease();
        uint64_t v40 = sub_100534E00();
        uint64_t v41 = v39 + v40;
        if (__OFADD__(v39, v40)) {
          break;
        }
        BOOL v42 = __OFADD__(v41, 1);
        uint64_t v43 = v41 + 1;
        if (v42) {
          goto LABEL_39;
        }
        if (v43 <= a5)
        {
          v77._uint64_t countAndFlagsBits = v27;
          v77._object = v29;
          swift_bridgeObjectRetain();
          v80._uint64_t countAndFlagsBits = 32;
          v80._object = (void *)0xE100000000000000;
          sub_100534E80(v80);
          swift_bridgeObjectRelease();
          sub_100534E80(v77);
          swift_bridgeObjectRelease();
        }
        else
        {
          v77._uint64_t countAndFlagsBits = countAndFlagsBits;
          v77._object = object;
          uint64_t v75 = 606827356;
          unint64_t v76 = 0xE400000000000000;
          uint64_t v73 = 0;
          unint64_t v74 = 0xE000000000000000;
          sub_100368E28();
          uint64_t countAndFlagsBits = sub_100536020();
          uint64_t v39 = v44;
          swift_bridgeObjectRelease();
          object = v79;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            object = sub_10035E4C8(0, *((void *)object + 2) + 1, 1, object);
          }
          unint64_t v46 = *((void *)object + 2);
          unint64_t v45 = *((void *)object + 3);
          if (v46 >= v45 >> 1) {
            object = sub_10035E4C8((char *)(v45 > 1), v46 + 1, 1, object);
          }
          *((void *)object + 2) = v46 + 1;
          uint64_t v47 = &object[16 * v46];
          *((void *)v47 + 4) = countAndFlagsBits;
          *((void *)v47 + 5) = v39;
          unsigned int v79 = object;
          if (v69)
          {
            uint64_t v48 = sub_100534E00();
            Swift::Int v49 = v48 + 1;
            id v25 = v70;
            a5 = v68;
            if (__OFADD__(v48, 1)) {
              goto LABEL_40;
            }
            v81._uint64_t countAndFlagsBits = 32;
            v81._object = (void *)0xE100000000000000;
            uint64_t v50 = sub_100534F30(v81, v49);
            uint64_t v52 = v51;
          }
          else
          {
            uint64_t v50 = 0;
            uint64_t v52 = (void *)0xE000000000000000;
            id v25 = v70;
            a5 = v68;
          }
          v77._uint64_t countAndFlagsBits = v50;
          v77._object = v52;
          swift_bridgeObjectRetain();
          v82._uint64_t countAndFlagsBits = v27;
          v82._object = v29;
          sub_100534E80(v82);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          v83._uint64_t countAndFlagsBits = 32;
          v83._object = (void *)0xE100000000000000;
          sub_100534E80(v83);
          swift_bridgeObjectRelease();
          Swift::String v78 = v77;
        }
        sub_10052EEA0();
        uint64_t v27 = sub_100535EC0();
        Swift::String v29 = v35;
        uint64_t v32 = v36;
        v72(v33, v36);
        if (!v29) {
          goto LABEL_22;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
    }
    else
    {
LABEL_22:
      uint64_t v53 = ((unint64_t)v78._object >> 56) & 0xF;
      if (((uint64_t)v78._object & 0x2000000000000000) == 0) {
        uint64_t v53 = v78._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
      }
      if (!v53)
      {

        swift_bridgeObjectRelease();
        object = v64;
LABEL_37:
        *(void *)object = v79;
        return;
      }
      Swift::String v77 = v78;
      uint64_t v75 = 606827356;
      unint64_t v76 = 0xE400000000000000;
      uint64_t v73 = 0;
      unint64_t v74 = 0xE000000000000000;
      sub_100368E28();
      uint64_t v39 = sub_100536020();
      uint64_t countAndFlagsBits = v54;
      swift_bridgeObjectRelease();
      Swift::String v29 = v79;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      object = v64;
      if (isUniquelyReferenced_nonNull_native)
      {
LABEL_26:
        unint64_t v57 = *((void *)v29 + 2);
        unint64_t v56 = *((void *)v29 + 3);
        if (v57 >= v56 >> 1) {
          Swift::String v29 = sub_10035E4C8((char *)(v56 > 1), v57 + 1, 1, v29);
        }
        *((void *)v29 + 2) = v57 + 1;
        BOOL v58 = &v29[16 * v57];
        *((void *)v58 + 4) = v39;
        *((void *)v58 + 5) = countAndFlagsBits;
        unsigned int v79 = v29;

        goto LABEL_37;
      }
    }
    Swift::String v29 = sub_10035E4C8(0, *((void *)v29 + 2) + 1, 1, v29);
    goto LABEL_26;
  }
  uint64_t v59 = *((void *)v17 + 2);
  swift_bridgeObjectRetain();
  if (v59)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unsigned int v17 = sub_10035E4C8(0, v59 + 1, 1, v17);
    }
    unint64_t v61 = *((void *)v17 + 2);
    unint64_t v60 = *((void *)v17 + 3);
    if (v61 >= v60 >> 1) {
      unsigned int v17 = sub_10035E4C8((char *)(v60 > 1), v61 + 1, 1, v17);
    }
    *((void *)v17 + 2) = v61 + 1;
    uint64_t v62 = &v17[16 * v61];
    *((void *)v62 + 4) = v19;
    *((void *)v62 + 5) = v18;
  }
  *a6 = v17;
}

uint64_t sub_10036C77C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v3 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3) {
    return 0;
  }
  swift_beginAccess();
  if (*(void *)(*(void *)a3 + 16))
  {
    uint64_t result = sub_100534E00();
    Swift::Int v7 = result + 1;
    if (__OFADD__(result, 1))
    {
      __break(1u);
    }
    else
    {
      v8._uint64_t countAndFlagsBits = 32;
      v8._object = (void *)0xE100000000000000;
      return sub_100534F30(v8, v7);
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    v9._uint64_t countAndFlagsBits = 32;
    v9._object = (void *)0xE100000000000000;
    sub_100534E80(v9);
    return a1;
  }
  return result;
}

char *Array<A>.asciiBoxed()(uint64_t a1)
{
  uint64_t v34 = *(void *)(a1 + 16);
  if (v34)
  {
    uint64_t v1 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v2 = 0;
    uint64_t v3 = 0;
    uint64_t v33 = v1;
    do
    {
      uint64_t v35 = *(void *)(v1 + 8 * v2);
      uint64_t v4 = *(void *)(v35 + 16);
      if (v4)
      {
        swift_bridgeObjectRetain();
        uint64_t v5 = v4 - 1;
        if (v5)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v6 = v35 + 56;
          do
          {
            swift_bridgeObjectRetain();
            sub_100534E00();
            sub_100534E00();
            v6 += 16;
            swift_bridgeObjectRelease();
            --v5;
          }
          while (v5);
          swift_bridgeObjectRelease();
          uint64_t v1 = v33;
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        uint64_t v7 = sub_100534E00();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v7 > v3) {
          uint64_t v3 = v7;
        }
      }
      else
      {
        v3 &= ~(v3 >> 63);
      }
      ++v2;
    }
    while (v2 != v34);
    swift_bridgeObjectRelease();
    if (__OFADD__(v3, 2))
    {
      __break(1u);
      goto LABEL_39;
    }
  }
  sub_100368E28();
  uint64_t v37 = sub_100536060();
  uint64_t v40 = v8;
  swift_bridgeObjectRetain();
  v43._uint64_t countAndFlagsBits = 11441634;
  v43._object = (void *)0xA300000000000000;
  sub_100534E80(v43);
  swift_bridgeObjectRelease();
  uint64_t v9 = v40;
  uint64_t v32 = v37;
  uint64_t v38 = sub_100536060();
  uint64_t v41 = v10;
  swift_bridgeObjectRetain();
  v44._uint64_t countAndFlagsBits = 10786018;
  v44._object = (void *)0xA300000000000000;
  sub_100534E80(v44);
  swift_bridgeObjectRelease();
  uint64_t v11 = v41;
  if (!v34)
  {
LABEL_39:
    uint64_t v13 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_40;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = 0;
  uint64_t v13 = (char *)_swiftEmptyArrayStorage;
  uint64_t v31 = v9;
  do
  {
    if (v12) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = v9;
    }
    uint64_t v15 = *(void *)(a1 + 32 + 8 * v12);
    if (v12) {
      uint64_t v16 = v38;
    }
    else {
      uint64_t v16 = v32;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v36 = v12;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_10035E4C8(0, *((void *)v13 + 2) + 1, 1, v13);
    }
    unint64_t v18 = *((void *)v13 + 2);
    unint64_t v17 = *((void *)v13 + 3);
    if (v18 >= v17 >> 1) {
      uint64_t v13 = sub_10035E4C8((char *)(v17 > 1), v18 + 1, 1, v13);
    }
    *((void *)v13 + 2) = v18 + 1;
    uint64_t v19 = &v13[16 * v18];
    *((void *)v19 + 4) = v16;
    *((void *)v19 + 5) = v14;
    uint64_t v20 = *(void *)(v15 + 16);
    if (v20)
    {
      uint64_t v21 = v15 + 40;
      do
      {
        v45._uint64_t countAndFlagsBits = sub_100536060();
        sub_100534E80(v45);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v46._uint64_t countAndFlagsBits = 8557794;
        v46._object = (void *)0xA300000000000000;
        sub_100534E80(v46);
        swift_bridgeObjectRelease();
        unint64_t v23 = *((void *)v13 + 2);
        unint64_t v22 = *((void *)v13 + 3);
        if (v23 >= v22 >> 1) {
          uint64_t v13 = sub_10035E4C8((char *)(v22 > 1), v23 + 1, 1, v13);
        }
        v21 += 16;
        *((void *)v13 + 2) = v23 + 1;
        NSString v24 = &v13[16 * v23];
        *((void *)v24 + 4) = 545428706;
        *((void *)v24 + 5) = 0xA400000000000000;
        --v20;
      }
      while (v20);
    }
    uint64_t v12 = v36 + 1;
    swift_bridgeObjectRelease();
    uint64_t v11 = v41;
    uint64_t v9 = v31;
  }
  while (v36 + 1 != v34);
  uint64_t v39 = sub_100536060();
  uint64_t v42 = v25;
  swift_bridgeObjectRetain();
  v47._uint64_t countAndFlagsBits = 11507170;
  v47._object = (void *)0xA300000000000000;
  sub_100534E80(v47);
  swift_bridgeObjectRelease();
  unint64_t v27 = *((void *)v13 + 2);
  unint64_t v26 = *((void *)v13 + 3);
  if (v27 >= v26 >> 1) {
    uint64_t v13 = sub_10035E4C8((char *)(v26 > 1), v27 + 1, 1, v13);
  }
  *((void *)v13 + 2) = v27 + 1;
  Swift::String v28 = &v13[16 * v27];
  *((void *)v28 + 4) = v39;
  *((void *)v28 + 5) = v42;
  swift_bridgeObjectRelease();
LABEL_40:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

{
  uint64_t inited;
  char *v3;

  sub_10000BB04(&qword_10066F1A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10053A3B0;
  *(void *)(inited + 32) = a1;
  swift_bridgeObjectRetain();
  uint64_t v3 = Array<A>.asciiBoxed()(inited);
  swift_setDeallocating();
  sub_10000BB04(&qword_10066F1B0);
  swift_arrayDestroy();
  return v3;
}

uint64_t Array<A>.appendStringComponents(_:lineLength:bullet:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10 = sub_10052EEE0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  sub_10052EED0();
  sub_100368E28();
  uint64_t v14 = sub_100535FC0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v15 = (char *)_swiftEmptyArrayStorage;
  unint64_t v22 = (char *)_swiftEmptyArrayStorage;
  uint64_t v16 = *(void *)(v14 + 16);
  if (v16)
  {
    swift_bridgeObjectRetain();
    unint64_t v17 = (uint64_t *)(v14 + 40);
    do
    {
      uint64_t v18 = *v17;
      uint64_t v23 = *(v17 - 1);
      uint64_t v24 = v18;
      swift_bridgeObjectRetain();
      sub_10036C190(&v22, &v23, a4, a5, a3, &v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v21;
      unint64_t v22 = v21;
      v17 += 2;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return sub_10036BA04((uint64_t)v15);
}

uint64_t sub_10036CFA0(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_100536470();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_100536470();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_10036D180();
          swift_bridgeObjectRetain();
          for (unint64_t i = 0; i != v7; ++i)
          {
            sub_10000BB04(&qword_10066F1B8);
            uint64_t v10 = sub_1003935AC(v13, i, a3);
            id v12 = *v11;
            ((void (*)(void (**)(id *), void))v10)(v13, 0);
            *(void *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        sub_10036D140();
        swift_arrayInitWithCopy();
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_10036D140()
{
  unint64_t result = qword_10066F710;
  if (!qword_10066F710)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10066F710);
  }
  return result;
}

unint64_t sub_10036D180()
{
  unint64_t result = qword_10066F1C0;
  if (!qword_10066F1C0)
  {
    sub_100013BFC(&qword_10066F1B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066F1C0);
  }
  return result;
}

uint64_t Optional<A>.isArtworkVisuallyIdentical(to:)(uint64_t a1, unint64_t a2)
{
  uint64_t result = (a2 | a1) == 0;
  if (a2)
  {
    if (a1) {
      return (uint64_t)[a2 isArtworkVisuallyIdenticalToCatalog:];
    }
  }
  return result;
}

uint64_t MPCPlaybackIntentOptions.debugDescription.getter(char a1)
{
  if ((a1 & 1) == 0)
  {
    uint64_t v2 = (char *)_swiftEmptyArrayStorage;
    if ((a1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  uint64_t v2 = sub_10035E4C8(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v4 = *((void *)v2 + 2);
  unint64_t v3 = *((void *)v2 + 3);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10035E4C8((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v4 + 1;
  uint64_t v5 = &v2[16 * v4];
  *((void *)v5 + 4) = 0x656D6D4979616C70;
  *((void *)v5 + 5) = 0xEF796C6574616964;
  if ((a1 & 2) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_10035E4C8(0, *((void *)v2 + 2) + 1, 1, v2);
    }
    unint64_t v7 = *((void *)v2 + 2);
    unint64_t v6 = *((void *)v2 + 3);
    if (v7 >= v6 >> 1) {
      uint64_t v2 = sub_10035E4C8((char *)(v6 > 1), v7 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v7 + 1;
    uint64_t v8 = &v2[16 * v7];
    *((void *)v8 + 4) = 0x6575517465736572;
    *((void *)v8 + 5) = 0xEA00000000006575;
  }
LABEL_12:
  if ((a1 & 4) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_10035E4C8(0, *((void *)v2 + 2) + 1, 1, v2);
    }
    unint64_t v10 = *((void *)v2 + 2);
    unint64_t v9 = *((void *)v2 + 3);
    if (v10 >= v9 >> 1) {
      uint64_t v2 = sub_10035E4C8((char *)(v9 > 1), v10 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v10 + 1;
    uint64_t v11 = &v2[16 * v10];
    *((void *)v11 + 4) = 0x4E70556F54646461;
    *((void *)v11 + 5) = 0xEF64616548747865;
    if ((a1 & 8) == 0)
    {
LABEL_14:
      if ((a1 & 0x10) == 0) {
        goto LABEL_31;
      }
      goto LABEL_26;
    }
  }
  else if ((a1 & 8) == 0)
  {
    goto LABEL_14;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10035E4C8(0, *((void *)v2 + 2) + 1, 1, v2);
  }
  unint64_t v13 = *((void *)v2 + 2);
  unint64_t v12 = *((void *)v2 + 3);
  if (v13 >= v12 >> 1) {
    uint64_t v2 = sub_10035E4C8((char *)(v12 > 1), v13 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v13 + 1;
  uint64_t v14 = &v2[16 * v13];
  *((void *)v14 + 4) = 0x4E70556F54646461;
  *((void *)v14 + 5) = 0xEF6C696154747865;
  if ((a1 & 0x10) != 0)
  {
LABEL_26:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_10035E4C8(0, *((void *)v2 + 2) + 1, 1, v2);
    }
    unint64_t v16 = *((void *)v2 + 2);
    unint64_t v15 = *((void *)v2 + 3);
    if (v16 >= v15 >> 1) {
      uint64_t v2 = sub_10035E4C8((char *)(v15 > 1), v16 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v16 + 1;
    unint64_t v17 = &v2[16 * v16];
    *((void *)v17 + 4) = 0x5074726174736572;
    *((void *)v17 + 5) = 0xEF6B63616279616CLL;
  }
LABEL_31:
  sub_10000BB04(&qword_10066F1B0);
  sub_10036D71C();
  uint64_t v18 = sub_100534BA0();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  v22._uint64_t countAndFlagsBits = v18;
  v22._object = v20;
  sub_100534E80(v22);
  swift_bridgeObjectRelease();
  v23._uint64_t countAndFlagsBits = 93;
  v23._object = (void *)0xE100000000000000;
  sub_100534E80(v23);
  return 91;
}

uint64_t sub_10036D584()
{
  return MPCPlaybackIntentOptions.debugDescription.getter(*v0);
}

void *MPMediaLibraryFilteringOptions.none.unsafeMutableAddressor()
{
  return &static MPMediaLibraryFilteringOptions.none;
}

__C::MPMediaLibraryFilteringOptions __swiftcall MPMediaLibraryFilteringOptions.init(_:)(NSNumber_optional a1)
{
  if (a1.value.super.super.isa)
  {
    Class isa = a1.value.super.super.isa;
    uint64_t v2 = (objc_class *)[(objc_class *)a1.value.super.super.isa unsignedIntegerValue];

    a1.value.super.super.Class isa = v2;
  }
  return (__C::MPMediaLibraryFilteringOptions)a1.value.super.super.isa;
}

uint64_t MPMediaLibraryFilteringOptions.itemRequestFilteringOptions.getter(char a1)
{
  return a1 & 2;
}

uint64_t static PropertySetCombinator.buildBlock(_:)(unint64_t a1)
{
  id v2 = [self emptyPropertySet];
  unint64_t v3 = v2;
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v5 = v2;
    uint64_t result = swift_bridgeObjectRetain();
    id v7 = v3;
    if (v4) {
      goto LABEL_3;
    }
LABEL_10:

    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  id v12 = v2;
  swift_bridgeObjectRetain();
  uint64_t result = sub_100536470();
  uint64_t v4 = result;
  id v7 = v3;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v4 >= 1)
  {
    uint64_t v8 = 0;
    unint64_t v9 = v3;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v10 = (id)sub_100536210();
      }
      else {
        id v10 = *(id *)(a1 + 8 * v8 + 32);
      }
      uint64_t v11 = v10;
      ++v8;
      id v7 = [v9 propertySetByCombiningWithPropertySet:v10];

      unint64_t v9 = v7;
    }
    while (v4 != v8);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

unint64_t sub_10036D71C()
{
  unint64_t result = qword_10066F1C8;
  if (!qword_10066F1C8)
  {
    sub_100013BFC(&qword_10066F1B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066F1C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for PropertySetCombinator()
{
  return &type metadata for PropertySetCombinator;
}

uint64_t GenericMusicItem.innerMusicItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10052FFA0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v9 = sub_100534080();
    uint64_t v10 = v9;
    uint64_t v11 = &protocol witness table for Album;
LABEL_5:
    *(void *)(a1 + 24) = v9;
    *(void *)(a1 + 32) = v11;
LABEL_19:
    uint64_t v14 = sub_1000FF040((uint64_t *)a1);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v14, v7, v10);
  }
  if (v8 == enum case for GenericMusicItem.artist(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v9 = sub_1005341C0();
    uint64_t v10 = v9;
    uint64_t v11 = &protocol witness table for Artist;
    goto LABEL_5;
  }
  if (v8 == enum case for GenericMusicItem.composer(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v10 = sub_100530510();
    *(void *)(a1 + 24) = v10;
    id v12 = (unint64_t *)&unk_10066F218;
    unint64_t v13 = &type metadata accessor for Composer;
LABEL_18:
    *(void *)(a1 + 32) = sub_10036EE64(v12, (void (*)(uint64_t))v13);
    goto LABEL_19;
  }
  if (v8 == enum case for GenericMusicItem.creditArtist(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v10 = sub_100530370();
    *(void *)(a1 + 24) = v10;
    id v12 = (unint64_t *)&unk_10066F210;
    unint64_t v13 = &type metadata accessor for CreditArtist;
    goto LABEL_18;
  }
  if (v8 == enum case for GenericMusicItem.curator(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v9 = sub_100534360();
    uint64_t v10 = v9;
    uint64_t v11 = &protocol witness table for Curator;
    goto LABEL_5;
  }
  if (v8 == enum case for GenericMusicItem.editorialItem(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v10 = sub_1005303A0();
    *(void *)(a1 + 24) = v10;
    id v12 = (unint64_t *)&unk_10066F208;
    unint64_t v13 = &type metadata accessor for EditorialItem;
    goto LABEL_18;
  }
  if (v8 == enum case for GenericMusicItem.genre(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v9 = sub_1005340B0();
    uint64_t v10 = v9;
    uint64_t v11 = &protocol witness table for Genre;
    goto LABEL_5;
  }
  if (v8 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v10 = sub_1005302D0();
    *(void *)(a1 + 24) = v10;
    id v12 = (unint64_t *)&unk_10066F200;
    unint64_t v13 = &type metadata accessor for MusicMovie;
    goto LABEL_18;
  }
  if (v8 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v9 = sub_1005339C0();
    uint64_t v10 = v9;
    uint64_t v11 = &protocol witness table for MusicVideo;
    goto LABEL_5;
  }
  if (v8 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v9 = sub_100534720();
    uint64_t v10 = v9;
    uint64_t v11 = &protocol witness table for Playlist;
    goto LABEL_5;
  }
  if (v8 == enum case for GenericMusicItem.radioShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v9 = sub_100534750();
    uint64_t v10 = v9;
    uint64_t v11 = &protocol witness table for RadioShow;
    goto LABEL_5;
  }
  if (v8 == enum case for GenericMusicItem.recordLabel(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v9 = sub_100533DF0();
    uint64_t v10 = v9;
    uint64_t v11 = &protocol witness table for RecordLabel;
    goto LABEL_5;
  }
  if (v8 == enum case for GenericMusicItem.socialProfile(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v10 = sub_1005303E0();
    *(void *)(a1 + 24) = v10;
    id v12 = (unint64_t *)&unk_10066F1F8;
    unint64_t v13 = &type metadata accessor for SocialProfile;
    goto LABEL_18;
  }
  if (v8 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v9 = sub_100533F70();
    uint64_t v10 = v9;
    uint64_t v11 = &protocol witness table for Song;
    goto LABEL_5;
  }
  if (v8 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v9 = sub_1005343B0();
    uint64_t v10 = v9;
    uint64_t v11 = &protocol witness table for Station;
    goto LABEL_5;
  }
  if (v8 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v10 = sub_1005305C0();
    *(void *)(a1 + 24) = v10;
    id v12 = (unint64_t *)&unk_10066F1F0;
    unint64_t v13 = &type metadata accessor for TVEpisode;
    goto LABEL_18;
  }
  if (v8 == enum case for GenericMusicItem.tvSeason(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v10 = sub_100530560();
    *(void *)(a1 + 24) = v10;
    id v12 = (unint64_t *)&unk_10066F1E8;
    unint64_t v13 = &type metadata accessor for TVSeason;
    goto LABEL_18;
  }
  if (v8 == enum case for GenericMusicItem.tvShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v10 = sub_100530500();
    *(void *)(a1 + 24) = v10;
    id v12 = (unint64_t *)&unk_10066F1E0;
    unint64_t v13 = &type metadata accessor for TVShow;
    goto LABEL_18;
  }
  if (v8 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v10 = sub_100530430();
    *(void *)(a1 + 24) = v10;
    id v12 = (unint64_t *)&unk_10066F1D8;
    unint64_t v13 = &type metadata accessor for UploadedAudio;
    goto LABEL_18;
  }
  if (v8 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v10 = sub_100530480();
    *(void *)(a1 + 24) = v10;
    id v12 = (unint64_t *)&unk_10066F1D0;
    unint64_t v13 = &type metadata accessor for UploadedVideo;
    goto LABEL_18;
  }
  if (v8 == enum case for GenericMusicItem.other(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t GenericMusicItem.catalogID.getter()
{
  uint64_t v0 = sub_100530500();
  uint64_t v37 = *(void *)(v0 - 8);
  uint64_t v38 = v0;
  __chkstk_darwin(v0);
  uint64_t v36 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100530560();
  uint64_t v40 = *(void *)(v2 - 8);
  uint64_t v41 = v2;
  __chkstk_darwin(v2);
  uint64_t v39 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005305C0();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  __chkstk_darwin(v4);
  uint64_t v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100533F70();
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v47 = v6;
  __chkstk_darwin(v6);
  Swift::String v45 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100534720();
  uint64_t v49 = *(void *)(v8 - 8);
  uint64_t v50 = v8;
  __chkstk_darwin(v8);
  uint64_t v48 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005339C0();
  uint64_t v52 = *(void *)(v10 - 8);
  uint64_t v53 = v10;
  __chkstk_darwin(v10);
  BOOL v51 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005302D0();
  uint64_t v54 = *(void *)(v12 - 8);
  uint64_t v55 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005341C0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100534080();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  Swift::String v22 = (char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10052FFA0();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  unint64_t v26 = (char *)&v36 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v26, v56, v23);
  int v27 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v26, v23);
  if (v27 != enum case for GenericMusicItem.album(_:))
  {
    if (v27 == enum case for GenericMusicItem.artist(_:))
    {
      (*(void (**)(char *, uint64_t))(v24 + 96))(v26, v23);
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v26, v15);
      uint64_t v28 = sub_100534170();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      return v28;
    }
    if (v27 != enum case for GenericMusicItem.composer(_:)
      && v27 != enum case for GenericMusicItem.curator(_:)
      && v27 != enum case for GenericMusicItem.editorialItem(_:)
      && v27 != enum case for GenericMusicItem.genre(_:))
    {
      if (v27 == enum case for GenericMusicItem.musicMovie(_:))
      {
        (*(void (**)(char *, uint64_t))(v24 + 96))(v26, v23);
        uint64_t v30 = v54;
        uint64_t v29 = v55;
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v14, v26, v55);
        uint64_t v28 = sub_1005302C0();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v29);
        return v28;
      }
      if (v27 == enum case for GenericMusicItem.musicVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v24 + 96))(v26, v23);
        uint64_t v31 = v51;
        uint64_t v32 = v52;
        uint64_t v33 = v53;
        (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v51, v26, v53);
        uint64_t v34 = sub_100533950();
LABEL_15:
        uint64_t v28 = v34;
        (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v33);
        return v28;
      }
      if (v27 == enum case for GenericMusicItem.playlist(_:))
      {
        (*(void (**)(char *, uint64_t))(v24 + 96))(v26, v23);
        uint64_t v31 = v48;
        uint64_t v32 = v49;
        uint64_t v33 = v50;
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v48, v26, v50);
        uint64_t v34 = sub_1005345D0();
        goto LABEL_15;
      }
      if (v27 != enum case for GenericMusicItem.radioShow(_:)
        && v27 != enum case for GenericMusicItem.recordLabel(_:)
        && v27 != enum case for GenericMusicItem.socialProfile(_:))
      {
        if (v27 == enum case for GenericMusicItem.song(_:))
        {
          (*(void (**)(char *, uint64_t))(v24 + 96))(v26, v23);
          uint64_t v31 = v45;
          uint64_t v32 = v46;
          uint64_t v33 = v47;
          (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v45, v26, v47);
          uint64_t v34 = sub_100533EC0();
          goto LABEL_15;
        }
        if (v27 != enum case for GenericMusicItem.station(_:))
        {
          if (v27 == enum case for GenericMusicItem.tvEpisode(_:))
          {
            (*(void (**)(char *, uint64_t))(v24 + 96))(v26, v23);
            uint64_t v31 = v42;
            uint64_t v32 = v43;
            uint64_t v33 = v44;
            (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v42, v26, v44);
            uint64_t v34 = sub_1005305B0();
            goto LABEL_15;
          }
          if (v27 == enum case for GenericMusicItem.tvSeason(_:))
          {
            (*(void (**)(char *, uint64_t))(v24 + 96))(v26, v23);
            uint64_t v31 = v39;
            uint64_t v32 = v40;
            uint64_t v33 = v41;
            (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v39, v26, v41);
            uint64_t v34 = sub_100530550();
            goto LABEL_15;
          }
          if (v27 == enum case for GenericMusicItem.tvShow(_:))
          {
            (*(void (**)(char *, uint64_t))(v24 + 96))(v26, v23);
            uint64_t v31 = v36;
            uint64_t v32 = v37;
            uint64_t v33 = v38;
            (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v36, v26, v38);
            uint64_t v34 = sub_1005304F0();
            goto LABEL_15;
          }
        }
      }
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v24 + 96))(v26, v23);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v26, v19);
  uint64_t v28 = sub_100533FD0();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  return v28;
}

uint64_t Playlist.Entry.InternalItem.musicItem.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100534680();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v20 - v9, v2, v4);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v10, v4);
  if (v12 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v10, v4);
    uint64_t v13 = sub_1005302D0();
    a1[3] = v13;
    uint64_t v14 = (unint64_t *)&unk_10066F200;
    uint64_t v15 = &type metadata accessor for MusicMovie;
LABEL_3:
    a1[4] = sub_10036EE64(v14, (void (*)(uint64_t))v15);
LABEL_9:
    uint64_t v18 = sub_1000FF040(a1);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v18, v10, v13);
  }
  if (v12 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v10, v4);
    uint64_t v16 = sub_1005339C0();
    uint64_t v13 = v16;
    uint64_t v17 = &protocol witness table for MusicVideo;
LABEL_8:
    a1[3] = v16;
    a1[4] = (uint64_t)v17;
    goto LABEL_9;
  }
  if (v12 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v10, v4);
    uint64_t v16 = sub_100533F70();
    uint64_t v13 = v16;
    uint64_t v17 = &protocol witness table for Song;
    goto LABEL_8;
  }
  if (v12 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v10, v4);
    uint64_t v13 = sub_1005305C0();
    a1[3] = v13;
    uint64_t v14 = (unint64_t *)&unk_10066F1F0;
    uint64_t v15 = &type metadata accessor for TVEpisode;
    goto LABEL_3;
  }
  if (v12 == enum case for Playlist.Entry.InternalItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v10, v4);
    uint64_t v13 = sub_100530430();
    a1[3] = v13;
    uint64_t v14 = (unint64_t *)&unk_10066F1D8;
    uint64_t v15 = &type metadata accessor for UploadedAudio;
    goto LABEL_3;
  }
  if (v12 == enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v10, v4);
    uint64_t v13 = sub_100530480();
    a1[3] = v13;
    uint64_t v14 = (unint64_t *)&unk_10066F1D0;
    uint64_t v15 = &type metadata accessor for UploadedVideo;
    goto LABEL_3;
  }
  v11(v8, v2, v4);
  unint64_t v20 = 0;
  unint64_t v21 = 0xE000000000000000;
  sub_1005361C0(42);
  swift_bridgeObjectRelease();
  unint64_t v20 = 0xD000000000000028;
  unint64_t v21 = 0x8000000100565DC0;
  sub_10036EE64(&qword_10066F220, (void (*)(uint64_t))&type metadata accessor for Playlist.Entry.InternalItem);
  v22._uint64_t countAndFlagsBits = sub_100536700();
  sub_100534E80(v22);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1005363F0();
  __break(1u);
  return result;
}

uint64_t sub_10036EE64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10036EEAC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_10035E7C8(0, *(void *)(v5 + 16) + 1, 1, (char *)v5);
    uint64_t v5 = result;
  }
  unint64_t v8 = *(void *)(v5 + 16);
  unint64_t v7 = *(void *)(v5 + 24);
  if (v8 >= v7 >> 1)
  {
    uint64_t result = (uint64_t)sub_10035E7C8((char *)(v7 > 1), v8 + 1, 1, (char *)v5);
    uint64_t v5 = result;
  }
  *(void *)(v5 + 16) = v8 + 1;
  unint64_t v9 = v5 + 16 * v8;
  *(void *)(v9 + 32) = a1;
  *(void *)(v9 + 40) = a2;
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_10036EF50(uint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_10035E5EC(0, v3[2] + 1, 1, v3);
  }
  unint64_t v5 = v3[2];
  unint64_t v4 = v3[3];
  if (v5 >= v4 >> 1) {
    uint64_t v3 = (void *)sub_10035E5EC(v4 > 1, v5 + 1, 1, v3);
  }
  v3[2] = v5 + 1;
  uint64_t v6 = *(void *)(sub_10000BB04(&qword_10066EF20) - 8);
  uint64_t result = sub_100013A18(a1, (uint64_t)v3+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v5, &qword_10066EF20);
  *uint64_t v1 = v3;
  return result;
}

uint64_t sub_10036F058(uint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_10035E5CC(0, v3[2] + 1, 1, v3);
  }
  unint64_t v5 = v3[2];
  unint64_t v4 = v3[3];
  if (v5 >= v4 >> 1) {
    uint64_t v3 = (void *)sub_10035E5CC(v4 > 1, v5 + 1, 1, v3);
  }
  v3[2] = v5 + 1;
  uint64_t v6 = sub_10052FA30();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))((unint64_t)v3+ ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80))+ *(void *)(*(void *)(v6 - 8) + 72) * v5, a1, v6);
  *uint64_t v1 = v3;
  return result;
}

uint64_t sub_10036F140(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    uint64_t v8 = swift_bridgeObjectRetain() + 40;
    do
    {
      unint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 - 8);
      swift_retain();
      v9(a2, a3, a4);
      swift_release();
      v8 += 16;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10036F1D8()
{
  return swift_slowAlloc();
}

unint64_t sub_10036F1E0(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    unint64_t result = sub_100367FB4(a3);
    if ((v9 & 1) == 0) {
      return result;
    }
    unint64_t v10 = result;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v3;
    uint64_t v14 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10039676C();
      uint64_t v12 = v14;
    }
    sub_100381FAC(v10, v12);
    *uint64_t v4 = v12;
  }
  else
  {
    char v7 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_100382360(a1, a3, v7);
    *uint64_t v3 = v13;
  }
  return swift_bridgeObjectRelease();
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_10036F2B0()
{
  swift_bridgeObjectRetain();
  sub_100382900(&v0);
}

uint64_t _sSo14NSUserDefaultsC14MusicUtilitiesE8MigratorV3keyxvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t sub_10036F330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, NSObject *a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, objc_class *a8@<X7>, NSObject *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, NSObject *a15)
{
  void (**v683)(uint8_t **__return_ptr, uint64_t);
  char *v684;
  uint64_t v685;
  void (**v686)(uint8_t **__return_ptr, uint64_t);
  void (**v687)(uint8_t **__return_ptr, uint64_t);
  uint64_t v688;
  void (**v689)(uint8_t **__return_ptr, uint64_t);
  uint64_t v690;
  void (**v691)(uint8_t **__return_ptr, uint64_t);
  void (**v692)(uint8_t **__return_ptr, uint64_t);
  uint8_t *v693;
  unsigned char *v694;
  uint64_t v695;
  uint64_t v696;
  unsigned char *v697;
  char *v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  char *v702;
  uint64_t v703;
  char *v704;
  char *v705;
  os_log_t v706;
  char *v707;
  uint64_t v708;
  unint64_t v709;
  uint64_t *v710;
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  BOOL v715;
  BOOL v716;
  uint64_t v717;
  void (*v718)(char *, uint64_t);
  uint64_t v719;
  char v720;
  uint64_t v721;
  uint64_t v722;
  uint64_t v723;
  uint64_t v724;
  unint64_t v725;
  uint64_t v726;
  uint64_t v727;
  NSObject *v728;
  int v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t v733;
  char *v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  uint64_t v738;
  uint64_t v739;
  unint64_t v740;
  uint64_t v741;
  uint64_t v742;
  char v743;
  char *v744;
  uint64_t v745;
  uint64_t v746;
  uint64_t v747;
  unint64_t v748;
  uint64_t v749;
  unint64_t v750;
  char *v751;
  uint64_t v752;
  NSObject *v753;
  uint64_t v754;
  uint64_t v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  uint64_t v760;
  uint8_t *v761;
  char **p_TupleTypeMetadata2;
  uint64_t v763;
  uint64_t v764;
  char v765;
  char *v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  unint64_t v770;
  uint64_t v771;
  unint64_t v772;
  uint64_t v773;
  uint64_t v774;
  uint64_t v775;
  uint64_t v776;
  uint64_t v777;
  uint64_t v778;
  uint8_t *v779;
  void (*v780)(char *, uint64_t);
  void (*v781)(char *, uint64_t);
  uint64_t v782;
  char *v783;
  uint64_t v784;
  os_log_type_t v785;
  uint64_t v786;
  uint64_t v787;
  uint64_t v788;
  uint64_t v789;
  uint64_t v790;
  uint8_t *v791;
  char **v792;
  uint64_t v793;
  uint64_t v794;
  NSObject *v795;
  os_log_type_t v796;
  uint64_t v797;
  char *v798;
  uint64_t v799;
  uint64_t v800;
  uint64_t v801;
  uint64_t v802;
  uint8_t *v804;
  void (*v805)(char *, uint64_t);
  uint64_t v806;
  void (*v807)(char *, uint64_t);
  uint64_t v808;
  uint64_t v809;
  char *v810;
  char *v811;
  uint64_t v812;
  uint64_t v813;
  NSObject *v814;
  NSObject *v815;
  os_log_type_t v816;
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  uint64_t v820;
  uint64_t v821;
  uint8_t *v822;
  void (*v823)(char *, uint64_t);
  uint64_t v824;
  uint64_t v825;
  uint64_t v826;
  uint64_t v827;
  NSObject *v828;
  os_log_type_t v829;
  uint64_t v830;
  uint8_t *v831;
  uint64_t v832;
  uint8_t *v833;
  void (*v834)(char *, uint64_t);
  uint64_t v835;
  uint64_t v836;
  void (**v837)(char *, char *, uint64_t);
  uint64_t v838;
  NSObject *v839;
  os_log_type_t v840;
  uint64_t v841;
  uint8_t *v842;
  void (*v843)(char *, uint64_t);
  uint64_t v844;
  void v845[2];
  void (**v846)(uint64_t, char *);
  void (**v847)(uint64_t);
  uint64_t v848;
  void (*v849)(uint8_t **, void);
  NSObject *v850;
  void (**v851)(char *, uint64_t);
  void (**v852)(char *, uint64_t);
  NSObject *v853;
  void (*v854)(char *, uint64_t);
  void (*v855)(uint64_t, NSObject *);
  void (**v856)(char *, void, uint64_t, uint64_t);
  uint64_t v857;
  void (*v858)(uint64_t, uint64_t);
  uint64_t v859;
  void (*v860)(char *, void, uint64_t, uint64_t);
  int64_t v861;
  void (**v862)(uint64_t, char *, uint64_t);
  unsigned int (**v863)(char *, uint64_t, uint64_t);
  int64_t v864;
  objc_class *v865;
  char *v866;
  uint64_t v867;
  void (**v868)(uint64_t, char *, uint64_t);
  void (**v869)(char *, char *, uint64_t);
  long long v870;
  char *v871;
  uint64_t v872;
  char *v873;
  char *v874;
  char *v875;
  char *v876;
  uint64_t v877;
  void (**v878)(char *, char *, uint64_t);
  void (**v879)(uint64_t, uint64_t);
  void (**v880)(char *, uint64_t);
  os_log_t v881;
  uint64_t v882;
  uint64_t v883;
  unint64_t v884;
  char *v885;
  char *v886;
  char *v887;
  void *v888;
  uint64_t v889;
  os_log_t v890;
  char *v891;
  char *v892;
  char *v893;
  char *v894;
  char *v895;
  char *v896;
  uint64_t AssociatedConformanceWitness;
  char *v898;
  uint64_t v899;
  char *v900;
  char *v901;
  uint64_t v902;
  char *v903;
  char *v904;
  uint64_t *v905;
  uint64_t v906;
  char *TupleTypeMetadata2;
  char *v908;
  uint64_t v909;
  long long v910;
  uint64_t *v911;
  uint64_t v912;
  char *v913;
  uint64_t v914;
  NSObject *v915;
  char *v916;
  char *v917;
  uint64_t v918;
  char *v919;
  char **v920;
  long long v921;
  uint64_t v922;
  char *v923;
  char *v924;
  uint64_t *v925;
  void *v926;
  void (**v927)(char *, uint64_t);
  void (*v928)(char *, uint64_t);
  char *v929;
  uint64_t v930;
  char *v931;
  char *v932;
  char *v933;
  long long v934;
  uint64_t v935;
  uint64_t v936;
  uint64_t v937;
  uint64_t v938;
  uint64_t v939;
  NSObject *v940;
  os_log_t v941;
  char *v942;
  uint64_t v943;
  void (**v944)(uint8_t **__return_ptr, uint64_t);
  void (**v945)(uint8_t **__return_ptr, uint64_t);
  void (**v946)(char *);
  uint64_t v947;
  char *v948;
  uint64_t v949;
  NSObject *v950;
  NSObject *v951;
  char *v952;
  uint64_t v953;
  char *v954;
  uint64_t v955;
  uint64_t v956;
  char *v957;
  uint64_t v958;
  void (**v959)(uint64_t, uint64_t, uint64_t);
  void (**v960)(uint8_t **__return_ptr, uint64_t);
  uint64_t v961;
  uint64_t v962;
  void (*v963)(void, uint64_t, uint64_t);
  NSObject *v964;
  uint64_t v965;
  char *v966;
  uint64_t v967;
  uint64_t v968;
  void *WitnessTable;
  char *v970;
  uint64_t v971;
  uint64_t v972;
  uint64_t v973;
  uint64_t v974;
  uint64_t v975;
  uint64_t *v976;
  void (**v977)(uint64_t, uint64_t, uint64_t);
  void v978[5];
  unsigned char *v979;
  uint8_t *v980;
  uint64_t v981;
  char v982;
  void v983[2];
  uint64_t v984;
  void *v985;
  unint64_t v986;
  void *v987;
  unint64_t v988;

  LODWORD(v953) = a6;
  v890 = a5;
  v939 = a4;
  v974 = a3;
  v935 = a2;
  v936 = a11;
  v938 = a10;
  v922 = sub_10000BB04(&qword_10066EF20);
  __chkstk_darwin(v922);
  *(void *)&v921 = (char *)v845 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  v940 = a15;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v967 = sub_1005364F0();
  v880 = *(void (***)(char *, uint64_t))(v967 - 8);
  uint64_t v21 = __chkstk_darwin(v967);
  v976 = (void *)((char *)v845 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v21);
  v966 = (char *)v845 - v23;
  uint64_t v24 = sub_100536500();
  uint64_t WitnessTable = (void *)swift_getWitnessTable();
  v914 = sub_100536380();
  v879 = *(void (***)(uint64_t, uint64_t))(v914 - 8);
  uint64_t v25 = __chkstk_darwin(v914);
  v904 = (char *)v845 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  v968 = (uint64_t)v845 - v28;
  v909 = *(void *)(v24 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  v965 = (uint64_t)v845 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v919 = (char *)v845 - v31;
  TupleTypeMetadata2 = (char *)swift_getTupleTypeMetadata2();
  v906 = sub_100535F20();
  v878 = *(void (***)(char *, char *, uint64_t))(v906 - 8);
  uint64_t v32 = __chkstk_darwin(v906);
  v908 = (char *)v845 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v905 = (void *)((char *)v845 - v34);
  v973 = v24;
  uint64_t v35 = sub_100535F20();
  __chkstk_darwin(v35 - 8);
  v972 = (uint64_t)v845 - v36;
  v882 = sub_10000BB04(&qword_10066F3D8);
  uint64_t v37 = __chkstk_darwin(v882);
  v881 = (os_log_t)((char *)v845 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v39 = __chkstk_darwin(v37);
  v950 = ((char *)v845 - v40);
  v970 = (char *)AssociatedTypeWitness;
  v884 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v39);
  v902 = (uint64_t)v845 - v41;
  v899 = swift_checkMetadataState();
  v877 = *(void *)(v899 - 8);
  uint64_t v42 = __chkstk_darwin(v899);
  v886 = (char *)v845 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __chkstk_darwin(v42);
  v893 = (char *)v845 - v45;
  v958 = a14;
  v889 = *(void *)(a14 - 8);
  uint64_t v46 = __chkstk_darwin(v44);
  v874 = (char *)v845 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __chkstk_darwin(v46);
  v885 = (char *)v845 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  v898 = (char *)v845 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  v913 = (char *)v845 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  v901 = (char *)v845 - v55;
  v872 = v56;
  __chkstk_darwin(v54);
  v957 = (char *)v845 - v57;
  v971 = sub_10052FA30();
  v947 = *(void *)(v971 - 8);
  uint64_t v58 = __chkstk_darwin(v971);
  v894 = (char *)v845 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __chkstk_darwin(v58);
  v900 = (char *)v845 - v61;
  uint64_t v62 = __chkstk_darwin(v60);
  v930 = (uint64_t)v845 - v63;
  uint64_t v64 = __chkstk_darwin(v62);
  v923 = (char *)v845 - v65;
  uint64_t v66 = __chkstk_darwin(v64);
  v933 = (char *)v845 - v67;
  uint64_t v68 = __chkstk_darwin(v66);
  v917 = (char *)v845 - v69;
  uint64_t v70 = __chkstk_darwin(v68);
  v931 = (char *)v845 - v71;
  uint64_t v72 = __chkstk_darwin(v70);
  v924 = (char *)v845 - v73;
  uint64_t v74 = __chkstk_darwin(v72);
  v903 = (char *)v845 - v75;
  uint64_t v76 = __chkstk_darwin(v74);
  v949 = (uint64_t)v845 - v77;
  v943 = v78;
  __chkstk_darwin(v76);
  *(void *)&v910 = (char *)v845 - v79;
  uint64_t v80 = sub_10000BB04(&qword_10066F3B8);
  __chkstk_darwin(v80 - 8);
  v948 = (char *)v845 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  v918 = sub_10000BB04(&qword_10066F3E0);
  v937 = *(void *)(v918 - 8);
  uint64_t v82 = __chkstk_darwin(v918);
  v952 = (char *)v845 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v82);
  v892 = (char *)v845 - v84;
  uint64_t v85 = sub_100530920();
  v951 = *(NSObject **)(v85 - 8);
  uint64_t v86 = __chkstk_darwin(v85);
  v977 = (void (**)(uint64_t, uint64_t, uint64_t))((char *)v845 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v88 = __chkstk_darwin(v86);
  v959 = (void (**)(uint64_t, uint64_t, uint64_t))((char *)v845 - v89);
  uint64_t v90 = __chkstk_darwin(v88);
  v896 = (char *)v845 - v91;
  uint64_t v92 = __chkstk_darwin(v90);
  v871 = (char *)v845 - v93;
  uint64_t v94 = __chkstk_darwin(v92);
  v876 = (char *)v845 - v95;
  uint64_t v96 = __chkstk_darwin(v94);
  v875 = (char *)v845 - v97;
  uint64_t v98 = __chkstk_darwin(v96);
  v891 = (char *)v845 - v99;
  uint64_t v100 = __chkstk_darwin(v98);
  v895 = (char *)v845 - v101;
  uint64_t v102 = __chkstk_darwin(v100);
  v887 = (char *)v845 - v103;
  uint64_t v104 = __chkstk_darwin(v102);
  v928 = (void (*)(char *, uint64_t))((char *)v845 - v105);
  uint64_t v106 = __chkstk_darwin(v104);
  v873 = (char *)v845 - v107;
  uint64_t v108 = __chkstk_darwin(v106);
  v929 = (char *)v845 - v109;
  uint64_t v110 = __chkstk_darwin(v108);
  v942 = (char *)v845 - v111;
  uint64_t v112 = __chkstk_darwin(v110);
  v916 = (char *)v845 - v113;
  uint64_t v114 = __chkstk_darwin(v112);
  v932 = (char *)v845 - v115;
  uint64_t v116 = __chkstk_darwin(v114);
  v954 = (char *)v845 - v117;
  uint64_t v118 = __chkstk_darwin(v116);
  v944 = (void (**)(uint8_t **__return_ptr, uint64_t))((char *)v845 - v119);
  uint64_t v120 = __chkstk_darwin(v118);
  v946 = (void (**)(char *))((char *)v845 - v121);
  uint64_t v122 = __chkstk_darwin(v120);
  v927 = (void (**)(char *, uint64_t))((char *)v845 - v123);
  uint64_t v124 = __chkstk_darwin(v122);
  v945 = (void (**)(uint8_t **__return_ptr, uint64_t))((char *)v845 - v125);
  uint64_t v126 = __chkstk_darwin(v124);
  v869 = (void (**)(char *, char *, uint64_t))((char *)v845 - v127);
  uint64_t v128 = __chkstk_darwin(v126);
  *(void *)&v870 = (char *)v845 - v129;
  __chkstk_darwin(v128);
  uint64_t v131 = (char *)v845 - v130;
  LOBYTE(a9->isa) = 0;
  uint64_t v132 = (int *)type metadata accessor for AIDiffingUpdate();
  v915 = ((char *)a9 + v132[6]);
  _s14MusicUtilities15AIDiffingUpdateV19insertedSectionsSet10Foundation05IndexG0Vvpfi_0();
  v912 = (uint64_t)a9 + v132[7];
  _s14MusicUtilities15AIDiffingUpdateV19insertedSectionsSet10Foundation05IndexG0Vvpfi_0();
  uint64_t v133 = (Class *)((char *)&a9->isa + v132[8]);
  v134 = variable initialization expression of Library.Context.playlistVariants();
  v926 = v133;
  *uint64_t v133 = v134;
  uint64_t v135 = (uint64_t *)((char *)a9 + v132[9]);
  *uint64_t v135 = variable initialization expression of AIDiffingUpdate.insertedIndexPathsSet();
  v135[1] = v136;
  v911 = v135;
  uint64_t v137 = (uint64_t *)((char *)a9 + v132[10]);
  uint64_t *v137 = variable initialization expression of AIDiffingUpdate.insertedIndexPathsSet();
  v137[1] = v138;
  v925 = v137;
  uint64_t v139 = (uint64_t *)((char *)a9 + v132[11]);
  *uint64_t v139 = variable initialization expression of AIDiffingUpdate.insertedIndexPathsSet();
  v139[1] = v140;
  uint64_t v141 = v132[12];
  uint64_t v142 = a1;
  uint64_t v143 = (char **)((char *)a9 + v141);
  uint64_t v144 = (char *)variable initialization expression of Library.Context.playlistVariants();
  v920 = v143;
  *uint64_t v143 = v144;
  a9[1].Class isa = (Class)a7;
  a9[2].Class isa = a8;
  v941 = a9;
  if (!a1)
  {
    sub_100121440(a7);
    sub_100121638(a12);
    sub_100121638(v938);
    sub_100121638(a7);
    swift_bridgeObjectRelease();
LABEL_11:
    uint64_t result = swift_bridgeObjectRelease();
    LOBYTE(v941->isa) = 1;
    return result;
  }
  v956 = a12;
  v955 = a13;
  if (!v935)
  {
    sub_100121440(a7);
    sub_100121638(v956);
    sub_100121638(v938);
    sub_100121638(a7);
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_100121440(a7);
  uint64_t v145 = v958;
  uint64_t v146 = sub_1005351A0();
  uint64_t v147 = v938;
  if (v146 <= 0 || (v148 = v146, v883 = v142, uint64_t v149 = sub_1005351A0(), v149 < 1))
  {
    sub_100121638(v956);
    sub_100121638(v147);
    sub_100121638(a7);
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v868 = (void (**)(uint64_t, char *, uint64_t))v149;
  v857 = v148;
  v859 = a7;
  v865 = a8;
  uint64_t v150 = sub_100379284();
  Class isa = (void (*)(void))v951[2].isa;
  v962 = v150;
  v964 = v951 + 2;
  v963 = (void (*)(void, uint64_t, uint64_t))isa;
  isa(v131);
  uint64_t v152 = swift_allocObject();
  uint64_t v153 = v940;
  *(void *)(v152 + 16) = v145;
  *(void *)(v152 + 24) = v153;
  uint64_t v154 = swift_allocObject();
  *(void *)(v154 + 16) = v974;
  uint64_t v155 = swift_allocObject();
  *(void *)(v155 + 16) = sub_100385418;
  *(void *)(v155 + 24) = v154;
  swift_bridgeObjectRetain();
  uint64_t v156 = sub_100530900();
  LODWORD(v960) = sub_1005357E0();
  uint64_t v157 = swift_allocObject();
  *(unsigned char *)(v157 + 16) = 32;
  uint64_t v158 = swift_allocObject();
  *(unsigned char *)(v158 + 16) = 8;
  uint64_t v159 = swift_allocObject();
  *(void *)(v159 + 16) = sub_100385410;
  *(void *)(v159 + 24) = v152;
  uint64_t v160 = swift_allocObject();
  *(void *)(v160 + 16) = sub_100385460;
  *(void *)(v160 + 24) = v159;
  uint64_t v161 = swift_allocObject();
  *(void *)(v161 + 16) = sub_100385468;
  *(void *)(v161 + 24) = v160;
  uint64_t v162 = swift_allocObject();
  *(unsigned char *)(v162 + 16) = 32;
  uint64_t v163 = swift_allocObject();
  *(unsigned char *)(v163 + 16) = 8;
  uint64_t v164 = v156;
  uint64_t v165 = swift_allocObject();
  *(void *)(v165 + 16) = sub_100385424;
  *(void *)(v165 + 24) = v155;
  uint64_t v166 = swift_allocObject();
  *(void *)(v166 + 16) = sub_100386054;
  *(void *)(v166 + 24) = v165;
  v961 = sub_10000BB04(&qword_10066F3E8);
  uint64_t v167 = swift_allocObject();
  v934 = xmmword_10053DAB0;
  *(_OWORD *)(v167 + 16) = xmmword_10053DAB0;
  *(void *)(v167 + 32) = sub_10038543C;
  *(void *)(v167 + 40) = v157;
  *(void *)(v167 + 48) = sub_1003861E0;
  *(void *)(v167 + 56) = v158;
  *(void *)(v167 + 64) = sub_100385490;
  *(void *)(v167 + 72) = v161;
  *(void *)(v167 + 80) = sub_1003861E0;
  *(void *)(v167 + 88) = v162;
  *(void *)(v167 + 96) = sub_1003861E0;
  *(void *)(v167 + 104) = v163;
  *(void *)(v167 + 112) = sub_100385490;
  *(void *)(v167 + 120) = v166;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  BOOL v168 = os_log_type_enabled(v164, (os_log_type_t)v960);
  v975 = v85;
  if (v168)
  {
    uint64_t v169 = swift_slowAlloc();
    v980 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v169 = 514;
    *(unsigned char *)(v169 + 2) = *(unsigned char *)(v157 + 16);
    swift_release();
    *(unsigned char *)(v169 + 3) = *(unsigned char *)(v158 + 16);
    uint64_t v170 = swift_release();
    uint64_t v171 = (*(uint64_t (**)(uint64_t))(v161 + 16))(v170);
    *(void *)(v169 + 4) = sub_10037ECEC(v171, v172, (uint64_t *)&v980);
    swift_bridgeObjectRelease();
    swift_release();
    *(unsigned char *)(v169 + 12) = *(unsigned char *)(v162 + 16);
    swift_release();
    *(unsigned char *)(v169 + 13) = *(unsigned char *)(v163 + 16);
    uint64_t v173 = swift_release();
    uint64_t v174 = (*(uint64_t (**)(uint64_t))(v166 + 16))(v173);
    *(void *)(v169 + 14) = sub_10037ECEC(v174, v175, (uint64_t *)&v980);
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v164, (os_log_type_t)v960, "Building update for section with item type %s, visible index paths: %s", (uint8_t *)v169, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v176 = v951[1].isa;
    v177 = v131;
    uint64_t v178 = v975;
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    v176 = v951[1].isa;
    v177 = v131;
    uint64_t v178 = v85;
  }
  v960 = (void (**)(uint8_t **__return_ptr, uint64_t))v176;
  ((void (*)(char *, uint64_t))v176)(v177, v178);
  uint64_t v180 = v938;
  uint64_t v181 = v958;
  if (v938)
  {
    v182 = (void *)swift_allocObject();
    v183 = v940;
    v182[2] = v181;
    v182[3] = v183;
    uint64_t v184 = v936;
    v182[4] = v180;
    v182[5] = v184;
    v185 = sub_100385FD8;
  }
  else
  {
    v182 = (void *)swift_allocObject();
    v183 = v940;
    v182[2] = v181;
    v182[3] = v183;
    v185 = sub_1003854C4;
  }
  v186 = (void *)swift_allocObject();
  v186[2] = v181;
  v186[3] = v183;
  v186[4] = v185;
  v186[5] = v182;
  v888 = v186;
  sub_100121440(v180);
  uint64_t v187 = sub_100351CA0(0);
  v988 = sub_100350F8C(v187);
  v987 = &_swiftEmptySetSingleton;
  v980 = (uint8_t *)v883;
  __chkstk_darwin(v988);
  v845[-4] = v181;
  v845[-3] = v183;
  v845[-2] = &v987;
  uint64_t v188 = sub_100535200();
  uint64_t v189 = swift_getWitnessTable();
  uint64_t v191 = sub_1003619B4((void (*)(char *, char *))sub_100385504, (uint64_t)&v845[-6], v188, (uint64_t)&type metadata for String, (uint64_t)&type metadata for Never, v189, (uint64_t)&protocol witness table for Never, v190);
  v978[0] = v935;
  swift_getWitnessTable();
  uint64_t v192 = sub_100534FB0();
  v978[0] = v980;
  uint64_t v193 = __chkstk_darwin(v192);
  v845[-4] = v181;
  v845[-3] = v183;
  v845[-2] = &v988;
  __chkstk_darwin(v193);
  v845[-4] = v181;
  v845[-3] = v183;
  v845[-2] = sub_100385528;
  v845[-1] = v194;
  uint64_t v195 = sub_100536460();
  uint64_t v196 = swift_getWitnessTable();
  uint64_t v198 = sub_10037960C((void (*)(char *, char *))sub_100385534, (uint64_t)&v845[-6], v195, (char *)&type metadata for String, (uint64_t)&type metadata for Never, v196, (uint64_t)&protocol witness table for Never, v197);
  swift_bridgeObjectRelease();
  uint64_t v199 = v987[2];
  if (v199 != sub_10036D1DC(v191))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v258 = v977;
    uint64_t v201 = v975;
    v963(v977, v962, v975);
    uint64_t v259 = swift_allocObject();
    *(void *)(v259 + 16) = v191;
    uint64_t v260 = swift_allocObject();
    *(void *)(v260 + 16) = sub_1003861CC;
    *(void *)(v260 + 24) = v259;
    v261 = sub_100530900();
    os_log_type_t v262 = sub_1005357D0();
    uint64_t v263 = swift_allocObject();
    *(unsigned char *)(v263 + 16) = 34;
    uint64_t v264 = swift_allocObject();
    *(unsigned char *)(v264 + 16) = 8;
    uint64_t v265 = swift_allocObject();
    *(void *)(v265 + 16) = sub_1003855B0;
    *(void *)(v265 + 24) = v260;
    uint64_t v266 = swift_allocObject();
    *(void *)(v266 + 16) = sub_100386054;
    *(void *)(v266 + 24) = v265;
    uint64_t v267 = swift_allocObject();
    *(_OWORD *)(v267 + 16) = xmmword_10053D3F0;
    *(void *)(v267 + 32) = sub_1003861E0;
    *(void *)(v267 + 40) = v263;
    *(void *)(v267 + 48) = sub_1003861E0;
    *(void *)(v267 + 56) = v264;
    *(void *)(v267 + 64) = sub_100385490;
    *(void *)(v267 + 72) = v266;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v261, v262))
    {
      uint64_t v268 = swift_slowAlloc();
      v980 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v268 = 258;
      *(unsigned char *)(v268 + 2) = *(unsigned char *)(v263 + 16);
      swift_release();
      *(unsigned char *)(v268 + 3) = *(unsigned char *)(v264 + 16);
      uint64_t v269 = swift_release();
      uint64_t v270 = (*(uint64_t (**)(uint64_t))(v266 + 16))(v269);
      *(void *)(v268 + 4) = sub_10037ECEC(v270, v271, (uint64_t *)&v980);
      swift_bridgeObjectRelease();
      swift_release();
      os_log_type_t v272 = v262;
      v273 = "Found duplicate sections in old items, falling back to reload data. Sections: %{public}s";
LABEL_64:
      _os_log_impl((void *)&_mh_execute_header, v261, v272, v273, (uint8_t *)v268, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
LABEL_66:
      swift_release();
      sub_100121638(v956);
      sub_100121638(v938);
      sub_100121638(v859);

      ((void (*)(void (**)(uint64_t, uint64_t, uint64_t), uint64_t))v960)(v258, v201);
      LOBYTE(v941->isa) = 1;
      goto LABEL_228;
    }
LABEL_65:
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_66;
  }
  uint64_t v200 = sub_10036D1DC(v198);
  uint64_t v201 = v975;
  if ((void (**)(uint64_t, char *, uint64_t))v200 != v868)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v258 = v959;
    v963(v959, v962, v201);
    uint64_t v274 = swift_allocObject();
    *(void *)(v274 + 16) = v198;
    uint64_t v275 = swift_allocObject();
    *(void *)(v275 + 16) = sub_1003861CC;
    *(void *)(v275 + 24) = v274;
    v261 = sub_100530900();
    os_log_type_t v276 = sub_1005357D0();
    uint64_t v277 = swift_allocObject();
    *(unsigned char *)(v277 + 16) = 34;
    uint64_t v278 = swift_allocObject();
    *(unsigned char *)(v278 + 16) = 8;
    uint64_t v279 = swift_allocObject();
    *(void *)(v279 + 16) = sub_1003855B0;
    *(void *)(v279 + 24) = v275;
    uint64_t v280 = swift_allocObject();
    *(void *)(v280 + 16) = sub_100386054;
    *(void *)(v280 + 24) = v279;
    uint64_t v281 = swift_allocObject();
    *(_OWORD *)(v281 + 16) = xmmword_10053D3F0;
    *(void *)(v281 + 32) = sub_1003861E0;
    *(void *)(v281 + 40) = v277;
    *(void *)(v281 + 48) = sub_1003861E0;
    *(void *)(v281 + 56) = v278;
    *(void *)(v281 + 64) = sub_100385490;
    *(void *)(v281 + 72) = v280;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v261, v276))
    {
      uint64_t v268 = swift_slowAlloc();
      v978[0] = swift_slowAlloc();
      *(_WORD *)uint64_t v268 = 258;
      *(unsigned char *)(v268 + 2) = *(unsigned char *)(v277 + 16);
      swift_release();
      *(unsigned char *)(v268 + 3) = *(unsigned char *)(v278 + 16);
      v980 = (uint8_t *)(v268 + 4);
      swift_release();
      sub_100385490(&v980);
      swift_release();
      os_log_type_t v272 = v276;
      v273 = "Found duplicate sections in new items, falling back to reload data. Sections: %{public}s";
      goto LABEL_64;
    }
    goto LABEL_65;
  }
  v977 = 0;
  v978[0] = v191;
  v980 = (uint8_t *)v198;
  sub_10000BB04(&qword_10066F1B0);
  sub_100014CCC((unint64_t *)&qword_10066F1C8, &qword_10066F1B0);
  sub_100534B90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v202 = sub_100351C94(0);
  unint64_t v203 = sub_100352410(v202);
  swift_bridgeObjectRelease();
  v986 = v203;
  v985 = &_swiftEmptySetSingleton;
  v204 = v940;
  v848 = swift_getAssociatedConformanceWitness();
  uint64_t v205 = sub_100530700();
  swift_getTupleTypeMetadata2();
  sub_100535160();
  v984 = sub_100534AE0();
  sub_100535160();
  v983[1] = sub_100534AE0();
  uint64_t v206 = v974;
  sub_10036F2B0();
  uint64_t v207 = v206;
  swift_bridgeObjectRelease();
  uint64_t v208 = sub_10036B9FC(v207);
  v959 = (void (**)(uint64_t, uint64_t, uint64_t))v205;
  v864 = v208;
  v845[1] = v207;
  if (v208)
  {
    uint64_t v209 = 0;
    v867 = *(void *)(v947 + 16);
    unint64_t v210 = v207 + ((*(unsigned __int8 *)(v947 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v947 + 80));
    v861 = *(void *)(v947 + 72);
    v211 = (void (**)(char *, void, uint64_t, uint64_t))(v947 + 56);
    v863 = (unsigned int (**)(char *, uint64_t, uint64_t))(v947 + 48);
    v862 = (void (**)(uint64_t, char *, uint64_t))(v947 + 32);
    v868 = (void (**)(uint64_t, char *, uint64_t))(v947 + 16);
    v866 = (char *)(v947 + 8);
    v853 = v204 + 5;
    v847 = (void (**)(uint64_t))(v884 + 16);
    v852 = (void (**)(char *, uint64_t))(v877 + 8);
    v846 = (void (**)(uint64_t, char *))(v884 + 8);
    v850 = v204 + 4;
    v851 = (void (**)(char *, uint64_t))(v889 + 8);
    uint64_t v212 = v971;
    uint64_t v213 = v910;
    v214 = v948;
    v856 = (void (**)(void, void, void, void))(v947 + 56);
    ((void (*)(char *, unint64_t, uint64_t))v867)(v948, v210, v971);
    while (1)
    {
      if (__OFADD__(v209, 1)) {
        goto LABEL_315;
      }
      v860 = *v211;
      v860(v214, 0, 1, v212);
      if ((*v863)(v214, 1, v212) == 1) {
        goto LABEL_69;
      }
      v974 = v209 + 1;
      (*v862)(v213, v214, v212);
      if (sub_10052FA10() >= v939 && ((v953 & 1) != 0 || sub_10052FA10() <= (uint64_t)v890))
      {
        v215 = v903;
        ((void (*)(char *, uint64_t, uint64_t))v867)(v903, v213, v212);
        uint64_t v216 = v949;
        sub_100380508(v949, v215);
        v858 = *(void (**)(uint64_t, uint64_t))v866;
        v858(v216, v212);
        v978[0] = sub_10052FA10();
        sub_100534B10();
        uint64_t v217 = v981;
        sub_100385F5C((uint64_t)v980, v981);
        if (!v217)
        {
          uint64_t v218 = sub_10052FA10();
          sub_100535160();
          v980 = (uint8_t *)sub_1005306D0();
          v981 = v219;
          v978[0] = v218;
          sub_100534AF0();
          sub_100534B20();
          uint64_t v220 = sub_10052FA10();
          uint64_t v221 = sub_10052FA00();
          sub_10036F1E0(v221, 0, v220);
        }
        v978[0] = sub_10052FA10();
        sub_100534B10();
        uint64_t v222 = v981;
        sub_100385F5C((uint64_t)v980, v981);
        if (!v222)
        {
          uint64_t v223 = sub_10052FA10();
          sub_100535160();
          v980 = (uint8_t *)sub_1005306D0();
          v981 = v224;
          v978[0] = v223;
          sub_100534AF0();
          sub_100534B20();
        }
        if (__OFSUB__(sub_10052FA10(), v939)) {
          goto LABEL_323;
        }
        sub_100535220();
        v978[0] = sub_10052FA10();
        sub_100534B10();
        uint64_t v225 = v981;
        if (v981)
        {
          v855 = (void (*)(uint64_t, NSObject *))sub_1005362F0();
          swift_release();
          swift_release();
        }
        else
        {
          v855 = 0;
        }
        v983[0] = sub_10052FA10();
        v849 = (void (*)(uint8_t **, void))sub_100534AF0();
        v226 = (void (*)(char *, uint64_t))sub_100534B00();
        if (*(void *)(v227 + 8))
        {
          v854 = v226;
          v228 = v893;
          ((void (*)(uint64_t, NSObject *))v204[5].isa)(v958, v204);
          v979 = (unsigned char *)sub_10052FA00();
          uint64_t v229 = v899;
          v230 = (void (*)(void *, void))sub_100535670();
          uint64_t v231 = v902;
          v232 = v970;
          (*v847)(v902);
          v230(v978, 0);
          (*v852)(v228, v229);
          sub_1005306F0();
          (*v846)(v231, v232);
          v854((char *)&v980, 0);
        }
        else
        {
          v226((char *)&v980, 0);
        }
        v978[0] = sub_10052FA10();
        sub_100534B10();
        if (v981)
        {
          uint64_t v233 = sub_1005362F0();
          uint64_t v213 = v910;
          swift_release();
          swift_release();
          uint64_t v212 = v971;
          v204 = v940;
          v211 = (void (**)(char *, void, uint64_t, uint64_t))v856;
          if (v225 && v855 == (void (*)(uint64_t, NSObject *))v233)
          {
LABEL_294:
            v825 = v212;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v826 = v870;
            v827 = v975;
            v963(v870, v962, v975);
            v828 = sub_100530900();
            v829 = sub_1005357D0();
            v830 = sub_100351BF4(0);
            if (os_log_type_enabled(v828, v829))
            {
              v831 = (uint8_t *)swift_slowAlloc();
              v832 = v937;
              v833 = v831;
              v978[0] = 0;
              v983[0] = 0;
              *(_WORD *)v831 = 0;
              v980 = v831 + 2;
              sub_10036F140(v830, (uint64_t)&v980, (uint64_t)v978, (uint64_t)v983);
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v828, v829, "Found duplicate in old visible items, falling back to reload data.", v833, 2u);
              swift_slowDealloc();
              swift_release();
              sub_100121638(v956);
              sub_100121638(v938);
              sub_100121638(v859);

              ((void (*)(uint64_t, uint64_t))v960)(v826, v827);
              (*v851)(v957, v958);
              v858(v910, v825);
              (*(void (**)(char *, uint64_t))(v832 + 8))(v892, v918);
LABEL_308:
              LOBYTE(v941->isa) = 1;
              goto LABEL_227;
            }
            swift_release();
            swift_bridgeObjectRelease();
            sub_100121638(v956);
            sub_100121638(v938);
            sub_100121638(v859);

            ((void (*)(uint64_t, uint64_t))v960)(v826, v827);
            (*v851)(v957, v958);
            v835 = v910;
            v836 = v825;
LABEL_307:
            v858(v835, v836);
            (*(void (**)(char *, uint64_t))(v937 + 8))(v892, v918);
            goto LABEL_308;
          }
        }
        else
        {
          uint64_t v212 = v971;
          v204 = v940;
          v211 = (void (**)(char *, void, uint64_t, uint64_t))v856;
          if (!v225) {
            goto LABEL_294;
          }
        }
        v234 = v957;
        uint64_t v235 = ((uint64_t (*)(uint64_t, NSObject *))v204[4].isa)(v958, v204);
        if (*(void *)(v988 + 16) && (sub_100367E3C(v235, v236), (v237 & 1) != 0))
        {
          swift_bridgeObjectRelease();
          uint64_t v238 = v958;
          sub_100535220();
          uint64_t v239 = sub_10052FA00();
          uint64_t v240 = v213;
          v241 = v893;
          v855 = (void (*)(uint64_t, NSObject *))v204[5].isa;
          v855(v238, v204);
          uint64_t v242 = v899;
          uint64_t v243 = sub_100535570();
          v244 = *v852;
          (*v852)(v241, v242);
          if (v239 < v243)
          {
            v854 = v244;
            v978[0] = sub_10052FA10();
            sub_100534B10();
            uint64_t v245 = v981;
            if (v981)
            {
              v845[0] = sub_1005362F0();
              swift_release();
              swift_release();
            }
            else
            {
              v845[0] = 0;
            }
            v983[0] = sub_10052FA10();
            v246 = (void (*)(void, void))sub_100534B00();
            if (*(void *)(v247 + 8))
            {
              v248 = v893;
              v849 = (void (*)(uint8_t **, void))v246;
              v855(v958, v204);
              v979 = (unsigned char *)sub_10052FA00();
              uint64_t v249 = v899;
              v250 = (void (*)(void *, void))sub_100535670();
              v251 = *v847;
              uint64_t v252 = v902;
              v855 = (void (*)(uint64_t, NSObject *))v245;
              v253 = v970;
              v251(v902);
              v250(v978, 0);
              v854(v248, v249);
              sub_1005306F0();
              v254 = v253;
              uint64_t v245 = (uint64_t)v855;
              (*v846)(v252, v254);
              v849(&v980, 0);
            }
            else
            {
              v246(&v980, 0);
            }
            v978[0] = sub_10052FA10();
            sub_100534B10();
            if (v981)
            {
              uint64_t v255 = sub_1005362F0();
              swift_release();
              swift_release();
              uint64_t v240 = v910;
              if (v245 && v845[0] == v255)
              {
LABEL_303:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v837 = v869;
                v838 = v975;
                v963(v869, v962, v975);
                v839 = sub_100530900();
                v840 = sub_1005357D0();
                v841 = sub_100351BF4(0);
                if (os_log_type_enabled(v839, v840))
                {
                  v842 = (uint8_t *)swift_slowAlloc();
                  v978[0] = 0;
                  v983[0] = 0;
                  *(_WORD *)v842 = 0;
                  v980 = v842 + 2;
                  sub_10036F140(v841, (uint64_t)&v980, (uint64_t)v978, (uint64_t)v983);
                  swift_bridgeObjectRelease();
                  _os_log_impl((void *)&_mh_execute_header, v839, v840, "Found duplicate in new visible items, falling back to reload data.", v842, 2u);
                  swift_slowDealloc();
                  swift_release();
                }
                else
                {
                  swift_release();
                  swift_bridgeObjectRelease();
                }
                sub_100121638(v956);
                sub_100121638(v938);
                sub_100121638(v859);

                ((void (*)(void (**)(char *, char *, uint64_t), uint64_t))v960)(v837, v838);
                v843 = *v851;
                v844 = v958;
                (*v851)(v901, v958);
                v843(v957, v844);
                v835 = v910;
                v836 = v971;
                goto LABEL_307;
              }
            }
            else
            {
              uint64_t v240 = v910;
              if (!v245) {
                goto LABEL_303;
              }
            }
          }
          v256 = *v851;
          uint64_t v257 = v958;
          (*v851)(v901, v958);
          v256(v957, v257);
          uint64_t v212 = v971;
          v858(v240, v971);
          uint64_t v213 = v240;
          v214 = v948;
          v211 = (void (**)(char *, void, uint64_t, uint64_t))v856;
        }
        else
        {
          swift_bridgeObjectRelease();
          (*v851)(v234, v958);
          v858(v213, v212);
          v214 = v948;
        }
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))v866)(v213, v212);
      }
      ++v209;
      v210 += v861;
      if (v974 == v864) {
        break;
      }
      ((void (*)(char *, unint64_t, uint64_t))v867)(v214, v210, v212);
    }
    v860(v214, 1, 1, v212);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v947 + 56))(v948, 1, 1, v971);
  }
LABEL_69:
  swift_bridgeObjectRelease();
  swift_getTupleTypeMetadata2();
  sub_100535160();
  uint64_t v282 = sub_100534AE0();
  uint64_t v283 = *(void *)(v984 + 64);
  v902 = v984 + 64;
  v983[0] = v282;
  uint64_t v284 = 1 << *(unsigned char *)(v984 + 32);
  uint64_t v285 = -1;
  if (v284 < 64) {
    uint64_t v285 = ~(-1 << v284);
  }
  unint64_t v286 = v285 & v283;
  *(void *)&v910 = (unint64_t)(v284 + 63) >> 6;
  v903 = (char *)(v909 + 56);
  v948 = (char *)v984;
  swift_bridgeObjectRetain();
  uint64_t v287 = 0;
  uint64_t v288 = v975;
  uint64_t v289 = v937;
  uint64_t v290 = v972;
  while (1)
  {
    if (v286)
    {
      unint64_t v291 = __clz(__rbit64(v286));
      v286 &= v286 - 1;
      v974 = v287;
      unint64_t v292 = v291 | (v287 << 6);
      goto LABEL_87;
    }
    uint64_t v293 = v287 + 1;
    uint64_t v294 = v956;
    if (__OFADD__(v287, 1))
    {
      __break(1u);
LABEL_310:
      __break(1u);
LABEL_311:
      __break(1u);
LABEL_312:
      __break(1u);
LABEL_313:
      __break(1u);
      goto LABEL_314;
    }
    uint64_t v295 = v288;
    v296 = v977;
    if (v293 >= (uint64_t)v910) {
      goto LABEL_89;
    }
    unint64_t v297 = *(void *)(v902 + 8 * v293);
    uint64_t v298 = v287 + 1;
    if (!v297)
    {
      uint64_t v298 = v287 + 2;
      if (v287 + 2 >= (uint64_t)v910) {
        goto LABEL_89;
      }
      unint64_t v297 = *(void *)(v902 + 8 * v298);
      if (!v297) {
        break;
      }
    }
LABEL_86:
    unint64_t v286 = (v297 - 1) & v297;
    v974 = v298;
    unint64_t v292 = __clz(__rbit64(v297)) + (v298 << 6);
LABEL_87:
    uint64_t v300 = *(void *)(*((void *)v948 + 6) + 8 * v292);
    v301 = (uint64_t *)(*((void *)v948 + 7) + 16 * v292);
    uint64_t v303 = *v301;
    uint64_t v302 = v301[1];
    v978[0] = v300;
    swift_retain();
    swift_retain();
    uint64_t v304 = sub_100534B10();
    uint64_t v305 = v981;
    if (v981)
    {
      v953 = (uint64_t)v845;
      uint64_t v306 = (uint64_t)v980;
      v978[0] = v303;
      v978[1] = v302;
      __chkstk_darwin(v304);
      v307 = v940;
      v845[-12] = v958;
      v845[-11] = v307;
      v308 = v888;
      v845[-10] = sub_1003854CC;
      v845[-9] = v308;
      uint64_t v309 = v955;
      v845[-8] = v956;
      v845[-7] = v309;
      v845[-6] = v306;
      v845[-5] = v305;
      v845[-4] = &v986;
      v845[-3] = v300;
      v845[-2] = v941;
      v957 = (char *)v286;
      swift_getWitnessTable();
      uint64_t v288 = v975;
      sub_100534B80();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))v903)(v290, 0, 1, v973);
      v980 = (uint8_t *)v300;
      unint64_t v286 = (unint64_t)v957;
      sub_100534AF0();
      sub_100534B20();
      swift_release();
      swift_release();
    }
    swift_release();
    swift_release();
    uint64_t v289 = v937;
    uint64_t v287 = v974;
  }
  uint64_t v299 = v287 + 3;
  if (v287 + 3 < (uint64_t)v910)
  {
    unint64_t v297 = *(void *)(v902 + 8 * v299);
    if (!v297)
    {
      while (1)
      {
        uint64_t v298 = v299 + 1;
        if (__OFADD__(v299, 1)) {
          break;
        }
        if (v298 >= (uint64_t)v910) {
          goto LABEL_89;
        }
        unint64_t v297 = *(void *)(v902 + 8 * v298);
        ++v299;
        if (v297) {
          goto LABEL_86;
        }
      }
LABEL_314:
      __break(1u);
LABEL_315:
      __break(1u);
LABEL_316:
      __break(1u);
LABEL_317:
      __break(1u);
LABEL_318:
      __break(1u);
LABEL_319:
      __break(1u);
LABEL_320:
      __break(1u);
LABEL_321:
      __break(1u);
LABEL_322:
      __break(1u);
LABEL_323:
      __break(1u);
LABEL_324:
      __break(1u);
LABEL_325:
      __break(1u);
LABEL_326:
      __break(1u);
LABEL_327:
      __break(1u);
LABEL_328:
      __break(1u);
LABEL_329:
      __break(1u);
LABEL_330:
      __break(1u);
LABEL_331:
      __break(1u);
      goto LABEL_332;
    }
    uint64_t v298 = v287 + 3;
    goto LABEL_86;
  }
LABEL_89:
  swift_release();
  v310 = *(void (**)(os_log_t, char *, uint64_t))(v289 + 16);
  os_log_t v311 = v881;
  v948 = (char *)(v289 + 16);
  *(void *)&v910 = v310;
  v310(v881, v892, v918);
  uint64_t v312 = sub_100014CCC(&qword_10066F3F0, &qword_10066F3E0);
  sub_100535560();
  uint64_t v313 = v882;
  *(Class *)((char *)&v311->isa + *(int *)(v882 + 36)) = (Class)v980;
  v314 = v950;
  sub_100013A18((uint64_t)v311, (uint64_t)v950, &qword_10066F3D8);
  v315 = (uint8_t **)((char *)v314 + *(int *)(v313 + 36));
  v316 = *v315;
  sub_1005355A0();
  if (v316 != v980)
  {
    v903 = (char *)(v937 + 8);
    v890 = v951 + 1;
    v870 = xmmword_10053D3F0;
    uint64_t v538 = v918;
    v902 = v312;
    v901 = (char *)v315;
    do
    {
      v542 = (void (*)(uint8_t **, void))sub_100535670();
      v544 = (void (**)(uint64_t, uint64_t, uint64_t))*v543;
      uint64_t v545 = (uint64_t)v543[2];
      uint64_t v546 = (uint64_t)v543[3];
      int v547 = *((unsigned __int8 *)v543 + 32);
      int v548 = *((unsigned __int8 *)v543 + 33);
      v957 = v543[1];
      v953 = v545;
      v974 = v546;
      MPCPlaybackEngine.Configuration.options.getter();
      v542(&v980, 0);
      v549 = v952;
      ((void (*)(char *, NSObject *, uint64_t))v910)(v952, v314, v538);
      sub_1005355B0();
      (*(void (**)(char *, uint64_t))v903)(v549, v538);
      uint64_t v550 = (uint64_t)v544 + v939;
      BOOL v551 = __OFADD__(v544, v939);
      LODWORD(v972) = v547;
      v959 = v544;
      if (v548)
      {
        if (v551) {
          goto LABEL_316;
        }
        if ((v547 & 1) == 0)
        {
          LODWORD(v882) = v548;
          v977 = v296;
          v552 = (void (**)(char *, char *, uint64_t))(v974 + v939);
          if (__OFADD__(v974, v939)) {
            goto LABEL_321;
          }
          v963(v944, v962, v295);
          uint64_t v553 = swift_allocObject();
          *(void *)(v553 + 16) = v550;
          uint64_t v554 = swift_allocObject();
          v869 = v552;
          *(void *)(v554 + 16) = v552;
          v881 = (os_log_t)sub_100530900();
          int v555 = sub_1005357E0();
          uint64_t v556 = swift_allocObject();
          *(unsigned char *)(v556 + 16) = 2;
          uint64_t v557 = swift_allocObject();
          *(unsigned char *)(v557 + 16) = 8;
          uint64_t v558 = swift_allocObject();
          *(void *)(v558 + 16) = j___s9MusicCore7LibraryO4MenuV7RequestV16filteringOptionsSo07MPMediac9FilteringG0Vvg;
          *(void *)(v558 + 24) = v553;
          uint64_t v559 = swift_allocObject();
          *(void *)(v559 + 16) = sub_100386060;
          *(void *)(v559 + 24) = v558;
          uint64_t v560 = swift_allocObject();
          *(unsigned char *)(v560 + 16) = 2;
          uint64_t v561 = swift_allocObject();
          *(unsigned char *)(v561 + 16) = 8;
          uint64_t v562 = swift_allocObject();
          *(void *)(v562 + 16) = j___s9MusicCore7LibraryO4MenuV7RequestV16filteringOptionsSo07MPMediac9FilteringG0Vvg;
          *(void *)(v562 + 24) = v554;
          uint64_t v563 = swift_allocObject();
          *(void *)(v563 + 16) = sub_100386060;
          *(void *)(v563 + 24) = v562;
          uint64_t v564 = swift_allocObject();
          *(_OWORD *)(v564 + 16) = v934;
          *(void *)(v564 + 32) = sub_1003861E0;
          *(void *)(v564 + 40) = v556;
          *(void *)(v564 + 48) = sub_1003861E0;
          *(void *)(v564 + 56) = v557;
          *(void *)(v564 + 64) = sub_10038573C;
          *(void *)(v564 + 72) = v559;
          *(void *)(v564 + 80) = sub_1003861E0;
          *(void *)(v564 + 88) = v560;
          *(void *)(v564 + 96) = sub_1003861E0;
          *(void *)(v564 + 104) = v561;
          *(void *)(v564 + 112) = sub_10038573C;
          *(void *)(v564 + 120) = v563;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          LODWORD(v868) = v555;
          if (os_log_type_enabled(v881, (os_log_type_t)v555))
          {
            uint64_t v565 = swift_slowAlloc();
            *(_WORD *)uint64_t v565 = 512;
            *(unsigned char *)(v565 + 2) = *(unsigned char *)(v556 + 16);
            if (v977) {
              goto LABEL_336;
            }
            uint64_t v566 = v565;
            swift_release();
            *(unsigned char *)(v566 + 3) = *(unsigned char *)(v557 + 16);
            uint64_t v567 = swift_release();
            (*(void (**)(uint8_t **__return_ptr, uint64_t))(v559 + 16))(&v980, v567);
            *(void *)(v566 + 4) = v980;
            swift_release();
            *(unsigned char *)(v566 + 12) = *(unsigned char *)(v560 + 16);
            v296 = 0;
            swift_release();
            *(unsigned char *)(v566 + 13) = *(unsigned char *)(v561 + 16);
            v540 = (uint8_t **)v901;
            uint64_t v568 = swift_release();
            (*(void (**)(uint8_t **__return_ptr, uint64_t))(v563 + 16))(&v980, v568);
            *(void *)(v566 + 14) = v980;
            swift_release();
            os_log_t v569 = v881;
            _os_log_impl((void *)&_mh_execute_header, v881, (os_log_type_t)v868, "[Remove] Moving section from %{public}ld to %{public}ld", (uint8_t *)v566, 0x16u);
            swift_slowDealloc();
            uint64_t v294 = v956;
          }
          else
          {
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v294 = v956;
            v296 = v977;
            v540 = (uint8_t **)v901;
            os_log_t v569 = v881;
          }

          uint64_t v295 = v975;
          ((void (*)(void, uint64_t))v960)(v944, v975);
          uint64_t v612 = v550;
          uint64_t v613 = (uint64_t)v869;
LABEL_223:
          sub_10036EEAC(v612, v613);
          v314 = v950;
          goto LABEL_194;
        }
        v963(v946, v962, v295);
        uint64_t v588 = swift_allocObject();
        Swift::Int v589 = v550;
        *(void *)(v588 + 16) = v550;
        v590 = sub_100530900();
        os_log_type_t v591 = sub_1005357E0();
        uint64_t v592 = swift_allocObject();
        *(unsigned char *)(v592 + 16) = 2;
        uint64_t v593 = swift_allocObject();
        *(unsigned char *)(v593 + 16) = 8;
        uint64_t v594 = swift_allocObject();
        *(void *)(v594 + 16) = j___s9MusicCore7LibraryO4MenuV7RequestV16filteringOptionsSo07MPMediac9FilteringG0Vvg;
        *(void *)(v594 + 24) = v588;
        uint64_t v595 = swift_allocObject();
        *(void *)(v595 + 16) = sub_10038570C;
        *(void *)(v595 + 24) = v594;
        uint64_t v596 = swift_allocObject();
        *(_OWORD *)(v596 + 16) = v870;
        *(void *)(v596 + 32) = sub_1003861E0;
        *(void *)(v596 + 40) = v592;
        *(void *)(v596 + 48) = sub_1003861E0;
        *(void *)(v596 + 56) = v593;
        *(void *)(v596 + 64) = sub_10038573C;
        *(void *)(v596 + 72) = v595;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v590, v591))
        {
          uint64_t v597 = swift_slowAlloc();
          *(_WORD *)uint64_t v597 = 256;
          *(unsigned char *)(v597 + 2) = *(unsigned char *)(v592 + 16);
          if (v296) {
            goto LABEL_333;
          }
          uint64_t v598 = v597;
          swift_release();
          *(unsigned char *)(v598 + 3) = *(unsigned char *)(v593 + 16);
          uint64_t v599 = swift_release();
          (*(void (**)(uint8_t **__return_ptr, uint64_t))(v595 + 16))(&v980, v599);
          *(void *)(v598 + 4) = v980;
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v590, v591, "Deleting section %{public}ld", (uint8_t *)v598, 0xCu);
          swift_slowDealloc();
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
        }

        uint64_t v295 = v975;
        ((void (*)(void (**)(char *), uint64_t))v960)(v946, v975);
        Swift::Int v539 = v589;
      }
      else
      {
        if (v551) {
          goto LABEL_317;
        }
        if ((v547 & 1) == 0)
        {
          LODWORD(v882) = v548;
          v977 = v296;
          v570 = (void (**)(char *, char *, uint64_t))(v974 + v939);
          if (__OFADD__(v974, v939)) {
            goto LABEL_322;
          }
          v963(v927, v962, v295);
          uint64_t v571 = swift_allocObject();
          v869 = v570;
          *(void *)(v571 + 16) = v570;
          uint64_t v572 = swift_allocObject();
          *(void *)(v572 + 16) = v550;
          v881 = (os_log_t)sub_100530900();
          int v573 = sub_1005357E0();
          uint64_t v574 = swift_allocObject();
          *(unsigned char *)(v574 + 16) = 2;
          uint64_t v575 = swift_allocObject();
          *(unsigned char *)(v575 + 16) = 8;
          uint64_t v576 = swift_allocObject();
          *(void *)(v576 + 16) = j___s9MusicCore7LibraryO4MenuV7RequestV16filteringOptionsSo07MPMediac9FilteringG0Vvg;
          *(void *)(v576 + 24) = v571;
          uint64_t v577 = swift_allocObject();
          *(void *)(v577 + 16) = sub_100386060;
          *(void *)(v577 + 24) = v576;
          uint64_t v578 = swift_allocObject();
          *(unsigned char *)(v578 + 16) = 2;
          uint64_t v579 = swift_allocObject();
          *(unsigned char *)(v579 + 16) = 8;
          uint64_t v580 = swift_allocObject();
          *(void *)(v580 + 16) = j___s9MusicCore7LibraryO4MenuV7RequestV16filteringOptionsSo07MPMediac9FilteringG0Vvg;
          *(void *)(v580 + 24) = v572;
          uint64_t v581 = swift_allocObject();
          *(void *)(v581 + 16) = sub_100386060;
          *(void *)(v581 + 24) = v580;
          uint64_t v582 = swift_allocObject();
          *(_OWORD *)(v582 + 16) = v934;
          *(void *)(v582 + 32) = sub_1003861E0;
          *(void *)(v582 + 40) = v574;
          *(void *)(v582 + 48) = sub_1003861E0;
          *(void *)(v582 + 56) = v575;
          *(void *)(v582 + 64) = sub_10038573C;
          *(void *)(v582 + 72) = v577;
          *(void *)(v582 + 80) = sub_1003861E0;
          *(void *)(v582 + 88) = v578;
          *(void *)(v582 + 96) = sub_1003861E0;
          *(void *)(v582 + 104) = v579;
          *(void *)(v582 + 112) = sub_10038573C;
          *(void *)(v582 + 120) = v581;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          LODWORD(v868) = v573;
          if (os_log_type_enabled(v881, (os_log_type_t)v573))
          {
            uint64_t v583 = swift_slowAlloc();
            *(_WORD *)uint64_t v583 = 512;
            *(unsigned char *)(v583 + 2) = *(unsigned char *)(v574 + 16);
            v296 = v977;
            if (v977) {
              goto LABEL_333;
            }
            uint64_t v584 = v583;
            swift_release();
            *(unsigned char *)(v584 + 3) = *(unsigned char *)(v575 + 16);
            uint64_t v585 = swift_release();
            (*(void (**)(uint8_t **__return_ptr, uint64_t))(v577 + 16))(&v980, v585);
            *(void *)(v584 + 4) = v980;
            swift_release();
            *(unsigned char *)(v584 + 12) = *(unsigned char *)(v578 + 16);
            swift_release();
            *(unsigned char *)(v584 + 13) = *(unsigned char *)(v579 + 16);
            v540 = (uint8_t **)v901;
            uint64_t v586 = swift_release();
            (*(void (**)(uint8_t **__return_ptr, uint64_t))(v581 + 16))(&v980, v586);
            *(void *)(v584 + 14) = v980;
            swift_release();
            os_log_t v587 = v881;
            _os_log_impl((void *)&_mh_execute_header, v881, (os_log_type_t)v868, "[Insert] Moving section from %{public}ld to %{public}ld", (uint8_t *)v584, 0x16u);
            swift_slowDealloc();
            uint64_t v294 = v956;
          }
          else
          {
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v294 = v956;
            v296 = v977;
            v540 = (uint8_t **)v901;
            os_log_t v587 = v881;
          }

          uint64_t v295 = v975;
          ((void (*)(void, uint64_t))v960)(v927, v975);
          uint64_t v612 = (uint64_t)v869;
          uint64_t v613 = v550;
          goto LABEL_223;
        }
        v963(v945, v962, v295);
        uint64_t v600 = swift_allocObject();
        Swift::Int v601 = v550;
        *(void *)(v600 + 16) = v550;
        v602 = sub_100530900();
        os_log_type_t v603 = sub_1005357E0();
        uint64_t v604 = swift_allocObject();
        *(unsigned char *)(v604 + 16) = 2;
        uint64_t v605 = swift_allocObject();
        *(unsigned char *)(v605 + 16) = 8;
        uint64_t v606 = swift_allocObject();
        *(void *)(v606 + 16) = j___s9MusicCore7LibraryO4MenuV7RequestV16filteringOptionsSo07MPMediac9FilteringG0Vvg;
        *(void *)(v606 + 24) = v600;
        uint64_t v607 = swift_allocObject();
        *(void *)(v607 + 16) = sub_100386060;
        *(void *)(v607 + 24) = v606;
        uint64_t v608 = swift_allocObject();
        *(_OWORD *)(v608 + 16) = v870;
        *(void *)(v608 + 32) = sub_1003861E0;
        *(void *)(v608 + 40) = v604;
        *(void *)(v608 + 48) = sub_1003861E0;
        *(void *)(v608 + 56) = v605;
        *(void *)(v608 + 64) = sub_10038573C;
        *(void *)(v608 + 72) = v607;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v602, v603))
        {
          uint64_t v609 = swift_slowAlloc();
          *(_WORD *)uint64_t v609 = 256;
          *(unsigned char *)(v609 + 2) = *(unsigned char *)(v604 + 16);
          if (v296) {
            goto LABEL_333;
          }
          uint64_t v610 = v609;
          swift_release();
          *(unsigned char *)(v610 + 3) = *(unsigned char *)(v605 + 16);
          uint64_t v611 = swift_release();
          (*(void (**)(uint8_t **__return_ptr, uint64_t))(v607 + 16))(&v980, v611);
          *(void *)(v610 + 4) = v980;
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v602, v603, "Inserting section %{public}ld", (uint8_t *)v610, 0xCu);
          swift_slowDealloc();
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
        }

        uint64_t v295 = v975;
        ((void (*)(void, uint64_t))v960)(v945, v975);
        Swift::Int v539 = v601;
      }
      sub_10052F930(v539);
      uint64_t v294 = v956;
      v540 = (uint8_t **)v901;
LABEL_194:
      sub_100385740();
      v541 = *v540;
      uint64_t v538 = v918;
      sub_1005355A0();
    }
    while (v541 != v980);
  }
  sub_100385838((uint64_t)v314);
  uint64_t v317 = swift_allocObject();
  uint64_t v318 = sub_100351C94(0);
  unint64_t v319 = sub_100352410(v318);
  swift_bridgeObjectRelease();
  v862 = (void (**)(uint64_t, char *, uint64_t))v317;
  *(void *)(v317 + 16) = v319;
  v903 = (char *)(v317 + 16);
  uint64_t v320 = *(void *)(v983[0] + 64);
  v863 = (unsigned int (**)(char *, uint64_t, uint64_t))(v983[0] + 64);
  uint64_t v321 = 1 << *(unsigned char *)(v983[0] + 32);
  uint64_t v322 = -1;
  if (v321 < 64) {
    uint64_t v322 = ~(-1 << v321);
  }
  unint64_t v323 = v322 & v320;
  v324 = TupleTypeMetadata2;
  *(void *)&v870 = TupleTypeMetadata2 - 8;
  v957 = (char *)(v909 + 16);
  v878 += 4;
  v869 = (void (**)(char *, char *, uint64_t))(v909 + 32);
  v881 = v940 + 4;
  v868 = (void (**)(uint64_t, char *, uint64_t))(v879 + 4);
  v946 = (void (**)(char *))(v880 + 2);
  v953 = v909 + 8;
  v945 = (void (**)(uint8_t **__return_ptr, uint64_t))(v880 + 4);
  v950 = v951 + 1;
  v944 = (void (**)(uint8_t **__return_ptr, uint64_t))(v884 + 8);
  v959 = (void (**)(uint64_t, uint64_t, uint64_t))(v947 + 16);
  v926 = (void *)(v947 + 32);
  v927 = (void (**)(char *, uint64_t))(v947 + 8);
  ++v879;
  v880 = (void (**)(char *, uint64_t))(v889 + 8);
  v864 = (unint64_t)(v321 + 63) >> 6;
  v861 = v864 - 1;
  v867 = v983[0];
  swift_bridgeObjectRetain();
  uint64_t v325 = 0;
  v866 = (char *)&type metadata for Any + 8;
  v910 = xmmword_10053D3F0;
  uint64_t v326 = v968;
  while (2)
  {
    v327 = v908;
    if (v323)
    {
      unint64_t v328 = __clz(__rbit64(v323));
      uint64_t v329 = (v323 - 1) & v323;
      v882 = v325;
      unint64_t v330 = v328 | (v325 << 6);
      goto LABEL_96;
    }
    int64_t v333 = v325 + 1;
    if (__OFADD__(v325, 1)) {
      goto LABEL_324;
    }
    if (v333 >= v864)
    {
      v882 = v325;
      goto LABEL_102;
    }
    unint64_t v334 = (unint64_t)v863[v333];
    if (!v334)
    {
      uint64_t v530 = v325 + 2;
      if (v325 + 2 >= v864)
      {
        v884 = 0;
        uint64_t v332 = 1;
LABEL_178:
        v882 = v333;
        goto LABEL_103;
      }
      unint64_t v334 = (unint64_t)v863[v530];
      if (v334)
      {
        int64_t v333 = v325 + 2;
        goto LABEL_100;
      }
      int64_t v531 = v325 + 3;
      if (v531 < v864)
      {
        unint64_t v334 = (unint64_t)v863[v531];
        if (v334)
        {
          int64_t v333 = v531;
          goto LABEL_100;
        }
        while (1)
        {
          int64_t v333 = v531 + 1;
          if (__OFADD__(v531, 1)) {
            goto LABEL_330;
          }
          if (v333 >= v864) {
            break;
          }
          unint64_t v334 = (unint64_t)v863[v333];
          ++v531;
          if (v334) {
            goto LABEL_100;
          }
        }
        v884 = 0;
        uint64_t v332 = 1;
        int64_t v333 = v861;
        goto LABEL_178;
      }
      v882 = v530;
LABEL_102:
      v884 = 0;
      uint64_t v332 = 1;
      goto LABEL_103;
    }
LABEL_100:
    uint64_t v329 = (v334 - 1) & v334;
    unint64_t v330 = __clz(__rbit64(v334)) + (v333 << 6);
    v882 = v333;
LABEL_96:
    v884 = v329;
    uint64_t v331 = *(void *)(v867 + 56);
    *(void *)v908 = *(void *)(*(void *)(v867 + 48) + 8 * v330);
    (*(void (**)(char *, unint64_t, uint64_t))(v909 + 16))(&v327[*((int *)v324 + 12)], v331 + *(void *)(v909 + 72) * v330, v973);
    uint64_t v332 = 0;
LABEL_103:
    uint64_t v335 = *((void *)v324 - 1);
    (*(void (**)(char *, uint64_t, uint64_t, char *))(v335 + 56))(v327, v332, 1, v324);
    v336 = v905;
    (*v878)((char *)v905, v327, v906);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, char *))(v335 + 48))(v336, 1, v324) == 1)
    {
      swift_release();
      v615 = 0;
      v922 = (uint64_t)&v940[5];
      v616 = (char *)v940[4].isa;
      v617 = (char **)(v877 + 8);
      v923 = (char *)(v889 + 16);
      v924 = (char *)(v889 + 32);
      uint64_t v618 = v857 & ~(v857 >> 63);
      v921 = xmmword_10054DC70;
      TupleTypeMetadata2 = (char *)&type metadata for Any + 8;
      uint64_t v619 = v937;
      v920 = (char **)(v877 + 8);
      v913 = v616;
      v912 = v618;
      while (1)
      {
        if (v615 == (char *)v618) {
          goto LABEL_326;
        }
        uint64_t v621 = v958;
        sub_100535220();
        uint64_t v622 = ((uint64_t (*)(uint64_t, NSObject *))v616)(v621, v940);
        unint64_t v624 = v988;
        if (*(void *)(v988 + 16))
        {
          uint64_t v625 = sub_100367E3C(v622, v623);
          if (v626) {
            break;
          }
        }
        swift_bridgeObjectRelease();
        (*v880)(v898, v958);
        uint64_t v620 = v938;
LABEL_231:
        if (++v615 == (char *)v857)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          sub_100121638(v294);
          sub_100121638(v620);
          sub_100121638(v859);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v619 + 8))(v892, v918);
          goto LABEL_226;
        }
      }
      uint64_t v627 = *(void *)(*(void *)(v624 + 56) + 8 * v625);
      swift_bridgeObjectRelease();
      v628 = v940;
      v629 = (void (*)(uint64_t, NSObject *))v940[5].isa;
      uint64_t v630 = v958;
      v629(v958, v940);
      v976 = (uint64_t *)v627;
      sub_100535220();
      v631 = v893;
      v629(v630, v628);
      uint64_t v632 = v899;
      uint64_t v633 = sub_100535570();
      v634 = *v617;
      ((void (*)(char *, uint64_t))*v617)(v631, v632);
      uint64_t v635 = sub_100535570();
      v968 = v633;
      uint64_t v636 = v635 - v633;
      if (__OFSUB__(v635, v633)) {
        goto LABEL_327;
      }
      v637 = v898;
      uint64_t v638 = v975;
      if (v636 < 0)
      {
        BOOL v639 = __OFSUB__(0, v636);
        uint64_t v636 = v633 - v635;
        if (v639) {
          goto LABEL_331;
        }
      }
      v930 = v635;
      v640 = v903;
      swift_beginAccess();
      uint64_t v641 = *(void *)v640;
      if (*(void *)(v641 + 16) && (unint64_t v642 = sub_100367FB4((uint64_t)v976), (v643 & 1) != 0)) {
        uint64_t v644 = *(void *)(*(void *)(v641 + 56) + 8 * v642);
      }
      else {
        uint64_t v644 = 0;
      }
      v928 = (void (*)(char *, uint64_t))v634;
      v977 = v296;
      swift_endAccess();
      v973 = v636 + v644;
      v974 = v636;
      if (__OFADD__(v636, v644)) {
        goto LABEL_328;
      }
      v967 = sub_100535570();
      v963(v887, v962, v638);
      uint64_t WitnessTable = (void *)swift_allocObject();
      v931 = v615;
      WitnessTable[2] = v615;
      uint64_t v645 = v889;
      v646 = *(void (**)(char *, char *, uint64_t))(v889 + 16);
      v647 = v874;
      uint64_t v648 = v958;
      v646(v874, v637, v958);
      uint64_t v649 = *(unsigned __int8 *)(v645 + 80);
      uint64_t v650 = (v649 + 32) & ~v649;
      v651 = (char *)(v650 + v872);
      v652 = (v649 | 7);
      uint64_t v653 = swift_allocObject();
      v970 = (char *)v653;
      v654 = v940;
      *(void *)(v653 + 16) = v648;
      *(void *)(v653 + 24) = v654;
      v655 = *(void (**)(uint64_t, char *, uint64_t))(v645 + 32);
      v655(v653 + v650, v647, v648);
      v972 = swift_allocObject();
      *(void *)(v972 + 16) = v976;
      v917 = (char *)v646;
      v646(v647, v885, v648);
      v916 = v651;
      v915 = v652;
      uint64_t v656 = swift_allocObject();
      *(void *)(v656 + 16) = v648;
      *(void *)(v656 + 24) = v654;
      v919 = (char *)v650;
      v914 = (uint64_t)v655;
      v655(v656 + v650, v647, v648);
      uint64_t v657 = swift_allocObject();
      *(void *)(v657 + 16) = v974;
      uint64_t v658 = swift_allocObject();
      *(void *)(v658 + 16) = v973;
      uint64_t v659 = swift_allocObject();
      uint64_t v660 = (uint64_t)v976;
      *(void *)(v659 + 16) = v862;
      *(void *)(v659 + 24) = v660;
      swift_retain();
      v941 = (os_log_t)sub_100530900();
      LODWORD(v934) = sub_1005357E0();
      v946 = (void (**)(char *))swift_allocObject();
      *((unsigned char *)v946 + 16) = 2;
      uint64_t v661 = swift_allocObject();
      *(unsigned char *)(v661 + 16) = 8;
      uint64_t v662 = swift_allocObject();
      v663 = WitnessTable;
      *(void *)(v662 + 16) = j___s9MusicCore7LibraryO4MenuV7RequestV16filteringOptionsSo07MPMediac9FilteringG0Vvg;
      *(void *)(v662 + 24) = v663;
      uint64_t v664 = swift_allocObject();
      *(void *)(v664 + 16) = sub_100386060;
      *(void *)(v664 + 24) = v662;
      v942 = (char *)swift_allocObject();
      v942[16] = 34;
      v965 = swift_allocObject();
      *(unsigned char *)(v965 + 16) = 8;
      uint64_t v665 = swift_allocObject();
      v666 = v970;
      *(void *)(v665 + 16) = sub_1003858AC;
      *(void *)(v665 + 24) = v666;
      uint64_t v667 = swift_allocObject();
      *(void *)(v667 + 16) = sub_100386054;
      *(void *)(v667 + 24) = v665;
      v948 = (char *)swift_allocObject();
      v948[16] = 2;
      v951 = swift_allocObject();
      LOBYTE(v951[2].isa) = 8;
      uint64_t v668 = swift_allocObject();
      uint64_t v669 = v972;
      *(void *)(v668 + 16) = j___s9MusicCore7LibraryO4MenuV7RequestV16filteringOptionsSo07MPMediac9FilteringG0Vvg;
      *(void *)(v668 + 24) = v669;
      uint64_t v670 = swift_allocObject();
      v945 = (void (**)(uint8_t **__return_ptr, uint64_t))v670;
      *(void *)(v670 + 16) = sub_100386060;
      *(void *)(v670 + 24) = v668;
      v952 = (char *)swift_allocObject();
      v952[16] = 32;
      v953 = swift_allocObject();
      *(unsigned char *)(v953 + 16) = 8;
      uint64_t v671 = swift_allocObject();
      *(void *)(v671 + 16) = sub_1003858AC;
      *(void *)(v671 + 24) = v656;
      v944 = (void (**)(uint8_t **__return_ptr, uint64_t))v664;
      uint64_t v672 = swift_allocObject();
      v933 = (char *)v672;
      *(void *)(v672 + 16) = sub_100386054;
      *(void *)(v672 + 24) = v671;
      uint64_t WitnessTable = (void *)swift_allocObject();
      *((unsigned char *)WitnessTable + 16) = 2;
      v954 = (char *)swift_allocObject();
      v954[16] = 8;
      uint64_t v673 = swift_allocObject();
      *(void *)(v673 + 16) = j___s9MusicCore7LibraryO4MenuV7RequestV16filteringOptionsSo07MPMediac9FilteringG0Vvg;
      *(void *)(v673 + 24) = v657;
      v674 = swift_allocObject();
      v960 = (void (**)(uint8_t **__return_ptr, uint64_t))v674;
      v674[2].Class isa = (Class)sub_100386060;
      v674[3].Class isa = (Class)v673;
      v966 = (char *)swift_allocObject();
      v966[16] = 2;
      v957 = (char *)swift_allocObject();
      v957[16] = 8;
      uint64_t v675 = swift_allocObject();
      *(void *)(v675 + 16) = j___s9MusicCore7LibraryO4MenuV7RequestV16filteringOptionsSo07MPMediac9FilteringG0Vvg;
      *(void *)(v675 + 24) = v658;
      uint64_t v676 = swift_allocObject();
      v970 = (char *)v676;
      *(void *)(v676 + 16) = sub_100386060;
      *(void *)(v676 + 24) = v675;
      v972 = swift_allocObject();
      *(unsigned char *)(v972 + 16) = 34;
      v974 = swift_allocObject();
      *(unsigned char *)(v974 + 16) = 8;
      v932 = (char *)v667;
      uint64_t v677 = swift_allocObject();
      *(void *)(v677 + 16) = sub_10038591C;
      *(void *)(v677 + 24) = v659;
      uint64_t v678 = swift_allocObject();
      *(void *)(v678 + 16) = sub_100386054;
      *(void *)(v678 + 24) = v677;
      uint64_t v679 = v678;
      uint64_t v680 = swift_allocObject();
      *(_OWORD *)(v680 + 16) = v921;
      *(void *)(v680 + 32) = sub_1003861E0;
      *(void *)(v680 + 40) = v946;
      *(void *)(v680 + 48) = sub_1003861E0;
      *(void *)(v680 + 56) = v661;
      *(void *)(v680 + 64) = sub_10038573C;
      *(void *)(v680 + 72) = v664;
      *(void *)(v680 + 80) = sub_1003861E0;
      *(void *)(v680 + 88) = v942;
      *(void *)(v680 + 96) = sub_1003861E0;
      *(void *)(v680 + 104) = v965;
      *(void *)(v680 + 112) = sub_100385490;
      *(void *)(v680 + 120) = v667;
      *(void *)(v680 + 128) = sub_1003861E0;
      *(void *)(v680 + 136) = v948;
      *(void *)(v680 + 144) = sub_1003861E0;
      *(void *)(v680 + 152) = v951;
      *(void *)(v680 + 160) = sub_10038573C;
      *(void *)(v680 + 168) = v945;
      *(void *)(v680 + 176) = sub_1003861E0;
      *(void *)(v680 + 184) = v952;
      *(void *)(v680 + 192) = sub_1003861E0;
      *(void *)(v680 + 200) = v953;
      *(void *)(v680 + 208) = sub_100385490;
      *(void *)(v680 + 216) = v933;
      *(void *)(v680 + 224) = sub_1003861E0;
      *(void *)(v680 + 232) = WitnessTable;
      *(void *)(v680 + 240) = sub_1003861E0;
      *(void *)(v680 + 248) = v954;
      *(void *)(v680 + 256) = sub_10038573C;
      *(void *)(v680 + 264) = v960;
      *(void *)(v680 + 272) = sub_1003861E0;
      *(void *)(v680 + 280) = v966;
      *(void *)(v680 + 288) = sub_1003861E0;
      *(void *)(v680 + 296) = v957;
      *(void *)(v680 + 304) = sub_10038573C;
      *(void *)(v680 + 312) = v970;
      *(void *)(v680 + 320) = sub_1003861E0;
      *(void *)(v680 + 328) = v972;
      *(void *)(v680 + 336) = sub_1003861E0;
      *(void *)(v680 + 344) = v974;
      *(void *)(v680 + 352) = sub_100385490;
      *(void *)(v680 + 360) = v679;
      swift_retain();
      v929 = (char *)v661;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      os_log_t v681 = v941;
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v681, (os_log_type_t)v934))
      {
        v682 = v929;
        v683 = v944;
        v684 = v942;
        v685 = v965;
        v686 = v945;
        v687 = v960;
        v688 = swift_slowAlloc();
        v908 = (char *)swift_slowAlloc();
        v978[4] = v908;
        *(_WORD *)v688 = 1794;
        *(unsigned char *)(v688 + 2) = *((unsigned char *)v946 + 16);
        v296 = v977;
        if (v977) {
          goto LABEL_333;
        }
        v909 = v679;
        swift_release();
        *(unsigned char *)(v688 + 3) = v682[16];
        v689 = v687;
        v690 = swift_release();
        v683[2](&v980, v690);
        *(void *)(v688 + 4) = v980;
        v691 = v686;
        swift_release();
        *(unsigned char *)(v688 + 12) = v684[16];
        swift_release();
        *(unsigned char *)(v688 + 13) = *(unsigned char *)(v685 + 16);
        v979 = (unsigned char *)(v688 + 14);
        v692 = v689;
        swift_release();
        sub_100385490(&v979);
        v693 = (uint8_t *)v688;
        swift_release();
        v694 = v979;
        *v979 = v948[16];
        swift_release();
        v694[1] = v951[2].isa;
        v695 = (uint64_t)v894;
        v696 = swift_release();
        v691[2](&v980, v696);
        *(void *)(v694 + 2) = v980;
        swift_release();
        v694[10] = v952[16];
        swift_release();
        v694[11] = *(unsigned char *)(v953 + 16);
        v979 = v694 + 12;
        swift_release();
        sub_100385490(&v979);
        swift_release();
        v697 = v979;
        *v979 = *((unsigned char *)WitnessTable + 16);
        swift_release();
        v697[1] = v954[16];
        v979 = v697 + 2;
        v698 = v895;
        v699 = v973;
        v700 = swift_release();
        v692[2](&v980, v700);
        *(void *)(v697 + 2) = v980;
        swift_release();
        v697[10] = v966[16];
        swift_release();
        v697[11] = v957[16];
        v701 = v971;
        v702 = v970;
        v703 = swift_release();
        (*((void (**)(uint8_t **__return_ptr, uint64_t))v702 + 2))(&v980, v703);
        *(void *)(v697 + 12) = v980;
        swift_release();
        v697[20] = *(unsigned char *)(v972 + 16);
        swift_release();
        v697[21] = *(unsigned char *)(v974 + 16);
        v979 = v697 + 22;
        v704 = v891;
        swift_release();
        sub_100385490(&v979);
        v705 = v887;
        swift_release();
        v706 = v941;
        _os_log_impl((void *)&_mh_execute_header, v941, (os_log_type_t)v934, "Section %{public}ld(%{public}s) mapped to section %{public}ld(%s): difference=%{public}ld adjustedDifference=%{public}ld diffAdjustmentMap=%{public}s", v693, 0x48u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t WitnessTable = v950->isa;
        ((void (*)(char *, uint64_t))WitnessTable)(v705, v975);
        v707 = v896;
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        uint64_t WitnessTable = v950->isa;
        ((void (*)(char *, uint64_t))WitnessTable)(v887, v975);
        v701 = v971;
        v698 = v895;
        v296 = v977;
        v695 = (uint64_t)v894;
        v707 = v896;
        v704 = v891;
        v699 = v973;
      }
      v708 = swift_allocObject();
      v709 = sub_100351C00(0);
      v957 = (char *)v708;
      *(void *)(v708 + 16) = v709;
      v710 = (uint64_t *)(v708 + 16);
      v711 = sub_10036B9F0(v968, v930);
      v712 = v711 - 1;
      v713 = (uint64_t)v900;
      if (__OFSUB__(v711, 1)) {
        goto LABEL_329;
      }
      swift_beginAccess();
      v974 = (uint64_t)v710;
      if (sub_10036B9FC(*v710) < v699)
      {
        v714 = (uint64_t)v931;
        v970 = &v931[v939];
        v715 = __OFADD__(v931, v939);
        LODWORD(v972) = v715;
        if (v967 < v968) {
          v714 = (uint64_t)v976;
        }
        v960 = (void (**)(uint8_t **__return_ptr, uint64_t))(v714 + v939);
        v716 = __OFADD__(v714, v939);
        LODWORD(v965) = v716;
        do
        {
          v976 = (uint64_t *)v712;
          if (v712 < 0)
          {
            v977 = v296;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v809 = v975;
            v963(v698, v962, v975);
            v810 = v874;
            v811 = v898;
            v812 = v958;
            ((void (*)(char *, char *, uint64_t))v917)(v874, v898, v958);
            v813 = swift_allocObject();
            v814 = v940;
            *(void *)(v813 + 16) = v812;
            *(void *)(v813 + 24) = v814;
            ((void (*)(char *, char *, uint64_t))v914)(&v919[v813], v810, v812);
            v815 = sub_100530900();
            v816 = sub_1005357D0();
            v817 = swift_allocObject();
            *(unsigned char *)(v817 + 16) = 34;
            v818 = swift_allocObject();
            *(unsigned char *)(v818 + 16) = 8;
            v819 = swift_allocObject();
            *(void *)(v819 + 16) = sub_1003858AC;
            *(void *)(v819 + 24) = v813;
            v820 = swift_allocObject();
            *(void *)(v820 + 16) = sub_100386054;
            *(void *)(v820 + 24) = v819;
            v821 = swift_allocObject();
            *(_OWORD *)(v821 + 16) = v910;
            *(void *)(v821 + 32) = sub_1003861E0;
            *(void *)(v821 + 40) = v817;
            *(void *)(v821 + 48) = sub_1003861E0;
            *(void *)(v821 + 56) = v818;
            *(void *)(v821 + 64) = sub_100385490;
            *(void *)(v821 + 72) = v820;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            if (!os_log_type_enabled(v815, v816))
            {
              swift_release();
              sub_100121638(v956);
              sub_100121638(v938);
              sub_100121638(v859);

              swift_release();
              swift_release();
              swift_release();
              ((void (*)(char *, uint64_t))WitnessTable)(v698, v809);
              v834 = *v880;
              (*v880)(v885, v812);
              v928(v886, v899);
              v834(v811, v812);
              goto LABEL_297;
            }
            v822 = (uint8_t *)swift_slowAlloc();
            v979 = (unsigned char *)swift_slowAlloc();
            *(_WORD *)v822 = 258;
            v822[2] = *(unsigned char *)(v817 + 16);
            if (!v977)
            {
              swift_release();
              v822[3] = *(unsigned char *)(v818 + 16);
              v980 = v822 + 4;
              swift_release();
              sub_100385490(&v980);
              swift_release();
              _os_log_impl((void *)&_mh_execute_header, v815, v816, "We ran out of items while trying to build index paths for section with identifier \"%{public}s\"", v822, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
              swift_release();
              sub_100121638(v956);
              sub_100121638(v938);
              sub_100121638(v859);

              ((void (*)(char *, uint64_t))WitnessTable)(v895, v975);
              v823 = *v880;
              v824 = v958;
              (*v880)(v885, v958);
              v928(v886, v899);
              v823(v898, v824);
LABEL_297:
              (*(void (**)(char *, uint64_t))(v937 + 8))(v892, v918);
              if (v976 != (uint64_t *)0x8000000000000000)
              {
                swift_release();
                goto LABEL_226;
              }
LABEL_332:
              __break(1u);
            }
LABEL_333:
            swift_errorRelease();
            __break(1u);
LABEL_334:
            swift_errorRelease();
            __break(1u);
            swift_errorRelease();
            __break(1u);
LABEL_335:
            swift_errorRelease();
            __break(1u);
LABEL_336:
            uint64_t result = swift_errorRelease();
            __break(1u);
            return result;
          }
          if (v972) {
            goto LABEL_320;
          }
          sub_10052F9F0();
          v719 = (uint64_t)v985;
          swift_bridgeObjectRetain();
          v720 = sub_100367B4C(v713, v719);
          swift_bridgeObjectRelease();
          if (v720)
          {
            v977 = v296;
            v721 = v975;
            v963(v704, v962, v975);
            v722 = v713;
            v723 = v947;
            v724 = v949;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v947 + 16))(v949, v722, v701);
            v725 = (*(unsigned __int8 *)(v723 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v723 + 80);
            v726 = swift_allocObject();
            (*(void (**)(unint64_t, uint64_t, uint64_t))(v723 + 32))(v726 + v725, v724, v701);
            v727 = swift_allocObject();
            *(void *)(v727 + 16) = sub_100385A94;
            *(void *)(v727 + 24) = v726;
            v728 = sub_100530900();
            v729 = sub_1005357E0();
            v730 = swift_allocObject();
            *(unsigned char *)(v730 + 16) = 34;
            v731 = v701;
            v732 = swift_allocObject();
            *(unsigned char *)(v732 + 16) = 8;
            v733 = swift_allocObject();
            *(void *)(v733 + 16) = sub_10038605C;
            *(void *)(v733 + 24) = v727;
            v734 = v704;
            v735 = swift_allocObject();
            *(void *)(v735 + 16) = sub_100386054;
            *(void *)(v735 + 24) = v733;
            v736 = swift_allocObject();
            *(_OWORD *)(v736 + 16) = v910;
            *(void *)(v736 + 32) = sub_1003861E0;
            *(void *)(v736 + 40) = v730;
            *(void *)(v736 + 48) = sub_1003861E0;
            *(void *)(v736 + 56) = v732;
            *(void *)(v736 + 64) = sub_100385490;
            *(void *)(v736 + 72) = v735;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            LODWORD(v966) = v729;
            if (!os_log_type_enabled(v728, (os_log_type_t)v729))
            {

              swift_release();
              swift_release();
              swift_release();
              ((void (*)(char *, uint64_t))WitnessTable)(v734, v721);
              v713 = (uint64_t)v900;
              (*v927)(v900, v731);
              v701 = v731;
              v698 = v895;
              v296 = v977;
              v695 = (uint64_t)v894;
              v707 = v896;
              v704 = v734;
LABEL_279:
              v699 = v973;
              goto LABEL_259;
            }
            v737 = swift_slowAlloc();
            v980 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v737 = 258;
            *(unsigned char *)(v737 + 2) = *(unsigned char *)(v730 + 16);
            v296 = v977;
            if (v977) {
              goto LABEL_333;
            }
            swift_release();
            *(unsigned char *)(v737 + 3) = *(unsigned char *)(v732 + 16);
            v695 = (uint64_t)v894;
            v707 = v896;
            v699 = v973;
            v738 = swift_release();
            v739 = (*(uint64_t (**)(uint64_t))(v735 + 16))(v738);
            *(void *)(v737 + 4) = sub_10037ECEC(v739, v740, (uint64_t *)&v980);
            swift_bridgeObjectRelease();
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, v728, (os_log_type_t)v966, "%{public}s contained in the visible index paths set, skipping", (uint8_t *)v737, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            v704 = v891;
            ((void (*)(char *, uint64_t))WitnessTable)(v891, v975);
            v713 = (uint64_t)v900;
            v701 = v971;
            (*v927)(v900, v971);
            v698 = v895;
          }
          else
          {
            if (v965) {
              goto LABEL_325;
            }
            sub_10052F9F0();
            if (v967 >= v968)
            {
              v763 = *v925;
              v764 = v925[1];
              swift_retain();
              swift_retain();
              v765 = sub_10037A198(v695, v763, v764);
              swift_release();
              swift_release();
              if (v765)
              {
                v977 = v296;
                v766 = v876;
                v767 = v975;
                v963(v876, v962, v975);
                v768 = v947;
                v769 = v949;
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v947 + 16))(v949, v695, v701);
                v770 = (*(unsigned __int8 *)(v768 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v768 + 80);
                v771 = swift_allocObject();
                v772 = v771 + v770;
                v751 = v766;
                (*(void (**)(unint64_t, uint64_t, uint64_t))(v768 + 32))(v772, v769, v701);
                v773 = swift_allocObject();
                *(void *)(v773 + 16) = sub_100385A94;
                *(void *)(v773 + 24) = v771;
                v753 = sub_100530900();
                LODWORD(v769) = sub_1005357E0();
                v774 = swift_allocObject();
                *(unsigned char *)(v774 + 16) = 34;
                v775 = swift_allocObject();
                *(unsigned char *)(v775 + 16) = 8;
                v756 = v767;
                v776 = swift_allocObject();
                *(void *)(v776 + 16) = sub_100385A98;
                *(void *)(v776 + 24) = v773;
                v758 = v701;
                v777 = swift_allocObject();
                *(void *)(v777 + 16) = sub_100386054;
                *(void *)(v777 + 24) = v776;
                v778 = swift_allocObject();
                *(_OWORD *)(v778 + 16) = v910;
                *(void *)(v778 + 32) = sub_1003861E0;
                *(void *)(v778 + 40) = v774;
                *(void *)(v778 + 48) = sub_1003861E0;
                *(void *)(v778 + 56) = v775;
                *(void *)(v778 + 64) = sub_100385490;
                *(void *)(v778 + 72) = v777;
                swift_retain();
                swift_retain();
                swift_retain();
                swift_bridgeObjectRelease();
                LODWORD(v966) = v769;
                if (!os_log_type_enabled(v753, (os_log_type_t)v769))
                {
LABEL_278:

                  swift_release();
                  swift_release();
                  swift_release();
                  ((void (*)(char *, uint64_t))WitnessTable)(v751, v756);
                  v781 = *v927;
                  v695 = (uint64_t)v894;
                  (*v927)(v894, v758);
                  v713 = (uint64_t)v900;
                  v781(v900, v758);
                  v701 = v758;
                  v698 = v895;
                  v296 = v977;
                  v707 = v896;
                  v704 = v891;
                  goto LABEL_279;
                }
                v779 = (uint8_t *)swift_slowAlloc();
                v979 = (unsigned char *)swift_slowAlloc();
                *(_WORD *)v779 = 258;
                v779[2] = *(unsigned char *)(v774 + 16);
                v296 = v977;
                v707 = v896;
                if (v977) {
                  goto LABEL_333;
                }
                swift_release();
                v779[3] = *(unsigned char *)(v775 + 16);
                v980 = v779 + 4;
                v695 = (uint64_t)v894;
                swift_release();
                sub_100385490(&v980);
                v699 = v973;
                swift_release();
                _os_log_impl((void *)&_mh_execute_header, v753, (os_log_type_t)v966, "%{public}s contained in the deleted index paths set, skipping", v779, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                p_TupleTypeMetadata2 = &v908;
                goto LABEL_277;
              }
            }
            else
            {
              v741 = *v911;
              v742 = v911[1];
              swift_retain();
              swift_retain();
              v743 = sub_10037A198(v695, v741, v742);
              swift_release();
              swift_release();
              if (v743)
              {
                v977 = v296;
                v744 = v875;
                v745 = v975;
                v963(v875, v962, v975);
                v746 = v947;
                v747 = v949;
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v947 + 16))(v949, v695, v701);
                v748 = (*(unsigned __int8 *)(v746 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v746 + 80);
                v749 = swift_allocObject();
                v750 = v749 + v748;
                v751 = v744;
                (*(void (**)(unint64_t, uint64_t, uint64_t))(v746 + 32))(v750, v747, v701);
                v752 = swift_allocObject();
                *(void *)(v752 + 16) = sub_100385A94;
                *(void *)(v752 + 24) = v749;
                v753 = sub_100530900();
                LODWORD(v747) = sub_1005357E0();
                v754 = swift_allocObject();
                *(unsigned char *)(v754 + 16) = 34;
                v755 = swift_allocObject();
                *(unsigned char *)(v755 + 16) = 8;
                v756 = v745;
                v757 = swift_allocObject();
                *(void *)(v757 + 16) = sub_10038605C;
                *(void *)(v757 + 24) = v752;
                v758 = v701;
                v759 = swift_allocObject();
                *(void *)(v759 + 16) = sub_100386054;
                *(void *)(v759 + 24) = v757;
                v760 = swift_allocObject();
                *(_OWORD *)(v760 + 16) = v910;
                *(void *)(v760 + 32) = sub_1003861E0;
                *(void *)(v760 + 40) = v754;
                *(void *)(v760 + 48) = sub_1003861E0;
                *(void *)(v760 + 56) = v755;
                *(void *)(v760 + 64) = sub_100385490;
                *(void *)(v760 + 72) = v759;
                swift_retain();
                swift_retain();
                swift_retain();
                swift_bridgeObjectRelease();
                LODWORD(v966) = v747;
                if (!os_log_type_enabled(v753, (os_log_type_t)v747)) {
                  goto LABEL_278;
                }
                v761 = (uint8_t *)swift_slowAlloc();
                v979 = (unsigned char *)swift_slowAlloc();
                *(_WORD *)v761 = 258;
                v761[2] = *(unsigned char *)(v754 + 16);
                v296 = v977;
                v707 = v896;
                if (v977) {
                  goto LABEL_333;
                }
                swift_release();
                v761[3] = *(unsigned char *)(v755 + 16);
                v980 = v761 + 4;
                v695 = (uint64_t)v894;
                swift_release();
                sub_100385490(&v980);
                v699 = v973;
                swift_release();
                _os_log_impl((void *)&_mh_execute_header, v753, (os_log_type_t)v966, "%{public}s contained in the inserted index paths set, skipping", v761, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                p_TupleTypeMetadata2 = &TupleTypeMetadata2;
LABEL_277:
                ((void (*)(void, uint64_t))WitnessTable)(*(p_TupleTypeMetadata2 - 32), v975);
                v780 = *v927;
                v701 = v971;
                (*v927)((char *)v695, v971);
                v713 = (uint64_t)v900;
                v780(v900, v701);
                v698 = v895;
                v704 = v891;
                goto LABEL_259;
              }
            }
            v717 = v949;
            (*v959)(v949, v695, v701);
            sub_10036F058(v717);
            v718 = *v927;
            (*v927)((char *)v695, v701);
            v713 = (uint64_t)v900;
            v718(v900, v701);
          }
LABEL_259:
          v712 = (uint64_t)v976 - 1;
        }
        while (sub_10036B9FC(*(void *)v974) < v699);
      }
      v782 = swift_bridgeObjectRetain();
      v783 = v957;
      if (v967 < v968)
      {
        sub_10037A35C(v782);
        swift_bridgeObjectRelease();
        v798 = v871;
        v793 = v975;
        v963(v871, v962, v975);
        v784 = swift_allocObject();
        *(void *)(v784 + 16) = sub_100385A04;
        *(void *)(v784 + 24) = v783;
        swift_retain();
        v795 = sub_100530900();
        v785 = sub_1005357E0();
        v786 = swift_allocObject();
        *(unsigned char *)(v786 + 16) = 34;
        v787 = swift_allocObject();
        *(unsigned char *)(v787 + 16) = 8;
        v788 = swift_allocObject();
        *(void *)(v788 + 16) = sub_100386058;
        *(void *)(v788 + 24) = v784;
        v789 = swift_allocObject();
        *(void *)(v789 + 16) = sub_100386054;
        *(void *)(v789 + 24) = v788;
        v790 = swift_allocObject();
        *(_OWORD *)(v790 + 16) = v910;
        *(void *)(v790 + 32) = sub_1003861E0;
        *(void *)(v790 + 40) = v786;
        *(void *)(v790 + 48) = sub_1003861E0;
        *(void *)(v790 + 56) = v787;
        *(void *)(v790 + 64) = sub_100385490;
        *(void *)(v790 + 72) = v789;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v795, v785))
        {
          v791 = (uint8_t *)swift_slowAlloc();
          v979 = (unsigned char *)swift_slowAlloc();
          *(_WORD *)v791 = 258;
          v791[2] = *(unsigned char *)(v786 + 16);
          if (v296) {
            goto LABEL_333;
          }
          swift_release();
          v791[3] = *(unsigned char *)(v787 + 16);
          v980 = v791 + 4;
          v615 = v931;
          swift_release();
          sub_100385490(&v980);
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v795, v785, "Non visible adjustment: inserting %{public}s", v791, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v792 = &v903;
          goto LABEL_288;
        }
      }
      else
      {
        sub_10037A35C(v782);
        swift_bridgeObjectRelease();
        v793 = v975;
        v963(v707, v962, v975);
        v794 = swift_allocObject();
        *(void *)(v794 + 16) = sub_100385A04;
        *(void *)(v794 + 24) = v783;
        swift_retain();
        v795 = sub_100530900();
        v796 = sub_1005357E0();
        v797 = swift_allocObject();
        *(unsigned char *)(v797 + 16) = 34;
        v798 = v707;
        v799 = swift_allocObject();
        *(unsigned char *)(v799 + 16) = 8;
        v800 = swift_allocObject();
        *(void *)(v800 + 16) = sub_100386058;
        *(void *)(v800 + 24) = v794;
        v801 = swift_allocObject();
        *(void *)(v801 + 16) = sub_100386054;
        *(void *)(v801 + 24) = v800;
        v802 = swift_allocObject();
        *(_OWORD *)(v802 + 16) = v910;
        *(void *)(v802 + 32) = sub_1003861E0;
        *(void *)(v802 + 40) = v797;
        *(void *)(v802 + 48) = sub_1003861E0;
        *(void *)(v802 + 56) = v799;
        *(void *)(v802 + 64) = sub_100385490;
        *(void *)(v802 + 72) = v801;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v795, v796))
        {
          v804 = (uint8_t *)swift_slowAlloc();
          v979 = (unsigned char *)swift_slowAlloc();
          *(_WORD *)v804 = 258;
          v804[2] = *(unsigned char *)(v797 + 16);
          if (v296) {
            goto LABEL_333;
          }
          swift_release();
          v804[3] = *(unsigned char *)(v799 + 16);
          v980 = v804 + 4;
          v615 = v931;
          swift_release();
          sub_100385490(&v980);
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v795, v796, "Non visible adjustment: deleting %{public}s", v804, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v792 = (char **)&v926;
LABEL_288:
          ((void (*)(void, uint64_t))WitnessTable)(*(v792 - 32), v975);
          v805 = *v880;
          v806 = v958;
          (*v880)(v885, v958);
          v617 = v920;
          v928(v886, v899);
          v805(v898, v806);
          swift_release();
          uint64_t v620 = v938;
          uint64_t v294 = v956;
          uint64_t v619 = v937;
LABEL_290:
          v616 = v913;
          uint64_t v618 = v912;
          goto LABEL_231;
        }
      }

      swift_release();
      swift_release();
      swift_release();
      ((void (*)(char *, uint64_t))WitnessTable)(v798, v793);
      v807 = *v880;
      v808 = v958;
      (*v880)(v885, v958);
      v617 = v920;
      v928(v886, v899);
      v807(v898, v808);
      swift_release();
      uint64_t v620 = v938;
      uint64_t v294 = v956;
      uint64_t v619 = v937;
      v615 = v931;
      goto LABEL_290;
    }
    uint64_t v337 = *v336;
    uint64_t v338 = v973;
    (*v869)(v919, (char *)v336 + *((int *)v324 + 12), v973);
    v972 = v337;
    if (__OFSUB__(v337, v939)) {
      goto LABEL_318;
    }
    uint64_t v339 = v958;
    sub_100535220();
    uint64_t v340 = ((uint64_t (*)(uint64_t))v940[4].isa)(v339);
    unint64_t v342 = v988;
    if (*(void *)(v988 + 16) && (uint64_t v343 = sub_100367E3C(v340, v341), (v344 & 1) != 0))
    {
      uint64_t v345 = *(void *)(*(void *)(v342 + 56) + 8 * v343);
      swift_bridgeObjectRelease();
      v912 = v345;
      sub_10036F1E0(0, 0, v345);
      LODWORD(v951) = 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      LODWORD(v951) = 0;
      v912 = 0;
    }
    v346 = v904;
    v952 = *(char **)v957;
    ((void (*)(char *, char *, uint64_t))v952)(v904, v919, v338);
    sub_100535560();
    uint64_t v347 = v914;
    *(void *)&v346[*(int *)(v914 + 36)] = v980;
    (*v868)(v326, v346, v347);
    v348 = (char *)(v326 + *(int *)(v347 + 36));
    sub_1005355A0();
    if (sub_1005364E0())
    {
LABEL_93:
      (*v879)(v326, v914);
      (*v880)(v913, v958);
      (*(void (**)(char *, uint64_t))v953)(v919, v338);
      uint64_t v294 = v956;
      v324 = TupleTypeMetadata2;
      unint64_t v323 = v884;
      uint64_t v325 = v882;
      continue;
    }
    break;
  }
  v901 = (char *)(v912 + v939);
  BOOL v349 = __OFADD__(v912, v939);
  LODWORD(v902) = v349;
  v948 = v348;
  while (2)
  {
    v351 = v296;
    v352 = (void (*)(uint8_t **, void))sub_100535670();
    v353 = v966;
    uint64_t v354 = v967;
    (*v946)(v966);
    v352(&v980, 0);
    uint64_t v355 = v965;
    ((void (*)(uint64_t, uint64_t, uint64_t))v952)(v965, v326, v338);
    sub_1005355B0();
    v356 = *(void (**)(char *, uint64_t))v953;
    (*(void (**)(uint64_t, uint64_t))v953)(v355, v338);
    v357 = v976;
    ((void (*)(uint64_t *, char *, uint64_t))*v945)(v976, v353, v354);
    LODWORD(v354) = swift_getEnumCaseMultiPayload();
    uint64_t v358 = *v357;
    sub_100013BFC(&qword_10066F3F8);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    v360 = (char *)v357 + *(int *)(TupleTypeMetadata3 + 64);
    uint64_t v361 = *(void *)v360;
    int v362 = v360[8];
    unint64_t v363 = v986;
    uint64_t v364 = *(void *)(v986 + 16);
    v977 = v351;
    if (v354 != 1)
    {
      if (v364)
      {
        unint64_t v367 = sub_100367FB4(v972);
        v368 = v954;
        if ((v369 & 1) != 0 && __OFADD__(v358, *(void *)(*(void *)(v363 + 56) + 8 * v367))) {
          goto LABEL_302;
        }
      }
      else
      {
        v368 = v954;
      }
      v974 = (uint64_t)v976 + *(int *)(TupleTypeMetadata3 + 48);
      if (v951)
      {
        if (v362)
        {
          v427 = sub_100379D08(&v980, v912);
          uint64_t v410 = v971;
          if (*(unsigned char *)(v426 + 8))
          {
            ((void (*)(uint8_t **, void))v427)(&v980, 0);
            uint64_t v402 = (uint64_t)v917;
            v428 = v916;
          }
          else
          {
            uint64_t v402 = (uint64_t)v917;
            v428 = v916;
            if (__OFADD__(*(void *)v426, 1)) {
              goto LABEL_319;
            }
            ++*(void *)v426;
            ((void (*)(uint8_t **, void))v427)(&v980, 0);
          }
          if (v902) {
            goto LABEL_312;
          }
          sub_10052F9F0();
          sub_100384118(v402);
          uint64_t v406 = v975;
          v963(v428, v962, v975);
          uint64_t v500 = v947;
          uint64_t v501 = v949;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v947 + 16))(v949, v402, v410);
          unint64_t v502 = (*(unsigned __int8 *)(v500 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v500 + 80);
          v407 = v428;
          uint64_t v503 = swift_allocObject();
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v500 + 32))(v503 + v502, v501, v410);
          uint64_t v504 = swift_allocObject();
          *(void *)(v504 + 16) = sub_100385A94;
          *(void *)(v504 + 24) = v503;
          v414 = sub_100530900();
          os_log_type_t v505 = sub_1005357E0();
          uint64_t v506 = swift_allocObject();
          *(unsigned char *)(v506 + 16) = 34;
          uint64_t v507 = swift_allocObject();
          *(unsigned char *)(v507 + 16) = 8;
          uint64_t v508 = swift_allocObject();
          *(void *)(v508 + 16) = sub_10038605C;
          *(void *)(v508 + 24) = v504;
          uint64_t v509 = swift_allocObject();
          *(void *)(v509 + 16) = sub_100386054;
          *(void *)(v509 + 24) = v508;
          uint64_t v510 = swift_allocObject();
          *(_OWORD *)(v510 + 16) = v910;
          *(void *)(v510 + 32) = sub_1003861E0;
          *(void *)(v510 + 40) = v506;
          *(void *)(v510 + 48) = sub_1003861E0;
          *(void *)(v510 + 56) = v507;
          *(void *)(v510 + 64) = sub_100385490;
          *(void *)(v510 + 72) = v509;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (!os_log_type_enabled(v414, v505)) {
            goto LABEL_114;
          }
          uint64_t v511 = swift_slowAlloc();
          v980 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v511 = 258;
          *(unsigned char *)(v511 + 2) = *(unsigned char *)(v506 + 16);
          if (v977) {
            goto LABEL_334;
          }
          swift_release();
          *(unsigned char *)(v511 + 3) = *(unsigned char *)(v507 + 16);
          uint64_t v512 = swift_release();
          uint64_t v513 = (*(uint64_t (**)(uint64_t))(v509 + 16))(v512);
          *(void *)(v511 + 4) = sub_10037ECEC(v513, v514, (uint64_t *)&v980);
          swift_bridgeObjectRelease();
          uint64_t v515 = v406;
          v296 = 0;
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v414, v505, "Inserting item %{public}s", (uint8_t *)v511, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          ((void (*)(char *, uint64_t))v960)(v916, v515);
          (*v927)(v917, v971);
LABEL_166:
          uint64_t v338 = v973;
          uint64_t v326 = v968;
LABEL_115:
          v350 = v970;
LABEL_116:
          (*v944)((uint8_t **)v974, (uint64_t)v350);
          sub_1005355A0();
          if (sub_1005364E0()) {
            goto LABEL_93;
          }
          continue;
        }
        v466 = v924;
        sub_10052F9F0();
        v467 = v932;
        uint64_t v468 = v971;
        if (v902) {
          goto LABEL_311;
        }
        sub_10052F9F0();
        v963(v467, v962, v975);
        uint64_t v469 = v947;
        v470 = *(NSObject **)(v947 + 16);
        uint64_t v471 = v949;
        ((void (*)(uint64_t, char *, uint64_t))v470)(v949, v466, v468);
        unint64_t v472 = (*(unsigned __int8 *)(v469 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v469 + 80);
        uint64_t v473 = swift_allocObject();
        v474 = *(void (**)(unint64_t, uint64_t, uint64_t))(v469 + 32);
        v474(v473 + v472, v471, v468);
        uint64_t v475 = swift_allocObject();
        *(void *)(v475 + 16) = sub_100385A94;
        *(void *)(v475 + 24) = v473;
        v915 = v470;
        ((void (*)(uint64_t, char *, uint64_t))v470)(v471, v931, v468);
        uint64_t v476 = swift_allocObject();
        v474(v476 + v472, v471, v468);
        uint64_t v477 = swift_allocObject();
        *(void *)(v477 + 16) = sub_100385A94;
        *(void *)(v477 + 24) = v476;
        v960 = (void (**)(uint8_t **__return_ptr, uint64_t))sub_100530900();
        LODWORD(v470) = sub_1005357E0();
        uint64_t v478 = swift_allocObject();
        *(unsigned char *)(v478 + 16) = 34;
        uint64_t v479 = swift_allocObject();
        *(unsigned char *)(v479 + 16) = 8;
        uint64_t v480 = swift_allocObject();
        *(void *)(v480 + 16) = sub_10038605C;
        *(void *)(v480 + 24) = v475;
        uint64_t v481 = swift_allocObject();
        *(void *)(v481 + 16) = sub_100386054;
        *(void *)(v481 + 24) = v480;
        uint64_t v482 = swift_allocObject();
        *(unsigned char *)(v482 + 16) = 34;
        uint64_t v483 = swift_allocObject();
        *(unsigned char *)(v483 + 16) = 8;
        uint64_t v484 = swift_allocObject();
        uint64_t v485 = v975;
        uint64_t v486 = v484;
        *(void *)(v484 + 16) = sub_10038605C;
        *(void *)(v484 + 24) = v477;
        uint64_t v487 = swift_allocObject();
        *(void *)(v487 + 16) = sub_100386054;
        *(void *)(v487 + 24) = v486;
        uint64_t v488 = swift_allocObject();
        *(_OWORD *)(v488 + 16) = v934;
        *(void *)(v488 + 32) = sub_1003861E0;
        *(void *)(v488 + 40) = v478;
        *(void *)(v488 + 48) = sub_1003861E0;
        *(void *)(v488 + 56) = v479;
        *(void *)(v488 + 64) = sub_100385490;
        *(void *)(v488 + 72) = v481;
        *(void *)(v488 + 80) = sub_1003861E0;
        *(void *)(v488 + 88) = v482;
        *(void *)(v488 + 96) = sub_1003861E0;
        *(void *)(v488 + 104) = v483;
        *(void *)(v488 + 112) = sub_100385490;
        *(void *)(v488 + 120) = v487;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        LODWORD(v890) = v470;
        os_log_type_t v489 = v470;
        v490 = v960;
        if (os_log_type_enabled((os_log_t)v960, v489))
        {
          uint64_t v491 = swift_slowAlloc();
          v980 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v491 = 514;
          *(unsigned char *)(v491 + 2) = *(unsigned char *)(v478 + 16);
          if (v977) {
            goto LABEL_335;
          }
          swift_release();
          *(unsigned char *)(v491 + 3) = *(unsigned char *)(v479 + 16);
          v296 = 0;
          uint64_t v492 = swift_release();
          uint64_t v493 = (*(uint64_t (**)(uint64_t))(v481 + 16))(v492);
          *(void *)(v491 + 4) = sub_10037ECEC(v493, v494, (uint64_t *)&v980);
          swift_bridgeObjectRelease();
          v495 = v932;
          swift_release();
          *(unsigned char *)(v491 + 12) = *(unsigned char *)(v482 + 16);
          swift_release();
          *(unsigned char *)(v491 + 13) = *(unsigned char *)(v483 + 16);
          uint64_t v496 = swift_release();
          uint64_t v497 = (*(uint64_t (**)(uint64_t))(v487 + 16))(v496);
          *(void *)(v491 + 14) = sub_10037ECEC(v497, v498, (uint64_t *)&v980);
          swift_bridgeObjectRelease();
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v490, (os_log_type_t)v890, "[Insert] Moving item %{public}s to %{public}s", (uint8_t *)v491, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v960 = (void (**)(uint8_t **__return_ptr, uint64_t))v950->isa;
          ((void (*)(char *, uint64_t))v960)(v495, v975);
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          v960 = (void (**)(uint8_t **__return_ptr, uint64_t))v950->isa;
          ((void (*)(char *, uint64_t))v960)(v932, v485);
          v296 = v977;
        }
        uint64_t v338 = v973;
        uint64_t v516 = v921;
        uint64_t v517 = v921 + *(int *)(v922 + 48);
        v518 = v924;
        uint64_t v519 = v971;
        os_log_t v520 = v915;
        ((void (*)(void, char *, uint64_t))v915)(v921, v924, v971);
        v521 = v931;
        ((void (*)(uint64_t, char *, uint64_t))v520)(v517, v931, v519);
        sub_10036EF50(v516);
        v522 = *v927;
        (*v927)(v521, v519);
        v522(v518, v519);
        v350 = v970;
LABEL_171:
        uint64_t v326 = v968;
        goto LABEL_116;
      }
      uint64_t v429 = v975;
      v963(v368, v962, v975);
      uint64_t v430 = swift_allocObject();
      *(void *)(v430 + 16) = v972;
      uint64_t v431 = swift_allocObject();
      *(void *)(v431 + 16) = v358;
      v915 = sub_100530900();
      int v432 = sub_1005357E0();
      uint64_t v433 = swift_allocObject();
      *(unsigned char *)(v433 + 16) = 2;
      uint64_t v434 = swift_allocObject();
      *(unsigned char *)(v434 + 16) = 8;
      uint64_t v435 = swift_allocObject();
      *(void *)(v435 + 16) = Library.Menu.Request.filteringOptions.getter;
      *(void *)(v435 + 24) = v430;
      uint64_t v436 = swift_allocObject();
      *(void *)(v436 + 16) = sub_100386060;
      *(void *)(v436 + 24) = v435;
      uint64_t v437 = swift_allocObject();
      *(unsigned char *)(v437 + 16) = 2;
      uint64_t v438 = swift_allocObject();
      *(unsigned char *)(v438 + 16) = 8;
      uint64_t v439 = swift_allocObject();
      *(void *)(v439 + 16) = j___s9MusicCore7LibraryO4MenuV7RequestV16filteringOptionsSo07MPMediac9FilteringG0Vvg;
      *(void *)(v439 + 24) = v431;
      uint64_t v440 = swift_allocObject();
      *(void *)(v440 + 16) = sub_100386060;
      *(void *)(v440 + 24) = v439;
      uint64_t v441 = swift_allocObject();
      *(_OWORD *)(v441 + 16) = v934;
      *(void *)(v441 + 32) = sub_1003861E0;
      *(void *)(v441 + 40) = v433;
      *(void *)(v441 + 48) = sub_1003861E0;
      *(void *)(v441 + 56) = v434;
      *(void *)(v441 + 64) = sub_10038573C;
      *(void *)(v441 + 72) = v436;
      *(void *)(v441 + 80) = sub_1003861E0;
      *(void *)(v441 + 88) = v437;
      *(void *)(v441 + 96) = sub_1003861E0;
      *(void *)(v441 + 104) = v438;
      *(void *)(v441 + 112) = sub_10038573C;
      *(void *)(v441 + 120) = v440;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      LODWORD(v890) = v432;
      os_log_type_t v442 = v432;
      v443 = v915;
      if (os_log_type_enabled(v915, v442))
      {
        uint64_t v444 = swift_slowAlloc();
        *(_WORD *)uint64_t v444 = 512;
        *(unsigned char *)(v444 + 2) = *(unsigned char *)(v433 + 16);
        v296 = v977;
        if (v977) {
          goto LABEL_333;
        }
        uint64_t v445 = v444;
        swift_release();
        *(unsigned char *)(v445 + 3) = *(unsigned char *)(v434 + 16);
        uint64_t v446 = swift_release();
        (*(void (**)(uint8_t **__return_ptr, uint64_t))(v436 + 16))(&v980, v446);
        *(void *)(v445 + 4) = v980;
        swift_release();
        *(unsigned char *)(v445 + 12) = *(unsigned char *)(v437 + 16);
        swift_release();
        *(unsigned char *)(v445 + 13) = *(unsigned char *)(v438 + 16);
        uint64_t v447 = swift_release();
        (*(void (**)(uint8_t **__return_ptr, uint64_t))(v440 + 16))(&v980, v447);
        *(void *)(v445 + 14) = v980;
        uint64_t v326 = v968;
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v443, (os_log_type_t)v890, "Skipping insert for [%{public}ld,%{public}ld]", (uint8_t *)v445, 0x16u);
        swift_slowDealloc();

        v448 = (uint64_t *)&v982;
LABEL_154:
        ((void (*)(void, uint64_t))v960)(*(v448 - 32), v975);
        v350 = v970;
        uint64_t v338 = v973;
        goto LABEL_116;
      }
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      v499 = (uint64_t *)&v982;
LABEL_168:
      ((void (*)(void, uint64_t))v960)(*(v499 - 32), v429);
      v296 = v977;
      v350 = v970;
      uint64_t v338 = v973;
      goto LABEL_171;
    }
    break;
  }
  if (v364)
  {
    unint64_t v365 = sub_100367FB4(v972);
    if (v366) {
      uint64_t v364 = *(void *)(*(void *)(v363 + 56) + 8 * v365);
    }
    else {
      uint64_t v364 = 0;
    }
  }
  if (__OFADD__(v358, v364))
  {
    __break(1u);
LABEL_302:
    __break(1u);
    goto LABEL_303;
  }
  if (!v951)
  {
    uint64_t v372 = (uint64_t)v976 + *(int *)(TupleTypeMetadata3 + 48);
    if (v362) {
      goto LABEL_140;
    }
    v974 = (uint64_t)v976 + *(int *)(TupleTypeMetadata3 + 48);
    uint64_t v429 = v975;
    v963(v942, v962, v975);
    uint64_t v449 = swift_allocObject();
    *(void *)(v449 + 16) = v972;
    uint64_t v450 = swift_allocObject();
    *(void *)(v450 + 16) = v361;
    v451 = sub_100530900();
    LODWORD(v915) = sub_1005357E0();
    uint64_t v452 = swift_allocObject();
    *(unsigned char *)(v452 + 16) = 2;
    uint64_t v453 = swift_allocObject();
    *(unsigned char *)(v453 + 16) = 8;
    uint64_t v454 = swift_allocObject();
    *(void *)(v454 + 16) = j___s9MusicCore7LibraryO4MenuV7RequestV16filteringOptionsSo07MPMediac9FilteringG0Vvg;
    *(void *)(v454 + 24) = v449;
    uint64_t v455 = swift_allocObject();
    *(void *)(v455 + 16) = sub_100386060;
    *(void *)(v455 + 24) = v454;
    uint64_t v456 = swift_allocObject();
    *(unsigned char *)(v456 + 16) = 2;
    uint64_t v457 = swift_allocObject();
    *(unsigned char *)(v457 + 16) = 8;
    uint64_t v458 = swift_allocObject();
    *(void *)(v458 + 16) = j___s9MusicCore7LibraryO4MenuV7RequestV16filteringOptionsSo07MPMediac9FilteringG0Vvg;
    *(void *)(v458 + 24) = v450;
    uint64_t v459 = swift_allocObject();
    *(void *)(v459 + 16) = sub_100386060;
    *(void *)(v459 + 24) = v458;
    uint64_t v460 = swift_allocObject();
    *(_OWORD *)(v460 + 16) = v934;
    *(void *)(v460 + 32) = sub_1003861E0;
    *(void *)(v460 + 40) = v452;
    *(void *)(v460 + 48) = sub_1003861E0;
    *(void *)(v460 + 56) = v453;
    *(void *)(v460 + 64) = sub_10038573C;
    *(void *)(v460 + 72) = v455;
    *(void *)(v460 + 80) = sub_1003861E0;
    *(void *)(v460 + 88) = v456;
    *(void *)(v460 + 96) = sub_1003861E0;
    *(void *)(v460 + 104) = v457;
    *(void *)(v460 + 112) = sub_10038573C;
    *(void *)(v460 + 120) = v459;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v451, (os_log_type_t)v915))
    {
      v461 = v451;
      uint64_t v462 = swift_slowAlloc();
      *(_WORD *)uint64_t v462 = 512;
      *(unsigned char *)(v462 + 2) = *(unsigned char *)(v452 + 16);
      v296 = v977;
      if (v977) {
        goto LABEL_333;
      }
      uint64_t v463 = v462;
      swift_release();
      *(unsigned char *)(v463 + 3) = *(unsigned char *)(v453 + 16);
      uint64_t v464 = swift_release();
      (*(void (**)(uint8_t **__return_ptr, uint64_t))(v455 + 16))(&v980, v464);
      *(void *)(v463 + 4) = v980;
      swift_release();
      *(unsigned char *)(v463 + 12) = *(unsigned char *)(v456 + 16);
      swift_release();
      *(unsigned char *)(v463 + 13) = *(unsigned char *)(v457 + 16);
      uint64_t v465 = swift_release();
      (*(void (**)(uint8_t **__return_ptr, uint64_t))(v459 + 16))(&v980, v465);
      *(void *)(v463 + 14) = v980;
      uint64_t v326 = v968;
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v461, (os_log_type_t)v915, "Skipping insert for [%{public}ld,%{public}ld]", (uint8_t *)v463, 0x16u);
      swift_slowDealloc();

      v448 = &v974;
      goto LABEL_154;
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    v499 = &v974;
    goto LABEL_168;
  }
  v371 = sub_100379D08(&v980, v912);
  if (*(unsigned char *)(v370 + 8) != 1)
  {
    if (__OFSUB__(*(void *)v370, 1)) {
      goto LABEL_310;
    }
    --*(void *)v370;
  }
  ((void (*)(uint8_t **, void))v371)(&v980, 0);
  uint64_t v372 = (uint64_t)v976 + *(int *)(TupleTypeMetadata3 + 48);
  if ((v362 & 1) == 0)
  {
    v373 = v923;
    sub_10052F9F0();
    if (v902) {
      goto LABEL_313;
    }
    v974 = v372;
    sub_10052F9F0();
    v963(v929, v962, v975);
    uint64_t v374 = v971;
    uint64_t v375 = v947;
    v376 = *(NSObject **)(v947 + 16);
    uint64_t v377 = v949;
    ((void (*)(uint64_t, char *, uint64_t))v376)(v949, v373, v971);
    unint64_t v378 = (*(unsigned __int8 *)(v375 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v375 + 80);
    uint64_t v379 = swift_allocObject();
    v380 = *(void (**)(unint64_t, uint64_t, uint64_t))(v375 + 32);
    v380(v379 + v378, v377, v374);
    uint64_t v381 = swift_allocObject();
    *(void *)(v381 + 16) = sub_100385A94;
    *(void *)(v381 + 24) = v379;
    v915 = v376;
    ((void (*)(uint64_t, uint64_t, uint64_t))v376)(v377, v930, v374);
    uint64_t v382 = swift_allocObject();
    v380(v382 + v378, v377, v374);
    uint64_t v383 = swift_allocObject();
    *(void *)(v383 + 16) = sub_100385A94;
    *(void *)(v383 + 24) = v382;
    v384 = sub_100530900();
    LODWORD(v377) = sub_1005357E0();
    uint64_t v385 = swift_allocObject();
    *(unsigned char *)(v385 + 16) = 34;
    uint64_t v386 = swift_allocObject();
    *(unsigned char *)(v386 + 16) = 8;
    uint64_t v387 = swift_allocObject();
    *(void *)(v387 + 16) = sub_10038605C;
    *(void *)(v387 + 24) = v381;
    uint64_t v388 = swift_allocObject();
    *(void *)(v388 + 16) = sub_100386054;
    *(void *)(v388 + 24) = v387;
    uint64_t v389 = swift_allocObject();
    *(unsigned char *)(v389 + 16) = 34;
    uint64_t v390 = swift_allocObject();
    *(unsigned char *)(v390 + 16) = 8;
    uint64_t v391 = swift_allocObject();
    *(void *)(v391 + 16) = sub_10038605C;
    *(void *)(v391 + 24) = v383;
    uint64_t v392 = swift_allocObject();
    *(void *)(v392 + 16) = sub_100386054;
    *(void *)(v392 + 24) = v391;
    uint64_t v393 = swift_allocObject();
    *(_OWORD *)(v393 + 16) = v934;
    *(void *)(v393 + 32) = sub_1003861E0;
    *(void *)(v393 + 40) = v385;
    *(void *)(v393 + 48) = sub_1003861E0;
    *(void *)(v393 + 56) = v386;
    *(void *)(v393 + 64) = sub_100385490;
    *(void *)(v393 + 72) = v388;
    *(void *)(v393 + 80) = sub_1003861E0;
    *(void *)(v393 + 88) = v389;
    *(void *)(v393 + 96) = sub_1003861E0;
    *(void *)(v393 + 104) = v390;
    *(void *)(v393 + 112) = sub_100385490;
    *(void *)(v393 + 120) = v392;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    LODWORD(v960) = v377;
    if (os_log_type_enabled(v384, (os_log_type_t)v377))
    {
      v890 = v384;
      uint64_t v394 = swift_slowAlloc();
      v980 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v394 = 514;
      *(unsigned char *)(v394 + 2) = *(unsigned char *)(v385 + 16);
      v296 = v977;
      if (v977) {
        goto LABEL_333;
      }
      swift_release();
      *(unsigned char *)(v394 + 3) = *(unsigned char *)(v386 + 16);
      uint64_t v395 = swift_release();
      uint64_t v396 = (*(uint64_t (**)(uint64_t))(v388 + 16))(v395);
      *(void *)(v394 + 4) = sub_10037ECEC(v396, v397, (uint64_t *)&v980);
      swift_bridgeObjectRelease();
      swift_release();
      *(unsigned char *)(v394 + 12) = *(unsigned char *)(v389 + 16);
      swift_release();
      *(unsigned char *)(v394 + 13) = *(unsigned char *)(v390 + 16);
      uint64_t v398 = swift_release();
      uint64_t v399 = (*(uint64_t (**)(uint64_t))(v392 + 16))(v398);
      *(void *)(v394 + 14) = sub_10037ECEC(v399, v400, (uint64_t *)&v980);
      swift_bridgeObjectRelease();
      swift_release();
      os_log_t v401 = v890;
      _os_log_impl((void *)&_mh_execute_header, v890, (os_log_type_t)v960, "[Remove] Moving item %{public}s to %{public}s", (uint8_t *)v394, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v960 = (void (**)(uint8_t **__return_ptr, uint64_t))v950->isa;
      ((void (*)(char *, uint64_t))v960)(v929, v975);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      v960 = (void (**)(uint8_t **__return_ptr, uint64_t))v950->isa;
      ((void (*)(char *, uint64_t))v960)(v929, v975);
      v296 = v977;
    }
    uint64_t v326 = v968;
    uint64_t v523 = v921;
    uint64_t v524 = v921 + *(int *)(v922 + 48);
    v525 = v923;
    uint64_t v526 = v971;
    os_log_t v527 = v915;
    ((void (*)(void, char *, uint64_t))v915)(v921, v923, v971);
    uint64_t v528 = v930;
    ((void (*)(uint64_t, uint64_t, uint64_t))v527)(v524, v930, v526);
    sub_10036EF50(v523);
    v529 = *v927;
    (*v927)((char *)v528, v526);
    v529(v525, v526);
    v350 = v970;
    uint64_t v338 = v973;
    goto LABEL_116;
  }
LABEL_140:
  uint64_t v402 = (uint64_t)v933;
  v403 = (char *)v928;
  sub_10052F9F0();
  uint64_t v404 = (uint64_t)v985;
  swift_bridgeObjectRetain();
  char v405 = sub_100367B4C(v402, v404);
  swift_bridgeObjectRelease();
  if (v405)
  {
    v974 = v372;
    sub_100384118(v402);
    uint64_t v406 = v975;
    v963(v403, v962, v975);
    v407 = v403;
    uint64_t v408 = v947;
    uint64_t v409 = v949;
    uint64_t v410 = v971;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v947 + 16))(v949, v402, v971);
    unint64_t v411 = (*(unsigned __int8 *)(v408 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v408 + 80);
    uint64_t v412 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v408 + 32))(v412 + v411, v409, v410);
    uint64_t v413 = swift_allocObject();
    *(void *)(v413 + 16) = sub_100385A94;
    *(void *)(v413 + 24) = v412;
    v414 = sub_100530900();
    os_log_type_t v415 = sub_1005357E0();
    uint64_t v416 = swift_allocObject();
    *(unsigned char *)(v416 + 16) = 34;
    uint64_t v417 = swift_allocObject();
    *(unsigned char *)(v417 + 16) = 8;
    uint64_t v418 = swift_allocObject();
    *(void *)(v418 + 16) = sub_10038605C;
    *(void *)(v418 + 24) = v413;
    uint64_t v419 = swift_allocObject();
    *(void *)(v419 + 16) = sub_100386054;
    *(void *)(v419 + 24) = v418;
    uint64_t v420 = swift_allocObject();
    *(_OWORD *)(v420 + 16) = v910;
    *(void *)(v420 + 32) = sub_1003861E0;
    *(void *)(v420 + 40) = v416;
    *(void *)(v420 + 48) = sub_1003861E0;
    *(void *)(v420 + 56) = v417;
    *(void *)(v420 + 64) = sub_100385490;
    *(void *)(v420 + 72) = v419;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v414, v415))
    {
      uint64_t v421 = swift_slowAlloc();
      v980 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v421 = 258;
      *(unsigned char *)(v421 + 2) = *(unsigned char *)(v416 + 16);
      if (v977) {
        goto LABEL_334;
      }
      swift_release();
      *(unsigned char *)(v421 + 3) = *(unsigned char *)(v417 + 16);
      uint64_t v422 = swift_release();
      uint64_t v423 = (*(uint64_t (**)(uint64_t))(v419 + 16))(v422);
      *(void *)(v421 + 4) = sub_10037ECEC(v423, v424, (uint64_t *)&v980);
      swift_bridgeObjectRelease();
      uint64_t v425 = v406;
      v296 = 0;
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v414, v415, "Deleting item %{public}s", (uint8_t *)v421, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      ((void (*)(void, uint64_t))v960)(v928, v425);
      (*v927)(v933, v971);
      goto LABEL_166;
    }
LABEL_114:

    swift_release();
    swift_release();
    swift_release();
    ((void (*)(char *, uint64_t))v960)(v407, v406);
    (*v927)((char *)v402, v410);
    uint64_t v338 = v973;
    uint64_t v326 = v968;
    v296 = v977;
    goto LABEL_115;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v532 = v873;
  uint64_t v533 = v975;
  v963(v873, v962, v975);
  v534 = sub_100530900();
  os_log_type_t v535 = sub_1005357C0();
  uint64_t v536 = sub_100351BF4(0);
  if (os_log_type_enabled(v534, v535))
  {
    v537 = (uint8_t *)swift_slowAlloc();
    v978[0] = 0;
    *(_WORD *)v537 = 0;
    v979 = 0;
    v980 = v537 + 2;
    sub_10036F140(v536, (uint64_t)&v980, (uint64_t)v978, (uint64_t)&v979);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v534, v535, "Tried to delete an index path from the visible items diff that is not present in the visible index paths set. The visible index paths are likely not consecutive and the diff would be inconsistent, bailing and reloading data.", v537, 2u);
    swift_slowDealloc();
    swift_release();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  sub_100121638(v956);
  sub_100121638(v938);
  sub_100121638(v859);

  ((void (*)(char *, uint64_t))v960)(v532, v533);
  (*v927)(v933, v971);
  (*v879)(v968, v914);
  (*v880)(v913, v958);
  v356(v919, v973);
  swift_release();
  (*(void (**)(char *, uint64_t))(v937 + 8))(v892, v918);
  v614 = v970;
  LOBYTE(v941->isa) = 1;
  (*v944)((uint8_t **)v372, (uint64_t)v614);
LABEL_226:
  swift_release();
LABEL_227:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_228:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100379284()
{
  if (qword_10066E380 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100530920();

  return sub_10000EA90(v0, (uint64_t)qword_10066F228);
}

uint64_t sub_1003792E8()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();

  return swift_getAssociatedTypeWitness();
}

uint64_t sub_100379380@<X0>(unsigned char *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t result = sub_100534BF0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100379468@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 32);
  Swift::Int v7 = v6(a1, a2);
  sub_10038082C(&v11, v7, v8);
  swift_bridgeObjectRelease();
  uint64_t result = v6(a1, a2);
  *a3 = result;
  a3[1] = v10;
  return result;
}

uint64_t sub_100379528(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  char v9 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 32);
  uint64_t v10 = v9(a4, a5);
  uint64_t v12 = v11;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *a3;
  *a3 = 0x8000000000000000;
  sub_100382490(a1, v10, v12, isUniquelyReferenced_nonNull_native);
  *a3 = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9(a4, a5);
}

uint64_t sub_10037960C(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  uint64_t v59 = a4;
  uint64_t v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v11 = __chkstk_darwin(a1);
  uint64_t v55 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v53 = (char *)&v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v41 = (char *)&v40 - v17;
  uint64_t v18 = sub_100535F20();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v51 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v40 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v40 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v50 = *((void *)v15 - 1);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  uint64_t v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v30 = (char *)&v40 - v29;
  Swift::Int v31 = sub_100534F80();
  uint64_t v61 = sub_100536310();
  uint64_t v56 = sub_100536320();
  sub_1005362B0(v31);
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  uint64_t v59 = v30;
  uint64_t result = sub_100534F70();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    uint64_t v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_100535F90();
      uint64_t result = (*v33)(v23, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v23, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v23, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v23, AssociatedTypeWitness);
      sub_100536300();
      if (!--v31)
      {
        uint64_t v35 = v54;
        uint64_t v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  uint64_t v36 = v51;
LABEL_9:
  sub_100535F90();
  uint64_t v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    uint64_t v38 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v39 = v41;
    uint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_100536300();
      sub_100535F90();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

void (*sub_100379D08(void *a1, uint64_t a2))(void *a1)
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  void v4[4] = sub_100383EF4(v4, a2);
  return sub_100379D68;
}

void sub_100379D68(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

void (*sub_100379DB4(void *a1, uint64_t a2, uint64_t a3, void *a4))(void *a1)
{
  uint64_t v8 = malloc(0x38uLL);
  *a1 = v8;
  v8[4] = a3;
  uint64_t v8[5] = a4;
  swift_bridgeObjectRetain();
  void v8[6] = sub_100383FE4(v8, a2, a3, a4);
  return sub_100379E40;
}

void sub_100379E40(void *a1)
{
  uint64_t v1 = (void *)*a1;
  uint64_t v2 = *(void **)(*a1 + 40);
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_bridgeObjectRelease();

  free(v1);
}

uint64_t sub_100379EA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t a10)
{
  uint64_t v31 = a8;
  uint64_t v15 = sub_10052FA30();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v19 = a3(a1, a2);
  if ((v19 & 1) == 0 || !a5) {
    return v19 & 1;
  }
  swift_retain();
  if ((a5(a1, a2) & 1) != 0
    || (uint64_t v29 = v16,
        uint64_t v30 = a7,
        swift_getAssociatedTypeWitness(),
        swift_getAssociatedConformanceWitness(),
        swift_getAssociatedTypeWitness(),
        swift_getAssociatedConformanceWitness(),
        uint64_t v20 = sub_1005306E0(),
        (v21 & 1) != 0))
  {
    sub_100121638((uint64_t)a5);
    return v19 & 1;
  }
  uint64_t v22 = v20;
  uint64_t v23 = *a9;
  uint64_t v24 = *(void *)(*a9 + 16);
  if (v24)
  {
    unint64_t v25 = sub_100367FB4(a10);
    if (v26) {
      uint64_t v24 = *(void *)(*(void *)(v23 + 56) + 8 * v25);
    }
    else {
      uint64_t v24 = 0;
    }
  }
  uint64_t result = v22 + v24;
  if (!__OFADD__(v22, v24))
  {
    sub_10052F9F0();
    type metadata accessor for AIDiffingUpdate();
    sub_100384118((uint64_t)v18);
    sub_100121638((uint64_t)a5);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v18, v15);
    return v19 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_10037A100(uint64_t a1, uint64_t a2)
{
  if (*(void *)(*(void *)(a1 + 16) + 16)) {
    sub_100367FB4(a2);
  }
  swift_endAccess();
  sub_10000BB04(&qword_10066F3F8);
  return sub_100534D70();
}

uint64_t sub_10037A198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10052FA30();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v11 = *(void *)(a3 + 16);
  if (a2)
  {
    swift_retain();
    sub_10038482C(a1, v10, v11, (void *)(a2 + 16), a2 + 32);
    char v13 = v12;
    swift_release();
    LOBYTE(v11) = (v13 & 1) == 0;
  }
  else if (v11)
  {
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v16 = v17;
    uint64_t v18 = *(void *)(v15 + 56);
    uint64_t v19 = v11 - 1;
    do
    {
      uint64_t v20 = v19;
      v16(v9, v10, v6);
      sub_10038600C(&qword_10066F160, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      LOBYTE(v11) = sub_100534BF0();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v9, v6);
      if (v11) {
        break;
      }
      uint64_t v19 = v20 - 1;
      v10 += v18;
    }
    while (v20);
  }
  return v11 & 1;
}

uint64_t sub_10037A35C(uint64_t a1)
{
  uint64_t v2 = sub_10052FA30();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v40 = (char *)v27 - v7;
  uint64_t v8 = sub_10000BB04(&qword_10066F3B8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = *(void *)(a1 + 16);
  v27[2] = a1;
  if (v37)
  {
    char v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    char v12 = v13;
    unint64_t v32 = (*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64);
    uint64_t v36 = a1 + v32;
    uint64_t v39 = *(void *)(v11 + 56);
    uint64_t v34 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v31 = (void (**)(uint64_t, char *, uint64_t))(v11 + 16);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    swift_bridgeObjectRetain();
    uint64_t v15 = 0;
    uint64_t v35 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 40);
    v27[1] = (v11 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v16 = (uint64_t)v40;
    uint64_t v33 = v10;
    uint64_t v28 = v13;
    uint64_t v29 = v11;
    while (1)
    {
      v12(v10, v36 + v39 * v15, v2);
      uint64_t v17 = *v35;
      (*v35)(v10, 0, 1, v2);
      if ((*v34)(v10, 1, v2) == 1) {
        return swift_bridgeObjectRelease();
      }
      uint64_t v30 = v17;
      (*v31)(v16, v10, v2);
      uint64_t v19 = *v38;
      uint64_t v18 = v38[1];
      uint64_t v20 = v18 + v32;
      uint64_t v21 = *(void *)(v18 + 16);
      if (*v38)
      {
        swift_retain();
        char v12 = v28;
        sub_10038482C(v16, v20, v21, (void *)(v19 + 16), v19 + 32);
        char v23 = v22;
        swift_release();
        if ((v23 & 1) == 0) {
          goto LABEL_4;
        }
        uint64_t v16 = (uint64_t)v40;
      }
      else if (v21)
      {
        do
        {
          v12(v6, v20, v2);
          sub_10038600C(&qword_10066F160, (void (*)(uint64_t))&type metadata accessor for IndexPath);
          char v24 = sub_100534BF0();
          (*v14)(v6, v2);
          if (v24) {
            goto LABEL_4;
          }
          uint64_t v16 = (uint64_t)v40;
          v20 += v39;
        }
        while (--v21);
      }
      sub_10038432C(v16);
LABEL_4:
      ++v15;
      uint64_t v16 = (uint64_t)v40;
      (*v14)(v40, v2);
      uint64_t v10 = v33;
      if (v15 == v37)
      {
        v30(v33, 1, 1, v2);
        return swift_bridgeObjectRelease();
      }
    }
  }
  unint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  swift_bridgeObjectRetain();
  v25(v10, 1, 1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10037A708(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10052FA30();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v30 - v9;
  uint64_t v11 = sub_10000BB04(&qword_10066F3B8);
  __chkstk_darwin(v11 - 8);
  char v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = *(void *)(a2 + 16);
  v30[1] = a2;
  v30[2] = a1;
  if (v39)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v14 = v5 + 16;
    uint64_t v15 = v16;
    unint64_t v34 = (*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64);
    uint64_t v38 = a2 + v34;
    uint64_t v41 = *(void *)(v14 + 56);
    uint64_t v36 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 32);
    uint64_t v33 = (void (**)(char *, char *, uint64_t))(v14 + 16);
    uint64_t v17 = (void (**)(char *, uint64_t))(v14 - 8);
    swift_retain();
    swift_retain();
    uint64_t v18 = 0;
    uint64_t v37 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 40);
    v30[0] = (v14 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v35 = v13;
    uint64_t v42 = v10;
    v30[3] = v14;
    unint64_t v32 = v16;
    while (1)
    {
      v15(v13, v38 + v41 * v18, v4);
      uint64_t v19 = *v37;
      (*v37)(v13, 0, 1, v4);
      if ((*v36)(v13, 1, v4) == 1) {
        goto LABEL_15;
      }
      uint64_t v31 = v19;
      (*v33)(v10, v13, v4);
      uint64_t v21 = *v40;
      uint64_t v20 = v40[1];
      uint64_t v22 = (uint64_t)v10;
      uint64_t v23 = v20 + v34;
      uint64_t v24 = *(void *)(v20 + 16);
      if (*v40)
      {
        swift_retain();
        sub_10038482C(v22, v23, v24, (void *)(v21 + 16), v21 + 32);
        char v26 = v25;
        swift_release();
        uint64_t v15 = v32;
        if ((v26 & 1) == 0) {
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t v15 = v32;
        if (v24)
        {
          do
          {
            v15(v8, v23, v4);
            sub_10038600C(&qword_10066F160, (void (*)(uint64_t))&type metadata accessor for IndexPath);
            char v27 = sub_100534BF0();
            (*v17)(v8, v4);
            if (v27) {
              goto LABEL_4;
            }
            v23 += v41;
          }
          while (--v24);
        }
      }
      sub_10038432C((uint64_t)v42);
LABEL_4:
      ++v18;
      uint64_t v10 = v42;
      (*v17)(v42, v4);
      char v13 = v35;
      if (v18 == v39)
      {
        v31(v35, 1, 1, v4);
        goto LABEL_15;
      }
    }
  }
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  swift_retain();
  swift_retain();
  v28(v13, 1, 1, v4);
LABEL_15:
  swift_release();
  return swift_release();
}

uint64_t UICollectionView.calculateAIDiff<A>(oldItems:newItems:startingSectionIndex:finalSectionIndex:modelUpdateHandler:identityComparator:visualComparator:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, NSObject *a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, objc_class *a7@<X6>, uint64_t a8@<X7>, NSObject *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, NSObject *a14)
{
  int v23 = a5 & 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v20 = [v14 indexPathsForVisibleItems];
  sub_10052FA30();
  uint64_t v21 = sub_1005350E0();

  sub_100121440(a6);
  sub_100121440(a8);
  sub_100121440(a11);
  return sub_10036F330(a1, a2, v21, a3, a4, v23, a6, a7, a9, a8, a10, a11, a12, a13, a14);
}

uint64_t UICollectionView.calculateAIDiff<A>(oldItems:newItems:sectionIndex:modelUpdateHandler:identityComparator:visualComparator:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, NSObject *a3@<X2>, uint64_t a4@<X3>, objc_class *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, NSObject *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v45 = a4;
  uint64_t v49 = a7;
  uint64_t v50 = a8;
  uint64_t v46 = a5;
  uint64_t v51 = a9;
  uint64_t v52 = a3;
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v47 = a10;
  uint64_t v48 = a6;
  uint64_t v11 = *(void *)(a11 - 8);
  __chkstk_darwin(a1);
  char v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for _DiffableSection();
  uint64_t v53 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (uint64_t *)((char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  uint64_t v19 = (uint64_t *)((char *)&v41 - v18);
  id v20 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v20(v13, v41, a11);
  uint64_t v54 = v19;
  void *v19 = 0;
  v19[1] = 0xE000000000000000;
  uint64_t v21 = (char *)v19 + *(int *)(v14 + 44);
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v22(v21, v13, a11);
  v20(v13, v42, a11);
  void *v17 = 0;
  v17[1] = 0xE000000000000000;
  int v23 = (char *)v17 + *(int *)(v14 + 44);
  uint64_t v43 = v17;
  v22(v23, v13, a11);
  sub_100536710();
  uint64_t v24 = v53;
  swift_allocObject();
  uint64_t v25 = sub_100535110();
  char v26 = *(void (**)(uint64_t, void *, uint64_t))(v24 + 16);
  v26(v27, v54, v14);
  sub_1003528E0();
  swift_allocObject();
  uint64_t v28 = sub_100535110();
  v26(v29, v17, v14);
  sub_1003528E0();
  id v30 = [v44 indexPathsForVisibleItems];
  sub_10052FA30();
  uint64_t v31 = sub_1005350E0();

  uint64_t v33 = v45;
  unint64_t v32 = v46;
  sub_100121440(v45);
  uint64_t v34 = v48;
  uint64_t v35 = v49;
  sub_100121440(v48);
  uint64_t v36 = v50;
  uint64_t v37 = v47;
  sub_100121440(v50);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_10036F330(v25, v28, v31, (uint64_t)v52, v52, 0, v33, v32, v51, v34, v35, v36, v37, v14, WitnessTable);
  uint64_t v39 = *(void (**)(void *, uint64_t))(v53 + 8);
  v39(v43, v14);
  return ((uint64_t (*)(void *, uint64_t))v39)(v54, v14);
}

uint64_t type metadata accessor for _DiffableSection()
{
  return sub_100086CCC();
}

uint64_t UICollectionView.performSectionedAIDiff<A>(oldItems:newItems:startingSectionIndex:finalSectionIndex:animated:modelUpdateHandler:identityComparator:visualComparator:alongsideUpdates:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4, char a5, int a6, uint64_t a7, objc_class *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void (*a13)(void), uint64_t a14, void (*a15)(uint64_t), uint64_t a16, uint64_t a17, NSObject *a18)
{
  uint64_t v39 = a3;
  uint64_t v33 = a7;
  uint64_t v34 = a8;
  int v45 = a6;
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v43 = a14;
  id v44 = a13;
  uint64_t v42 = a15;
  uint64_t v40 = a4;
  uint64_t v41 = a16;
  uint64_t v35 = a18;
  uint64_t v36 = a17;
  uint64_t v32 = a11;
  int v37 = a5 & 1;
  uint64_t v19 = type metadata accessor for AIDiffingUpdate();
  uint64_t v38 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v21 = ((char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v22 = [v18 indexPathsForVisibleItems];
  sub_10052FA30();
  uint64_t v23 = sub_1005350E0();

  uint64_t v24 = v33;
  uint64_t v25 = v34;
  sub_100121440(v33);
  sub_100121440(a9);
  uint64_t v26 = v32;
  sub_100121440(v32);
  sub_10036F330(v30, v31, v23, v39, v40, v37, v24, v25, v21, a9, a10, v26, a12, v36, v35);
  sub_10000BB04(&qword_10066F240);
  unint64_t v27 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_10053A3B0;
  sub_10037EA5C((uint64_t)v21, v28 + v27);
  UICollectionView.applyUpdates(_:animated:alongsideUpdates:completion:)(v28, v45, v44, v43, v42, v41);
  swift_bridgeObjectRelease();
  return sub_10037EAC0((uint64_t)v21);
}

uint64_t UICollectionView.applyUpdates(_:animated:alongsideUpdates:completion:)(uint64_t a1, int a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v137 = a6;
  uint64_t v143 = a5;
  uint64_t v144 = a3;
  int v134 = a2;
  uint64_t v10 = sub_10052F970();
  uint64_t v132 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v131 = (char *)&v131 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (int *)type metadata accessor for AIDiffingUpdate();
  uint64_t v155 = (void *)*((void *)v12 - 1);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v131 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v131 - v16;
  swift_unknownObjectWeakInit();
  if (qword_10066E380 != -1) {
    goto LABEL_47;
  }
  while (1)
  {
    uint64_t v18 = sub_100530920();
    uint64_t v19 = sub_10000EA90(v18, (uint64_t)qword_10066F228);
    swift_bridgeObjectRetain();
    uint64_t v135 = v19;
    uint64_t v20 = sub_100530900();
    os_log_type_t v21 = sub_1005357E0();
    BOOL v22 = os_log_type_enabled(v20, v21);
    id v136 = v7;
    if (v22)
    {
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 134217984;
      *(void *)(v23 + 4) = *(void *)(a1 + 16);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "applyUpdates called with %ld updates", (uint8_t *)v23, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    uint64_t v145 = swift_allocBox();
    uint64_t v25 = v24;
    _s14MusicUtilities15AIDiffingUpdateV19insertedSectionsSet10Foundation05IndexG0Vvpfi_0();
    uint64_t v133 = v10;
    uint64_t v146 = swift_allocBox();
    uint64_t v152 = v26;
    _s14MusicUtilities15AIDiffingUpdateV19insertedSectionsSet10Foundation05IndexG0Vvpfi_0();
    uint64_t v27 = swift_allocObject();
    uint64_t v148 = v27;
    *(void *)(v27 + 16) = _swiftEmptyArrayStorage;
    uint64_t v153 = (void *)(v27 + 16);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = 0;
    uint64_t v149 = v10 + 16;
    *(void *)(v10 + 24) = _swiftEmptyArrayStorage;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = 0;
    uint64_t v150 = v28 + 16;
    *(void *)(v28 + 24) = _swiftEmptyArrayStorage;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = 0;
    uint64_t v151 = v29 + 16;
    uint64_t v141 = v29;
    *(void *)(v29 + 24) = _swiftEmptyArrayStorage;
    uint64_t v30 = swift_allocObject();
    uint64_t v140 = v30;
    *(void *)(v30 + 16) = _swiftEmptyArrayStorage;
    uint64_t v154 = (void *)(v30 + 16);
    uint64_t v31 = *(void *)(a1 + 16);
    uint64_t v147 = v28;
    uint64_t v139 = v10;
    uint64_t v142 = a4;
    uint64_t v138 = a1;
    if (!v31)
    {
LABEL_14:
      uint64_t v41 = sub_100530900();
      os_log_type_t v42 = sub_1005357E0();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v43 = 0;
        _os_log_impl((void *)&_mh_execute_header, v41, v42, "Final update:", v43, 2u);
        swift_slowDealloc();
      }

      swift_retain_n();
      id v44 = sub_100530900();
      os_log_type_t v45 = sub_1005357E0();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v46 = 136315138;
        swift_beginAccess();
        uint64_t v47 = v132;
        uint64_t v48 = v131;
        uint64_t v49 = v133;
        (*(void (**)(char *, uint64_t, uint64_t))(v132 + 16))(v131, v25, v133);
        sub_10038600C(&qword_10066F248, (void (*)(uint64_t))&type metadata accessor for IndexSet);
        uint64_t v50 = sub_100536700();
        unint64_t v52 = v51;
        (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v49);
        *(void *)(v46 + 4) = sub_10037ECEC(v50, v52, aBlock);
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v44, v45, " - Inserted sections: %s", (uint8_t *)v46, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      swift_retain_n();
      uint64_t v53 = sub_100530900();
      os_log_type_t v54 = sub_1005357E0();
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v55 = swift_slowAlloc();
        uint64_t v155 = (void *)swift_slowAlloc();
        aBlock[0] = (uint64_t)v155;
        *(_DWORD *)uint64_t v55 = 136315138;
        uint64_t v56 = v152;
        swift_beginAccess();
        uint64_t v57 = v132;
        uint64_t v58 = v131;
        uint64_t v59 = v56;
        uint64_t v60 = v133;
        (*(void (**)(char *, uint64_t, uint64_t))(v132 + 16))(v131, v59, v133);
        sub_10038600C(&qword_10066F248, (void (*)(uint64_t))&type metadata accessor for IndexSet);
        uint64_t v61 = sub_100536700();
        unint64_t v63 = v62;
        (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v60);
        *(void *)(v55 + 4) = sub_10037ECEC(v61, v63, aBlock);
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v53, v54, " - Deleted sections: %s", (uint8_t *)v55, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      swift_retain_n();
      uint64_t v64 = sub_100530900();
      os_log_type_t v65 = sub_1005357E0();
      if (os_log_type_enabled(v64, v65))
      {
        uint64_t v66 = swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v66 = 136315138;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_10000BB04(&qword_10066E538);
        uint64_t v67 = sub_1005350F0();
        unint64_t v69 = v68;
        swift_bridgeObjectRelease();
        *(void *)(v66 + 4) = sub_10037ECEC(v67, v69, aBlock);
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v64, v65, " - Section move pairs: %s", (uint8_t *)v66, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      swift_retain_n();
      uint64_t v70 = sub_100530900();
      os_log_type_t v71 = sub_1005357E0();
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v72 = swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v72 = 136315138;
        swift_beginAccess();
        sub_10052FA30();
        swift_retain();
        uint64_t v73 = sub_1005350F0();
        unint64_t v75 = v74;
        swift_release();
        *(void *)(v72 + 4) = sub_10037ECEC(v73, v75, aBlock);
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v70, v71, " - Inserted index paths: %s", (uint8_t *)v72, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      swift_retain_n();
      uint64_t v76 = sub_100530900();
      os_log_type_t v77 = sub_1005357E0();
      if (os_log_type_enabled(v76, v77))
      {
        uint64_t v78 = swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v78 = 136315138;
        swift_beginAccess();
        sub_10052FA30();
        swift_retain();
        uint64_t v79 = sub_1005350F0();
        unint64_t v81 = v80;
        swift_release();
        *(void *)(v78 + 4) = sub_10037ECEC(v79, v81, aBlock);
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v76, v77, " - Deleted index paths: %s", (uint8_t *)v78, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      uint64_t v82 = v141;
      swift_retain_n();
      uint64_t v83 = sub_100530900();
      os_log_type_t v84 = sub_1005357E0();
      if (os_log_type_enabled(v83, v84))
      {
        uint64_t v85 = swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v85 = 136315138;
        swift_beginAccess();
        sub_10052FA30();
        swift_retain();
        uint64_t v86 = sub_1005350F0();
        unint64_t v88 = v87;
        swift_release();
        uint64_t v89 = v141;
        *(void *)(v85 + 4) = sub_10037ECEC(v86, v88, aBlock);
        swift_release_n();
        uint64_t v82 = v89;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v83, v84, " - Updated index paths: %s", (uint8_t *)v85, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      uint64_t v90 = v140;
      swift_retain_n();
      uint64_t v91 = sub_100530900();
      os_log_type_t v92 = sub_1005357E0();
      if (os_log_type_enabled(v91, v92))
      {
        uint64_t v93 = swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v93 = 136315138;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_10000BB04(&qword_10066EF20);
        uint64_t v94 = sub_1005350F0();
        unint64_t v96 = v95;
        swift_bridgeObjectRelease();
        uint64_t v97 = v141;
        *(void *)(v93 + 4) = sub_10037ECEC(v94, v96, aBlock);
        swift_release_n();
        uint64_t v82 = v97;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v91, v92, " - Item move pairs: %s", (uint8_t *)v93, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      id v98 = v136;
      a1 = v138;
      uint64_t v99 = v147;
      uint64_t v10 = v139;
      char v100 = v134;
      uint64_t v101 = v146;
      goto LABEL_41;
    }
    if (v31 == 1) {
      break;
    }
    uint64_t v7 = (void *)(a1 + ((*((unsigned __int8 *)v155 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v155 + 80)));
    swift_bridgeObjectRetain();
    a4 = 0;
    while (1)
    {
      a1 = a4 + 1;
      if (__OFADD__(a4, 1)) {
        break;
      }
      sub_10037EA5C((uint64_t)v7 + v155[9] * a4, (uint64_t)v15);
      if (*v15 == 1)
      {
        uint64_t v102 = v138;
        swift_bridgeObjectRelease();
        sub_10037CAB8(v102, (uint64_t)v158, v144, v142, v143);
        sub_10037EAC0((uint64_t)v15);
        swift_unknownObjectWeakDestroy();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_39;
      }
      sub_10052F950();
      sub_10052F950();
      uint64_t v32 = swift_bridgeObjectRetain();
      sub_10036BAF0(v32);
      uint64_t v33 = (uint64_t *)&v15[v12[9]];
      uint64_t v34 = *v33;
      uint64_t v35 = v33[1];
      swift_retain();
      swift_retain();
      sub_10037A708(v34, v35);
      swift_release();
      swift_release();
      uint64_t v36 = (uint64_t *)&v15[v12[10]];
      uint64_t v37 = *v36;
      uint64_t v38 = v36[1];
      swift_retain();
      swift_retain();
      sub_10037A708(v37, v38);
      swift_release();
      swift_release();
      uint64_t v39 = &v15[v12[11]];
      uint64_t v17 = *(unsigned char **)v39;
      uint64_t v10 = *((void *)v39 + 1);
      swift_retain();
      swift_retain();
      sub_10037A708((uint64_t)v17, v10);
      swift_release();
      swift_release();
      size_t v40 = swift_bridgeObjectRetain();
      sub_10036BBD4(v40);
      sub_10037EAC0((uint64_t)v15);
      ++a4;
      if (a1 == v31)
      {
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_47:
    swift_once();
  }
  sub_10037EA5C(a1 + ((*((unsigned __int8 *)v155 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v155 + 80)), (uint64_t)v17);
  if (*v17 == 1)
  {
    sub_10037CAB8(a1, (uint64_t)v158, v144, a4, v143);
    sub_10037EAC0((uint64_t)v17);
    swift_unknownObjectWeakDestroy();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
LABEL_39:
    swift_release();
    swift_release();
LABEL_43:
    swift_release();
    uint64_t v124 = 0;
    return sub_100121638((uint64_t)v124);
  }
  uint64_t v103 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v132 + 24);
  uint64_t v104 = v133;
  v103(v25, &v17[v12[6]], v133);
  v103(v152, &v17[v12[7]], v104);
  *uint64_t v153 = *(void *)&v17[v12[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v105 = &v17[v12[9]];
  uint64_t v106 = v105[1];
  *(void *)(v10 + 16) = *v105;
  *(void *)(v10 + 24) = v106;
  swift_retain();
  swift_retain();
  swift_release();
  swift_release();
  uint64_t v107 = &v17[v12[10]];
  uint64_t v108 = v107[1];
  *(void *)(v147 + 16) = *v107;
  *(void *)(v147 + 24) = v108;
  swift_retain();
  swift_retain();
  swift_release();
  swift_release();
  uint64_t v109 = &v17[v12[11]];
  uint64_t v110 = v109[1];
  uint64_t v111 = v141;
  *(void *)(v141 + 16) = *v109;
  *(void *)(v111 + 24) = v110;
  swift_retain();
  swift_retain();
  uint64_t v99 = v147;
  swift_release();
  swift_release();
  uint64_t v112 = *(void *)&v17[v12[12]];
  swift_bridgeObjectRetain();
  sub_10037EAC0((uint64_t)v17);
  void *v154 = v112;
  swift_bridgeObjectRelease();
  id v98 = v136;
  uint64_t v90 = v140;
  uint64_t v101 = v146;
  char v100 = v134;
  uint64_t v82 = v111;
LABEL_41:
  uint64_t v113 = (void *)swift_allocObject();
  v113[2] = v98;
  v113[3] = a1;
  uint64_t v114 = v145;
  v113[4] = v101;
  v113[5] = v114;
  v113[6] = v148;
  v113[7] = v10;
  v113[8] = v99;
  v113[9] = v90;
  uint64_t v115 = v142;
  v113[10] = v144;
  v113[11] = v115;
  uint64_t v116 = v143;
  v113[12] = v82;
  v113[13] = v116;
  uint64_t v117 = v82;
  uint64_t v118 = v137;
  v113[14] = v137;
  if (v100)
  {
    swift_bridgeObjectRetain();
    uint64_t v119 = v145;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v120 = v143;
    sub_100121440((uint64_t)v143);
    uint64_t v121 = v144;
    uint64_t v122 = v142;
    sub_100121440((uint64_t)v144);
    id v123 = v98;
    sub_10037CD24(v123, a1, v146, v119, v148, v10, v147, v140, (uint64_t)v121, v122, v117, (uint64_t)v120, v118);
    swift_release();
    swift_unknownObjectWeakDestroy();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_43;
  }
  uint64_t v155 = self;
  uint64_t v125 = swift_allocObject();
  *(void *)(v125 + 16) = sub_10037EC84;
  *(void *)(v125 + 24) = v113;
  uint64_t v126 = swift_allocObject();
  uint64_t v124 = sub_10011C994;
  *(void *)(v126 + 16) = sub_10011C994;
  *(void *)(v126 + 24) = v125;
  aBlock[4] = (uint64_t)sub_1001BA934;
  uint64_t v157 = (void *)v126;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1001F5E38;
  aBlock[3] = (uint64_t)&unk_10062DF08;
  uint64_t v154 = _Block_copy(aBlock);
  uint64_t v153 = v157;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100121440((uint64_t)v143);
  sub_100121440((uint64_t)v144);
  id v127 = v136;
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v128 = v154;
  [v155 performWithoutAnimation:v154];
  _Block_release(v128);
  swift_release();
  swift_unknownObjectWeakDestroy();
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0) {
    return sub_100121638((uint64_t)v124);
  }
  __break(1u);
  return result;
}

uint64_t UICollectionView.performAIDiff<A>(oldItems:newItems:sectionIndex:animated:modelUpdateHandler:identityComparator:visualComparator:completion:)(uint64_t a1, uint64_t a2, NSObject *a3, int a4, uint64_t a5, objc_class *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(uint64_t), uint64_t a12, long long a13)
{
  uint64_t v27 = a8;
  uint64_t v25 = a6;
  uint64_t v26 = a7;
  uint64_t v24 = a5;
  int v30 = a4;
  uint64_t v28 = a12;
  uint64_t v29 = a11;
  long long v23 = a13;
  uint64_t v16 = type metadata accessor for AIDiffingUpdate();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = ((char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  UICollectionView.calculateAIDiff<A>(oldItems:newItems:sectionIndex:modelUpdateHandler:identityComparator:visualComparator:)(a1, a2, a3, v24, v25, v26, v27, a9, v19, a10, a13);
  sub_10000BB04(&qword_10066F240);
  unint64_t v20 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_10053A3B0;
  sub_10037EA5C((uint64_t)v19, v21 + v20);
  UICollectionView.applyUpdates(_:animated:alongsideUpdates:completion:)(v21, v30, 0, 0, v29, v28);
  swift_bridgeObjectRelease();
  return sub_10037EAC0((uint64_t)v19);
}

void sub_10037CAB8(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v25 = a4;
  uint64_t v8 = type metadata accessor for AIDiffingUpdate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10066E380 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_100530920();
  sub_10000EA90(v12, (uint64_t)qword_10066F228);
  uint64_t v13 = sub_100530900();
  os_log_type_t v14 = sub_1005357E0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Found update with needsReloadData=true, reloading", v15, 2u);
    swift_slowDealloc();
  }

  uint64_t v16 = *(void *)(a1 + 16);
  if (v16)
  {
    uint64_t v24 = a3;
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v18 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_10037EA5C(v17, (uint64_t)v11);
      uint64_t v19 = (void (*)(uint64_t))*((void *)v11 + 1);
      sub_100121440((uint64_t)v19);
      uint64_t v20 = sub_10037EAC0((uint64_t)v11);
      if (v19)
      {
        v19(v20);
        sub_100121638((uint64_t)v19);
      }
      v17 += v18;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    a3 = v24;
  }
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    BOOL v22 = Strong;
    [Strong reloadData];
  }
  if (a3) {
    a3();
  }
  if (a5) {
    a5(1);
  }
}

uint64_t sub_10037CD24(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  sub_10052F970();
  uint64_t v18 = swift_projectBox();
  uint64_t v19 = swift_projectBox();
  uint64_t v20 = a5 + 16;
  uint64_t v21 = a6 + 16;
  uint64_t v22 = a8 + 16;
  id v23 = [a1 indexPathsForVisibleItems];
  sub_10052FA30();
  uint64_t v24 = sub_1005350E0();

  uint64_t v25 = sub_100384FEC(v24);
  swift_bridgeObjectRelease();
  uint64_t v26 = (void *)swift_allocObject();
  v26[2] = a2;
  v26[3] = a1;
  v26[4] = v18;
  v26[5] = v19;
  v26[6] = v20;
  v26[7] = v21;
  v26[8] = a7 + 16;
  v26[9] = v22;
  v26[10] = v25;
  v26[11] = a9;
  v26[12] = a10;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = sub_1003852EC;
  *(void *)(v27 + 24) = v26;
  uint64_t v39 = sub_1001BAC24;
  size_t v40 = (void *)v27;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v36 = 1107296256;
  uint64_t v37 = sub_1001F5E38;
  uint64_t v38 = &unk_10062DFD8;
  uint64_t v28 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v29 = a1;
  sub_100121440(a9);
  swift_retain();
  swift_release();
  int v30 = (void *)swift_allocObject();
  v30[2] = a11;
  v30[3] = v29;
  void v30[4] = a12;
  v30[5] = a13;
  uint64_t v39 = sub_10038538C;
  size_t v40 = v30;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v36 = 1107296256;
  uint64_t v37 = sub_100359584;
  uint64_t v38 = &unk_10062E028;
  uint64_t v31 = _Block_copy(&aBlock);
  id v32 = v29;
  swift_retain();
  sub_100121440(a12);
  swift_release();
  [v32 performBatchUpdates:v28 completion:v31];
  _Block_release(v31);
  _Block_release(v28);
  swift_release();
  LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v31) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10037D030(uint64_t a1, id a2, uint64_t a3, void (*a4)(void, void, void), uint64_t *a5, unsigned int (**a6)(uint64_t, uint64_t, uint64_t), uint64_t *a7, uint64_t *a8, char *a9, unint64_t a10)
{
  uint64_t v139 = a8;
  id v127 = a7;
  uint64_t v138 = a6;
  id v136 = a5;
  uint64_t v135 = a4;
  uint64_t v121 = a3;
  uint64_t v12 = sub_10052FA30();
  uint64_t v126 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v118 = (char *)&v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v142 = (char *)&v113 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v140 = (char *)&v113 - v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v113 - v19;
  uint64_t v21 = sub_10000BB04(&qword_10066F3B8);
  __chkstk_darwin(v21 - 8);
  int v134 = (char *)&v113 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10000BB04(&qword_10066F3C8);
  __chkstk_darwin(v23 - 8);
  uint64_t v141 = (char *)&v113 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_10052F970();
  uint64_t v25 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v119 = (char *)&v113 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for AIDiffingUpdate() - 8;
  __chkstk_darwin(v27);
  int v30 = (char *)&v113 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = *(void *)(a1 + 16);
  id v137 = a2;
  if (v31)
  {
    uint64_t v32 = a1 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
    uint64_t v33 = *(void *)(v28 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_10037EA5C(v32, (uint64_t)v30);
      uint64_t v34 = (void (*)(uint64_t))*((void *)v30 + 1);
      sub_100121440((uint64_t)v34);
      uint64_t v35 = sub_10037EAC0((uint64_t)v30);
      if (v34)
      {
        v34(v35);
        sub_100121638((uint64_t)v34);
      }
      v32 += v33;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    a2 = v137;
  }
  uint64_t v36 = v121;
  swift_beginAccess();
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  uint64_t v38 = v119;
  uint64_t v39 = v120;
  v37(v119, v36, v120);
  sub_10052F920(v40);
  os_log_type_t v42 = v41;
  uint64_t v43 = *(void (**)(char *, uint64_t))(v25 + 8);
  v43(v38, v39);
  [a2 deleteSections:v42];

  id v44 = v135;
  swift_beginAccess();
  uint64_t v116 = v25 + 16;
  uint64_t v115 = v37;
  v37(v38, (uint64_t)v44, v39);
  sub_10052F920(v45);
  uint64_t v47 = v46;
  uint64_t v117 = v25 + 8;
  uint64_t v114 = v43;
  v43(v38, v39);
  [a2 insertSections:v47];

  uint64_t v48 = v136;
  swift_beginAccess();
  uint64_t v49 = *v48;
  uint64_t v50 = *(void *)(*v48 + 16);
  uint64_t v51 = (uint64_t)v141;
  if (v50)
  {
    swift_bridgeObjectRetain();
    unint64_t v52 = (void *)(v49 + 40);
    do
    {
      [a2 moveSection:*(v52 - 1) toSection:*v52];
      v52 += 2;
      --v50;
    }
    while (v50);
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  swift_retain();
  Class isa = sub_1005350C0().super.isa;
  swift_endAccess();
  swift_release();
  [a2 insertItemsAtIndexPaths:isa];

  swift_beginAccess();
  swift_retain();
  Class v54 = sub_1005350C0().super.isa;
  swift_endAccess();
  swift_release();
  [a2 deleteItemsAtIndexPaths:v54];

  uint64_t v55 = v139;
  swift_beginAccess();
  uint64_t v56 = *v55;
  uint64_t v57 = *(void *)(v56 + 16);
  uint64_t v135 = (void (*)(void, void, void))v56;
  if (v57)
  {
    uint64_t v58 = sub_10000BB04(&qword_10066EF20);
    uint64_t v59 = *(void *)(v58 - 8);
    uint64_t v60 = v56 + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80));
    id v136 = *(uint64_t **)(v59 + 72);
    uint64_t v139 = (uint64_t *)(v59 + 56);
    uint64_t v138 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
    uint64_t v61 = (void (**)(char *, uint64_t, uint64_t))(v126 + 32);
    unint64_t v62 = (void (**)(char *, uint64_t))(v126 + 8);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_100385398(v60, v51);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))*v139)(v51, 0, 1, v58);
      if ((*v138)(v51, 1, v58) == 1) {
        break;
      }
      unint64_t v63 = *v61;
      (*v61)(v20, v51 + *(int *)(v58 + 48), v12);
      uint64_t v64 = v140;
      v63(v140, v51, v12);
      Class v65 = sub_10052F9D0().super.isa;
      uint64_t v66 = *v62;
      (*v62)(v64, v12);
      Class v67 = sub_10052F9D0().super.isa;
      [v137 moveItemAtIndexPath:v65 toIndexPath:v67];

      v66(v20, v12);
      uint64_t v51 = (uint64_t)v141;
      v60 += (uint64_t)v136;
      if (!--v57) {
        goto LABEL_17;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_17:
    uint64_t v68 = sub_10000BB04(&qword_10066EF20);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v51, 1, 1, v68);
  }
  swift_bridgeObjectRelease();
  uint64_t v144 = _swiftEmptyArrayStorage;
  id v69 = [v137 _indexPathsForPreparedItems];
  uint64_t v70 = sub_1005350E0();

  uint64_t v132 = *(char **)(v70 + 16);
  if (v132)
  {
    uint64_t v71 = v126;
    unint64_t v128 = (*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
    unint64_t v131 = v70 + v128;
    swift_beginAccess();
    swift_beginAccess();
    unint64_t v72 = 0;
    uint64_t v141 = (char *)(v71 + 16);
    uint64_t v129 = v71 + 48;
    id v136 = (uint64_t *)(v71 + 32);
    uint64_t v140 = a9;
    uint64_t v139 = (uint64_t *)(a9 + 56);
    uint64_t v73 = (void (**)(char *, uint64_t))(v71 + 8);
    uint64_t v130 = v71 + 56;
    unint64_t v113 = (v71 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v74 = (uint64_t)v142;
    unint64_t v75 = v134;
    uint64_t v125 = v70;
    while (1)
    {
      if (v72 >= *(void *)(v70 + 16))
      {
        __break(1u);
        goto LABEL_56;
      }
      uint64_t v76 = *(void *)(v71 + 72);
      os_log_type_t v77 = *(void (**)(char *, unint64_t, uint64_t))(v71 + 16);
      v77(v75, v131 + v76 * v72, v12);
      uint64_t v124 = *(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56);
      v124(v75, 0, 1, v12);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v75, 1, v12) == 1) {
        goto LABEL_47;
      }
      uint64_t v138 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v72;
      uint64_t v135 = (void (*)(void, void, void))*v136;
      v135(v74, v75, v12);
      if (*((void *)v140 + 2)
        && (uint64_t v78 = v140,
            sub_10038600C(&qword_10066F158, (void (*)(uint64_t))&type metadata accessor for IndexPath),
            uint64_t v79 = sub_100534B40(),
            uint64_t v80 = -1 << v78[32],
            unint64_t v81 = v79 & ~v80,
            ((*(unint64_t *)((char *)v139 + ((v81 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v81) & 1) != 0))
      {
        uint64_t v82 = ~v80;
        while (1)
        {
          v77(v20, *((void *)v140 + 6) + v81 * v76, v12);
          sub_10038600C(&qword_10066F160, (void (*)(uint64_t))&type metadata accessor for IndexPath);
          char v83 = sub_100534BF0();
          os_log_type_t v84 = *v73;
          (*v73)(v20, v12);
          if (v83) {
            break;
          }
          unint64_t v81 = (v81 + 1) & v82;
          if (((*(unint64_t *)((char *)v139 + ((v81 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v81) & 1) == 0) {
            goto LABEL_30;
          }
        }
      }
      else
      {
LABEL_30:
        uint64_t v85 = *v127;
        uint64_t v86 = v127[1];
        uint64_t v87 = v86 + v128;
        uint64_t v88 = *(void *)(v86 + 16);
        uint64_t v133 = (unint64_t)v73 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        if (v85)
        {
          id v123 = (void *)(v85 + 16);
          uint64_t v122 = v85 + 32;
          swift_retain();
          swift_retain();
          uint64_t v89 = (uint64_t)v142;
          sub_10038482C((uint64_t)v142, v87, v88, v123, v122);
          char v91 = v90;
          swift_release();
          swift_release();
          uint64_t v71 = v126;
          if (v91) {
            goto LABEL_37;
          }
          os_log_type_t v84 = *v73;
        }
        else
        {
          swift_retain();
          if (!v88)
          {
LABEL_36:
            swift_release();
            uint64_t v71 = v126;
            uint64_t v89 = (uint64_t)v142;
LABEL_37:
            uint64_t v93 = v119;
            uint64_t v94 = v120;
            v115(v119, v121, v120);
            Swift::Int v95 = sub_10052FA10();
            BOOL v96 = sub_10052F940(v95);
            v114(v93, v94);
            uint64_t v74 = v89;
            if (!v96)
            {
              v77(v118, v89, v12);
              uint64_t v97 = v144;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v97 = (void *)sub_10035E5CC(0, v97[2] + 1, 1, (char *)v97);
              }
              id v98 = (void (*)(char *, char *, uint64_t))v135;
              unint64_t v100 = v97[2];
              unint64_t v99 = v97[3];
              if (v100 >= v99 >> 1) {
                uint64_t v97 = (void *)sub_10035E5CC(v99 > 1, v100 + 1, 1, (char *)v97);
              }
              v97[2] = v100 + 1;
              v98((char *)v97 + v128 + v100 * v76, v118, v12);
              uint64_t v144 = v97;
            }
            (*v73)((char *)v74, v12);
            goto LABEL_22;
          }
          while (1)
          {
            v77(v20, v87, v12);
            sub_10038600C(&qword_10066F160, (void (*)(uint64_t))&type metadata accessor for IndexPath);
            char v92 = sub_100534BF0();
            os_log_type_t v84 = *v73;
            (*v73)(v20, v12);
            if (v92) {
              break;
            }
            v87 += v76;
            if (!--v88) {
              goto LABEL_36;
            }
          }
          swift_release();
          uint64_t v71 = v126;
        }
      }
      uint64_t v74 = (uint64_t)v142;
      v84(v142, v12);
LABEL_22:
      unint64_t v75 = v134;
      uint64_t v70 = v125;
      unint64_t v72 = (unint64_t)v138 + 1;
      if ((char *)v138 + 1 == v132)
      {
        v124(v134, 1, 1, v12);
        goto LABEL_47;
      }
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v126 + 56))(v134, 1, 1, v12);
LABEL_47:
  swift_bridgeObjectRelease();
  unint64_t v72 = a10;
  if (qword_10066E380 != -1) {
LABEL_56:
  }
    swift_once();
  uint64_t v101 = sub_100530920();
  sub_10000EA90(v101, (uint64_t)qword_10066F228);
  uint64_t v102 = sub_100530900();
  os_log_type_t v103 = sub_1005357E0();
  if (os_log_type_enabled(v102, v103))
  {
    uint64_t v104 = swift_slowAlloc();
    uint64_t v143 = swift_slowAlloc();
    *(_DWORD *)uint64_t v104 = 136315138;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v105 = sub_1005350F0();
    unint64_t v107 = v106;
    swift_bridgeObjectRelease();
    *(void *)(v104 + 4) = sub_10037ECEC(v105, v107, &v143);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v102, v103, "Cleaning up prefetched cells by reloading index paths: %s", (uint8_t *)v104, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  swift_bridgeObjectRetain();
  Class v108 = sub_1005350C0().super.isa;
  swift_bridgeObjectRelease();
  [v137 reloadItemsAtIndexPaths:v108];

  if (v72)
  {
    swift_retain();
    uint64_t v109 = sub_100530900();
    os_log_type_t v110 = sub_1005357E0();
    if (os_log_type_enabled(v109, v110))
    {
      uint64_t v111 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v111 = 0;
      _os_log_impl((void *)&_mh_execute_header, v109, v110, "Performing alongside updates", v111, 2u);
      swift_slowDealloc();
    }

    ((void (*)(void))v72)();
    sub_100121638(v72);
  }
  return swift_bridgeObjectRelease();
}

void sub_10037E13C(int a1, uint64_t a2, void *a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v10 = sub_10052FA30();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000BB04(&qword_10066F3B8);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = a2 + 16;
  if (qword_10066E380 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_100530920();
  sub_10000EA90(v17, (uint64_t)qword_10066F228);
  swift_retain_n();
  uint64_t v18 = sub_100530900();
  int v54 = sub_1005357E0();
  if (os_log_type_enabled(v18, (os_log_type_t)v54))
  {
    os_log_t v43 = v18;
    os_log_type_t v45 = a3;
    int v46 = a1;
    uint64_t v47 = a5;
    uint64_t v48 = a4;
    uint64_t v19 = (_DWORD *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    uint64_t v60 = v41;
    os_log_type_t v42 = v19;
    _DWORD *v19 = 136315138;
    swift_beginAccess();
    uint64_t v20 = *(void *)(a2 + 16);
    uint64_t v21 = *(void *)(a2 + 24);
    uint64_t v44 = a2;
    uint64_t v61 = 0;
    unint64_t v62 = 0xE000000000000000;
    swift_retain();
    swift_retain();
    v63._uint64_t countAndFlagsBits = 91;
    v63._object = (void *)0xE100000000000000;
    sub_100534E80(v63);
    uint64_t v22 = *(void *)(v21 + 16);
    uint64_t v40 = v20;
    uint64_t v49 = v21;
    if (v22)
    {
      unint64_t v39 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      uint64_t v23 = v21 + v39;
      uint64_t v58 = *(void *)(v11 + 72);
      uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
      swift_retain();
      swift_retain();
      v24(v16, v23, v10);
      uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v25(v16, 0, 1, v10);
      uint64_t v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      uint64_t v57 = v11 + 48;
      if (v56(v16, 1, v10) != 1)
      {
        uint64_t v55 = v25;
        v38[1] = (v11 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
        unint64_t v52 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
        uint64_t v53 = v11 + 32;
        v52(v13, v16, v10);
        sub_10000BB04(&qword_10066F3C0);
        uint64_t v26 = swift_allocObject();
        long long v51 = xmmword_10053A3B0;
        *(_OWORD *)(v26 + 16) = xmmword_10053A3B0;
        *(void *)(v26 + 56) = v10;
        uint64_t v27 = sub_1000FF040((uint64_t *)(v26 + 32));
        v24((char *)v27, (uint64_t)v13, v10);
        sub_100536920();
        swift_bridgeObjectRelease();
        uint64_t v50 = *(void (**)(char *, uint64_t))(v11 + 8);
        v50(v13, v10);
        uint64_t v28 = v22 - 1;
        if (v22 == 1)
        {
          v55(v16, 1, 1, v10);
        }
        else
        {
          uint64_t v30 = v49 + v58 + v39;
          uint64_t v31 = v55;
          while (1)
          {
            v24(v16, v30, v10);
            v31(v16, 0, 1, v10);
            if (v56(v16, 1, v10) == 1) {
              break;
            }
            v52(v13, v16, v10);
            v64._uint64_t countAndFlagsBits = 8236;
            v64._object = (void *)0xE200000000000000;
            sub_100534E80(v64);
            sub_10000BB04(&qword_10066F3C0);
            uint64_t v32 = swift_allocObject();
            *(_OWORD *)(v32 + 16) = v51;
            *(void *)(v32 + 56) = v10;
            uint64_t v33 = sub_1000FF040((uint64_t *)(v32 + 32));
            v24((char *)v33, (uint64_t)v13, v10);
            sub_100536920();
            uint64_t v31 = v55;
            swift_bridgeObjectRelease();
            v50(v13, v10);
            v30 += v58;
            if (!--v28)
            {
              v31(v16, 1, 1, v10);
              break;
            }
          }
        }
      }
    }
    else
    {
      uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      swift_retain();
      swift_retain();
      v29(v16, 1, 1, v10);
    }
    swift_release();
    swift_release();
    v65._uint64_t countAndFlagsBits = 93;
    v65._object = (void *)0xE100000000000000;
    sub_100534E80(v65);
    swift_release();
    swift_release();
    unint64_t v34 = sub_10037ECEC(v61, v62, &v60);
    uint64_t v35 = (uint8_t *)v42;
    *(void *)(v42 + 1) = v34;
    swift_release_n();
    swift_bridgeObjectRelease();
    os_log_t v36 = v43;
    _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v54, "Reconfiguring index paths: %s", v35, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a4 = v48;
    LOBYTE(a1) = v46;
    a3 = v45;
  }
  else
  {

    swift_release_n();
  }
  swift_beginAccess();
  swift_retain();
  Class isa = sub_1005350C0().super.isa;
  swift_endAccess();
  swift_release();
  [a3 reconfigureItemsAtIndexPaths:isa];

  if (a4) {
    a4(a1 & 1);
  }
}

uint64_t sub_10037E7FC()
{
  uint64_t v0 = sub_100530920();
  sub_10000ED18(v0, qword_10066F228);
  sub_10000EA90(v0, (uint64_t)qword_10066F228);
  return sub_100530910();
}

uint64_t sub_10037E870()
{
  return swift_slowDealloc();
}

uint64_t sub_10037E87C(void (*a1)(uint64_t *__return_ptr))
{
  a1(&v3);
  sub_10052FA30();
  uint64_t v1 = sub_1005350F0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_10037E8E8(void (*a1)(uint64_t))
{
  uint64_t v2 = sub_10052FA30();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v4);
  sub_10038600C((unint64_t *)&unk_10066F790, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  uint64_t v7 = sub_100536700();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v7;
}

uint64_t type metadata accessor for AIDiffingUpdate()
{
  uint64_t result = qword_10066F2A8;
  if (!qword_10066F2A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10037EA5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AIDiffingUpdate();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10037EAC0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AIDiffingUpdate();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10037EB1C(void *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  unint64_t v8 = sub_10037ECEC(v6, v7, a3);
  uint64_t v9 = (void *)*a1;
  *(void *)*a1 = v8;
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v9 + 1;
  return result;
}

uint64_t sub_10037EB74()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10037EBAC()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10037EBEC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 80)) {
    swift_release();
  }
  swift_release();
  if (*(void *)(v0 + 104)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_10037EC84()
{
  return sub_10037CD24(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112));
}

uint64_t sub_10037ECC4()
{
  return swift_deallocObject();
}

uint64_t sub_10037ECD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10037ECE4()
{
  return swift_release();
}

unint64_t sub_10037ECEC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  unint64_t v6 = sub_10037EDC0(v12, 0, 0, 1, a1, a2);
  unint64_t v7 = v12[0];
  if (v6)
  {
    unint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10009B1D4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10009B1D4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100013D48((uint64_t)v12);
  return v7;
}

unint64_t sub_10037EDC0(unint64_t *a1, void *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v10 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v10)
        {
          v12[0] = a5;
          v12[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          memcpy(__dst, v12, HIBYTE(a6) & 0xF);
          unint64_t result = 0;
          *((unsigned char *)__dst + v10) = 0;
          *a1 = (unint64_t)__dst;
          return result;
        }
      }
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    unint64_t result = (unint64_t)sub_10037EEC0(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    unint64_t result = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    unint64_t result = sub_100536250();
    if (!result)
    {
      __break(1u);
      return result;
    }
  }
  *a1 = result;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

char *sub_10037EEC0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (char *)sub_10037EF58(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10037F05C(0, *((void *)v2 + 2) + 1, 1, v2);
  }
  unint64_t v4 = *((void *)v2 + 2);
  unint64_t v3 = *((void *)v2 + 3);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10037F05C((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v4 + 1;
  v2[v4 + 32] = 0;
  return v2;
}

void *sub_10037EF58(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_9;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_10037EFF4(v2, 0);
      unint64_t result = (void *)sub_1005361D0();
      if (v5) {
        break;
      }
      if (result == (void *)v2) {
        return v3;
      }
      __break(1u);
LABEL_9:
      uint64_t v2 = sub_100534EA0();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_10037EFF4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_10000BB04(&qword_10066F3B0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

char *sub_10037F05C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_10066F3B0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *initializeBufferWithCopyOfBuffer for AIDiffingUpdate(uint64_t a1, void *a2, int *a3)
{
  unint64_t v4 = (char *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)unint64_t v4 = *a2;
    unint64_t v4 = (char *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[1];
    if (v7)
    {
      uint64_t v8 = a2[2];
      *((void *)v4 + 1) = v7;
      *((void *)v4 + 2) = v8;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    }
    uint64_t v10 = a3[6];
    size_t v11 = &v4[v10];
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_10052F970();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    v14(v11, v12, v13);
    v14(&v4[a3[7]], (char *)a2 + a3[7], v13);
    uint64_t v15 = a3[9];
    *(void *)&v4[a3[8]] = *(void *)((char *)a2 + a3[8]);
    uint64_t v16 = &v4[v15];
    uint64_t v17 = (void *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *(void *)uint64_t v16 = *v17;
    *((void *)v16 + 1) = v18;
    uint64_t v19 = a3[10];
    uint64_t v20 = a3[11];
    uint64_t v21 = &v4[v19];
    uint64_t v22 = (void *)((char *)a2 + v19);
    uint64_t v23 = v22[1];
    *(void *)uint64_t v21 = *v22;
    *((void *)v21 + 1) = v23;
    uint64_t v24 = &v4[v20];
    uint64_t v25 = (void *)((char *)a2 + v20);
    uint64_t v26 = v25[1];
    *(void *)uint64_t v24 = *v25;
    *((void *)v24 + 1) = v26;
    *(void *)&v4[a3[12]] = *(void *)((char *)a2 + a3[12]);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for AIDiffingUpdate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8)) {
    swift_release();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_10052F970();
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + *(int *)(a2 + 28), v5);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AIDiffingUpdate(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  }
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_10052F970();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  v12(v9, v10, v11);
  v12(a1 + a3[7], a2 + a3[7], v11);
  uint64_t v13 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  void *v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = a3[10];
  uint64_t v18 = a3[11];
  uint64_t v19 = (void *)(a1 + v17);
  uint64_t v20 = (void *)(a2 + v17);
  uint64_t v21 = v20[1];
  void *v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = (void *)(a1 + v18);
  uint64_t v23 = (void *)(a2 + v18);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AIDiffingUpdate(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = (_OWORD *)(a1 + 8);
  uint64_t v8 = (_OWORD *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 8);
  if (!*(void *)(a1 + 8))
  {
    if (v7)
    {
      uint64_t v10 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v7;
      *(void *)(a1 + 16) = v10;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *uint64_t v6 = *v8;
    goto LABEL_8;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v9 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v9;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_10052F970();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24);
  v15(v12, v13, v14);
  v15(a1 + a3[7], a2 + a3[7], v14);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[9];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  swift_retain();
  swift_release();
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  swift_retain();
  swift_release();
  uint64_t v19 = a3[10];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  swift_retain();
  swift_release();
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  swift_retain();
  swift_release();
  uint64_t v22 = a3[11];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  swift_retain();
  swift_release();
  *(void *)(v23 + 8) = *(void *)(v24 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AIDiffingUpdate(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  }
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_10052F970();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12(a1 + a3[7], a2 + a3[7], v11);
  uint64_t v13 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  uint64_t v14 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t assignWithTake for AIDiffingUpdate(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = (_OWORD *)(a1 + 8);
  uint64_t v8 = (_OWORD *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 8);
  if (!*(void *)(a1 + 8))
  {
    if (v7)
    {
      uint64_t v10 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v7;
      *(void *)(a1 + 16) = v10;
      goto LABEL_8;
    }
LABEL_7:
    *uint64_t v6 = *v8;
    goto LABEL_8;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v9 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v9;
  swift_release();
LABEL_8:
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_10052F970();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(a1 + a3[7], a2 + a3[7], v14);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[9];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  swift_release();
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  swift_release();
  uint64_t v19 = a3[10];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  swift_release();
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  swift_release();
  uint64_t v22 = a3[11];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  swift_release();
  *(void *)(v23 + 8) = *(void *)(v24 + 8);
  swift_release();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AIDiffingUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10037FA40);
}

uint64_t sub_10037FA40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10052F970();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 32));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AIDiffingUpdate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10037FB18);
}

uint64_t sub_10037FB18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10052F970();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10037FBD8()
{
  uint64_t result = sub_10052F970();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10037FC98()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10037FD34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    uint64_t v11 = ((unint64_t)a1 + v6 + 16) & ~v6;
    uint64_t v12 = ((unint64_t)a2 + v6 + 16) & ~v6;
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v13(v11, v12, v4);
  }
  return a1;
}

uint64_t sub_10037FE3C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void *sub_10037FEB0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  swift_bridgeObjectRetain();
  v6(v8, v9, v5);
  return a1;
}

void *sub_10037FF40(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_OWORD *sub_10037FFD8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_100380048(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1003800D0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 16) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 16) & ~v6);
      }
      unint64_t v15 = *((void *)a1 + 1);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_100380270(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 16) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1003804D0);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v18 = (unint64_t)&a1[v9 + 16] & ~v9;
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t sub_1003804F8(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_100380500(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 32);
}

uint64_t sub_100380508(uint64_t a1, char *a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = sub_10052FA30();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_10038600C(&qword_10066F158, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_100534B40();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    unsigned int v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    unsigned int v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    int v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_10038600C(&qword_10066F160, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      char v21 = sub_100534BF0();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      unsigned int v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        unint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    unsigned int v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    sub_1003810B8((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_10038082C(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_100536950();
  swift_bridgeObjectRetain();
  sub_100534DD0();
  Swift::Int v8 = sub_1005369A0();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_100536780() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unsigned int v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_100536780() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *unint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_100381358(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *unint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1003809DC()
{
  unint64_t v1 = v0;
  uint64_t v42 = sub_10052FA30();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_10000BB04(&qword_10066F3D0);
  uint64_t v5 = sub_100536180();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unsigned int v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                unint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_10038600C(&qword_10066F158, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      uint64_t result = sub_100534B40();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v6;
  return result;
}

uint64_t sub_100380DD8()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000BB04(&qword_10066F408);
  uint64_t v3 = sub_100536180();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                unint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_100536950();
      sub_100534DD0();
      uint64_t result = sub_1005369A0();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *int64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v4;
  return result;
}

uint64_t sub_1003810B8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_10052FA30();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1003809DC();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1003814F4();
      goto LABEL_12;
    }
    sub_10038194C();
  }
  uint64_t v12 = *v3;
  sub_10038600C(&qword_10066F158, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  uint64_t v13 = sub_100534B40();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    int64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    unint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_10038600C(&qword_10066F160, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      char v21 = sub_100534BF0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_100536850();
  __break(1u);
  return result;
}

Swift::Int sub_100381358(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_100380DD8();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_100381798();
      goto LABEL_22;
    }
    sub_100381CFC();
  }
  uint64_t v11 = *v4;
  sub_100536950();
  sub_100534DD0();
  uint64_t result = sub_1005369A0();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_100536780(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_100536850();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_100536780();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  char v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *char v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_1003814F4()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_10052FA30();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000BB04(&qword_10066F3D0);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_100536170();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    *unint64_t v1 = v8;
    return result;
  }
  uint64_t v22 = v1;
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    unint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_100381798()
{
  unint64_t v1 = v0;
  sub_10000BB04(&qword_10066F408);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100536170();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10038194C()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_10052FA30();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10000BB04(&qword_10066F3D0);
  uint64_t v7 = sub_100536180();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *unint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_10038600C(&qword_10066F158, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t result = sub_100534B40();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    unint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100381CFC()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000BB04(&qword_10066F408);
  uint64_t v3 = sub_100536180();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_100536950();
    swift_bridgeObjectRetain();
    sub_100534DD0();
    uint64_t result = sub_1005369A0();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    unint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_100381FAC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1005360D0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_100536940();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            unint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              void *v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            int64_t v16 = (void *)(v15 + 8 * v3);
            unint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *int64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *int64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100382144(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1005360D0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48) + 24 * v6;
        uint64_t v10 = *(void *)(v9 + 8);
        unint64_t v11 = *(void **)(v9 + 16);
        sub_100536950();
        if (v10)
        {
          sub_100536960(1uLL);
          id v12 = v11;
          swift_bridgeObjectRetain();
          sub_100534DD0();
        }
        else
        {
          sub_100536960(0);
          id v13 = v11;
        }
        Swift::Int v14 = sub_1005369A0();

        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v15 = v14 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v15 < v8) {
            goto LABEL_5;
          }
        }
        else if (v15 >= v8)
        {
          goto LABEL_14;
        }
        if (v3 >= (uint64_t)v15)
        {
LABEL_14:
          uint64_t v16 = *(void *)(a2 + 48);
          unint64_t v17 = v16 + 24 * v3;
          int64_t v18 = (long long *)(v16 + 24 * v6);
          if (v3 != v6 || v17 >= (unint64_t)v18 + 24)
          {
            long long v19 = *v18;
            *(void *)(v17 + 16) = *((void *)v18 + 2);
            *(_OWORD *)unint64_t v17 = v19;
          }
          uint64_t v20 = *(void *)(a2 + 56);
          uint64_t v21 = (void *)(v20 + 8 * v3);
          BOOL v22 = (void *)(v20 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v21 >= v22 + 1))
          {
            *uint64_t v21 = *v22;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v24 = *v23;
    uint64_t v25 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v23 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v25 = *v23;
    uint64_t v24 = (-1 << result) - 1;
  }
  uint64_t *v23 = v25 & v24;
  uint64_t v26 = *(void *)(a2 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_100382360(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_100367FB4(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_10039676C();
LABEL_7:
    uint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(void *)(v16[7] + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v18 = 8 * v10;
    *(void *)(v16[6] + v18) = a2;
    *(void *)(v16[7] + v18) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      void v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_100395834(result, a3 & 1);
  uint64_t result = sub_100367FB4(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v10 = result;
    uint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_100536860();
  __break(1u);
  return result;
}

uint64_t sub_100382490(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100367E3C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1003968FC();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_100395ADC(result, a4 & 1);
  uint64_t result = sub_100367E3C(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_100536860();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  BOOL v20 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v20 = a2;
  v20[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v23;

  return swift_bridgeObjectRetain();
}

id sub_1003825F4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5)
{
  unint64_t v6 = v5;
  uint64_t v11 = *v5;
  unint64_t v13 = sub_100368064(a2, a3, (uint64_t)a4);
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v17 = v12;
  uint64_t v18 = *(void *)(v11 + 24);
  if (v18 >= v16 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v18 >= v16 && (a5 & 1) == 0)
  {
    sub_100396C68();
LABEL_7:
    char v19 = (void *)*v6;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];
      id result = (id)swift_bridgeObjectRelease();
      *(void *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_100396110(v16, a5 & 1);
  unint64_t v22 = sub_100368064(a2, a3, (uint64_t)a4);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_17:
    id result = (id)sub_100536860();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  char v19 = (void *)*v6;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  v19[(v13 >> 6) + 8] |= 1 << v13;
  uint64_t v24 = (uint64_t *)(v19[6] + 24 * v13);
  *uint64_t v24 = a2;
  v24[1] = a3;
  void v24[2] = (uint64_t)a4;
  *(void *)(v19[7] + 8 * v13) = a1;
  uint64_t v25 = v19[2];
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v19[2] = v27;
  swift_bridgeObjectRetain();

  return a4;
}

uint64_t sub_100382790(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100367E3C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100396E38();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_100396454(v15, a4 & 1);
  uint64_t v21 = sub_100367E3C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_100536860();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v23 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;

  return swift_bridgeObjectRetain();
}

uint64_t sub_100382900(void **a1)
{
  uint64_t v2 = *(void *)(sub_10052FA30() - 8);
  int64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int64_t v3 = (void *)sub_100397EE0(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_1003829A8(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1003829A8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10052FA30();
  uint64_t v5 = *(void **)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  int v134 = (char *)&v129 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v149 = (char *)&v129 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v144 = (char *)&v129 - v11;
  __chkstk_darwin(v10);
  uint64_t v145 = (char *)&v129 - v12;
  Swift::Int v13 = a1[1];
  uint64_t result = sub_100536680(v13);
  if (result >= v13)
  {
    if (v13 < 0) {
      goto LABEL_141;
    }
    if (v13) {
      return sub_10038351C(0, v13, 1, a1);
    }
    return result;
  }
  if (v13 >= 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 + 1;
  }
  if (v13 < -1) {
    goto LABEL_140;
  }
  uint64_t v147 = v4;
  uint64_t v148 = a1;
  uint64_t v131 = result;
  if (v13 > 1)
  {
    uint64_t v16 = v15 >> 1;
    uint64_t result = sub_100535170();
    *(void *)(result + 16) = v16;
    unint64_t v17 = (*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80);
    uint64_t v130 = (void *)result;
    unint64_t v136 = result + v17;
LABEL_12:
    Swift::Int v19 = 0;
    uint64_t v142 = (uint64_t (**)(char *, uint64_t))(v5 + 1);
    uint64_t v143 = v5 + 2;
    uint64_t v152 = (void (**)(char *, uint64_t, uint64_t))(v5 + 4);
    uint64_t v18 = (char *)_swiftEmptyArrayStorage;
    id v137 = v5;
    while (1)
    {
      Swift::Int v21 = v19;
      Swift::Int v22 = v19 + 1;
      Swift::Int v135 = v19;
      if (v19 + 1 >= v13) {
        break;
      }
      uint64_t v23 = v147;
      uint64_t v24 = *v148;
      uint64_t v139 = v24;
      Swift::Int v140 = v19 + 1;
      Swift::Int v151 = v137[9];
      Swift::Int v25 = v151;
      uint64_t v26 = (void (*)(char *, uint64_t, uint64_t))v137[2];
      v26(v145, v24 + v151 * v22, v147);
      uint64_t v27 = v24 + v25 * v21;
      uint64_t v28 = v144;
      v26(v144, v27, v23);
      uint64_t v29 = sub_10038600C(&qword_10066F400, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      unint64_t v30 = v145;
      Swift::Int v146 = v29;
      LODWORD(v150) = sub_100534BC0();
      Swift::Int v31 = v13;
      uint64_t v32 = (void (*)(char *, uint64_t))v137[1];
      uint64_t v33 = v28;
      Swift::Int v21 = v135;
      v32(v33, v23);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v32)(v30, v23);
      Swift::Int v34 = v151;
      Swift::Int v22 = v21 + 2;
      Swift::Int v141 = v31;
      if (v21 + 2 >= v31)
      {
        Swift::Int v13 = v141;
        if ((v150 & 1) == 0) {
          break;
        }
      }
      else
      {
        uint64_t v132 = v18;
        uint64_t v129 = v2;
        v140 *= v151;
        uint64_t v35 = v139;
        Swift::Int v36 = v151 * v22;
        while (1)
        {
          Swift::Int v37 = v22;
          uint64_t v38 = v145;
          uint64_t v39 = v147;
          v26(v145, v35 + v36, v147);
          int64_t v40 = v144;
          v26(v144, v35 + v140, v39);
          int v41 = sub_100534BC0();
          v32(v40, v39);
          uint64_t result = ((uint64_t (*)(char *, uint64_t))v32)(v38, v39);
          if ((v150 ^ v41)) {
            break;
          }
          Swift::Int v22 = v37 + 1;
          Swift::Int v34 = v151;
          v35 += v151;
          if (v141 == v37 + 1)
          {
            Swift::Int v13 = v141;
            Swift::Int v22 = v141;
            uint64_t v2 = v129;
            uint64_t v18 = v132;
            Swift::Int v21 = v135;
            if (v150) {
              goto LABEL_25;
            }
            goto LABEL_37;
          }
        }
        uint64_t v2 = v129;
        uint64_t v18 = v132;
        Swift::Int v22 = v37;
        Swift::Int v21 = v135;
        Swift::Int v13 = v141;
        Swift::Int v34 = v151;
        if ((v150 & 1) == 0) {
          break;
        }
      }
LABEL_25:
      if (v22 < v21) {
        goto LABEL_142;
      }
      if (v21 >= v22) {
        break;
      }
      uint64_t v132 = v18;
      uint64_t v42 = 0;
      uint64_t v43 = v34 * (v22 - 1);
      Swift::Int v44 = v22 * v34;
      uint64_t v45 = v21 * v34;
      int v46 = v148;
      Swift::Int v146 = v22;
      do
      {
        if (v21 != v22 + v42 - 1)
        {
          uint64_t v48 = v139;
          if (!v139) {
            goto LABEL_147;
          }
          uint64_t v49 = v2;
          unint64_t v50 = v139 + v45;
          uint64_t v51 = v139 + v43;
          uint64_t v150 = *v152;
          v150(v134, v139 + v45, v147);
          if (v45 < v43 || v50 >= v48 + v44)
          {
            uint64_t v47 = v147;
            swift_arrayInitWithTakeFrontToBack();
          }
          else
          {
            uint64_t v47 = v147;
            if (v45 != v43) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v150)(v51, v134, v47);
          uint64_t v2 = v49;
          int v46 = v148;
          Swift::Int v22 = v146;
          Swift::Int v34 = v151;
        }
        ++v21;
        --v42;
        v43 -= v34;
        v44 -= v34;
        v45 += v34;
      }
      while (v21 < v22 + v42);
      uint64_t v18 = v132;
      Swift::Int v21 = v135;
      Swift::Int v13 = v141;
LABEL_38:
      uint64_t v52 = v147;
      if (v22 < v13)
      {
        if (__OFSUB__(v22, v21)) {
          goto LABEL_139;
        }
        if (v22 - v21 < v131)
        {
          if (__OFADD__(v21, v131)) {
            goto LABEL_143;
          }
          if (v21 + v131 >= v13) {
            Swift::Int v53 = v13;
          }
          else {
            Swift::Int v53 = v21 + v131;
          }
          if (v53 < v21)
          {
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
            return result;
          }
          if (v22 != v53)
          {
            uint64_t v132 = v18;
            uint64_t v129 = v2;
            uint64_t v54 = v137[9];
            uint64_t v138 = (void (*)(char *, uint64_t, uint64_t))v137[2];
            uint64_t v139 = v54;
            uint64_t v55 = v54 * (v22 - 1);
            Swift::Int v56 = v22 * v54;
            Swift::Int v133 = v53;
            do
            {
              uint64_t v58 = 0;
              Swift::Int v146 = v22;
              Swift::Int v140 = v56;
              Swift::Int v141 = v55;
              while (1)
              {
                uint64_t v59 = *v46;
                uint64_t v150 = (void (*)(char *, uint64_t, uint64_t))(v56 + v58);
                Swift::Int v151 = v21;
                Swift::Int v60 = v56 + v58 + v59;
                uint64_t v61 = v145;
                unint64_t v62 = v46;
                Swift::String v63 = v138;
                v138(v145, v60, v52);
                uint64_t v64 = v55 + v58 + v59;
                Swift::String v65 = v144;
                v63(v144, v64, v52);
                sub_10038600C(&qword_10066F400, (void (*)(uint64_t))&type metadata accessor for IndexPath);
                LOBYTE(v59) = sub_100534BC0();
                uint64_t v66 = *v142;
                (*v142)(v65, v52);
                uint64_t result = v66(v61, v52);
                if ((v59 & 1) == 0) {
                  break;
                }
                uint64_t v67 = *v62;
                if (!*v62) {
                  goto LABEL_145;
                }
                Swift::Int v56 = v140;
                uint64_t v55 = v141;
                Swift::Int v68 = v67 + v141 + v58;
                id v69 = *v152;
                uint64_t v70 = v147;
                (*v152)(v149, v67 + v140 + v58, v147);
                uint64_t v52 = v70;
                swift_arrayInitWithTakeFrontToBack();
                uint64_t result = ((uint64_t (*)(Swift::Int, char *, uint64_t))v69)(v68, v149, v70);
                v58 -= v139;
                Swift::Int v21 = v151 + 1;
                Swift::Int v57 = v146;
                int v46 = v148;
                if (v146 == v151 + 1) {
                  goto LABEL_49;
                }
              }
              Swift::Int v57 = v146;
              uint64_t v52 = v147;
              int v46 = v62;
              Swift::Int v56 = v140;
              uint64_t v55 = v141;
LABEL_49:
              Swift::Int v22 = v57 + 1;
              v55 += v139;
              v56 += v139;
              Swift::Int v21 = v135;
            }
            while (v22 != v133);
            Swift::Int v22 = v133;
            uint64_t v2 = v129;
            uint64_t v18 = v132;
          }
        }
      }
      if (v22 < v21) {
        goto LABEL_134;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      Swift::Int v146 = v22;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_100397DBC(0, *((void *)v18 + 2) + 1, 1, v18);
        uint64_t v18 = (char *)result;
      }
      unint64_t v72 = *((void *)v18 + 2);
      unint64_t v71 = *((void *)v18 + 3);
      unint64_t v20 = v72 + 1;
      if (v72 >= v71 >> 1)
      {
        uint64_t result = (uint64_t)sub_100397DBC((char *)(v71 > 1), v72 + 1, 1, v18);
        uint64_t v18 = (char *)result;
      }
      *((void *)v18 + 2) = v20;
      uint64_t v73 = v18 + 32;
      uint64_t v74 = &v18[16 * v72 + 32];
      Swift::Int v75 = v146;
      *(void *)uint64_t v74 = v21;
      *((void *)v74 + 1) = v75;
      if (v72)
      {
        while (1)
        {
          unint64_t v76 = v20 - 1;
          if (v20 >= 4)
          {
            unint64_t v81 = &v73[2 * v20];
            uint64_t v82 = *(v81 - 8);
            uint64_t v83 = *(v81 - 7);
            BOOL v87 = __OFSUB__(v83, v82);
            uint64_t v84 = v83 - v82;
            if (v87) {
              goto LABEL_123;
            }
            uint64_t v86 = *(v81 - 6);
            uint64_t v85 = *(v81 - 5);
            BOOL v87 = __OFSUB__(v85, v86);
            uint64_t v79 = v85 - v86;
            char v80 = v87;
            if (v87) {
              goto LABEL_124;
            }
            unint64_t v88 = v20 - 2;
            uint64_t v89 = &v73[2 * v20 - 4];
            uint64_t v91 = *v89;
            uint64_t v90 = v89[1];
            BOOL v87 = __OFSUB__(v90, v91);
            uint64_t v92 = v90 - v91;
            if (v87) {
              goto LABEL_125;
            }
            BOOL v87 = __OFADD__(v79, v92);
            uint64_t v93 = v79 + v92;
            if (v87) {
              goto LABEL_127;
            }
            if (v93 >= v84)
            {
              uint64_t v111 = &v73[2 * v76];
              uint64_t v113 = *v111;
              uint64_t v112 = v111[1];
              BOOL v87 = __OFSUB__(v112, v113);
              uint64_t v114 = v112 - v113;
              if (v87) {
                goto LABEL_133;
              }
              BOOL v104 = v79 < v114;
              goto LABEL_94;
            }
          }
          else
          {
            if (v20 != 3)
            {
              uint64_t v105 = *((void *)v18 + 4);
              uint64_t v106 = *((void *)v18 + 5);
              BOOL v87 = __OFSUB__(v106, v105);
              uint64_t v98 = v106 - v105;
              char v99 = v87;
              goto LABEL_88;
            }
            uint64_t v78 = *((void *)v18 + 4);
            uint64_t v77 = *((void *)v18 + 5);
            BOOL v87 = __OFSUB__(v77, v78);
            uint64_t v79 = v77 - v78;
            char v80 = v87;
          }
          if (v80) {
            goto LABEL_126;
          }
          unint64_t v88 = v20 - 2;
          uint64_t v94 = &v73[2 * v20 - 4];
          uint64_t v96 = *v94;
          uint64_t v95 = v94[1];
          BOOL v97 = __OFSUB__(v95, v96);
          uint64_t v98 = v95 - v96;
          char v99 = v97;
          if (v97) {
            goto LABEL_128;
          }
          unint64_t v100 = &v73[2 * v76];
          uint64_t v102 = *v100;
          uint64_t v101 = v100[1];
          BOOL v87 = __OFSUB__(v101, v102);
          uint64_t v103 = v101 - v102;
          if (v87) {
            goto LABEL_130;
          }
          if (__OFADD__(v98, v103)) {
            goto LABEL_132;
          }
          if (v98 + v103 >= v79)
          {
            BOOL v104 = v79 < v103;
LABEL_94:
            if (v104) {
              unint64_t v76 = v88;
            }
            goto LABEL_96;
          }
LABEL_88:
          if (v99) {
            goto LABEL_129;
          }
          unint64_t v107 = &v73[2 * v76];
          uint64_t v109 = *v107;
          uint64_t v108 = v107[1];
          BOOL v87 = __OFSUB__(v108, v109);
          uint64_t v110 = v108 - v109;
          if (v87) {
            goto LABEL_131;
          }
          if (v110 < v98) {
            goto LABEL_14;
          }
LABEL_96:
          unint64_t v115 = v76 - 1;
          if (v76 - 1 >= v20)
          {
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
            goto LABEL_144;
          }
          if (!*v148) {
            goto LABEL_146;
          }
          uint64_t v116 = v18;
          uint64_t v117 = &v73[2 * v115];
          uint64_t v118 = *v117;
          uint64_t v119 = &v73[2 * v76];
          uint64_t v120 = v119[1];
          uint64_t result = sub_10038383C(*v148 + v137[9] * *v117, *v148 + v137[9] * *v119, *v148 + v137[9] * v120, v136);
          if (v2) {
            goto LABEL_117;
          }
          if (v120 < v118) {
            goto LABEL_120;
          }
          if (v76 > *((void *)v116 + 2)) {
            goto LABEL_121;
          }
          uint64_t v121 = v116;
          *uint64_t v117 = v118;
          v73[2 * v115 + 1] = v120;
          unint64_t v122 = *((void *)v116 + 2);
          if (v76 >= v122) {
            goto LABEL_122;
          }
          uint64_t v18 = v121;
          unint64_t v20 = v122 - 1;
          uint64_t result = (uint64_t)memmove(&v73[2 * v76], v119 + 2, 16 * (v122 - 1 - v76));
          *((void *)v18 + 2) = v122 - 1;
          if (v122 <= 2) {
            goto LABEL_14;
          }
        }
      }
      unint64_t v20 = 1;
LABEL_14:
      Swift::Int v13 = v148[1];
      Swift::Int v19 = v146;
      uint64_t v5 = v137;
      if (v146 >= v13) {
        goto LABEL_106;
      }
    }
LABEL_37:
    int v46 = v148;
    goto LABEL_38;
  }
  uint64_t v18 = (char *)_swiftEmptyArrayStorage;
  unint64_t v136 = (unint64_t)_swiftEmptyArrayStorage
       + ((*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80));
  uint64_t v130 = _swiftEmptyArrayStorage;
  if (v13 == 1) {
    goto LABEL_12;
  }
  unint64_t v20 = _swiftEmptyArrayStorage[2];
LABEL_106:
  if (v20 >= 2)
  {
    uint64_t v123 = *v148;
    do
    {
      unint64_t v124 = v20 - 2;
      if (v20 < 2) {
        goto LABEL_135;
      }
      if (!v123) {
        goto LABEL_148;
      }
      uint64_t v125 = *(void *)&v18[16 * v124 + 32];
      uint64_t v126 = *(void *)&v18[16 * v20 + 24];
      uint64_t result = sub_10038383C(v123 + v5[9] * v125, v123 + v5[9] * *(void *)&v18[16 * v20 + 16], v123 + v5[9] * v126, v136);
      if (v2) {
        break;
      }
      if (v126 < v125) {
        goto LABEL_136;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_100397EB8((uint64_t)v18);
        uint64_t v18 = (char *)result;
      }
      if (v124 >= *((void *)v18 + 2)) {
        goto LABEL_137;
      }
      id v127 = &v18[16 * v124 + 32];
      *(void *)id v127 = v125;
      *((void *)v127 + 1) = v126;
      unint64_t v128 = *((void *)v18 + 2);
      if (v20 > v128) {
        goto LABEL_138;
      }
      uint64_t result = (uint64_t)memmove(&v18[16 * v20 + 16], &v18[16 * v20 + 32], 16 * (v128 - v20));
      *((void *)v18 + 2) = v128 - 1;
      unint64_t v20 = v128 - 1;
    }
    while (v128 > 2);
  }
LABEL_117:
  swift_bridgeObjectRelease();
  v130[2] = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10038351C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = a1;
  uint64_t v7 = sub_10052FA30();
  uint64_t v8 = __chkstk_darwin(v7);
  int v41 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  Swift::Int v37 = (char *)&v29 - v11;
  uint64_t result = __chkstk_darwin(v10);
  Swift::Int v36 = (char *)&v29 - v14;
  uint64_t v39 = a3;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(void, void, void))(v13 + 16);
    uint64_t v15 = v13 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    uint64_t v32 = (uint64_t (**)(char *, uint64_t))(v15 - 8);
    uint64_t v33 = (void (*)(char *, uint64_t, uint64_t))v16;
    Swift::Int v34 = a4;
    uint64_t v35 = v15;
    int64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v44 = v17 * (v39 - 1);
    uint64_t v38 = v17;
    uint64_t v43 = v17 * v39;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v42 = v31;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v43 + v18 + *a4;
      Swift::Int v21 = v36;
      Swift::Int v22 = v33;
      v33(v36, v20, v7);
      uint64_t v23 = v37;
      v22(v37, v44 + v18 + v19, v7);
      sub_10038600C(&qword_10066F400, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      LOBYTE(v22) = sub_100534BC0();
      uint64_t v24 = *v32;
      (*v32)(v23, v7);
      Swift::Int v25 = v21;
      a4 = v34;
      uint64_t result = v24(v25, v7);
      if ((v22 & 1) == 0)
      {
LABEL_4:
        v44 += v38;
        v43 += v38;
        if (++v39 == v30) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v26 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v27 = v26 + v44 + v18;
      uint64_t v28 = *v40;
      (*v40)(v41, v26 + v43 + v18, v7);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v27, v41, v7);
      v18 -= v38;
      if (v39 == ++v42) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10038383C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_10052FA30();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v58 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10);
  Swift::Int v57 = (char *)&v49 - v13;
  uint64_t v55 = *(void *)(v14 + 72);
  if (!v55)
  {
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
    return result;
  }
  if (a2 - a1 == 0x8000000000000000 && v55 == -1) {
    goto LABEL_67;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v55 == -1) {
    goto LABEL_68;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v55;
  unint64_t v61 = a1;
  unint64_t v60 = a4;
  if (v16 >= v15 / v55)
  {
    uint64_t v18 = v15 / v55 * v55;
    if (a4 < a2 || a2 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
      uint64_t v19 = v9;
    }
    else
    {
      uint64_t v19 = v9;
      if (a4 != a2) {
        swift_arrayInitWithTakeBackToFront();
      }
    }
    unint64_t v35 = a4 + v18;
    unint64_t v59 = a4 + v18;
    unint64_t v61 = a2;
    unint64_t v53 = a1;
    if (v18 >= 1 && a1 < a2)
    {
      unint64_t v37 = -v55;
      uint64_t v39 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
      uint64_t v38 = v19 + 16;
      uint64_t v51 = v38 - 8;
      uint64_t v52 = v39;
      unint64_t v54 = -v55;
      uint64_t v56 = v38;
      unint64_t v50 = a4;
      int64_t v40 = v57;
      int v41 = (void (**)(char *, uint64_t))(v38 - 8);
      do
      {
        uint64_t v55 = a3 + v37;
        uint64_t v42 = v52;
        v52(v40, v35 + v37, v8);
        unint64_t v43 = a2 + v37;
        unint64_t v44 = a3;
        uint64_t v45 = v58;
        v42(v58, v43, v8);
        sub_10038600C(&qword_10066F400, (void (*)(uint64_t))&type metadata accessor for IndexPath);
        LOBYTE(v42) = sub_100534BC0();
        int v46 = *v41;
        (*v41)(v45, v8);
        v46(v40, v8);
        if (v42)
        {
          a3 = v55;
          if (v44 < a2 || v55 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v47 = v50;
          }
          else
          {
            unint64_t v47 = v50;
            if (v44 != a2) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v37 = v54;
          v61 += v54;
        }
        else
        {
          unint64_t v48 = v59;
          a3 = v55;
          v59 += v54;
          if (v44 < v48 || v55 >= v48)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v43 = a2;
            unint64_t v47 = v50;
          }
          else
          {
            unint64_t v47 = v50;
            if (v44 != v48) {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v43 = a2;
          }
          unint64_t v37 = v54;
        }
        unint64_t v35 = v59;
        if (v59 <= v47) {
          break;
        }
        a2 = v43;
      }
      while (v43 > v53);
    }
  }
  else
  {
    uint64_t v17 = v16 * v55;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v54 = a4 + v17;
    unint64_t v59 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      Swift::Int v21 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      uint64_t v56 = v9 + 16;
      Swift::Int v22 = (void (**)(char *, uint64_t))(v9 + 8);
      do
      {
        unint64_t v23 = a3;
        uint64_t v24 = v57;
        v21(v57, a2, v8);
        unint64_t v25 = a4;
        uint64_t v26 = v58;
        v21(v58, v25, v8);
        sub_10038600C(&qword_10066F400, (void (*)(uint64_t))&type metadata accessor for IndexPath);
        char v27 = sub_100534BC0();
        uint64_t v28 = *v22;
        (*v22)(v26, v8);
        v28(v24, v8);
        unint64_t v29 = v61;
        if (v27)
        {
          uint64_t v30 = v55;
          unint64_t v31 = a2 + v55;
          if (v61 < a2 || v61 >= v31)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v61 == a2) {
              unint64_t v29 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          uint64_t v30 = v55;
          unint64_t v33 = v60 + v55;
          if (v61 < v60 || v61 >= v33)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v61 != v60) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v60 = v33;
          unint64_t v31 = a2;
        }
        unint64_t v61 = v29 + v30;
        a4 = v60;
        if (v60 >= v54) {
          break;
        }
        a2 = v31;
      }
      while (v31 < a3);
    }
  }
  sub_100383E10(&v61, &v60, (uint64_t *)&v59);
  return 1;
}

uint64_t sub_100383E10(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_10052FA30();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    return result;
  }
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_17;
  }
  if (v3 < v4 || v3 >= v4 + (uint64_t)(v5 - v4) / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

void (*sub_100383EF4(void *a1, uint64_t a2))(uint64_t a1)
{
  unint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_100384E94(v4);
  v4[9] = sub_100384A9C(v4 + 4, a2, isUniquelyReferenced_nonNull_native);
  return sub_100383F84;
}

void sub_100383F84(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  v2(v1, 0);

  free(v1);
}

void (*sub_100383FE4(void *a1, uint64_t a2, uint64_t a3, void *a4))(uint64_t a1)
{
  uint64_t v8 = malloc(0x60uLL);
  *a1 = v8;
  v8[8] = a3;
  v8[9] = a4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  id v10 = a4;
  v8[10] = sub_100384ED0(v8);
  v8[11] = sub_100384CEC(v8 + 4, a2, a3, (uint64_t)v10, isUniquelyReferenced_nonNull_native);
  return sub_1003840A0;
}

void sub_1003840A0(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 80);
  unint64_t v3 = *(void **)(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 88))();
  swift_bridgeObjectRelease();

  v2(v1, 0);

  free(v1);
}

uint64_t sub_100384118(uint64_t a1)
{
  uint64_t v3 = sub_10052FA30();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  uint64_t v9 = v7 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = *(void *)(v7 + 16);
  if (*v1)
  {
    swift_retain();
    sub_10038482C(a1, v9, v10, (void *)(v8 + 16), v8 + 32);
    char v12 = v11;
    swift_release();
    if ((v12 & 1) == 0) {
      return 0;
    }
  }
  else if (v10)
  {
    v19[1] = v1;
    uint64_t v14 = 0;
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v16 = v4 + 16;
    int64_t v15 = v17;
    uint64_t v20 = *(void *)(v16 + 56);
    uint64_t v21 = v10;
    do
    {
      v15(v6, v9, v3);
      sub_10038600C(&qword_10066F160, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      char v18 = sub_100534BF0();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v6, v3);
      if (v18) {
        return 0;
      }
      ++v14;
      v9 += v20;
    }
    while (v21 != v14);
  }
  sub_10038432C(a1);
  return 1;
}

uint64_t sub_10038432C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10052FA30();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = v2 + 1;
  uint64_t v9 = v2[1];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v2[1] = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1003A0ABC(0, *(void *)(v9 + 16) + 1, 1);
    uint64_t v9 = *v8;
  }
  unint64_t v12 = *(void *)(v9 + 16);
  unint64_t v11 = *(void *)(v9 + 24);
  if (v12 >= v11 >> 1)
  {
    sub_1003A0ABC(v11 > 1, v12 + 1, 1);
    uint64_t v9 = *v8;
  }
  *(void *)(v9 + 16) = v12 + 1;
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v12, v7, v4);
  v2[1] = v9;
  uint64_t v14 = *(void *)(v9 + 16);
  if (*v2)
  {
    swift_beginAccess();
    if (sub_100530760() >= v14)
    {
      uint64_t result = swift_isUniquelyReferenced_native();
      uint64_t v15 = *v2;
      if (!result)
      {
        if (!v15)
        {
LABEL_16:
          __break(1u);
          return result;
        }
        uint64_t v15 = sub_100530770();
        uint64_t result = swift_release();
        *uint64_t v2 = v15;
      }
      if (v15) {
        return sub_100530720();
      }
      __break(1u);
      goto LABEL_16;
    }
  }
  else if ((unint64_t)v14 < 0x10)
  {
    return result;
  }
  return sub_100384568();
}

uint64_t sub_100384568()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  if (*v0)
  {
    swift_beginAccess();
    uint64_t v3 = *(void *)(v1 + 24) & 0x3FLL;
    unint64_t v4 = *(void *)(v2 + 16);
    if (v3) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v3 = 0;
    unint64_t v4 = *(void *)(v2 + 16);
  }
  if (v4 < 0x10)
  {
    uint64_t v5 = 0;
    goto LABEL_11;
  }
LABEL_7:
  uint64_t v6 = sub_100530780();
  if (v3 <= v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = v3;
  }
  uint64_t v5 = sub_10038460C(v2, v7, 0, v3);
LABEL_11:
  uint64_t result = swift_release();
  *uint64_t v0 = v5;
  return result;
}

uint64_t sub_10038460C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = sub_100530780();
  uint64_t v9 = 0;
  if (a3) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10 <= v8) {
    uint64_t v10 = v8;
  }
  if (v10 <= a4) {
    uint64_t v11 = a4;
  }
  else {
    uint64_t v11 = v10;
  }
  if (v11 >= 5)
  {
    uint64_t v9 = sub_100530790();
    sub_1003846A0(v9 + 16, v9 + 32, a1);
  }
  return v9;
}

uint64_t sub_1003846A0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    uint64_t v3 = (void *)result;
    sub_10052FA30();
    sub_10038600C(&qword_10066F158, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t v4 = 0;
    while (1)
    {
      uint64_t result = sub_100534B40();
      if (__OFSUB__(1 << *v3, 1)) {
        break;
      }
      if (sub_100530710())
      {
        while (1)
          sub_100530750();
      }
      uint64_t result = sub_100530740();
      if (++v4 == v6) {
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10038482C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v27 = a2;
  uint64_t v7 = sub_10052FA30();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10038600C(&qword_10066F158, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  uint64_t result = sub_100534B40();
  uint64_t v12 = 1 << *a4;
  BOOL v13 = __OFSUB__(v12, 1);
  uint64_t v14 = v12 - 1;
  if (v13)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = v14 & result;
    uint64_t v16 = sub_100530710();
    *(void *)&long long v36 = a4;
    *((void *)&v36 + 1) = a5;
    *(void *)&long long v37 = v15;
    *((void *)&v37 + 1) = v16;
    *(void *)&long long v38 = v17;
    *((void *)&v38 + 1) = v18;
    char v39 = 0;
    uint64_t v19 = sub_100530730();
    long long v28 = v36;
    long long v29 = v37;
    long long v30 = v38;
    char v31 = v39;
    if ((v20 & 1) == 0)
    {
      unint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      uint64_t v21 = v8 + 16;
      Swift::Int v22 = v23;
      uint64_t v24 = *(void *)(v21 + 56);
      do
      {
        v22(v10, v27 + v24 * v19, v7);
        sub_10038600C(&qword_10066F160, (void (*)(uint64_t))&type metadata accessor for IndexPath);
        char v25 = sub_100534BF0();
        (*(void (**)(char *, uint64_t))(v21 - 8))(v10, v7);
        if (v25) {
          break;
        }
        sub_100530750();
        long long v32 = v28;
        long long v33 = v29;
        long long v34 = v30;
        char v35 = v31;
        uint64_t v19 = sub_100530730();
      }
      while ((v26 & 1) == 0);
    }
    return v19;
  }
  return result;
}

void (*sub_100384A9C(void *a1, uint64_t a2, char a3))(uint64_t **a1, char a2)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[2] = a2;
  v8[3] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_100367FB4(a2);
  *((unsigned char *)v8 + 9) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  char v13 = v10 ^ 1;
  uint64_t v14 = v12 + ((v10 ^ 1) & 1);
  if (__OFADD__(v12, (v10 ^ 1) & 1))
  {
    __break(1u);
  }
  else
  {
    unsigned __int8 v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[4] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *uint64_t v8 = v17;
        *((unsigned char *)v8 + 8) = v13 & 1;
        return sub_100384BDC;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_10039676C();
      goto LABEL_7;
    }
    sub_100395834(v14, a3 & 1);
    unint64_t v18 = sub_100367FB4(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      v8[4] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **, char))sub_100536860();
  __break(1u);
  return result;
}

void sub_100384BDC(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = **a1;
  LOBYTE(v4) = *((unsigned char *)*a1 + 8);
  LOBYTE(v5) = *((unsigned char *)*a1 + 9);
  if (a2)
  {
    if ((*a1)[1]) {
      goto LABEL_8;
    }
    unint64_t v6 = v2[4];
    uint64_t v4 = *(void **)v2[3];
    if (*((unsigned char *)*a1 + 9)) {
      goto LABEL_11;
    }
    uint64_t v7 = v2[2];
    v4[(v6 >> 6) + 8] |= 1 << v6;
    uint64_t v8 = 8 * v6;
    *(void *)(v4[6] + v8) = v7;
    uint64_t v5 = v4[7];
    *(void *)(v5 + v8) = v3;
    uint64_t v9 = v4[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v3 = v9 + 1;
    if (!v10)
    {
LABEL_13:
      v4[2] = v3;
      goto LABEL_14;
    }
    __break(1u);
  }
  if (v4)
  {
LABEL_8:
    if (v5) {
      sub_100381FAC(v2[4], *(void *)v2[3]);
    }
    goto LABEL_14;
  }
  unint64_t v6 = v2[4];
  uint64_t v4 = *(void **)v2[3];
  if ((v5 & 1) == 0)
  {
    uint64_t v11 = v2[2];
    v4[(v6 >> 6) + 8] |= 1 << v6;
    uint64_t v12 = 8 * v6;
    *(void *)(v4[6] + v12) = v11;
    *(void *)(v4[7] + v12) = v3;
    uint64_t v13 = v4[2];
    BOOL v10 = __OFADD__(v13, 1);
    uint64_t v3 = v13 + 1;
    if (v10)
    {
      __break(1u);
      return;
    }
    goto LABEL_13;
  }
LABEL_11:
  *(void *)(v4[7] + 8 * v6) = v3;
LABEL_14:

  free(v2);
}

void (*sub_100384CEC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5))(uint64_t **a1)
{
  unint64_t v6 = v5;
  uint64_t v12 = malloc(0x38uLL);
  *a1 = v12;
  unint64_t v12[3] = a4;
  v12[4] = v5;
  v12[1] = a2;
  void v12[2] = a3;
  uint64_t v13 = *v5;
  unint64_t v15 = sub_100368064(a2, a3, a4);
  *((unsigned char *)v12 + 48) = v14 & 1;
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    char v19 = v14;
    uint64_t v20 = *(void *)(v13 + 24);
    if (v20 >= v18 && (a5 & 1) != 0)
    {
LABEL_7:
      v12[5] = v15;
      if (v19)
      {
LABEL_8:
        uint64_t v21 = *(void *)(*(void *)(*v6 + 56) + 8 * v15);
LABEL_12:
        *uint64_t v12 = v21;
        return sub_100384E40;
      }
LABEL_11:
      uint64_t v21 = 0;
      goto LABEL_12;
    }
    if (v20 >= v18 && (a5 & 1) == 0)
    {
      sub_100396C68();
      goto LABEL_7;
    }
    sub_100396110(v18, a5 & 1);
    unint64_t v22 = sub_100368064(a2, a3, a4);
    if ((v19 & 1) == (v23 & 1))
    {
      unint64_t v15 = v22;
      v12[5] = v22;
      if (v19) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **))sub_100536860();
  __break(1u);
  return result;
}

void sub_100384E40(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_100384F00(*a1, *((unsigned char *)*a1 + 48), (uint64_t *)(*a1)[4], (*a1)[5], (*a1)[1], (*a1)[2], (void *)(*a1)[3]);
  swift_bridgeObjectRelease();

  free(v1);
}

uint64_t (*sub_100384E94(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_100384EC4;
}

uint64_t sub_100384EC4(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t (*sub_100384ED0(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_100386064;
}

uint64_t *sub_100384F00(uint64_t *result, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v9 = *result;
  if (*result)
  {
    BOOL v10 = (void *)*a3;
    if (a2)
    {
      *(void *)(v10[7] + 8 * a4) = v9;
    }
    else
    {
      v10[(a4 >> 6) + 8] |= 1 << a4;
      uint64_t v12 = (void *)(v10[6] + 24 * a4);
      *uint64_t v12 = a5;
      v12[1] = a6;
      void v12[2] = a7;
      *(void *)(v10[7] + 8 * a4) = v9;
      uint64_t v13 = v10[2];
      BOOL v14 = __OFADD__(v13, 1);
      uint64_t v15 = v13 + 1;
      if (v14)
      {
        __break(1u);
        return result;
      }
      v10[2] = v15;
      swift_bridgeObjectRetain();
      id v16 = a7;
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_100382144(a4, *a3);
  }

  return (uint64_t *)swift_bridgeObjectRetain();
}

uint64_t sub_100384FEC(uint64_t a1)
{
  uint64_t v2 = sub_10052FA30();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  long long v28 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v27 = (char *)v21 - v6;
  uint64_t v7 = sub_10000BB04(&qword_10066F3B8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  sub_10038600C(&qword_10066F158, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  uint64_t v29 = sub_1005354C0();
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    char v25 = v12;
    unint64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    id v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    BOOL v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      char v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_100380508(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    char v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_100385294()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 88)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1003852EC()
{
  return sub_10037D030(*(void *)(v0 + 16), *(id *)(v0 + 24), *(void *)(v0 + 32), *(void (**)(void, void, void))(v0 + 40), *(uint64_t **)(v0 + 48), *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v0 + 56), *(uint64_t **)(v0 + 64), *(uint64_t **)(v0 + 72), *(char **)(v0 + 80), *(void *)(v0 + 88));
}

uint64_t sub_10038532C()
{
  return swift_deallocObject();
}

uint64_t sub_10038533C()
{
  swift_release();

  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return swift_deallocObject();
}

void sub_10038538C(int a1)
{
  sub_10037E13C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void (**)(void))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_100385398(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000BB04(&qword_10066EF20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100385400()
{
  return swift_deallocObject();
}

uint64_t sub_100385410()
{
  return sub_1003792E8();
}

uint64_t sub_100385418@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_100385424()
{
  return sub_10037E87C(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

uint64_t sub_10038542C()
{
  return swift_deallocObject();
}

unsigned char **sub_10038543C(unsigned char **result)
{
  uint64_t v2 = *result;
  *uint64_t v2 = *(unsigned char *)(v1 + 16);
  *uint64_t result = v2 + 1;
  return result;
}

uint64_t sub_100385450()
{
  return swift_deallocObject();
}

uint64_t sub_100385460()
{
  return sub_10039C660(*(void (**)(void))(v0 + 16));
}

uint64_t sub_100385468()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100385494()
{
  return swift_deallocObject();
}

uint64_t sub_1003854A4()
{
  return swift_deallocObject();
}

uint64_t sub_1003854B4()
{
  return swift_deallocObject();
}

uint64_t sub_1003854C4@<X0>(unsigned char *a1@<X8>)
{
  return sub_100379380(a1);
}

uint64_t sub_1003854CC()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 32))(&v2);
  return v2;
}

uint64_t sub_100385504@<X0>(uint64_t *a1@<X8>)
{
  return sub_100379468(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_100385528(uint64_t a1, uint64_t a2)
{
  return sub_100379528(a1, a2, *(uint64_t **)(v2 + 32), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100385534@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, char *))(v2 + 32);
  uint64_t v6 = *a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t result = v5(v6, (char *)a1 + *(int *)(TupleTypeMetadata2 + 48));
  *a2 = result;
  a2[1] = v9;
  return result;
}

uint64_t sub_1003855B4()
{
  return swift_deallocObject();
}

uint64_t sub_1003855C4()
{
  return swift_deallocObject();
}

uint64_t sub_1003855D4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10038560C()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v3);
  uint64_t v1 = sub_1005350F0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_100385674()
{
  return swift_deallocObject();
}

uint64_t sub_100385684()
{
  return swift_deallocObject();
}

uint64_t sub_100385694(uint64_t a1, uint64_t a2)
{
  return sub_100379EA4(a1, a2, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 32), *(void *)(v2 + 40), *(uint64_t (**)(uint64_t, uint64_t))(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(uint64_t **)(v2 + 80), *(void *)(v2 + 88)) & 1;
}

uint64_t sub_1003856DC()
{
  return swift_deallocObject();
}

uint64_t sub_1003856EC()
{
  return swift_deallocObject();
}

uint64_t sub_1003856FC()
{
  return swift_deallocObject();
}

uint64_t sub_10038570C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_100385740()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100385748()
{
  return swift_deallocObject();
}

uint64_t sub_100385758()
{
  return swift_deallocObject();
}

uint64_t sub_100385768()
{
  return swift_deallocObject();
}

uint64_t sub_100385778()
{
  return swift_deallocObject();
}

uint64_t sub_100385788()
{
  return swift_deallocObject();
}

uint64_t sub_100385798()
{
  return swift_deallocObject();
}

uint64_t sub_1003857A8()
{
  return swift_deallocObject();
}

uint64_t sub_1003857B8()
{
  return swift_deallocObject();
}

uint64_t sub_1003857C8()
{
  return swift_deallocObject();
}

uint64_t sub_1003857D8()
{
  return swift_deallocObject();
}

uint64_t sub_1003857E8()
{
  return swift_deallocObject();
}

uint64_t sub_1003857F8()
{
  return swift_deallocObject();
}

uint64_t sub_100385808()
{
  return swift_deallocObject();
}

uint64_t sub_100385818()
{
  return swift_deallocObject();
}

uint64_t sub_100385828()
{
  return swift_deallocObject();
}

uint64_t sub_100385838(uint64_t a1)
{
  uint64_t v2 = sub_10000BB04(&qword_10066F3D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100385898()
{
  return swift_deallocObject();
}

uint64_t sub_1003858B0()
{
  return swift_deallocObject();
}

uint64_t sub_1003858C4()
{
  return swift_deallocObject();
}

uint64_t sub_1003858D4()
{
  return swift_deallocObject();
}

uint64_t sub_1003858E4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10038591C()
{
  return sub_10037A100(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100385924()
{
  return swift_deallocObject();
}

uint64_t sub_100385934()
{
  return swift_deallocObject();
}

uint64_t sub_100385944()
{
  return swift_deallocObject();
}

uint64_t sub_100385954()
{
  return swift_deallocObject();
}

uint64_t sub_100385964()
{
  return swift_deallocObject();
}

uint64_t sub_100385974()
{
  return swift_deallocObject();
}

uint64_t sub_100385984()
{
  return swift_deallocObject();
}

uint64_t sub_100385994()
{
  return swift_deallocObject();
}

uint64_t sub_1003859A4()
{
  return swift_deallocObject();
}

uint64_t sub_1003859B4()
{
  return swift_deallocObject();
}

uint64_t sub_1003859C4()
{
  return swift_deallocObject();
}

uint64_t sub_1003859D4()
{
  return swift_deallocObject();
}

uint64_t sub_1003859E4()
{
  return swift_deallocObject();
}

uint64_t sub_1003859F4()
{
  return swift_deallocObject();
}

uint64_t sub_100385A08()
{
  return swift_deallocObject();
}

uint64_t sub_100385A18()
{
  return swift_deallocObject();
}

uint64_t sub_100385A28@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_100385A70()
{
  return swift_deallocObject();
}

uint64_t sub_100385A80()
{
  return swift_deallocObject();
}

uint64_t sub_100385A98()
{
  return sub_10037E8E8(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_100385AA0()
{
  return swift_deallocObject();
}

uint64_t sub_100385AB0()
{
  return swift_deallocObject();
}

uint64_t sub_100385AC4()
{
  return swift_deallocObject();
}

uint64_t sub_100385AD4()
{
  return swift_deallocObject();
}

uint64_t sub_100385AE8()
{
  return swift_deallocObject();
}

uint64_t sub_100385AF8()
{
  return swift_deallocObject();
}

uint64_t sub_100385B0C()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));

  return swift_deallocObject();
}

uint64_t sub_100385B94()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 32))();
}

uint64_t sub_100385C00()
{
  return swift_deallocObject();
}

uint64_t sub_100385C10()
{
  return swift_deallocObject();
}

uint64_t sub_100385C24()
{
  return swift_deallocObject();
}

uint64_t sub_100385C34()
{
  return swift_deallocObject();
}

uint64_t sub_100385C44()
{
  return swift_deallocObject();
}

uint64_t sub_100385C54()
{
  return swift_deallocObject();
}

uint64_t sub_100385C64()
{
  return swift_deallocObject();
}

uint64_t sub_100385C74()
{
  return swift_deallocObject();
}

uint64_t sub_100385C84()
{
  return swift_deallocObject();
}

uint64_t sub_100385C94()
{
  return swift_deallocObject();
}

uint64_t sub_100385CAC()
{
  return swift_deallocObject();
}

uint64_t sub_100385CBC()
{
  return swift_deallocObject();
}

uint64_t sub_100385CCC()
{
  return swift_deallocObject();
}

uint64_t sub_100385CDC()
{
  return swift_deallocObject();
}

uint64_t sub_100385CEC()
{
  return swift_deallocObject();
}

uint64_t sub_100385CFC()
{
  return swift_deallocObject();
}

uint64_t sub_100385D0C()
{
  return swift_deallocObject();
}

uint64_t sub_100385D1C()
{
  return swift_deallocObject();
}

uint64_t sub_100385D2C()
{
  return swift_deallocObject();
}

uint64_t sub_100385D3C()
{
  return swift_deallocObject();
}

void *sub_100385D4C(void **a1)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  uint64_t v4 = *a1;
  *uint64_t v4 = v5;
  *a1 = v4 + 1;
  return result;
}

uint64_t sub_100385D98()
{
  return swift_deallocObject();
}

uint64_t sub_100385DA8()
{
  return swift_deallocObject();
}

uint64_t sub_100385DC0()
{
  uint64_t v1 = sub_10052FA30();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_100385E50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10052FA30();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return v5(a1, v6, v3);
}

uint64_t sub_100385EC4()
{
  return swift_deallocObject();
}

uint64_t sub_100385ED4()
{
  return swift_deallocObject();
}

uint64_t sub_100385EE4()
{
  return swift_deallocObject();
}

uint64_t sub_100385EF4()
{
  return swift_deallocObject();
}

uint64_t sub_100385F04(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = (*(uint64_t (**)(void))(v3 + 16))();
  unint64_t v8 = sub_10037ECEC(v6, v7, a3);
  uint64_t v9 = (void *)*a1;
  *(void *)*a1 = v8;
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v9 + 1;
  return result;
}

uint64_t sub_100385F5C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100385FA0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100385FD8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 32))();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10038600C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003861E4()
{
  sub_10038AB58();

  return sub_10052FB00();
}

uint64_t static ApproximatelyComparable<>.<~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10038627C(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of static Comparable.< infix(_:_:));
}

uint64_t static ApproximatelyComparable<>.>~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10038627C(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of static Comparable.> infix(_:_:));
}

uint64_t sub_10038627C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (sub_10052FAE0()) {
    return 0;
  }
  else {
    return a7(a1, a2, a3, a6) & 1;
  }
}

uint64_t Result.init(success:failure:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v39 = a5;
  uint64_t v38 = sub_100535F20();
  uint64_t v36 = *(void *)(v38 - 8);
  uint64_t v8 = __chkstk_darwin(v38);
  long long v34 = (char *)&v32 - v9;
  uint64_t v35 = *(void *)(a4 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a3 - 8);
  __chkstk_darwin(v10);
  unint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005369B0();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  char v19 = (char *)&v32 - v18;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1, 1, a3) != 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v38);
    long long v28 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 32);
    v28(v15, a1, a3);
    v28(v19, (uint64_t)v15, a3);
    uint64_t v26 = v39;
LABEL_6:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v26, v19, v16);
    uint64_t v27 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v26, v27, 1, v16);
  }
  long long v33 = v12;
  uint64_t v20 = sub_100535F20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(a1, v20);
  uint64_t v21 = v36;
  unint64_t v22 = v34;
  uint64_t v23 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v34, v37, v38);
  uint64_t v24 = v35;
  int v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48))(v22, 1, a4);
  uint64_t v26 = v39;
  if (v25 != 1)
  {
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
    long long v30 = v33;
    v29(v33, v22, a4);
    v29(v19, v30, a4);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v23);
  uint64_t v27 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v26, v27, 1, v16);
}

uint64_t Collection.limited(to:)(uint64_t a1, uint64_t a2)
{
  __chkstk_darwin(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a2);
  if (sub_100535570() > a1 && __OFSUB__(sub_100535570(), a1)) {
    __break(1u);
  }
  return sub_100535040();
}

uint64_t Collection.asyncMap<A>(transform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[8] = a5;
  v6[9] = v5;
  v6[6] = a3;
  v6[7] = a4;
  v6[4] = a1;
  uint64_t v6[5] = a2;
  uint64_t v7 = sub_100535F20();
  v6[10] = v7;
  v6[11] = *(void *)(v7 - 8);
  v6[12] = swift_task_alloc();
  return _swift_task_switch(sub_1003868B0, 0, 0);
}

void sub_1003868B0()
{
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 48);
  long long v12 = *(_OWORD *)(v0 + 32);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v1, 1, 1, v6);
  uint64_t v8 = sub_100535570();
  uint64_t v9 = sub_10038970C(v1, v8, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  *(void *)(v0 + 16) = v9;
  swift_getTupleTypeMetadata2();
  uint64_t v10 = swift_task_alloc();
  *(void *)(v0 + 104) = v10;
  *(void *)(v10 + 16) = v7;
  *(void *)(v10 + 24) = v6;
  *(void *)(v10 + 32) = v5;
  *(void *)(v10 + 40) = v3;
  *(_OWORD *)(v10 + 48) = v12;
  *(void *)(v10 + 64) = v0 + 16;
  uint64_t v13 = (char *)&dword_10066F428 + dword_10066F428;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_100386A80;
  __asm { BR              X0; sub_100387D1C }
}

uint64_t sub_100386A80()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100386CD0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100386B9C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100386B9C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  *(void *)(v0 + 24) = *(void *)(v0 + 16);
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 56);
  *(void *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v3;
  sub_100535200();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v4 = sub_100534FA0();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v5(v4);
}

uint64_t sub_100386CD0()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100386D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[9] = a8;
  v8[10] = v17;
  v8[7] = a6;
  v8[8] = a7;
  uint64_t v8[5] = a4;
  void v8[6] = a5;
  v8[3] = a2;
  v8[4] = a3;
  uint64_t v9 = sub_100535F20();
  v8[11] = v9;
  v8[12] = *(void *)(v9 - 8);
  v8[13] = swift_task_alloc();
  v8[14] = *(void *)(v17 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[15] = AssociatedTypeWitness;
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  v8[16] = v11;
  v8[17] = *(void *)(v11 + 64);
  v8[18] = swift_task_alloc();
  sub_10000BB04(&qword_10066EC68);
  v8[19] = swift_task_alloc();
  v8[20] = swift_getTupleTypeMetadata2();
  sub_100535F20();
  v8[21] = swift_task_alloc();
  v8[22] = sub_100013BFC(&qword_10066E578);
  uint64_t v12 = sub_1005353B0();
  v8[23] = v12;
  v8[24] = *(void *)(v12 - 8);
  v8[25] = swift_task_alloc();
  v8[26] = swift_getTupleTypeMetadata2();
  uint64_t v13 = sub_100535F20();
  v8[27] = v13;
  v8[28] = *(void *)(v13 - 8);
  v8[29] = swift_task_alloc();
  v8[30] = swift_task_alloc();
  v8[31] = sub_100536460();
  v8[32] = swift_task_alloc();
  uint64_t v14 = sub_100536450();
  v8[33] = v14;
  v8[34] = *(void *)(v14 - 8);
  v8[35] = swift_task_alloc();
  return _swift_task_switch(sub_1003870EC, 0, 0);
}

uint64_t sub_1003870EC()
{
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 128);
  sub_100534FB0();
  sub_100536430();
  uint64_t v22 = v3;
  uint64_t v23 = v2;
  uint64_t v24 = v2 - 8;
  while (1)
  {
    uint64_t v5 = *(void *)(v0 + 232);
    uint64_t v4 = *(void *)(v0 + 240);
    uint64_t v7 = *(void *)(v0 + 208);
    uint64_t v6 = *(void *)(v0 + 216);
    sub_100536440();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v4, v5, v6);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)v24 + 48))(v4, 1, v7) == 1) {
      break;
    }
    uint64_t v8 = *(uint64_t **)(v0 + 240);
    uint64_t v9 = *(void *)(v0 + 152);
    uint64_t v10 = *(char **)(v0 + 144);
    uint64_t v11 = *(void *)(v0 + 120);
    uint64_t v27 = *(void *)(v0 + 80);
    uint64_t v12 = *(void *)(v0 + 48);
    uint64_t v28 = *(void *)(v0 + 40);
    uint64_t v13 = (char *)v8 + *(int *)(v23 + 48);
    uint64_t v26 = *v8;
    uint64_t v14 = sub_100535300();
    long long v25 = *(_OWORD *)(v0 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
    unint64_t v15 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v15(v10, v13, v11);
    unint64_t v16 = (*(unsigned __int8 *)(v22 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = 0;
    *(void *)(v17 + 24) = 0;
    *(_OWORD *)(v17 + 32) = v25;
    *(void *)(v17 + 48) = v27;
    *(void *)(v17 + 56) = v26;
    *(void *)(v17 + 64) = v28;
    *(void *)(v17 + 72) = v12;
    v15((char *)(v17 + v16), v10, v11);
    sub_1005353C0();
    swift_retain();
    sub_100387B48(v9, (uint64_t)&unk_10066F5C0, v17);
    sub_100359010(v9);
  }
  (*(void (**)(void, void))(*(void *)(v0 + 272) + 8))(*(void *)(v0 + 280), *(void *)(v0 + 264));
  sub_100535390();
  *(void *)(v0 + 288) = sub_100535200();
  sub_100535150();
  sub_100535150();
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_10038744C;
  uint64_t v19 = *(void *)(v0 + 184);
  uint64_t v20 = *(void *)(v0 + 168);
  return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v20, 0, 0, v19, v0 + 16);
}

uint64_t sub_10038744C()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_100387814;
  }
  else {
    uint64_t v1 = sub_10038755C;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_10038755C()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = (unint64_t *)v0[21];
  if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(*(void *)(v1 - 8) + 48))(v2, 1, v1) == 1)
  {
    (*(void (**)(void, void))(v0[24] + 8))(v0[25], v0[23]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    uint64_t v5 = v0[12];
    uint64_t v6 = v0[13];
    uint64_t v7 = v0[11];
    uint64_t v8 = v0[9];
    uint64_t v9 = (uint64_t *)v0[7];
    unint64_t v10 = *v2;
    uint64_t v11 = (char *)v2 + *(int *)(v1 + 48);
    uint64_t v12 = *(void *)(v8 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v6, v11, v8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v6, 0, 1, v8);
    sub_100535150();
    uint64_t v13 = *v9;
    sub_1003896B8(v10, v13);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 40))(v13+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v10, v6, v7);
    uint64_t v14 = (void *)swift_task_alloc();
    v0[37] = v14;
    void *v14 = v0;
    v14[1] = sub_10038744C;
    uint64_t v15 = v0[23];
    uint64_t v16 = v0[21];
    return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v16, 0, 0, v15, v0 + 2);
  }
}

uint64_t sub_100387814()
{
  (*(void (**)(void, void))(v0[24] + 8))(v0[25], v0[23]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100387914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[6] = a7;
  v7[7] = v9;
  v7[4] = a5;
  v7[5] = a6;
  long long v7[2] = a1;
  id v7[3] = a4;
  return _swift_task_switch(sub_100387944, 0, 0);
}

uint64_t sub_100387944()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = (int *)v0[4];
  uint64_t v3 = (void *)v0[2];
  uint64_t v4 = (char *)v3 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  *uint64_t v3 = v2;
  uint64_t v8 = (uint64_t (*)(char *, uint64_t))((char *)v1 + *v1);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[8] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100387A54;
  uint64_t v6 = v0[6];
  return v8(v4, v6);
}

uint64_t sub_100387A54()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100387B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_10000BB04(&qword_10066EC68);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100358984(a1, (uint64_t)v9);
  uint64_t v10 = sub_100535300();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_100359010((uint64_t)v9);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_100535240();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1005352F0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v12 = 0;
  uint64_t v14 = 0;
LABEL_6:
  uint64_t v15 = *v4;
  uint64_t v16 = (void *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    uint64_t v16 = v19;
    void v19[2] = v12;
    v19[3] = v14;
  }
  v18[1] = 1;
  v18[2] = v16;
  v18[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t sub_100387D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v9 + 16) = v18;
  *uint64_t v18 = v9;
  v18[1] = sub_10000F280;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

BOOL Collection<>.contains(approximatelyMatching:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_100535F20();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v15[-v11];
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  uint64_t v19 = a1;
  sub_100534FE0();
  BOOL v13 = (*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v12, 1, AssociatedTypeWitness) != 1;
  (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
  return v13;
}

uint64_t Collection<>.first(approximatelyMatching:)()
{
  return sub_100534FE0();
}

uint64_t Collection<>.firstIndex(approximatelyMatching:)()
{
  return sub_1005355C0();
}

uint64_t static DisplayUnit.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v37 = *(void *)(a3 - 8);
  uint64_t v4 = __chkstk_darwin(a1);
  uint64_t v32 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  char v31 = (char *)&v30 - v6;
  uint64_t v34 = v7;
  uint64_t v8 = type metadata accessor for DisplayUnit();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v30 - v13;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v16 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v17 = __chkstk_darwin(TupleTypeMetadata2);
  uint64_t v19 = (char *)&v30 - v18;
  uint64_t v20 = (char *)&v30 + *(int *)(v17 + 48) - v18;
  uint64_t v33 = v9;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v21((char *)&v30 - v18, v35, v8);
  v21(v20, v36, v8);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v21(v14, (uint64_t)v19, v8);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v27 = v37;
      uint64_t v28 = v31;
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v31, v20, a3);
      char v24 = sub_100534BF0();
      long long v25 = *(void (**)(char *, uint64_t))(v27 + 8);
      v25(v28, a3);
      uint64_t v26 = v14;
      goto LABEL_6;
    }
LABEL_8:
    (*(void (**)(char *, uint64_t))(v37 + 8))(v14, a3);
    char v24 = 0;
    uint64_t v8 = TupleTypeMetadata2;
    goto LABEL_9;
  }
  v21(v12, (uint64_t)v19, v8);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v14 = v12;
    goto LABEL_8;
  }
  uint64_t v22 = v37;
  uint64_t v23 = v32;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v32, v20, a3);
  char v24 = sub_100534BF0();
  long long v25 = *(void (**)(char *, uint64_t))(v22 + 8);
  v25(v23, a3);
  uint64_t v26 = v12;
LABEL_6:
  v25(v26, a3);
  uint64_t v16 = v33;
LABEL_9:
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v8);
  return v24 & 1;
}

uint64_t sub_100388414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static DisplayUnit.__derived_enum_equals(_:_:)(a1, a2, *(void *)(a3 + 16));
}

uint64_t ClosedRange<>.linearMap(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v16 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v16 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v16 - v12, v3, v4);
  sub_100536420();
  sub_100535540();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  sub_100536410();
  v14(v11, v4);
  return ((uint64_t (*)(char *, uint64_t))v14)(v13, v4);
}

uint64_t ClosedRange<>.normalize(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(a1);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v11 - v7;
  sub_100536420();
  sub_100536420();
  sub_100534B30();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v6, v2);
  return ((uint64_t (*)(char *, uint64_t))v9)(v8, v2);
}

uint64_t ClosedRange<>.clampedNormalize(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  ClosedRange.clamp(_:)(v5, v8);
  ClosedRange<>.normalize(_:)((uint64_t)v7, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t Array.extract(_:)()
{
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v1 = sub_100536280();
  if (!v0)
  {
    swift_getWitnessTable();
    swift_getWitnessTable();
    sub_1005356A0();
  }
  return v1;
}

uint64_t Array.extractFirst(where:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1005355C0();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    if (v6)
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 56))(a2, 1, 1);
    }
    else
    {
      sub_1005351E0();
      return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 56))(a2, 0, 1);
    }
  }
  return result;
}

uint64_t Array.removingDuplicates<A>(with:)()
{
  sub_100534A70();
  sub_100535200();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v0 = sub_100536280();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100388B6C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(class metadata base offset for KeyPath + *a3 + 8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  __chkstk_darwin();
  char v6 = (char *)&v9 - v5;
  swift_getAtKeyPath();
  sub_100535500();
  char v7 = sub_1005354D0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7 & 1;
}

uint64_t Collection.removingDuplicates<A>(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = sub_100534A70();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v11, v4, a2);
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  uint64_t v17 = a4;
  uint64_t v18 = &v20;
  uint64_t v19 = a1;
  uint64_t v12 = sub_100534FF0();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_100388E30(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(class metadata base offset for KeyPath + *a3 + 8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(a1);
  __chkstk_darwin(v5);
  char v7 = (char *)&v10 - v6;
  swift_getAtKeyPath();
  sub_100535500();
  char v8 = sub_1005354D0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v8 & 1;
}

uint64_t Sequence.sorted<A>(by:comparator:)()
{
  return sub_100535010();
}

uint64_t sub_100388FE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, char *), uint64_t a4, void *a5)
{
  uint64_t v6 = *(void *)(class metadata base offset for KeyPath + *a5 + 8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v11 = (char *)v15 - v10;
  swift_getAtKeyPath();
  swift_getAtKeyPath();
  char v12 = a3(v11, v9);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v9, v6);
  v13(v11, v6);
  return v12 & 1;
}

uint64_t Sequence<>.excluding(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  uint64_t v8[5] = a1;
  swift_bridgeObjectRetain();
  uint64_t v9 = Sequence.exclude(_:)((uint64_t)sub_10038AC4C, (uint64_t)v8, a2, a3);
  swift_release();
  return v9;
}

{
  uint64_t v7;
  void *v8;
  uint64_t v9;

  swift_getAssociatedTypeWitness();
  sub_100535200();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v7 = sub_100535510();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  uint64_t v8[5] = v7;
  uint64_t v9 = Sequence.exclude(_:)((uint64_t)sub_10038ABE4, (uint64_t)v8, a2, a3);
  swift_release();
  return v9;
}

uint64_t sub_100389208()
{
  return sub_100535050() & 1;
}

uint64_t Sequence.exclude(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __chkstk_darwin(a1);
  (*(void (**)(unsigned char *, uint64_t))(v10 + 16))(&v12[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], v4);
  uint64_t v13 = a3;
  uint64_t v14 = a4;
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  return sub_100534FF0();
}

uint64_t Sequence<>.exclude(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v5[2] = a2;
  void v5[3] = a3;
  v5[4] = a4;
  v5[5] = a1;
  return Sequence.exclude(_:)((uint64_t)sub_100389ACC, (uint64_t)v5, a2, a3);
}

{
  void v5[8];

  void v5[2] = a2;
  void v5[3] = a3;
  v5[4] = a4;
  v5[5] = a1;
  return Sequence.exclude(_:)((uint64_t)sub_100389B4C, (uint64_t)v5, a2, a3);
}

uint64_t Sequence<>.exclude(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[2] = a2;
  v4[3] = a3;
  void v4[4] = a1;
  return Sequence.exclude(_:)((uint64_t)sub_100389B38, (uint64_t)v4, a2, a3);
}

uint64_t _s14MusicUtilities16EquatableIgnoredV12wrappedValuexvs_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t _s14MusicUtilities16EquatableIgnoredV12wrappedValueACyxGx_tcfC_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

Swift::Int HashableIgnored.hashValue.getter()
{
  return sub_1005369A0();
}

Swift::Int sub_100389684()
{
  return sub_1005369A0();
}

uint64_t sub_1003896B8(unint64_t a1, uint64_t a2)
{
  uint64_t result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v5 = a2;
  }
  if (*(void *)(v5 + 16) <= a1) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_10038970C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_100535160();
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = result;
    if (a2)
    {
      uint64_t v9 = v7;
      uint64_t v10 = *(void *)(a3 - 8);
      uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
      v11(v7, a1, a3);
      uint64_t v12 = a2 - 1;
      if (v12)
      {
        uint64_t v13 = *(void *)(v10 + 72);
        uint64_t v14 = v9 + v13;
        do
        {
          v11(v14, a1, a3);
          v14 += v13;
          --v12;
        }
        while (v12);
      }
    }
    sub_100535200();
    return v8;
  }
  return result;
}

void sub_100389810()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100015868;
  uint64_t v2 = (char *)&dword_10066F418 + dword_10066F418;
  __asm { BR              X9; sub_100386D44 }
}

uint64_t sub_100389910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100535F20();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t sub_100389984()
{
  return sub_1003899A0() & 1;
}

uint64_t sub_1003899A0()
{
  return sub_10052FAE0() & 1;
}

uint64_t type metadata accessor for DisplayUnit()
{
  return sub_100086CCC();
}

uint64_t sub_100389A28(uint64_t a1)
{
  return sub_100388B6C(a1, *(void *)(v1 + 24), *(void **)(v1 + 32)) & 1;
}

uint64_t sub_100389A4C(uint64_t a1)
{
  return sub_100388E30(a1, *(void *)(v1 + 40), *(void **)(v1 + 48)) & 1;
}

uint64_t sub_100389A74(uint64_t a1, uint64_t a2)
{
  return sub_100388FE4(a1, a2, *(uint64_t (**)(char *, char *))(v2 + 40), *(void *)(v2 + 48), *(void **)(v2 + 56)) & 1;
}

BOOL sub_100389A9C()
{
  return ((*(uint64_t (**)(void))(v0 + 32))() & 1) == 0;
}

uint64_t sub_100389ACC()
{
  return sub_100534BF0() & 1;
}

BOOL sub_100389B38(void *a1)
{
  return *a1 == *(void *)(v1 + 32);
}

uint64_t sub_100389B4C()
{
  return sub_100534BF0() & 1;
}

uint64_t sub_100389BC4()
{
  return swift_getWitnessTable();
}

uint64_t sub_100389BE0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_100389C6C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(_DWORD *)(v4 + 80);
  if (v6 <= 7 && (unint64_t)(v5 + 1) <= 0x18 && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    unsigned int v10 = a2[v5];
    if (v10 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_18;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_18;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_18;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_18:
          int v13 = (v12 | ((v10 - 2) << (8 * v5))) + 2;
          unsigned int v14 = v12 + 2;
          if (v5 >= 4) {
            unsigned int v10 = v14;
          }
          else {
            unsigned int v10 = v13;
          }
          break;
        default:
          break;
      }
    }
    (*(void (**)(void *))(v4 + 16))(a1);
    *((unsigned char *)v3 + v5) = v10 == 1;
  }
  else
  {
    uint64_t v9 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return v3;
}

uint64_t sub_100389DD4(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_10;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_10;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_10;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_10:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  BOOL v10 = v5 == 1;
  (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
  *(unsigned char *)(a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_100389EF4(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 + 64);
    (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    unsigned int v9 = a2[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_11;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_11;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_11;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_11:
          int v13 = (v12 | (v10 << (8 * v8))) + 2;
          unsigned int v9 = v12 + 2;
          if (v8 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    BOOL v14 = v9 == 1;
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v5);
    a1[v8] = v14;
  }
  return a1;
}

uint64_t sub_10038A05C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_10;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_10;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_10;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_10:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  BOOL v10 = v5 == 1;
  (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
  *(unsigned char *)(a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_10038A17C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 + 64);
    (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    unsigned int v9 = a2[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_11;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_11;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_11;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_11:
          int v13 = (v12 | (v10 << (8 * v8))) + 2;
          unsigned int v9 = v12 + 2;
          if (v8 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    BOOL v14 = v9 == 1;
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v5);
    a1[v8] = v14;
  }
  return a1;
}

uint64_t sub_10038A2E4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_20;
  }
  uint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)((char *)a1 + v4);
      if (!v6) {
        goto LABEL_20;
      }
      goto LABEL_12;
    }
    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)((char *)a1 + v4);
      if (!*(unsigned __int16 *)((char *)a1 + v4)) {
        goto LABEL_20;
      }
      goto LABEL_12;
    }
    if (v8 < 2)
    {
LABEL_20:
      unsigned int v10 = *((unsigned __int8 *)a1 + v3);
      if (v10 >= 2) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v6 = *((unsigned __int8 *)a1 + v4);
  if (!*((unsigned char *)a1 + v4)) {
    goto LABEL_20;
  }
LABEL_12:
  int v9 = (v6 - 1) << v5;
  if (v4 > 3) {
    int v9 = 0;
  }
  if (v4)
  {
    if (v4 > 3) {
      LODWORD(v4) = 4;
    }
    switch((int)v4)
    {
      case 2:
        LODWORD(v4) = *a1;
        break;
      case 3:
        LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v4) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v4) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v4 | v9) + 255;
}

void sub_10038A40C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_32:
        __break(1u);
        JUMPOUT(0x10038A5C8);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_21;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_20;
      case 3:
        goto LABEL_32;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_21;
      default:
LABEL_20:
        if (a2) {
LABEL_21:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_10038A5F0(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  uint64_t v3 = a1[v2];
  int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_10;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_10;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_10;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_10:
        unsigned int v7 = (v6 | (v4 << (8 * v2))) + 2;
        LODWORD(v3) = v6 + 2;
        if (v2 >= 4) {
          uint64_t v3 = v3;
        }
        else {
          uint64_t v3 = v7;
        }
        break;
      default:
        return v3;
    }
  }
  return v3;
}

void sub_10038A69C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t type metadata accessor for EquatableIgnored()
{
  return sub_100086CCC();
}

uint64_t sub_10038A7A4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_10038A900(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x10038AB18);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for HashableIgnored()
{
  return sub_100086CCC();
}

unint64_t sub_10038AB58()
{
  unint64_t result = qword_10066F5B0;
  if (!qword_10066F5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066F5B0);
  }
  return result;
}

uint64_t sub_10038ABAC()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10038ABE4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();

  return Set.contains(_:)(a1, v3, AssociatedTypeWitness, v4);
}

uint64_t sub_10038AC4C()
{
  return sub_100389208();
}

uint64_t sub_10038AC58()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);

  return swift_deallocObject();
}

void sub_10038AD48()
{
  swift_getAssociatedTypeWitness();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10000F280;
  uint64_t v2 = (char *)&dword_10066F5B8 + dword_10066F5B8;
  __asm { BR              X9; sub_100387914 }
}

uint64_t Text.withChevron<A>(_:tintColor:)@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  char v33 = a4 & 1;
  uint64_t v10 = sub_100531AD0();
  __chkstk_darwin(v10 - 8);
  id v11 = a1;
  NSString v12 = sub_100534CA0();
  id v13 = [self systemImageNamed:v12 withConfiguration:v11];

  if (v13)
  {
    sub_100531AC0();
    v35._uint64_t countAndFlagsBits = 0;
    v35._object = (void *)0xE000000000000000;
    sub_100531AB0(v35);
    v36._uint64_t countAndFlagsBits = 41154;
    v36._object = (void *)0xA200000000000000;
    sub_100531AA0(v36);
    v37._uint64_t countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    sub_100531AB0(v37);
    id v14 = [v13 imageWithRenderingMode:2];
    sub_100532C10();
    sub_100531A90();
    swift_release();
    v38._uint64_t countAndFlagsBits = 0;
    v38._object = (void *)0xE000000000000000;
    sub_100531AB0(v38);
    sub_100531AF0();
    uint64_t v15 = sub_1005325D0();
    uint64_t v17 = v16;
    char v19 = v18 & 1;
    uint64_t v20 = sub_100532520();
    uint64_t v32 = v13;
    uint64_t v22 = v21;
    char v24 = v23 & 1;
    sub_1000245D0(v15, v17, v19);
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_100532550();
    uint64_t v27 = v26;
    LOBYTE(v17) = v28;
    a5 = v29;

    char v30 = v17 & 1;
    sub_1000245D0(v20, v22, v24);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a6 = v25;
  }
  else
  {
    *(void *)a6 = a2;
    uint64_t v27 = a3;
    char v30 = v33;
    sub_10003B338(a2, a3, v33);
    uint64_t result = swift_bridgeObjectRetain();
  }
  *(void *)(a6 + 8) = v27;
  *(unsigned char *)(a6 + 16) = v30;
  *(void *)(a6 + 24) = a5;
  return result;
}

uint64_t Text.playableForegroundStyle<A>(_:isPlayable:)(uint64_t a1, char a2)
{
  __chkstk_darwin(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  if (swift_dynamicCast())
  {
    if (a2) {
      int v7 = v9[7];
    }
    else {
      int v7 = sub_100531F30();
    }
    v9[3] = v7;
  }
  return sub_100532520();
}

uint64_t View.playableForegroundStyle<A>(_:isPlayable:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v16 = a5;
  uint64_t v8 = *(void *)(a4 - 8);
  __chkstk_darwin(a1);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PlayableForegroundStyle();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v16 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a4);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v14, v10, a4);
  v14[*(int *)(v11 + 36)] = a2;
  sub_100532A20();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t type metadata accessor for PlayableForegroundStyle()
{
  return sub_100086CCC();
}

uint64_t sub_10038B494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v63 = a1;
  uint64_t v66 = a3;
  swift_getWitnessTable();
  uint64_t v5 = sub_100531EE0();
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v57 = *(void *)(a2 + 24);
  uint64_t v67 = sub_100531FE0();
  uint64_t v7 = sub_1005314B0();
  uint64_t v60 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v58 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v59 = (char *)&v55 - v10;
  sub_100013BFC(&qword_10066F6E0);
  uint64_t v68 = v5;
  uint64_t v11 = sub_1005314B0();
  uint64_t v56 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  id v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v55 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v55 - v19;
  uint64_t v21 = *(void *)(v6 - 8);
  __chkstk_darwin(v18);
  char v23 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = v24;
  uint64_t v25 = sub_100531DC0();
  uint64_t v64 = *(void *)(v25 - 8);
  uint64_t v65 = v25;
  __chkstk_darwin(v25);
  unint64_t v62 = (char *)&v55 - v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, v3, v6);
  if (swift_dynamicCast())
  {
    uint64_t v60 = v7;
    uint64_t v27 = v56;
    char v28 = v20;
    uint64_t v29 = v17;
    uint64_t v30 = v61;
    if (*(unsigned char *)(v3 + *(int *)(a2 + 36))) {
      int v31 = v83;
    }
    else {
      int v31 = sub_100531F00();
    }
    int v83 = v31;
    uint64_t WitnessTable = swift_getWitnessTable();
    unint64_t v59 = (char *)WitnessTable;
    sub_1005327E0();
    uint64_t v45 = sub_100014CCC(&qword_10066F6E8, &qword_10066F6E0);
    uint64_t v71 = WitnessTable;
    uint64_t v72 = v45;
    uint64_t v63 = swift_getWitnessTable();
    int v46 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
    v46(v28, v29, v30);
    unint64_t v47 = *(void (**)(char *, uint64_t))(v27 + 8);
    v47(v29, v30);
    v46(v14, v28, v30);
    uint64_t v48 = swift_getWitnessTable();
    id v69 = v59;
    uint64_t v70 = v48;
    swift_getWitnessTable();
    int v41 = v62;
    sub_10038BC24((uint64_t)v14, v30);
    v47(v14, v30);
    v47(v28, v30);
    uint64_t v43 = v64;
    uint64_t v42 = v65;
  }
  else
  {
    uint64_t v32 = swift_getWitnessTable();
    uint64_t v33 = (uint64_t)v58;
    sub_1005327E0();
    uint64_t v34 = swift_getWitnessTable();
    uint64_t v81 = v32;
    uint64_t v82 = v34;
    uint64_t v63 = swift_getWitnessTable();
    uint64_t v35 = v60;
    Swift::String v36 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
    Swift::String v37 = v59;
    v36(v59, v33, v7);
    Swift::String v38 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v38(v33, v7);
    v36((char *)v33, (uint64_t)v37, v7);
    uint64_t v39 = sub_100014CCC(&qword_10066F6E8, &qword_10066F6E0);
    uint64_t v79 = v32;
    uint64_t v80 = v39;
    uint64_t v40 = v61;
    swift_getWitnessTable();
    int v41 = v62;
    sub_10038BD1C(v33, v40, v7);
    v38(v33, v7);
    v38((uint64_t)v37, v7);
    uint64_t v43 = v64;
    uint64_t v42 = v65;
  }
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v50 = sub_100014CCC(&qword_10066F6E8, &qword_10066F6E0);
  uint64_t v77 = v49;
  uint64_t v78 = v50;
  uint64_t v51 = swift_getWitnessTable();
  uint64_t v52 = swift_getWitnessTable();
  uint64_t v75 = v49;
  uint64_t v76 = v52;
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v73 = v51;
  uint64_t v74 = v53;
  swift_getWitnessTable();
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 16))(v66, v41, v42);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v41, v42);
}

uint64_t sub_10038BC24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100531DA0();
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_100531DB0();
}

uint64_t sub_10038BD1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_100531DA0();
  __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_100531DB0();
}

uint64_t ListChevron.body.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  sub_10000BB04(&qword_10066F5C8);
  sub_10038C534();

  return sub_100532DD0();
}

uint64_t sub_10038BECC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10038BF04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v49 = a1;
  uint64_t v48 = sub_10000BB04(&qword_10066F5F0);
  __chkstk_darwin(v48);
  unint64_t v54 = (char *)&v43 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_100532C90();
  uint64_t v2 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v51 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_10000BB04(&qword_10066F6F0);
  uint64_t v4 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_10000BB04(&qword_10066F5E8);
  __chkstk_darwin(v50);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000BB04(&qword_10066F6F8);
  uint64_t v45 = *(void *)(v9 - 8);
  uint64_t v46 = v9;
  __chkstk_darwin(v9);
  unint64_t v44 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000BB04(&qword_10066F5E0);
  __chkstk_darwin(v11 - 8);
  unint64_t v47 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100532C20();
  uint64_t v14 = sub_1005322E0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v55 = v13;
  uint64_t v56 = KeyPath;
  unint64_t v57 = v14;
  sub_100532350();
  sub_10000BB04(&qword_10066F600);
  sub_10038C7D8();
  sub_100532670();
  uint64_t v16 = v50;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v18 = v51;
  uint64_t v17 = v52;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v51, enum case for Image.Scale.small(_:), v52);
  uint64_t v19 = swift_getKeyPath();
  uint64_t v20 = (uint64_t *)&v8[*(int *)(v16 + 36)];
  uint64_t v21 = sub_10000BB04(&qword_10066F628);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))((char *)v20 + *(int *)(v21 + 28), v18, v17);
  uint64_t *v20 = v19;
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t v43 = v8;
  char v23 = v8;
  uint64_t v24 = v53;
  v22(v23, v6, v53);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v18, v17);
  uint64_t v25 = v6;
  uint64_t v26 = (uint64_t)v54;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v25, v24);
  uint64_t v27 = enum case for DynamicTypeSize.accessibility1(_:);
  uint64_t v28 = sub_100531470();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v26, v27, v28);
  sub_10038D0DC((unint64_t *)&unk_10066F700, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = sub_100534BF0();
  if (result)
  {
    unint64_t v30 = sub_10038C704();
    uint64_t v31 = sub_100014CCC(&qword_10066F630, &qword_10066F5F0);
    uint64_t v32 = (uint64_t)v43;
    uint64_t v33 = v44;
    uint64_t v34 = v48;
    sub_1005327C0();
    sub_100013C44(v26, &qword_10066F5F0);
    sub_100013C44(v32, &qword_10066F5E8);
    uint64_t v55 = v16;
    uint64_t v56 = v34;
    unint64_t v57 = v30;
    uint64_t v58 = v31;
    swift_getOpaqueTypeConformance2();
    uint64_t v35 = v46;
    uint64_t v36 = (uint64_t)v47;
    sub_1005328B0();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v33, v35);
    id v37 = [self tertiaryLabelColor];
    uint64_t v38 = sub_100532B20();
    uint64_t v39 = swift_getKeyPath();
    uint64_t v55 = v38;
    swift_retain();
    uint64_t v40 = sub_1005310E0();
    uint64_t v41 = v49;
    sub_10038D17C(v36, v49);
    swift_release();
    uint64_t v42 = (uint64_t *)(v41 + *(int *)(sub_10000BB04(&qword_10066F5C8) + 36));
    *uint64_t v42 = v39;
    v42[1] = v40;
    return sub_100013C44(v36, &qword_10066F5E0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_10038C534()
{
  unint64_t result = qword_10066F5D0;
  if (!qword_10066F5D0)
  {
    sub_100013BFC(&qword_10066F5C8);
    sub_10038C5D4();
    sub_100014CCC(&qword_10066F640, &qword_10066F648);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066F5D0);
  }
  return result;
}

unint64_t sub_10038C5D4()
{
  unint64_t result = qword_10066F5D8;
  if (!qword_10066F5D8)
  {
    sub_100013BFC(&qword_10066F5E0);
    sub_100013BFC(&qword_10066F5E8);
    sub_100013BFC(&qword_10066F5F0);
    sub_10038C704();
    sub_100014CCC(&qword_10066F630, &qword_10066F5F0);
    swift_getOpaqueTypeConformance2();
    sub_10038D0DC(&qword_10066F638, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066F5D8);
  }
  return result;
}

unint64_t sub_10038C704()
{
  unint64_t result = qword_10066F5F8;
  if (!qword_10066F5F8)
  {
    sub_100013BFC(&qword_10066F5E8);
    sub_100013BFC(&qword_10066F600);
    sub_10038C7D8();
    swift_getOpaqueTypeConformance2();
    sub_100014CCC(&qword_10066F620, &qword_10066F628);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066F5F8);
  }
  return result;
}

unint64_t sub_10038C7D8()
{
  unint64_t result = qword_10066F608;
  if (!qword_10066F608)
  {
    sub_100013BFC(&qword_10066F600);
    sub_100014CCC(&qword_10066F610, &qword_10066F618);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066F608);
  }
  return result;
}

uint64_t sub_10038C878()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  swift_retain();
  sub_10000BB04(&qword_10066F5C8);
  sub_10038C534();

  return sub_100532DD0();
}

uint64_t _UIHostingView.init(content:)(uint64_t a1)
{
  uint64_t v1 = (void (*)(void))__chkstk_darwin(a1);
  v1();
  return sub_100531400();
}

uint64_t sub_10038C9B8()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for ListChevron()
{
  return &type metadata for ListChevron;
}

void *sub_10038C9E4()
{
  return &protocol witness table for Text;
}

uint64_t sub_10038C9F0()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038CA84()
{
  return sub_100014CCC(&qword_10066F650, qword_10066F658);
}

uint64_t sub_10038CAC0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10038CB58(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_22;
  }
  uint64_t v9 = v6 + 1;
  char v10 = 8 * (v6 + 1);
  if ((v6 + 1) > 3) {
    goto LABEL_7;
  }
  unsigned int v12 = ((v8 + ~(-1 << v10)) >> v10) + 1;
  if (HIWORD(v12))
  {
    int v11 = *(_DWORD *)((char *)a1 + v9);
    if (v11) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v12 <= 0xFF)
    {
      if (v12 < 2) {
        goto LABEL_22;
      }
LABEL_7:
      int v11 = *((unsigned __int8 *)a1 + v9);
      if (!*((unsigned char *)a1 + v9)) {
        goto LABEL_22;
      }
LABEL_14:
      int v13 = (v11 - 1) << v10;
      if (v9 > 3) {
        int v13 = 0;
      }
      if (v9)
      {
        if (v9 > 3) {
          LODWORD(v9) = 4;
        }
        switch((int)v9)
        {
          case 2:
            LODWORD(v9) = *a1;
            break;
          case 3:
            LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            LODWORD(v9) = *(_DWORD *)a1;
            break;
          default:
            LODWORD(v9) = *(unsigned __int8 *)a1;
            break;
        }
      }
      return v7 + (v9 | v13) + 1;
    }
    int v11 = *(unsigned __int16 *)((char *)a1 + v9);
    if (*(unsigned __int16 *)((char *)a1 + v9)) {
      goto LABEL_14;
    }
  }
LABEL_22:
  if (v5 >= 0xFE) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unsigned int v15 = *((unsigned __int8 *)a1 + v6);
  if (v15 < 2) {
    return 0;
  }
  return ((v15 + 2147483646) & 0x7FFFFFFF) + 1;
}

void sub_10038CCE8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v10 = v9 + 1;
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v9 != -1)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v9 + 1);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x10038CF28);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 < 0xFE)
        {
          a1[v9] = a2 + 1;
        }
        else
        {
          uint64_t v18 = *(void (**)(void))(v6 + 56);
          v18();
        }
      }
      return;
  }
}

uint64_t sub_10038CF50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10038CF94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1005318D0();
  *a1 = result;
  return result;
}

uint64_t sub_10038CFC0()
{
  return sub_1005318E0();
}

uint64_t sub_10038CFEC()
{
  return sub_1005316C0();
}

uint64_t sub_10038D010(uint64_t a1)
{
  uint64_t v2 = sub_100532C90();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1005316D0();
}

uint64_t sub_10038D0DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10038D124@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1005318F0();
  *a1 = result;
  return result;
}

uint64_t sub_10038D150()
{
  return sub_100531900();
}

uint64_t sub_10038D17C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000BB04(&qword_10066F5E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10038D1E4()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038D384(unint64_t a1)
{
  unint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v1 = v3;
  if (!result || (v3 & 0x8000000000000000) != 0 || (v3 & 0x4000000000000000) != 0)
  {
    uint64_t result = sub_1002F76C8(v3);
    unint64_t v3 = result;
    *unint64_t v1 = result;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v5 + 8 * a1;
    uint64_t v9 = *(void *)(v8 + 32);
    memmove((void *)(v8 + 32), (const void *)(v8 + 40), 8 * (v6 - 1 - a1));
    *(void *)(v5 + 16) = v7;
    sub_100535100();
    return v9;
  }
  return result;
}

size_t sub_10038D41C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  size_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    size_t result = sub_100395820(v5);
    uint64_t v5 = (void *)result;
  }
  unint64_t v7 = v5[2];
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = v7 - 1;
    uint64_t v9 = *(void *)(_s9_ObserverC18HandlerAssociationVMa(0) - 8);
    uint64_t v10 = *(void *)(v9 + 72);
    unint64_t v11 = (unint64_t)v5
        + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
        + v10 * a1;
    size_t result = sub_100394814(v11, a2);
    if (v10 > 0 || v11 >= v11 + v10 + v10 * (v8 - a1))
    {
      size_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v10)
    {
      size_t result = swift_arrayInitWithTakeBackToFront();
    }
    void v5[2] = v8;
    *uint64_t v2 = v5;
  }
  return result;
}

UIBarButtonItem __swiftcall UIBarButtonItem.init(image:style:)(UIImage_optional image, UIBarButtonItemStyle style)
{
  Class isa = image.value.super.isa;
  id v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithImage:image.value.super.isa style:*(void *)&image.is_nil target:0 action:0];

  return (UIBarButtonItem)v3;
}

void *UIBarButtonItem.spacerBarButtonTag.unsafeMutableAddressor()
{
  return &static UIBarButtonItem.spacerBarButtonTag;
}

uint64_t static UIBarButtonItem.spacerBarButtonTag.getter()
{
  return 9999;
}

void sub_10038D5B0()
{
  static UIBarButtonItem.preferredFixedSpace = 0x4030000000000000;
}

uint64_t *UIBarButtonItem.preferredFixedSpace.unsafeMutableAddressor()
{
  if (qword_10066E388 != -1) {
    swift_once();
  }
  return &static UIBarButtonItem.preferredFixedSpace;
}

double static UIBarButtonItem.preferredFixedSpace.getter()
{
  if (qword_10066E388 != -1) {
    swift_once();
  }
  return *(double *)&static UIBarButtonItem.preferredFixedSpace;
}

id static UIBarButtonItem.spacerBarButtonItem()()
{
  uint64_t v0 = self;
  if (qword_10066E388 != -1) {
    swift_once();
  }
  id v1 = [v0 fixedSpaceItemOfWidth:*(double *)&static UIBarButtonItem.preferredFixedSpace];
  [v1 setTag:9999];
  return v1;
}

UIBarButtonItem_optional __swiftcall UINavigationItem.existingBarButtonItem(for:)(UIView a1)
{
  uint64_t v2 = v1;
  id v3 = [v1 rightBarButtonItems];
  if (v3)
  {
    uint64_t v4 = v3;
    sub_100123DA4(0, (unint64_t *)&qword_10066F710);
    unint64_t v5 = sub_1005350E0();

    uint64_t v32 = v2;
    if (v5 >> 62) {
      goto LABEL_14;
    }
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v7 = a1.super.super.isa;
    swift_bridgeObjectRetain();
    for (; v6; uint64_t v6 = sub_100536470())
    {
      uint64_t v8 = 4;
      while (1)
      {
        id v9 = (v5 & 0xC000000000000001) != 0 ? (id)sub_100536210() : *(id *)(v5 + 8 * v8);
        uint64_t v10 = v9;
        uint64_t v11 = v8 - 3;
        if (__OFADD__(v8 - 4, 1)) {
          break;
        }
        id v12 = [v9 customView];
        if (v12)
        {
          int v13 = v12;
          sub_100123DA4(0, (unint64_t *)&qword_10066F718);
          unsigned int v14 = a1.super.super.isa;
          id v15 = v13;
          LOBYTE(v13) = sub_100535D90();

          if (v13)
          {

            swift_bridgeObjectRelease_n();
            goto LABEL_33;
          }
        }

        ++v8;
        if (v11 == v6) {
          goto LABEL_15;
        }
      }
      __break(1u);
LABEL_14:
      int v17 = a1.super.super.isa;
      swift_bridgeObjectRetain();
    }
LABEL_15:

    swift_bridgeObjectRelease_n();
    uint64_t v2 = v32;
  }
  id v18 = [v2 leftBarButtonItems:v32];
  if (v18)
  {
    uint64_t v19 = v18;
    sub_100123DA4(0, (unint64_t *)&qword_10066F710);
    unint64_t v20 = sub_1005350E0();

    if (v20 >> 62) {
      goto LABEL_30;
    }
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v22 = a1.super.super.isa;
    swift_bridgeObjectRetain();
    for (; v21; uint64_t v21 = sub_100536470())
    {
      uint64_t v23 = 4;
      while (1)
      {
        id v24 = (v20 & 0xC000000000000001) != 0 ? (id)sub_100536210() : *(id *)(v20 + 8 * v23);
        uint64_t v10 = v24;
        uint64_t v25 = v23 - 3;
        if (__OFADD__(v23 - 4, 1)) {
          break;
        }
        id v26 = [v24 customView];
        if (v26)
        {
          uint64_t v27 = v26;
          sub_100123DA4(0, (unint64_t *)&qword_10066F718);
          uint64_t v28 = a1.super.super.isa;
          id v29 = v27;
          LOBYTE(v27) = sub_100535D90();

          if (v27)
          {

            swift_bridgeObjectRelease();
            goto LABEL_32;
          }
        }

        ++v23;
        if (v25 == v21) {
          goto LABEL_31;
        }
      }
      __break(1u);
LABEL_30:
      unint64_t v30 = a1.super.super.isa;
      swift_bridgeObjectRetain();
    }
LABEL_31:

    swift_bridgeObjectRelease();
    uint64_t v10 = 0;
LABEL_32:
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
  }
LABEL_33:
  uint64_t v31 = (objc_class *)v10;
  result.value.super.super.Class isa = v31;
  result.is_nil = v16;
  return result;
}

uint64_t Collection<>.first(embedding:)()
{
  sub_100534FE0();
  return v1;
}

void *UINavigationItem.existingBarButtonItems(for:)(unint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = [v1 rightBarButtonItems];
  if (v4)
  {
    unint64_t v5 = v4;
    sub_100123DA4(0, (unint64_t *)&qword_10066F710);
    unint64_t v6 = sub_1005350E0();

    swift_bridgeObjectRetain();
    unint64_t v7 = sub_10039387C(v6, a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10036BD00((unint64_t)v7);
  }
  id v8 = [v2 leftBarButtonItems];
  if (v8)
  {
    id v9 = v8;
    sub_100123DA4(0, (unint64_t *)&qword_10066F710);
    unint64_t v10 = sub_1005350E0();

    swift_bridgeObjectRetain();
    uint64_t v11 = sub_10039387C(v10, a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10036BD00((unint64_t)v11);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t Collection<>.all(embedding:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __chkstk_darwin(a1);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(&v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], v3, a2);
  uint64_t v11 = a2;
  uint64_t v12 = a3;
  uint64_t v13 = a1;
  return sub_100534FF0();
}

id sub_10038DCFC(id *a1, void *a2)
{
  id result = [*a1 customView];
  if (result)
  {
    id v4 = result;
    sub_100123DA4(0, (unint64_t *)&qword_10066F718);
    id v5 = a2;
    id v6 = v4;
    char v7 = sub_100535D90();

    return (id)(v7 & 1);
  }
  return result;
}

id sub_10038DDA0(id *a1, unint64_t a2)
{
  id result = [*a1 customView];
  if (result)
  {
    id v4 = result;
    char v5 = sub_10039FC04((uint64_t)result, a2);

    return (id)(v5 & 1);
  }
  return result;
}

void UIWindowScene.mainWindow.getter()
{
  if ([v0 delegate])
  {
    uint64_t v1 = (void *)swift_dynamicCastObjCProtocolConditional();
    if (v1)
    {
      uint64_t v2 = v1;
      if ([v1 respondsToSelector:"window"])
      {
        [v2 window];
        swift_unknownObjectRelease();
        return;
      }
    }
    swift_unknownObjectRelease();
  }
  id v3 = [v0 windows];
  sub_100123DA4(0, &qword_10066F720);
  unint64_t v4 = sub_1005350E0();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_100536470();
    swift_bridgeObjectRelease();
    if (!v6) {
      goto LABEL_11;
    }
  }
  else if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return;
  }
  if ((v4 & 0xC000000000000001) != 0)
  {
    sub_100536210();
    goto LABEL_11;
  }
  if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v5 = *(id *)(v4 + 32);
    goto LABEL_11;
  }
  __break(1u);
}

id UIWindowScene.rootViewController.getter()
{
  UIWindowScene.mainWindow.getter();
  uint64_t v1 = v0;
  id v2 = [v0 rootViewController];

  return v2;
}

BOOL UISceneActivationState.isForeground.getter(unint64_t a1)
{
  return a1 < 2;
}

uint64_t static UICollectionReusableView.reuseIdentifier.getter()
{
  return sub_100534D70();
}

void UICollectionView.register<A>(_:reuseIdentifier:)()
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = sub_100534CA0();
  [v0 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v2];
}

void UICollectionView.register<A>(_:ofKind:reuseIdentifier:)()
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v2 = sub_100534CA0();
  id v3 = sub_100534CA0();
  [v0 registerClass:ObjCClassFromMetadata forSupplementaryViewOfKind:v2 withReuseIdentifier:v3];
}

uint64_t UICollectionView.dequeue<A>(_:forItemAt:reuseIdentifier:)(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v5 = sub_10052FA30();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v9 = sub_100534CA0();
  Class isa = sub_10052F9D0().super.isa;
  id v11 = [v3 dequeueReusableCellWithReuseIdentifier:v9 forIndexPath:isa];

  uint64_t result = swift_dynamicCastUnknownClass();
  if (!result)
  {

    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
    unint64_t v13 = 0;
    unint64_t v14 = 0xE000000000000000;
    sub_1005361C0(38);
    swift_bridgeObjectRelease();
    unint64_t v13 = 0xD00000000000001ELL;
    unint64_t v14 = 0x8000000100565E90;
    v15._uint64_t countAndFlagsBits = sub_100536A30();
    sub_100534E80(v15);
    swift_bridgeObjectRelease();
    v16._uint64_t countAndFlagsBits = 544497952;
    v16._object = (void *)0xE400000000000000;
    sub_100534E80(v16);
    sub_1003940E0((unint64_t *)&unk_10066F790, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    v17._uint64_t countAndFlagsBits = sub_100536700();
    sub_100534E80(v17);
    swift_bridgeObjectRelease();
    uint64_t result = sub_1005363F0();
    __break(1u);
  }
  return result;
}

uint64_t UICollectionView.dequeue<A>(_:ofKind:for:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  v16[1] = a1;
  uint64_t v7 = sub_10052FA30();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v11 = sub_100534CA0();
  NSString v12 = sub_100534CA0();
  Class isa = sub_10052F9D0().super.isa;
  id v14 = [v5 dequeueReusableSupplementaryViewOfKind:v11 withReuseIdentifier:v12 forIndexPath:isa];

  uint64_t result = swift_dynamicCastUnknownClass();
  if (!result)
  {

    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a4, v7);
    void v16[2] = 0;
    v16[3] = 0xE000000000000000;
    sub_1005361C0(52);
    v17._object = (void *)0x8000000100565EB0;
    v17._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
    sub_100534E80(v17);
    v18._uint64_t countAndFlagsBits = sub_100536A30();
    sub_100534E80(v18);
    swift_bridgeObjectRelease();
    v19._uint64_t countAndFlagsBits = 544497952;
    v19._object = (void *)0xE400000000000000;
    sub_100534E80(v19);
    sub_1003940E0((unint64_t *)&unk_10066F790, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    v20._uint64_t countAndFlagsBits = sub_100536700();
    sub_100534E80(v20);
    swift_bridgeObjectRelease();
    uint64_t result = sub_1005363F0();
    __break(1u);
  }
  return result;
}

uint64_t UICollectionView.globalIndex(for:)()
{
  id v1 = [v0 numberOfSections];
  uint64_t result = sub_10052FA10();
  if (__OFADD__(result, 1))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    return result;
  }
  if (result + 1 >= (uint64_t)v1) {
    uint64_t v3 = (uint64_t)v1;
  }
  else {
    uint64_t v3 = result + 1;
  }
  if (v3 < 0) {
    goto LABEL_20;
  }
  if (!v3) {
    return 0;
  }
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  while (1)
  {
    if (v3 == v5)
    {
      __break(1u);
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    uint64_t v6 = (uint64_t)[v0 numberOfItemsInSection:v5];
    uint64_t result = sub_10052FA10();
    if (v5 == result) {
      break;
    }
    BOOL v7 = __OFADD__(v4, v6);
    v4 += v6;
    if (v7) {
      goto LABEL_18;
    }
    if (v3 == ++v5) {
      return 0;
    }
  }
  if (sub_10052FA00() >= v6) {
    return 0;
  }
  uint64_t v8 = sub_10052FA00();
  BOOL v7 = __OFADD__(v4, v8);
  uint64_t result = v4 + v8;
  if (v7) {
    goto LABEL_21;
  }
  return result;
}

uint64_t UICollectionView.indexPath(forGlobalIndex:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10000BB04(&qword_10066F3B8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10052FA30();
  unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  v10(a2, 1, 1, v9);
  uint64_t result = (uint64_t)[v3 numberOfSections];
  if (result < 0)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
    uint64_t v12 = result;
    uint64_t v17 = a2;
    if (result)
    {
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      while (1)
      {
        if (v12 == v14)
        {
          __break(1u);
LABEL_13:
          __break(1u);
          goto LABEL_14;
        }
        uint64_t result = (uint64_t)[v3 numberOfItemsInSection:v14];
        if (__OFADD__(v13, result)) {
          goto LABEL_13;
        }
        if (v13 + result > a1) {
          break;
        }
        ++v14;
        v13 += result;
        if (v12 == v14) {
          return result;
        }
      }
      uint64_t result = a1 - v13;
      if (__OFSUB__(a1, v13)) {
        goto LABEL_15;
      }
      sub_10052F9F0();
      uint64_t v15 = v17;
      sub_100393BAC(v17);
      v10((uint64_t)v8, 0, 1, v9);
      return sub_100393C0C((uint64_t)v8, v15);
    }
  }
  return result;
}

unint64_t UICollectionView.totalItemCount.getter()
{
  unint64_t result = (unint64_t)[v0 numberOfSections];
  if ((result & 0x8000000000000000) == 0)
  {
    uint64_t v2 = 0;
    unint64_t v3 = result;
    if (!result) {
      return v2;
    }
    uint64_t v4 = 0;
    while (1)
    {
      unint64_t result = (unint64_t)[v0 numberOfItemsInSection:v4];
      BOOL v5 = __OFADD__(v2, result);
      v2 += result;
      if (v5) {
        break;
      }
      if (v3 == ++v4) {
        return v2;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

char *UICollectionView.isLast(indexPath:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10052FA30();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10052FA10();
  unint64_t result = (char *)[v2 numberOfSections];
  unint64_t v10 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if ((char *)v8 == v10)
  {
    uint64_t v11 = sub_10052FA00();
    uint64_t v12 = (char *)[v2 numberOfItemsInSection:v8];
    unint64_t result = (char *)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (!__OFSUB__(v12, 1)) {
      return (char *)(v11 == (void)(v12 - 1));
    }
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return 0;
}

uint64_t UICollectionView.visibleSupplementaryElements(of:)(uint64_t a1, uint64_t a2)
{
  NSString v5 = sub_100534CA0();
  id v6 = [v2 indexPathsForVisibleSupplementaryElementsOfKind:v5];

  sub_10052FA30();
  uint64_t v7 = sub_1005350E0();

  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v2;
  v8[3] = a1;
  v8[4] = a2;
  id v9 = v2;
  swift_bridgeObjectRetain();
  return v7;
}

void sub_10038EB18(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(int *)(sub_10000BB04(&qword_10066F828) + 48);
  uint64_t v7 = sub_10052FA30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a3, a1, v7);
  NSString v8 = sub_100534CA0();
  Class isa = sub_10052F9D0().super.isa;
  id v10 = [a2 supplementaryViewForElementKind:v8 atIndexPath:isa];

  *(void *)(a3 + v6) = v10;
}

id UICollectionView.clearSelection(using:animated:)(void *a1, int a2)
{
  unint64_t v3 = v2;
  int v38 = a2;
  uint64_t v5 = sub_10052FA30();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  NSString v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000BB04(&qword_10066F3B8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v39 = v3;
  id result = [v3 indexPathsForSelectedItems];
  if (result)
  {
    uint64_t v13 = result;
    uint64_t v14 = sub_1005350E0();

    if (a1)
    {
      uint64_t v15 = swift_allocObject();
      id v16 = v39;
      *(void *)(v15 + 16) = v14;
      *(void *)(v15 + 24) = v16;
      *(unsigned char *)(v15 + 32) = v38 & 1;
      unint64_t v44 = sub_100393CC8;
      uint64_t v45 = v15;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v41 = 1107296256;
      uint64_t v42 = sub_1002DE6AC;
      uint64_t v43 = &unk_100630008;
      uint64_t v17 = _Block_copy(&aBlock);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      id v18 = v16;
      swift_release();
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = v14;
      *(void *)(v19 + 24) = v18;
      unint64_t v44 = sub_100393D40;
      uint64_t v45 = v19;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v41 = 1107296256;
      uint64_t v42 = sub_1002DE6AC;
      uint64_t v43 = &unk_100630058;
      Swift::String v20 = _Block_copy(&aBlock);
      id v21 = v18;
      swift_release();
      [a1 animateAlongsideTransition:v17 completion:v20];
      _Block_release(v20);
      _Block_release(v17);
      return (id)swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v22 = *(void *)(v14 + 16);
      if (v22)
      {
        id v24 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
        uint64_t v23 = v6 + 16;
        unint64_t v25 = v14 + ((*(unsigned __int8 *)(v23 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 64));
        uint64_t v35 = *(void *)(v23 + 56);
        uint64_t v36 = v24;
        unint64_t v26 = v23 + 40;
        uint64_t v27 = v23;
        uint64_t v28 = (unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 32);
        uint64_t v29 = v14;
        uint64_t v37 = v27;
        unint64_t v30 = (void (**)(char *, uint64_t))(v27 - 8);
        v33[1] = v29;
        uint64_t v34 = (void (**)(char *, char *, uint64_t))(v27 + 16);
        swift_bridgeObjectRetain();
        v33[0] = v26 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
        while (1)
        {
          v36(v11, v25, v5);
          uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v26;
          (*(void (**)(char *, void, uint64_t, uint64_t))v26)(v11, 0, 1, v5);
          if ((*v28)(v11, 1, v5) == 1) {
            break;
          }
          (*v34)(v8, v11, v5);
          Class isa = sub_10052F9D0().super.isa;
          [v39 deselectItemAtIndexPath:isa, v38 & 1, v33[0]];

          (*v30)(v8, v5);
          v25 += v35;
          if (!--v22) {
            goto LABEL_10;
          }
        }
      }
      else
      {
        uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
        swift_bridgeObjectRetain();
LABEL_10:
        v31(v11, 1, 1, v5);
      }
      return (id)swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_10038F008(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  id v30 = a3;
  uint64_t v6 = sub_10052FA30();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000BB04(&qword_10066F3B8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a2 + 16);
  uint64_t v24 = a2;
  if (v13)
  {
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v14 = v7 + 16;
    uint64_t v16 = a2 + ((*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64));
    uint64_t v27 = *(void *)(v14 + 56);
    uint64_t v28 = v15;
    unint64_t v17 = v14 + 40;
    id v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 32);
    unint64_t v26 = (void (**)(char *, char *, uint64_t))(v14 + 16);
    uint64_t v29 = v14;
    uint64_t v19 = (void (**)(char *, uint64_t))(v14 - 8);
    swift_bridgeObjectRetain();
    unint64_t v23 = v17 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    unsigned int v25 = a4 & 1;
    while (1)
    {
      v28(v12, v16, v6);
      Swift::String v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v17;
      (*(void (**)(char *, void, uint64_t, uint64_t))v17)(v12, 0, 1, v6);
      if ((*v18)(v12, 1, v6) == 1) {
        break;
      }
      (*v26)(v9, v12, v6);
      Class isa = sub_10052F9D0().super.isa;
      [v30 deselectItemAtIndexPath:isa v25 v23 v24];

      (*v19)(v9, v6);
      v16 += v27;
      if (!--v13) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    Swift::String v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
LABEL_7:
    v20(v12, 1, 1, v6);
  }
  return swift_bridgeObjectRelease();
}

id sub_10038F274(void *a1, uint64_t a2, void *a3)
{
  id v28 = a3;
  uint64_t v5 = sub_10052FA30();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000BB04(&qword_10066F3B8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [a1 isCancelled];
  if (result)
  {
    uint64_t v13 = *(void *)(a2 + 16);
    _OWORD v23[2] = a2;
    if (v13)
    {
      uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
      uint64_t v14 = v6 + 16;
      uint64_t v16 = a2 + ((*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64));
      uint64_t v17 = *(void *)(v14 + 56);
      id v18 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 40);
      unint64_t v26 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 32);
      uint64_t v27 = v15;
      uint64_t v24 = (void (**)(char *, char *, uint64_t))(v14 + 16);
      uint64_t v25 = v17;
      uint64_t v19 = (void (**)(char *, uint64_t))(v14 - 8);
      swift_bridgeObjectRetain();
      v23[1] = (v14 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      while (1)
      {
        v27(v11, v16, v5);
        Swift::String v20 = *v18;
        (*v18)(v11, 0, 1, v5);
        if ((*v26)(v11, 1, v5) == 1) {
          break;
        }
        (*v24)(v8, v11, v5);
        uint64_t v21 = v14;
        Class isa = sub_10052F9D0().super.isa;
        [v28 selectItemAtIndexPath:isa animated:0 scrollPosition:0];

        uint64_t v14 = v21;
        (*v19)(v8, v5);
        v16 += v25;
        if (!--v13) {
          goto LABEL_8;
        }
      }
    }
    else
    {
      Swift::String v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      swift_bridgeObjectRetain();
LABEL_8:
      v20(v11, 1, 1, v5);
    }
    return (id)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t UICollectionView.isDraggingCell(at:)()
{
  id v1 = v0;
  uint64_t v2 = sub_100530A80();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = sub_100530AB0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Class isa = sub_10052F9D0().super.isa;
  id v14 = [v1 cellForItemAtIndexPath:isa];

  if (v14)
  {
    id v15 = [v14 _bridgedConfigurationState];
    sub_100530AA0();

    sub_100530A90();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for UICellConfigurationState.DragState.dragging(_:), v2);
    char v16 = sub_100530A70();

    uint64_t v17 = *(void (**)(char *, uint64_t))(v3 + 8);
    v17(v6, v2);
    v17(v8, v2);
  }
  else
  {
    char v16 = 0;
  }
  return v16 & 1;
}

void *UICollectionView.elementKindGlobalHeader.unsafeMutableAddressor()
{
  return &static UICollectionView.elementKindGlobalHeader;
}

unint64_t static UICollectionView.elementKindGlobalHeader.getter()
{
  return 0xD000000000000023;
}

id UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  id v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return [v8 initWithRed:(double)a1 / 255.0 green:(double)a2 / 255.0 blue:(double)a3 / 255.0 alpha:a4];
}

id UIColor.interpolate(to:ratio:)(void *a1, double a2)
{
  double v4 = fmin(a2, 1.0);
  if (a2 < 0.0) {
    double v5 = 0.0;
  }
  else {
    double v5 = v4;
  }
  double v13 = 0.0;
  double v14 = 0.0;
  double v11 = 0.0;
  double v12 = 0.0;
  double v9 = 0.0;
  double v10 = 0.0;
  double v7 = 0.0;
  double v8 = 0.0;
  [v2 getRed:&v14 green:&v12 blue:&v10 alpha:&v8];
  [a1 getRed:&v13 green:&v11 blue:&v9 alpha:&v7];
  return [objc_allocWithZone((Class)UIColor) initWithRed:(1.0 - v5) * v14 + v5 * v13 green:(1.0 - v5) * v12 + v5 * v11 blue:(1.0 - v5) * v10 + v5 * v9 alpha:(1.0 - v5) * v8 + v5 * v7];
}

double UIColor.hsba.getter()
{
  return sub_10038F9F0((SEL *)&selRef_getHue_saturation_brightness_alpha_);
}

double UIColor.rgba.getter()
{
  return sub_10038F9F0((SEL *)&selRef_getRed_green_blue_alpha_);
}

double sub_10038F9F0(SEL *a1)
{
  double v6 = 0.0;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v3 = 0;
  [v1 *a1:&v6, &v5, &v4, &v3];
  return v6;
}

UIImage_optional __swiftcall UIImage.init(systemName:font:scale:)(Swift::String systemName, UIFont font, UIImageSymbolScale scale)
{
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  NSString v6 = sub_100534CA0();
  swift_bridgeObjectRelease();
  id v7 = [self configurationWithFont:font.super.isa scale:scale];
  double v8 = (objc_class *)[ObjCClassFromMetadata systemImageNamed:v6 withConfiguration:v7];

  double v10 = v8;
  result.value.super.Class isa = v10;
  result.is_nil = v9;
  return result;
}

id UIImage.init(systemName:pointSize:weight:)(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  NSString v7 = sub_100534CA0();
  swift_bridgeObjectRelease();
  id v8 = [self configurationWithPointSize:a4 weight:a1];
  id v9 = [ObjCClassFromMetadata systemImageNamed:v7 withConfiguration:v8];

  return v9;
}

UIImage_optional __swiftcall UIImage.byCroppingToUniformCenter()()
{
  id v1 = v0;
  uint64_t v2 = v0;
  [(objc_class *)v2 size];
  double v4 = v3;
  double v6 = v5;
  if (sub_10052FAF0())
  {
    if (v6 >= v4)
    {
      double v9 = round((v6 - v4) * 0.5);
      double v8 = 0.0;
      double v10 = v4;
      double v11 = v4;
    }
    else
    {
      double v8 = round((v4 - v6) * 0.5);
      double v9 = 0.0;
      double v10 = v6;
      double v11 = v6;
    }
    id v1 = (objc_class *)UIImage.byCropping(to:)(v8, v9, v10, v11);
  }
  double v12 = v1;
  result.value.super.Class isa = v12;
  result.is_nil = v7;
  return result;
}

id UIImage.byCropping(to:)(double a1, double a2, double a3, double a4)
{
  double v5 = v4;
  double v10 = (CGImage *)[v4 CGImage];
  if (!v10) {
    return 0;
  }
  double v11 = v10;
  _s3__C6CGSizeVMa_1(0);
  if ((sub_10052FAF0() & 1) == 0) {
    goto LABEL_7;
  }
  [v4 scale:0:0:&a3:&a4];
  double v13 = v12;
  char v14 = sub_10052FAF0();
  double v15 = v13 * a1;
  double v16 = v13 * a2;
  double v17 = v13 * a3;
  double v18 = v13 * a4;
  if ((v14 & 1) == 0)
  {
    double v18 = a4;
    double v17 = a3;
    double v16 = a2;
    double v15 = a1;
  }
  CGImageRef v19 = CGImageCreateWithImageInRect(v11, *(CGRect *)&v15);
  if (!v19)
  {
LABEL_7:

    return 0;
  }
  CGImageRef v20 = v19;
  id v21 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:scale:orientation:", v19, objc_msgSend(v5, "imageOrientation", 0x3FF0000000000000), v13);

  return v21;
}

UIViewController_optional __swiftcall UINavigationController.removeViewController(_:animated:)(UIViewController _, Swift::Bool animated)
{
  double v3 = v2;
  id v6 = [v2 viewControllers];
  sub_100123DA4(0, (unint64_t *)&qword_10066F7A0);
  unint64_t v7 = sub_1005350E0();

  swift_bridgeObjectRetain();
  sub_10035D1B0((uint64_t)_.super.super.isa, v7);
  unint64_t v9 = v8;
  LOBYTE(v6) = v10;
  swift_bridgeObjectRelease();
  if (v6)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v11 = sub_10038D384(v9);
    Class isa = sub_1005350C0().super.isa;
    swift_bridgeObjectRelease();
    [v3 setViewControllers:isa animated:animated];
  }
  char v14 = (objc_class *)v11;
  result.value.super.super.Class isa = v14;
  result.is_nil = v13;
  return result;
}

double UIScrollView.normalizedContentOffset.getter()
{
  [v0 adjustedContentInset];
  double v2 = v1;
  [v0 contentOffset];
  return v2 + v3;
}

uint64_t UIScrollView.isScrolling.getter()
{
  if (([v0 isDragging] & 1) != 0
    || ([v0 isDecelerating] & 1) != 0
    || ([v0 _isVerticalBouncing] & 1) != 0)
  {
    return 1;
  }
  else
  {
    return (uint64_t)[v0 _isHorizontalBouncing];
  }
}

uint64_t static UIStackView.SpacerView.layerClass.getter()
{
  return sub_100123DA4(0, &qword_10066F7A8);
}

id UIStackView.SpacerView.init(frame:)(double a1, double a2, double a3, double a4)
{
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for UIStackView.SpacerView();
  return [super initWithFrame:a1, a2, a3, a4];
}

id UIStackView.SpacerView.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for UIStackView.SpacerView();
  [super initWithCoder:a1];

  return v3;
}

id UIStackView.SpacerView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UIStackView.SpacerView();
  return [super dealloc];
}

id UIView.forAutolayout.getter()
{
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];

  return v2;
}

double UIView.Shadow.opacity.getter()
{
  return *(double *)(v0 + 8);
}

void UIView.Shadow.opacity.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

double UIView.Shadow.offset.getter()
{
  return *(double *)(v0 + 24);
}

void UIView.Shadow.offset.setter(double a1, double a2)
{
  *(double *)(v2 + 24) = a1;
  *(double *)(v2 + 32) = a2;
}

uint64_t UIView.Shadow.init(color:opacity:radius:offset:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  *(void *)a2 = result;
  *(double *)(a2 + 8) = a3;
  *(double *)(a2 + 16) = a4;
  *(double *)(a2 + 24) = a5;
  *(double *)(a2 + 32) = a6;
  return result;
}

void UIView.Shadow.hash(into:)()
{
  id v1 = *(id *)v0;
  sub_100535DA0();
  sub_100393D6C((id *)v0);
  if ((*(void *)(v0 + 8) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = *(void *)(v0 + 8);
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  sub_100536990(v2);
  if ((*(void *)(v0 + 16) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = *(void *)(v0 + 16);
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  sub_100536990(v3);
  Swift::UInt64 v4 = *(void *)(v0 + 32);
  if ((*(void *)(v0 + 24) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = *(void *)(v0 + 24);
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  sub_100536990(v5);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v6 = v4;
  }
  else {
    Swift::UInt64 v6 = 0;
  }
  sub_100536990(v6);
}

BOOL static UIView.Shadow.__derived_struct_equals(_:_:)(double *a1, double *a2)
{
  return (sub_100535D90() & 1) != 0 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3] && a1[4] == a2[4];
}

Swift::Int UIView.Shadow.hashValue.getter()
{
  sub_100536950();
  id v1 = *(id *)v0;
  sub_100535DA0();
  sub_100393D6C((id *)v0);
  if ((*(void *)(v0 + 8) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = *(void *)(v0 + 8);
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  sub_100536990(v2);
  if ((*(void *)(v0 + 16) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = *(void *)(v0 + 16);
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  sub_100536990(v3);
  Swift::UInt64 v4 = *(void *)(v0 + 32);
  if ((*(void *)(v0 + 24) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = *(void *)(v0 + 24);
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  sub_100536990(v5);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v6 = v4;
  }
  else {
    Swift::UInt64 v6 = 0;
  }
  sub_100536990(v6);
  return sub_1005369A0();
}

Swift::Int sub_1003904B0()
{
  return UIView.Shadow.hashValue.getter();
}

void sub_1003904EC()
{
}

Swift::Int sub_100390528()
{
  id v1 = *(void **)v0;
  Swift::UInt64 v2 = *(void *)(v0 + 8);
  Swift::UInt64 v3 = *(void *)(v0 + 16);
  double v4 = *(double *)(v0 + 24);
  double v5 = *(double *)(v0 + 32);
  sub_100536950();
  id v6 = v1;
  sub_100535DA0();

  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v7 = v2;
  }
  else {
    Swift::UInt64 v7 = 0;
  }
  sub_100536990(v7);
  if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v8 = v3;
  }
  else {
    Swift::UInt64 v8 = 0;
  }
  sub_100536990(v8);
  sub_100393638(v4, v5);
  return sub_1005369A0();
}

BOOL sub_1003905BC(double *a1, double *a2)
{
  double v2 = a1[1];
  double v3 = a1[2];
  double v5 = a1[3];
  double v4 = a1[4];
  double v6 = a2[1];
  double v7 = a2[2];
  double v9 = a2[3];
  double v8 = a2[4];
  sub_100123DA4(0, (unint64_t *)&unk_10066F7B0);
  char v10 = sub_100535D90();
  BOOL result = 0;
  if ((v10 & 1) != 0 && v2 == v6 && v3 == v7) {
    return v4 == v8 && v5 == v9;
  }
  return result;
}

id UIView.shadowPathIsBounds.getter()
{
  id v1 = [v0 layer];
  id v2 = [v1 shadowPathIsBounds];

  return v2;
}

void UIView.shadowPathIsBounds.setter(char a1)
{
  id v3 = [v1 layer];
  [v3 setShadowPathIsBounds:a1 & 1];
}

void (*UIView.shadowPathIsBounds.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  id v3 = [v1 layer];
  unsigned __int8 v4 = [v3 shadowPathIsBounds];

  *(unsigned char *)(a1 + 8) = v4;
  return sub_100390798;
}

void sub_100390798(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 8);
  id v2 = [*(id *)a1 layer];
  [v2 setShadowPathIsBounds:v1];
}

void UIView.shadow.getter(uint64_t a1@<X8>)
{
  id v3 = [self clearColor];
  id v4 = [v1 layer];
  id v5 = [v4 shadowColor];

  if (v5)
  {
    id v6 = [objc_allocWithZone((Class)UIColor) initWithCGColor:v5];

    id v3 = v6;
  }
  id v7 = [v1 layer];
  [v7 shadowOpacity];
  float v9 = v8;

  double v10 = v9;
  id v11 = [v1 layer];
  [v11 shadowRadius];
  uint64_t v13 = v12;

  id v14 = [v1 layer];
  [v14 shadowOffset];
  uint64_t v16 = v15;
  uint64_t v18 = v17;

  *(void *)a1 = v3;
  *(double *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v13;
  *(void *)(a1 + 24) = v16;
  *(void *)(a1 + 32) = v18;
}

void UIView.shadow.setter(uint64_t a1)
{
  id v3 = [v1 layer];
  id v4 = [*(id *)a1 CGColor];
  [v3 setShadowColor:v4];

  id v5 = [v1 layer];
  [v5 setShadowOffset:*(double *)(a1 + 24), *(double *)(a1 + 32)];

  id v6 = [v1 layer];
  [v6 setShadowRadius:*(double *)(a1 + 16)];

  id v8 = [v1 layer];
  double v7 = *(double *)(a1 + 8);
  *(float *)&double v7 = v7;
  [v8 setShadowOpacity:v7];
  sub_100393D6C((id *)a1);
}

void (*UIView.shadow.modify(void *a1))(uint64_t *a1, char a2)
{
  id v3 = malloc(0x80uLL);
  *a1 = v3;
  v3[15] = v1;
  UIView.shadow.getter((uint64_t)(v3 + 10));
  return sub_100390AF8;
}

void sub_100390AF8(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a1 + 80;
  long long v4 = *(_OWORD *)(*a1 + 96);
  if (a2)
  {
    *(_OWORD *)uint64_t v2 = *(_OWORD *)v3;
    *(_OWORD *)(v2 + 16) = v4;
    *(void *)(v2 + 32) = *(void *)(v3 + 32);
    id v5 = *(id *)v2;
    UIView.shadow.setter(v2);
  }
  else
  {
    *(_OWORD *)(v2 + 40) = *(_OWORD *)v3;
    *(_OWORD *)(v2 + 56) = v4;
    *(void *)(v2 + 72) = *(void *)(v3 + 32);
    UIView.shadow.setter(v2 + 40);
  }

  free((void *)v2);
}

uint64_t UIView.Border.init(view:)(void *a1)
{
  uint64_t v2 = sub_100393D98(a1);

  return v2;
}

uint64_t static UIView.Border.__derived_struct_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a2)
  {
    if ((a5 & 1) == 0) {
      return 0;
    }
  }
  else if (a5)
  {
    return 0;
  }
  if (*(double *)&a1 == *(double *)&a4)
  {
    sub_100123DA4(0, (unint64_t *)&unk_10066F7B0);
    return sub_100535D90() & 1;
  }
  return 0;
}

uint64_t sub_100390C44(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      return 0;
    }
  }
  else if (*(unsigned char *)(a2 + 8))
  {
    return 0;
  }
  if (*(double *)a1 == *(double *)a2)
  {
    sub_100123DA4(0, (unint64_t *)&unk_10066F7B0);
    return sub_100535D90() & 1;
  }
  return 0;
}

uint64_t UIView.border.getter()
{
  id v1 = v0;
  uint64_t v2 = sub_100393D98(v1);

  return v2;
}

void UIView.border.setter(uint64_t a1, char a2, void *a3)
{
  if (a3)
  {
    id v6 = [v3 layer];
    id v7 = v6;
    if (a2)
    {
      [v6 setBorderWidth:*(double *)&a1];
    }
    else
    {
      id v8 = [v3 traitCollection];
      [v8 displayScale];
      double v10 = v9;

      [v7 setBorderWidth:*(double *)&a1 / fmax(v10, 1.0)];
    }
  }
  else
  {
    id v7 = [v3 layer];
    [v7 setBorderWidth:0.0];
  }

  id v11 = [v3 layer];
  if (a3) {
    id v12 = [a3 CGColor];
  }
  else {
    id v12 = 0;
  }
  [v11 setBorderColor:v12];
}

void (*UIView.border.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[3] = (uint64_t)v1;
  id v3 = v1;
  uint64_t v4 = sub_100393D98(v3);
  uint64_t v6 = v5;
  uint64_t v8 = v7;

  *a1 = v4;
  a1[1] = v6;
  a1[2] = v8;
  return sub_100390EF0;
}

void sub_100390EF0(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = (void *)a1[2];
  if (a2)
  {
    id v5 = v4;
    UIView.border.setter(v2, v3, v4);
  }
  else
  {
    UIView.border.setter(*a1, v3, v4);
  }
}

double UIView.untransformedFrame.getter()
{
  [v0 bounds];
  CGFloat v2 = v1;
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  [v0 center];
  double v10 = v9;
  v17.origin.x = v2;
  v17.origin.y = v4;
  v17.size.CGFloat width = v6;
  v17.size.CGFloat height = v8;
  double Width = CGRectGetWidth(v17);
  id v12 = [v0 layer];
  [v12 anchorPoint];
  double v14 = v13;

  v18.origin.x = v2;
  v18.origin.y = v4;
  v18.size.CGFloat width = v6;
  v18.size.CGFloat height = v8;
  CGRectGetHeight(v18);
  id v15 = [v0 layer];
  [v15 anchorPoint];

  v19.origin.x = v2;
  v19.origin.y = v4;
  v19.size.CGFloat width = v6;
  v19.size.CGFloat height = v8;
  CGRectGetWidth(v19);
  v20.origin.x = v2;
  v20.origin.y = v4;
  v20.size.CGFloat width = v6;
  v20.size.CGFloat height = v8;
  CGRectGetHeight(v20);
  return v10 - Width * v14;
}

id UIView.untransformedFrame.setter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double MinX = CGRectGetMinX(*(CGRect *)&a1);
  v22.origin.x = a1;
  v22.origin.y = a2;
  v22.size.CGFloat width = a3;
  v22.size.CGFloat height = a4;
  double Width = CGRectGetWidth(v22);
  id v11 = [v4 layer];
  [v11 anchorPoint];
  double v13 = v12;

  double v14 = MinX + Width * v13;
  v23.origin.x = a1;
  v23.origin.y = a2;
  v23.size.CGFloat width = a3;
  v23.size.CGFloat height = a4;
  double MinY = CGRectGetMinY(v23);
  v24.origin.x = a1;
  v24.origin.y = a2;
  v24.size.CGFloat width = a3;
  v24.size.CGFloat height = a4;
  double Height = CGRectGetHeight(v24);
  id v17 = [v4 layer];
  [v17 anchorPoint];
  double v19 = v18;

  [v4 setCenter:v14, MinY + Height * v19];
  [v4 bounds];

  return [v4 setBounds:];
}

void (*UIView.untransformedFrame.modify(double **a1))(CGFloat **a1)
{
  double v3 = (double *)malloc(0x28uLL);
  *a1 = v3;
  *((void *)v3 + 4) = v1;
  *double v3 = UIView.untransformedFrame.getter();
  *((void *)v3 + 1) = v4;
  *((void *)v3 + 2) = v5;
  *((void *)v3 + 3) = v6;
  return sub_100391280;
}

void sub_100391280(CGFloat **a1)
{
  uint64_t v1 = *a1;
  UIView.untransformedFrame.setter(**a1, (*a1)[1], (*a1)[2], (*a1)[3]);

  free(v1);
}

float UIView.contentCompressionResistancePriority.getter()
{
  id v1 = v0;
  [v1 contentCompressionResistancePriorityForAxis:0];
  float v3 = v2;
  [v1 contentCompressionResistancePriorityForAxis:1];

  return v3;
}

float UIView.CompressionResistancePriority.init(view:)(void *a1)
{
  [a1 contentCompressionResistancePriorityForAxis:0];
  float v3 = v2;
  [a1 contentCompressionResistancePriorityForAxis:1];

  return v3;
}

id UIView.contentCompressionResistancePriority.setter(double a1, float a2)
{
  [v2 setContentCompressionResistancePriority:0 forAxis:];
  *(float *)&double v4 = a2;

  return [v2 setContentCompressionResistancePriority:1 forAxis:v4];
}

id (*UIView.contentCompressionResistancePriority.modify(uint64_t a1))(uint64_t a1, double a2)
{
  *(void *)a1 = v1;
  id v3 = v1;
  [v3 contentCompressionResistancePriorityForAxis:0];
  int v5 = v4;
  [v3 contentCompressionResistancePriorityForAxis:1];
  int v7 = v6;

  *(_DWORD *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 12) = v7;
  return sub_100391468;
}

id sub_100391468(uint64_t a1, double a2)
{
  id v2 = *(id *)a1;
  LODWORD(a2) = *(_DWORD *)(a1 + 8);
  int v3 = *(_DWORD *)(a1 + 12);
  [*(id *)a1 setContentCompressionResistancePriority:0 forAxis:a2];
  LODWORD(v4) = v3;

  return [v2 setContentCompressionResistancePriority:1 forAxis:v4];
}

void UIView.CompressionResistancePriority.horizontal.setter(float a1)
{
  *id v1 = a1;
}

float UIView.CompressionResistancePriority.vertical.getter(double a1, float a2)
{
  return a2;
}

double UIView.maxReadableContentWidth(for:)()
{
  return 1500.0;
}

UIImage *UIView.screenshot.getter()
{
  [v0 bounds];
  CGFloat v2 = v1;
  CGFloat v4 = v3;
  unsigned __int8 v5 = [v0 isOpaque];
  v8.CGFloat width = v2;
  v8.CGFloat height = v4;
  UIGraphicsBeginImageContextWithOptions(v8, v5, 0.0);
  [v0 bounds];
  [v0 drawViewHierarchyInRect:1];
  int v6 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();
  return v6;
}

Swift::Void __swiftcall UIView.visualizeLayout(with:)(UIColor with)
{
  CGFloat v2 = v1;
  CGFloat v4 = (objc_class *)[v2 viewWithTag:1234];
  if (v4)
  {
    Class isa = v4;
    [v2 bringSubviewToFront:];
  }
  else
  {
    id v5 = [objc_allocWithZone((Class)UIView) init];
    id v6 = [(objc_class *)with.super.isa colorWithAlphaComponent:0.2];
    [v5 setBackgroundColor:v6];

    int v7 = with.super.isa;
    UIView.border.setter(0x3FF0000000000000, 1, with.super.isa);
    [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v5 setTag:1234];
    [v5 setUserInteractionEnabled:0];
    [v2 addSubview:v5];
    CGSize v8 = self;
    sub_10000BB04(&qword_10066E900);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_10053E050;
    id v10 = [v5 topAnchor];
    id v11 = [v2 topAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];

    *(void *)(v9 + 32) = v12;
    id v13 = [v5 bottomAnchor];
    id v14 = [v2 bottomAnchor];
    id v15 = [v13 constraintEqualToAnchor:v14];

    *(void *)(v9 + 40) = v15;
    id v16 = [v5 leadingAnchor];
    id v17 = [v2 leadingAnchor];
    id v18 = [v16 constraintEqualToAnchor:v17];

    *(void *)(v9 + 48) = v18;
    id v19 = [v5 trailingAnchor];
    id v20 = [v2 trailingAnchor];
    id v21 = [v19 constraintEqualToAnchor:v20];

    *(void *)(v9 + 56) = v21;
    sub_100535100();
    sub_100123DA4(0, (unint64_t *)&unk_10066F7C0);
    Class isa = sub_1005350C0().super.isa;
    swift_bridgeObjectRelease();
    [v8 activateConstraints:isa];
  }
}

void sub_1003918DC(UIColor a1)
{
}

void UIView.traverseViewHierarchy(_:)(void (*a1)(void *, char *), uint64_t a2)
{
  double v3 = v2;
  char v15 = 0;
  a1(v3, &v15);
  if (v15) {
    return;
  }
  id v6 = [v3 subviews];
  sub_100123DA4(0, (unint64_t *)&qword_10066F718);
  unint64_t v7 = sub_1005350E0();

  if (v7 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_100536470();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8)
    {
LABEL_4:
      if ((v7 & 0xC000000000000001) != 0)
      {
        id v10 = (id)sub_100536210();
        uint64_t v9 = v7 & 0xFFFFFFFFFFFFFF8;
      }
      else
      {
        uint64_t v9 = v7 & 0xFFFFFFFFFFFFFF8;
        if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v10 = *(id *)(v7 + 32);
      }
      uint64_t v11 = 0;
      uint64_t v12 = v8 - 1;
      while (1)
      {
        sub_100393EA8(v10, a1, a2, &v15);

        if (v12 == v11) {
          break;
        }
        unint64_t v13 = v11 + 1;
        if ((v7 & 0xC000000000000001) != 0)
        {
          id v14 = (id)sub_100536210();
        }
        else
        {
          if (v13 >= *(void *)(v9 + 16)) {
            goto LABEL_20;
          }
          id v14 = *(id *)(v7 + 8 * v11 + 40);
        }
        id v10 = v14;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_20:
          __break(1u);
          goto LABEL_21;
        }
        ++v11;
        if (v15 == 1)
        {

          break;
        }
      }
    }
  }

  swift_bridgeObjectRelease();
}

void UIView.statusBarFrame.getter(uint64_t a1@<X8>)
{
  id v3 = [v1 window];
  uint64_t v4 = 0;
  if (v3)
  {
    id v5 = v3;
    id v6 = [v3 windowScene];

    if (v6)
    {
      id v7 = [v6 statusBarManager];
      if (v7)
      {
        uint64_t v8 = v7;
        if (([v7 isStatusBarHidden] & 1) == 0)
        {
          [v8 statusBarFrame];
          double v14 = v13;
          double v16 = v15;
          double v18 = v17;
          double v20 = v19;
          id v21 = [v6 screen];
          id v22 = [v21 coordinateSpace];

          [v1 convertRect:v22 fromCoordinateSpace:v14, v16, v18, v20];
          uint64_t v4 = v23;
          uint64_t v10 = v24;
          uint64_t v11 = v25;
          uint64_t v12 = v26;

          swift_unknownObjectRelease();
          char v9 = 0;
          goto LABEL_8;
        }
      }
      else
      {
      }
    }
  }
  char v9 = 1;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
LABEL_8:
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v11;
  *(void *)(a1 + 24) = v12;
  *(unsigned char *)(a1 + 32) = v9;
}

Swift::Void __swiftcall UILayoutGuide.visualizeLayout(with:)(UIColor with)
{
  CGFloat v2 = v1;
  id v4 = [v2 owningView];
  if (v4)
  {
    id v5 = v4;
    id v6 = (objc_class *)[v4 viewWithTag:1234];
    if (v6)
    {
      Class isa = v6;
      [v5 bringSubviewToFront:];
    }
    else
    {
      id v7 = [objc_allocWithZone((Class)UIView) init];
      id v8 = [(objc_class *)with.super.isa colorWithAlphaComponent:0.2];
      [v7 setBackgroundColor:v8];

      char v9 = with.super.isa;
      UIView.border.setter(0x3FF0000000000000, 1, with.super.isa);
      [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
      [v7 setTag:1234];
      [v7 setUserInteractionEnabled:0];
      [v5 addSubview:v7];
      uint64_t v10 = self;
      sub_10000BB04(&qword_10066E900);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_10053E050;
      id v12 = [v7 topAnchor];
      id v13 = [v2 topAnchor];
      id v14 = [v12 constraintEqualToAnchor:v13];

      *(void *)(v11 + 32) = v14;
      id v15 = [v7 bottomAnchor];
      id v16 = [v2 bottomAnchor];
      id v17 = [v15 constraintEqualToAnchor:v16];

      *(void *)(v11 + 40) = v17;
      id v18 = [v7 leadingAnchor];
      id v19 = [v2 leadingAnchor];
      id v20 = [v18 constraintEqualToAnchor:v19];

      *(void *)(v11 + 48) = v20;
      id v21 = [v7 trailingAnchor];
      id v22 = [v2 trailingAnchor];
      id v23 = [v21 constraintEqualToAnchor:v22];

      *(void *)(v11 + 56) = v23;
      sub_100535100();
      sub_100123DA4(0, (unint64_t *)&unk_10066F7C0);
      Class isa = sub_1005350C0().super.isa;
      swift_bridgeObjectRelease();
      [v10 activateConstraints:isa];

      id v5 = v7;
    }
  }
}

void sub_100392010(UIColor a1)
{
}

BOOL UIViewController.canPresentViewControllers.getter()
{
  id v1 = [v0 popoverPresentationController];
  id v2 = v1;
  if (v1) {

  }
  return v2 == 0;
}

BOOL UIViewController.canBeDismissed.getter()
{
  id v1 = [v0 presentingViewController];
  id v2 = v1;
  if (v1) {

  }
  return v2 != 0;
}

Swift::Void __swiftcall UIViewController.dismiss(after:)(Swift::Double after)
{
  uint64_t v1 = sub_100533280();
  uint64_t v20 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005332B0();
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  __chkstk_darwin(v4);
  id v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005332E0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v13 = (char *)&v17 - v12;
  sub_100123DA4(0, (unint64_t *)&qword_10066E638);
  id v14 = (void *)sub_100535960();
  sub_1005332D0();
  sub_100533340();
  id v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v11, v7);
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1003940D8;
  uint64_t aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001CB5A0;
  aBlock[3] = &unk_1006300A8;
  id v16 = _Block_copy(aBlock);
  swift_release();
  sub_1005332A0();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1003940E0((unint64_t *)&qword_10066F7D0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000BB04(&qword_10066E640);
  sub_10035460C();
  sub_1005360C0();
  sub_100535920();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v19);
  v17(v13, v7);
}

void sub_1003924C4()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    id v2 = [Strong presentingViewController];
    if (v2)
    {
      id v3 = v2;
      id v4 = [v2 presentedViewController];
      if (v4)
      {
        id v5 = v4;
        sub_100123DA4(0, (unint64_t *)&unk_10066F7B0);
        if (sub_100535D90()) {
          [v3 dismissViewControllerAnimated:1 completion:0];
        }

        uint64_t v1 = v3;
      }
      else
      {
        id v5 = v3;
      }

      uint64_t v1 = v5;
    }
  }
}

Swift::Void __swiftcall UIViewController.add(_:)(UIViewController a1)
{
  [v1 addChildViewController:a1.super.super.isa];
  if ([v1 isViewLoaded])
  {
    id v3 = [v1 view];
    if (v3)
    {
      id v4 = v3;
      id v5 = [(objc_class *)a1.super.super.isa view];
      if (v5)
      {
        id v6 = v5;
        [v4 addSubview:v5];

        id v7 = [v1 view];
        if (v7)
        {
          uint64_t v8 = v7;
          [v7 setNeedsLayout];

          goto LABEL_6;
        }
LABEL_11:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
LABEL_6:

  [(objc_class *)a1.super.super.isa didMoveToParentViewController:v1];
}

Swift::Void __swiftcall UIViewController.remove(_:)(UIViewController a1)
{
  id v3 = [(objc_class *)a1.super.super.isa parentViewController];
  if (!v3) {
    return;
  }
  id v4 = v3;

  if (v4 != v1) {
    return;
  }
  [(objc_class *)a1.super.super.isa willMoveToParentViewController:0];
  if (![v1 isViewLoaded]
    || ![(objc_class *)a1.super.super.isa isViewLoaded])
  {
    goto LABEL_11;
  }
  id v5 = [(objc_class *)a1.super.super.isa view];
  if (!v5)
  {
    __break(1u);
    goto LABEL_15;
  }
  id v6 = v5;
  id v7 = [v1 view];
  if (!v7)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v8 = v7;
  unsigned int v9 = [v6 isDescendantOfView:v7];

  if (v9)
  {
    id v10 = [(objc_class *)a1.super.super.isa view];
    if (v10)
    {
      uint64_t v11 = v10;
      [v10 removeFromSuperview];

      goto LABEL_11;
    }
LABEL_16:
    __break(1u);
    return;
  }
LABEL_11:

  [(objc_class *)a1.super.super.isa removeFromParentViewController];
}

Swift::Bool __swiftcall UIViewController.isDescendant(of:)(UIViewController of)
{
  id v3 = (objc_class *)[v1 parentViewController];
  if (v3 && (id v4 = v3, v3, v4 == of.super.super.isa))
  {
    LOBYTE(v5) = 1;
  }
  else
  {
    id v5 = [v1 parentViewController];
    if (v5)
    {
      id v6 = v5;
      Swift::Bool v7 = UIViewController.isDescendant(of:)(of);

      LOBYTE(v5) = v7;
    }
  }
  return (char)v5;
}

void UIViewController.traverseViewControllerHierarchy(_:)(void (*a1)(void *, char *), uint64_t a2)
{
  id v3 = v2;
  char v15 = 0;
  a1(v3, &v15);
  id v6 = [v3 childViewControllers];
  sub_100123DA4(0, (unint64_t *)&qword_10066F7A0);
  unint64_t v7 = sub_1005350E0();

  if (v7 >> 62) {
    goto LABEL_17;
  }
  uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v8)
  {
    swift_beginAccess();
    uint64_t v9 = 4;
    while (1)
    {
      id v10 = (v7 & 0xC000000000000001) != 0 ? (id)sub_100536210() : *(id *)(v7 + 8 * v9);
      uint64_t v11 = v10;
      uint64_t v12 = v9 - 3;
      if (__OFADD__(v9 - 4, 1)) {
        break;
      }
      if (v15)
      {

        goto LABEL_12;
      }
      sub_100394128(v10, a1, a2, &v15);

      ++v9;
      if (v12 == v8) {
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_100536470();
    swift_bridgeObjectRelease();
  }
LABEL_12:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if ((v15 & 1) == 0)
  {
    id v13 = [v3 presentedViewController];
    if (v13)
    {
      id v14 = v13;
      sub_100394128(v13, a1, a2, &v15);
    }
  }
}

uint64_t sub_100392A64(uint64_t a1, unsigned char *a2, void (*a3)(uint64_t, unsigned char *), uint64_t a4, unsigned char *a5)
{
  swift_beginAccess();
  a3(a1, a5);
  swift_endAccess();
  uint64_t result = swift_beginAccess();
  *a2 = *a5;
  return result;
}

NSLayoutConstraint __swiftcall NSLayoutConstraint.with(priority:)(__C::UILayoutPriority priority)
{
  [v1 setPriority:*(double *)&priority.rawValue];

  return (NSLayoutConstraint)v3;
}

void UIView.constrainToBounds(of:useLayoutMarginsGuide:padding:)()
{
  sub_10000BB04(&qword_10066F7E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10053AAF0;
  *(void *)(inited + 32) = 3;
  *(void *)(inited + 40) = 0x3FF0000000000000;
  *(void *)(inited + 48) = 5;
  *(void *)(inited + 56) = 0x3FF0000000000000;
  *(void *)(inited + 64) = 6;
  *(void *)(inited + 72) = 0xBFF0000000000000;
  *(void *)(inited + 80) = 4;
  *(void *)(inited + 88) = 0xBFF0000000000000;
  unint64_t v1 = sub_1003524E8(inited);
  swift_setDeallocating();
  sub_100393684(v1, (void (*)(void, double))sub_10039434C);
  swift_bridgeObjectRelease();
  id v2 = self;
  sub_100123DA4(0, (unint64_t *)&unk_10066F7C0);
  Class isa = sub_1005350C0().super.isa;
  [v2 activateConstraints:isa];
  swift_bridgeObjectRelease();
}

id sub_100392CCC(uint64_t a1, void *a2, char a3, void *a4, double a5, double a6)
{
  v17[3] = sub_100123DA4(0, (unint64_t *)&qword_10066F718);
  v17[0] = a2;
  id v12 = a2;
  if (a3) {
    id v13 = [a4 layoutMarginsGuide];
  }
  else {
    id v13 = a4;
  }
  id v14 = v13;
  sub_100123DA4(0, (unint64_t *)&unk_10066F7C0);
  v16[3] = sub_100123DA4(0, (unint64_t *)&unk_10066F7B0);
  v16[0] = v14;
  return sub_100392DC4(v17, a1, 0, v16, a1, 1.0, a5 * a6);
}

id sub_100392DC4(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, double a6, double a7)
{
  sub_10000ECD4(a1, a1[3]);
  uint64_t v14 = sub_100536770();
  uint64_t v15 = a4[3];
  if (v15)
  {
    id v16 = sub_10000ECD4(a4, a4[3]);
    uint64_t v24 = a5;
    uint64_t v25 = a2;
    uint64_t v17 = a3;
    uint64_t v18 = *(void *)(v15 - 8);
    __chkstk_darwin(v16);
    uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v18 + 16))(v20);
    uint64_t v21 = sub_100536770();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v15);
    a3 = v17;
    a5 = v24;
    a2 = v25;
    sub_100013D48((uint64_t)a4);
  }
  else
  {
    uint64_t v21 = 0;
  }
  id v22 = [(id)swift_getObjCClassFromMetadata() constraintWithItem:v14 attribute:a2 relatedBy:a3 toItem:v21 attribute:a5 multiplier:a6 constant:a7];
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_100013D48((uint64_t)a1);
  return v22;
}

void Array<A>.activate()(uint64_t a1)
{
}

void UIView.addSubviewAnchoredToBounds(_:useLayoutMarginsGuide:padding:)(void *a1)
{
  [a1 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v1 addSubview:a1];
  UIView.constrainToBounds(of:useLayoutMarginsGuide:padding:)();
}

void Array<A>.deactivate()(uint64_t a1)
{
}

void sub_100393020(uint64_t a1, SEL *a2)
{
  id v3 = self;
  sub_100123DA4(0, (unint64_t *)&unk_10066F7C0);
  Class isa = sub_1005350C0().super.isa;
  [v3 *a2];
}

uint64_t NSTextAlignment.init(languageCode:)()
{
  uint64_t v0 = sub_10052F830();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10052F800();
  uint64_t v4 = sub_10052F820();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v5 = 4;
  if (v4 == 2) {
    uint64_t v5 = 2;
  }
  if (v4 == 1) {
    return 0;
  }
  else {
    return v5;
  }
}

Swift::Void __swiftcall NSTextAlignment.flip()()
{
  if (*v0)
  {
    if (*v0 != 2) {
      return;
    }
    uint64_t v1 = 0;
  }
  else
  {
    uint64_t v1 = 2;
  }
  *uint64_t v0 = v1;
}

uint64_t NSTextAlignment.ctTextAlignment.getter(unint64_t a1)
{
  if (a1 >= 5) {
    return 4;
  }
  else {
    return (0x403010200uLL >> (8 * a1));
  }
}

uint64_t UIViewPropertyAnimator.UpdateReason.init(rawValue:)(unint64_t a1)
{
  if (a1 >= 4) {
    return 3;
  }
  else {
    return 0x2010003u >> (8 * a1);
  }
}

void *sub_100393210@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result >= 4uLL) {
    char v2 = 3;
  }
  else {
    char v2 = 0x2010003u >> (8 * *result);
  }
  *a2 = v2;
  return result;
}

void UIViewPropertyAnimator.addModifiedAnimations(with:animations:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v5[4] = a2;
  v5[5] = a3;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  void v5[2] = sub_1001CB5A0;
  void v5[3] = &unk_1006300D0;
  uint64_t v4 = _Block_copy(v5);
  swift_retain();
  swift_release();
  [v3 addAnimations:v4];
  _Block_release(v4);
}

UIViewPropertyAnimator __swiftcall UIViewPropertyAnimator.init(springTimingParameters:)(UISpringTimingParameters springTimingParameters)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  [(objc_class *)springTimingParameters.super.isa settlingDuration];
  id v3 = [v2 initWithDuration:springTimingParameters.super.isa];

  return (UIViewPropertyAnimator)v3;
}

id UISpringTimingParameters.init(dampingRatio:response:)(double a1, double a2)
{
  double v2 = 6.28318531 / a2 * (6.28318531 / a2);
  double v3 = sqrt(v2);
  double v4 = (v3 + v3) * a1;
  id v5 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return [v5 initWithMass:1.0 stiffness:v2 damping:v4 initialVelocity:0.0];
}

id UIView.setAnchorPoint(_:preserveFrame:)(char a1, double a2, double a3)
{
  if (a1)
  {
    double v6 = UIView.untransformedFrame.getter();
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    CGFloat v12 = v11;
    [v3 setAnchorPoint:a2, a3];
    return UIView.untransformedFrame.setter(v6, v8, v10, v12);
  }
  else
  {
    return [v3 setAnchorPoint:];
  }
}

double sub_100393478()
{
  static UIView.Shadow.identity = (uint64_t)[self blackColor];
  *(_OWORD *)algn_10067B2E0 = xmmword_10054DC80;
  double result = 0.0;
  *(_OWORD *)&algn_10067B2E0[16] = xmmword_10054DC90;
  return result;
}

uint64_t *UIView.Shadow.identity.unsafeMutableAddressor()
{
  if (qword_10066E390 != -1) {
    swift_once();
  }
  return &static UIView.Shadow.identity;
}

id static UIView.Shadow.identity.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10066E390 != -1) {
    swift_once();
  }
  double v2 = (void *)static UIView.Shadow.identity;
  *(void *)a1 = static UIView.Shadow.identity;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)algn_10067B2E0;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)&algn_10067B2E0[16];

  return v2;
}

void (*sub_1003935AC(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  double v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_10018C5E0(v6, a2, a3);
  return sub_100206508;
}

unint64_t sub_100393614(id *a1)
{
  return (unint64_t)sub_10038DCFC(a1, *(void **)(v1 + 32)) & 1;
}

void sub_100393638(double a1, double a2)
{
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  sub_100536990(v3);
  if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = *(void *)&a2;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  sub_100536990(v4);
}

void *sub_100393684(uint64_t a1, void (*a2)(void, double))
{
  uint64_t v3 = *(void *)(a1 + 16);
  double result = _swiftEmptyArrayStorage;
  if (v3)
  {
    sub_1005362C0();
    double result = (void *)sub_10027A2B8(a1);
    uint64_t v5 = (uint64_t)result;
    int v7 = v6;
    uint64_t v8 = 0;
    uint64_t v9 = a1 + 64;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
    {
      unint64_t v11 = (unint64_t)v5 >> 6;
      if ((*(void *)(v9 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
        goto LABEL_22;
      }
      if (*(_DWORD *)(a1 + 36) != v7) {
        goto LABEL_23;
      }
      uint64_t v18 = v8;
      a2(*(void *)(*(void *)(a1 + 48) + 8 * v5), *(double *)(*(void *)(a1 + 56) + 8 * v5));
      sub_100536290();
      sub_1005362D0();
      sub_1005362E0();
      double result = (void *)sub_1005362A0();
      int64_t v10 = 1 << *(unsigned char *)(a1 + 32);
      if (v5 >= v10) {
        goto LABEL_24;
      }
      uint64_t v12 = *(void *)(v9 + 8 * v11);
      if ((v12 & (1 << v5)) == 0) {
        goto LABEL_25;
      }
      if (*(_DWORD *)(a1 + 36) != v7) {
        goto LABEL_26;
      }
      unint64_t v13 = v12 & (-2 << (v5 & 0x3F));
      if (v13)
      {
        int64_t v10 = __clz(__rbit64(v13)) | v5 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v14 = v11 + 1;
        unint64_t v15 = (unint64_t)(v10 + 63) >> 6;
        if (v11 + 1 < v15)
        {
          unint64_t v16 = *(void *)(v9 + 8 * v14);
          if (v16)
          {
LABEL_18:
            int64_t v10 = __clz(__rbit64(v16)) + (v14 << 6);
          }
          else
          {
            while (v15 - 2 != v11)
            {
              unint64_t v16 = *(void *)(a1 + 80 + 8 * v11++);
              if (v16)
              {
                unint64_t v14 = v11 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      uint64_t v8 = v18 + 1;
      uint64_t v5 = v10;
      if (v18 + 1 == v3) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

void *sub_10039387C(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_42;
  }
  uint64_t v21 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v21)
  {
    while (1)
    {
      unint64_t v4 = 0;
      uint64_t v26 = v3 & 0xFFFFFFFFFFFFFF8;
      unint64_t v27 = v3 & 0xC000000000000001;
      uint64_t v23 = a2 & 0xFFFFFFFFFFFFFF8;
      unint64_t v22 = a2 & 0xC000000000000001;
      unint64_t v24 = a2 >> 62;
      uint64_t v25 = v3 + 32;
      unint64_t v28 = a2;
      uint64_t v3 = v21;
      while (1)
      {
        if (v27)
        {
          id v5 = (id)sub_100536210();
        }
        else
        {
          if (v4 >= *(void *)(v26 + 16))
          {
            __break(1u);
LABEL_39:
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          id v5 = *(id *)(v25 + 8 * v4);
        }
        int v6 = v5;
        if (__OFADD__(v4++, 1)) {
          goto LABEL_39;
        }
        id v8 = [v5 customView];
        if (v8) {
          break;
        }

LABEL_5:
        if (v4 == v3) {
          return _swiftEmptyArrayStorage;
        }
      }
      uint64_t v9 = v8;
      if (!v24) {
        break;
      }
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_100536470();
      if (!v10) {
        goto LABEL_35;
      }
LABEL_13:
      if (v22) {
        id v11 = (id)sub_100536210();
      }
      else {
        id v11 = *(id *)(a2 + 32);
      }
      uint64_t v12 = v11;
      uint64_t v3 = sub_100123DA4(0, (unint64_t *)&qword_10066F718);
      char v13 = sub_100535D90();

      if (v13)
      {

LABEL_32:
        swift_bridgeObjectRelease();
        sub_100536290();
        sub_1005362D0();
        sub_1005362E0();
        sub_1005362A0();
        uint64_t v3 = v21;
        goto LABEL_5;
      }
      if (v10 == 1)
      {
LABEL_24:

LABEL_25:
        swift_bridgeObjectRelease();
        uint64_t v3 = v21;
        goto LABEL_5;
      }
      if (v22)
      {
        uint64_t v14 = 1;
        while (1)
        {
          sub_100536210();
          a2 = v14 + 1;
          if (__OFADD__(v14, 1)) {
            goto LABEL_40;
          }
          char v15 = sub_100535D90();
          swift_unknownObjectRelease();
          if (v15) {
            goto LABEL_31;
          }
          ++v14;
          BOOL v16 = a2 == v10;
          a2 = v28;
          if (v16) {
            goto LABEL_24;
          }
        }
      }
      uint64_t v17 = 5;
      while (1)
      {
        a2 = v17 - 3;
        if (__OFADD__(v17 - 4, 1)) {
          break;
        }
        id v18 = *(id *)(v28 + 8 * v17);
        char v19 = sub_100535D90();

        if (v19)
        {
LABEL_31:

          a2 = v28;
          goto LABEL_32;
        }
        ++v17;
        if (a2 == v10)
        {

          a2 = v28;
          goto LABEL_25;
        }
      }
LABEL_41:
      __break(1u);
LABEL_42:
      uint64_t v21 = sub_100536470();
      if (!v21) {
        return _swiftEmptyArrayStorage;
      }
    }
    uint64_t v10 = *(void *)(v23 + 16);
    swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_13;
    }
LABEL_35:

    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  return _swiftEmptyArrayStorage;
}

unint64_t sub_100393B88(id *a1)
{
  return (unint64_t)sub_10038DDA0(a1, *(void *)(v1 + 32)) & 1;
}

uint64_t sub_100393BAC(uint64_t a1)
{
  uint64_t v2 = sub_10000BB04(&qword_10066F3B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100393C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000BB04(&qword_10066F3B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100393C74()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_100393CB4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10038EB18(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_100393CC0()
{
  return sub_100393CF4();
}

uint64_t sub_100393CC8(uint64_t a1)
{
  return sub_10038F008(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_100393CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100393CE4()
{
  return swift_release();
}

uint64_t sub_100393CEC()
{
  return sub_100393CF4();
}

uint64_t sub_100393CF4()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_100393D40(void *a1)
{
  return sub_10038F274(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t type metadata accessor for UIStackView.SpacerView()
{
  return self;
}

id *sub_100393D6C(id *a1)
{
  return a1;
}

uint64_t sub_100393D98(void *a1)
{
  id v2 = [a1 layer];
  [v2 borderWidth];
  double v4 = v3;

  if (v4 <= 0.0) {
    return 0;
  }
  id v5 = [a1 layer];
  id v6 = [v5 borderColor];

  if (!v6) {
    return 0;
  }
  id v7 = [a1 layer];
  [v7 borderWidth];
  uint64_t v9 = v8;

  uint64_t v10 = v9;
  [objc_allocWithZone((Class)UIColor) initWithCGColor:v6];

  return v10;
}

void sub_100393EA8(void *a1, void (*a2)(void *, char *), uint64_t a3, char *a4)
{
  void v15[2] = a2;
  uint64_t v15[3] = a3;
  v15[4] = a4;
  a2(a1, a4);
  char v16 = *a4;
  if ((v16 & 1) == 0)
  {
    id v6 = [a1 subviews];
    sub_100123DA4(0, (unint64_t *)&qword_10066F718);
    unint64_t v7 = sub_1005350E0();

    if (v7 >> 62) {
      goto LABEL_20;
    }
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v8)
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        id v10 = (id)sub_100536210();
        uint64_t v9 = v7 & 0xFFFFFFFFFFFFFF8;
      }
      else
      {
        uint64_t v9 = v7 & 0xFFFFFFFFFFFFFF8;
        if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v10 = *(id *)(v7 + 32);
      }
      uint64_t v11 = 0;
      uint64_t v12 = v8 - 1;
      while (1)
      {
        sub_100393EA8(v10, sub_1003947CC, v15, &v16);

        if (v12 == v11) {
          goto LABEL_16;
        }
        unint64_t v13 = v11 + 1;
        if ((v7 & 0xC000000000000001) != 0)
        {
          id v14 = (id)sub_100536210();
        }
        else
        {
          if (v13 >= *(void *)(v9 + 16)) {
            goto LABEL_19;
          }
          id v14 = *(id *)(v7 + 8 * v11 + 40);
        }
        id v10 = v14;
        if (__OFADD__(v13, 1)) {
          break;
        }
        ++v11;
        if (v16 == 1)
        {

LABEL_16:
          swift_bridgeObjectRelease();
          return;
        }
      }
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_100536470();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1003940A0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1003940D8()
{
}

uint64_t sub_1003940E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100394128(void *a1, void (*a2)(void *, char *), uint64_t a3, char *a4)
{
  void v16[2] = a2;
  v16[3] = a3;
  void v16[4] = a4;
  swift_beginAccess();
  a2(a1, a4);
  swift_endAccess();
  swift_beginAccess();
  char v17 = *a4;
  id v7 = [a1 childViewControllers];
  sub_100123DA4(0, (unint64_t *)&qword_10066F7A0);
  unint64_t v8 = sub_1005350E0();

  if (v8 >> 62) {
    goto LABEL_17;
  }
  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v9)
  {
    swift_beginAccess();
    uint64_t v10 = 4;
    while (1)
    {
      id v11 = (v8 & 0xC000000000000001) != 0 ? (id)sub_100536210() : *(id *)(v8 + 8 * v10);
      uint64_t v12 = v11;
      uint64_t v13 = v10 - 3;
      if (__OFADD__(v10 - 4, 1)) {
        break;
      }
      if (v17 == 1)
      {

        goto LABEL_12;
      }
      sub_100394128(v11, sub_1003947C0, v16, &v17);

      ++v10;
      if (v13 == v9) {
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_100536470();
    swift_bridgeObjectRelease();
  }
LABEL_12:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if ((v17 & 1) == 0)
  {
    id v14 = [a1 presentedViewController];
    if (v14)
    {
      char v15 = v14;
      sub_100394128(v14, sub_1003947C0, v16, &v17);
    }
  }
}

id sub_10039434C(uint64_t a1, double a2)
{
  return sub_100392CCC(a1, *(void **)(v2 + 16), *(unsigned char *)(v2 + 24), *(void **)(v2 + 32), a2, *(double *)(v2 + 40));
}

unint64_t sub_100394364()
{
  unint64_t result = qword_10066F7F0;
  if (!qword_10066F7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066F7F0);
  }
  return result;
}

unint64_t sub_1003943BC()
{
  unint64_t result = qword_10066F7F8;
  if (!qword_10066F7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066F7F8);
  }
  return result;
}

uint64_t _s6ShadowVwcp(uint64_t a1, uint64_t a2)
{
  double v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  id v4 = v3;
  return a1;
}

uint64_t _s6ShadowVwca(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

__n128 _s6ShadowVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s6ShadowVwta(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for UIView.Shadow()
{
  return &type metadata for UIView.Shadow;
}

uint64_t _s6BorderVwCP(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v3 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v3;
  id v4 = v3;
  return a1;
}

void _s6BorderVwxx(uint64_t a1)
{
}

uint64_t _s6BorderVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  id v4 = (void *)a2[2];
  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  return a1;
}

__n128 _s6BorderVwtk(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s6BorderVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

uint64_t _s6BorderVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s6BorderVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UIView.Border()
{
  return &type metadata for UIView.Border;
}

void *_s29CompressionResistancePriorityVwCP(void *result, void *a2)
{
  *__n128 result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for UIView.CompressionResistancePriority()
{
  return &type metadata for UIView.CompressionResistancePriority;
}

unsigned char *_s12UpdateReasonOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100394788);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UIViewPropertyAnimator.UpdateReason()
{
  return &type metadata for UIViewPropertyAnimator.UpdateReason;
}

uint64_t sub_1003947C0(uint64_t a1, unsigned char *a2)
{
  return sub_100392A64(a1, a2, *(void (**)(uint64_t, unsigned char *))(v2 + 16), *(void *)(v2 + 24), *(unsigned char **)(v2 + 32));
}

uint64_t sub_1003947CC(uint64_t a1, unsigned char *a2)
{
  unsigned int v4 = *(unsigned char **)(v2 + 32);
  uint64_t result = (*(uint64_t (**)(uint64_t, unsigned char *))(v2 + 16))(a1, v4);
  *a2 = *v4;
  return result;
}

uint64_t sub_100394814(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s9_ObserverC18HandlerAssociationVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t URL.appending(_:)()
{
  return sub_10052F2C0();
}

uint64_t URL.init(string:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000BB04(&qword_10066F008);
  __chkstk_darwin(v4 - 8);
  unsigned int v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    goto LABEL_4;
  }
  sub_10052F330();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_10052F360();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_100013C44((uint64_t)v6, &qword_10066F008);
LABEL_4:
    uint64_t v9 = sub_10052F360();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a2, 1, 1, v9);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
}

uint64_t URL.parametrize(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000BB04(&qword_10066F008);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_10052EF60();
  uint64_t v8 = *(void *)(v68 - 8);
  uint64_t v9 = __chkstk_darwin(v68);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v67 = (char *)&v48 - v13;
  __chkstk_darwin(v12);
  uint64_t v63 = (char *)&v48 - v14;
  uint64_t v15 = sub_10000BB04(&qword_10066F890);
  __chkstk_darwin(v15 - 8);
  char v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10052F020();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  unint64_t v54 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10052F360();
  uint64_t v53 = *(void *)(v21 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(a2, v2, v21);
  if (*(void *)(a1 + 16))
  {
    sub_10052EF90();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
    {
      return sub_100013C44((uint64_t)v17, &qword_10066F890);
    }
    else
    {
      uint64_t v51 = v19;
      uint64_t v52 = v18;
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v54, v17, v18);
      uint64_t v23 = sub_10052EF70();
      if (v23) {
        unint64_t v24 = (void *)v23;
      }
      else {
        unint64_t v24 = _swiftEmptyArrayStorage;
      }
      uint64_t v25 = swift_bridgeObjectRetain();
      uint64_t v26 = sub_100397134(v25);
      swift_bridgeObjectRelease();
      id v69 = v26;
      sub_100396FF0(&v69);
      unint64_t v27 = v69;
      uint64_t v62 = v69[2];
      if (v62)
      {
        uint64_t v48 = v21;
        uint64_t v49 = v7;
        uint64_t v50 = a2;
        unint64_t v28 = 0;
        uint64_t v60 = v69;
        uint64_t v61 = v69 + 4;
        uint64_t v65 = (void (**)(char *, char *, uint64_t))(v8 + 16);
        uint64_t v66 = (void (**)(char *, uint64_t))(v8 + 8);
        uint64_t v57 = v8 + 32;
        uint64_t v58 = v8;
        uint64_t v55 = (void (**)(char *, char *, uint64_t))(v8 + 40);
        unint64_t v56 = (v8 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        uint64_t v29 = v24;
        unint64_t v59 = v11;
        while (v28 < v27[2])
        {
          unint64_t v64 = v28;
          uint64_t v32 = &v61[4 * v28];
          uint64_t v33 = *v32;
          uint64_t v34 = v32[1];
          uint64_t v35 = v29;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10052EF30();
          swift_bridgeObjectRelease();
          uint64_t v36 = v29[2];
          if (v36)
          {
            unint64_t v37 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
            uint64_t v38 = *(void *)(v8 + 72);
            id v39 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
            swift_bridgeObjectRetain();
            unint64_t v40 = 0;
            while (1)
            {
              v39(v67, (char *)v29 + v37, v68);
              if (sub_10052EF40() == v33 && v41 == v34) {
                break;
              }
              char v42 = sub_100536780();
              swift_bridgeObjectRelease();
              (*v66)(v67, v68);
              if (v42) {
                goto LABEL_25;
              }
              ++v40;
              v37 += v38;
              uint64_t v29 = v35;
              if (v36 == v40)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v8 = v58;
                uint64_t v11 = v59;
                goto LABEL_20;
              }
            }
            swift_bridgeObjectRelease();
            (*v66)(v67, v68);
LABEL_25:
            swift_bridgeObjectRelease();
            uint64_t v29 = v35;
            swift_bridgeObjectRelease();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v29 = (void *)sub_10039580C(v35);
            }
            uint64_t v11 = v59;
            if (v40 >= v29[2]) {
              goto LABEL_36;
            }
            (*v55)((char *)v29 + v37, v63, v68);
            uint64_t v8 = v58;
          }
          else
          {
            swift_bridgeObjectRelease();
            id v39 = *v65;
LABEL_20:
            uint64_t v43 = v63;
            v39(v11, v63, v68);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v29 = (void *)sub_10035E8C4(0, v29[2] + 1, 1, v29);
            }
            unint64_t v45 = v29[2];
            unint64_t v44 = v29[3];
            if (v45 >= v44 >> 1) {
              uint64_t v29 = (void *)sub_10035E8C4(v44 > 1, v45 + 1, 1, v29);
            }
            v29[2] = v45 + 1;
            unint64_t v30 = (unint64_t)v29
                + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
                + *(void *)(v8 + 72) * v45;
            uint64_t v31 = v68;
            (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v30, v11, v68);
            (*(void (**)(char *, uint64_t))(v8 + 8))(v43, v31);
          }
          unint64_t v28 = v64 + 1;
          unint64_t v27 = v60;
          if (v64 + 1 == v62)
          {
            swift_release();
            a2 = v50;
            uint64_t v7 = v49;
            uint64_t v21 = v48;
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_36:
        __break(1u);
        uint64_t result = swift_release();
        __break(1u);
      }
      else
      {
        swift_release();
LABEL_31:
        uint64_t v46 = v54;
        sub_10052EF80();
        sub_10052EFA0();
        (*(void (**)(char *, uint64_t))(v51 + 8))(v46, v52);
        uint64_t v47 = v53;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v7, 1, v21) == 1)
        {
          return sub_100013C44((uint64_t)v7, &qword_10066F008);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v47 + 8))(a2, v21);
          return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v47 + 32))(a2, v7, v21);
        }
      }
    }
  }
  return result;
}

uint64_t static URL.+ infix(_:_:)()
{
  return sub_10052F2C0();
}

uint64_t URLComponents.queryItemsDictionary.getter()
{
  uint64_t v0 = sub_10052EF60();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10052EF70();
  if (!v4) {
    return 0;
  }
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 + 16);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v7 = (void *)sub_1003510A0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  uint64_t v8 = v1 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 64);
  v36[1] = v5;
  unint64_t v37 = v3;
  uint64_t v11 = v5 + ((v10 + 32) & ~v10);
  unint64_t v40 = (void (**)(char *, uint64_t))(v8 - 8);
  uint64_t v41 = v9;
  uint64_t v42 = v8;
  uint64_t v12 = *(void *)(v8 + 56);
  uint64_t v38 = v0;
  uint64_t v39 = v12;
  v9(v3, v11, v0);
  while (1)
  {
    uint64_t v14 = sub_10052EF50();
    if (v15) {
      break;
    }
LABEL_6:
    (*v40)(v3, v0);
    v11 += v39;
    if (!--v6)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v7;
    }
    v41(v3, v11, v0);
  }
  uint64_t v43 = v15;
  uint64_t v16 = v14;
  sub_10052EF40();
  uint64_t v17 = sub_100534D80();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v44 = v7;
  unint64_t v22 = sub_100367E3C(v17, v19);
  uint64_t v23 = v7[2];
  BOOL v24 = (v21 & 1) == 0;
  uint64_t v25 = v23 + v24;
  if (!__OFADD__(v23, v24))
  {
    char v26 = v21;
    if (v7[3] < v25)
    {
      sub_100395DE8(v25, isUniquelyReferenced_nonNull_native);
      uint64_t v27 = sub_100367E3C(v17, v19);
      if ((v26 & 1) != (v28 & 1)) {
        goto LABEL_26;
      }
      unint64_t v22 = v27;
      uint64_t v29 = v43;
      uint64_t v7 = v44;
      if ((v26 & 1) == 0) {
        goto LABEL_16;
      }
LABEL_4:
      uint64_t v13 = (uint64_t *)(v7[7] + 16 * v22);
      swift_bridgeObjectRelease();
      *uint64_t v13 = v16;
      v13[1] = v29;
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v3 = v37;
      uint64_t v0 = v38;
      goto LABEL_6;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v29 = v43;
      uint64_t v7 = v44;
      if (v21) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_100396AAC();
      uint64_t v29 = v43;
      uint64_t v7 = v44;
      if (v26) {
        goto LABEL_4;
      }
    }
LABEL_16:
    v7[(v22 >> 6) + 8] |= 1 << v22;
    unint64_t v30 = (uint64_t *)(v7[6] + 16 * v22);
    *unint64_t v30 = v17;
    v30[1] = v19;
    uint64_t v31 = (uint64_t *)(v7[7] + 16 * v22);
    *uint64_t v31 = v16;
    v31[1] = v29;
    uint64_t v32 = v7[2];
    BOOL v33 = __OFADD__(v32, 1);
    uint64_t v34 = v32 + 1;
    if (v33) {
      goto LABEL_25;
    }
    long long v7[2] = v34;
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  uint64_t result = sub_100536860();
  __break(1u);
  return result;
}

void *sub_100395440(void *result, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(unsigned char *)(*(void *)(a4 + 48) + v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1003955D4(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    void v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v27 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = 16 * v16;
    char v21 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    BOOL v24 = (uint64_t *)(*(void *)(a4 + 56) + v20);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    *unint64_t v11 = v23;
    v11[1] = v22;
    v11[2] = v25;
    void v11[3] = v26;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 4;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v27;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

char *sub_1003957F8(uint64_t a1)
{
  return sub_10035E3CC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

size_t sub_10039580C(void *a1)
{
  return sub_10035E8C4(0, a1[2], 0, a1);
}

size_t sub_100395820(void *a1)
{
  return sub_10035E8E4(0, a1[2], 0, a1);
}

uint64_t sub_100395834(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000BB04(&qword_10066E530);
  uint64_t result = sub_1005364A0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    uint64_t v34 = v3;
    int64_t v8 = 0;
    unint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                int v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                uint64_t *v9 = v32;
              }
              int v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 8 * v18;
      uint64_t v23 = *(void *)(*(void *)(v5 + 48) + v22);
      uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
      uint64_t result = sub_100536940();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v7 + 48) + v16) = v23;
      *(void *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *int v3 = v7;
  return result;
}

uint64_t sub_100395ADC(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000BB04(&qword_10066E540);
  char v37 = a2;
  uint64_t v6 = sub_1005364A0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          int v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_100536950();
    sub_100534DD0();
    uint64_t result = sub_1005369A0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int v3 = v34;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *int v3 = v7;
  return result;
}

uint64_t sub_100395DE8(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000BB04(&qword_10066E518);
  char v42 = a2;
  uint64_t v6 = sub_1005364A0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          int v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    int64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_100536950();
    sub_100534DD0();
    uint64_t result = sub_1005369A0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    void *v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    void *v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int v3 = v39;
  int64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *int v3 = v7;
  return result;
}

uint64_t sub_100396110(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000BB04(&qword_10066E510);
  char v37 = a2;
  uint64_t v6 = sub_1005364A0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v18 >= v35) {
          goto LABEL_36;
        }
        unint64_t v19 = v36[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v35) {
            goto LABEL_36;
          }
          unint64_t v19 = v36[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v35)
            {
LABEL_36:
              swift_release();
              int v3 = v2;
              if (v37)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v36[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_43;
                }
                if (v13 >= v35) {
                  goto LABEL_36;
                }
                unint64_t v19 = v36[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      unint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 24 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      int64_t v24 = (void *)v21[2];
      uint64_t v25 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
      if ((v37 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        id v26 = v24;
        swift_bridgeObjectRetain();
      }
      sub_100536950();
      if (v22)
      {
        sub_100536960(1uLL);
        swift_bridgeObjectRetain();
        sub_100534DD0();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100536960(0);
      }
      uint64_t result = sub_1005369A0();
      uint64_t v27 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v14 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 24 * v14);
      *unint64_t v15 = v23;
      v15[1] = v22;
      void v15[2] = v24;
      *(void *)(*(void *)(v7 + 56) + 8 * v14) = v25;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *int v3 = v7;
  return result;
}

uint64_t sub_100396454(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000BB04(&qword_10066E570);
  char v36 = a2;
  uint64_t v6 = sub_1005364A0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_100536950();
    sub_100534DD0();
    uint64_t result = sub_1005369A0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *int64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *int v3 = v7;
  return result;
}

void *sub_10039676C()
{
  uint64_t v1 = v0;
  sub_10000BB04(&qword_10066E530);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100536490();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1003968FC()
{
  uint64_t v1 = v0;
  sub_10000BB04(&qword_10066E540);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100536490();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100396AAC()
{
  uint64_t v1 = v0;
  sub_10000BB04(&qword_10066E518);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100536490();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    int64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    void *v23 = v19;
    v23[1] = v18;
    unint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *unint64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100396C68()
{
  uint64_t v1 = v0;
  sub_10000BB04(&qword_10066E510);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100536490();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 24 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)v17[2];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v22 = *v17;
    v22[1] = v18;
    v22[2] = v19;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id v23 = v19;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100396E38()
{
  uint64_t v1 = v0;
  sub_10000BB04(&qword_10066E570);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100536490();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100396FF0(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100397EF4(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_1003973E8(v5);
  *a1 = v2;
  return result;
}

void *sub_10039705C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10000BB04(&qword_10066F8B0);
  uint64_t v3 = swift_allocObject();
  size_t v4 = j__malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * v4 - 64;
  uint64_t v5 = sub_100395440(&v7, (unsigned char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_100206FC4();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (void *)v3;
}

void *sub_100397134(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10000BB04(&qword_10066F898);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 1;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  uint64_t v6 = sub_1003955D4((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_100206FC4();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

uint64_t _s9ComponentOwxx()
{
  return sub_100397230();
}

uint64_t sub_100397230()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s9ComponentOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  Library.Menu.Revision.Version.selected.getter();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s9ComponentOwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  Library.Menu.Revision.Version.selected.getter();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_100397230();
  return a1;
}

__n128 _s9ComponentOwtk(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t _s9ComponentOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_100397230();
  return a1;
}

uint64_t _s9ComponentOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s9ComponentOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1003973C4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1003973CC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for URL.Component()
{
  return &type metadata for URL.Component;
}

uint64_t sub_1003973E8(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  uint64_t result = sub_100536680(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_100397AA8(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_151;
  }
  uint64_t v108 = result;
  uint64_t v105 = a1;
  if (v3 <= 1)
  {
    uint64_t v7 = _swiftEmptyArrayStorage;
    uint64_t v111 = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      uint64_t v10 = (char *)_swiftEmptyArrayStorage;
LABEL_117:
      uint64_t result = (uint64_t)v10;
      unint64_t v107 = v7;
      if (v11 >= 2)
      {
        uint64_t v97 = *v105;
        do
        {
          unint64_t v98 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_146;
          }
          if (!v97) {
            goto LABEL_159;
          }
          uint64_t v99 = result;
          uint64_t v100 = *(void *)(result + 32 + 16 * v98);
          uint64_t v101 = *(void *)(result + 32 + 16 * (v11 - 1) + 8);
          uint64_t result = sub_100397B8C((char *)(v97 + 32 * v100), (char *)(v97 + 32 * *(void *)(result + 32 + 16 * (v11 - 1))), v97 + 32 * v101, v111);
          if (v1) {
            break;
          }
          if (v101 < v100) {
            goto LABEL_147;
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_100397EB8(v99);
            uint64_t v99 = result;
          }
          if (v98 >= *(void *)(v99 + 16)) {
            goto LABEL_148;
          }
          uint64_t v102 = (void *)(v99 + 32 + 16 * v98);
          void *v102 = v100;
          v102[1] = v101;
          unint64_t v103 = *(void *)(v99 + 16);
          if (v11 > v103) {
            goto LABEL_149;
          }
          memmove((void *)(v99 + 32 + 16 * (v11 - 1)), (const void *)(v99 + 32 + 16 * v11), 16 * (v103 - v11));
          uint64_t result = v99;
          *(void *)(v99 + 16) = v103 - 1;
          unint64_t v11 = v103 - 1;
        }
        while (v103 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      v107[2] = 0;
      return swift_bridgeObjectRelease();
    }
    unint64_t v107 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_10000BB04(&qword_10066F8A0);
    uint64_t result = sub_100535170();
    *(void *)(result + 16) = v6;
    unint64_t v107 = (void *)result;
    uint64_t v111 = (char *)(result + 32);
  }
  Swift::Int v8 = 0;
  uint64_t v9 = *a1;
  uint64_t v106 = *a1 + 8;
  uint64_t v104 = *a1 + 24;
  uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v109 = v3;
  uint64_t v110 = *a1;
  while (1)
  {
    Swift::Int v12 = v8++;
    if (v8 >= v3) {
      goto LABEL_45;
    }
    int64_t v13 = (uint64_t *)(v9 + 32 * v8);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    uint64_t v16 = (uint64_t *)(v9 + 32 * v12);
    uint64_t result = *v16;
    if (*v16 == v14 && v16[1] == v15)
    {
      Swift::Int v19 = v12 + 2;
      if (v12 + 2 >= v3) {
        goto LABEL_44;
      }
      int v18 = 0;
    }
    else
    {
      uint64_t result = sub_100536780();
      int v18 = result;
      Swift::Int v19 = v12 + 2;
      if (v12 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v20 = (void *)(v106 + 32 * v19);
    do
    {
      int64_t v22 = (uint64_t *)(v9 + 32 * v8);
      uint64_t result = *v22;
      if (*v22 == *(v20 - 1) && v22[1] == *v20)
      {
        if (v18) {
          goto LABEL_37;
        }
      }
      else
      {
        uint64_t result = sub_100536780();
        if ((v18 ^ result)) {
          goto LABEL_36;
        }
      }
      v20 += 4;
      Swift::Int v21 = v19 + 1;
      Swift::Int v8 = v19;
      Swift::Int v19 = v21;
    }
    while (v21 < v3);
    Swift::Int v19 = v21;
LABEL_36:
    Swift::Int v8 = v19;
    if (v18)
    {
LABEL_37:
      if (v19 < v12) {
        goto LABEL_155;
      }
      if (v12 < v19)
      {
        uint64_t v24 = 32 * v19;
        uint64_t v25 = 32 * v12;
        Swift::Int v26 = v19;
        Swift::Int v27 = v12;
        do
        {
          if (v27 != --v26)
          {
            if (!v9) {
              goto LABEL_158;
            }
            uint64_t v28 = (_OWORD *)(v9 + v25);
            uint64_t v29 = v9 + v24;
            long long v30 = *(_OWORD *)(v9 + v25);
            uint64_t v31 = *(void *)(v9 + v25 + 16);
            uint64_t v32 = *(void *)(v9 + v25 + 24);
            long long v33 = *(_OWORD *)(v9 + v24 - 16);
            *uint64_t v28 = *(_OWORD *)(v9 + v24 - 32);
            v28[1] = v33;
            *(_OWORD *)(v29 - 32) = v30;
            *(void *)(v29 - 16) = v31;
            *(void *)(v29 - 8) = v32;
          }
          ++v27;
          v24 -= 32;
          v25 += 32;
        }
        while (v27 < v26);
      }
LABEL_44:
      Swift::Int v8 = v19;
    }
LABEL_45:
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v12)) {
        goto LABEL_150;
      }
      if (v8 - v12 < v108) {
        break;
      }
    }
LABEL_66:
    if (v8 < v12) {
      goto LABEL_145;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100397DBC(0, *((void *)v10 + 2) + 1, 1, v10);
      uint64_t v10 = (char *)result;
    }
    unint64_t v47 = *((void *)v10 + 2);
    unint64_t v46 = *((void *)v10 + 3);
    unint64_t v11 = v47 + 1;
    if (v47 >= v46 >> 1)
    {
      uint64_t result = (uint64_t)sub_100397DBC((char *)(v46 > 1), v47 + 1, 1, v10);
      uint64_t v10 = (char *)result;
    }
    *((void *)v10 + 2) = v11;
    uint64_t v48 = v10 + 32;
    uint64_t v49 = &v10[16 * v47 + 32];
    *(void *)uint64_t v49 = v12;
    *((void *)v49 + 1) = v8;
    if (v47)
    {
      uint64_t v9 = v110;
      while (1)
      {
        unint64_t v50 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v55 = &v48[2 * v11];
          uint64_t v56 = *(v55 - 8);
          uint64_t v57 = *(v55 - 7);
          BOOL v61 = __OFSUB__(v57, v56);
          uint64_t v58 = v57 - v56;
          if (v61) {
            goto LABEL_134;
          }
          uint64_t v60 = *(v55 - 6);
          uint64_t v59 = *(v55 - 5);
          BOOL v61 = __OFSUB__(v59, v60);
          uint64_t v53 = v59 - v60;
          char v54 = v61;
          if (v61) {
            goto LABEL_135;
          }
          unint64_t v62 = v11 - 2;
          uint64_t v63 = &v48[2 * v11 - 4];
          uint64_t v65 = *v63;
          uint64_t v64 = v63[1];
          BOOL v61 = __OFSUB__(v64, v65);
          uint64_t v66 = v64 - v65;
          if (v61) {
            goto LABEL_136;
          }
          BOOL v61 = __OFADD__(v53, v66);
          uint64_t v67 = v53 + v66;
          if (v61) {
            goto LABEL_138;
          }
          if (v67 >= v58)
          {
            uint64_t v85 = &v48[2 * v50];
            uint64_t v87 = *v85;
            uint64_t v86 = v85[1];
            BOOL v61 = __OFSUB__(v86, v87);
            uint64_t v88 = v86 - v87;
            if (v61) {
              goto LABEL_144;
            }
            BOOL v78 = v53 < v88;
            goto LABEL_104;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v79 = *((void *)v10 + 4);
            uint64_t v80 = *((void *)v10 + 5);
            BOOL v61 = __OFSUB__(v80, v79);
            uint64_t v72 = v80 - v79;
            char v73 = v61;
            goto LABEL_98;
          }
          uint64_t v52 = *((void *)v10 + 4);
          uint64_t v51 = *((void *)v10 + 5);
          BOOL v61 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          char v54 = v61;
        }
        if (v54) {
          goto LABEL_137;
        }
        unint64_t v62 = v11 - 2;
        uint64_t v68 = &v48[2 * v11 - 4];
        uint64_t v70 = *v68;
        uint64_t v69 = v68[1];
        BOOL v71 = __OFSUB__(v69, v70);
        uint64_t v72 = v69 - v70;
        char v73 = v71;
        if (v71) {
          goto LABEL_139;
        }
        uint64_t v74 = &v48[2 * v50];
        uint64_t v76 = *v74;
        uint64_t v75 = v74[1];
        BOOL v61 = __OFSUB__(v75, v76);
        uint64_t v77 = v75 - v76;
        if (v61) {
          goto LABEL_141;
        }
        if (__OFADD__(v72, v77)) {
          goto LABEL_143;
        }
        if (v72 + v77 >= v53)
        {
          BOOL v78 = v53 < v77;
LABEL_104:
          if (v78) {
            unint64_t v50 = v62;
          }
          goto LABEL_106;
        }
LABEL_98:
        if (v73) {
          goto LABEL_140;
        }
        uint64_t v81 = &v48[2 * v50];
        uint64_t v83 = *v81;
        uint64_t v82 = v81[1];
        BOOL v61 = __OFSUB__(v82, v83);
        uint64_t v84 = v82 - v83;
        if (v61) {
          goto LABEL_142;
        }
        if (v84 < v72) {
          goto LABEL_15;
        }
LABEL_106:
        unint64_t v89 = v50 - 1;
        if (v50 - 1 >= v11)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v9) {
          goto LABEL_157;
        }
        uint64_t v90 = v10;
        uint64_t v91 = v9;
        uint64_t v92 = &v48[2 * v89];
        uint64_t v93 = *v92;
        uint64_t v94 = &v48[2 * v50];
        uint64_t v95 = v94[1];
        uint64_t result = sub_100397B8C((char *)(v91 + 32 * *v92), (char *)(v91 + 32 * *v94), v91 + 32 * v95, v111);
        if (v1) {
          goto LABEL_114;
        }
        if (v95 < v93) {
          goto LABEL_131;
        }
        if (v50 > *((void *)v90 + 2)) {
          goto LABEL_132;
        }
        *uint64_t v92 = v93;
        v48[2 * v89 + 1] = v95;
        unint64_t v96 = *((void *)v90 + 2);
        if (v50 >= v96) {
          goto LABEL_133;
        }
        uint64_t v10 = v90;
        unint64_t v11 = v96 - 1;
        uint64_t result = (uint64_t)memmove(&v48[2 * v50], v94 + 2, 16 * (v96 - 1 - v50));
        *((void *)v90 + 2) = v96 - 1;
        BOOL v78 = v96 > 2;
        uint64_t v9 = v110;
        if (!v78) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
    uint64_t v9 = v110;
LABEL_15:
    Swift::Int v3 = v109;
    if (v8 >= v109)
    {
      uint64_t v7 = v107;
      goto LABEL_117;
    }
  }
  if (__OFADD__(v12, v108)) {
    goto LABEL_153;
  }
  if (v12 + v108 >= v3) {
    Swift::Int v34 = v3;
  }
  else {
    Swift::Int v34 = v12 + v108;
  }
  if (v34 >= v12)
  {
    if (v8 != v34)
    {
      uint64_t v35 = (void *)(v104 + 32 * v8);
      do
      {
        char v36 = (uint64_t *)(v9 + 32 * v8);
        uint64_t v37 = *v36;
        uint64_t v38 = v36[1];
        Swift::Int v39 = v12;
        int64_t v40 = v35;
        do
        {
          uint64_t result = *(v40 - 7);
          uint64_t v41 = (long long *)(v40 - 7);
          if (result == v37 && *(v40 - 6) == v38) {
            break;
          }
          uint64_t result = sub_100536780();
          if ((result & 1) == 0) {
            break;
          }
          if (!v9) {
            goto LABEL_156;
          }
          long long v44 = *v41;
          long long v43 = *(_OWORD *)(v40 - 5);
          *(v40 - 4) = *v40;
          v40 -= 4;
          uint64_t v37 = v40[1];
          uint64_t v38 = v40[2];
          uint64_t v45 = v40[3];
          v41[2] = v44;
          v41[3] = v43;
          *(v40 - 3) = v37;
          *(v40 - 2) = v38;
          *(v40 - 1) = v45;
          ++v39;
        }
        while (v8 != v39);
        ++v8;
        v35 += 4;
      }
      while (v8 != v34);
      Swift::Int v8 = v34;
    }
    goto LABEL_66;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
  return result;
}

uint64_t sub_100397AA8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 32 * a3 + 24;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 32 * v4);
    uint64_t v10 = *v9;
    uint64_t v11 = v9[1];
    uint64_t v12 = v6;
    int64_t v13 = (void *)v8;
    while (1)
    {
      uint64_t result = *(v13 - 7);
      uint64_t v14 = (long long *)(v13 - 7);
      BOOL v15 = result == v10 && *(v13 - 6) == v11;
      if (v15 || (uint64_t result = sub_100536780(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 32;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      long long v17 = *v14;
      long long v16 = *(_OWORD *)(v13 - 5);
      *(v13 - 4) = *v13;
      v13 -= 4;
      uint64_t v10 = v13[1];
      uint64_t v11 = v13[2];
      uint64_t v18 = v13[3];
      void v14[2] = v17;
      void v14[3] = v16;
      *(v13 - 3) = v10;
      *(v13 - 2) = v11;
      *(v13 - 1) = v18;
      if (v4 == ++v12) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100397B8C(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = __src - __dst + 31;
  if (__src - __dst >= 0) {
    int64_t v9 = __src - __dst;
  }
  uint64_t v10 = v9 >> 5;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 31;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 5;
  if (v10 >= v12 >> 5)
  {
    if (a4 != __src || &__src[32 * v13] <= a4) {
      memmove(a4, __src, 32 * v13);
    }
    uint64_t v14 = &v4[32 * v13];
    if (v7 >= v6 || v11 < 32) {
      goto LABEL_48;
    }
    uint64_t v18 = (char *)(a3 - 32);
    while (1)
    {
      Swift::Int v19 = v18 + 32;
      uint64_t v20 = v6 - 32;
      BOOL v21 = *((void *)v6 - 4) == *((void *)v14 - 4) && *((void *)v6 - 3) == *((void *)v14 - 3);
      if (v21 || (sub_100536780() & 1) == 0)
      {
        uint64_t v20 = v14 - 32;
        if (v19 != v14)
        {
          v14 -= 32;
LABEL_45:
          long long v23 = *((_OWORD *)v20 + 1);
          *(_OWORD *)uint64_t v18 = *(_OWORD *)v20;
          *((_OWORD *)v18 + 1) = v23;
          goto LABEL_46;
        }
        BOOL v22 = v18 >= v14;
        v14 -= 32;
        if (v22) {
          goto LABEL_45;
        }
      }
      else
      {
        if (v19 != v6)
        {
          v6 -= 32;
          goto LABEL_45;
        }
        BOOL v22 = v18 >= v6;
        v6 -= 32;
        if (v22) {
          goto LABEL_45;
        }
      }
LABEL_46:
      if (v6 > v7)
      {
        v18 -= 32;
        if (v14 > v4) {
          continue;
        }
      }
      goto LABEL_48;
    }
  }
  if (a4 != __dst || &__dst[32 * v10] <= a4) {
    memmove(a4, __dst, 32 * v10);
  }
  uint64_t v14 = &v4[32 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 32)
  {
    while (1)
    {
      BOOL v15 = *(void *)v4 == *(void *)v6 && *((void *)v4 + 1) == *((void *)v6 + 1);
      if (v15 || (sub_100536780() & 1) == 0) {
        break;
      }
      long long v16 = v6;
      BOOL v15 = v7 == v6;
      v6 += 32;
      if (!v15) {
        goto LABEL_20;
      }
LABEL_21:
      v7 += 32;
      if (v4 >= v14 || (unint64_t)v6 >= a3) {
        goto LABEL_23;
      }
    }
    long long v16 = v4;
    BOOL v15 = v7 == v4;
    v4 += 32;
    if (v15) {
      goto LABEL_21;
    }
LABEL_20:
    long long v17 = *((_OWORD *)v16 + 1);
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v16;
    *((_OWORD *)v7 + 1) = v17;
    goto LABEL_21;
  }
LABEL_23:
  uint64_t v6 = v7;
LABEL_48:
  if (v6 != v4 || v6 >= &v4[(v14 - v4 + (v14 - v4 < 0 ? 0x1FuLL : 0)) & 0xFFFFFFFFFFFFFFE0]) {
    memmove(v6, v4, 32 * ((v14 - v4) / 32));
  }
  return 1;
}

char *sub_100397DBC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_10066F8A8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_100397EB8(uint64_t a1)
{
  return sub_100397DBC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_100397ECC(uint64_t a1)
{
  return sub_1003A0AFC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

size_t sub_100397EE0(void *a1)
{
  return sub_1003A0BE8(0, a1[2], 0, a1);
}

void *sub_100397EF4(void *a1)
{
  return sub_1003A0DBC(0, a1[2], 0, a1);
}

uint64_t static NSUserDefaults.observe<A>(_:in:valueChanged:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v38 = a4;
  uint64_t v39 = a5;
  uint64_t v37 = a2;
  uint64_t v9 = *(void *)(a6 - 8);
  __chkstk_darwin(a1);
  int64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = _s20KeyValueRegistrationC10IdentifierVMa(0);
  uint64_t v13 = v12 - 8;
  uint64_t v34 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v34 + 64);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v35 = (uint64_t)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v36 = (uint64_t)&v34 - v17;
  __chkstk_darwin(v16);
  Swift::Int v19 = (char *)&v34 - v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, a6);
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_100534F50();
  uint64_t v22 = v21;
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  long long v23 = &v19[*(int *)(v13 + 28)];
  *(void *)long long v23 = v37;
  *((void *)v23 + 1) = a3;
  uint64_t v24 = (uint64_t *)&v19[*(int *)(v13 + 32)];
  *uint64_t v24 = v20;
  v24[1] = v22;
  if (qword_10066E398 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_10066F8B8;
  uint64_t v26 = *(void *)(qword_10066F8B8
                  + OBJC_IVAR____TtCE14MusicUtilitiesCSo14NSUserDefaultsP33_0EE8F48931DDE162065F15584D7CE3A39_Observer_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v26 + 16));
  uint64_t v27 = v40;
  sub_10039AC08(v25, (uint64_t)v19, v38, v39);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v26 + 16));
  if (v27)
  {
    sub_10039FA4C((uint64_t)v19, _s20KeyValueRegistrationC10IdentifierVMa);
  }
  else
  {
    uint64_t v28 = v36;
    sub_100355010((uint64_t)v19, v36);
    uint64_t v29 = v35;
    sub_10039FB20((uint64_t)v19, v35, _s20KeyValueRegistrationC10IdentifierVMa);
    unint64_t v30 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    uint64_t v31 = swift_allocObject();
    sub_10039FB20(v29, v31 + v30, _s20KeyValueRegistrationC10IdentifierVMa);
    type metadata accessor for NSUserDefaults.KeyValueRegistration(0);
    uint64_t v26 = swift_allocObject();
    sub_10039FB20(v28, v26 + OBJC_IVAR____TtCE14MusicUtilitiesCSo14NSUserDefaults20KeyValueRegistration_identifier, _s20KeyValueRegistrationC10IdentifierVMa);
    uint64_t v32 = (void (**)())(v26 + OBJC_IVAR____TtCE14MusicUtilitiesCSo14NSUserDefaults20KeyValueRegistration_onInvalidate);
    *uint64_t v32 = sub_1003551DC;
    v32[1] = (void (*)())v31;
  }
  return v26;
}

uint64_t sub_10039825C(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v26 = a1;
  uint64_t v4 = v3;
  uint64_t v23 = a3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  int64_t v24 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a3 + 48) + 24 * i);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    Swift::Int v19 = (void *)v16[2];
    uint64_t v20 = *(void *)(*(void *)(a3 + 56) + 8 * i);
    v25[0] = *v16;
    v25[1] = v17;
    v25[2] = v19;
    v25[3] = v20;
    swift_bridgeObjectRetain();
    id v21 = v19;
    swift_bridgeObjectRetain();
    char v22 = v26(v25);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      return v18;
    }
    if (v22)
    {
      swift_release();
      return v18;
    }
    swift_bridgeObjectRelease();

    uint64_t result = swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v10++, 1)) {
      break;
    }
    if (v10 >= v24) {
      goto LABEL_28;
    }
    unint64_t v14 = *(void *)(v23 + 8 * v10);
    if (!v14)
    {
      int64_t v15 = v10 + 1;
      if (v10 + 1 >= v24) {
        goto LABEL_28;
      }
      unint64_t v14 = *(void *)(v23 + 8 * v15);
      if (v14) {
        goto LABEL_16;
      }
      int64_t v15 = v10 + 2;
      if (v10 + 2 >= v24) {
        goto LABEL_28;
      }
      unint64_t v14 = *(void *)(v23 + 8 * v15);
      if (v14) {
        goto LABEL_16;
      }
      int64_t v15 = v10 + 3;
      if (v10 + 3 >= v24) {
        goto LABEL_28;
      }
      unint64_t v14 = *(void *)(v23 + 8 * v15);
      if (v14)
      {
LABEL_16:
        int64_t v10 = v15;
        goto LABEL_17;
      }
      int64_t v15 = v10 + 4;
      if (v10 + 4 < v24)
      {
        unint64_t v14 = *(void *)(v23 + 8 * v15);
        if (!v14)
        {
          while (1)
          {
            int64_t v10 = v15 + 1;
            if (__OFADD__(v15, 1)) {
              goto LABEL_31;
            }
            if (v10 >= v24) {
              goto LABEL_28;
            }
            unint64_t v14 = *(void *)(v23 + 8 * v10);
            ++v15;
            if (v14) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      swift_release();
      return 0;
    }
LABEL_17:
    unint64_t v8 = (v14 - 1) & v14;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t UserDefault.init(wrappedValue:defaults:key:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  *(void *)a5 = a2;
  uint64_t v9 = type metadata accessor for UserDefault();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(&a5[*(int *)(v9 + 44)], a3, a4);
  int64_t v10 = &a5[*(int *)(v9 + 48)];
  uint64_t v11 = sub_100535F20();
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);

  return v12(v10, a1, v11);
}

uint64_t UserDefault.init<A>(wrappedValue:defaults:key:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, char *a7@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v21 = a6;
  Swift::Int v19 = a7;
  __chkstk_darwin(a1);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100535F20();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v18 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v18 - v15, a1, v13);
  sub_100535070();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a5 - 8) + 8))(a3, a5);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
  return UserDefault.init(wrappedValue:defaults:key:)((uint64_t)v16, v20, (uint64_t)v12, a4, v19);
}

uint64_t UserDefault.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v20 = a2;
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = __chkstk_darwin(a1);
  unint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v19 = sub_100535F20();
  uint64_t v10 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v12 = (char *)&v19 - v11;
  NSUserDefaults.subscript.getter(v2 + *(int *)(a1 + 44), &v21);
  sub_10000BB04(&qword_10066EAC0);
  int v13 = swift_dynamicCast();
  uint64_t v14 = *(void *)(v9 - 8);
  uint64_t v15 = *(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56);
  v15(v12, v13 ^ 1u, 1, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v3, a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v9) == 1)
  {
    uint64_t v16 = v19;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v20, &v8[*(int *)(a1 + 48)], v19);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a1);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v16);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a1);
    uint64_t v18 = v20;
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v20, v12, v9);
    return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v15)(v18, 0, 1, v9);
  }
}

double NSUserDefaults.subscript.getter@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __chkstk_darwin(a1);
  (*(void (**)(char *))(v5 + 16))((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100534F50();
  NSString v6 = sub_100534CA0();
  swift_bridgeObjectRelease();
  id v7 = [v2 objectForKey:v6];

  if (v7)
  {
    sub_100536090();
    swift_unknownObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t UserDefault.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  sub_10039CA10(a1, a2);
  uint64_t v3 = sub_100535F20();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

uint64_t NSUserDefaults.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(a3 - 8);
  uint64_t v9 = __chkstk_darwin(a1);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10039CC40(v9, (uint64_t)&v16);
  if (v17)
  {
    sub_1001A20AC(&v16, &v18);
    sub_10000ECD4(&v18, v19);
    uint64_t v12 = sub_100536770();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a2, a3);
    sub_100534F50();
    NSString v13 = sub_100534CA0();
    swift_bridgeObjectRelease();
    [v4 setObject:v12 forKey:v13];
    swift_unknownObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, a3);
    sub_100356E50(a1);
    return sub_100013D48((uint64_t)&v18);
  }
  else
  {
    sub_100356E50((uint64_t)&v16);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a2, a3);
    sub_100534F50();
    NSString v15 = sub_100534CA0();
    swift_bridgeObjectRelease();
    [v4 removeObjectForKey:v15];

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, a3);
    return sub_100356E50(a1);
  }
}

{
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t vars8;

  sub_10039CCA8(a1);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8);

  return v5(a2, a3);
}

void (*UserDefault.wrappedValue.modify(void *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  *uint64_t v5 = a2;
  v5[1] = v2;
  uint64_t v6 = sub_100535F20();
  uint64_t v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  void v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v5[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v5[5] = v9;
  UserDefault.wrappedValue.getter(a2, (uint64_t)v9);
  return sub_100398EB8;
}

void sub_100398EB8(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[4];
  uint64_t v4 = (void *)(*a1)[5];
  uint64_t v5 = (*a1)[2];
  uint64_t v6 = (*a1)[3];
  uint64_t v7 = **a1;
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    sub_10039CA10((uint64_t)v3, v7);
    size_t v8 = *(void (**)(void *, uint64_t))(v6 + 8);
    v8(v3, v5);
    v8(v4, v5);
  }
  else
  {
    sub_10039CA10((*a1)[5], v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);

  free(v2);
}

uint64_t UserDefault.defaultValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 48);
  uint64_t v5 = sub_100535F20();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

void NSUserDefaults.Suite.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_100536960(1uLL);
    sub_100534DD0();
  }
  else
  {
    sub_100536960(0);
  }
}

uint64_t static NSUserDefaults.Suite.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2) {
    return a4 == 0;
  }
  if (!a4) {
    return 0;
  }
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  return sub_100536780();
}

Swift::Int NSUserDefaults.Suite.hashValue.getter(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100536960(1uLL);
    sub_100534DD0();
  }
  else
  {
    sub_100536960(0);
  }
  return sub_1005369A0();
}

Swift::Int sub_10039913C()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_100536950();
  if (v1)
  {
    sub_100536960(1uLL);
    sub_100534DD0();
  }
  else
  {
    sub_100536960(0);
  }
  return sub_1005369A0();
}

void sub_1003991AC()
{
  if (*(void *)(v0 + 8))
  {
    sub_100536960(1uLL);
    sub_100534DD0();
  }
  else
  {
    sub_100536960(0);
  }
}

Swift::Int sub_100399224()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_100536950();
  if (v1)
  {
    sub_100536960(1uLL);
    sub_100534DD0();
  }
  else
  {
    sub_100536960(0);
  }
  return sub_1005369A0();
}

uint64_t sub_100399290(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (!v3) {
    return v4 == 0;
  }
  if (!v4) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v4) {
    return 1;
  }
  else {
    return sub_100536780();
  }
}

id NSUserDefaults.init(suite:)(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithSuiteName:0];
  }
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v3 = sub_100534CA0();
  id v4 = [v2 initWithSuiteName:v3];

  swift_bridgeObjectRelease();
  if (v4) {

  }
  return v4;
}

void (*NSUserDefaults.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t *a1, char a2)
{
  uint64_t v9 = malloc(0x70uLL);
  *a1 = v9;
  v9[9] = a4;
  v9[10] = v4;
  _DWORD v9[8] = a3;
  uint64_t v10 = *(void *)(a3 - 8);
  uint64_t v11 = v10;
  v9[11] = v10;
  size_t v12 = *(void *)(v10 + 64);
  v9[12] = malloc(v12);
  v9[13] = malloc(v12);
  (*(void (**)(void))(v11 + 16))();
  NSUserDefaults.subscript.getter(a2, v9);
  return sub_100399490;
}

void sub_100399490(uint64_t *a1, char a2)
{
  id v2 = (uint64_t *)*a1;
  uint64_t v4 = *(void **)(*a1 + 96);
  NSString v3 = *(void **)(*a1 + 104);
  if (a2)
  {
    uint64_t v5 = v2[11];
    uint64_t v6 = v2[8];
    sub_10039CC40(*a1, (uint64_t)(v2 + 4));
    (*(void (**)(void *, void *, uint64_t))(v5 + 32))(v4, v3, v6);
    NSUserDefaults.subscript.setter((uint64_t)(v2 + 4), (uint64_t)v4, v6);
    sub_100356E50((uint64_t)v2);
  }
  else
  {
    NSUserDefaults.subscript.setter(*a1, v2[13], v2[8]);
  }
  free(v3);
  free(v4);

  free(v2);
}

uint64_t NSUserDefaults.subscript.getter@<X0>(_OWORD *a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v5 = (char *)&v8 - v4;
  sub_100535070();
  double v6 = NSUserDefaults.subscript.getter((uint64_t)v5, a1);
  return (*(uint64_t (**)(char *, uint64_t, double))(v3 + 8))(v5, AssociatedTypeWitness, v6);
}

void (*NSUserDefaults.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t *a1, char a2)
{
  uint64_t v10 = malloc(0x70uLL);
  *a1 = v10;
  v10[10] = a5;
  v10[11] = v5;
  v10[8] = a3;
  v10[9] = a4;
  uint64_t v11 = *(void *)(a3 - 8);
  uint64_t v12 = v11;
  v10[12] = v11;
  v10[13] = malloc(*(void *)(v11 + 64));
  (*(void (**)(void))(v12 + 16))();
  NSUserDefaults.subscript.getter(v10);
  return sub_1003997EC;
}

void sub_1003997EC(uint64_t *a1, char a2)
{
  id v2 = (void *)*a1;
  if (a2)
  {
    uint64_t v4 = v2[12];
    uint64_t v3 = (void *)v2[13];
    uint64_t v5 = v2[8];
    sub_10039CC40(*a1, (uint64_t)(v2 + 4));
    sub_10039CCA8((uint64_t)(v2 + 4));
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
    sub_100356E50((uint64_t)v2);
  }
  else
  {
    uint64_t v6 = v2[12];
    uint64_t v3 = (void *)v2[13];
    uint64_t v7 = v2[8];
    sub_10039CCA8(*a1);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v3, v7);
  }
  free(v3);

  free(v2);
}

uint64_t NSUserDefaults.Migrator.init(userDefaults:key:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  uint64_t v6 = (char *)a4 + *(int *)(type metadata accessor for NSUserDefaults.Migrator() + 44);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);

  return v7(v6, a2, a3);
}

uint64_t NSUserDefaults.Migrator.init<A>(userDefaults:key:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, char *a5@<X8>)
{
  uint64_t v10 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100535070();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(a2, a4);
  *(void *)a5 = a1;
  uint64_t v13 = type metadata accessor for NSUserDefaults.Migrator();
  return (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(&a5[*(int *)(v13 + 44)], v12, a3);
}

uint64_t NSUserDefaults.Migrator.migrateValue<A, B>(to:valueTransformer:destination:)@<X0>(uint64_t a1@<X0>, void (*a2)(char *)@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v8 = v7;
  uint64_t v51 = a6;
  BOOL v61 = a4;
  uint64_t v66 = a3;
  uint64_t v67 = a2;
  uint64_t v57 = a1;
  uint64_t v52 = a7;
  uint64_t v63 = a5;
  uint64_t v55 = *(void *)(a5 - 8);
  uint64_t v9 = __chkstk_darwin(a1);
  uint64_t v62 = (uint64_t)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = v11;
  uint64_t v12 = v11 - 8;
  uint64_t v64 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v9);
  uint64_t v53 = (id *)((char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void *)(v12 + 24);
  uint64_t v65 = *(void *)(v15 - 8);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = v18;
  uint64_t v59 = sub_100535F20();
  uint64_t v58 = *(void *)(v59 - 8);
  uint64_t v19 = __chkstk_darwin(v59);
  char v54 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v74 = (char *)&v51 - v21;
  uint64_t v22 = *(void *)(v12 + 32);
  uint64_t v23 = sub_100535F20();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v69 = v23;
  uint64_t v70 = v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v51 - v25;
  uint64_t v27 = v7 + *(int *)(v12 + 52);
  NSUserDefaults.subscript.getter(v27, v73);
  sub_10039CC40((uint64_t)v73, (uint64_t)&v71);
  sub_10000BB04(&qword_10066EAC0);
  int v28 = swift_dynamicCast();
  uint64_t v29 = *(void *)(v22 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, v28 ^ 1u, 1, v22);
  sub_10039CC40((uint64_t)v73, (uint64_t)&v71);
  uint64_t v30 = *((void *)&v72 + 1);
  sub_100356E50((uint64_t)&v71);
  if (v30 && (*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v22) == 1)
  {
    _s8MigratorV5ErrorOMa();
    swift_getWitnessTable();
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 16))(v31, v27, v15);
    swift_willThrow();
LABEL_5:
    sub_100356E50((uint64_t)v73);
    return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v26, v69);
  }
  id v32 = v68;
  v67(v26);
  if (v32) {
    goto LABEL_5;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v17, v27, v15);
  long long v71 = 0u;
  long long v72 = 0u;
  NSUserDefaults.subscript.setter((uint64_t)&v71, (uint64_t)v17, v15);
  uint64_t v34 = v53;
  uint64_t v35 = v56;
  (*(void (**)(id *, uint64_t, uint64_t))(v64 + 16))(v53, v8, v56);
  uint64_t v36 = v61;
  if (v61)
  {
    id v68 = v61;
  }
  else
  {
    id v37 = *v34;
    uint64_t v36 = v61;
    id v68 = v37;
  }
  uint64_t v38 = v62;
  uint64_t v39 = v63;
  uint64_t v40 = v58;
  uint64_t v41 = *(void (**)(id *, uint64_t))(v64 + 8);
  id v42 = v36;
  v41(v34, v35);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v38, v57, v39);
  long long v43 = v54;
  uint64_t v44 = v59;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v54, v74, v59);
  uint64_t v45 = v60;
  uint64_t v46 = *(void *)(v60 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v43, 1, v60) == 1)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v43, v44);
    long long v71 = 0u;
    long long v72 = 0u;
  }
  else
  {
    *((void *)&v72 + 1) = v45;
    unint64_t v47 = sub_1000FF040((uint64_t *)&v71);
    (*(void (**)(uint64_t *, char *, uint64_t))(v46 + 32))(v47, v43, v45);
  }
  uint64_t v48 = v52;
  uint64_t v49 = v68;
  uint64_t v50 = v69;
  NSUserDefaults.subscript.setter((uint64_t)&v71, v62, v63);

  sub_100356E50((uint64_t)v73);
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v48, v74, v44);
  return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v26, v50);
}

uint64_t NSUserDefaults.Migrator.migrateValue<A, B>(to:valueTransformer:destination:)@<X0>(void (*a1)(char *)@<X1>, uint64_t a2@<X2>, void *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>, uint64_t a7)
{
  uint64_t v19 = a5;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  uint64_t v16 = a7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v13 = (char *)&v15 - v12;
  sub_100535070();
  NSUserDefaults.Migrator.migrateValue<A, B>(to:valueTransformer:destination:)((uint64_t)v13, a1, a2, v17, AssociatedTypeWitness, v16, a6);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
}

uint64_t NSUserDefaults.Migrator.migrateValue<A>(to:destination:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = *(void *)(a3 + 24);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  NSUserDefaults.Migrator.migrateValue<A, B>(to:valueTransformer:destination:)(a1, (void (*)(char *))sub_10035291C, v12, a2, a4, a5, a6);
  return swift_release();
}

uint64_t (*static NSUserDefaults.ValueTransformer<>.identity.getter(uint64_t a1))@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(swift_allocObject() + 16) = a1;
  return sub_10035291C;
}

uint64_t NSUserDefaults.Migrator.migrateValue<A>(to:destination:)@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v12 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v10 = (char *)&v12 - v9;
  sub_100535070();
  NSUserDefaults.Migrator.migrateValue<A>(to:destination:)((uint64_t)v10, a1, a2, AssociatedTypeWitness, v12, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
}

uint64_t NSUserDefaults.migrateValue<A, B>(for:to:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v18 = a5;
  uint64_t v19 = a2;
  uint64_t v9 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for NSUserDefaults.Migrator();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, a3);
  *(void *)uint64_t v15 = v5;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v15[*(int *)(v12 + 44)], v11, a3);
  id v16 = v5;
  NSUserDefaults.Migrator.migrateValue<A>(to:destination:)(a1, v19, v12, a3, a4, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t NSUserDefaults.migrateValue<A, B>(for:to:)@<X0>(void *a1@<X1>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  uint64_t v10 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v8 = (char *)&v10 - v7;
  sub_100535070();
  NSUserDefaults.migrateValue<A, B>(for:to:)((uint64_t)v8, a1, AssociatedTypeWitness, v10, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
}

Swift::Void __swiftcall NSUserDefaults.KeyValueRegistration.invalidate()()
{
  (*(void (**)(void))(v0 + OBJC_IVAR____TtCE14MusicUtilitiesCSo14NSUserDefaults20KeyValueRegistration_onInvalidate))();
}

uint64_t NSUserDefaults.KeyValueRegistration.deinit()
{
  (*(void (**)(void))(v0 + OBJC_IVAR____TtCE14MusicUtilitiesCSo14NSUserDefaults20KeyValueRegistration_onInvalidate))();
  sub_10039FA4C(v0 + OBJC_IVAR____TtCE14MusicUtilitiesCSo14NSUserDefaults20KeyValueRegistration_identifier, _s20KeyValueRegistrationC10IdentifierVMa);
  swift_release();
  return v0;
}

uint64_t NSUserDefaults.KeyValueRegistration.__deallocating_deinit()
{
  (*(void (**)(void))(v0 + OBJC_IVAR____TtCE14MusicUtilitiesCSo14NSUserDefaults20KeyValueRegistration_onInvalidate))();
  sub_10039FA4C(v0 + OBJC_IVAR____TtCE14MusicUtilitiesCSo14NSUserDefaults20KeyValueRegistration_identifier, _s20KeyValueRegistrationC10IdentifierVMa);
  swift_release();

  return swift_deallocClassInstance();
}

void sub_10039A944(uint64_t a1)
{
  if (qword_10066E398 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_10066F8B8;
  uint64_t v3 = *(void *)(qword_10066F8B8
                 + OBJC_IVAR____TtCE14MusicUtilitiesCSo14NSUserDefaultsP33_0EE8F48931DDE162065F15584D7CE3A39_Observer_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v3 + 16));
  sub_10039B2F4(v2, a1);
  uint64_t v4 = *(os_unfair_lock_s **)(v3 + 16);

  os_unfair_lock_unlock(v4);
}

uint64_t static NSUserDefaults.observe<A>(_:in:valueChanged:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v17[0] = a5;
  v17[1] = a8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v14 = (char *)v17 - v13;
  sub_100535070();
  uint64_t v15 = static NSUserDefaults.observe<A>(_:in:valueChanged:)((uint64_t)v14, a2, a3, a4, v17[0], AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, AssociatedTypeWitness);
  return v15;
}

id sub_10039AB2C()
{
  id result = [objc_allocWithZone((Class)_s9_ObserverCMa()) init];
  qword_10066F8B8 = (uint64_t)result;
  return result;
}

uint64_t sub_10039AC08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v59 = a3;
  uint64_t v60 = a4;
  uint64_t v58 = _s9_ObserverC18HandlerAssociationVMa(0);
  uint64_t v61 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = a1;
  uint64_t v9 = (uint64_t *)(a1
                 + OBJC_IVAR____TtCE14MusicUtilitiesCSo14NSUserDefaultsP33_0EE8F48931DDE162065F15584D7CE3A39_Observer_registeredSuites);
  swift_beginAccess();
  uint64_t v10 = *v9;
  uint64_t v63 = a2;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_10039825C((uint64_t (*)(void *))sub_10039FAAC, (uint64_t)v62, v10);
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  if (v15)
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = v11;
  }
  else
  {
    sub_100123DA4(0, &qword_10066FD08);
    uint64_t v17 = (uint64_t *)(a2 + *(int *)(_s20KeyValueRegistrationC10IdentifierVMa(0) + 20));
    uint64_t v16 = *v17;
    uint64_t v13 = v17[1];
    swift_bridgeObjectRetain();
    id v18 = NSUserDefaults.init(suite:)(v16, v13);
    if (!v18)
    {
      sub_10039FACC();
      swift_allocError();
      *uint64_t v36 = v16;
      v36[1] = v13;
      swift_bridgeObjectRetain();
      return swift_willThrow();
    }
    uint64_t v15 = v18;
    swift_bridgeObjectRetain();
  }
  uint64_t v19 = *v9;
  uint64_t v20 = *(void *)(*v9 + 16);
  uint64_t v57 = v4;
  if (v20)
  {
    swift_bridgeObjectRetain();
    id v21 = v15;
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_100368064(v16, v13, (uint64_t)v21);
    if (v23)
    {
      unint64_t v55 = *(void *)(*(void *)(v19 + 56) + 8 * v22);
      swift_bridgeObjectRetain();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v55 = sub_100351304((uint64_t)_swiftEmptyArrayStorage);
LABEL_10:
  uint64_t v24 = *v9;
  if (!*(void *)(*v9 + 16))
  {
LABEL_20:
    uint64_t v35 = _swiftEmptyArrayStorage;
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  id v25 = v15;
  swift_bridgeObjectRetain();
  unint64_t v26 = sub_100368064(v16, v13, (uint64_t)v25);
  if ((v27 & 1) == 0)
  {

    swift_bridgeObjectRelease();
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  uint64_t v28 = *(void *)(*(void *)(v24 + 56) + 8 * v26);
  swift_bridgeObjectRetain();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v29 = _s20KeyValueRegistrationC10IdentifierVMa(0);
  if (!*(void *)(v28 + 16)) {
    goto LABEL_19;
  }
  uint64_t v30 = (uint64_t *)(a2 + *(int *)(v29 + 24));
  uint64_t v31 = *v30;
  uint64_t v32 = v30[1];
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_100367E3C(v31, v32);
  if ((v34 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v35 = *(void **)(*(void *)(v28 + 56) + 8 * v33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_21:
  uint64_t v38 = v35[2];
  uint64_t v56 = v16;
  if (!v38)
  {
    _s20KeyValueRegistrationC10IdentifierVMa(0);
    id v39 = v15;
    NSString v40 = sub_100534CA0();
    [v39 addObserver:v54 forKeyPath:v40 options:0 context:0];
  }
  uint64_t v41 = sub_10052F780();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v8, a2, v41);
  id v42 = &v8[*(int *)(v58 + 20)];
  uint64_t v43 = v60;
  *(void *)id v42 = v59;
  *((void *)v42 + 1) = v43;
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v35 = (void *)sub_10035E8E4(0, v35[2] + 1, 1, v35);
  }
  unint64_t v45 = v35[2];
  unint64_t v44 = v35[3];
  if (v45 >= v44 >> 1) {
    uint64_t v35 = (void *)sub_10035E8E4(v44 > 1, v45 + 1, 1, v35);
  }
  v35[2] = v45 + 1;
  sub_10039FB20((uint64_t)v8, (uint64_t)v35+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(void *)(v61 + 72) * v45, _s9_ObserverC18HandlerAssociationVMa);
  uint64_t v46 = (uint64_t *)(a2 + *(int *)(_s20KeyValueRegistrationC10IdentifierVMa(0) + 24));
  uint64_t v47 = *v46;
  uint64_t v48 = v46[1];
  swift_bridgeObjectRetain();
  unint64_t v49 = v55;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v64 = v49;
  sub_100382790((uint64_t)v35, v47, v48, isUniquelyReferenced_nonNull_native);
  uint64_t v51 = v64;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  id v52 = v15;
  char v53 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v65 = *v9;
  uint64_t *v9 = 0x8000000000000000;
  sub_1003825F4(v51, v56, v13, v52, v53);
  uint64_t *v9 = v65;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();

  return swift_bridgeObjectRelease();
}

uint64_t _s20KeyValueRegistrationC10IdentifierVMa(uint64_t a1)
{
  return sub_1000136E8(a1, qword_10066FCC0);
}

uint64_t sub_10039B1B8()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(_s20KeyValueRegistrationC10IdentifierVMa(0) - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  uint64_t v3 = sub_10052F780();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t type metadata accessor for NSUserDefaults.KeyValueRegistration(uint64_t a1)
{
  return sub_1000136E8(a1, qword_10066FA90);
}

uint64_t type metadata accessor for UserDefault()
{
  return sub_100086CCC();
}

uint64_t sub_10039B2F4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = _s9_ObserverC18HandlerAssociationVMa(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t *)(a1
                 + OBJC_IVAR____TtCE14MusicUtilitiesCSo14NSUserDefaultsP33_0EE8F48931DDE162065F15584D7CE3A39_Observer_registeredSuites);
  swift_beginAccess();
  uint64_t v10 = *v9;
  uint64_t v49 = a2;
  swift_bridgeObjectRetain();
  uint64_t v47 = (void (*)(unsigned char *, void))sub_10039825C((uint64_t (*)(void *))sub_10039FB98, (uint64_t)v48, v10);
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v17 = v2;
  uint64_t result = swift_bridgeObjectRelease();
  if (v14)
  {
    uint64_t v19 = _s20KeyValueRegistrationC10IdentifierVMa(0);
    if (*(void *)(v16 + 16))
    {
      uint64_t v46 = a1;
      uint64_t v20 = (uint64_t *)(a2 + *(int *)(v19 + 24));
      uint64_t v21 = *v20;
      uint64_t v22 = v20[1];
      unint64_t v45 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_100367E3C(v21, v22);
      if (v24)
      {
        uint64_t v44 = v12;
        uint64_t v25 = *(void *)(*(void *)(v16 + 56) + 8 * v23);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v53 = v25;
        uint64_t v26 = *(void *)(v25 + 16);
        if (v26)
        {
          v43[1] = v17;
          unint64_t v27 = v25 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
          uint64_t v28 = *(void *)(v6 + 72);
          swift_bridgeObjectRetain();
          unint64_t v29 = 0;
          while ((sub_10052F760() & 1) == 0)
          {
            ++v29;
            v27 += v28;
            if (v26 == v29)
            {

              swift_bridgeObjectRelease_n();
              goto LABEL_11;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v30 = v44;
          swift_bridgeObjectRetain();
          id v31 = v14;
          sub_10038D41C(v29, (uint64_t)v8);
          sub_10039FA4C((uint64_t)v8, _s9_ObserverC18HandlerAssociationVMa);
          uint64_t v32 = v53;
          if (!*(void *)(v53 + 16))
          {
            id v33 = v31;
            NSString v34 = sub_100534CA0();
            [v33 removeObserver:v46 forKeyPath:v34];
          }
          swift_bridgeObjectRetain();
          id v35 = v31;
          uint64_t v36 = sub_10039BCD4();
          uint64_t v38 = sub_100379DB4(v51, (uint64_t)v47, v30, v35);
          if (*v37)
          {
            id v39 = v37;
            uint64_t v47 = (void (*)(unsigned char *, void))v36;
            uint64_t v41 = *v45;
            uint64_t v40 = v45[1];
            swift_bridgeObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v50 = *v39;
            uint64_t *v39 = 0x8000000000000000;
            sub_100382790(v32, v41, v40, isUniquelyReferenced_nonNull_native);
            uint64_t *v39 = v50;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            ((void (*)(void *, void))v38)(v51, 0);

            swift_bridgeObjectRelease();
            v47(v52, 0);
          }
          else
          {
            swift_bridgeObjectRelease();
            ((void (*)(void *, void))v38)(v51, 0);

            swift_bridgeObjectRelease();
            ((void (*)(unsigned char *, void))v36)(v52, 0);
          }

          swift_bridgeObjectRelease_n();
          return swift_bridgeObjectRelease();
        }

        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
    }
LABEL_11:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

BOOL sub_10039B720(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = (void *)(a2 + *(int *)(_s20KeyValueRegistrationC10IdentifierVMa(0) + 20));
  uint64_t v5 = v4[1];
  if (!v3) {
    return v5 == 0;
  }
  if (!v5) {
    return 0;
  }
  if (v2 == *v4 && v3 == v5) {
    return 1;
  }
  else {
    return sub_100536780() & 1;
  }
}

void sub_10039B7B0(uint64_t a1, void *a2, uint64_t a3, Class isa, uint64_t a5)
{
  NSString v9 = a2;
  uint64_t v35 = a1;
  if (!a2)
  {
LABEL_9:
    sub_10039CC40(a3, (uint64_t)&v38);
    uint64_t v20 = *((void *)&v39 + 1);
    if (*((void *)&v39 + 1))
    {
      uint64_t v21 = sub_10000ECD4(&v38, *((uint64_t *)&v39 + 1));
      uint64_t v22 = *(void *)(v20 - 8);
      __chkstk_darwin(v21);
      char v24 = (char *)&v34 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v22 + 16))(v24);
      uint64_t v25 = sub_100536770();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v20);
      sub_100013D48((uint64_t)&v38);
      if (!isa)
      {
LABEL_12:
        uint64_t v26 = (objc_class *)_s9_ObserverCMa();
        v37.receiver = v5;
        v37.super_class = v26;
        [super observeValueForKeyPath:v9 ofObject:v25 change:isa context:a5];

        swift_unknownObjectRelease();
LABEL_13:

        return;
      }
    }
    else
    {
      uint64_t v25 = 0;
      if (!isa) {
        goto LABEL_12;
      }
    }
    type metadata accessor for NSKeyValueChangeKey(0);
    sub_10039F9F4();
    Class isa = sub_100534A90().super.isa;
    goto LABEL_12;
  }
  sub_10039CC40(a3, (uint64_t)&v38);
  if (!*((void *)&v39 + 1))
  {
    sub_100356E50((uint64_t)&v38);
    goto LABEL_8;
  }
  sub_100123DA4(0, &qword_10066FD08);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    NSString v9 = sub_100534CA0();
    goto LABEL_9;
  }
  uint64_t v10 = *(void *)&v5[OBJC_IVAR____TtCE14MusicUtilitiesCSo14NSUserDefaultsP33_0EE8F48931DDE162065F15584D7CE3A39_Observer_lock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v10 + 16));
  swift_beginAccess();
  Class isa = (Class)v36;
  uint64_t v11 = swift_bridgeObjectRetain();
  sub_10039C69C(v11, isa);
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();

  if (!v13) {
    goto LABEL_16;
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10039C838(v15, v35, (uint64_t)v9);
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v17) {
    swift_bridgeObjectRelease();
  }
  else {
LABEL_16:
  }
    uint64_t v19 = _swiftEmptyArrayStorage;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
  uint64_t v27 = v19[2];
  if (!v27)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v28 = _s9_ObserverC18HandlerAssociationVMa(0);
  unint64_t v29 = (char *)v19
      + ((*(unsigned __int8 *)(*(void *)(v28 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v28 - 8) + 80));
  uint64_t v30 = *(void *)(*(void *)(v28 - 8) + 72);
  NSString v34 = v19;
  swift_bridgeObjectRetain();
  do
  {
    id v31 = *(void (**)(long long *))&v29[*(int *)(v28 + 20)];
    NSString v32 = sub_100534CA0();
    id v33 = -[objc_class valueForKey:](isa, "valueForKey:", v32, v34);

    if (v33)
    {
      sub_100536090();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v38 = 0u;
      long long v39 = 0u;
    }
    v31(&v38);
    sub_100356E50((uint64_t)&v38);
    v29 += v30;
    --v27;
  }
  while (v27);

  swift_bridgeObjectRelease_n();
}

uint64_t (*sub_10039BCD4())()
{
  return j__swift_endAccess;
}

Swift::Int sub_10039BD30()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_100536950();
  if (v1)
  {
    sub_100536960(1uLL);
    swift_bridgeObjectRetain();
    sub_100534DD0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100536960(0);
  }
  return sub_1005369A0();
}

void sub_10039BDB0()
{
  if (*(void *)(v0 + 8))
  {
    sub_100536960(1uLL);
    swift_bridgeObjectRetain();
    sub_100534DD0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100536960(0);
  }
}

Swift::Int sub_10039BE38()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_100536950();
  if (v1)
  {
    sub_100536960(1uLL);
    swift_bridgeObjectRetain();
    sub_100534DD0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100536960(0);
  }
  return sub_1005369A0();
}

uint64_t sub_10039BEB4(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      BOOL v5 = *a1 == *a2 && v3 == v4;
      if (v5 || (sub_100536780() & 1) != 0) {
        goto LABEL_8;
      }
    }
  }
  else if (!v4)
  {
LABEL_8:
    sub_100123DA4(0, (unint64_t *)&unk_10066F7B0);
    return sub_100535D90() & 1;
  }
  return 0;
}

id sub_10039BF40()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s9_ObserverCMa();
  return [super dealloc];
}

uint64_t NSUserDefaults.encodeValue(_:forKey:)(void *a1)
{
  objc_super v2 = v1;
  sub_10000ECD4(a1, a1[3]);
  sub_10052EE90();
  swift_allocObject();
  sub_10052EE80();
  uint64_t v3 = sub_10052EE70();
  unint64_t v5 = v4;
  swift_release();
  Class isa = sub_10052F3C0().super.isa;
  NSString v7 = sub_100534CA0();
  [v2 setValue:isa forKey:v7];

  return sub_10004A100(v3, v5);
}

uint64_t NSUserDefaults.decodeValue<A>(_:forKey:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  NSString v5 = sub_100534CA0();
  id v6 = [v2 valueForKey:v5];

  if (v6)
  {
    sub_100536090();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  sub_100356DE8((uint64_t)v11, (uint64_t)v12);
  if (!v12[3])
  {
    sub_100356E50((uint64_t)v12);
    goto LABEL_8;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    uint64_t v7 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, v7, 1, a1);
  }
  sub_10052EE60();
  swift_allocObject();
  sub_10052EE50();
  sub_10052EE40();
  sub_10004A100(v9, v10);
  swift_release();
  uint64_t v7 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, v7, 1, a1);
}

uint64_t sub_10039C5E0()
{
  uint64_t v0 = sub_100530920();
  sub_10000ED18(v0, qword_10066F8C0);
  sub_10000EA90(v0, (uint64_t)qword_10066F8C0);
  return sub_100530910();
}

uint64_t sub_10039C660(void (*a1)(void))
{
  a1();

  return sub_100536A30();
}

uint64_t sub_10039C69C(uint64_t result, void *a2)
{
  int64_t v3 = 0;
  uint64_t v4 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      break;
    }
    if (v12 >= v8) {
      return 0;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v12);
    ++v3;
    if (!v13)
    {
      int64_t v3 = v12 + 1;
      if (v12 + 1 >= v8) {
        return 0;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v3);
      if (!v13)
      {
        int64_t v3 = v12 + 2;
        if (v12 + 2 >= v8) {
          return 0;
        }
        unint64_t v13 = *(void *)(v4 + 8 * v3);
        if (!v13)
        {
          int64_t v3 = v12 + 3;
          if (v12 + 3 >= v8) {
            return 0;
          }
          unint64_t v13 = *(void *)(v4 + 8 * v3);
          if (!v13)
          {
            int64_t v14 = v12 + 4;
            if (v14 >= v8) {
              return 0;
            }
            unint64_t v13 = *(void *)(v4 + 8 * v14);
            if (!v13)
            {
              while (1)
              {
                int64_t v3 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  goto LABEL_27;
                }
                if (v3 >= v8) {
                  return 0;
                }
                unint64_t v13 = *(void *)(v4 + 8 * v3);
                ++v14;
                if (v13) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v3 = v14;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = *(void *)(result + 48);
    if (*(void **)(v11 + 24 * v10 + 16) == a2)
    {
      uint64_t v15 = *(void *)(v11 + 24 * v10);
      swift_bridgeObjectRetain();
      id v16 = a2;
      swift_bridgeObjectRetain();
      return v15;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_10039C838(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = result;
  int64_t v6 = 0;
  uint64_t v7 = result + 64;
  uint64_t v8 = 1 << *(unsigned char *)(result + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(result + 64);
  int64_t v19 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v6 << 6);
      goto LABEL_22;
    }
    int64_t v13 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v13 >= v19) {
      return 0;
    }
    unint64_t v14 = *(void *)(v7 + 8 * v13);
    ++v6;
    if (!v14)
    {
      int64_t v6 = v13 + 1;
      if (v13 + 1 >= v19) {
        return 0;
      }
      unint64_t v14 = *(void *)(v7 + 8 * v6);
      if (!v14)
      {
        int64_t v6 = v13 + 2;
        if (v13 + 2 >= v19) {
          return 0;
        }
        unint64_t v14 = *(void *)(v7 + 8 * v6);
        if (!v14)
        {
          int64_t v6 = v13 + 3;
          if (v13 + 3 >= v19) {
            return 0;
          }
          unint64_t v14 = *(void *)(v7 + 8 * v6);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v10 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v6 << 6);
LABEL_22:
    id v16 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v12);
    uint64_t v17 = *v16;
    if (*v16 == a2 && v16[1] == a3)
    {
      uint64_t v17 = a2;
LABEL_29:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return v17;
    }
    uint64_t result = sub_100536780();
    if (result) {
      goto LABEL_29;
    }
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v19) {
    return 0;
  }
  unint64_t v14 = *(void *)(v7 + 8 * v15);
  if (v14)
  {
    int64_t v6 = v15;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v6 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v6 >= v19) {
      return 0;
    }
    unint64_t v14 = *(void *)(v7 + 8 * v6);
    ++v15;
    if (v14) {
      goto LABEL_21;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_10039CA10(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = sub_100535F20();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  unint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = *(void *)(a2 + 16);
  __chkstk_darwin(v8);
  int64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v13, v2 + *(int *)(a2 + 44), v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
  uint64_t v15 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    long long v18 = 0u;
    long long v19 = 0u;
  }
  else
  {
    *((void *)&v19 + 1) = v5;
    id v16 = sub_1000FF040((uint64_t *)&v18);
    (*(void (**)(uint64_t *, char *, uint64_t))(v15 + 32))(v16, v10, v5);
  }
  return NSUserDefaults.subscript.setter((uint64_t)&v18, (uint64_t)v13, v11);
}

uint64_t sub_10039CC40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000BB04(&qword_10066EAC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10039CCA8(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v4 = &v6[-v3];
  sub_100535070();
  sub_10039CC40(a1, (uint64_t)v6);
  NSUserDefaults.subscript.setter((uint64_t)v6, (uint64_t)v4, AssociatedTypeWitness);
  return sub_100356E50(a1);
}

uint64_t type metadata accessor for NSUserDefaults.Migrator()
{
  return sub_100086CCC();
}

uint64_t _s8MigratorV5ErrorOMa()
{
  return sub_100086CCC();
}

uint64_t sub_10039CDC4()
{
  return swift_deallocObject();
}

unint64_t sub_10039CDD8()
{
  unint64_t result = qword_10066F8E0[0];
  if (!qword_10066F8E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10066F8E0);
  }
  return result;
}

uint64_t sub_10039CE2C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_100535F20();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void **sub_10039CF0C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(v4 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v8 + v10;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v12 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  else {
    size_t v12 = *(void *)(*(void *)(v4 - 8) + 64) + 1;
  }
  int v13 = (*(_DWORD *)(v9 + 80) | *(_DWORD *)(v6 + 80)) & 0x100000;
  uint64_t v14 = (char *)*a2;
  *a1 = *a2;
  if ((v10 | v7) > 7 || v13 != 0 || v12 + ((v8 + v10 + ((v7 + 8) & ~v7)) & ~v10) > 0x18)
  {
    uint64_t v17 = &v14[((v10 | v7) & 0xF8 ^ 0x1F8) & ((v10 | v7) + 16)];
    swift_retain();
  }
  else
  {
    uint64_t v18 = ~v10;
    uint64_t v25 = a1;
    uint64_t v19 = ((unint64_t)a1 + v7 + 8) & ~v7;
    uint64_t v20 = ((unint64_t)a2 + v7 + 8) & ~v7;
    uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    uint64_t v22 = v14;
    v21(v19, v20, v5);
    uint64_t v23 = (void *)((v19 + v11) & v18);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))((v20 + v11) & v18, 1, v4))
    {
      memcpy(v23, (const void *)((v20 + v11) & v18), v12);
    }
    else
    {
      (*(void (**)(void *, uint64_t, uint64_t))(v9 + 16))(v23, (v20 + v11) & v18, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v23, 0, 1, v4);
    }
    return v25;
  }
  return (void **)v17;
}

uint64_t sub_10039D124(id *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = ((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (v6 + *(void *)(v5 + 56) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = v8;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7);
  if (!result)
  {
    uint64_t v11 = *(uint64_t (**)(unint64_t, uint64_t))(v12 + 8);
    return v11(v9, v7);
  }
  return result;
}

void **sub_10039D248(void **a1, void **a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  *a1 = *a2;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  uint64_t v9 = v7 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = ((unint64_t)a1 + v10 + 8) & ~v10;
  uint64_t v12 = ((unint64_t)a2 + v10 + 8) & ~v10;
  id v13 = v5;
  v8(v11, v12, v6);
  uint64_t v14 = *(void *)(a3 + 24);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = *(void *)(v9 + 48) + v16;
  uint64_t v18 = (void *)((v17 + v11) & ~v16);
  uint64_t v19 = (const void *)((v17 + v12) & ~v16);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v19, 1, v14))
  {
    if (*(_DWORD *)(v15 + 84)) {
      size_t v20 = *(void *)(v15 + 64);
    }
    else {
      size_t v20 = *(void *)(v15 + 64) + 1;
    }
    memcpy(v18, v19, v20);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v18, v19, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  }
  return a1;
}

void **sub_10039D3B4(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = v9 + 24;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = ((unint64_t)a1 + v11 + 8) & ~v11;
  uint64_t v13 = ((unint64_t)a2 + v11 + 8) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v12, v13);
  uint64_t v14 = *(void *)(v10 + 40);
  uint64_t v15 = *(void *)(a3 + 24);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = v14 + v17;
  uint64_t v19 = (void *)((v18 + v12) & ~v17);
  size_t v20 = (void *)((v18 + v13) & ~v17);
  uint64_t v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v13) = v21(v19, 1, v15);
  int v22 = v21(v20, 1, v15);
  if (v13)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v19, v20, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
      return a1;
    }
    int v23 = *(_DWORD *)(v16 + 84);
    size_t v24 = *(void *)(v16 + 64);
  }
  else
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v19, v20, v15);
      return a1;
    }
    uint64_t v26 = *(void (**)(void *, uint64_t))(v16 + 8);
    uint64_t v25 = v16 + 8;
    v26(v19, v15);
    int v23 = *(_DWORD *)(v25 + 76);
    size_t v24 = *(void *)(v25 + 56);
  }
  if (v23) {
    size_t v27 = v24;
  }
  else {
    size_t v27 = v24 + 1;
  }
  memcpy(v19, v20, v27);
  return a1;
}

void *sub_10039D590(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = v5 + 32;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v8, v9);
  uint64_t v10 = *(void *)(v6 + 32);
  uint64_t v11 = *(void *)(a3 + 24);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = v10 + v13;
  uint64_t v15 = (void *)((v14 + v8) & ~v13);
  uint64_t v16 = (const void *)((v14 + v9) & ~v13);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v16, 1, v11))
  {
    if (*(_DWORD *)(v12 + 84)) {
      size_t v17 = *(void *)(v12 + 64);
    }
    else {
      size_t v17 = *(void *)(v12 + 64) + 1;
    }
    memcpy(v15, v16, v17);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v15, v16, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
  }
  return a1;
}

void **sub_10039D6EC(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 8) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 8) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 24);
  uint64_t v13 = *(void *)(a3 + 24);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = v12 + v15;
  size_t v17 = (void *)((v16 + v10) & ~v15);
  uint64_t v18 = (void *)((v16 + v11) & ~v15);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v11) = v19(v17, 1, v13);
  int v20 = v19(v18, 1, v13);
  if (v11)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v17, v18, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
      return a1;
    }
    int v21 = *(_DWORD *)(v14 + 84);
    size_t v22 = *(void *)(v14 + 64);
  }
  else
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v17, v18, v13);
      return a1;
    }
    size_t v24 = *(void (**)(void *, uint64_t))(v14 + 8);
    uint64_t v23 = v14 + 8;
    v24(v17, v13);
    int v21 = *(_DWORD *)(v23 + 76);
    size_t v22 = *(void *)(v23 + 56);
  }
  if (v21) {
    size_t v25 = v22;
  }
  else {
    size_t v25 = v22 + 1;
  }
  memcpy(v17, v18, v25);
  return a1;
}

uint64_t sub_10039D8C4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  uint64_t v9 = *(unsigned int *)(v7 + 84);
  unsigned int v10 = v9 - 1;
  if (!v9) {
    unsigned int v10 = 0;
  }
  if (v5 <= v10) {
    unsigned int v11 = v10;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v4 + 84);
  }
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  else {
    unsigned int v12 = v11;
  }
  uint64_t v13 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v14 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v15 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = *(void *)(*(void *)(v6 - 8) + 64);
  if (!v9) {
    ++v16;
  }
  if (!a2) {
    return 0;
  }
  int v17 = a2 - v12;
  if (a2 <= v12) {
    goto LABEL_31;
  }
  uint64_t v18 = v16 + ((v14 + v15 + ((v13 + 8) & ~v13)) & ~v15);
  char v19 = 8 * v18;
  if (v18 > 3) {
    goto LABEL_14;
  }
  unsigned int v21 = ((v17 + ~(-1 << v19)) >> v19) + 1;
  if (HIWORD(v21))
  {
    int v20 = *(_DWORD *)((char *)a1 + v18);
    if (v20) {
      goto LABEL_21;
    }
LABEL_31:
    if ((v11 & 0x80000000) == 0)
    {
      uint64_t v25 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v25) = -1;
      }
      return (v25 + 1);
    }
    uint64_t v27 = ((unint64_t)a1 + v13 + 8) & ~v13;
    if (v5 == v12)
    {
      uint64_t v28 = *(uint64_t (**)(uint64_t))(v4 + 48);
      return v28(v27);
    }
    if (v9 >= 2)
    {
      unsigned int v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))((v27 + v14 + v15) & ~v15, v9, v6);
      if (v29 >= 2) {
        return v29 - 1;
      }
      else {
        return 0;
      }
    }
    return 0;
  }
  if (v21 > 0xFF)
  {
    int v20 = *(unsigned __int16 *)((char *)a1 + v18);
    if (*(unsigned __int16 *)((char *)a1 + v18)) {
      goto LABEL_21;
    }
    goto LABEL_31;
  }
  if (v21 < 2) {
    goto LABEL_31;
  }
LABEL_14:
  int v20 = *((unsigned __int8 *)a1 + v18);
  if (!*((unsigned char *)a1 + v18)) {
    goto LABEL_31;
  }
LABEL_21:
  int v22 = (v20 - 1) << v19;
  if (v18 > 3) {
    int v22 = 0;
  }
  if (v18)
  {
    if (v18 <= 3) {
      int v23 = v18;
    }
    else {
      int v23 = 4;
    }
    switch(v23)
    {
      case 2:
        int v24 = *a1;
        break;
      case 3:
        int v24 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v24 = *(_DWORD *)a1;
        break;
      default:
        int v24 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v24 = 0;
  }
  return v12 + (v24 | v22) + 1;
}

void sub_10039DB5C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(void *)(a4 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v13 = *(void *)(v7 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  unsigned int v15 = v11 - 1;
  if (!v11) {
    unsigned int v15 = 0;
  }
  if (v8 <= v15) {
    unsigned int v16 = v15;
  }
  else {
    unsigned int v16 = *(_DWORD *)(v7 + 84);
  }
  if (v16 <= 0x7FFFFFFF) {
    unsigned int v17 = 0x7FFFFFFF;
  }
  else {
    unsigned int v17 = v16;
  }
  if (v11) {
    uint64_t v18 = *(void *)(*(void *)(v9 - 8) + 64);
  }
  else {
    uint64_t v18 = *(void *)(*(void *)(v9 - 8) + 64) + 1;
  }
  size_t v19 = v18 + ((v13 + v14 + ((v12 + 8) & ~v12)) & ~v14);
  BOOL v20 = a3 >= v17;
  unsigned int v21 = a3 - v17;
  if (v21 == 0 || !v20)
  {
LABEL_21:
    if (v17 < a2) {
      goto LABEL_22;
    }
    goto LABEL_29;
  }
  if (v19 > 3)
  {
    int v6 = 1;
    if (v17 < a2) {
      goto LABEL_22;
    }
    goto LABEL_29;
  }
  unsigned int v22 = ((v21 + ~(-1 << (8 * v19))) >> (8 * v19)) + 1;
  if (!HIWORD(v22))
  {
    if (v22 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v22 > 1;
    }
    goto LABEL_21;
  }
  int v6 = 4;
  if (v17 < a2)
  {
LABEL_22:
    unsigned int v23 = ~v17 + a2;
    if (v19 < 4)
    {
      int v24 = (v23 >> (8 * v19)) + 1;
      if (v19)
      {
        int v25 = v23 & ~(-1 << (8 * v19));
        bzero(a1, v19);
        if (v19 == 3)
        {
          *(_WORD *)a1 = v25;
          a1[2] = BYTE2(v25);
        }
        else if (v19 == 2)
        {
          *(_WORD *)a1 = v25;
        }
        else
        {
          *a1 = v25;
        }
      }
    }
    else
    {
      bzero(a1, v19);
      *(_DWORD *)a1 = v23;
      int v24 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v19] = v24;
        return;
      case 2:
        *(_WORD *)&a1[v19] = v24;
        return;
      case 3:
        goto LABEL_56;
      case 4:
        *(_DWORD *)&a1[v19] = v24;
        return;
      default:
        return;
    }
  }
LABEL_29:
  switch(v6)
  {
    case 1:
      a1[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 2:
      *(_WORD *)&a1[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 3:
LABEL_56:
      __break(1u);
      JUMPOUT(0x10039DE94);
    case 4:
      *(_DWORD *)&a1[v19] = 0;
      goto LABEL_33;
    default:
LABEL_33:
      if (a2)
      {
LABEL_34:
        if ((v16 & 0x80000000) != 0)
        {
          unint64_t v27 = (unint64_t)&a1[v12 + 8] & ~v12;
          if (v8 == v17)
          {
            uint64_t v28 = *(void (**)(unint64_t))(v7 + 56);
            v28(v27);
          }
          else if (v11 >= 2)
          {
            unint64_t v29 = (v27 + v13 + v14) & ~v14;
            uint64_t v30 = a2 + 1;
            id v31 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
            v31(v29, v30, v11, v9);
          }
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v26 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v26 = a2 - 1;
          }
          *(void *)a1 = v26;
        }
      }
      return;
  }
}

ValueMetadata *type metadata accessor for NSUserDefaults.Suite()
{
  return &type metadata for NSUserDefaults.Suite;
}

uint64_t type metadata accessor for NSUserDefaults.ValueTransformer()
{
  return sub_100086CCC();
}

uint64_t sub_10039DEE8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void **sub_10039DF88(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  unint64_t v7 = ((v6 + 8) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = (char *)*a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (void **)&v9[(v6 & 0xF8 ^ 0x1F8) & (v6 + 16)];
    swift_retain();
  }
  else
  {
    uint64_t v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    uint64_t v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    unsigned int v15 = v9;
    v14(v12, v13, v4);
  }
  return a1;
}

uint64_t sub_10039E08C(id *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = ((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void **sub_10039E100(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  id v11 = v4;
  v7(v9, v10, v5);
  return a1;
}

void **sub_10039E190(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

void *sub_10039E21C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void **sub_10039E28C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_10039E314(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
      }
      uint64_t v15 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_10039E4B4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 8) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x10039E710);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 8] & ~v9;
          BOOL v20 = *(void (**)(unint64_t))(v6 + 56);
          v20(v19);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v18 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v18 = a2 - 1;
          }
          *(void *)a1 = v18;
        }
      }
      return;
  }
}

uint64_t sub_10039E738()
{
  return type metadata accessor for NSUserDefaults.KeyValueRegistration(0);
}

uint64_t sub_10039E740()
{
  uint64_t result = _s20KeyValueRegistrationC10IdentifierVMa(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t _s9_ObserverCMa()
{
  return self;
}

uint64_t *sub_10039E800(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_10052F780();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    size_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    void *v9 = *v10;
    v9[1] = v11;
  }
  swift_retain();
  return a1;
}

uint64_t sub_10039E8D4(uint64_t a1)
{
  uint64_t v2 = sub_10052F780();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_release();
}

uint64_t sub_10039E94C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10052F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  return a1;
}

uint64_t sub_10039E9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10052F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10039EA68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10052F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10039EAE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10052F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_10039EB6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10039EB80);
}

uint64_t sub_10039EB80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10052F780();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10039EC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10039EC54);
}

uint64_t sub_10039EC54(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10052F780();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t _s9_ObserverC18HandlerAssociationVMa(uint64_t a1)
{
  return sub_1000136E8(a1, qword_10066FBB0);
}

uint64_t sub_10039ED30()
{
  uint64_t result = sub_10052F780();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void _s9_ObserverC16SuiteAssociationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 16);
}

void *_s9_ObserverC16SuiteAssociationVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

void *_s9_ObserverC16SuiteAssociationVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[2];
  id v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  return a1;
}

uint64_t _s9_ObserverC16SuiteAssociationVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *_s9_ObserverC16SuiteAssociationVMa()
{
  return &_s9_ObserverC16SuiteAssociationVN;
}

uint64_t sub_10039EF00(uint64_t a1)
{
  uint64_t result = swift_checkMetadataState();
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t sub_10039EFA8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_10039F104(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x10039F31CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unsigned int v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t *sub_10039F344(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10052F780();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    unsigned int v10 = (uint64_t *)((char *)a1 + v8);
    int v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *unsigned int v10 = *v11;
    v10[1] = v12;
    int v13 = (uint64_t *)((char *)a1 + v9);
    unsigned int v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *int v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10039F434(uint64_t a1)
{
  uint64_t v2 = sub_10052F780();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10039F4BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10052F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  unsigned int v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  int v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10039F55C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10052F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10039F624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10052F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_10039F6A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10052F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  int v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *int v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10039F750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10039F764);
}

uint64_t sub_10039F764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10052F780();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10039F828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10039F83C);
}

uint64_t sub_10039F83C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10052F780();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10039F8FC()
{
  uint64_t result = sub_10052F780();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10039F9A0()
{
  unint64_t result = qword_10066FD00;
  if (!qword_10066FD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066FD00);
  }
  return result;
}

unint64_t sub_10039F9F4()
{
  unint64_t result = qword_10066E5A8;
  if (!qword_10066E5A8)
  {
    type metadata accessor for NSKeyValueChangeKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066E5A8);
  }
  return result;
}

uint64_t sub_10039FA4C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

BOOL sub_10039FAAC(uint64_t *a1)
{
  return sub_10039B720(a1, *(void *)(v1 + 16));
}

unint64_t sub_10039FACC()
{
  unint64_t result = qword_10066FD10;
  if (!qword_10066FD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066FD10);
  }
  return result;
}

uint64_t sub_10039FB20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

ValueMetadata *_s5ErrorOMa()
{
  return &_s5ErrorON;
}

BOOL sub_10039FB98(uint64_t *a1)
{
  return sub_10039FAAC(a1);
}

uint64_t sub_10039FBBC(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return sub_100534F40();
  }
  else {
    return 0;
  }
}

uint64_t sub_10039FC04(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_100536470())
  {
    unint64_t v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v5 = (id)sub_100536210();
LABEL_5:
      uint64_t v6 = v5;
      sub_1003A0FE4();
      char v7 = sub_100535D90();

      if (v7)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1) {
        goto LABEL_18;
      }
      if (v4) {
        break;
      }
      unint64_t v4 = 5;
      while (1)
      {
        unint64_t v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1)) {
          break;
        }
        id v13 = *(id *)(a2 + 8 * v4);
        char v14 = sub_100535D90();

        if (v14) {
          goto LABEL_6;
        }
        ++v4;
        if (v12 == v3) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    uint64_t v9 = 1;
    while (1)
    {
      sub_100536210();
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      char v11 = sub_100535D90();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++v9;
      if (v10 == v3) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_10039FD7C()
{
  qword_10066FD18 = (uint64_t)&off_10062C9E0;
}

void sub_10039FD90()
{
  qword_10066FD20 = (uint64_t)&off_10062CA10;
}

void sub_10039FDA4()
{
  off_10066FD28 = &off_10062CA40;
}

uint64_t sub_10039FDB8()
{
  if (qword_10066E3B8 != -1) {
    swift_once();
  }
  uint64_t v0 = off_10066FD28;
  if (qword_10066E3A8 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t result = sub_10036BA04(v1);
  qword_10067B310 = (uint64_t)v0;
  return result;
}

uint64_t sub_10039FE7C()
{
  if (qword_10066E3B8 != -1) {
    swift_once();
  }
  uint64_t v0 = (char *)off_10066FD28;
  int64_t v1 = *((void *)off_10066FD28 + 2);
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1003A0ADC(0, v1, 0);
    uint64_t v2 = (uint64_t *)(v0 + 40);
    do
    {
      uint64_t v8 = *(v2 - 1);
      uint64_t v9 = *v2;
      swift_bridgeObjectRetain_n();
      v10._uint64_t countAndFlagsBits = 115;
      v10._object = (void *)0xE100000000000000;
      sub_100534E80(v10);
      swift_bridgeObjectRelease();
      unint64_t v4 = _swiftEmptyArrayStorage[2];
      unint64_t v3 = _swiftEmptyArrayStorage[3];
      if (v4 >= v3 >> 1) {
        sub_1003A0ADC((char *)(v3 > 1), v4 + 1, 1);
      }
      v2 += 2;
      _swiftEmptyArrayStorage[2] = v4 + 1;
      id v5 = &_swiftEmptyArrayStorage[2 * v4];
      v5[4] = v8;
      v5[5] = v9;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  if (qword_10066E3B0 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_10036BA04(v6);
  uint64_t result = swift_bridgeObjectRelease();
  qword_10067B318 = (uint64_t)_swiftEmptyArrayStorage;
  return result;
}

uint64_t URL.replacingSchemeWithHTTP.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10000BB04(&qword_10066F890);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10052F020();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10052EF90();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100013C44((uint64_t)v4, &qword_10066F890);
LABEL_9:
    uint64_t v13 = sub_10052F360();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 1, 1, v13);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  uint64_t v9 = sub_10052EFE0();
  if (!v10)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    goto LABEL_9;
  }
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (qword_10066E3C8 != -1) {
    swift_once();
  }
  if (sub_1001B3C5C(v11, v12, (void *)qword_10067B318))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_10066E3C0 != -1) {
      swift_once();
    }
    char v15 = sub_1001B3C5C(v11, v12, (void *)qword_10067B310);
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0) {
      goto LABEL_14;
    }
  }
  sub_10052EFF0();
LABEL_14:
  sub_10052EFA0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

Swift::Void __swiftcall URLComponents.appendPath(_:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  uint64_t v3 = sub_10052EFD0();
  uint64_t v5 = sub_1003A0484(v3, v4);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  if (v7)
  {
    if (v5 == 47 && v7 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_6:
      uint64_t v9 = (void (*)(void *, void))sub_10052EFC0();
      v16._uint64_t countAndFlagsBits = countAndFlagsBits;
      v16._object = object;
      sub_100534E80(v16);
      v9(v15, 0);
      return;
    }
    char v8 = sub_100536780();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_10039FBBC(countAndFlagsBits, (unint64_t)object);
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  if (v12)
  {
    if (v10 == 47 && v12 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_12:
      swift_bridgeObjectRetain();
      goto LABEL_14;
    }
    char v13 = sub_100536780();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_12;
    }
  }
  v15[0] = 47;
  v15[1] = 0xE100000000000000;
  v17._uint64_t countAndFlagsBits = countAndFlagsBits;
  v17._object = object;
  sub_100534E80(v17);
  uint64_t countAndFlagsBits = 47;
  object = (void *)0xE100000000000000;
LABEL_14:
  char v14 = (void (*)(void *, void))sub_10052EFC0();
  v18._uint64_t countAndFlagsBits = countAndFlagsBits;
  v18._object = object;
  sub_100534E80(v18);
  swift_bridgeObjectRelease();
  v14(v15, 0);
}

uint64_t sub_1003A0484(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  sub_100534E20();
  return sub_100534F40();
}

Swift::Void __swiftcall URLComponents.appendQueryItems(_:)(Swift::OpaquePointer a1)
{
  if (sub_10052EF70())
  {
    size_t v1 = swift_bridgeObjectRetain();
    sub_10036BECC(v1);
  }
  else
  {
    swift_bridgeObjectRetain();
  }

  sub_10052EF80();
}

BOOL URL.isSafariScriptURL.getter()
{
  uint64_t v0 = sub_10052EF60();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  unint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v34 - v5;
  uint64_t v7 = sub_10000BB04(&qword_10066FD30);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000BB04(&qword_10066F890);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10052F020();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  Swift::String v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10052EF90();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100013C44((uint64_t)v12, &qword_10066F890);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  uint64_t v17 = sub_10052EF70();
  if (!v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return 0;
  }
  long long v39 = v16;
  uint64_t v18 = *(void *)(v17 + 16);
  if (!v18)
  {
    uint64_t v31 = 1;
    NSString v32 = v39;
    goto LABEL_24;
  }
  uint64_t v35 = v14;
  uint64_t v36 = v13;
  objc_super v37 = v9;
  uint64_t v38 = v1;
  unsigned int v21 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
  uint64_t v20 = v1 + 16;
  unint64_t v19 = v21;
  unint64_t v22 = v17 + ((*(unsigned __int8 *)(v20 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 64));
  unsigned int v23 = (void (**)(char *, uint64_t))(v20 - 8);
  uint64_t v43 = *(void *)(v20 + 56);
  uint64_t v34 = v17;
  swift_bridgeObjectRetain();
  uint64_t v42 = (v20 - 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v41 = "registeredSuites";
  unint64_t v40 = 0x8000000100566070;
  while (1)
  {
    v19(v6, v22, v0);
    if (sub_10052EF40() == 0x6E6F69746361 && v25 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      v19(v4, (unint64_t)v6, v0);
    }
    else
    {
      char v26 = sub_100536780();
      swift_bridgeObjectRelease();
      v19(v4, (unint64_t)v6, v0);
      if ((v26 & 1) == 0) {
        goto LABEL_6;
      }
    }
    uint64_t v27 = sub_10052EF50();
    if (!v28)
    {
LABEL_6:
      int v24 = *v23;
      (*v23)(v4, v0);
      goto LABEL_7;
    }
    if (v27 == 0xD000000000000016 && v28 == v40) {
      break;
    }
    char v29 = sub_100536780();
    swift_bridgeObjectRelease();
    int v24 = *v23;
    (*v23)(v4, v0);
    if (v29) {
      goto LABEL_22;
    }
LABEL_7:
    v24(v6, v0);
    v22 += v43;
    if (!--v18)
    {
      swift_bridgeObjectRelease();
      uint64_t v31 = 1;
      uint64_t v9 = v37;
      uint64_t v1 = v38;
      goto LABEL_23;
    }
  }
  swift_bridgeObjectRelease();
  (*v23)(v4, v0);
LABEL_22:
  swift_bridgeObjectRelease();
  uint64_t v9 = v37;
  uint64_t v1 = v38;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v37, v6, v0);
  uint64_t v31 = 0;
LABEL_23:
  uint64_t v14 = v35;
  uint64_t v13 = v36;
  NSString v32 = v39;
LABEL_24:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v9, v31, 1, v0);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v32, v13);
  swift_bridgeObjectRelease();
  BOOL v30 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v9, 1, v0) != 1;
  sub_100013C44((uint64_t)v9, &qword_10066FD30);
  return v30;
}

ValueMetadata *type metadata accessor for URL.ITMSSchemes()
{
  return &type metadata for URL.ITMSSchemes;
}

size_t sub_1003A0ABC(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_1003A0BE8(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1003A0ADC(char *a1, int64_t a2, char a3)
{
  size_t result = sub_1003A0EE0(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1003A0AFC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_10066F8B0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_release();
  return v10;
}

size_t sub_1003A0BE8(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000BB04(&qword_10066EF10);
  uint64_t v10 = *(void *)(sub_10052FA30() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(sub_10052FA30() - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

void *sub_1003A0DBC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_10066F898);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[4 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_10000BB04(&qword_10066F8A0);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1003A0EE0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_10066EF30);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

unint64_t sub_1003A0FE4()
{
  unint64_t result = qword_10066F718;
  if (!qword_10066F718)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10066F718);
  }
  return result;
}

const char *Feature.MediaPlayer.domain.getter()
{
  return "MediaPlayer";
}

const char *Feature.MediaPlayer.feature.getter(char a1)
{
  unint64_t result = "image_decoding";
  switch(a1)
  {
    case 1:
      unint64_t result = "UpgradeOnPlay";
      break;
    case 2:
      unint64_t result = "QueueFA";
      break;
    case 3:
      unint64_t result = "RSuntory";
      break;
    default:
      return result;
  }
  return result;
}

const char *sub_1003A10B8()
{
  unint64_t result = "image_decoding";
  switch(*v0)
  {
    case 1:
      unint64_t result = "UpgradeOnPlay";
      break;
    case 2:
      unint64_t result = "QueueFA";
      break;
    case 3:
      unint64_t result = "RSuntory";
      break;
    default:
      return result;
  }
  return result;
}

const char *Feature.MediaControls.domain.getter()
{
  return "MediaControls";
}

const char *Feature.MediaControls.feature.getter()
{
  return "NewVolumeControlsMusic";
}

const char *Feature.MusicKit.domain.getter()
{
  return "MusicKit";
}

const char *Feature.MusicKit.feature.getter()
{
  return "yuma";
}

const char *Feature.MediaRemote.domain.getter()
{
  return "MediaRemote";
}

const char *Feature.MediaRemote.feature.getter()
{
  return "cayenne_music_bottom_player_routing";
}

unint64_t sub_1003A11B8()
{
  unint64_t result = qword_10066FD38;
  if (!qword_10066FD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066FD38);
  }
  return result;
}

unint64_t sub_1003A1210()
{
  unint64_t result = qword_10066FD40;
  if (!qword_10066FD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066FD40);
  }
  return result;
}

unint64_t sub_1003A1268()
{
  unint64_t result = qword_10066FD48;
  if (!qword_10066FD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066FD48);
  }
  return result;
}

unint64_t sub_1003A12C0()
{
  unint64_t result = qword_10066FD50;
  if (!qword_10066FD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066FD50);
  }
  return result;
}

unsigned char *_s11MediaPlayerOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003A13E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Feature.MediaPlayer()
{
  return &type metadata for Feature.MediaPlayer;
}

ValueMetadata *type metadata accessor for Feature.MediaControls()
{
  return &type metadata for Feature.MediaControls;
}

ValueMetadata *type metadata accessor for Feature.MusicKit()
{
  return &type metadata for Feature.MusicKit;
}

unsigned char *_s13MediaControlsOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1003A14DCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Feature.MediaRemote()
{
  return &type metadata for Feature.MediaRemote;
}

const char *Feature.Music.domain.getter()
{
  return "Music";
}

const char *Feature.Music.feature.getter(char a1)
{
  unint64_t result = "potluck";
  switch(a1)
  {
    case 1:
      unint64_t result = "tails";
      break;
    case 2:
      unint64_t result = "razzmatazz";
      break;
    case 3:
      unint64_t result = "bilby";
      break;
    case 4:
      unint64_t result = "symphony";
      break;
    case 5:
      unint64_t result = "qulh";
      break;
    case 6:
      unint64_t result = "inline_large_title";
      break;
    case 7:
      unint64_t result = "image_playground_covers";
      break;
    case 8:
      unint64_t result = "in_with_the_new";
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1003A1624()
{
  unint64_t result = qword_10066FD58;
  if (!qword_10066FD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066FD58);
  }
  return result;
}

const char *sub_1003A1678()
{
  return Feature.Music.feature.getter(*v0);
}

uint64_t _s5MusicOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s5MusicOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003A17F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Feature.Music()
{
  return &type metadata for Feature.Music;
}

uint64_t Feature.UIP.isEnabled.getter(char a1)
{
  if (a1)
  {
    unsigned int v6 = &_s3UIPO5MusicON;
    unint64_t v7 = sub_1003A1908();
    v5[0] = 1;
    char v3 = sub_10052FBF0();
    sub_100013D48((uint64_t)v5);
    if ((v3 & 1) == 0)
    {
      char v2 = 0;
      return v2 & 1;
    }
    unsigned int v6 = &_s3UIPO5UIKitON;
    unint64_t v7 = sub_1003A195C();
    v5[0] = 1;
    goto LABEL_6;
  }
  unsigned int v6 = &_s3UIPO5MusicON;
  unint64_t v7 = sub_1003A1908();
  v5[0] = 0;
  char v1 = sub_10052FBF0();
  sub_100013D48((uint64_t)v5);
  char v2 = 0;
  if (v1)
  {
    unsigned int v6 = &_s3UIPO5UIKitON;
    unint64_t v7 = sub_1003A195C();
    v5[0] = 0;
LABEL_6:
    char v2 = sub_10052FBF0();
    sub_100013D48((uint64_t)v5);
  }
  return v2 & 1;
}

unint64_t sub_1003A1908()
{
  unint64_t result = qword_10066FD60;
  if (!qword_10066FD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066FD60);
  }
  return result;
}

unint64_t sub_1003A195C()
{
  unint64_t result = qword_10066FD68;
  if (!qword_10066FD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066FD68);
  }
  return result;
}

const char *sub_1003A19B0()
{
  return "Music";
}

const char *sub_1003A19C4()
{
  if (*v0) {
    return "uip_fluid_transitions";
  }
  else {
    return "uip_floating_tab_bar";
  }
}

const char *sub_1003A19F0()
{
  return "UIKit";
}

unint64_t sub_1003A1A08()
{
  unint64_t result = qword_10066FD70;
  if (!qword_10066FD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066FD70);
  }
  return result;
}

ValueMetadata *type metadata accessor for Feature.UIP()
{
  return &type metadata for Feature.UIP;
}

ValueMetadata *_s3UIPO5UIKitOMa()
{
  return &_s3UIPO5UIKitON;
}

unsigned char *_s3UIPOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003A1B4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s3UIPO5MusicOMa()
{
  return &_s3UIPO5MusicON;
}

unint64_t sub_1003A1B88()
{
  unint64_t result = qword_10066FD78;
  if (!qword_10066FD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066FD78);
  }
  return result;
}

unint64_t sub_1003A1BE0()
{
  unint64_t result = qword_10066FD80;
  if (!qword_10066FD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066FD80);
  }
  return result;
}

uint64_t FeatureFlagsKey.isEnabled.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  v6[3] = a1;
  v6[4] = a2;
  unsigned int v4 = sub_1000FF040(v6);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(v4, v2, v3);
  LOBYTE(v3) = sub_10052FBF0();
  sub_100013D48((uint64_t)v6);
  return v3 & 1;
}

ValueMetadata *type metadata accessor for Feature()
{
  return &type metadata for Feature;
}

uint64_t GestureRecognizerHandler.__allocating_init<A>(gestureRecognizer:handler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  GestureRecognizerHandler.init<A>(gestureRecognizer:handler:)(a1, a2, a3, a4);
  return v8;
}

uint64_t GestureRecognizerHandler.init<A>(gestureRecognizer:handler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a4;
  v9[3] = a2;
  v9[4] = a3;
  *(void *)(v4 + 24) = sub_100356744;
  *(void *)(v4 + 32) = v9;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    int64_t v11 = (void *)Strong;
    swift_retain();
    [v11 addTarget:v4 action:"handleActionFromGestureRecognizer:"];

    swift_release();
  }

  return v4;
}

uint64_t sub_1003A1DFC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t GestureRecognizerHandler.deinit()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    [Strong removeTarget:v0 action:"handleActionFromGestureRecognizer:"];
  }
  swift_unknownObjectWeakDestroy();
  swift_release();
  return v0;
}

uint64_t GestureRecognizerHandler.__deallocating_deinit()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    [Strong removeTarget:v0 action:"handleActionFromGestureRecognizer:"];
  }
  swift_unknownObjectWeakDestroy();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1003A1F7C()
{
  uint64_t result = swift_slowAlloc();
  qword_10066FD88 = result;
  return result;
}

uint64_t UIGestureRecognizerHandling<>.addHandler(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (qword_10066E3D0 != -1) {
    swift_once();
  }
  if (objc_getAssociatedObject(v4, (const void *)qword_10066FD88))
  {
    sub_100536090();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  sub_100356DE8((uint64_t)v16, (uint64_t)v17);
  if (v17[3])
  {
    sub_10000BB04(&qword_10066FD90);
    if (swift_dynamicCast())
    {
      uint64_t v8 = v15;
      goto LABEL_11;
    }
  }
  else
  {
    sub_100356E50((uint64_t)v17);
  }
  uint64_t v8 = _swiftEmptyArrayStorage;
LABEL_11:
  v17[0] = v8;
  type metadata accessor for GestureRecognizerHandler();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a3;
  v9[3] = a1;
  v9[4] = a2;
  uint64_t v10 = swift_allocObject();
  id v11 = v4;
  swift_retain();
  GestureRecognizerHandler.init<A>(gestureRecognizer:handler:)(v11, (uint64_t)sub_1003A224C, (uint64_t)v9, a3);
  swift_retain();
  sub_1005350A0();
  if (*(void *)((v17[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_100535130();
  }
  sub_100535190();
  sub_100535100();
  uint64_t v12 = (const void *)qword_10066FD88;
  Class isa = sub_1005350C0().super.isa;
  swift_bridgeObjectRelease();
  objc_setAssociatedObject(v11, v12, isa, (void *)1);

  return v10;
}

uint64_t type metadata accessor for GestureRecognizerHandler()
{
  return self;
}

uint64_t sub_1003A21E8(void *a1, void (*a2)(void *, id), uint64_t a3, uint64_t a4)
{
  void v5[3] = a4;
  v5[4] = &protocol witness table for UIGestureRecognizer;
  v5[0] = a1;
  a2(v5, [a1 state]);
  return sub_100013D48((uint64_t)v5);
}

uint64_t sub_1003A224C(void *a1)
{
  return sub_1003A21E8(a1, *(void (**)(void *, id))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16));
}

void UIGestureRecognizerHandling<>.removeHandler(_:)(uint64_t a1)
{
  if (qword_10066E3D0 != -1) {
    swift_once();
  }
  if (objc_getAssociatedObject(v1, (const void *)qword_10066FD88))
  {
    sub_100536090();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_100356DE8((uint64_t)v7, (uint64_t)v8);
  if (!v9)
  {
    sub_100356E50((uint64_t)v8);
    goto LABEL_10;
  }
  sub_10000BB04(&qword_10066FD90);
  if (!swift_dynamicCast())
  {
LABEL_10:
    uint64_t v3 = _swiftEmptyArrayStorage;
    goto LABEL_11;
  }
  uint64_t v3 = v6;
LABEL_11:
  swift_retain();
  sub_1003A2404((unint64_t)v3, a1);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = (const void *)qword_10066FD88;
  type metadata accessor for GestureRecognizerHandler();
  Class isa = sub_1005350C0().super.isa;
  swift_bridgeObjectRelease();
  objc_setAssociatedObject(v1, v4, isa, (void *)1);
}

uint64_t sub_1003A23BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return UIGestureRecognizerHandling<>.addHandler(_:)(a1, a2, a3);
}

void sub_1003A23E0(uint64_t a1)
{
}

void *sub_1003A2404(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
LABEL_16:
    uint64_t v4 = sub_100536470();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_3:
      for (unint64_t i = 0; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v6 = sub_100536210();
          unint64_t v7 = i + 1;
          if (__OFADD__(i, 1))
          {
LABEL_13:
            __break(1u);
            return _swiftEmptyArrayStorage;
          }
        }
        else
        {
          if (i >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_16;
          }
          uint64_t v6 = *(void *)(a1 + 8 * i + 32);
          swift_retain();
          unint64_t v7 = i + 1;
          if (__OFADD__(i, 1)) {
            goto LABEL_13;
          }
        }
        if (v6 == a2)
        {
          swift_release();
        }
        else
        {
          sub_100536290();
          sub_1005362D0();
          sub_1005362E0();
          sub_1005362A0();
        }
        if (v7 == v4) {
          return _swiftEmptyArrayStorage;
        }
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

double KeyboardAvoidance.beginFrame.getter()
{
  return *(double *)v0;
}

double KeyboardAvoidance.endFrame.getter()
{
  return *(double *)(v0 + 32);
}

double KeyboardAvoidance.animationDuration.getter()
{
  return *(double *)(v0 + 64);
}

uint64_t KeyboardAvoidance.animationCurve.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t KeyboardAvoidance.local.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t KeyboardAvoidance.animationOptions.getter()
{
  uint64_t result = *(void *)(v0 + 72) << 16;
  if (result < 0) {
    __break(1u);
  }
  return result;
}

uint64_t KeyboardAvoidance.init(notification:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1003A3824(a1, (uint64_t)v4);
  return sub_100013A18((uint64_t)v4, a2, &qword_10066FE60);
}

void KeyboardAvoidance.animate(alongsideKeyboard:completion:)(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(v4 + 72) << 16;
  if (v5 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = a1;
    uint64_t v14 = a2;
    uint64_t v9 = _NSConcreteStackBlock;
    uint64_t v10 = 1107296256;
    id v11 = sub_1001CB5A0;
    uint64_t v12 = &unk_100630C50;
    uint64_t v8 = _Block_copy(&v9);
    swift_retain();
    swift_release();
    if (a3)
    {
      uint64_t v13 = a3;
      uint64_t v14 = a4;
      uint64_t v9 = _NSConcreteStackBlock;
      uint64_t v10 = 1107296256;
      id v11 = sub_100359584;
      uint64_t v12 = &unk_100630C78;
      a3 = _Block_copy(&v9);
      swift_retain();
      swift_release();
    }
    [self animateWithDuration:v5 delay:v8 options:a3 animations:*(double *)(v4 + 64) completion:0.0];
    _Block_release(a3);
    _Block_release(v8);
  }
}

void KeyboardAvoidance.animate(alongsideKeyboard:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = self;
  uint64_t v6 = *(void *)(v2 + 72) << 16;
  if (v6 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = (void *)v5;
    double v8 = *(double *)(v2 + 64);
    v10[4] = a1;
    v10[5] = a2;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_1001CB5A0;
    v10[3] = &unk_100630CA0;
    uint64_t v9 = _Block_copy(v10);
    swift_retain();
    swift_release();
    [v7 animateWithDuration:v6 delay:v9 options:0 animations:v8 completion:0.0];
    _Block_release(v9);
  }
}

Swift::Void __swiftcall KeyboardAvoidance.animateContentScrollView(in:)(UIViewController in)
{
  uint64_t v3 = swift_allocObject();
  long long v4 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v3 + 64) = v4;
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(v1 + 64);
  *(unsigned char *)(v3 + 96) = *(unsigned char *)(v1 + 80);
  long long v5 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v3 + 32) = v5;
  *(UIViewController *)(v3 + 104) = in;
  uint64_t v6 = self;
  uint64_t v7 = *(void *)(v1 + 72) << 16;
  if (v7 < 0)
  {
    __break(1u);
  }
  else
  {
    double v8 = (void *)v6;
    double v9 = *(double *)(v1 + 64);
    void v12[4] = sub_1003A3D6C;
    v12[5] = v3;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    void v12[2] = sub_1001CB5A0;
    unint64_t v12[3] = &unk_100630CF0;
    uint64_t v10 = _Block_copy(v12);
    id v11 = in.super.super.isa;
    swift_retain();
    swift_release();
    [v8 animateWithDuration:v7 delay:v10 options:0 animations:v9 completion:0.0];
    _Block_release(v10);
    swift_release();
  }
}

Swift::Void __swiftcall KeyboardAvoidance.applyAdditionalSafeAreaInsets(to:)(UIViewController to)
{
  if ([(objc_class *)to.super.super.isa isViewLoaded])
  {
    id v3 = [(objc_class *)to.super.super.isa view];
    if (v3)
    {
      long long v4 = v3;
      [v3 convertRect:0 fromView:v1[4], v1[5], v1[6], v1[7]];
      CGFloat v6 = v5;
      CGFloat v8 = v7;
      CGFloat v10 = v9;
      CGFloat v12 = v11;
      id v13 = [(objc_class *)to.super.super.isa view];
      if (v13)
      {
        uint64_t v14 = v13;
        [v13 safeAreaInsets];
        double v16 = v15;

        [(objc_class *)to.super.super.isa additionalSafeAreaInsets];
        double v18 = v16 - v17;
        [v4 frame];
        double Height = CGRectGetHeight(v23);
        v24.origin.x = v6;
        v24.origin.y = v8;
        v24.size.CGFloat width = v10;
        v24.size.CGFloat height = v12;
        double MinY = CGRectGetMinY(v24);

        if (Height - MinY - v18 < 0.0) {
          double v21 = 0.0;
        }
        else {
          double v21 = Height - MinY - v18;
        }
        -[objc_class setAdditionalSafeAreaInsets:](to.super.super.isa, "setAdditionalSafeAreaInsets:", 0.0, 0.0, v21, 0.0);
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void KeyboardAvoidance.additionalSafeAreaInsets(for:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v5 = 0.0;
  if (![a1 isViewLoaded]
    || (id v6 = [a1 view]) == 0)
  {
    char v24 = 1;
LABEL_8:
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(double *)(a2 + 16) = v5;
    *(void *)(a2 + 24) = 0;
    *(unsigned char *)(a2 + 32) = v24;
    return;
  }
  double v7 = v6;
  [v6 convertRect:0 fromView:v2[4], v2[5], v2[6], v2[7]];
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  id v16 = [a1 view];
  if (v16)
  {
    double v17 = v16;
    [v16 safeAreaInsets];
    double v19 = v18;

    [a1 additionalSafeAreaInsets];
    double v21 = v19 - v20;
    [v7 frame];
    double Height = CGRectGetHeight(v25);
    v26.origin.x = v9;
    v26.origin.y = v11;
    v26.size.CGFloat width = v13;
    v26.size.CGFloat height = v15;
    double MinY = CGRectGetMinY(v26);

    char v24 = 0;
    if (Height - MinY - v21 < 0.0) {
      double v5 = 0.0;
    }
    else {
      double v5 = Height - MinY - v21;
    }
    goto LABEL_8;
  }
  __break(1u);
}

void KeyboardAvoidance.recommendedScrollRect(in:preferredVisibleRect:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = swift_allocObject();
  sub_1003A4034(a1, (uint64_t)v50);
  sub_100013A18((uint64_t)v50, (uint64_t)v53, &qword_10066FE68);
  if (v54 == 1)
  {
    swift_deallocUninitializedObject();
LABEL_12:
    char v38 = 1;
    CGFloat x = 0.0;
    CGFloat v34 = 0.0;
    CGFloat width = 0.0;
    double v39 = 0.0;
    goto LABEL_13;
  }
  long long v8 = v53[1];
  *(_OWORD *)(v7 + 16) = v53[0];
  *(_OWORD *)(v7 + 32) = v8;
  id v9 = [a1 contentScrollViewForEdge:1];
  if (!v9) {
    goto LABEL_11;
  }
  double v10 = v9;
  id v11 = [a1 view];
  if (v11)
  {
    double v12 = v11;
    id v13 = [v11 window];

    if (!v13
      || (id v14 = [v13 windowScene], v13, !v14)
      || (id v15 = [v14 screen], v14, !v15))
    {
      swift_release();

      goto LABEL_12;
    }
    *(void *)(v7 + 16) = 0;
    uint64_t v16 = swift_allocObject();
    [v10 bounds];
    CGFloat v18 = v17;
    double v20 = v19;
    CGFloat v22 = v21;
    *(double *)(v16 + 16) = v17;
    *(double *)(v16 + 24) = v19;
    *(double *)(v16 + 32) = v21;
    id v23 = [v15 coordinateSpace];
    double v24 = v3[4];
    double v25 = v3[5];
    double v26 = v3[6];
    double v27 = v3[7];
    id v28 = v10;
    [v23 convertRect:v28 toCoordinateSpace:v24 v25, v26, v27];
    double v30 = v29;

    swift_unknownObjectRelease();
    double v31 = v30 - v20;
    *(double *)(v16 + 40) = v30 - v20;
    v55.origin.CGFloat x = v18;
    v55.origin.CGFloat y = v20;
    v55.size.CGFloat width = v22;
    v55.size.CGFloat height = v30 - v20;
    double Height = CGRectGetHeight(v55);
    if (CGRectGetHeight(*(CGRect *)(v7 + 16)) > Height)
    {
      CGFloat x = *(double *)(v7 + 16);
      CGFloat v34 = *(double *)(v7 + 24);
      CGFloat width = *(double *)(v7 + 32);
      double v36 = *(double *)(v7 + 40);
      v56.origin.CGFloat x = v18;
      v56.origin.CGFloat y = v20;
      v56.size.CGFloat width = v22;
      v56.size.CGFloat height = v31;
      double v37 = CGRectGetHeight(v56);
      swift_release();
      swift_release();

      char v38 = 0;
      double v39 = v36 - v37;
LABEL_13:
      *(CGFloat *)a3 = x;
      *(CGFloat *)(a3 + 8) = v34;
      *(CGFloat *)(a3 + 16) = width;
      *(double *)(a3 + 24) = v39;
      *(unsigned char *)(a3 + 32) = v38;
      return;
    }
    sub_100013A18(a2, (uint64_t)&v51, &qword_10066FE68);
    if ((v52 & 1) == 0)
    {
      CGFloat y = v51.origin.y;
      CGRect v58 = CGRectUnion(*(CGRect *)(v7 + 16), v51);
      CGFloat x = v58.origin.x;
      CGFloat v34 = v58.origin.y;
      CGFloat width = v58.size.width;
      double v39 = v58.size.height;
      v58.origin.CGFloat x = v18;
      v58.origin.CGFloat y = v20;
      v58.size.CGFloat width = v22;
      v58.size.CGFloat height = v31;
      double v49 = CGRectGetHeight(v58);
      v59.origin.CGFloat x = x;
      v59.origin.CGFloat y = v34;
      v59.size.CGFloat width = width;
      v59.size.CGFloat height = v39;
      if (CGRectGetHeight(v59) <= v49)
      {
        v60.origin.CGFloat x = v18;
        v60.origin.CGFloat y = v20;
        v60.size.CGFloat width = v22;
        v60.size.CGFloat height = v31;
        double v44 = CGRectGetWidth(v60);
        v61.origin.CGFloat x = x;
        v61.origin.CGFloat y = v34;
        v61.size.CGFloat width = width;
        v61.size.CGFloat height = v39;
        if (CGRectGetWidth(v61) <= v44) {
          goto LABEL_22;
        }
      }
      CGFloat v43 = y;
LABEL_21:
      CGFloat x = sub_1003A4174(v7, v16, v28, v43);
      CGFloat v34 = v45;
      CGFloat width = v46;
      double v39 = v47;
LABEL_22:
      swift_release();

      swift_release();
      char v38 = 0;
      goto LABEL_13;
    }
    [v28 contentOffset];
    double v41 = v40;
    if (v40 > CGRectGetMinY(*(CGRect *)(v7 + 16))
      || (v57.origin.CGFloat x = v18,
          v57.origin.CGFloat y = v20,
          v57.size.CGFloat width = v22,
          v57.size.CGFloat height = v31,
          CGFloat v42 = v41 + CGRectGetHeight(v57),
          CGRectGetMaxY(*(CGRect *)(v7 + 16)) > v42))
    {
      CGFloat v43 = v41;
      goto LABEL_21;
    }
    swift_release();

LABEL_11:
    swift_release();
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t static KeyboardAvoidance.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if (CGRectEqualToRect(*(CGRect *)a1, *(CGRect *)a2)
    && CGRectEqualToRect(*(CGRect *)(a1 + 32), *(CGRect *)(a2 + 32))
    && *(double *)(a1 + 64) == *(double *)(a2 + 64)
    && *(void *)(a1 + 72) == *(void *)(a2 + 72))
  {
    char v4 = ((*(unsigned char *)(a1 + 80) & 1) == 0) ^ *(unsigned char *)(a2 + 80);
  }
  else
  {
    char v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_1003A3134(uint64_t a1, uint64_t a2)
{
  CGFloat v2 = *(double *)(a1 + 48);
  CGFloat v15 = *(double *)(a1 + 40);
  CGFloat v16 = *(double *)(a1 + 32);
  CGFloat v4 = *(double *)(a1 + 56);
  double v3 = *(double *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 72);
  int v6 = *(unsigned __int8 *)(a1 + 80);
  CGFloat v7 = *(double *)(a2 + 32);
  CGFloat v8 = *(double *)(a2 + 40);
  CGFloat v9 = *(double *)(a2 + 48);
  CGFloat v10 = *(double *)(a2 + 56);
  double v11 = *(double *)(a2 + 64);
  uint64_t v12 = *(void *)(a2 + 72);
  int v13 = *(unsigned __int8 *)(a2 + 80);
  uint64_t result = CGRectEqualToRect(*(CGRect *)a1, *(CGRect *)a2);
  if (result)
  {
    v17.origin.CGFloat y = v15;
    v17.origin.CGFloat x = v16;
    v17.size.CGFloat width = v2;
    v17.size.CGFloat height = v4;
    v18.origin.CGFloat x = v7;
    v18.origin.CGFloat y = v8;
    v18.size.CGFloat width = v9;
    v18.size.CGFloat height = v10;
    uint64_t result = CGRectEqualToRect(v17, v18);
    if (result)
    {
      uint64_t result = 0;
      if (v3 == v11)
      {
        if (v5 == v12) {
          return v6 ^ v13 ^ 1u;
        }
        else {
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t KeyboardObserver.update.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t KeyboardObserver.init(options:update:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_retain();
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_1003A358C(v6, a2, a3);
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_1003A32C0(uint64_t a1, uint64_t (*a2)(uint64_t, _OWORD *), uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_10052EF20();
  __chkstk_darwin(v7);
  CGFloat v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t))(v10 + 16))(v9, a1);
  sub_1003A3824((uint64_t)v9, (uint64_t)v12);
  uint64_t result = sub_100013A18((uint64_t)v12, (uint64_t)v13, &qword_10066FE60);
  if (v14 != 2)
  {
    void v15[2] = v13[2];
    uint64_t v15[3] = v13[3];
    void v15[4] = v13[4];
    char v16 = v14;
    v15[0] = v13[0];
    v15[1] = v13[1];
    return a2(a4, v15);
  }
  return result;
}

uint64_t sub_1003A3408(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  CGFloat v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_1003A34A8(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void *sub_1003A358C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v4)
  {
    sub_1005362C0();
    int64_t v6 = sub_1003A3408(v3);
    int v8 = v7;
    char v10 = v9 & 1;
    uint64_t v24 = v3 + 56;
    uint64_t result = self;
    id v22 = result;
    uint64_t v23 = v3;
    while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
    {
      if (((*(void *)(v24 + (((unint64_t)v6 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_11;
      }
      if (*(_DWORD *)(v3 + 36) != v8) {
        goto LABEL_12;
      }
      uint64_t v11 = *(char *)(*(void *)(v3 + 48) + v6);
      uint64_t v12 = *(void **)*(&off_100630F10 + v11);
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = a2;
      *(void *)(v13 + 24) = a3;
      *(unsigned char *)(v13 + 32) = v11;
      type metadata accessor for NotificationObserver();
      uint64_t v14 = swift_allocObject();
      swift_unknownObjectWeakInit();
      *(void *)(v14 + 16) = v12;
      swift_unknownObjectWeakAssign();
      *(unsigned char *)(v14 + 32) = 1;
      *(void *)(v14 + 48) = sub_1003A469C;
      *(void *)(v14 + 56) = v13;
      id v15 = v12;
      swift_retain();
      swift_retain();
      id v16 = [v22 defaultCenter];
      *(void *)(v14 + 40) = v16;
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      id v18 = v15;
      id v19 = v16;
      swift_retain();
      [v19 addObserver:v14 selector:"handleNotification:" name:v18 object:Strong];

      swift_release();
      swift_unknownObjectRelease();

      swift_release();
      sub_100536290();
      sub_1005362D0();
      uint64_t v3 = v23;
      sub_1005362E0();
      sub_1005362A0();
      uint64_t result = (void *)sub_1003A34A8(v6, v8, v10 & 1, v23);
      int64_t v6 = (int64_t)result;
      int v8 = v20;
      char v10 = v21 & 1;
      if (!--v4)
      {
        sub_1003A46A8((uint64_t)result, v20, v21 & 1);
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  return result;
}

uint64_t sub_1003A3824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10052EF10();
  if (!v4) {
    goto LABEL_32;
  }
  uint64_t v5 = v4;
  id v41 = (id)sub_100534CE0();
  sub_100536160();
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_1001AE410((uint64_t)v46), (v7 & 1) != 0))
  {
    sub_10009B1D4(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v47);
  }
  else
  {
    long long v47 = 0u;
    long long v48 = 0u;
  }
  sub_1001A20BC((uint64_t)v46);
  if (!*((void *)&v48 + 1)) {
    goto LABEL_29;
  }
  sub_100123DA4(0, (unint64_t *)&qword_10066E3E0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_31;
  }
  [v41 CGRectValue];
  uint64_t v40 = v8;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;

  id v42 = (id)sub_100534CE0();
  sub_100536160();
  if (*(void *)(v5 + 16) && (unint64_t v15 = sub_1001AE410((uint64_t)v46), (v16 & 1) != 0))
  {
    sub_10009B1D4(*(void *)(v5 + 56) + 32 * v15, (uint64_t)&v47);
  }
  else
  {
    long long v47 = 0u;
    long long v48 = 0u;
  }
  sub_1001A20BC((uint64_t)v46);
  if (!*((void *)&v48 + 1)) {
    goto LABEL_29;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_31;
  }
  [v42 CGRectValue];
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;

  id v43 = (id)sub_100534CE0();
  sub_100536160();
  if (*(void *)(v5 + 16) && (unint64_t v25 = sub_1001AE410((uint64_t)v46), (v26 & 1) != 0))
  {
    sub_10009B1D4(*(void *)(v5 + 56) + 32 * v25, (uint64_t)&v47);
  }
  else
  {
    long long v47 = 0u;
    long long v48 = 0u;
  }
  sub_1001A20BC((uint64_t)v46);
  if (!*((void *)&v48 + 1)) {
    goto LABEL_29;
  }
  sub_100123DA4(0, &qword_10066F078);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  [v43 floatValue];
  float v28 = v27;

  id v44 = (id)sub_100534CE0();
  sub_100536160();
  if (*(void *)(v5 + 16) && (unint64_t v29 = sub_1001AE410((uint64_t)v46), (v30 & 1) != 0))
  {
    sub_10009B1D4(*(void *)(v5 + 56) + 32 * v29, (uint64_t)&v47);
  }
  else
  {
    long long v47 = 0u;
    long long v48 = 0u;
  }
  sub_1001A20BC((uint64_t)v46);
  if (!*((void *)&v48 + 1))
  {
LABEL_29:
    swift_bridgeObjectRelease();
LABEL_30:
    sub_100356E50((uint64_t)&v47);
    goto LABEL_32;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_31;
  }
  id v31 = [v44 integerValue];

  id v45 = (id)sub_100534CE0();
  sub_100536160();
  if (*(void *)(v5 + 16) && (unint64_t v32 = sub_1001AE410((uint64_t)v46), (v33 & 1) != 0))
  {
    sub_10009B1D4(*(void *)(v5 + 56) + 32 * v32, (uint64_t)&v47);
  }
  else
  {
    long long v47 = 0u;
    long long v48 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1001A20BC((uint64_t)v46);
  if (!*((void *)&v48 + 1)) {
    goto LABEL_30;
  }
  if (swift_dynamicCast())
  {
    unsigned __int8 v37 = [v45 BOOLValue];

    double v38 = v28;
    uint64_t v39 = sub_10052EF20();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(a1, v39);
    uint64_t v36 = v40;
    goto LABEL_33;
  }
LABEL_32:
  uint64_t v34 = sub_10052EF20();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(a1, v34);
  id v31 = 0;
  uint64_t v36 = 0;
  uint64_t v10 = 0;
  unsigned __int8 v37 = 2;
  uint64_t v12 = 0;
  uint64_t v14 = 0;
  uint64_t v18 = 0;
  uint64_t v20 = 0;
  uint64_t v22 = 0;
  uint64_t v24 = 0;
  double v38 = 0.0;
LABEL_33:
  *(void *)a2 = v36;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v12;
  *(void *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = v18;
  *(void *)(a2 + 40) = v20;
  *(void *)(a2 + 48) = v22;
  *(void *)(a2 + 56) = v24;
  *(double *)(a2 + 64) = v38;
  *(void *)(a2 + 72) = v31;
  *(unsigned char *)(a2 + 80) = v37;
  return result;
}

uint64_t sub_1003A3D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003A3D2C()
{
  return swift_release();
}

uint64_t sub_1003A3D34()
{
  return swift_deallocObject();
}

void sub_1003A3D6C()
{
  unint64_t v1 = *(void **)(v0 + 104);
  KeyboardAvoidance.applyAdditionalSafeAreaInsets(to:)((UIViewController)v1);

  sub_1003A3DC0(v1);
}

uint64_t sub_1003A3DB0()
{
  return swift_deallocObject();
}

void sub_1003A3DC0(void *a1)
{
  id v1 = [a1 contentScrollView];
  if (v1)
  {
    id v29 = v1;
    id v2 = [v1 firstResponder];
    if (v2)
    {
      uint64_t v3 = v2;
      self;
      uint64_t v4 = swift_dynamicCastObjCClass();
      if (v4)
      {
        uint64_t v5 = (void *)v4;
        id v6 = v3;
        id v7 = [v5 superview];
        if (v7)
        {
          id v8 = v7;
          sub_100123DA4(0, (unint64_t *)&qword_10066F718);
          while (1)
          {
            id v9 = v8;
            id v10 = v29;
            char v11 = sub_100535D90();

            if (v11) {
              break;
            }
            self;
            if (swift_dynamicCastObjCClass() || (self, swift_dynamicCastObjCClass()))
            {
              id v9 = v9;

              uint64_t v5 = v9;
              break;
            }
            id v8 = [v9 superview];

            if (!v8) {
              goto LABEL_10;
            }
          }
        }
        else
        {
LABEL_10:
          id v9 = 0;
        }
        [v5 frame];
        double v13 = v12;
        double v15 = v14;
        double v17 = v16;
        double v19 = v18;
        id v20 = [v5 superview];
        [v29 convertRect:v20 fromView:v13, v15, v17, v19];
        double v22 = v21;
        double v24 = v23;
        double v26 = v25;
        double v28 = v27;

        [v29 scrollRectToVisible:0, v22, v24, v26, v28];
        id v29 = v5;
      }
    }
  }
}

void sub_1003A4034(void *a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = 1;
  id v4 = [a1 contentScrollViewForEdge:1];
  uint64_t v5 = 0;
  if (!v4) {
    goto LABEL_7;
  }
  id v6 = v4;
  id v7 = [v4 firstResponder];
  if (!v7)
  {
LABEL_6:

    char v3 = 1;
LABEL_7:
    uint64_t v22 = 0;
    uint64_t v24 = 0;
    uint64_t v26 = 0;
    goto LABEL_8;
  }
  id v8 = v7;
  self;
  id v9 = (void *)swift_dynamicCastObjCClass();
  if (!v9)
  {

    goto LABEL_6;
  }
  id v10 = v9;
  [v9 frame];
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;
  double v18 = v17;
  id v19 = [v10 superview];
  [v6 convertRect:v19 fromView:v12, v14, v16, v18];
  uint64_t v5 = v20;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;

  char v3 = 0;
LABEL_8:
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v22;
  *(void *)(a2 + 16) = v24;
  *(void *)(a2 + 24) = v26;
  *(unsigned char *)(a2 + 32) = v3;
}

double sub_1003A4174(uint64_t a1, uint64_t a2, void *a3, CGFloat a4)
{
  swift_beginAccess();
  double v8 = *(double *)(a1 + 16);
  swift_beginAccess();
  CGRectGetHeight(*(CGRect *)(a2 + 16));
  swift_beginAccess();
  CGRectGetHeight(*(CGRect *)(a1 + 16));
  swift_beginAccess();
  if (CGRectGetMinY(*(CGRect *)(a1 + 16)) > a4)
  {
    [a3 adjustedContentInset];
    swift_beginAccess();
    CGRectGetMaxY(*(CGRect *)(a1 + 16));
  }
  return v8;
}

unint64_t sub_1003A42B8()
{
  unint64_t result = qword_10066FE70;
  if (!qword_10066FE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10066FE70);
  }
  return result;
}

__n128 initializeWithCopy for KeyboardAvoidance(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for KeyboardAvoidance(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 81)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 80);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for KeyboardAvoidance(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 81) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 80) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyboardAvoidance()
{
  return &type metadata for KeyboardAvoidance;
}

uint64_t destroy for KeyboardObserver()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for KeyboardObserver(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for KeyboardObserver(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for KeyboardObserver(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for KeyboardObserver()
{
  return &type metadata for KeyboardObserver;
}

unsigned char *storeEnumTagSinglePayload for KeyboardObserver.Option(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003A462CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyboardObserver.Option()
{
  return &type metadata for KeyboardObserver.Option;
}

uint64_t sub_1003A4664()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003A469C(uint64_t a1)
{
  return sub_1003A32C0(a1, *(uint64_t (**)(uint64_t, _OWORD *))(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
}

uint64_t sub_1003A46A8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t Signpost.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100530860();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

id Signpost.log.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for Signpost() + 20));

  return v1;
}

uint64_t type metadata accessor for Signpost()
{
  uint64_t result = qword_10066FED8;
  if (!qword_10066FED8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t Signpost.name.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Signpost() + 24));
}

uint64_t Signpost.init(name:object:log:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X4>, char *a5@<X8>)
{
  int v30 = a3;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t v7 = sub_10000BB04(&qword_10066FE78);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  id v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  double v12 = (char *)&v27 - v11;
  uint64_t v13 = sub_100530860();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  double v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v19 = (char *)&v27 - v18;
  id v20 = a4;
  swift_unknownObjectRetain();
  sub_100530820();
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v12, v19, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  sub_1003A4C64((uint64_t)v12, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13) == 1)
  {
    id v21 = v20;
    sub_100530830();
    sub_1003A4CCC((uint64_t)v12);
    sub_1003A4CCC((uint64_t)v10);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(a5, v17, v13);
  }
  else
  {
    sub_1003A4CCC((uint64_t)v12);
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v22(v17, v10, v13);
    v22(a5, v17, v13);
  }
  swift_unknownObjectRelease();
  uint64_t v23 = type metadata accessor for Signpost();
  *(void *)&a5[*(int *)(v23 + 20)] = v20;
  uint64_t v24 = &a5[*(int *)(v23 + 24)];
  uint64_t v25 = v29;
  *(void *)uint64_t v24 = v28;
  *((void *)v24 + 1) = v25;
  v24[16] = v30;
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
}

uint64_t Signpost.init(name:id:log:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, void *a5@<X4>, unsigned char *a6@<X8>)
{
  int v23 = a3;
  uint64_t v11 = sub_10000BB04(&qword_10066FE78);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_100530860();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  double v17 = &v22[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1003A4C64(a4, (uint64_t)v13);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    id v18 = a5;
    sub_100530830();
    sub_1003A4CCC(a4);
    sub_1003A4CCC((uint64_t)v13);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 32))(a6, v17, v14);
  }
  else
  {
    sub_1003A4CCC(a4);
    id v19 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 32);
    v19(v17, v13, v14);
    v19(a6, v17, v14);
  }
  uint64_t result = type metadata accessor for Signpost();
  *(void *)&a6[*(int *)(result + 20)] = a5;
  id v21 = &a6[*(int *)(result + 24)];
  *(void *)id v21 = a1;
  *((void *)v21 + 1) = a2;
  v21[16] = v23;
  return result;
}

uint64_t sub_1003A4C64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000BB04(&qword_10066FE78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003A4CCC(uint64_t a1)
{
  uint64_t v2 = sub_10000BB04(&qword_10066FE78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Signpost.emit(dso:)(uint64_t a1)
{
  return sub_1003A4DA4(a1, (void (*)(void))&static os_signpost_type_t.event.getter);
}

uint64_t Signpost.emit(dso:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1003A4E28(a1, a2, a3, a4, a5, (void (*)(void))&static os_signpost_type_t.event.getter);
}

uint64_t Signpost.begin(dso:)(uint64_t a1)
{
  return sub_1003A4DA4(a1, (void (*)(void))&static os_signpost_type_t.begin.getter);
}

uint64_t Signpost.begin(dso:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1003A4E28(a1, a2, a3, a4, a5, (void (*)(void))&static os_signpost_type_t.begin.getter);
}

uint64_t Signpost.end(dso:)(uint64_t a1)
{
  return sub_1003A4DA4(a1, (void (*)(void))&static os_signpost_type_t.end.getter);
}

uint64_t sub_1003A4DA4(uint64_t a1, void (*a2)(void))
{
  a2();
  type metadata accessor for Signpost();

  return sub_100530810();
}

uint64_t Signpost.end(dso:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1003A4E28(a1, a2, a3, a4, a5, (void (*)(void))&static os_signpost_type_t.end.getter);
}

uint64_t sub_1003A4E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  return sub_100530800();
}

uint64_t static Signpost.interval<A>(name:log:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, void (*a5)(uint64_t)@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  v31[2] = a6;
  unint64_t v32 = a5;
  int v34 = a3;
  uint64_t v33 = a2;
  v31[1] = a7;
  uint64_t v9 = sub_100530860();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000BB04(&qword_10066FE78);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v18 = (char *)v31 - v17;
  uint64_t v19 = type metadata accessor for Signpost();
  __chkstk_darwin(v19);
  id v21 = (char *)v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v18, 1, 1, v9);
  sub_1003A4C64((uint64_t)v18, (uint64_t)v16);
  int v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v16, 1, v9);
  id v23 = a4;
  id v24 = v23;
  if (v22 == 1)
  {
    id v25 = v23;
    sub_100530830();
    sub_1003A4CCC((uint64_t)v18);
    sub_1003A4CCC((uint64_t)v16);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v21, v12, v9);
  }
  else
  {
    sub_1003A4CCC((uint64_t)v18);
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v26(v12, v16, v9);
    v26(v21, v12, v9);
  }
  *(void *)&v21[*(int *)(v19 + 20)] = v24;
  uint64_t v27 = &v21[*(int *)(v19 + 24)];
  uint64_t v28 = v33;
  *(void *)uint64_t v27 = a1;
  *((void *)v27 + 1) = v28;
  v27[16] = v34;
  sub_100535A30();
  uint64_t v29 = sub_100530810();
  v32(v29);
  sub_100535A20();
  sub_100530810();
  return sub_1001D344C((uint64_t)v21);
}

uint64_t *initializeBufferWithCopyOfBuffer for Signpost(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100530860();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    uint64_t v11 = (char *)a1 + v9;
    uint64_t v12 = (char *)a2 + v9;
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    v11[16] = v12[16];
    id v13 = v10;
  }
  return a1;
}

void destroy for Signpost(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100530860();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = *(void **)(a1 + *(int *)(a2 + 20));
}

uint64_t initializeWithCopy for Signpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100530860();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *(unsigned char *)(v10 + 16) = *(unsigned char *)(v11 + 16);
  id v12 = v9;
  return a1;
}

uint64_t assignWithCopy for Signpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100530860();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  *(void *)(v12 + 8) = *(void *)(v13 + 8);
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  return a1;
}

uint64_t initializeWithTake for Signpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100530860();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  return a1;
}

uint64_t assignWithTake for Signpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100530860();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *(unsigned char *)(v10 + 16) = *(unsigned char *)(v11 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for Signpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003A557C);
}

uint64_t sub_1003A557C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100530860();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for Signpost(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003A5650);
}

uint64_t sub_1003A5650(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100530860();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1003A570C()
{
  uint64_t result = sub_100530860();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void UnfairLock.locked<A>(_:)(void (*a1)(void))
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  a1();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
}

uint64_t UnfairLock.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = (_DWORD *)swift_slowAlloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = 0;
  return v0;
}

uint64_t UnfairLock.init()()
{
  uint64_t v1 = (_DWORD *)swift_slowAlloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = 0;
  return v0;
}

uint64_t UnfairLock.deinit()
{
  swift_slowDealloc();
  return v0;
}

uint64_t UnfairLock.__deallocating_deinit()
{
  swift_slowDealloc();

  return swift_deallocClassInstance();
}

Swift::Void __swiftcall UnfairLock.assertOwned()()
{
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v0 + 16));
}

Swift::Void __swiftcall UnfairLock.assertNotOwned()()
{
  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(v0 + 16));
}

uint64_t type metadata accessor for UnfairLock()
{
  return self;
}

uint64_t WeakArray.endIndex.getter()
{
  type metadata accessor for WeakArray.WeakBox();

  return sub_1005351F0();
}

uint64_t type metadata accessor for WeakArray.WeakBox()
{
  return sub_100086CCC();
}

uint64_t WeakArray.subscript.getter()
{
  uint64_t v0 = type metadata accessor for WeakArray.WeakBox();
  sub_100535220();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  (*(void (**)(unsigned char *, uint64_t))(*(void *)(v0 - 8) + 8))(v3, v0);
  return Strong;
}

{
  char v0;
  uint64_t result;

  type metadata accessor for WeakArray.WeakBox();
  sub_100535200();
  swift_getWitnessTable();
  sub_100535550();
  sub_10000BB04(&qword_10066F040);
  uint64_t v0 = sub_1005356C0();
  uint64_t result = 0;
  if (v0) {
    return WeakArray.subscript.getter();
  }
  return result;
}

Swift::Int __swiftcall WeakArray.index(after:)(Swift::Int after)
{
  BOOL v1 = __OFADD__(after, 1);
  Swift::Int result = after + 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t WeakArray.init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8[5] = a1;
  v8[2] = a2;
  uint64_t v2 = sub_100535200();
  uint64_t v3 = type metadata accessor for WeakArray.WeakBox();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v6 = sub_1003619B4((void (*)(char *, char *))sub_1003A5C20, (uint64_t)v8, v2, v3, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1003A5BD0()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1003A5C20()
{
  return sub_1003A5BD0();
}

uint64_t WeakArray.append(_:)()
{
  return sub_1005351C0();
}

uint64_t WeakArray.remove(at:)()
{
  uint64_t v0 = type metadata accessor for WeakArray.WeakBox();
  sub_100535200();
  sub_1005351E0();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  (*(void (**)(unsigned char *, uint64_t))(*(void *)(v0 - 8) + 8))(v3, v0);
  return Strong;
}

uint64_t WeakArray.remove(_:)()
{
  return sub_1005356A0();
}

Swift::Void __swiftcall WeakArray.reap()()
{
}

uint64_t sub_1003A5EE0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    swift_unknownObjectRelease();
    return v3 == v1;
  }
  return result;
}

BOOL sub_1003A5F28()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong) {
    swift_unknownObjectRelease();
  }
  return Strong == 0;
}

uint64_t WeakArray.allElements.getter()
{
  return sub_100534FA0();
}

uint64_t sub_1003A5FF8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_unknownObjectRetain();
}

uint64_t type metadata accessor for WeakArray()
{
  return sub_100086CCC();
}

uint64_t sub_1003A6030()
{
  return swift_getWitnessTable();
}

void *sub_1003A604C()
{
  return &protocol witness table for Int;
}

uint64_t sub_1003A6058()
{
  return swift_getWitnessTable();
}

uint64_t sub_1003A6074()
{
  return swift_getWitnessTable();
}

uint64_t sub_1003A6090@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = WeakArray.endIndex.getter();
  *a1 = result;
  return result;
}

void (*sub_1003A60C4(uint64_t **a1))(void *a1)
{
  uint64_t v2 = (uint64_t *)malloc(0x30uLL);
  *a1 = v2;
  uint64_t v3 = sub_1003A6184(v2);
  v2[4] = v4;
  v2[5] = (uint64_t)v3;
  return sub_1003A613C;
}

void sub_1003A613C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 40))(*a1);

  free(v1);
}

uint64_t (*sub_1003A6184(uint64_t *a1))()
{
  *a1 = WeakArray.subscript.getter();
  return sub_10018C6E0;
}

void sub_1003A61E4(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t sub_1003A6200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003A659C(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for Range, (uint64_t (*)(char *, char *, uint64_t, uint64_t))&dispatch thunk of static Comparable.< infix(_:_:));
}

uint64_t sub_1003A6240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003A659C(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ClosedRange, (uint64_t (*)(char *, char *, uint64_t, uint64_t))&dispatch thunk of static Comparable.<= infix(_:_:));
}

void *sub_1003A6284@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    *a2 = *result + 1;
  }
  return result;
}

void *sub_1003A629C(void *result)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    ++*result;
  }
  return result;
}

uint64_t sub_1003A62B4()
{
  return swift_getWitnessTable();
}

void sub_1003A62D0(void *a1@<X8>)
{
  *a1 = *v1;
  a1[1] = 0;
}

uint64_t sub_1003A62DC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return Collection.underestimatedCount.getter(a1, WitnessTable);
}

uint64_t sub_1003A6330()
{
  swift_getWitnessTable();
  uint64_t v0 = sub_1003A6598();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1003A638C(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_1005356D0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v17 - v10;
  v17[1] = AssociatedConformanceWitness;
  LOBYTE(AssociatedConformanceWitness) = sub_100534BD0();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12(v11, a1, v5);
  v12(v9, a2, v5);
  if ((AssociatedConformanceWitness & 1) == 0)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16(v9, v5);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v16)(v11, v5);
    goto LABEL_5;
  }
  char v13 = sub_100534BD0();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
  if ((v13 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_1003A659C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  id v23 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v22 - v14;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v13);
  id v18 = (char *)&v22 - v17;
  char v19 = sub_100534BD0();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
    goto LABEL_5;
  }
  char v20 = v23(v18, &v15[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
  if ((v20 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t WeakValuesDictionary.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  WeakValuesDictionary.init()();
  return v0;
}

uint64_t WeakValuesDictionary.init()()
{
  sub_100351D00();
  swift_getTupleTypeMetadata2();
  sub_100535160();
  *(void *)(v0 + 16) = sub_100534AE0();
  return v0;
}

uint64_t WeakValuesDictionary.subscript.getter()
{
  swift_beginAccess();
  sub_100351D00();
  swift_bridgeObjectRetain();
  sub_100534B10();
  swift_bridgeObjectRelease();
  if (v3[0])
  {
    if ([v3[0] weakObjectValue])
    {
      sub_100536090();

      swift_unknownObjectRelease();
    }
    else
    {

      memset(v2, 0, sizeof(v2));
    }
    sub_100356DE8((uint64_t)v2, (uint64_t)v3);
    if (v3[3])
    {
      if (swift_dynamicCast()) {
        return v1;
      }
    }
    else
    {
      sub_100356E50((uint64_t)v3);
    }
  }
  return 0;
}

void WeakValuesDictionary.subscript.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(*(void *)v2 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  if (__chkstk_darwin(a1))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v10 - v7, a2, v5);
    uint64_t v10 = a1;
    swift_unknownObjectRetain();
    uint64_t v8 = sub_100536770();
    id v9 = [self valueWithWeakObject:v8];
    swift_unknownObjectRelease();
    id v11 = v9;
    swift_beginAccess();
    sub_100351D00();
    sub_100534AF0();
    sub_100534B20();
    swift_endAccess();
    swift_unknownObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v5);
  }
  else
  {
    swift_beginAccess();
    sub_100351D00();
    sub_100534AF0();
    sub_100534AD0();
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v5);
  }
}

void (*WeakValuesDictionary.subscript.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[1] = v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  v3[2] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  v3[3] = v5;
  size_t v7 = *(void *)(v5 + 64);
  id v3[4] = malloc(v7);
  v3[5] = malloc(v7);
  (*(void (**)(void))(v6 + 16))();
  *uint64_t v3 = WeakValuesDictionary.subscript.getter();
  return sub_1003A6DAC;
}

void sub_1003A6DAC(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[4];
  uint64_t v4 = (void *)(*a1)[5];
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v2[3] + 32))((*a1)[4], v4, v2[2]);
    uint64_t v5 = swift_unknownObjectRetain();
    WeakValuesDictionary.subscript.setter(v5, (uint64_t)v3);
    swift_unknownObjectRelease();
  }
  else
  {
    WeakValuesDictionary.subscript.setter(**a1, (uint64_t)v4);
  }
  free(v4);
  free(v3);

  free(v2);
}

Swift::Void __swiftcall WeakValuesDictionary.compact()()
{
  uint64_t v65 = *v0;
  uint64_t v1 = *(void *)(v65 + 80);
  uint64_t v56 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v50 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  CGRect v58 = (char *)&v45 - v3;
  uint64_t v46 = v4;
  __chkstk_darwin();
  CGRect v60 = (char *)&v45 - v5;
  unint64_t v53 = sub_100351D00();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v63 = sub_100535F20();
  uint64_t v7 = *(void *)(v63 - 8);
  __chkstk_darwin();
  id v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v11 = (char *)&v45 - v10;
  uint64_t v70 = sub_100535160();
  double v49 = v0 + 2;
  swift_beginAccess();
  unint64_t v12 = v0[2];
  if ((v12 & 0xC000000000000001) != 0)
  {
    uint64_t v13 = sub_1005363A0();
    unint64_t v51 = 0;
    uint64_t v14 = 0;
    unint64_t v15 = 0;
    unint64_t v16 = v13 | 0x8000000000000000;
  }
  else
  {
    uint64_t v17 = -1 << *(unsigned char *)(v12 + 32);
    uint64_t v14 = ~v17;
    uint64_t v18 = *(void *)(v12 + 64);
    unint64_t v51 = v12 + 64;
    uint64_t v19 = -v17;
    if (v19 < 64) {
      uint64_t v20 = ~(-1 << v19);
    }
    else {
      uint64_t v20 = -1;
    }
    unint64_t v15 = v20 & v18;
    unint64_t v16 = v12;
  }
  uint64_t v55 = v16 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v61 = TupleTypeMetadata2 - 8;
  uint64_t v48 = v14;
  uint64_t v67 = (void (**)(char *, char *, uint64_t))(v56 + 16);
  uint64_t v62 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  CGRect v59 = (void (**)(char *, char *, uint64_t))(v56 + 32);
  uint64_t v66 = (void (**)(char *, uint64_t))(v56 + 8);
  int64_t v54 = (unint64_t)(v14 + 64) >> 6;
  int64_t v47 = v54 - 1;
  swift_bridgeObjectRetain();
  int64_t v21 = 0;
  CGRect v57 = (char *)&type metadata for Any + 8;
  char v52 = (char *)&type metadata for Swift.AnyObject + 8;
  for (i = v16; ; unint64_t v16 = i)
  {
    if ((v16 & 0x8000000000000000) != 0)
    {
      if (sub_1005363D0())
      {
        uint64_t v30 = v29;
        sub_100536750();
        swift_unknownObjectRelease();
        uint64_t v31 = *(int *)(TupleTypeMetadata2 + 48);
        *(void *)&v68[0] = v30;
        swift_unknownObjectRetain();
        swift_dynamicCast();
        uint64_t v32 = v69[0];
        swift_unknownObjectRelease();
        *(void *)&v9[v31] = v32;
        uint64_t v26 = *(void *)(TupleTypeMetadata2 - 8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v9, 0, 1, TupleTypeMetadata2);
      }
      else
      {
        uint64_t v26 = *(void *)(TupleTypeMetadata2 - 8);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v9, 1, 1, TupleTypeMetadata2);
      }
      int64_t v28 = v21;
      uint64_t v22 = v15;
    }
    else
    {
      if (v15)
      {
        uint64_t v22 = (v15 - 1) & v15;
        unint64_t v23 = __clz(__rbit64(v15)) | (v21 << 6);
        int64_t v24 = v21;
LABEL_14:
        (*(void (**)(char *, unint64_t, uint64_t))(v56 + 16))(v9, *(void *)(v16 + 48) + *(void *)(v56 + 72) * v23, v1);
        id v25 = *(void **)(*(void *)(v16 + 56) + 8 * v23);
        *(void *)&v9[*(int *)(TupleTypeMetadata2 + 48)] = v25;
        uint64_t v26 = *(void *)(TupleTypeMetadata2 - 8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v9, 0, 1, TupleTypeMetadata2);
        id v27 = v25;
        int64_t v28 = v24;
        goto LABEL_35;
      }
      int64_t v24 = v21 + 1;
      if (__OFADD__(v21, 1))
      {
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
        return;
      }
      int64_t v28 = v21;
      if (v24 < v54)
      {
        unint64_t v33 = *(void *)(v51 + 8 * v24);
        unint64_t v16 = i;
        if (v33) {
          goto LABEL_20;
        }
        int64_t v28 = v21 + 1;
        if (v21 + 2 < v54)
        {
          unint64_t v33 = *(void *)(v51 + 8 * (v21 + 2));
          unint64_t v16 = i;
          if (v33)
          {
            int64_t v24 = v21 + 2;
LABEL_20:
            uint64_t v22 = (v33 - 1) & v33;
            unint64_t v23 = __clz(__rbit64(v33)) + (v24 << 6);
            goto LABEL_14;
          }
          int64_t v34 = v21 + 3;
          int64_t v28 = v21 + 2;
          if (v21 + 3 < v54)
          {
            unint64_t v33 = *(void *)(v51 + 8 * v34);
            unint64_t v16 = i;
            if (v33)
            {
              int64_t v24 = v21 + 3;
              goto LABEL_20;
            }
            while (1)
            {
              int64_t v24 = v34 + 1;
              if (__OFADD__(v34, 1)) {
                goto LABEL_54;
              }
              if (v24 >= v54) {
                break;
              }
              unint64_t v33 = *(void *)(v51 + 8 * v24);
              ++v34;
              if (v33) {
                goto LABEL_20;
              }
            }
            int64_t v28 = v47;
          }
        }
      }
      uint64_t v26 = *(void *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v9, 1, 1, TupleTypeMetadata2);
      uint64_t v22 = 0;
    }
LABEL_35:
    (*v62)(v11, v9, v63);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v11, 1, TupleTypeMetadata2) == 1) {
      break;
    }
    uint64_t v35 = *(void **)&v11[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v36 = v60;
    (*v59)(v60, v11, v1);
    if ([v35 weakObjectValue])
    {
      sub_100536090();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v68, 0, sizeof(v68));
    }
    sub_100356DE8((uint64_t)v68, (uint64_t)v69);
    if (!v69[3])
    {
      sub_100356E50((uint64_t)v69);
LABEL_9:
      (*v67)(v58, v36, v1);
      sub_100535200();
      sub_1005351C0();

      goto LABEL_10;
    }
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_9;
    }

    swift_unknownObjectRelease();
LABEL_10:
    (*v66)(v36, v1);
    int64_t v21 = v28;
    unint64_t v15 = v22;
  }
  sub_100206FC4();
  uint64_t v37 = v70;
  uint64_t v38 = sub_1005351F0();
  uint64_t v39 = v56;
  uint64_t v40 = v50;
  if (!v38) {
    goto LABEL_52;
  }
  uint64_t v41 = 0;
  while (2)
  {
    BOOL v42 = sub_100535180();
    sub_100535120();
    if (v42)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v39 + 16))(v40, v37+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v41, v1);
      uint64_t v43 = v41 + 1;
      if (__OFADD__(v41, 1)) {
        break;
      }
      goto LABEL_46;
    }
    uint64_t v44 = sub_100536200();
    if (v46 != 8) {
      goto LABEL_55;
    }
    v69[0] = v44;
    (*v67)(v40, (char *)v69, v1);
    swift_unknownObjectRelease();
    uint64_t v43 = v41 + 1;
    if (!__OFADD__(v41, 1))
    {
LABEL_46:
      swift_beginAccess();
      sub_100534AF0();
      sub_100534AD0();
      swift_endAccess();

      (*v66)(v40, v1);
      ++v41;
      if (v43 == sub_1005351F0()) {
        goto LABEL_52;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_52:
  swift_bridgeObjectRelease();
}

uint64_t WeakValuesDictionary.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1003A7834()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for WeakValuesDictionary()
{
  return sub_100086CCC();
}

void sub_1003A80A8(id a1)
{
  uint64_t v1 = objc_alloc_init(MusicMonogramArtworkDataSource);
  uint64_t v2 = (void *)qword_100697120;
  qword_100697120 = (uint64_t)v1;
}

void sub_1003A8138(id a1)
{
  uint64_t v3 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_USER_INTERACTIVE, 0);
  dispatch_queue_t v1 = dispatch_queue_create("com.apple.Music.MusicMonogramArtworkDataSource.loadingQueue", v3);
  uint64_t v2 = (void *)qword_100697130;
  qword_100697130 = (uint64_t)v1;
}

void sub_1003A8294(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) token];
  [*(id *)(a1 + 32) fittingSize];
  double v4 = v3;
  double v6 = v5;
  [*(id *)(a1 + 32) destinationScale];
  double v8 = v7;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1003A8390;
  v10[3] = &unk_1006310E0;
  id v9 = *(void **)(a1 + 40);
  id v11 = *(id *)(a1 + 32);
  double v13 = v4;
  double v14 = v6;
  id v12 = *(id *)(a1 + 48);
  [v9 _monogramImageForToken:v2 fittingSize:v10 scale:v4 completionHandler:v6];
}

void sub_1003A8390(uint64_t a1, void *a2)
{
  double v3 = *(void **)(a1 + 32);
  id v4 = a2;
  double v5 = [v3 visualIdenticalityIdentifier];
  +[MPArtworkRepresentation representationForVisualIdentity:withSize:image:](MPArtworkRepresentation, "representationForVisualIdentity:withSize:image:", v5, v4, *(double *)(a1 + 48), *(double *)(a1 + 56));
  id v6 = (id)objc_claimAutoreleasedReturnValue();

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1003A8888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_1003A892C(uint64_t a1)
{
  sub_1003A8984();
  Class result = objc_getClass("CNAvatarImageRenderer");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_1003A93E8();
  }
  qword_100697140 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1003A8984()
{
  v0[0] = 0;
  if (!qword_100697148)
  {
    v0[1] = _NSConcreteStackBlock;
    v0[2] = (void *)3221225472;
    v0[3] = sub_1003A8A78;
    v0[4] = &unk_100631168;
    v0[5] = v0;
    long long v1 = off_100631150;
    uint64_t v2 = 0;
    qword_100697148 = _sl_dlopen();
  }
  if (!qword_100697148) {
    sub_1003A9464(v0);
  }
  if (v0[0]) {
    free(v0[0]);
  }
}

uint64_t sub_1003A8A78()
{
  uint64_t result = _sl_dlopen();
  qword_100697148 = result;
  return result;
}

Class sub_1003A8AEC(uint64_t a1)
{
  sub_1003A8984();
  Class result = objc_getClass("CNAvatarImageRendererSettings");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_1003A94E4();
  }
  qword_100697150 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class sub_1003A8B44(uint64_t a1)
{
  sub_1003A8984();
  Class result = objc_getClass("CNAvatarImageRenderingScope");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_1003A9560();
  }
  qword_100697158 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class sub_1003A8B9C(uint64_t a1)
{
  v3[0] = 0;
  if (!qword_100697168)
  {
    v3[1] = _NSConcreteStackBlock;
    v3[2] = (void *)3221225472;
    v3[3] = sub_1003A8CC8;
    id v3[4] = &unk_100631168;
    v3[5] = v3;
    long long v4 = off_100631188;
    uint64_t v5 = 0;
    qword_100697168 = _sl_dlopen();
  }
  if (!qword_100697168) {
    sub_1003A95DC(v3);
  }
  if (v3[0]) {
    free(v3[0]);
  }
  Class result = objc_getClass("CNContact");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_1003A965C();
  }
  qword_100697160 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1003A8CC8()
{
  uint64_t result = _sl_dlopen();
  qword_100697168 = result;
  return result;
}

id sub_1003A8E00(uint64_t a1, void *a2)
{
  return _[a2 darwinNotificationReceived];
}

void sub_1003A908C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_1003A90A8(uint64_t a1)
{
  v3[0] = 0;
  if (!qword_100697178)
  {
    v3[1] = _NSConcreteStackBlock;
    v3[2] = (void *)3221225472;
    v3[3] = sub_1003A91D4;
    id v3[4] = &unk_100631168;
    v3[5] = v3;
    long long v4 = off_1006311A0;
    uint64_t v5 = 0;
    qword_100697178 = _sl_dlopen();
  }
  if (!qword_100697178) {
    sub_1003A96D8(v3);
  }
  if (v3[0]) {
    free(v3[0]);
  }
  Class result = objc_getClass("AFPreferences");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_1003A9758();
  }
  qword_100697170 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1003A91D4()
{
  uint64_t result = _sl_dlopen();
  qword_100697178 = result;
  return result;
}

Class sub_1003A9248(uint64_t a1)
{
  v3[0] = 0;
  if (!qword_100697188)
  {
    v3[1] = _NSConcreteStackBlock;
    v3[2] = (void *)3221225472;
    v3[3] = sub_1003A9374;
    id v3[4] = &unk_100631168;
    v3[5] = v3;
    long long v4 = off_1006311B8;
    uint64_t v5 = 0;
    qword_100697188 = _sl_dlopen();
  }
  if (!qword_100697188) {
    sub_1003A97D4(v3);
  }
  if (v3[0]) {
    free(v3[0]);
  }
  Class result = objc_getClass("VTPreferences");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_1003A9854();
  }
  qword_100697180 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1003A9374()
{
  uint64_t result = _sl_dlopen();
  qword_100697188 = result;
  return result;
}

void sub_1003A93E8()
{
  uint64_t v0 = +[NSAssertionHandler currentHandler];
  long long v1 = +[NSString stringWithUTF8String:"Class getCNAvatarImageRendererClass(void)_block_invoke"];
  [v0 handleFailureInFunction:v1 file:@"MonogramArtworkDataSource.m" lineNumber:21 description:@"Unable to find class %s" @"CNAvatarImageRenderer"];

  __break(1u);
}

void sub_1003A9464(void *a1)
{
  uint64_t v2 = +[NSAssertionHandler currentHandler];
  double v3 = +[NSString stringWithUTF8String:"void *ContactsUILibrary(void)"];
  [v2 handleFailureInFunction:v3 file:@"MonogramArtworkDataSource.m" lineNumber:20 description:@"%s" *a1];

  __break(1u);
}

void sub_1003A94E4()
{
  uint64_t v0 = +[NSAssertionHandler currentHandler];
  long long v1 = +[NSString stringWithUTF8String:"Class getCNAvatarImageRendererSettingsClass(void)_block_invoke"];
  [v0 handleFailureInFunction:v1 file:@"MonogramArtworkDataSource.m" lineNumber:23 description:@"Unable to find class %s" "CNAvatarImageRendererSettings"];

  __break(1u);
}

void sub_1003A9560()
{
  uint64_t v0 = +[NSAssertionHandler currentHandler];
  long long v1 = +[NSString stringWithUTF8String:"Class getCNAvatarImageRenderingScopeClass(void)_block_invoke"];
  [v0 handleFailureInFunction:v1 file:@"MonogramArtworkDataSource.m" lineNumber:22 description:@"Unable to find class %s" @"CNAvatarImageRenderingScope"];

  __break(1u);
}

void sub_1003A95DC(void *a1)
{
  uint64_t v2 = +[NSAssertionHandler currentHandler];
  double v3 = +[NSString stringWithUTF8String:"void *ContactsLibrary(void)"];
  [v2 handleFailureInFunction:v3 file:@"MonogramArtworkDataSource.m" lineNumber:28 description:@"%s" *a1];

  __break(1u);
}

void sub_1003A965C()
{
  uint64_t v0 = +[NSAssertionHandler currentHandler];
  long long v1 = +[NSString stringWithUTF8String:"Class getCNContactClass(void)_block_invoke"];
  [v0 handleFailureInFunction:v1 file:@"MonogramArtworkDataSource.m" lineNumber:29 description:@"Unable to find class %s" "CNContact"];

  __break(1u);
}

void sub_1003A96D8(void *a1)
{
  uint64_t v2 = +[NSAssertionHandler currentHandler];
  double v3 = +[NSString stringWithUTF8String:"void *AssistantServicesLibrary(void)"];
  [v2 handleFailureInFunction:v3 file:@"MusicSiriUtilities.m" lineNumber:16 description:@"%s" *a1];

  __break(1u);
}

void sub_1003A9758()
{
  uint64_t v0 = +[NSAssertionHandler currentHandler];
  long long v1 = +[NSString stringWithUTF8String:"Class getAFPreferencesClass(void)_block_invoke"];
  [v0 handleFailureInFunction:v1 file:@"MusicSiriUtilities.m" lineNumber:17 description:@"Unable to find class %s" AFPreferences];

  __break(1u);
}

void sub_1003A97D4(void *a1)
{
  uint64_t v2 = +[NSAssertionHandler currentHandler];
  double v3 = +[NSString stringWithUTF8String:"void *VoiceTriggerLibrary(void)"];
  [v2 handleFailureInFunction:v3 file:@"MusicSiriUtilities.m" lineNumber:19 description:@"%s" *a1];

  __break(1u);
}

void sub_1003A9854()
{
  uint64_t v0 = +[NSAssertionHandler currentHandler];
  long long v1 = +[NSString stringWithUTF8String:"Class getVTPreferencesClass(void)_block_invoke"];
  [v0 handleFailureInFunction:v1 file:@"MusicSiriUtilities.m" lineNumber:20 description:@"Unable to find class %s" "VTPreferences"];

  __break(1u);
}

uint64_t sub_1003A98D0()
{
  uint64_t result = sub_1003A98F0();
  qword_10067B320 = result;
  return result;
}

uint64_t sub_1003A98F0()
{
  uint64_t v0 = sub_10052F360();
  CGRect v58 = *(void (***)(char *, uint64_t))(v0 - 8);
  long long v1 = v58;
  __chkstk_darwin();
  CGRect v57 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = *(void *)(sub_10000BB04(&qword_100670C90) - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  double v7 = (char *)&v51 - v6;
  __chkstk_darwin();
  uint64_t v56 = (char *)&v51 - v8;
  __chkstk_darwin();
  int64_t v54 = (char *)&v51 - v9;
  __chkstk_darwin();
  id v11 = (char *)&v51 - v10;
  unint64_t v53 = sub_1003D12A4((uint64_t)_swiftEmptyArrayStorage);
  sub_10000BB04(&qword_100670C98);
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v60 = *(void *)(v3 + 72);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10053D3F0;
  size_t v51 = v13;
  unint64_t v52 = v12;
  uint64_t v14 = v13 + v12;
  unint64_t v15 = self;
  id v16 = [v15 mainBundle];
  id v17 = [v16 resourceURL];

  unint64_t v59 = (unint64_t)v1;
  if (v17)
  {
    sub_10052F300();

    uint64_t v18 = v1[7];
    uint64_t v19 = v11;
    uint64_t v20 = 0;
  }
  else
  {
    uint64_t v18 = v1[7];
    uint64_t v19 = v11;
    uint64_t v20 = 1;
  }
  uint64_t v61 = v18;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v19, v20, 1, v0);
  sub_1003ADB44((uint64_t)v11, v14);
  type metadata accessor for BundleFinder();
  id v21 = [v15 bundleForClass:swift_getObjCClassFromMetadata()];
  id v22 = [v21 resourceURL];

  if (v22)
  {
    uint64_t v23 = (uint64_t)v54;
    sub_10052F300();

    unint64_t v24 = (unint64_t)(v58 + 7) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    id v25 = (char *)v23;
    uint64_t v26 = 0;
  }
  else
  {
    unint64_t v24 = (unint64_t)(v58 + 7) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v23 = (uint64_t)v54;
    id v25 = v54;
    uint64_t v26 = 1;
  }
  id v27 = v61;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v61)(v25, v26, 1, v0);
  uint64_t v28 = v60;
  sub_1003ADB44(v23, v14 + v60);
  id v29 = [v15 mainBundle];
  id v30 = [v29 bundleURL];

  uint64_t v31 = v57;
  sub_10052F300();

  unint64_t v32 = v59 + 32;
  int64_t v54 = *(char **)(v59 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v54)(v14 + 2 * v28, v31, v0);
  unint64_t v59 = v24;
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v27)(v14 + 2 * v28, 0, 1, v0);
  size_t v62 = (size_t)v53;
  sub_100479E90(v51);
  uint64_t v33 = *(void *)(v62 + 16);
  if (v33)
  {
    size_t v51 = v62;
    uint64_t v34 = v62 + v52;
    uint64_t v35 = (unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 6);
    ++v58;
    unint64_t v53 = (void *)0x8000000100566750;
    uint64_t v36 = (uint64_t)v56;
    uint64_t v55 = v7;
    do
    {
      sub_100013720(v34, (uint64_t)v7, &qword_100670C90);
      uint64_t v37 = *v35;
      if ((*v35)(v7, 1, v0) == 1)
      {
        sub_1003ADBAC((uint64_t)v7);
        uint64_t v38 = 1;
      }
      else
      {
        sub_10052F2D0();
        (*v58)(v7, v0);
        uint64_t v38 = 0;
      }
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v61)(v36, v38, 1, v0);
      sub_100013720(v36, (uint64_t)v5, &qword_100670C90);
      if (v37(v5, 1, v0) == 1)
      {
        sub_1003ADBAC(v36);
      }
      else
      {
        uint64_t v39 = v57;
        ((void (*)(char *, char *, uint64_t))v54)(v57, v5, v0);
        uint64_t v40 = v0;
        uint64_t v41 = v5;
        unint64_t v42 = v32;
        id v43 = objc_allocWithZone((Class)NSBundle);
        sub_10052F2B0(v44);
        uint64_t v46 = v45;
        int64_t v47 = v43;
        unint64_t v32 = v42;
        uint64_t v5 = v41;
        uint64_t v0 = v40;
        uint64_t v36 = (uint64_t)v56;
        id v48 = [v47 initWithURL:v46, v51];

        double v49 = v39;
        double v7 = v55;
        (*v58)(v49, v0);
        sub_1003ADBAC(v36);
        if (v48)
        {
          swift_bridgeObjectRelease();
          return (uint64_t)v48;
        }
      }
      v34 += v60;
      --v33;
    }
    while (v33);
  }
  swift_bridgeObjectRelease();
  uint64_t result = sub_1005363F0();
  __break(1u);
  return result;
}

void variable initialization expression of Artwork.caching(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

id variable initialization expression of Artwork.decoration@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (int *)type metadata accessor for Artwork.Decoration(0);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  uint64_t v3 = (char *)a1 + v2[5];
  uint64_t v4 = sub_100535CE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = v2[6];
  id result = [self blackColor];
  *(void *)((char *)a1 + v5) = result;
  *(void *)((char *)a1 + v2[7]) = 1;
  return result;
}

uint64_t variable initialization expression of Artwork.size()
{
  return 0;
}

double variable initialization expression of Artwork.View._laidBounds()
{
  return 0.0;
}

uint64_t variable initialization expression of Artwork.Decoration.corner@<X0>(uint64_t a1@<X8>)
{
  return sub_1003AC284((uint64_t (*)(void))&type metadata accessor for UIView.Corner, a1);
}

id variable initialization expression of Artwork.Decoration.fillColor()
{
  id v0 = [self blackColor];

  return v0;
}

id variable initialization expression of Artwork.Placeholder.background()
{
  id v0 = [self secondarySystemFillColor];

  return v0;
}

uint64_t variable initialization expression of Artwork.Placeholder.tint()
{
  if (qword_100670340 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_100671220;
  id v1 = (id)qword_100671220;
  return v0;
}

id variable initialization expression of Artwork.Placeholder.symbolConfiguration()
{
  id v0 = [self configurationWithWeight:4];

  return v0;
}

double variable initialization expression of Artwork.Placeholder.imageScaleFactor()
{
  return 0.5;
}

double static CGFloat.squareAspectRatio.getter()
{
  return 1.0;
}

id variable initialization expression of Artwork.Placeholder.View.contentView()
{
  id v0 = objc_allocWithZone((Class)UIImageView);

  return [v0 init];
}

unint64_t variable initialization expression of Lyrics.translationMap()
{
  return sub_1003CC5B0((uint64_t)_swiftEmptyArrayStorage);
}

unint64_t variable initialization expression of LyricsLoader.lyricsOperations()
{
  return sub_1003CC6CC((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of LyricsLoader.accessQueue()
{
  uint64_t v0 = sub_100535950();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100535910();
  __chkstk_darwin();
  sub_1005332B0();
  __chkstk_darwin();
  sub_100123DA4(0, (unint64_t *)&qword_1006708E0);
  sub_1005332A0();
  v5[1] = _swiftEmptyArrayStorage;
  sub_1003ACFD0((unint64_t *)&unk_100671B50, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000BB04((uint64_t *)&unk_1006708F0);
  sub_1003AA404();
  sub_1005360C0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  return sub_1005359A0();
}

unint64_t sub_1003AA404()
{
  unint64_t result = qword_100671B60;
  if (!qword_100671B60)
  {
    sub_100013BFC((uint64_t *)&unk_1006708F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100671B60);
  }
  return result;
}

id variable initialization expression of LyricsLoader.operationQueue()
{
  id v0 = [objc_allocWithZone((Class)NSOperationQueue) init];
  [v0 setMaxConcurrentOperationCount:1];
  return v0;
}

double variable initialization expression of SyncedLyricsViewController.Specs.firstLineStartingPosition()
{
  return 60.0;
}

void variable initialization expression of SyncedLyricsViewController.Specs.selectedLinePosition(uint64_t a1@<X8>)
{
  *(void *)a1 = 0x4028000000000000;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 0;
}

double variable initialization expression of SyncedLyricsViewController.Specs.lineSpacing()
{
  return 25.0;
}

double variable initialization expression of SyncedLyricsViewController.Specs.backgroundVocalsTopSpacing()
{
  return 15.0;
}

CGFloat variable initialization expression of SyncedLyricsViewController.Specs.backgroundVocalsDeselectedTransform@<D0>(_OWORD *a1@<X8>)
{
  return sub_1003AB1A8(a1, 0.9);
}

double variable initialization expression of SyncedLyricsViewController.Specs.lineDelay()
{
  return 0.05;
}

uint64_t variable initialization expression of SyncedLyricsViewController.Specs.font()
{
  return sub_100535C30();
}

uint64_t variable initialization expression of SyncedLyricsViewController.Specs.backgroundVocalsFont()
{
  return sub_100535C40();
}

id variable initialization expression of SyncedLyricsViewController.Specs.writtenByFont()
{
  return sub_1003AA5A8((double *)&UIFontWeightBold);
}

id variable initialization expression of SyncedLyricsViewController.Specs.songwritersNamesFont()
{
  return sub_1003AA5A8((double *)&UIFontWeightMedium);
}

id sub_1003AA5A8(double *a1)
{
  id v1 = [self systemFontOfSize:22.0 weight:*a1];

  return v1;
}

double variable initialization expression of SyncedLyricsViewController.Specs.emphasizingScaleRange()
{
  return 1.0;
}

id variable initialization expression of SyncedLyricsViewController.Specs.selectedTextColor()
{
  return sub_1003AAEB8((SEL *)&selRef_labelColor, (uint64_t)&unk_100631A90, (uint64_t)sub_1003AB2AC, (uint64_t)&unk_100631AA8);
}

id variable initialization expression of SyncedLyricsViewController.Specs.selectedUpcomingTextColor()
{
  id v0 = self;
  id v1 = [v0 whiteColor];
  id v2 = [v1 colorWithAlphaComponent:0.35];

  id v3 = [v0 labelColor];
  id v4 = [v3 colorWithAlphaComponent:0.85];

  id v5 = objc_allocWithZone((Class)UIColor);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  void v12[4] = sub_1003ADFAC;
  v12[5] = v6;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  void v12[2] = sub_100042F08;
  unint64_t v12[3] = &unk_100631AF8;
  double v7 = _Block_copy(v12);
  id v8 = v4;
  id v9 = v2;
  swift_release();
  id v10 = [v5 initWithDynamicProvider:v7];

  _Block_release(v7);
  return v10;
}

id variable initialization expression of SyncedLyricsViewController.Specs.deselectedTextColor()
{
  id v0 = self;
  id v1 = [v0 whiteColor];
  id v2 = [v1 colorWithAlphaComponent:0.175];

  id v3 = [v0 labelColor];
  id v4 = [v3 colorWithAlphaComponent:0.4];

  id v5 = objc_allocWithZone((Class)UIColor);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  void v12[4] = sub_1003ADFAC;
  v12[5] = v6;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  void v12[2] = sub_100042F08;
  unint64_t v12[3] = &unk_100631B48;
  double v7 = _Block_copy(v12);
  id v8 = v4;
  id v9 = v2;
  swift_release();
  id v10 = [v5 initWithDynamicProvider:v7];

  _Block_release(v7);
  return v10;
}

id variable initialization expression of SyncedLyricsViewController.Specs.selectedBackgroundVocalsTextColor()
{
  id v0 = self;
  id v1 = [v0 whiteColor];
  id v2 = [v1 colorWithAlphaComponent:0.35];

  id v3 = [v0 labelColor];
  id v4 = [v3 colorWithAlphaComponent:0.85];

  id v5 = objc_allocWithZone((Class)UIColor);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  void v12[4] = sub_1003ADFAC;
  v12[5] = v6;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  void v12[2] = sub_100042F08;
  unint64_t v12[3] = &unk_100631B98;
  double v7 = _Block_copy(v12);
  id v8 = v4;
  id v9 = v2;
  swift_release();
  id v10 = [v5 initWithDynamicProvider:v7];

  _Block_release(v7);
  return v10;
}

id variable initialization expression of SyncedLyricsViewController.Specs.selectedUpcomingBackgroundVocalsTextColor()
{
  id v0 = self;
  id v1 = [v0 whiteColor];
  id v2 = [v1 colorWithAlphaComponent:0.175];

  id v3 = [v0 labelColor];
  id v4 = [v3 colorWithAlphaComponent:0.65];

  id v5 = objc_allocWithZone((Class)UIColor);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  void v12[4] = sub_1003ADFAC;
  v12[5] = v6;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  void v12[2] = sub_100042F08;
  unint64_t v12[3] = &unk_100631BE8;
  double v7 = _Block_copy(v12);
  id v8 = v4;
  id v9 = v2;
  swift_release();
  id v10 = [v5 initWithDynamicProvider:v7];

  _Block_release(v7);
  return v10;
}

id variable initialization expression of SyncedLyricsViewController.Specs.deselectedScrollTextColor()
{
  id v0 = self;
  id v1 = [v0 whiteColor];
  id v2 = [v1 colorWithAlphaComponent:0.4];

  id v3 = [v0 labelColor];
  id v4 = [v3 colorWithAlphaComponent:0.4];

  id v5 = objc_allocWithZone((Class)UIColor);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  void v12[4] = sub_1003ADFAC;
  v12[5] = v6;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  void v12[2] = sub_100042F08;
  unint64_t v12[3] = &unk_100631C38;
  double v7 = _Block_copy(v12);
  id v8 = v4;
  id v9 = v2;
  swift_release();
  id v10 = [v5 initWithDynamicProvider:v7];

  _Block_release(v7);
  return v10;
}

CGFloat variable initialization expression of SyncedLyricsViewController.Specs.deselectedTransform@<D0>(_OWORD *a1@<X8>)
{
  return sub_1003AB1A8(a1, 0.98);
}

id variable initialization expression of SyncedLyricsViewController.Specs.hiddenTextColor()
{
  id v0 = [self clearColor];

  return v0;
}

double variable initialization expression of SyncedLyricsViewController.Specs.lineTapProgressFreezeDuration()
{
  return 0.1;
}

double variable initialization expression of SyncedLyricsViewController.Specs.glowRadius()
{
  return 5.0;
}

double variable initialization expression of SyncedLyricsViewController.Specs.glowRange()
{
  return 0.0;
}

id variable initialization expression of SyncedLyricsViewController.Specs.lineProgressionGradientColor()
{
  return sub_1003AAEB8((SEL *)&selRef_tintColor, (uint64_t)&unk_100631C70, (uint64_t)sub_1003ADFAC, (uint64_t)&unk_100631C88);
}

id sub_1003AAEB8(SEL *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double v7 = self;
  id v8 = [v7 whiteColor];
  id v9 = [v7 *a1];
  id v10 = objc_allocWithZone((Class)UIColor);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v9;
  *(void *)(v11 + 24) = v8;
  void v17[4] = a3;
  v17[5] = v11;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  void v17[2] = sub_100042F08;
  v17[3] = a4;
  unint64_t v12 = _Block_copy(v17);
  id v13 = v9;
  id v14 = v8;
  swift_release();
  id v15 = [v10 initWithDynamicProvider:v12];

  _Block_release(v12);
  return v15;
}

id variable initialization expression of SyncedLyricsViewController.Specs.lineProgressionBackgroundVocalsGradientColor()
{
  id v0 = self;
  id v1 = [v0 whiteColor];
  id v2 = [v1 colorWithAlphaComponent:0.175];

  id v3 = [v0 tintColor];
  id v4 = [v3 colorWithAlphaComponent:0.175];

  id v5 = objc_allocWithZone((Class)UIColor);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  void v12[4] = sub_1003ADFAC;
  v12[5] = v6;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  void v12[2] = sub_100042F08;
  unint64_t v12[3] = &unk_100631CD8;
  double v7 = _Block_copy(v12);
  id v8 = v4;
  id v9 = v2;
  swift_release();
  id v10 = [v5 initWithDynamicProvider:v7];

  _Block_release(v7);
  return v10;
}

double variable initialization expression of SyncedLyricsViewController.Specs.lineProgressionGradientFeather()
{
  return 30.0;
}

CGFloat variable initialization expression of SyncedLyricsViewController.Specs.touchDownTransform@<D0>(_OWORD *a1@<X8>)
{
  return sub_1003AB1A8(a1, 0.95);
}

CGFloat sub_1003AB1A8@<D0>(_OWORD *a1@<X8>, CGFloat a2@<D0>)
{
  CGAffineTransformMakeScale(&v6, a2, a2);
  CGFloat result = v6.a;
  long long v4 = *(_OWORD *)&v6.c;
  long long v5 = *(_OWORD *)&v6.tx;
  *a1 = *(_OWORD *)&v6.a;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

double variable initialization expression of SyncedLyricsViewController.Specs.vocalGroupWidthCoefficient()
{
  return 0.85;
}

id variable initialization expression of SyncedLyricsViewController.Specs.highlightViewBackgroundColor()
{
  id v0 = objc_allocWithZone((Class)UIColor);

  return [v0 initWithWhite:1.0 alpha:0.08];
}

double variable initialization expression of SyncedLyricsViewController.Specs.highlightViewMargin()
{
  return 16.0;
}

double variable initialization expression of SyncedLyricsViewController.Specs.instrumentalBreakVisualizationMinSeconds()
{
  return 7.0;
}

double variable initialization expression of SyncedLyricsViewController.Specs.instrumentalBreakViewHeight()
{
  return 40.0;
}

double variable initialization expression of SyncedLyricsViewController.Specs.syllableLift()
{
  return 2.0;
}

double variable initialization expression of SyncedLyricsViewController.Specs.lineFinishProgressAnimationDuration()
{
  return 0.25;
}

uint64_t sub_1003AB26C()
{
  return swift_deallocObject();
}

id sub_1003AB2AC(void *a1)
{
  return sub_100404BC0(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1003AB2B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003AB2C4()
{
  return swift_release();
}

double variable initialization expression of SyncedLyricsViewController.bottomTapAreaHeight()
{
  return Int.seconds.getter(0);
}

void *variable initialization expression of SyncedLyricsViewController.specs@<X0>(void *a1@<X8>)
{
  sub_1004050C4(0, v3);
  return memcpy(a1, v3, 0x219uLL);
}

id variable initialization expression of SyncedLyricsViewController.scrollView()
{
  id v0 = objc_allocWithZone((Class)UIScrollView);

  return [v0 init];
}

id variable initialization expression of SyncedLyricsViewController.tapFeedbackGenerator()
{
  id v0 = objc_allocWithZone((Class)UISelectionFeedbackGenerator);

  return [v0 init];
}

id variable initialization expression of LineProgressGradientView.gradientView()
{
  return sub_1003ABC3C((void (*)(void))type metadata accessor for LineProgressGradientView.GradientView);
}

uint64_t variable initialization expression of NoticePresenter._notice@<X0>(uint64_t a1@<X8>)
{
  return sub_1003AC284(type metadata accessor for Notice, a1);
}

__n128 variable initialization expression of NoticePresenter.uiKitConfiguration@<Q0>(uint64_t a1@<X8>)
{
  if (qword_100670580 != -1) {
    swift_once();
  }
  uint64_t v2 = static NoticePresenter.defaultEdgePadding;
  __n128 v6 = *(__n128 *)&NSDirectionalEdgeInsetsZero.top;
  CGFloat bottom = NSDirectionalEdgeInsetsZero.bottom;
  CGFloat trailing = NSDirectionalEdgeInsetsZero.trailing;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(a1 + 8) = 2;
  *(void *)(a1 + 16) = v2;
  __n128 result = v6;
  *(__n128 *)(a1 + 24) = v6;
  *(CGFloat *)(a1 + 40) = bottom;
  *(CGFloat *)(a1 + 48) = trailing;
  return result;
}

uint64_t variable initialization expression of NoticePresentingModifier._controller()
{
  type metadata accessor for NoticePresenter();
  sub_1003ACFD0(&qword_100670908, (void (*)(uint64_t))type metadata accessor for NoticePresenter);

  return sub_1005316B0();
}

double variable initialization expression of ArtistRazzmatazzView._rowHeight()
{
  return 75.0;
}

uint64_t variable initialization expression of ArtworkImage.Placeholder.View._placeholderStyle@<X0>(uint64_t *a1@<X8>)
{
  return sub_1003ABE8C(&qword_100670910, a1);
}

uint64_t variable initialization expression of ArtworkImage.Placeholder.View._colorSchemeContrast@<X0>(uint64_t *a1@<X8>)
{
  return sub_1003ABE8C(&qword_100670918, a1);
}

uint64_t variable initialization expression of ArtworkImage.Placeholder.View.Style.blendMode@<X0>(uint64_t a1@<X8>)
{
  return sub_1003AC284((uint64_t (*)(void))&type metadata accessor for BlendMode, a1);
}

uint64_t variable initialization expression of Card.DisplayStyle._displayCornerRadius()
{
  return swift_getKeyPath();
}

uint64_t sub_1003AB558@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_100531800();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1003AB58C()
{
  return sub_100531810();
}

uint64_t variable initialization expression of Collaboration.Flow.View._dismiss@<X0>(uint64_t *a1@<X8>)
{
  return sub_1003ABE8C(&qword_100670920, a1);
}

uint64_t sub_1003AB5D0()
{
  return sub_100531910();
}

double variable initialization expression of Card.ViewController.maxRegularWidth()
{
  return 414.0;
}

uint64_t variable initialization expression of CarouselView.selectedItem@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100532F20();
  char v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t variable initialization expression of CarouselView._scrollViewProxy@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100531520();
  char v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t variable initialization expression of CarouselView._layoutDirection@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  sub_10000BB04(&qword_100670928);

  return swift_storeEnumTagMultiPayload();
}

uint64_t variable initialization expression of CircularProgressView._state()
{
  return 0;
}

id variable initialization expression of CircularProgressView.trackLayer()
{
  id v0 = objc_allocWithZone((Class)CAShapeLayer);

  return [v0 init];
}

uint64_t variable initialization expression of Collaboration.Management.Model._hasNetworkConnectivity()
{
  static ApplicationCapabilities.shared.getter((uint64_t)v1);
  sub_1001C7ED4((uint64_t)v1);
  return v1[1];
}

uint64_t variable initialization expression of Collaboration.Management.Model.$__lazy_storage_$_artworkViewModel@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10000BB04((uint64_t *)&unk_100670930);
  char v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t variable initialization expression of Collaboration.Management.View._dynamicTypeSize@<X0>(uint64_t *a1@<X8>)
{
  return sub_1003ABE8C((uint64_t *)&unk_100675500, a1);
}

uint64_t variable initialization expression of Collaboration.Management.View._openURL@<X0>(uint64_t *a1@<X8>)
{
  return sub_1003ABE8C((uint64_t *)&unk_100670940, a1);
}

uint64_t variable initialization expression of PlaylistCurators.View._horizontalSizeClass@<X0>(uint64_t *a1@<X8>)
{
  return sub_1003ABE8C(&qword_100675590, a1);
}

uint64_t sub_1003AB860()
{
  return sub_100531820();
}

uint64_t sub_1003AB884(uint64_t a1)
{
  sub_10000BB04(&qword_100670C88);
  __chkstk_darwin();
  sub_100013720(a1, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_100670C88);
  return sub_100531830();
}

uint64_t variable initialization expression of Collaboration.Flow.Collaborator.artwork@<X0>(uint64_t a1@<X8>)
{
  return sub_1003AC284((uint64_t (*)(void))&type metadata accessor for Artwork, a1);
}

uint64_t variable initialization expression of InlineProfileEditingView.Context._name()
{
  return 0;
}

uint64_t variable initialization expression of InlineProfileEditingView._imagePickerSourceType()
{
  return 1;
}

uint64_t variable initialization expression of MoreLabel._layoutDirection@<X0>(uint64_t *a1@<X8>)
{
  return sub_1003ABE8C(&qword_100670928, a1);
}

uint64_t variable initialization expression of MoreLabel._accessibilityShowButtonShapes()
{
  return swift_getKeyPath();
}

uint64_t variable initialization expression of LoadingView.style()
{
  return 0x10000000000;
}

id variable initialization expression of LoadingView.label()
{
  id v0 = objc_allocWithZone((Class)UILabel);

  return [v0 initWithFrame:0.0, 0.0, 0.0, 0.0];
}

id variable initialization expression of LoadingView.activityIndicator()
{
  id v0 = objc_allocWithZone((Class)UIActivityIndicatorView);

  return [v0 initWithActivityIndicatorStyle:100];
}

uint64_t variable initialization expression of NoticeView._dismiss()
{
  return swift_getKeyPath();
}

UIFontTextStyle variable initialization expression of SymbolButton.Configuration.symbol@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = UIFontTextStyleSubheadline;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(_OWORD *)(a1 + 48) = xmmword_10054DCB0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 80) = -1;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0x3FF0000000000000;
  *(void *)(a1 + 112) = 0;
  return UIFontTextStyleSubheadline;
}

UIFontTextStyle SymbolButton.Title.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = UIFontTextStyleSubheadline;
  *(UIFontWeight *)(a1 + 24) = UIFontWeightSemibold;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0x3FF0000000000000;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  return UIFontTextStyleSubheadline;
}

double variable initialization expression of SymbolButton.Configuration.material@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = 0;
  return result;
}

double variable initialization expression of SymbolButton.Configuration.customView@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

double variable initialization expression of SymbolButton.Configuration.symbolToTextSpacing()
{
  return 4.0;
}

double variable initialization expression of SymbolButton.Configuration.minimumSize()
{
  return sub_1003AC0B4(&qword_1006707E8, (uint64_t)&static SymbolButton.Configuration.platterMinimumSize);
}

CGFloat variable initialization expression of SymbolButton.Configuration.contentInsets()
{
  return NSDirectionalEdgeInsetsZero.top;
}

uint64_t variable initialization expression of SymbolButton.Configuration.accessibility()
{
  return 1;
}

uint64_t variable initialization expression of PlayIntentButtonWrapper._playIntentButtonMaterial()
{
  return swift_getKeyPath();
}

char *variable initialization expression of PlayIntentLayoutHelper.playButton()
{
  return SymbolButton.__allocating_init(intent:)(0);
}

char *variable initialization expression of PlayIntentLayoutHelper.shuffleButton()
{
  return SymbolButton.__allocating_init(intent:)(1);
}

uint64_t variable initialization expression of PlayIntentLayoutHelper.configuration()
{
  return 513;
}

id variable initialization expression of QRCodeOverlayViewController.backgroundView()
{
  id v0 = objc_allocWithZone((Class)UIVisualEffectView);

  return [v0 init];
}

id variable initialization expression of QRCodeOverlayViewController.qrCodeView()
{
  return sub_1003ABC3C((void (*)(void))type metadata accessor for QRCodeOverlayViewController.ContainerView);
}

id sub_1003ABC3C(void (*a1)(void))
{
  a1(0);
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return [v1 init];
}

id variable initialization expression of QRCodeOverlayViewController.logoView()
{
  NSString v0 = sub_100534CA0();
  id v1 = [self _systemImageNamed:v0];

  id v2 = [objc_allocWithZone((Class)UIImageView) initWithImage:v1];
  return v2;
}

id variable initialization expression of QRCodeOverlayViewController.titleLabel()
{
  id v0 = objc_allocWithZone((Class)UILabel);

  return [v0 init];
}

id variable initialization expression of QRCodeOverlayViewController.subtitleLabelEffectView()
{
  if (qword_100670770 != -1) {
    swift_once();
  }
  id v0 = [self effectForBlurEffect:qword_10067C2B8];
  id v1 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v0];

  return v1;
}

id variable initialization expression of QRCodeOverlayViewController.ContainerView.imageView()
{
  return sub_1003ABEF4((Class *)UIImageView_ptr);
}

id variable initialization expression of QRCodeOverlayViewController.ContainerView.overlayLayer()
{
  id v0 = objc_allocWithZone((Class)CALayer);

  return [v0 init];
}

uint64_t variable initialization expression of QRCodeOverlayViewController.ImageViewRepresentable._foregroundColor()
{
  return swift_getKeyPath();
}

uint64_t sub_1003ABE4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1005318A0();
  *a1 = result;
  return result;
}

uint64_t variable initialization expression of Reactions.StackView._colorScheme@<X0>(uint64_t *a1@<X8>)
{
  return sub_1003ABE8C(&qword_1006709B0, a1);
}

uint64_t sub_1003ABE8C@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  *a2 = swift_getKeyPath();
  sub_10000BB04(a1);

  return swift_storeEnumTagMultiPayload();
}

id variable initialization expression of SliderView.stackView()
{
  return sub_1003ABEF4((Class *)UIStackView_ptr);
}

id variable initialization expression of SliderView.remainingTrack()
{
  return sub_1003ABEF4((Class *)UIView_ptr);
}

id sub_1003ABEF4(Class *a1)
{
  id v1 = [objc_allocWithZone(*a1) init];
  id v2 = UIView.forAutolayout.getter();

  return v2;
}

id variable initialization expression of SliderView.feedbackGenerator()
{
  id v0 = objc_allocWithZone((Class)UIImpactFeedbackGenerator);

  return [v0 initWithStyle:0];
}

id variable initialization expression of SliderView.trackLayoutGuide()
{
  id v0 = objc_allocWithZone((Class)UILayoutGuide);

  return [v0 init];
}

id variable initialization expression of SliderView.elapsedTrackColor()
{
  id v0 = [self whiteColor];

  return v0;
}

id variable initialization expression of SliderView.remainingTrackColor()
{
  id v0 = [self systemFillColor];

  return v0;
}

id variable initialization expression of SliderView.trackingColor()
{
  if (qword_1006703E8 != -1) {
    swift_once();
  }
  id v0 = (void *)static UIColor.MusicTint.normal;

  return v0;
}

double variable initialization expression of SymbolButton.hitRectMinimumSize()
{
  return sub_1003AC0B4(&qword_1006707F0, (uint64_t)&static SymbolButton.Configuration.hitRectMinimumSize);
}

double sub_1003AC0B4(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  return *(double *)a2;
}

id variable initialization expression of SymbolButton.containerView()
{
  id v0 = objc_allocWithZone((Class)UIView);

  return [v0 init];
}

id variable initialization expression of SymbolButton.materialView()
{
  uint64_t v4 = 1;
  id v0 = (objc_class *)type metadata accessor for SymbolButton.MaterialView();
  long long v5 = 0u;
  long long v6 = 0u;
  uint64_t v7 = 0;
  v3.receiver = objc_allocWithZone(v0);
  v3.super_class = v0;
  [super initWithEffect:0];
  sub_10050B9A8((uint64_t)&v4);

  return v1;
}

id variable initialization expression of SymbolButton.backgroundView()
{
  if (qword_1006707C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  double v0 = *(double *)&static SymbolButton.Background.clear;
  id v1 = (void *)qword_10067C448;
  uint64_t v2 = qword_10067C450;
  uint64_t v3 = qword_10067C458;
  objc_allocWithZone((Class)type metadata accessor for SymbolButton.BackgroundView());
  swift_bridgeObjectRetain();
  id v4 = v1;
  return sub_10050BDE4(v1, v0, v2, v3);
}

uint64_t variable initialization expression of SymbolButton.$__lazy_storage_$_metrics@<X0>(uint64_t a1@<X8>)
{
  return sub_1003AC284(type metadata accessor for SymbolButton.Metrics, a1);
}

uint64_t sub_1003AC284@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 1, 1, v3);
}

double variable initialization expression of SymbolButton.Update.animationOptions()
{
  return 0.0;
}

double variable initialization expression of VerticalToggleSlider._minValue()
{
  return 0.0;
}

UIFontTextStyle variable initialization expression of SymbolButton.Symbol.style()
{
  return UIFontTextStyleSubheadline;
}

uint64_t variable initialization expression of SymbolButton.Symbol.weight()
{
  return 6;
}

uint64_t variable initialization expression of SymbolButton.Symbol.offset()
{
  return 0;
}

UIFontWeight variable initialization expression of SymbolButton.Title.weight()
{
  return UIFontWeightSemibold;
}

CGFloat variable initialization expression of SymbolButton.CustomView.insets()
{
  return UIEdgeInsetsZero.top;
}

double variable initialization expression of VerticalToggleSlider.packageDefinition@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

float variable initialization expression of VerticalToggleSlider.minLevelOffsetRatio()
{
  if (qword_100670858 != -1) {
    swift_once();
  }
  double v0 = *((double *)&static VerticalToggleSlider.DesignSpecs.expandedSize + 1);
  if (qword_100670848 != -1) {
    swift_once();
  }
  return 1.0 / v0 * *(double *)&qword_10067C5A8;
}

uint64_t variable initialization expression of VerticalToggleSlider.growAnchorPoint()
{
  return 8;
}

double variable initialization expression of VerticalToggleSlider.internalValueRange()
{
  return 0.0;
}

float variable initialization expression of VerticalToggleSlider._maxValue()
{
  return 1.0;
}

id variable initialization expression of VerticalToggleSlider.blurEffect()
{
  if (qword_100670830 != -1) {
    swift_once();
  }
  id v0 = [self effectWithBlurRadius:*(double *)&qword_100679060];

  return v0;
}

double variable initialization expression of VerticalToggleSlider.shapeChange()
{
  if (qword_100670838 != -1) {
    swift_once();
  }
  return *(double *)&xmmword_100679068;
}

void variable initialization expression of VerticalToggleSlider.growTransform(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0x3FF0000000000000;
  a1[4] = 0;
  a1[5] = 0;
}

id variable initialization expression of WaveformPlayIndicator.colorPalette()
{
  id v0 = self;
  id v1 = [v0 tintColor];
  id v2 = [v0 labelColor];
  id v3 = [v2 colorWithAlphaComponent:0.35];

  id v4 = [v0 labelColor];
  id v5 = [v4 colorWithAlphaComponent:0.2];

  id v6 = [v0 labelColor];
  id v7 = [v6 colorWithAlphaComponent:0.6];

  return v1;
}

id variable initialization expression of WaveformPlayIndicator.waveform()
{
  id v0 = [self zero];

  return v0;
}

uint64_t variable initialization expression of WaveformPlayIndicator.cannedAnimationAsset()
{
  return sub_10052C124();
}

uint64_t sub_1003AC6B0(uint64_t a1, uint64_t a2)
{
  return sub_1003ACF8C(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

NSNumber sub_1003AC6C8()
{
  return sub_10052FBB0();
}

uint64_t sub_1003AC6D0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_10052FBC0();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

uint64_t sub_1003AC724(uint64_t a1, uint64_t a2)
{
  char v3 = sub_10052FBD0();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_1003AC77C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_10052FBE0();
  *a1 = v3;
  return result;
}

BOOL sub_1003AC7A4(double *a1, double *a2)
{
  return *a1 == *a2;
}

double sub_1003AC7B8@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t sub_1003AC7C4()
{
  sub_1003ACFD0(&qword_100670C78, type metadata accessor for UIContentSizeCategory);
  sub_1003ACFD0(&qword_100670C80, type metadata accessor for UIContentSizeCategory);

  return sub_100536510();
}

uint64_t sub_1003AC880()
{
  sub_1003ACFD0(&qword_100670C68, type metadata accessor for TextStyle);
  sub_1003ACFD0(&qword_100670C70, type metadata accessor for TextStyle);

  return sub_100536510();
}

uint64_t sub_1003AC93C()
{
  return sub_100536510();
}

uint64_t sub_1003ACA04()
{
  sub_1003ACFD0(&qword_100670C40, type metadata accessor for FeatureKey);
  sub_1003ACFD0(&qword_100670C48, type metadata accessor for FeatureKey);

  return sub_100536510();
}

uint64_t sub_1003ACAC0()
{
  sub_1003ACFD0((unint64_t *)&qword_100670C30, _s3__C13AttributeNameVMa_0);
  sub_1003ACFD0(&qword_100670C38, _s3__C13AttributeNameVMa_0);

  return sub_100536510();
}

uint64_t sub_1003ACB7C()
{
  sub_1003ACFD0(&qword_100670D20, type metadata accessor for NLLanguage);
  sub_1003ACFD0(&qword_100670D28, type metadata accessor for NLLanguage);

  return sub_100536510();
}

uint64_t sub_1003ACC38()
{
  sub_1003ACFD0((unint64_t *)&qword_100670D40, _s3__C3KeyVMa_1);
  sub_1003ACFD0(&qword_100670D48, _s3__C3KeyVMa_1);

  return sub_100536510();
}

uint64_t sub_1003ACCF4()
{
  sub_1003ACFD0(&qword_100670D30, _s3__C25OpenExternalURLOptionsKeyVMa_0);
  sub_1003ACFD0(&qword_100670D38, _s3__C25OpenExternalURLOptionsKeyVMa_0);

  return sub_100536510();
}

uint64_t sub_1003ACDB0()
{
  sub_1003ACFD0(&qword_100670C10, type metadata accessor for CAGradientLayerType);
  sub_1003ACFD0(&qword_100670C18, type metadata accessor for CAGradientLayerType);

  return sub_100536510();
}

uint64_t sub_1003ACE6C()
{
  sub_1003ACFD0(&qword_100670C20, type metadata accessor for InfoKey);
  sub_1003ACFD0(&qword_100670C28, type metadata accessor for InfoKey);

  return sub_100536510();
}

uint64_t sub_1003ACF28()
{
  return Double.hashValue.getter(*v0);
}

void sub_1003ACF30()
{
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  sub_100536990(v1);
}

uint64_t sub_1003ACF64()
{
  return sub_100536940();
}

uint64_t sub_1003ACF74(uint64_t a1, uint64_t a2)
{
  return sub_1003ACF8C(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_1003ACF8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_100534CE0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1003ACFD0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

__n128 initializeWithCopy for VerticalToggleSlider.ShapeChange(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for KeyframeAnimationOptions(uint64_t a1)
{
}

void type metadata accessor for UIUserInterfaceStyle(uint64_t a1)
{
}

void type metadata accessor for CGPath(uint64_t a1)
{
}

void _s3__C7CGColorCMa_0(uint64_t a1)
{
}

void type metadata accessor for CAGradientLayerType(uint64_t a1)
{
}

void _s3__C6CTLineCMa_0(uint64_t a1)
{
}

void _s3__C7CTFrameCMa_0(uint64_t a1)
{
}

void type metadata accessor for CTFramesetter(uint64_t a1)
{
}

void type metadata accessor for NSTextAlignment(uint64_t a1)
{
}

__n128 initializeWithTake for Artwork.Content(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void _s3__C8_NSRangeVMa_0(uint64_t a1)
{
}

__n128 _s11PlaceholderVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void _s3__C17CGAffineTransformVMa_0(uint64_t a1)
{
}

void type metadata accessor for UIAxis(uint64_t a1)
{
}

void type metadata accessor for UIRectCorner(uint64_t a1)
{
}

void _s3__C7CGPointVMa_1(uint64_t a1)
{
}

void _s3__C6CGSizeVMa_2(uint64_t a1)
{
}

void type metadata accessor for InfoKey(uint64_t a1)
{
}

void _s3__C6CGRectVMa_1(uint64_t a1)
{
}

void _s3__C13AttributeNameVMa_0(uint64_t a1)
{
}

void type metadata accessor for FeatureKey(uint64_t a1)
{
}

void type metadata accessor for UIOffset(uint64_t a1)
{
}

void type metadata accessor for SymbolScale(uint64_t a1)
{
}

void type metadata accessor for SymbolWeight(uint64_t a1)
{
}

void type metadata accessor for Weight(uint64_t a1)
{
}

void type metadata accessor for TextStyle(uint64_t a1)
{
}

void type metadata accessor for UIContentSizeCategory(uint64_t a1)
{
}

void _s3__C23NSDirectionalEdgeInsetsVMa_0(uint64_t a1)
{
}

uint64_t sub_1003AD2C8()
{
  return sub_1003ACFD0(&qword_100670B28, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_1003AD310()
{
  return sub_1003ACFD0(&qword_100670B30, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_1003AD358()
{
  return sub_1003ACFD0(&qword_100670B38, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_1003AD3A0()
{
  return sub_1003ACFD0(&qword_100670B40, type metadata accessor for TextStyle);
}

uint64_t sub_1003AD3E8()
{
  return sub_1003ACFD0(&qword_100670B48, type metadata accessor for TextStyle);
}

uint64_t sub_1003AD430()
{
  return sub_1003ACFD0(&qword_100670B50, type metadata accessor for TextStyle);
}

uint64_t sub_1003AD478()
{
  return sub_1003ACFD0(&qword_100670B58, type metadata accessor for Weight);
}

uint64_t sub_1003AD4C0()
{
  return sub_1003ACFD0(&qword_100670B60, type metadata accessor for Weight);
}

uint64_t sub_1003AD508()
{
  return sub_1003ACFD0(&qword_100670B68, type metadata accessor for Weight);
}

uint64_t sub_1003AD550()
{
  return sub_1003ACFD0(&qword_100670B70, type metadata accessor for FeatureKey);
}

uint64_t sub_1003AD598()
{
  return sub_1003ACFD0(&qword_100670B78, type metadata accessor for FeatureKey);
}

uint64_t sub_1003AD5E0()
{
  return sub_1003ACFD0(&qword_100670B80, type metadata accessor for FeatureKey);
}

uint64_t sub_1003AD628()
{
  return sub_1003ACFD0(&qword_100670B88, _s3__C13AttributeNameVMa_0);
}

uint64_t sub_1003AD670()
{
  return sub_1003ACFD0(&qword_100670B90, _s3__C13AttributeNameVMa_0);
}

uint64_t sub_1003AD6B8()
{
  return sub_1003ACFD0(&qword_100670B98, type metadata accessor for InfoKey);
}

uint64_t sub_1003AD700()
{
  return sub_1003ACFD0(&qword_100670BA0, type metadata accessor for InfoKey);
}

uint64_t sub_1003AD748()
{
  return sub_1003ACFD0(&qword_100670BA8, type metadata accessor for UIAxis);
}

uint64_t sub_1003AD790()
{
  return sub_1003ACFD0(&qword_100670BB0, type metadata accessor for UIAxis);
}

uint64_t sub_1003AD7D8()
{
  return sub_1003ACFD0(&qword_100670BB8, type metadata accessor for UIAxis);
}

uint64_t sub_1003AD820()
{
  return sub_1003ACFD0(&qword_100670BC0, type metadata accessor for UIAxis);
}

uint64_t sub_1003AD868()
{
  return sub_1003ACFD0(&qword_100670BC8, type metadata accessor for CAGradientLayerType);
}

uint64_t sub_1003AD8B0()
{
  return sub_1003ACFD0(&qword_100670BD0, type metadata accessor for CAGradientLayerType);
}

uint64_t sub_1003AD8F8()
{
  return sub_1003ACFD0(&qword_100670BD8, type metadata accessor for CAGradientLayerType);
}

uint64_t sub_1003AD940()
{
  return sub_1003ACFD0(&qword_100670BE0, type metadata accessor for KeyframeAnimationOptions);
}

uint64_t sub_1003AD988()
{
  return sub_1003ACFD0(&qword_100670BE8, type metadata accessor for KeyframeAnimationOptions);
}

uint64_t sub_1003AD9D0()
{
  return sub_1003ACFD0(&qword_100670BF0, type metadata accessor for KeyframeAnimationOptions);
}

uint64_t sub_1003ADA18()
{
  return sub_1003ACFD0(&qword_100670BF8, type metadata accessor for KeyframeAnimationOptions);
}

uint64_t sub_1003ADA60()
{
  return sub_1003ACFD0(&qword_100670C00, type metadata accessor for InfoKey);
}

uint64_t sub_1003ADAA8()
{
  return sub_1003ACFD0(&qword_100670C08, _s3__C13AttributeNameVMa_0);
}

unint64_t sub_1003ADAF0()
{
  unint64_t result = qword_100670C60;
  if (!qword_100670C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100670C60);
  }
  return result;
}

uint64_t sub_1003ADB44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000BB04(&qword_100670C90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003ADBAC(uint64_t a1)
{
  uint64_t v2 = sub_10000BB04(&qword_100670C90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for NLLanguage(uint64_t a1)
{
}

void _s3__C25OpenExternalURLOptionsKeyVMa_0(uint64_t a1)
{
}

void type metadata accessor for CTParagraphStyle(uint64_t a1)
{
}

void _s3__C5CTRunCMa_0(uint64_t a1)
{
}

void _s3__C3KeyVMa_1(uint64_t a1)
{
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
}

void type metadata accessor for UIUserInterfaceLayoutDirection(uint64_t a1)
{
}

uint64_t sub_1003ADC98()
{
  return sub_1003ACFD0(&qword_100670CD8, _s3__C3KeyVMa_1);
}

uint64_t sub_1003ADCE0()
{
  return sub_1003ACFD0(&qword_100670CE0, _s3__C3KeyVMa_1);
}

uint64_t sub_1003ADD28()
{
  return sub_1003ACFD0(&qword_100670CE8, _s3__C25OpenExternalURLOptionsKeyVMa_0);
}

uint64_t sub_1003ADD70()
{
  return sub_1003ACFD0(&qword_100670CF0, _s3__C25OpenExternalURLOptionsKeyVMa_0);
}

uint64_t sub_1003ADDB8()
{
  return sub_1003ACFD0(&qword_100670CF8, type metadata accessor for NLLanguage);
}

uint64_t sub_1003ADE00()
{
  return sub_1003ACFD0(&qword_100670D00, type metadata accessor for NLLanguage);
}

uint64_t sub_1003ADE48()
{
  return sub_1003ACFD0(&qword_100670D08, type metadata accessor for NLLanguage);
}

uint64_t sub_1003ADE90()
{
  return sub_1003ACFD0(&qword_100670D10, _s3__C25OpenExternalURLOptionsKeyVMa_0);
}

uint64_t sub_1003ADED8()
{
  return sub_1003ACFD0(&qword_100670D18, _s3__C3KeyVMa_1);
}

void Card.ViewController.hostingController.setter()
{
}

uint64_t Artwork.caching.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100013720(v1, a1, &qword_100670ED0);
}

uint64_t Artwork.caching.setter(uint64_t a1)
{
  return sub_1000A2A60(a1, v1, &qword_100670ED0);
}

void *Artwork.content.getter()
{
  uint64_t v1 = *(void **)(v0 + 24);
  sub_1003AE030(v1, *(void **)(v0 + 32));
  return v1;
}

id sub_1003AE030(id result, void *a2)
{
  if (a2)
  {
    id v2 = result;
    return a2;
  }
  return result;
}

void Artwork.content.setter(uint64_t a1, uint64_t a2)
{
  sub_1003AE0A8(*(void **)(v2 + 24), *(void **)(v2 + 32));
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
}

void sub_1003AE0A8(void *a1, void *a2)
{
  if (a2)
  {
  }
}

uint64_t Artwork.decoration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Artwork(0);
  return sub_1003B34C8(v1 + *(int *)(v3 + 24), a1, type metadata accessor for Artwork.Decoration);
}

uint64_t type metadata accessor for Artwork(uint64_t a1)
{
  return sub_1000136E8(a1, qword_100670FE0);
}

uint64_t type metadata accessor for Artwork.Decoration(uint64_t a1)
{
  return sub_1000136E8(a1, qword_1006711B0);
}

uint64_t Artwork.decoration.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Artwork(0) + 24);

  return sub_1003AE1B8(a1, v3);
}

uint64_t sub_1003AE1B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Artwork.Decoration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

CFRange (__swiftcall *Artwork.decoration.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Artwork.placeholder.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Artwork(0);
  return sub_100013720(v1 + *(int *)(v3 + 28), a1, &qword_100670ED8);
}

uint64_t Artwork.placeholder.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Artwork(0);
  return sub_1000A2A60(a1, v1 + *(int *)(v3 + 28), &qword_100670ED8);
}

CFRange (__swiftcall *Artwork.placeholder.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Artwork.size.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Artwork(0) + 32));
}

uint64_t Artwork.size.setter(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result = type metadata accessor for Artwork(0);
  uint64_t v10 = v4 + *(int *)(result + 32);
  *(void *)uint64_t v10 = a1;
  *(void *)(v10 + 8) = a2;
  *(void *)(v10 + 16) = a3;
  *(unsigned char *)(v10 + 24) = a4;
  return result;
}

CFRange (__swiftcall *Artwork.size.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double Artwork.init()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (int *)type metadata accessor for Artwork(0);
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 32) = 0;
  uint64_t v3 = (void *)(a1 + v2[6]);
  uint64_t v4 = (int *)type metadata accessor for Artwork.Decoration(0);
  v3[1] = 0;
  v3[2] = 0;
  *uint64_t v3 = 0;
  uint64_t v5 = (char *)v3 + v4[5];
  uint64_t v6 = sub_100535CE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = v4[6];
  *(void *)((char *)v3 + v7) = [self blackColor];
  *(void *)((char *)v3 + v4[7]) = 1;
  id v8 = (_OWORD *)(a1 + v2[7]);
  v8[1] = 0u;
  v8[2] = 0u;
  *id v8 = 0u;
  uint64_t v9 = a1 + v2[8];
  double result = 0.0;
  *(_OWORD *)uint64_t v9 = xmmword_10054DCC0;
  *(void *)(v9 + 16) = 0;
  *(unsigned char *)(v9 + 24) = 0;
  return result;
}

uint64_t static Artwork.with(_:)@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for Artwork(0);
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(void *)(a2 + 32) = 0;
  uint64_t v5 = (void *)(a2 + v4[6]);
  uint64_t v6 = (int *)type metadata accessor for Artwork.Decoration(0);
  v5[1] = 0;
  void v5[2] = 0;
  *uint64_t v5 = 0;
  uint64_t v7 = (char *)v5 + v6[5];
  uint64_t v8 = sub_100535CE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = v6[6];
  *(void *)((char *)v5 + v9) = [self blackColor];
  *(void *)((char *)v5 + v6[7]) = 1;
  uint64_t v10 = (_OWORD *)(a2 + v4[7]);
  v10[1] = 0u;
  v10[2] = 0u;
  *uint64_t v10 = 0u;
  uint64_t v11 = a2 + v4[8];
  *(_OWORD *)uint64_t v11 = xmmword_10054DCC0;
  *(void *)(v11 + 16) = 0;
  *(unsigned char *)(v11 + 24) = 0;
  return a1(a2);
}

char *sub_1003AE640()
{
  __chkstk_darwin();
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003B34C8(v0, (uint64_t)v2, type metadata accessor for Artwork);
  id v3 = objc_allocWithZone((Class)type metadata accessor for Artwork.View(0));
  uint64_t v4 = Artwork.View.init(configuration:)((uint64_t)v2);
  sub_1003B3890(&qword_100670F80, (void (*)(uint64_t))type metadata accessor for Artwork.View);
  return v4;
}

uint64_t sub_1003AE714@<X0>(uint64_t a1@<X8>)
{
  return sub_1003B34C8(v1, a1, type metadata accessor for Artwork);
}

char *Artwork.View.__allocating_init(configuration:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return Artwork.View.init(configuration:)(a1);
}

char *Artwork.View.init(configuration:)(uint64_t a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = &v1[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_imageDidChangeHandler];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  uint64_t v5 = &v1[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View__laidBounds];
  *(_OWORD *)uint64_t v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  uint64_t v6 = OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_imageView;
  id v7 = objc_allocWithZone((Class)UIImageView);
  uint64_t v8 = v1;
  *(void *)&v1[v6] = [v7 init];
  uint64_t v9 = &v8[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_placeholderView];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  sub_1003B34C8(a1, (uint64_t)&v8[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_typedConfiguration], type metadata accessor for Artwork);

  v26.receiver = v8;
  v26.super_class = ObjectType;
  uint64_t v10 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v10 setContentMode:4];
  uint64_t v11 = OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_imageView;
  id v12 = [*(id *)&v10[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_imageView] layer];
  [v12 setMinificationFilter:kCAFilterTrilinear];

  id v13 = [*(id *)&v10[v11] layer];
  [v13 setMagnificationFilter:kCAFilterTrilinear];

  id v14 = *(void **)&v10[v11];
  [v14 setContentMode:2];
  [v14 setClipsToBounds:1];
  [v14 setAccessibilityIgnoresInvertColors:1];
  [v10 addSubview:v14];
  uint64_t v15 = a1 + *(int *)(type metadata accessor for Artwork(0) + 28);
  id v16 = *(void **)(v15 + 24);
  if (v16)
  {
    id v17 = *(void **)&v10[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_placeholderView];
    if (v17)
    {
      uint64_t v18 = *(void **)v15;
      uint64_t v19 = *(void **)(v15 + 8);
      uint64_t v20 = *(void **)(v15 + 16);
      uint64_t v21 = *(void *)(v15 + 32);
      uint64_t v22 = *(void *)(v15 + 40);
      swift_getObjectType();
      sub_1003B3530();
      id v25 = (void *)swift_allocObject();
      v25[2] = v18;
      v25[3] = v19;
      void v25[4] = v20;
      v25[5] = v16;
      v25[6] = v21;
      v25[7] = v22;
      sub_1003B35D4(v18, v19, v20, v16);
      sub_1003B35D4(v18, v19, v20, v16);
      id v23 = v17;
      sub_1005309C0();
      sub_1003B362C(v18, v19, v20, v16);
    }
  }
  sub_1003AF950();
  sub_1003AF4F8();

  sub_1003B5D58(a1, type metadata accessor for Artwork);
  return v10;
}

uint64_t Artwork.View.typedConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_typedConfiguration;
  swift_beginAccess();
  return sub_1003B34C8(v3, a1, type metadata accessor for Artwork);
}

uint64_t Artwork.View.typedConfiguration.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Artwork(0);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v23 - v7;
  __chkstk_darwin();
  uint64_t v10 = (char *)&v23 - v9;
  uint64_t v11 = v2 + OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_typedConfiguration;
  swift_beginAccess();
  sub_1003B34C8(v11, (uint64_t)v10, type metadata accessor for Artwork);
  swift_beginAccess();
  sub_1003B3740(a1, v11);
  swift_endAccess();
  sub_1003B34C8(v11, (uint64_t)v8, type metadata accessor for Artwork);
  char v12 = _s11MusicCoreUI7ArtworkV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v8, (uint64_t)v10);
  sub_1003B5D58((uint64_t)v8, type metadata accessor for Artwork);
  if ((v12 & 1) == 0)
  {
    sub_1003B34C8(v11, (uint64_t)v6, type metadata accessor for Artwork);
    id v13 = &v6[*(int *)(v4 + 28)];
    id v14 = (void *)*((void *)v13 + 3);
    if (v14 && *(void *)(v2 + OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_placeholderView))
    {
      uint64_t v15 = *(void **)v13;
      id v16 = (void *)*((void *)v13 + 1);
      id v17 = (void *)*((void *)v13 + 2);
      uint64_t v18 = *((void *)v13 + 4);
      uint64_t v19 = *((void *)v13 + 5);
      id v25 = *(id *)(v2 + OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_placeholderView);
      uint64_t v26 = v18;
      uint64_t v28 = *(void *)(v2 + OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_placeholderView + 8);
      uint64_t ObjectType = swift_getObjectType();
      id v30 = &type metadata for Artwork.Placeholder;
      unint64_t v31 = sub_1003B3530();
      uint64_t v20 = (void *)swift_allocObject();
      id v29 = v20;
      v20[2] = v15;
      v20[3] = v16;
      v20[4] = v17;
      v20[5] = v14;
      v20[6] = v26;
      v20[7] = v19;
      unint64_t v24 = v17;
      sub_1003B35D4(v15, v16, v17, v14);
      sub_1003B35D4(v15, v16, v17, v14);
      id v21 = v25;
      sub_1005309C0();
      sub_1003B362C(v15, v16, v24, v14);
    }
    sub_1003AF950();
    sub_1003AF4F8();
    sub_1003B5D58((uint64_t)v6, type metadata accessor for Artwork);
  }
  sub_1003B5D58(a1, type metadata accessor for Artwork);
  return sub_1003B5D58((uint64_t)v10, type metadata accessor for Artwork);
}

void (*Artwork.View.typedConfiguration.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  size_t v4 = *(void *)(*(void *)(type metadata accessor for Artwork(0) - 8) + 64);
  id v3[4] = malloc(v4);
  uint64_t v5 = malloc(v4);
  v3[5] = v5;
  uint64_t v6 = v1 + OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_typedConfiguration;
  swift_beginAccess();
  sub_1003B34C8(v6, (uint64_t)v5, type metadata accessor for Artwork);
  return sub_1003AEEE4;
}

void sub_1003AEEE4(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 32);
  size_t v4 = *(void **)(*(void *)a1 + 40);
  if (a2)
  {
    sub_1003B34C8(*(void *)(*(void *)a1 + 40), (uint64_t)v3, type metadata accessor for Artwork);
    Artwork.View.typedConfiguration.setter((uint64_t)v3);
    sub_1003B5D58((uint64_t)v4, type metadata accessor for Artwork);
  }
  else
  {
    Artwork.View.typedConfiguration.setter(*(void *)(*(void *)a1 + 40));
  }
  free(v4);
  free(v3);

  free(v2);
}

id Artwork.View.currentImage.getter()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_imageView) image];

  return v1;
}

uint64_t Artwork.View.imageDidChangeHandler.getter()
{
  id v1 = (uint64_t *)(v0 + OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_imageDidChangeHandler);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_100121440(*v1);
  return v2;
}

uint64_t Artwork.View.imageDidChangeHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_imageDidChangeHandler);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_100121638(v6);
}

uint64_t (*Artwork.View.imageDidChangeHandler.modify())()
{
  return j__swift_endAccess;
}

Swift::Void __swiftcall Artwork.View.layoutSubviews()()
{
  v27.receiver = v0;
  v27.super_class = (Class)swift_getObjectType();
  [super layoutSubviews];
  [v0 bounds];
  double v2 = v1;
  double v4 = v3;
  [v0 bounds];
  double v7 = Artwork.View.fittingImageSize(in:)(v5, v6);
  double v9 = v8;
  switch((unint64_t)[v0 contentMode])
  {
    case 6uLL:
      [v0 bounds];
      double MaxY = CGRectGetMaxY(v28);
      v29.origin.CGFloat x = v2;
      v29.origin.CGFloat y = v4;
      v29.size.CGFloat width = v7;
      v29.size.CGFloat height = v9;
      double v4 = MaxY - CGRectGetHeight(v29);
      break;
    case 8uLL:
      [v0 bounds];
      double MaxX = CGRectGetMaxX(v30);
      v31.origin.CGFloat x = v2;
      v31.origin.CGFloat y = v4;
      v31.size.CGFloat width = v7;
      v31.size.CGFloat height = v9;
      double v2 = MaxX - CGRectGetWidth(v31);
      break;
    default:
      break;
  }
  char v12 = *(void **)&v0[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_imageView];
  sub_100535B80();
  [v12 setFrame:];
  id v13 = *(void **)&v0[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_placeholderView];
  if (v13) {
    [v13 setFrame:v2, v4, v7, v9];
  }
  id v14 = &v0[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View__laidBounds];
  CGFloat v15 = *(double *)&v0[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View__laidBounds];
  CGFloat v16 = *(double *)&v0[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View__laidBounds + 8];
  CGFloat v17 = *(double *)&v0[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View__laidBounds + 16];
  CGFloat v18 = *(double *)&v0[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View__laidBounds + 24];
  [v0 bounds];
  v33.origin.CGFloat x = v19;
  v33.origin.CGFloat y = v20;
  v33.size.CGFloat width = v21;
  v33.size.CGFloat height = v22;
  v32.origin.CGFloat x = v15;
  v32.origin.CGFloat y = v16;
  v32.size.CGFloat width = v17;
  v32.size.CGFloat height = v18;
  if (!CGRectEqualToRect(v32, v33))
  {
    [v0 bounds];
    *(void *)id v14 = v23;
    *((void *)v14 + 1) = v24;
    *((void *)v14 + 2) = v25;
    *((void *)v14 + 3) = v26;
    sub_1003AF4F8();
  }
  sub_1003AF950();
}

double Artwork.View.fittingImageSize(in:)(double a1, double a2)
{
  if (a1 == 0.0 && a2 == 0.0)
  {
    id v5 = [v2 artworkCatalog];
    double v6 = 0.0;
    if (v5)
    {
      double v7 = v5;
      *(double *)&uint64_t v8 = COERCE_DOUBLE(MPArtworkCatalog.originalSize.getter());
      char v10 = v9;

      if ((v10 & 1) == 0) {
        return *(double *)&v8;
      }
    }
    return v6;
  }
  sub_100535BF0();
  double v12 = v11;
  id v13 = [*(id *)&v2[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_imageView] image];
  if (v13)
  {
    id v14 = v13;
    [v13 size];
  }
  else
  {
    id v17 = [v2 artworkCatalog];
    if (!v17) {
      return a1;
    }
    CGFloat v18 = v17;
    MPArtworkCatalog.originalSize.getter();
    char v20 = v19;

    if (v20) {
      return a1;
    }
  }
  sub_100535BF0();
  if ((sub_10052FAF0() & 1) == 0) {
    return a1;
  }
  sub_100535BF0();
  if (vabdd_f64(v12, v15) <= 0.1) {
    return a1;
  }
  sub_100535BF0();
  if (v16 <= 1.0)
  {
    double v6 = v16 * a2;
    if (v16 * a2 > a1) {
      return a1;
    }
  }
  else
  {
    double v6 = a1;
    if (a1 / v16 > a2) {
      return v16 * a2;
    }
  }
  return v6;
}

void sub_1003AF4F8()
{
  double v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  id v3 = [v0 artworkCatalog];
  uint64_t v4 = (uint64_t)v1 + OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_typedConfiguration;
  swift_beginAccess();
  if (*(void *)(v4 + 32))
  {
    id v5 = *(void **)(v4 + 32);
    id v6 = v5;
  }
  else
  {
    id v5 = 0;
  }
  swift_endAccess();
  char v7 = Optional<A>.isArtworkVisuallyIdentical(to:)((uint64_t)v5, (unint64_t)v3);

  if ((v7 & 1) == 0)
  {
    [v1 clearArtworkCatalogs];
    sub_1003B07D4(0);
  }
  [v1 bounds];
  if (v9 == 0.0 && v8 == 0.0 || (char v10 = *(void **)(v4 + 32)) == 0)
  {
    sub_1003B07D4(0);
    [v1 setNeedsLayout];
    return;
  }
  sub_100013720(v4, (uint64_t)v47, &qword_100670ED0);
  sub_100013720((uint64_t)v47, (uint64_t)&v45, &qword_100670ED0);
  if (v46)
  {
    id v11 = v10;
    swift_bridgeObjectRetain();
    sub_1003B43F8((uint64_t)&v45);
  }
  else
  {
    id v12 = v10;
    sub_100013C44((uint64_t)&v45, &qword_100670ED0);
  }
  NSString v13 = sub_100534CA0();
  swift_bridgeObjectRelease();
  sub_100013720((uint64_t)v47, (uint64_t)&v45, &qword_100670ED0);
  if (v46)
  {
    uint64_t Strong = swift_weakLoadStrong();
    sub_1003B43F8((uint64_t)&v45);
  }
  else
  {
    sub_100013C44((uint64_t)&v45, &qword_100670ED0);
    uint64_t Strong = 0;
  }
  [v10 setCacheIdentifier:v13 forCacheReference:Strong];

  swift_unknownObjectRelease();
  id v15 = [v1 traitCollection];
  [v15 displayScale];
  double v17 = v16;

  [v10 setDestinationScale:v17];
  uint64_t v18 = v4 + *(int *)(type metadata accessor for Artwork(0) + 32);
  uint64_t v19 = *(unsigned __int8 *)(v18 + 8);
  if (v19 == 255)
  {
    [v1 bounds];
    double v21 = v20;
    double v23 = v22;
  }
  else
  {
    uint64_t v24 = *(void *)(v18 + 16);
    uint64_t v25 = *(void *)v18;
    char v26 = *(unsigned char *)(v18 + 24);
    [v1 bounds];
    double v28 = v27;
    double v30 = v29;
    sub_1003B1CDC(v27, v29, v25, v19);
    double v21 = v31;
    sub_1003B1CDC(v28, v30, v24, v26);
    double v23 = v32;
  }
  [v10 setFittingSize:v21, v23];
  [v10 setRenderHint:[v10 renderHint] | 1];
  id v33 = [v1 artworkCatalog];
  if (v33)
  {
    uint64_t v34 = v33;
    [v33 scaledFittingSize];
    double v36 = v35;
    double v38 = v37;

    [v10 scaledFittingSize];
    if (v36 == v40 && v38 == v39)
    {
      id v41 = [v1 artworkCatalog];

      if (v41)
      {
        sub_100013C44((uint64_t)v47, &qword_100670ED0);

        return;
      }
    }
  }
  else
  {
    [v10 scaledFittingSize];
  }
  MPArtworkCatalog.expectedRatio.getter();
  if ((v42 & 1) == 0) {
    [v1 setNeedsLayout];
  }
  uint64_t v45 = v1;
  uint64_t v43 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v43;
  *(void *)(v44 + 24) = ObjectType;
  MPArtworkCatalog.setDestination<A>(_:for:completion:)((uint64_t)&v45, 1, (uint64_t)sub_1003B5C2C, v44, ObjectType);

  swift_release();
  sub_100013C44((uint64_t)v47, &qword_100670ED0);
}

uint64_t sub_1003AF950()
{
  sub_10000BB04(&qword_100671210);
  __chkstk_darwin();
  BOOL v78 = (char *)&v76 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v79 = (uint64_t *)((char *)&v76 - v2);
  __chkstk_darwin();
  uint64_t v86 = (uint64_t)&v76 - v3;
  __chkstk_darwin();
  uint64_t v87 = (uint64_t)&v76 - v4;
  __chkstk_darwin();
  uint64_t v83 = (uint64_t *)((char *)&v76 - v5);
  __chkstk_darwin();
  uint64_t v85 = (char *)&v76 - v6;
  __chkstk_darwin();
  double v8 = (char *)&v76 - v7;
  __chkstk_darwin();
  char v10 = (uint64_t *)((char *)&v76 - v9);
  __chkstk_darwin();
  id v12 = (char *)&v76 - v11;
  sub_10000BB04(&qword_100678A80);
  __chkstk_darwin();
  id v14 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v84 = (uint64_t)&v76 - v15;
  __chkstk_darwin();
  uint64_t v80 = (uint64_t)&v76 - v16;
  __chkstk_darwin();
  uint64_t v18 = (char *)&v76 - v17;
  uint64_t v19 = (int *)type metadata accessor for Artwork.Decoration(0);
  uint64_t v89 = *((void *)v19 - 1);
  __chkstk_darwin();
  double v21 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  double v23 = (char *)&v76 - v22;
  id v82 = *(id *)&v0[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_imageView];
  [v82 frame];
  double v25 = v24;
  double v27 = v26;
  double v28 = &v0[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_typedConfiguration];
  swift_beginAccess();
  uint64_t v29 = (uint64_t)&v28[*(int *)(type metadata accessor for Artwork(0) + 24)];
  uint64_t v91 = v23;
  sub_1003B34C8(v29, (uint64_t)v23, type metadata accessor for Artwork.Decoration);
  uint64_t v30 = *(void *)(v29 + v19[7]);
  if ((v30 & 1) != 0 && v25 < v27)
  {
    sub_1003B34C8((uint64_t)v91, (uint64_t)v21, type metadata accessor for Artwork.Decoration);
LABEL_6:
    sub_100013720((uint64_t)&v21[v19[5]], (uint64_t)v18, &qword_100678A80);
    sub_1003B5D58((uint64_t)v21, type metadata accessor for Artwork.Decoration);
    uint64_t v31 = sub_100535CE0();
    int v32 = 1;
    BOOL v33 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v18, 1, v31) != 1;
    sub_100013C44((uint64_t)v18, &qword_100678A80);
    [v0 setClipsToBounds:v33];
    id v34 = *(id *)&v91[v19[6]];
    goto LABEL_8;
  }
  sub_1003B34C8((uint64_t)v91, (uint64_t)v21, type metadata accessor for Artwork.Decoration);
  if ((v30 & 2) != 0 && v27 < v25) {
    goto LABEL_6;
  }
  sub_1003B5D58((uint64_t)v21, type metadata accessor for Artwork.Decoration);
  [v0 setClipsToBounds:0];
  id v34 = [self clearColor];
  int v32 = 0;
LABEL_8:
  [v0 setBackgroundColor:v34];

  uint64_t v77 = v14;
  int v90 = v32;
  if (v32)
  {
    sub_1003B34C8((uint64_t)v91, (uint64_t)v12, type metadata accessor for Artwork.Decoration);
    uint64_t v35 = v89;
    double v36 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v89 + 56);
    double v37 = v12;
    uint64_t v38 = 0;
  }
  else
  {
    uint64_t v35 = v89;
    double v36 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v89 + 56);
    double v37 = v12;
    uint64_t v38 = 1;
  }
  uint64_t v88 = v36;
  v36((uint64_t)v37, v38, 1, v19);
  sub_100013720((uint64_t)v12, (uint64_t)v10, &qword_100671210);
  double v39 = *(unsigned int (**)(uint64_t *, uint64_t, int *))(v35 + 48);
  if (v39(v10, 1, v19) == 1)
  {
    double v40 = v0;
    sub_100013C44((uint64_t)v10, &qword_100671210);
    uint64_t v41 = 0;
    LOBYTE(v42) = 0;
    uint64_t v43 = 0;
  }
  else
  {
    uint64_t v41 = *v10;
    uint64_t v42 = v10[1];
    uint64_t v43 = (void *)v10[2];
    id v44 = v43;
    uint64_t v45 = v0;
    sub_1003B5D58((uint64_t)v10, type metadata accessor for Artwork.Decoration);
  }
  UIView.border.setter(v41, v42, v43);
  sub_100013720((uint64_t)v12, (uint64_t)v8, &qword_100671210);
  if (v39((uint64_t *)v8, 1, v19) == 1)
  {
    sub_100013C44((uint64_t)v8, &qword_100671210);
    uint64_t v46 = sub_100535CE0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v80, 1, 1, v46);
  }
  else
  {
    sub_100013720((uint64_t)&v8[v19[5]], v80, &qword_100678A80);
    sub_1003B5D58((uint64_t)v8, type metadata accessor for Artwork.Decoration);
  }
  uint64_t v47 = (uint64_t)v85;
  id v48 = v83;
  sub_100535CF0();

  sub_100013C44((uint64_t)v12, &qword_100671210);
  if (v90)
  {
    uint64_t v49 = 1;
  }
  else
  {
    sub_1003B34C8((uint64_t)v91, v47, type metadata accessor for Artwork.Decoration);
    uint64_t v49 = 0;
  }
  v88(v47, v49, 1, v19);
  sub_100013720(v47, (uint64_t)v48, &qword_100671210);
  unsigned int v50 = v39(v48, 1, v19);
  uint64_t v81 = v0;
  size_t v51 = v39;
  if (v50 == 1)
  {
    id v52 = v82;
    id v53 = v82;
    sub_100013C44((uint64_t)v48, &qword_100671210);
    uint64_t v54 = 0;
    LOBYTE(v55) = 0;
    uint64_t v56 = 0;
  }
  else
  {
    uint64_t v54 = *v48;
    uint64_t v55 = v48[1];
    uint64_t v56 = (void *)v48[2];
    id v57 = v56;
    id v52 = v82;
    id v58 = v82;
    sub_1003B5D58((uint64_t)v48, type metadata accessor for Artwork.Decoration);
  }
  UIView.border.setter(v54, v55, v56);
  uint64_t v59 = v87;
  sub_100013720(v47, v87, &qword_100671210);
  uint64_t v60 = v51;
  if (v51((uint64_t *)v59, 1, v19) == 1)
  {
    sub_100013C44(v59, &qword_100671210);
    uint64_t v61 = sub_100535CE0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v84, 1, 1, v61);
  }
  else
  {
    sub_100013720(v59 + v19[5], v84, &qword_100678A80);
    sub_1003B5D58(v59, type metadata accessor for Artwork.Decoration);
  }
  size_t v62 = v81;
  sub_100535CF0();

  sub_100013C44(v47, &qword_100671210);
  if (v90)
  {
    uint64_t v63 = 1;
    uint64_t v64 = v86;
  }
  else
  {
    uint64_t v64 = v86;
    sub_1003B34C8((uint64_t)v91, v86, type metadata accessor for Artwork.Decoration);
    uint64_t v63 = 0;
  }
  v88(v64, v63, 1, v19);
  uint64_t v65 = *(void **)&v62[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_placeholderView];
  if (v65)
  {
    uint64_t v66 = v79;
    sub_100013720(v64, (uint64_t)v79, &qword_100671210);
    if (v60(v66, 1, v19) == 1)
    {
      id v67 = v65;
      sub_100013C44((uint64_t)v66, &qword_100671210);
      uint64_t v68 = 0;
      LOBYTE(v69) = 0;
      uint64_t v70 = 0;
    }
    else
    {
      uint64_t v68 = *v66;
      uint64_t v69 = v66[1];
      uint64_t v70 = (void *)v66[2];
      id v71 = v70;
      id v72 = v65;
      sub_1003B5D58((uint64_t)v66, type metadata accessor for Artwork.Decoration);
    }
    uint64_t v73 = (uint64_t)v78;
    UIView.border.setter(v68, v69, v70);
    sub_100013720(v64, v73, &qword_100671210);
    if (v60((uint64_t *)v73, 1, v19) == 1)
    {
      sub_100013C44(v73, &qword_100671210);
      uint64_t v74 = sub_100535CE0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v77, 1, 1, v74);
    }
    else
    {
      sub_100013720(v73 + v19[5], (uint64_t)v77, &qword_100678A80);
      sub_1003B5D58(v73, type metadata accessor for Artwork.Decoration);
    }
    sub_100535CF0();
  }
  sub_100013C44(v64, &qword_100671210);
  return sub_1003B5D58((uint64_t)v91, type metadata accessor for Artwork.Decoration);
}

double Artwork.View.intrinsicContentSize.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_typedConfiguration;
  swift_beginAccess();
  uint64_t v2 = v1 + *(int *)(type metadata accessor for Artwork(0) + 32);
  if (*(unsigned char *)(v2 + 8) == 2 && *(unsigned char *)(v2 + 24) == 2)
  {
    double v3 = *(double *)(v2 + 16);
    double v4 = *(double *)v2;
  }
  else
  {
    double v4 = 0.0;
    double v3 = 0.0;
  }
  return Artwork.View.fittingImageSize(in:)(v4, v3);
}

double Artwork.View.sizeThatFits(_:)(double a1, double a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_typedConfiguration;
  swift_beginAccess();
  uint64_t v6 = v5 + *(int *)(type metadata accessor for Artwork(0) + 32);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 8);
  if (v7 == 255) {
    return Artwork.View.fittingImageSize(in:)(a1, a2);
  }
  uint64_t v9 = *(void *)(v6 + 16);
  char v10 = *(unsigned char *)(v6 + 24);
  sub_1003B1CDC(a1, a2, *(void *)v6, v7);
  double v8 = v11;
  sub_1003B1CDC(a1, a2, v9, v10);
  return v8;
}

double Artwork.Size.computedSize(in:)(uint64_t a1, char a2, uint64_t a3, char a4, double a5, double a6)
{
  sub_1003B1CDC(a5, a6, a1, a2);
  double v11 = v10;
  sub_1003B1CDC(a5, a6, a3, a4);
  return v11;
}

uint64_t sub_1003B07D4(uint64_t a1)
{
  uint64_t v2 = v1;
  double v4 = *(void **)&v2[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_imageView];
  [v4 setImage:a1];
  uint64_t v5 = &v2[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_typedConfiguration];
  swift_beginAccess();
  if (*((void *)v5 + 4) && (uint64_t v6 = (void *)*((void *)v5 + 3)) != 0) {
    id v7 = v6;
  }
  else {
    id v7 = [self clearColor];
  }
  double v8 = v7;
  [v4 setBackgroundColor:v7];

  if (a1 || (id v11 = [v2 artworkCatalog], v11, !v11))
  {
    if (*((void *)v5 + 4))
    {
      uint64_t v9 = *(void **)&v2[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_placeholderView];
      if (!v9) {
        goto LABEL_16;
      }
      BOOL v10 = 1;
      goto LABEL_15;
    }
  }
  uint64_t v12 = type metadata accessor for Artwork(0);
  uint64_t v13 = &v5[*(int *)(v12 + 28)];
  id v14 = (void *)*((void *)v13 + 3);
  if (v14)
  {
    uint64_t v16 = *(void **)v13;
    uint64_t v15 = (void *)*((void *)v13 + 1);
    uint64_t v17 = (void *)*((void *)v13 + 2);
    uint64_t v18 = *((void *)v13 + 4);
    uint64_t v19 = *((void *)v13 + 5);
    v33[0] = *(void *)v13;
    v33[1] = v15;
    void v33[2] = v17;
    v33[3] = v14;
    v33[4] = v18;
    v33[5] = v19;
    uint64_t v20 = &v2[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_placeholderView];
    if (!*(void *)&v2[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_placeholderView])
    {
      objc_allocWithZone((Class)type metadata accessor for Artwork.Placeholder.View());
      sub_1003B35D4(v16, v15, v17, v14);
      id v21 = v17;
      id v22 = v14;
      id v23 = v16;
      id v24 = v15;
      double v25 = Artwork.Placeholder.View.init(configuration:)((uint64_t)v33);
      uint64_t v26 = sub_1003B3890(&qword_100671208, (void (*)(uint64_t))type metadata accessor for Artwork.Placeholder.View);
      [v25 setClipsToBounds:1];
      double v27 = v25;
      [v2 addSubview:v27];

      double v28 = *(void **)v20;
      *(void *)uint64_t v20 = v27;
      *((void *)v20 + 1) = v26;
    }
  }
  uint64_t v9 = *(void **)&v2[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_placeholderView];
  if (v9)
  {
    BOOL v10 = *(void *)&v5[*(int *)(v12 + 28) + 24] == 0;
LABEL_15:
    [v9 setHidden:v10];
  }
LABEL_16:
  sub_1003AF950();
  uint64_t v29 = &v2[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_imageDidChangeHandler];
  uint64_t result = swift_beginAccess();
  uint64_t v31 = *(void (**)(uint64_t))v29;
  if (*(void *)v29)
  {
    uint64_t v32 = swift_retain();
    v31(v32);
    return sub_100121638((uint64_t)v31);
  }
  return result;
}

void sub_1003B0AA8(void **a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = swift_dynamicCastClass();
  if (!v6) {
    return;
  }
  id v7 = (void *)v6;
  id v18 = v5;
  id v8 = [a2 imageRepresentation];
  if (v8)
  {
    id v17 = v8;
    id v9 = [v8 image];
    if (v9)
    {
      BOOL v10 = v9;
      if (([v17 isImagePrepared] & 1) == 0)
      {
        uint64_t v13 = (void *)swift_allocObject();
        void v13[2] = a3;
        v13[3] = v10;
        v13[4] = v7;
        aBlock[4] = sub_1003B5C7C;
        uint64_t aBlock[5] = v13;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100016B44;
        aBlock[3] = &unk_100632858;
        id v14 = _Block_copy(aBlock);
        id v15 = v18;
        id v16 = v10;
        swift_retain();
        swift_release();
        [v16 prepareForDisplayWithCompletionHandler:v14];

        _Block_release(v14);
        return;
      }
      id v11 = v10;
      sub_1003B07D4((uint64_t)v10);

      [v7 setNeedsLayout];
      uint64_t v12 = v17;
      goto LABEL_8;
    }
  }
  sub_1003B07D4(0);
  [v7 setNeedsLayout];
  uint64_t v12 = v18;
LABEL_8:
}

uint64_t sub_1003B0CAC(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = sub_100533280();
  uint64_t v24 = *(void *)(v8 - 8);
  __chkstk_darwin();
  BOOL v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1005332B0();
  uint64_t v11 = *(void *)(v23 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100123DA4(0, (unint64_t *)&qword_1006708E0);
  uint64_t v22 = sub_100535960();
  id v14 = (void *)swift_allocObject();
  void v14[2] = a2;
  void v14[3] = a1;
  v14[4] = a3;
  v14[5] = a4;
  aBlock[4] = sub_1003B5CF0;
  uint64_t aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001CB5A0;
  aBlock[3] = &unk_1006328A8;
  id v15 = _Block_copy(aBlock);
  id v16 = a1;
  id v17 = a3;
  id v18 = a4;
  swift_retain();
  swift_release();
  sub_1005332A0();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1003B3890((unint64_t *)&unk_100672CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000BB04(&qword_1006711F8);
  sub_1003B5CFC();
  sub_1005360C0();
  uint64_t v19 = (void *)v22;
  sub_100535980();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v23);
}

void sub_1003B0F8C(uint64_t a1, void *a2, void *a3, void *a4)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v8 = [a4 artworkCatalog];
  uint64_t v9 = v8;
  if (!Strong)
  {
    if (v8)
    {

      return;
    }
LABEL_7:
    if (a2)
    {
      id v12 = a2;
      sub_1003B07D4((uint64_t)a2);
    }
    else
    {
      if (qword_1006705F8 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_100530920();
      sub_10000EA90(v13, (uint64_t)static Logger.artwork);
      id v14 = a3;
      id v15 = sub_100530900();
      os_log_type_t v16 = sub_1005357C0();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = swift_slowAlloc();
        id v18 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 138412290;
        *(void *)(v17 + 4) = v14;
        *id v18 = v14;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Failed to prepare image: %@", (uint8_t *)v17, 0xCu);
        sub_10000BB04(&qword_100671200);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      sub_1003B07D4((uint64_t)v14);
    }
    [a4 setNeedsLayout];
    return;
  }
  if (!v8)
  {

    return;
  }
  sub_100123DA4(0, (unint64_t *)&qword_100675F70);
  id v10 = Strong;
  char v11 = sub_100535D90();

  if (v11) {
    goto LABEL_7;
  }
}

void Gradient.View.init(frame:)()
{
}

uint64_t sub_1003B12B0@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = type metadata accessor for Artwork(0);
  a1[4] = sub_1003B3890(&qword_100670F30, (void (*)(uint64_t))type metadata accessor for Artwork);
  double v3 = sub_1000FF040(a1);
  uint64_t v4 = v1 + OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_typedConfiguration;
  swift_beginAccess();
  return sub_1003B34C8(v4, (uint64_t)v3, type metadata accessor for Artwork);
}

uint64_t sub_1003B1368(uint64_t a1)
{
  type metadata accessor for Artwork(0);
  __chkstk_darwin();
  double v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100104808(a1, (uint64_t)v6);
  sub_10000BB04(&qword_1006711F0);
  swift_dynamicCast();
  Artwork.View.typedConfiguration.setter((uint64_t)v3);
  return sub_100013D48(a1);
}

void (*sub_1003B1424(uint64_t **a1))(uint64_t *a1, char a2)
{
  double v3 = (uint64_t *)malloc(0xD0uLL);
  *a1 = v3;
  v3[23] = v1;
  uint64_t v4 = type metadata accessor for Artwork(0);
  v3[24] = v4;
  v3[25] = (uint64_t)malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[3] = v4;
  id v3[4] = sub_1003B3890(&qword_100670F30, (void (*)(uint64_t))type metadata accessor for Artwork);
  uint64_t v5 = sub_1000FF040(v3);
  uint64_t v6 = v1 + OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_typedConfiguration;
  swift_beginAccess();
  sub_1003B34C8(v6, (uint64_t)v5, type metadata accessor for Artwork);
  return sub_1003B1540;
}

void sub_1003B1540(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  double v3 = *(void **)(*a1 + 200);
  if (a2)
  {
    sub_100104808(*a1, (uint64_t)v2 + 40);
    sub_100104808((uint64_t)v2 + 40, (uint64_t)v2 + 80);
    sub_10000BB04(&qword_1006711F0);
    swift_dynamicCast();
    Artwork.View.typedConfiguration.setter((uint64_t)v3);
    sub_100013D48((uint64_t)v2 + 40);
  }
  else
  {
    sub_100104808(*a1, (uint64_t)v2 + 120);
    sub_10000BB04(&qword_1006711F0);
    swift_dynamicCast();
    Artwork.View.typedConfiguration.setter((uint64_t)v3);
  }
  sub_100013D48((uint64_t)v2);
  free(v3);

  free(v2);
}

uint64_t sub_1003B163C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();

  return UIContentView.supports(_:)(a1, ObjectType, a3);
}

uint64_t Artwork.Caching.init(reference:identifier:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  swift_weakInit();
  *a3 = a1;
  a3[1] = a2;
  swift_weakAssign();

  return swift_release();
}

uint64_t Artwork.Caching.init(reference:)@<X0>(void *a1@<X8>)
{
  swift_weakInit();
  swift_weakAssign();
  uint64_t result = swift_release();
  *a1 = 0xD00000000000001CLL;
  a1[1] = 0x8000000100566780;
  return result;
}

void *Artwork.Caching.Reference.defaultIdentifier.unsafeMutableAddressor()
{
  return &static Artwork.Caching.Reference.defaultIdentifier;
}

unint64_t static Artwork.Caching.Reference.defaultIdentifier.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t Artwork.Caching.Reference.__allocating_init()()
{
  return swift_allocObject();
}

BOOL static Artwork.Caching.Reference.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

void *Artwork.Content.init(catalog:background:)(uint64_t a1, void *a2)
{
  if (!a1)
  {

    return 0;
  }
  return a2;
}

uint64_t static Artwork.Content.__derived_struct_equals(_:_:)(void *a1, uint64_t a2, void *a3)
{
  if (a1)
  {
    if (a3)
    {
      uint64_t v4 = a1;
      sub_100123DA4(0, (unint64_t *)&qword_100678F40);
      id v5 = a3;
      id v6 = v4;
      LOBYTE(v4) = sub_100535D90();

      if (v4) {
        goto LABEL_4;
      }
    }
  }
  else if (!a3)
  {
LABEL_4:
    sub_100123DA4(0, (unint64_t *)&qword_1006729F0);
    return sub_100535D90() & 1;
  }
  return 0;
}

uint64_t sub_1003B1888(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  double v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      sub_100123DA4(0, (unint64_t *)&qword_100678F40);
      id v4 = v3;
      id v5 = v2;
      char v6 = sub_100535D90();

      if (v6) {
        goto LABEL_4;
      }
    }
  }
  else if (!v3)
  {
LABEL_4:
    sub_100123DA4(0, (unint64_t *)&qword_1006729F0);
    return sub_100535D90() & 1;
  }
  return 0;
}

uint64_t Artwork.Decoration.border.getter()
{
  uint64_t v1 = *v0;
  id v2 = (id)v0[2];
  return v1;
}

void Artwork.Decoration.border.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)uint64_t v3 = a1;
  *(void *)(v3 + 8) = a2;
  *(void *)(v3 + 16) = a3;
}

uint64_t Artwork.Decoration.corner.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Artwork.Decoration(0);
  return sub_100013720(v1 + *(int *)(v3 + 20), a1, &qword_100678A80);
}

uint64_t Artwork.Decoration.corner.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Artwork.Decoration(0);
  return sub_1000A2A60(a1, v1 + *(int *)(v3 + 20), &qword_100678A80);
}

CFRange (__swiftcall *Artwork.Decoration.corner.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id Artwork.Decoration.fillColor.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for Artwork.Decoration(0) + 24));

  return v1;
}

void Artwork.Decoration.fillColor.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Artwork.Decoration(0) + 24);

  *(void *)(v1 + v3) = a1;
}

CFRange (__swiftcall *Artwork.Decoration.fillColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Artwork.Decoration.fillAxes.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Artwork.Decoration(0) + 28));
}

uint64_t Artwork.Decoration.fillAxes.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for Artwork.Decoration(0);
  *(void *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

CFRange (__swiftcall *Artwork.Decoration.fillAxes.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t static Artwork.Decoration.with(_:)@<X0>(uint64_t (*a1)(void *)@<X0>, void *a2@<X8>)
{
  id v4 = (int *)type metadata accessor for Artwork.Decoration(0);
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  id v5 = (char *)a2 + v4[5];
  uint64_t v6 = sub_100535CE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = v4[6];
  *(void *)((char *)a2 + v7) = [self blackColor];
  *(void *)((char *)a2 + v4[7]) = 1;
  return a1(a2);
}

uint64_t sub_1003B1CDC(double a1, double a2, uint64_t a3, char a4)
{
  if (!a4)
  {
    if (a1 != 1.79769313e308) {
      return result;
    }
    sub_1005361C0(67);
    v9._uint64_t countAndFlagsBits = 0x6F69736E656D6944;
    v9._object = (void *)0xE90000000000006ELL;
    sub_100534E80(v9);
    v10._object = (void *)0x8000000100566910;
    v10._uint64_t countAndFlagsBits = 0xD000000000000030;
    sub_100534E80(v10);
    v11._uint64_t countAndFlagsBits = sub_100535C00();
    sub_100534E80(v11);
    swift_bridgeObjectRelease();
    v12._uint64_t countAndFlagsBits = 0x696C61766E49203ALL;
    v12._object = (void *)0xEF68746469772064;
    sub_100534E80(v12);
LABEL_10:
    uint64_t result = sub_1005363F0();
    __break(1u);
    return result;
  }
  if (a4 == 1 && a2 == 1.79769313e308)
  {
    sub_1005361C0(68);
    v5._uint64_t countAndFlagsBits = 0x6F69736E656D6944;
    v5._object = (void *)0xE90000000000006ELL;
    sub_100534E80(v5);
    v6._object = (void *)0x8000000100566910;
    v6._uint64_t countAndFlagsBits = 0xD000000000000030;
    sub_100534E80(v6);
    v7._uint64_t countAndFlagsBits = sub_100535C00();
    sub_100534E80(v7);
    swift_bridgeObjectRelease();
    v8._uint64_t countAndFlagsBits = 0xD000000000000010;
    v8._object = (void *)0x8000000100566950;
    sub_100534E80(v8);
    goto LABEL_10;
  }
  return result;
}

BOOL static Artwork.Size.Dimension.__derived_enum_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if (a2)
  {
    BOOL v4 = *(double *)&a1 == *(double *)&a3;
    if (a4 != 1) {
      BOOL v4 = 0;
    }
    BOOL v5 = a4 == 2 && *(double *)&a1 == *(double *)&a3;
    if (a2 == 1) {
      return v4;
    }
    else {
      return v5;
    }
  }
  else
  {
    return !a4 && *(double *)&a1 == *(double *)&a3;
  }
}

uint64_t sub_1003B1F60(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  int v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (*(unsigned char *)(a1 + 8) == 1)
    {
      if (v4 == 1 && v2 == v3) {
        return 1;
      }
    }
    else if (v4 == 2 && v2 == v3)
    {
      return 1;
    }
  }
  else if (!*(unsigned char *)(a2 + 8) && v2 == v3)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1003B1FE4(uint64_t a1, uint64_t a2)
{
  return _s11MusicCoreUI7ArtworkV4SizeV23__derived_struct_equalsySbAE_AEtFZ_0(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)a2, *(unsigned char *)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24));
}

uint64_t sub_1003B200C(uint64_t a1)
{
  return sub_1003B20AC(a1, static Artwork.Decoration.grid, &qword_100670460, (uint64_t)static UIView.Corner.medium);
}

uint64_t Artwork.Decoration.grid.unsafeMutableAddressor()
{
  return sub_1003B22D8(&qword_100670328, (uint64_t)static Artwork.Decoration.grid);
}

uint64_t static Artwork.Decoration.grid.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1003B2524(&qword_100670328, (uint64_t)static Artwork.Decoration.grid, a1);
}

uint64_t sub_1003B2080(uint64_t a1)
{
  return sub_1003B20AC(a1, static Artwork.Decoration.list, &qword_100670458, (uint64_t)static UIView.Corner.small);
}

uint64_t sub_1003B20AC(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  sub_10000BB04(&qword_100678A80);
  __chkstk_darwin();
  Swift::String v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v9 = (int *)type metadata accessor for Artwork.Decoration(0);
  sub_10000ED18((uint64_t)v9, a2);
  Swift::String v10 = (void *)sub_10000EA90((uint64_t)v9, (uint64_t)a2);
  if (qword_100670440 != -1) {
    swift_once();
  }
  uint64_t v11 = static UIView.Border.artwork;
  uint64_t v12 = byte_10067B608;
  uint64_t v13 = *a3;
  id v14 = (id)qword_10067B610;
  if (v13 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_100535CE0();
  uint64_t v16 = sub_10000EA90(v15, a4);
  uint64_t v17 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v8, v16, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v8, 0, 1, v15);
  id v18 = [self blackColor];
  *Swift::String v10 = v11;
  v10[1] = v12;
  v10[2] = v14;
  uint64_t result = sub_1003B5B54((uint64_t)v8, (uint64_t)v10 + v9[5]);
  *(void *)((char *)v10 + v9[6]) = v18;
  *(void *)((char *)v10 + v9[7]) = 1;
  return result;
}

uint64_t Artwork.Decoration.list.unsafeMutableAddressor()
{
  return sub_1003B22D8(&qword_100670330, (uint64_t)static Artwork.Decoration.list);
}

uint64_t sub_1003B22D8(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Artwork.Decoration(0);

  return sub_10000EA90(v3, a2);
}

uint64_t static Artwork.Decoration.list.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1003B2524(&qword_100670330, (uint64_t)static Artwork.Decoration.list, a1);
}

uint64_t sub_1003B2350()
{
  sub_10000BB04(&qword_100678A80);
  __chkstk_darwin();
  uint64_t v1 = (char *)&v11 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v2 = (int *)type metadata accessor for Artwork.Decoration(0);
  sub_10000ED18((uint64_t)v2, static Artwork.Decoration.round);
  uint64_t v3 = (void *)sub_10000EA90((uint64_t)v2, (uint64_t)static Artwork.Decoration.round);
  if (qword_100670440 != -1) {
    swift_once();
  }
  uint64_t v4 = static UIView.Border.artwork;
  uint64_t v5 = byte_10067B608;
  uint64_t v6 = qword_10067B610;
  id v7 = (id)qword_10067B610;
  sub_100535CD0();
  uint64_t v8 = sub_100535CE0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v1, 0, 1, v8);
  id v9 = [self blackColor];
  *uint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  uint64_t result = sub_1003B5B54((uint64_t)v1, (uint64_t)v3 + v2[5]);
  *(void *)((char *)v3 + v2[6]) = v9;
  *(void *)((char *)v3 + v2[7]) = 1;
  return result;
}

uint64_t Artwork.Decoration.round.unsafeMutableAddressor()
{
  return sub_1003B22D8(&qword_100670338, (uint64_t)static Artwork.Decoration.round);
}

uint64_t static Artwork.Decoration.round.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1003B2524(&qword_100670338, (uint64_t)static Artwork.Decoration.round, a1);
}

uint64_t sub_1003B2524@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Artwork.Decoration(0);
  uint64_t v6 = sub_10000EA90(v5, a2);
  return sub_1003B34C8(v6, a3, type metadata accessor for Artwork.Decoration);
}

uint64_t Artwork.Decoration.scaled(using:compatibleWith:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  sub_10000BB04(&qword_100678A80);
  __chkstk_darwin();
  id v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100535C90();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  double v28 = (uint64_t *)((char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  id v14 = (char *)&v27 - v13;
  sub_1003B34C8(v4, a3, type metadata accessor for Artwork.Decoration);
  if (*(void *)(v4 + 16) && *(void *)(a3 + 16))
  {
    int v15 = *(_DWORD *)(v4 + 8);
    [a1 scaledValueForValue:a2 compatibleWithTraitCollection:*(double *)v4];
    *(void *)a3 = v16;
    *(unsigned char *)(a3 + 8) = v15 & 1;
  }
  id v29 = a1;
  uint64_t v30 = a2;
  uint64_t v17 = type metadata accessor for Artwork.Decoration(0);
  sub_100013720(v4 + *(int *)(v17 + 20), (uint64_t)v9, &qword_100678A80);
  uint64_t v18 = sub_100535CE0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v20(v9, 1, v18) == 1) {
    return sub_100013C44((uint64_t)v9, &qword_100678A80);
  }
  sub_100535CB0();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v18);
  uint64_t v22 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v14, v10);
  if (v22 != enum case for UIView.Corner.Radius.value(_:)) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  uint64_t v23 = v22;
  (*(void (**)(char *, uint64_t))(v11 + 96))(v14, v10);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v20)(a3 + *(int *)(v17 + 20), 1, v18);
  if (!result)
  {
    char v24 = v14[8];
    [v29 scaledValueForValue:v30 compatibleWithTraitCollection:*(double *)v14];
    double v25 = v28;
    *double v28 = v26;
    *((unsigned char *)v25 + 8) = v24;
    (*(void (**)(void *, uint64_t, uint64_t))(v11 + 104))(v25, v23, v10);
    return sub_100535CC0();
  }
  return result;
}

uint64_t _s11MusicCoreUI7ArtworkV4SizeV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  if (a2)
  {
    if (a2 == 1)
    {
      uint64_t result = 0;
      if (a6 != 1) {
        return result;
      }
    }
    else
    {
      uint64_t result = 0;
      if (a6 != 2) {
        return result;
      }
    }
  }
  else
  {
    uint64_t result = 0;
    if (a6) {
      return result;
    }
  }
  if (*(double *)&a1 == *(double *)&a5)
  {
    if (a4)
    {
      if (a4 == 1)
      {
        if (a8 == 1 && *(double *)&a3 == *(double *)&a7) {
          return 1;
        }
      }
      else if (a8 == 2 && *(double *)&a3 == *(double *)&a7)
      {
        return 1;
      }
    }
    else if (!a8 && *(double *)&a3 == *(double *)&a7)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t _s11MusicCoreUI7ArtworkV7CachingV23__derived_struct_equalsySbAE_AEtFZ_0(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (char v3 = sub_100536780(), result = 0, (v3 & 1) != 0))
  {
    uint64_t Strong = swift_weakLoadStrong();
    uint64_t v6 = swift_weakLoadStrong();
    uint64_t v7 = v6;
    if (Strong)
    {
      swift_release();
      if (v7)
      {
        swift_release();
        if (Strong == v7) {
          return 1;
        }
      }
    }
    else
    {
      if (!v6) {
        return 1;
      }
      swift_release();
    }
    return 0;
  }
  return result;
}

BOOL _s11MusicCoreUI7ArtworkV10DecorationV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_100535CE0();
  uint64_t v44 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000BB04(&qword_100678AF0);
  __chkstk_darwin();
  id v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000BB04(&qword_100678A80);
  __chkstk_darwin();
  __chkstk_darwin();
  __chkstk_darwin();
  uint64_t v13 = (void *)a1[2];
  id v14 = (void *)a2[2];
  if (v13)
  {
    if (!v14) {
      return 0;
    }
    uint64_t v42 = v12;
    uint64_t v43 = (uint64_t)&v39 - v10;
    double v40 = v6;
    uint64_t v41 = v11;
    uint64_t v15 = v4;
    uint64_t v16 = *a1;
    uint64_t v17 = a1[1];
    uint64_t v39 = *a2;
    uint64_t v18 = v9;
    uint64_t v19 = a1;
    uint64_t v20 = a2[1];
    id v21 = v14;
    id v22 = v13;
    char v23 = v17 & 1;
    uint64_t v4 = v15;
    char v46 = v23;
    char v24 = v23;
    char v25 = v20 & 1;
    a1 = v19;
    id v9 = v18;
    char v45 = v25;
    LOBYTE(v16) = static UIView.Border.__derived_struct_equals(_:_:)(v16, v24, (uint64_t)v22, v39, v25);

    if ((v16 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v42 = v12;
    uint64_t v43 = (uint64_t)&v39 - v10;
    double v40 = v6;
    uint64_t v41 = v11;
    if (v14) {
      return 0;
    }
  }
  uint64_t v26 = type metadata accessor for Artwork.Decoration(0);
  uint64_t v27 = v43;
  sub_100013720((uint64_t)a1 + *(int *)(v26 + 20), v43, &qword_100678A80);
  uint64_t v39 = v26;
  uint64_t v28 = v42;
  sub_100013720((uint64_t)a2 + *(int *)(v26 + 20), v42, &qword_100678A80);
  uint64_t v29 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_100013720(v27, (uint64_t)v9, &qword_100678A80);
  sub_100013720(v28, v29, &qword_100678A80);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
  if (v30((uint64_t)v9, 1, v4) != 1)
  {
    uint64_t v32 = v41;
    sub_100013720((uint64_t)v9, v41, &qword_100678A80);
    if (v30(v29, 1, v4) != 1)
    {
      uint64_t v31 = a2;
      uint64_t v33 = v44;
      id v34 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(v40, v29, v4);
      sub_1003B3890((unint64_t *)&unk_100678F30, (void (*)(uint64_t))&type metadata accessor for UIView.Corner);
      char v35 = sub_100534BF0();
      double v36 = *(void (**)(char *, uint64_t))(v33 + 8);
      v36(v34, v4);
      sub_100013C44(v28, &qword_100678A80);
      sub_100013C44(v43, &qword_100678A80);
      v36((char *)v32, v4);
      sub_100013C44((uint64_t)v9, &qword_100678A80);
      if ((v35 & 1) == 0) {
        return 0;
      }
      goto LABEL_13;
    }
    sub_100013C44(v28, &qword_100678A80);
    sub_100013C44(v43, &qword_100678A80);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v32, v4);
LABEL_11:
    sub_100013C44((uint64_t)v9, &qword_100678AF0);
    return 0;
  }
  sub_100013C44(v28, &qword_100678A80);
  sub_100013C44(v27, &qword_100678A80);
  if (v30(v29, 1, v4) != 1) {
    goto LABEL_11;
  }
  uint64_t v31 = a2;
  sub_100013C44((uint64_t)v9, &qword_100678A80);
LABEL_13:
  sub_100123DA4(0, (unint64_t *)&qword_1006729F0);
  uint64_t v37 = v39;
  if (sub_100535D90()) {
    return *(uint64_t *)((char *)a1 + *(int *)(v37 + 28)) == *(uint64_t *)((char *)v31 + *(int *)(v37 + 28));
  }
  return 0;
}

uint64_t _s11MusicCoreUI7ArtworkV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_100013720(a1, (uint64_t)v49, &qword_100670ED0);
  sub_100013720(a2, (uint64_t)v48, &qword_100670ED0);
  sub_100013720((uint64_t)v49, (uint64_t)&v50, &qword_100670ED0);
  sub_100013720((uint64_t)v48, (uint64_t)&v53, &qword_100670ED0);
  if (v51)
  {
    sub_100013720((uint64_t)&v50, (uint64_t)&v47, &qword_100670ED0);
    if (*((void *)&v53 + 1))
    {
      sub_1003B5DB8(&v53, &v46);
      if (v47 == v46 || (sub_100536780() & 1) != 0)
      {
        uint64_t Strong = swift_weakLoadStrong();
        uint64_t v5 = swift_weakLoadStrong();
        uint64_t v6 = v5;
        if (Strong)
        {
          swift_release();
          if (v6)
          {
            swift_release();
            if (Strong == v6) {
              goto LABEL_18;
            }
          }
        }
        else
        {
          if (!v5)
          {
LABEL_18:
            sub_1003B43F8((uint64_t)&v46);
            sub_100013C44((uint64_t)v48, &qword_100670ED0);
            sub_100013C44((uint64_t)v49, &qword_100670ED0);
            sub_1003B43F8((uint64_t)&v47);
            goto LABEL_19;
          }
          swift_release();
        }
      }
      sub_1003B43F8((uint64_t)&v46);
      sub_100013C44((uint64_t)v48, &qword_100670ED0);
      sub_100013C44((uint64_t)v49, &qword_100670ED0);
      sub_1003B43F8((uint64_t)&v47);
      uint64_t v7 = &qword_100670ED0;
LABEL_16:
      sub_100013C44((uint64_t)&v50, v7);
      return 0;
    }
    sub_100013C44((uint64_t)v48, &qword_100670ED0);
    sub_100013C44((uint64_t)v49, &qword_100670ED0);
    sub_1003B43F8((uint64_t)&v47);
LABEL_12:
    uint64_t v7 = (uint64_t *)&unk_100671218;
    goto LABEL_16;
  }
  sub_100013C44((uint64_t)v48, &qword_100670ED0);
  sub_100013C44((uint64_t)v49, &qword_100670ED0);
  if (*((void *)&v53 + 1)) {
    goto LABEL_12;
  }
LABEL_19:
  sub_100013C44((uint64_t)&v50, &qword_100670ED0);
  id v9 = *(void **)(a1 + 32);
  uint64_t v10 = *(void **)(a2 + 32);
  if (!v9)
  {
    if (!v10) {
      goto LABEL_33;
    }
    return 0;
  }
  if (!v10) {
    return 0;
  }
  uint64_t v11 = *(void **)(a1 + 24);
  uint64_t v12 = *(void **)(a2 + 24);
  if (v11)
  {
    if (!v12)
    {
      sub_1003AE030(*(id *)(a1 + 24), *(void **)(a1 + 32));
      sub_1003AE030(v11, v9);
      sub_1003AE030(0, v10);
      goto LABEL_30;
    }
    sub_100123DA4(0, (unint64_t *)&qword_100678F40);
    sub_1003AE030(v11, v9);
    sub_1003AE030(v11, v9);
    sub_1003AE030(v12, v10);
    id v13 = v12;
    id v14 = v11;
    char v15 = sub_100535D90();

    if ((v15 & 1) == 0)
    {

LABEL_30:
      sub_1003AE0A8(v11, v9);
      return 0;
    }
  }
  else
  {
    sub_1003AE030(0, *(void **)(a1 + 32));
    sub_1003AE030(0, v9);
    if (v12)
    {
      sub_1003AE030(v12, v10);

      goto LABEL_30;
    }
    sub_1003AE030(0, v10);
    id v14 = 0;
    id v13 = 0;
  }
  sub_100123DA4(0, (unint64_t *)&qword_1006729F0);
  char v16 = sub_100535D90();

  sub_1003AE0A8(v11, v9);
  if ((v16 & 1) == 0) {
    return 0;
  }
LABEL_33:
  uint64_t v17 = (int *)type metadata accessor for Artwork(0);
  if (!_s11MusicCoreUI7ArtworkV10DecorationV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t *)(a1 + v17[6]), (uint64_t *)(a2 + v17[6])))return 0; {
  uint64_t v18 = v17[7];
  }
  uint64_t v19 = *(void **)(a1 + v18);
  uint64_t v20 = *(void **)(a1 + v18 + 8);
  id v22 = *(void **)(a1 + v18 + 16);
  id v21 = *(void **)(a1 + v18 + 24);
  uint64_t v24 = *(void *)(a1 + v18 + 32);
  uint64_t v23 = *(void *)(a1 + v18 + 40);
  char v25 = (void **)(a2 + v18);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  uint64_t v28 = v25[2];
  uint64_t v29 = v25[3];
  uint64_t v30 = v25[4];
  uint64_t v31 = v25[5];
  if (!v21)
  {
    if (!v29) {
      goto LABEL_40;
    }
LABEL_39:
    uint64_t v33 = *v25;
    char v45 = *v25;
    id v34 = v19;
    char v35 = v25[2];
    sub_1003B35D4(v19, v20, v22, v21);
    sub_1003B35D4(v33, v26, v35, v29);
    sub_1003B362C(v34, v20, v22, v21);
    sub_1003B362C(v45, v26, v35, v29);
    return 0;
  }
  if (!v29) {
    goto LABEL_39;
  }
  v49[0] = v19;
  v49[1] = v20;
  v49[2] = v22;
  v49[3] = v21;
  v49[4] = v24;
  v49[5] = v23;
  unsigned int v50 = v27;
  size_t v51 = v26;
  id v52 = v28;
  *(void *)&long long v53 = v29;
  *((void *)&v53 + 1) = v30;
  uint64_t v54 = v31;
  uint64_t v44 = v27;
  uint64_t v32 = v19;
  uint64_t v41 = v28;
  uint64_t v42 = v19;
  sub_1003B35D4(v19, v20, v22, v21);
  sub_1003B35D4(v32, v20, v22, v21);
  sub_1003B35D4(v44, v26, v41, v29);
  BOOL v43 = _s11MusicCoreUI7ArtworkV11PlaceholderV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v49, (uint64_t)&v50);

  sub_1003B362C(v42, v20, v22, v21);
  if (!v43) {
    return 0;
  }
LABEL_40:
  uint64_t v36 = v17[8];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = *(unsigned __int8 *)(a1 + v36 + 8);
  uint64_t v39 = a2 + v36;
  uint64_t v40 = *(unsigned __int8 *)(v39 + 8);
  if (v38 == 255)
  {
    if (v40 != 255) {
      return 0;
    }
  }
  else if (v40 == 255 {
         || (_s11MusicCoreUI7ArtworkV4SizeV23__derived_struct_equalsySbAE_AEtFZ_0(*(void *)v37, v38, *(void *)(v37 + 16), *(unsigned char *)(v37 + 24), *(void *)v39, v40, *(void *)(v39 + 16), *(unsigned char *)(v39 + 24)) & 1) == 0)
  }
  {
    return 0;
  }
  return 1;
}

uint64_t sub_1003B34C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1003B3530()
{
  unint64_t result = qword_100670EF0;
  if (!qword_100670EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100670EF0);
  }
  return result;
}

uint64_t sub_1003B3584()
{
  return swift_deallocObject();
}

id sub_1003B35D4(id result, void *a2, void *a3, void *a4)
{
  if (a4)
  {
    uint64_t v5 = result;
    id v6 = a3;
    id v7 = a4;
    id v8 = v5;
    return a2;
  }
  return result;
}

void sub_1003B362C(void *a1, void *a2, void *a3, void *a4)
{
  if (a4)
  {
  }
}

void _s11MusicCoreUI7ArtworkV4ViewC5coderAESgSo7NSCoderC_tcfc_0()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_imageDidChangeHandler];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  BOOL v2 = &v0[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View__laidBounds];
  *(_OWORD *)BOOL v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  uint64_t v3 = OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_imageView;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v4 = &v0[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_placeholderView];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;

  sub_1005363F0();
  __break(1u);
}

uint64_t sub_1003B3740(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003B37A4()
{
  return sub_1003B3890(&qword_100670EF8, (void (*)(uint64_t))type metadata accessor for Artwork.View);
}

uint64_t type metadata accessor for Artwork.View(uint64_t a1)
{
  return sub_1000136E8(a1, (uint64_t *)&unk_100671050);
}

uint64_t sub_1003B380C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1003B3890(&qword_100670F28, (void (*)(uint64_t))type metadata accessor for Artwork);
  uint64_t result = sub_1003B3890(&qword_100670F30, (void (*)(uint64_t))type metadata accessor for Artwork);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1003B3890(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003B38D8()
{
  return sub_1003B3890(&qword_100670F38, (void (*)(uint64_t))type metadata accessor for Artwork);
}

uint64_t sub_1003B3920(uint64_t a1)
{
  uint64_t result = sub_1003B3890(&qword_100670F80, (void (*)(uint64_t))type metadata accessor for Artwork.View);
  *(void *)(a1 + 8) = result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for Artwork(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    if (v7)
    {
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
      swift_weakCopyInit();
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
    }
    id v9 = (void **)(a2 + 3);
    uint64_t v10 = (void *)a2[4];
    if (v10)
    {
      uint64_t v11 = *v9;
      a1[3] = v11;
      a1[4] = v10;
      id v12 = v11;
      id v13 = v10;
    }
    else
    {
      *(_OWORD *)(a1 + 3) = *(_OWORD *)v9;
    }
    uint64_t v47 = a3;
    uint64_t v14 = *(int *)(a3 + 24);
    char v15 = (char *)a1 + v14;
    char v16 = (char *)a2 + v14;
    *(void *)char v15 = *(void *)((char *)a2 + v14);
    v15[8] = *((unsigned char *)a2 + v14 + 8);
    uint64_t v17 = *(void **)((char *)a2 + v14 + 16);
    *((void *)v15 + 2) = v17;
    uint64_t v18 = type metadata accessor for Artwork.Decoration(0);
    uint64_t v19 = *(int *)(v18 + 20);
    __dst = &v15[v19];
    uint64_t v46 = v18;
    uint64_t v20 = &v16[v19];
    uint64_t v21 = sub_100535CE0();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    id v24 = v17;
    if (v23(v20, 1, v21))
    {
      uint64_t v25 = sub_10000BB04(&qword_100678A80);
      memcpy(__dst, v20, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
    }
    uint64_t v26 = *(int *)(v46 + 24);
    uint64_t v27 = *(void **)&v16[v26];
    *(void *)&v15[v26] = v27;
    *(void *)&v15[*(int *)(v46 + 28)] = *(void *)&v16[*(int *)(v46 + 28)];
    uint64_t v28 = *(int *)(v47 + 28);
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = *(void **)((char *)a2 + v28 + 24);
    id v32 = v27;
    if (v31)
    {
      uint64_t v33 = *(void **)v30;
      id v34 = (void *)*((void *)v30 + 1);
      *(void *)uint64_t v29 = *(void *)v30;
      *((void *)v29 + 1) = v34;
      char v35 = (void *)*((void *)v30 + 2);
      *((void *)v29 + 2) = v35;
      *((void *)v29 + 3) = v31;
      *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
      id v36 = v33;
      id v37 = v34;
      id v38 = v35;
      id v39 = v31;
    }
    else
    {
      long long v40 = *((_OWORD *)v30 + 1);
      *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v40;
      *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
    }
    uint64_t v41 = *(int *)(v47 + 32);
    uint64_t v42 = (_OWORD *)((char *)a1 + v41);
    BOOL v43 = (_OWORD *)((char *)a2 + v41);
    *uint64_t v42 = *v43;
    *(_OWORD *)((char *)v42 + 9) = *(_OWORD *)((char *)v43 + 9);
  }
  return a1;
}

void destroy for Artwork(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_weakDestroy();
  }
  if (*(void *)(a1 + 32))
  {
  }
  uint64_t v4 = a1 + *(int *)(a2 + 24);

  uint64_t v5 = type metadata accessor for Artwork.Decoration(0);
  uint64_t v6 = v4 + *(int *)(v5 + 20);
  uint64_t v7 = sub_100535CE0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }

  uint64_t v9 = a1 + *(int *)(a2 + 28);
  if (*(void *)(v9 + 24))
  {

    uint64_t v10 = *(void **)(v9 + 24);
  }
}

void *initializeWithCopy for Artwork(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  if (v6)
  {
    *a1 = *a2;
    a1[1] = v6;
    swift_bridgeObjectRetain();
    swift_weakCopyInit();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
  }
  uint64_t v7 = (void **)(a2 + 3);
  uint64_t v8 = (void *)a2[4];
  if (v8)
  {
    uint64_t v9 = *v7;
    a1[3] = v9;
    a1[4] = v8;
    id v10 = v9;
    id v11 = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 3) = *(_OWORD *)v7;
  }
  uint64_t v44 = a3;
  char v45 = a2;
  uint64_t v12 = *(int *)(a3 + 24);
  id v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(void *)id v13 = *(void *)((char *)a2 + v12);
  v13[8] = *((unsigned char *)a2 + v12 + 8);
  char v15 = *(void **)((char *)a2 + v12 + 16);
  *((void *)v13 + 2) = v15;
  char v16 = (int *)type metadata accessor for Artwork.Decoration(0);
  uint64_t v17 = v16[5];
  __dst = &v13[v17];
  uint64_t v18 = &v14[v17];
  uint64_t v19 = sub_100535CE0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  id v22 = v15;
  if (v21(v18, 1, v19))
  {
    uint64_t v23 = sub_10000BB04(&qword_100678A80);
    memcpy(__dst, v18, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(__dst, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  uint64_t v24 = v16[6];
  uint64_t v25 = *(void **)&v14[v24];
  *(void *)&v13[v24] = v25;
  *(void *)&v13[v16[7]] = *(void *)&v14[v16[7]];
  uint64_t v26 = *(int *)(v44 + 28);
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)v45 + v26;
  uint64_t v29 = *(void **)((char *)v45 + v26 + 24);
  id v30 = v25;
  if (v29)
  {
    uint64_t v31 = *(void **)v28;
    id v32 = (void *)*((void *)v28 + 1);
    *(void *)uint64_t v27 = *(void *)v28;
    *((void *)v27 + 1) = v32;
    uint64_t v33 = (void *)*((void *)v28 + 2);
    *((void *)v27 + 2) = v33;
    *((void *)v27 + 3) = v29;
    *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
    id v34 = v31;
    id v35 = v32;
    id v36 = v33;
    id v37 = v29;
  }
  else
  {
    long long v38 = *((_OWORD *)v28 + 1);
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    *((_OWORD *)v27 + 1) = v38;
    *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
  }
  uint64_t v39 = *(int *)(v44 + 32);
  long long v40 = (_OWORD *)((char *)a1 + v39);
  uint64_t v41 = (_OWORD *)((char *)v45 + v39);
  *long long v40 = *v41;
  *(_OWORD *)((char *)v40 + 9) = *(_OWORD *)((char *)v41 + 9);
  return a1;
}

uint64_t assignWithCopy for Artwork(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  if (*(void *)(a1 + 8))
  {
    if (v6)
    {
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_weakCopyAssign();
    }
    else
    {
      sub_1003B43F8(a1);
      uint64_t v7 = a2[2];
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = v7;
    }
  }
  else if (v6)
  {
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = a2[1];
    swift_bridgeObjectRetain();
    swift_weakCopyInit();
  }
  else
  {
    long long v8 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = a2[2];
    *(_OWORD *)a1 = v8;
  }
  uint64_t v9 = a2[4];
  if (*(void *)(a1 + 32))
  {
    if (v9)
    {
      id v10 = *(void **)(a1 + 24);
      id v11 = (void *)a2[3];
      *(void *)(a1 + 24) = v11;
      id v12 = v11;

      id v13 = (void *)a2[4];
      uint64_t v14 = *(void **)(a1 + 32);
      *(void *)(a1 + 32) = v13;
      id v15 = v13;

      goto LABEL_15;
    }
    sub_1003B442C((id *)(a1 + 24));
  }
  else if (v9)
  {
    char v16 = (void *)a2[3];
    *(void *)(a1 + 24) = v16;
    uint64_t v17 = (void *)a2[4];
    *(void *)(a1 + 32) = v17;
    id v18 = v16;
    id v19 = v17;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
LABEL_15:
  uint64_t v75 = a3;
  uint64_t v76 = a2;
  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v21 = a1 + v20;
  id v22 = (char *)a2 + v20;
  uint64_t v23 = *(void *)((char *)a2 + v20);
  *(unsigned char *)(v21 + 8) = v22[8];
  *(void *)uint64_t v21 = v23;
  uint64_t v24 = (void *)*((void *)v22 + 2);
  uint64_t v25 = *(void **)(v21 + 16);
  *(void *)(v21 + 16) = v24;
  id v26 = v24;

  uint64_t v74 = (int *)type metadata accessor for Artwork.Decoration(0);
  uint64_t v27 = v74[5];
  uint64_t v28 = (void *)(v21 + v27);
  uint64_t v29 = &v22[v27];
  uint64_t v30 = sub_100535CE0();
  uint64_t v31 = *(void *)(v30 - 8);
  id v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v31 + 48);
  int v33 = v32(v28, 1, v30);
  int v34 = v32(v29, 1, v30);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(void *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v34)
  {
    (*(void (**)(void *, uint64_t))(v31 + 8))(v28, v30);
LABEL_20:
    uint64_t v35 = sub_10000BB04(&qword_100678A80);
    memcpy(v28, v29, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(void *, char *, uint64_t))(v31 + 24))(v28, v29, v30);
LABEL_21:
  uint64_t v36 = v74[6];
  id v37 = *(void **)&v22[v36];
  long long v38 = *(void **)(v21 + v36);
  *(void *)(v21 + v36) = v37;
  id v39 = v37;

  *(void *)(v21 + v74[7]) = *(void *)&v22[v74[7]];
  uint64_t v40 = *(int *)(v75 + 28);
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (char *)v76 + v40;
  uint64_t v43 = *(void *)(a1 + v40 + 24);
  uint64_t v44 = *(void *)((char *)v76 + v40 + 24);
  if (v43)
  {
    if (v44)
    {
      char v45 = (void *)*v41;
      uint64_t v46 = *(void **)v42;
      void *v41 = *(void *)v42;
      id v47 = v46;

      id v48 = (void *)v41[1];
      uint64_t v49 = (void *)*((void *)v42 + 1);
      v41[1] = v49;
      id v50 = v49;

      size_t v51 = (void *)v41[2];
      id v52 = (void *)*((void *)v42 + 2);
      v41[2] = v52;
      id v53 = v52;

      uint64_t v54 = (void *)*((void *)v42 + 3);
      uint64_t v55 = (void *)v41[3];
      v41[3] = v54;
      id v56 = v54;

      v41[4] = *((void *)v42 + 4);
      v41[5] = *((void *)v42 + 5);
    }
    else
    {
      sub_1003B4460((uint64_t)v41);
      long long v66 = *((_OWORD *)v42 + 1);
      long long v65 = *((_OWORD *)v42 + 2);
      *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
      *((_OWORD *)v41 + 1) = v66;
      *((_OWORD *)v41 + 2) = v65;
    }
  }
  else if (v44)
  {
    id v57 = *(void **)v42;
    void *v41 = *(void *)v42;
    id v58 = (void *)*((void *)v42 + 1);
    v41[1] = v58;
    uint64_t v59 = (void *)*((void *)v42 + 2);
    v41[2] = v59;
    uint64_t v60 = (void *)*((void *)v42 + 3);
    v41[3] = v60;
    v41[4] = *((void *)v42 + 4);
    v41[5] = *((void *)v42 + 5);
    id v61 = v57;
    id v62 = v58;
    id v63 = v59;
    id v64 = v60;
  }
  else
  {
    long long v67 = *(_OWORD *)v42;
    long long v68 = *((_OWORD *)v42 + 2);
    *((_OWORD *)v41 + 1) = *((_OWORD *)v42 + 1);
    *((_OWORD *)v41 + 2) = v68;
    *(_OWORD *)uint64_t v41 = v67;
  }
  uint64_t v69 = *(int *)(v75 + 32);
  uint64_t v70 = (_OWORD *)(a1 + v69);
  id v71 = (long long *)((char *)v76 + v69);
  long long v72 = *v71;
  *(_OWORD *)((char *)v70 + 9) = *(long long *)((char *)v71 + 9);
  *uint64_t v70 = v72;
  return a1;
}

uint64_t sub_1003B43F8(uint64_t a1)
{
  return a1;
}

id *sub_1003B442C(id *a1)
{
  return a1;
}

uint64_t sub_1003B4460(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for Artwork(uint64_t a1, uint64_t a2, int *a3)
{
  if (*(void *)(a2 + 8))
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    swift_weakTakeInit();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)uint64_t v7 = *(_OWORD *)(a2 + v6);
  *(void *)(v7 + 16) = *(void *)(a2 + v6 + 16);
  uint64_t v9 = (int *)type metadata accessor for Artwork.Decoration(0);
  uint64_t v10 = v9[5];
  id v11 = (void *)(v7 + v10);
  id v12 = (const void *)(v8 + v10);
  uint64_t v13 = sub_100535CE0();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_10000BB04(&qword_100678A80);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  *(void *)(v7 + v9[6]) = *(void *)(v8 + v9[6]);
  *(void *)(v7 + v9[7]) = *(void *)(v8 + v9[7]);
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  id v18 = (_OWORD *)(a1 + v16);
  id v19 = (_OWORD *)(a2 + v16);
  long long v20 = v19[1];
  *id v18 = *v19;
  v18[1] = v20;
  v18[2] = v19[2];
  uint64_t v21 = (_OWORD *)(a1 + v17);
  id v22 = (_OWORD *)(a2 + v17);
  *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)((char *)v22 + 9);
  *uint64_t v21 = *v22;
  return a1;
}

uint64_t assignWithTake for Artwork(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  if (*(void *)(a1 + 8))
  {
    if (v6)
    {
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v6;
      swift_bridgeObjectRelease();
      swift_weakTakeAssign();
      goto LABEL_8;
    }
    sub_1003B43F8(a1);
  }
  else if (v6)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    swift_weakTakeInit();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = a2[2];
LABEL_8:
  if (*(void *)(a1 + 32))
  {
    if (a2[4])
    {
      uint64_t v7 = *(void **)(a1 + 24);
      *(void *)(a1 + 24) = a2[3];

      uint64_t v8 = *(void **)(a1 + 32);
      *(void *)(a1 + 32) = a2[4];

      goto LABEL_13;
    }
    sub_1003B442C((id *)(a1 + 24));
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
LABEL_13:
  uint64_t v37 = a3;
  long long v38 = a2;
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v9;
  id v11 = (char *)a2 + v9;
  *(void *)uint64_t v10 = *(void *)((char *)a2 + v9);
  *(unsigned char *)(v10 + 8) = *((unsigned char *)a2 + v9 + 8);
  id v12 = *(void **)(a1 + v9 + 16);
  *(void *)(v10 + 16) = *(void *)((char *)a2 + v9 + 16);

  uint64_t v36 = (int *)type metadata accessor for Artwork.Decoration(0);
  uint64_t v13 = v36[5];
  uint64_t v14 = (void *)(v10 + v13);
  uint64_t v15 = &v11[v13];
  uint64_t v16 = sub_100535CE0();
  uint64_t v17 = *(void *)(v16 - 8);
  id v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_18:
    uint64_t v21 = sub_10000BB04(&qword_100678A80);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, char *, uint64_t))(v17 + 40))(v14, v15, v16);
LABEL_19:
  uint64_t v22 = v36[6];
  uint64_t v23 = *(void **)(v10 + v22);
  *(void *)(v10 + v22) = *(void *)&v11[v22];

  *(void *)(v10 + v36[7]) = *(void *)&v11[v36[7]];
  uint64_t v24 = *(int *)(v37 + 28);
  uint64_t v25 = a1 + v24;
  id v26 = (char *)v38 + v24;
  if (!*(void *)(a1 + v24 + 24))
  {
LABEL_23:
    long long v31 = *((_OWORD *)v26 + 1);
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 16) = v31;
    goto LABEL_24;
  }
  if (!*((void *)v26 + 3))
  {
    sub_1003B4460(v25);
    goto LABEL_23;
  }
  uint64_t v27 = *(void **)v25;
  *(void *)uint64_t v25 = *(void *)v26;

  uint64_t v28 = *(void **)(v25 + 8);
  *(void *)(v25 + 8) = *((void *)v26 + 1);

  uint64_t v29 = *(void **)(v25 + 16);
  *(void *)(v25 + 16) = *((void *)v26 + 2);

  uint64_t v30 = *(void **)(v25 + 24);
  *(void *)(v25 + 24) = *((void *)v26 + 3);

LABEL_24:
  *(_OWORD *)(v25 + 32) = *((_OWORD *)v26 + 2);
  uint64_t v32 = *(int *)(v37 + 32);
  int v33 = (_OWORD *)(a1 + v32);
  int v34 = (_OWORD *)((char *)v38 + v32);
  *int v33 = *v34;
  *(_OWORD *)((char *)v33 + 9) = *(_OWORD *)((char *)v34 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for Artwork(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003B49CC);
}

uint64_t sub_1003B49CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for Artwork.Decoration(0);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for Artwork(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003B4A9C);
}

uint64_t sub_1003B4A9C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for Artwork.Decoration(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1003B4B44()
{
  uint64_t result = type metadata accessor for Artwork.Decoration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1003B4BF8()
{
  return type metadata accessor for Artwork.View(0);
}

uint64_t sub_1003B4C00()
{
  uint64_t result = type metadata accessor for Artwork(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t destroy for Artwork.Caching()
{
  swift_bridgeObjectRelease();

  return swift_weakDestroy();
}

void *initializeWithCopy for Artwork.Caching(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_weakCopyInit();
  return a1;
}

void *assignWithCopy for Artwork.Caching(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_weakCopyAssign();
  return a1;
}

_OWORD *initializeWithTake for Artwork.Caching(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_weakTakeInit();
  return a1;
}

void *assignWithTake for Artwork.Caching(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  swift_weakTakeAssign();
  return a1;
}

ValueMetadata *type metadata accessor for Artwork.Caching()
{
  return &type metadata for Artwork.Caching;
}

uint64_t type metadata accessor for Artwork.Caching.Reference()
{
  return self;
}

void *initializeBufferWithCopyOfBuffer for Artwork.Content(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  unint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for Artwork.Content(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for Artwork.Content(uint64_t a1, _OWORD *a2)
{
  unint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for Artwork.Content()
{
  return &type metadata for Artwork.Content;
}

void *initializeBufferWithCopyOfBuffer for Artwork.Decoration(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = (void *)a2[2];
    *(void *)(a1 + 16) = v7;
    uint64_t v8 = a3[5];
    id v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100535CE0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    id v14 = v7;
    if (v13(v10, 1, v11))
    {
      uint64_t v15 = sub_10000BB04(&qword_100678A80);
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v17 = a3[6];
    uint64_t v18 = a3[7];
    int v19 = *(void **)((char *)a2 + v17);
    *(void *)((char *)v4 + v17) = v19;
    *(void *)((char *)v4 + v18) = *(uint64_t *)((char *)a2 + v18);
    id v20 = v19;
  }
  return v4;
}

void destroy for Artwork.Decoration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_100535CE0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = *(void **)(a1 + *(int *)(a2 + 24));
}

uint64_t initializeWithCopy for Artwork.Decoration(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  id v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_100535CE0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v6;
  if (v12(v9, 1, v10))
  {
    uint64_t v14 = sub_10000BB04(&qword_100678A80);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = *(void **)(a2 + v15);
  *(void *)(a1 + v15) = v17;
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  id v18 = v17;
  return a1;
}

uint64_t assignWithCopy for Artwork.Decoration(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = (void *)a2[2];
  uint64_t v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  uint64_t v10 = a3[5];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_100535CE0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_10000BB04(&qword_100678A80);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  uint64_t v19 = a3[6];
  id v20 = *(void **)((char *)a2 + v19);
  uint64_t v21 = *(void **)(a1 + v19);
  *(void *)(a1 + v19) = v20;
  id v22 = v20;

  *(void *)(a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for Artwork.Decoration(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_100535CE0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_10000BB04(&qword_100678A80);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  return a1;
}

uint64_t assignWithTake for Artwork.Decoration(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_100535CE0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_10000BB04(&qword_100678A80);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  int v17 = *(void **)(a1 + v16);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);

  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for Artwork.Decoration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003B57C8);
}

uint64_t sub_1003B57C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000BB04(&qword_100678A80);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for Artwork.Decoration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003B58A4);
}

uint64_t sub_1003B58A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10000BB04(&qword_100678A80);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

void sub_1003B5968()
{
  sub_1003B5A1C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1003B5A1C()
{
  if (!qword_100678BF0)
  {
    sub_100535CE0();
    unint64_t v0 = sub_100535F20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100678BF0);
    }
  }
}

__n128 initializeWithCopy for Artwork.Size(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Artwork.Size(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Artwork.Size(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Artwork.Size()
{
  return &type metadata for Artwork.Size;
}

uint64_t initializeBufferWithCopyOfBuffer for Artwork.Size.Dimension(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t sub_1003B5B3C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Artwork.Size.Dimension()
{
  return &type metadata for Artwork.Size.Dimension;
}

uint64_t sub_1003B5B54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000BB04(&qword_100678A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003B5BBC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1003B5BF4()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1003B5C2C(void **a1, void *a2)
{
  sub_1003B0AA8(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1003B5C34()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003B5C7C(void *a1)
{
  return sub_1003B0CAC(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1003B5C88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003B5C98()
{
  return swift_release();
}

uint64_t sub_1003B5CA0()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1003B5CF0()
{
  sub_1003B0F8C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40));
}

unint64_t sub_1003B5CFC()
{
  unint64_t result = qword_100672CB0;
  if (!qword_100672CB0)
  {
    sub_100013BFC(&qword_1006711F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100672CB0);
  }
  return result;
}

uint64_t sub_1003B5D58(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_1003B5DB8(_OWORD *a1, _OWORD *a2)
{
  *a2 = *a1;
  swift_weakTakeInit();
  return a2;
}

void *Artwork.Placeholder.tint.getter()
{
  uint64_t v1 = *(void **)(v0 + 8);
  id v2 = v1;
  return v1;
}

double Radiosity.Specs.Radiosity.blurRadius.getter()
{
  return *(double *)(v0 + 32);
}

void Radiosity.Specs.Radiosity.blurRadius.setter(double a1)
{
  *(double *)(v1 + 32) = a1;
}

id sub_1003B5E38()
{
  id result = [self tertiaryLabelColor];
  qword_100671220 = (uint64_t)result;
  return result;
}

__n128 static Artwork.Placeholder.with(_:)@<Q0>(void (*a1)(long long *)@<X0>, uint64_t a2@<X8>)
{
  id v4 = [self secondarySystemFillColor];
  if (qword_100670340 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_100671220;
  uint64_t v6 = self;
  id v7 = v5;
  *(void *)&long long v11 = v4;
  *((void *)&v11 + 1) = v5;
  uint64_t v12 = 0;
  id v13 = [v6 configurationWithWeight:4];
  long long v14 = xmmword_10054DCD0;
  a1(&v11);
  uint64_t v8 = v12;
  id v9 = v13;
  __n128 result = (__n128)v14;
  *(_OWORD *)a2 = v11;
  *(void *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = v9;
  *(__n128 *)(a2 + 32) = result;
  return result;
}

id Artwork.Placeholder.preferredSymbolConfiguration(in:)(double a1, double a2)
{
  if (a1 > a2) {
    double v3 = a1;
  }
  else {
    double v3 = a2;
  }
  if (a2 < a1) {
    a1 = a2;
  }
  if (v3 * *(double *)(v2 + 32) >= a1) {
    double v4 = a1;
  }
  else {
    double v4 = v3 * *(double *)(v2 + 32);
  }
  uint64_t v5 = *(void **)(v2 + 24);
  id v6 = [self configurationWithPointSize:v4];
  id v7 = [v5 configurationByApplyingConfiguration:v6];

  return v7;
}

uint64_t Artwork.Placeholder.image(with:graphicsFormat:)(uint64_t a1, double a2, double a3)
{
  double v4 = (_OWORD *)v3;
  id v5 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:a1 format:a2];
  uint64_t v16 = 0;
  sub_100013A18(v3, (uint64_t)&v19, &qword_100671238);
  sub_100013A18(v3 + 8, (uint64_t)&v18, &qword_100671238);
  sub_100013A18(v3 + 16, (uint64_t)&v17, &qword_100671240);
  id v6 = *(void **)(v3 + 24);
  uint64_t v7 = swift_allocObject();
  long long v8 = v4[1];
  *(_OWORD *)(v7 + 16) = *v4;
  *(_OWORD *)(v7 + 32) = v8;
  *(_OWORD *)(v7 + 48) = v4[2];
  *(void *)(v7 + 64) = &v16;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1003B6558;
  *(void *)(v9 + 24) = v7;
  void v15[4] = sub_1001FD1F4;
  _OWORD v15[5] = v9;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  void v15[2] = sub_1001F83F8;
  uint64_t v15[3] = &unk_100632920;
  uint64_t v10 = _Block_copy(v15);
  sub_1001C858C(&v19);
  sub_1001C858C(&v18);
  sub_1001C858C(&v17);
  id v11 = v6;
  swift_retain();
  swift_release();
  id v12 = [v5 imageWithActions:v10];

  _Block_release(v10);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v5)
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = v16;
    swift_release();
    return v14;
  }
  return result;
}

void sub_1003B622C(void *a1, uint64_t a2, void **a3)
{
  id v6 = [a1 format];
  [v6 bounds];
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;

  id v15 = [self secondarySystemBackgroundColor];
  [v15 setFill];

  uint64_t v16 = self;
  id v17 = [v16 bezierPathWithRect:v8, v10, v12, v14];
  [v17 fill];

  if (*(void *)a2)
  {
    id v18 = *(id *)a2;
    [v18 setFill];
    id v19 = [v16 bezierPathWithRect:v8, v10, v12, v14];
    [v19 fill];
  }
  if (v12 > v14) {
    double v20 = v12;
  }
  else {
    double v20 = v14;
  }
  if (v14 >= v12) {
    double v21 = v12;
  }
  else {
    double v21 = v14;
  }
  double v22 = v20 * *(double *)(a2 + 32);
  if (v22 >= v21) {
    double v23 = v21;
  }
  else {
    double v23 = v22;
  }
  uint64_t v24 = *(void **)(a2 + 24);
  id v25 = [self configurationWithPointSize:v23];
  id v26 = [v24 configurationByApplyingConfiguration:v25];

  sub_100013A18(a2 + 16, (uint64_t)v37, &qword_100671240);
  sub_100013A18((uint64_t)v37, (uint64_t)&v38, &qword_100671240);
  if (v38)
  {
    id v27 = [v38 imageWithSymbolConfiguration:v26];
    if (v27)
    {
      uint64_t v28 = v27;
      uint64_t v29 = *(void **)(a2 + 8);
      if (v29)
      {
        id v30 = v29;
        id v31 = [v28 imageWithTintColor:v30];

        uint64_t v28 = v31;
      }
      [v28 size];
      uint64_t v33 = v32;
      id v34 = [self mainScreen];
      [v34 scale];

      sub_100535B90();
      [v28 drawInRect:v33];
    }
  }
  id v35 = [a1 currentImage];

  uint64_t v36 = *a3;
  *a3 = v35;
}

uint64_t sub_1003B6550()
{
  return sub_1002D40E4();
}

void sub_1003B6558(void *a1)
{
  sub_1003B622C(a1, v1 + 16, *(void ***)(v1 + 64));
}

uint64_t sub_1003B6564()
{
  return swift_deallocObject();
}

uint64_t sub_1003B6574(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003B6584()
{
  return swift_release();
}

char *Artwork.Placeholder.View.__allocating_init(configuration:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return Artwork.Placeholder.View.init(configuration:)(a1);
}

char *Artwork.Placeholder.View.init(configuration:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = OBJC_IVAR____TtCVV11MusicCoreUI7Artwork11Placeholder4View_contentView;
  id v6 = objc_allocWithZone((Class)UIImageView);
  double v7 = v1;
  *(void *)&v2[v5] = [v6 init];
  sub_100013A18(a1, (uint64_t)&v20, &qword_100671238);
  sub_100013A18(a1 + 8, (uint64_t)&v19, &qword_100671238);
  sub_100013A18(a1 + 16, (uint64_t)&v18, &qword_100671240);
  double v8 = *(void **)(a1 + 24);
  double v9 = &v7[OBJC_IVAR____TtCVV11MusicCoreUI7Artwork11Placeholder4View_typedConfiguration];
  long long v10 = *(_OWORD *)a1;
  long long v11 = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v9 + 1) = *(_OWORD *)(a1 + 16);
  *((_OWORD *)v9 + 2) = v11;
  *(_OWORD *)double v9 = v10;
  sub_1001C858C(&v20);
  sub_1001C858C(&v19);
  sub_1001C858C(&v18);
  id v12 = v8;

  v17.receiver = v7;
  v17.super_class = ObjectType;
  double v13 = (char *)[super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v14 = *(void *)&v13[OBJC_IVAR____TtCVV11MusicCoreUI7Artwork11Placeholder4View_contentView];
  id v15 = v13;
  [v15 addSubview:v14];
  memset(v21, 0, sizeof(v21));
  sub_1003B6740((uint64_t)v21);
  sub_100393D6C(&v20);
  sub_100393D6C(&v19);
  sub_100393D6C(&v18);

  return v15;
}

void sub_1003B6740(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_100013A18(a1, (uint64_t)v29, &qword_100670ED8);
  double v4 = v30;
  uint64_t v5 = &v1[OBJC_IVAR____TtCVV11MusicCoreUI7Artwork11Placeholder4View_typedConfiguration];
  swift_beginAccess();
  double v7 = *(void **)v5;
  id v6 = (void *)*((void *)v5 + 1);
  double v8 = (void *)*((void *)v5 + 2);
  double v9 = (void *)*((void *)v5 + 3);
  double v11 = *((double *)v5 + 4);
  double v10 = *((double *)v5 + 5);
  if (*(void *)v5)
  {
    id v12 = v8;
    id v13 = v9;
    id v14 = v6;
    id v15 = v7;
  }
  else
  {
    uint64_t v16 = self;
    id v12 = v8;
    id v17 = v9;
    id v14 = v6;
    id v15 = [v16 clearColor];
    double v7 = 0;
  }
  id v18 = v7;
  [v2 setBackgroundColor:v15];

  id v19 = *(void **)&v2[OBJC_IVAR____TtCVV11MusicCoreUI7Artwork11Placeholder4View_contentView];
  [v19 setHidden:v8 == 0];
  [v19 setImage:v12];
  [v19 setTintColor:v14];
  [v19 setAlpha:v10];
  id v20 = [v2 superview];

  if (!v20) {
    goto LABEL_18;
  }
  sub_100013A18(a1, (uint64_t)v34, &qword_100670ED8);
  if (!v36)
  {
    if (!v8) {
      goto LABEL_14;
    }
    goto LABEL_17;
  }
  id v21 = v35;
  id v22 = v35;
  double v23 = v22;
  if (!v8)
  {
    if (!v21) {
      goto LABEL_14;
    }

LABEL_17:
    [v2 setNeedsLayout];
    goto LABEL_18;
  }
  if (!v21) {
    goto LABEL_17;
  }
  sub_100123DA4(0, &qword_100677850);
  id v24 = v12;
  char v25 = sub_100535D90();

  if ((v25 & 1) == 0) {
    goto LABEL_17;
  }
LABEL_14:
  sub_100013A18(a1, (uint64_t)v31, &qword_100670ED8);
  if (!v32) {
    goto LABEL_17;
  }
  if (v11 != v33) {
    goto LABEL_17;
  }
  sub_100123DA4(0, &qword_100671310);
  id v26 = v9;
  id v27 = v4;
  char v28 = sub_100535D90();

  if ((v28 & 1) == 0) {
    goto LABEL_17;
  }
LABEL_18:
}

void Artwork.Placeholder.View.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtCVV11MusicCoreUI7Artwork11Placeholder4View_contentView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIImageView) init];

  sub_1005363F0();
  __break(1u);
}

id Artwork.Placeholder.View.typedConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCVV11MusicCoreUI7Artwork11Placeholder4View_typedConfiguration;
  swift_beginAccess();
  double v4 = *(void **)v3;
  uint64_t v5 = *(void **)(v3 + 8);
  id v6 = *(void **)(v3 + 16);
  id v11 = *(id *)(v3 + 24);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v11;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v3 + 32);
  id v7 = v4;
  id v8 = v5;
  id v9 = v6;

  return v11;
}

void Artwork.Placeholder.View.typedConfiguration.setter(uint64_t a1)
{
  uint64_t v3 = (long long *)(v1 + OBJC_IVAR____TtCVV11MusicCoreUI7Artwork11Placeholder4View_typedConfiguration);
  swift_beginAccess();
  long long v4 = v3[1];
  long long v30 = *v3;
  v31[0] = v4;
  v31[1] = v3[2];
  uint64_t v22 = *((void *)v3 + 1);
  uint64_t v23 = *(void *)v3;
  uint64_t v20 = *((void *)v3 + 3);
  uint64_t v21 = *((void *)v3 + 2);
  uint64_t v18 = *((void *)v3 + 5);
  uint64_t v19 = *((void *)v3 + 4);
  sub_100013A18((uint64_t)&v30, (uint64_t)&v32, &qword_100671238);
  sub_100013A18((uint64_t)&v30 + 8, (uint64_t)&v33, &qword_100671238);
  sub_100013A18((uint64_t)v31, (uint64_t)&v34, &qword_100671240);
  uint64_t v5 = (void *)*((void *)&v31[0] + 1);
  sub_100013A18(a1, (uint64_t)&v26, &qword_100671238);
  sub_100013A18(a1 + 8, (uint64_t)&v25, &qword_100671238);
  sub_100013A18(a1 + 16, (uint64_t)&v24, &qword_100671240);
  id v6 = *(void **)(a1 + 24);
  id v8 = *(void **)v3;
  id v7 = (void *)*((void *)v3 + 1);
  double v10 = (void *)*((void *)v3 + 2);
  id v9 = (void *)*((void *)v3 + 3);
  long long v11 = *(_OWORD *)(a1 + 16);
  *uint64_t v3 = *(_OWORD *)a1;
  v3[1] = v11;
  v3[2] = *(_OWORD *)(a1 + 32);
  sub_1001C858C(&v32);
  sub_1001C858C(&v33);
  sub_1001C858C(&v34);
  id v12 = v5;
  sub_1001C858C(&v26);
  sub_1001C858C(&v25);
  sub_1001C858C(&v24);
  id v13 = v6;

  long long v14 = v3[1];
  long long v28 = *v3;
  v29[0] = v14;
  v29[1] = v3[2];
  sub_100013A18((uint64_t)&v28, (uint64_t)&v35, &qword_100671238);
  sub_100013A18((uint64_t)&v28 + 8, (uint64_t)&v36, &qword_100671238);
  sub_100013A18((uint64_t)v29, (uint64_t)v37, &qword_100671240);
  id v15 = (void *)*((void *)&v29[0] + 1);
  sub_1001C858C(&v35);
  sub_1001C858C(&v36);
  sub_1001C858C(v37);
  id v16 = v15;
  BOOL v17 = _s11MusicCoreUI7ArtworkV11PlaceholderV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)&v28, (uint64_t)&v30);
  sub_100393D6C(&v35);
  sub_100393D6C(&v36);
  sub_100393D6C(v37);

  if (!v17)
  {
    v27[0] = v23;
    v27[1] = v22;
    v27[2] = v21;
    void v27[3] = v20;
    v27[4] = v19;
    v27[5] = v18;
    sub_1003B6740((uint64_t)v27);
  }
  sub_100393D6C(&v26);
  sub_100393D6C(&v25);
  sub_100393D6C(&v24);

  sub_100393D6C(&v32);
  sub_100393D6C(&v33);
  sub_100393D6C(&v34);
}

void (*Artwork.Placeholder.View.typedConfiguration.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0xC8uLL);
  *a1 = v3;
  v3[24] = v1;
  uint64_t v4 = v1 + OBJC_IVAR____TtCVV11MusicCoreUI7Artwork11Placeholder4View_typedConfiguration;
  swift_beginAccess();
  uint64_t v5 = *(void **)v4;
  id v6 = *(void **)(v4 + 8);
  id v7 = *(void **)(v4 + 16);
  id v8 = *(void **)(v4 + 24);
  v3[6] = *(void *)v4;
  v3[7] = v6;
  v3 += 6;
  v3[2] = v7;
  v3[3] = v8;
  *((_OWORD *)v3 + 2) = *(_OWORD *)(v4 + 32);
  id v9 = v7;
  id v10 = v8;
  id v11 = v5;
  id v12 = v6;
  return sub_1003B6EE8;
}

void sub_1003B6EE8(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (_OWORD *)(*a1 + 48);
  long long v4 = *(_OWORD *)(*a1 + 64);
  if (a2)
  {
    *(_OWORD *)uint64_t v2 = *v3;
    *(_OWORD *)(v2 + 16) = v4;
    *(_OWORD *)(v2 + 32) = v3[2];
    sub_100013A18(v2, v2 + 168, &qword_100671238);
    sub_100013A18(v2 + 8, v2 + 176, &qword_100671238);
    sub_100013A18(v2 + 16, v2 + 184, &qword_100671240);
    uint64_t v5 = *(void **)(v2 + 24);
    sub_1001C858C((id *)(v2 + 168));
    sub_1001C858C((id *)(v2 + 176));
    sub_1001C858C((id *)(v2 + 184));
    id v6 = v5;
    Artwork.Placeholder.View.typedConfiguration.setter(v2);
    id v7 = *(void **)(v2 + 48);
    id v8 = *(void **)(v2 + 56);
    id v9 = *(void **)(v2 + 64);
  }
  else
  {
    *(_OWORD *)(v2 + 96) = *v3;
    *(_OWORD *)(v2 + 112) = v4;
    *(_OWORD *)(v2 + 128) = v3[2];
    Artwork.Placeholder.View.typedConfiguration.setter(v2 + 96);
  }

  free((void *)v2);
}

Swift::Void __swiftcall Artwork.Placeholder.View.layoutSubviews()()
{
  v41.receiver = v0;
  v41.super_class = (Class)swift_getObjectType();
  [super layoutSubviews];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtCVV11MusicCoreUI7Artwork11Placeholder4View_contentView];
  uint64_t v2 = &v0[OBJC_IVAR____TtCVV11MusicCoreUI7Artwork11Placeholder4View_typedConfiguration];
  swift_beginAccess();
  uint64_t v3 = *(void **)v2;
  long long v4 = (void *)*((void *)v2 + 1);
  uint64_t v5 = (void *)*((void *)v2 + 3);
  double v6 = *((double *)v2 + 4);
  id v7 = *((id *)v2 + 2);
  id v8 = v5;
  id v9 = v3;
  id v10 = v4;
  [v0 bounds];
  if (v11 > v12) {
    double v13 = v11;
  }
  else {
    double v13 = v12;
  }
  if (v12 >= v11) {
    double v14 = v11;
  }
  else {
    double v14 = v12;
  }
  double v15 = v6 * v13;
  if (v15 >= v14) {
    double v16 = v14;
  }
  else {
    double v16 = v15;
  }
  BOOL v17 = self;
  id v18 = [v17 configurationWithPointSize:v16];
  id v19 = [v8 configurationByApplyingConfiguration:v18];

  [v1 setPreferredSymbolConfiguration:v19];
  if ([self _isInAnimationBlock] && (uint64_t v20 = *((void *)v2 + 2)) != 0)
  {
    id v21 = [objc_allocWithZone((Class)UIImageView) initWithImage:v20];
    uint64_t v22 = *(void **)v2;
    uint64_t v23 = (void *)*((void *)v2 + 1);
    id v24 = (void *)*((void *)v2 + 3);
    double v25 = *((double *)v2 + 4);
    id v26 = *((id *)v2 + 2);
    id v27 = v24;
    id v28 = v22;
    id v29 = v23;
    [v0 bounds];
    if (v30 > v31) {
      double v32 = v30;
    }
    else {
      double v32 = v31;
    }
    if (v31 >= v30) {
      double v33 = v30;
    }
    else {
      double v33 = v31;
    }
    double v34 = v25 * v32;
    if (v34 >= v33) {
      double v34 = v33;
    }
    id v35 = [v17 configurationWithPointSize:v34];
    id v36 = [v27 configurationByApplyingConfiguration:v35];

    [v21 setPreferredSymbolConfiguration:v36];
    [v1 setContentMode:1];
    [v0 bounds];
    [v21 sizeThatFits:v37, v38];
    sub_100535B80();
    [v1 setFrame:];
  }
  else
  {
    [v1 setContentMode:4];
    [v0 bounds];
    [v1 sizeThatFits:v39, v40];
    sub_100535B80();
    [v1 setFrame:];
  }
}

char *sub_1003B741C(_OWORD *a1)
{
  long long v2 = a1[1];
  v5[0] = *a1;
  v5[1] = v2;
  void v5[2] = a1[2];
  id v3 = objc_allocWithZone(v1);
  return Artwork.Placeholder.View.init(configuration:)((uint64_t)v5);
}

id sub_1003B7464@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCVV11MusicCoreUI7Artwork11Placeholder4View_typedConfiguration;
  swift_beginAccess();
  long long v4 = *(void **)v3;
  id v11 = *(id *)(v3 + 8);
  uint64_t v5 = *(void **)(v3 + 16);
  double v6 = *(void **)(v3 + 24);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v3 + 32);
  id v7 = v5;
  id v8 = v6;
  id v9 = v4;

  return v11;
}

void sub_1003B74F0(_OWORD *a1)
{
  long long v1 = a1[1];
  v2[0] = *a1;
  v2[1] = v1;
  _OWORD v2[2] = a1[2];
  Artwork.Placeholder.View.typedConfiguration.setter((uint64_t)v2);
}

void (*sub_1003B7524(void *a1))(void *a1)
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Artwork.Placeholder.View.typedConfiguration.modify(v2);
  return sub_1003B757C;
}

void sub_1003B757C(void *a1)
{
  long long v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

id sub_1003B75C4@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = (uint64_t)&type metadata for Artwork.Placeholder;
  a1[4] = sub_1003B3530();
  uint64_t v3 = swift_allocObject();
  *a1 = v3;
  uint64_t v4 = v1 + OBJC_IVAR____TtCVV11MusicCoreUI7Artwork11Placeholder4View_typedConfiguration;
  swift_beginAccess();
  uint64_t v5 = *(void **)v4;
  id v12 = *(id *)(v4 + 8);
  double v6 = *(void **)(v4 + 16);
  id v7 = *(void **)(v4 + 24);
  *(void *)(v3 + 16) = *(void *)v4;
  *(void *)(v3 + 24) = v12;
  *(void *)(v3 + 32) = v6;
  *(void *)(v3 + 40) = v7;
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(v4 + 32);
  id v8 = v6;
  id v9 = v7;
  id v10 = v5;

  return v12;
}

uint64_t sub_1003B7680(uint64_t a1)
{
  sub_100104808(a1, (uint64_t)v6);
  sub_10000BB04(&qword_1006711F0);
  swift_dynamicCast();
  v7[0] = v3;
  v7[1] = v4;
  _OWORD v7[2] = v5;
  Artwork.Placeholder.View.typedConfiguration.setter((uint64_t)v7);
  return sub_100013D48(a1);
}

void (*sub_1003B76FC(void *a1))(_OWORD **a1, char a2)
{
  long long v3 = malloc(0x128uLL);
  *a1 = v3;
  v3[36] = v1;
  v3[26] = &type metadata for Artwork.Placeholder;
  v3[27] = sub_1003B3530();
  uint64_t v4 = swift_allocObject();
  v3[23] = v4;
  uint64_t v5 = v1 + OBJC_IVAR____TtCVV11MusicCoreUI7Artwork11Placeholder4View_typedConfiguration;
  swift_beginAccess();
  double v6 = *(void **)v5;
  id v7 = *(void **)(v5 + 8);
  id v8 = *(void **)(v5 + 16);
  id v9 = *(void **)(v5 + 24);
  *(void *)(v4 + 16) = *(void *)v5;
  *(void *)(v4 + 24) = v7;
  *(void *)(v4 + 32) = v8;
  *(void *)(v4 + 40) = v9;
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(v5 + 32);
  id v10 = v8;
  id v11 = v9;
  id v12 = v6;
  id v13 = v7;
  return sub_1003B77E0;
}

void sub_1003B77E0(_OWORD **a1, char a2)
{
  long long v2 = *a1;
  long long v3 = *a1 + 6;
  uint64_t v4 = (uint64_t)(*a1 + 9);
  uint64_t v5 = (uint64_t)*a1 + 184;
  if (a2)
  {
    sub_100104808((uint64_t)*a1 + 184, (uint64_t)(v2 + 14));
    sub_100104808((uint64_t)(v2 + 14), v4);
    sub_10000BB04(&qword_1006711F0);
    swift_dynamicCast();
    long long v6 = v3[1];
    *long long v2 = *v3;
    v2[1] = v6;
    _OWORD v2[2] = v3[2];
    Artwork.Placeholder.View.typedConfiguration.setter((uint64_t)v2);
    sub_100013D48((uint64_t)(v2 + 14));
  }
  else
  {
    sub_100104808((uint64_t)*a1 + 184, v4);
    sub_10000BB04(&qword_1006711F0);
    swift_dynamicCast();
    long long v7 = v3[1];
    _OWORD v2[3] = *v3;
    v2[4] = v7;
    v2[5] = v3[2];
    Artwork.Placeholder.View.typedConfiguration.setter((uint64_t)(v2 + 3));
  }
  sub_100013D48(v5);

  free(v2);
}

char *sub_1003B7900()
{
  long long v1 = v0[1];
  long long v8 = *v0;
  v9[0] = v1;
  v9[1] = v0[2];
  sub_100013A18((uint64_t)&v8, (uint64_t)&v10, &qword_100671238);
  sub_100013A18((uint64_t)&v8 + 8, (uint64_t)&v11, &qword_100671238);
  sub_100013A18((uint64_t)v9, (uint64_t)&v12, &qword_100671240);
  long long v2 = (void *)*((void *)&v9[0] + 1);
  id v3 = objc_allocWithZone((Class)type metadata accessor for Artwork.Placeholder.View());
  sub_1001C858C(&v10);
  sub_1001C858C(&v11);
  sub_1001C858C(&v12);
  id v4 = v2;
  uint64_t v5 = Artwork.Placeholder.View.init(configuration:)((uint64_t)&v8);
  sub_1003BBC44(&qword_100671208, v6, (void (*)(uint64_t))type metadata accessor for Artwork.Placeholder.View);
  return v5;
}

id sub_1003B79F4@<X0>(uint64_t a1@<X8>)
{
  long long v2 = *(void **)v1;
  id v9 = *(id *)(v1 + 8);
  id v3 = *(void **)(v1 + 16);
  id v4 = *(void **)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  id v5 = v3;
  id v6 = v4;
  id v7 = v2;

  return v9;
}

BOOL sub_1003B7A5C(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  _OWORD v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return _s11MusicCoreUI7ArtworkV11PlaceholderV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v7, (uint64_t)v8);
}

double sub_1003B7AA4()
{
  uint64_t v0 = self;
  id v1 = [v0 blackColor];
  id v2 = [v1 colorWithAlphaComponent:0.1];

  id v3 = [v0 whiteColor];
  id v4 = [v3 colorWithAlphaComponent:0.12];

  NSString v5 = sub_100534CA0();
  id v6 = [self _systemImageNamed:v5];

  id v7 = [self configurationWithWeight:3];
  static Artwork.Placeholder.nowPlaying = (uint64_t)v2;
  unk_10067B390 = v4;
  qword_10067B398 = (uint64_t)v6;
  unk_10067B3A0 = v7;
  double result = 0.46;
  xmmword_10067B3A8 = xmmword_10054DCE0;
  return result;
}

uint64_t *Artwork.Placeholder.nowPlaying.unsafeMutableAddressor()
{
  if (qword_100670348 != -1) {
    swift_once();
  }
  return &static Artwork.Placeholder.nowPlaying;
}

id static Artwork.Placeholder.nowPlaying.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_100670348 != -1) {
    swift_once();
  }
  id v2 = (void *)static Artwork.Placeholder.nowPlaying;
  id v3 = (void *)unk_10067B390;
  NSString v5 = (void *)qword_10067B398;
  uint64_t v4 = unk_10067B3A0;
  id v10 = (id)unk_10067B3A0;
  *(void *)a1 = static Artwork.Placeholder.nowPlaying;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = xmmword_10067B3A8;
  id v6 = v2;
  id v7 = v3;
  id v8 = v5;

  return v10;
}

double sub_1003B7CC4()
{
  uint64_t v0 = self;
  id v1 = [v0 tertiarySystemFillColor];
  id v2 = [v0 quaternaryLabelColor];
  NSString v3 = sub_100534CA0();
  id v4 = [self _systemImageNamed:v3];

  id v5 = [self configurationWithWeight:3];
  static Artwork.Placeholder.miniPlayer = (uint64_t)v1;
  unk_10067B3C0 = v2;
  qword_10067B3C8 = (uint64_t)v4;
  unk_10067B3D0 = v5;
  double result = 0.46;
  xmmword_10067B3D8 = xmmword_10054DCE0;
  return result;
}

uint64_t *Artwork.Placeholder.miniPlayer.unsafeMutableAddressor()
{
  if (qword_100670350 != -1) {
    swift_once();
  }
  return &static Artwork.Placeholder.miniPlayer;
}

id static Artwork.Placeholder.miniPlayer.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_100670350 != -1) {
    swift_once();
  }
  id v2 = (void *)static Artwork.Placeholder.miniPlayer;
  NSString v3 = (void *)unk_10067B3C0;
  id v5 = (void *)qword_10067B3C8;
  uint64_t v4 = unk_10067B3D0;
  id v10 = (id)unk_10067B3D0;
  *(void *)a1 = static Artwork.Placeholder.miniPlayer;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = xmmword_10067B3D8;
  id v6 = v2;
  id v7 = v3;
  id v8 = v5;

  return v10;
}

void static Artwork.Placeholder.device(representing:basedOn:)(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v6 = *(void **)a2;
  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a2 + 24);
  id v9 = self;
  id v10 = v7;
  id v11 = v8;
  id v12 = v6;
  id v13 = [v9 _symbolImageForRoute:a1];
  double v14 = v13;
  if (v7)
  {
    double v32 = v6;
    double v15 = self;
    id v16 = v10;
    id v17 = v14;
    id v18 = [v15 secondaryLabelColor];
    sub_100123DA4(0, (unint64_t *)&qword_100678F40);
    char v19 = sub_100535D90();

    if (v19)
    {

      id v20 = [v15 labelColor];
    }
    else
    {
      id v24 = v16;
      id v25 = [v15 tertiaryLabelColor];
      char v26 = sub_100535D90();

      if (v26)
      {

        id v20 = [v15 secondaryLabelColor];
      }
      else
      {
        id v23 = v24;
        id v27 = [v15 quaternaryLabelColor];
        char v28 = sub_100535D90();

        if ((v28 & 1) == 0)
        {
LABEL_12:
          id v6 = v32;
          goto LABEL_13;
        }

        id v20 = [v15 tertiaryLabelColor];
      }
    }
    id v23 = v20;
    goto LABEL_12;
  }
  uint64_t v21 = qword_100670340;
  id v22 = v13;
  if (v21 != -1) {
    swift_once();
  }
  id v23 = (id)qword_100671220;
LABEL_13:
  uint64_t v29 = *(void *)(a2 + 40);
  id v30 = [self configurationWithHierarchicalColor:v23];
  id v31 = [v11 configurationByApplyingConfiguration:v30];

  *a3 = v6;
  a3[1] = v7;
  a3[2] = v14;
  a3[3] = v31;
  a3[4] = 0x3FE0000000000000;
  a3[5] = v29;
}

id sub_1003B8150()
{
  NSString v0 = sub_100534CA0();
  id v1 = [self _systemImageNamed:v0];

  id v2 = [self configurationWithWeight:3];
  id v3 = [self secondarySystemFillColor];
  if (qword_100670340 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_100671220;
  static Artwork.Placeholder.music = (uint64_t)v3;
  unk_10067B3F0 = qword_100671220;
  qword_10067B3F8 = (uint64_t)v1;
  unk_10067B400 = v2;
  xmmword_10067B408 = xmmword_10054DCF0;

  return v4;
}

uint64_t *Artwork.Placeholder.music.unsafeMutableAddressor()
{
  if (qword_100670358 != -1) {
    swift_once();
  }
  return &static Artwork.Placeholder.music;
}

id static Artwork.Placeholder.music.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_100670358 != -1) {
    swift_once();
  }
  id v2 = (void *)static Artwork.Placeholder.music;
  id v3 = (void *)unk_10067B3F0;
  id v5 = (void *)qword_10067B3F8;
  uint64_t v4 = unk_10067B400;
  id v10 = (id)unk_10067B400;
  *(void *)a1 = static Artwork.Placeholder.music;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = xmmword_10067B408;
  id v6 = v2;
  id v7 = v3;
  id v8 = v5;

  return v10;
}

id sub_1003B8358()
{
  NSString v0 = sub_100534CA0();
  id v1 = [self _systemImageNamed:v0];

  id v2 = [self configurationWithWeight:5];
  id v3 = [self secondarySystemFillColor];
  if (qword_100670340 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_100671220;
  static Artwork.Placeholder.musicVideo = (uint64_t)v3;
  unk_10067B420 = qword_100671220;
  qword_10067B428 = (uint64_t)v1;
  unk_10067B430 = v2;
  xmmword_10067B438 = xmmword_10054DCD0;

  return v4;
}

uint64_t *Artwork.Placeholder.musicVideo.unsafeMutableAddressor()
{
  if (qword_100670360 != -1) {
    swift_once();
  }
  return &static Artwork.Placeholder.musicVideo;
}

id static Artwork.Placeholder.musicVideo.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_100670360 != -1) {
    swift_once();
  }
  id v2 = (void *)static Artwork.Placeholder.musicVideo;
  id v3 = (void *)unk_10067B420;
  id v5 = (void *)qword_10067B428;
  uint64_t v4 = unk_10067B430;
  id v10 = (id)unk_10067B430;
  *(void *)a1 = static Artwork.Placeholder.musicVideo;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = xmmword_10067B438;
  id v6 = v2;
  id v7 = v3;
  id v8 = v5;

  return v10;
}

id sub_1003B8570()
{
  NSString v0 = sub_100534CA0();
  id v1 = [self _systemImageNamed:v0];

  id v2 = [self configurationWithWeight:5];
  id v3 = [self secondarySystemFillColor];
  if (qword_100670340 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_100671220;
  static Artwork.Placeholder.tv = (uint64_t)v3;
  unk_10067B450 = qword_100671220;
  qword_10067B458 = (uint64_t)v1;
  unk_10067B460 = v2;
  xmmword_10067B468 = xmmword_10054DCD0;

  return v4;
}

uint64_t *Artwork.Placeholder.tv.unsafeMutableAddressor()
{
  if (qword_100670368 != -1) {
    swift_once();
  }
  return &static Artwork.Placeholder.tv;
}

id static Artwork.Placeholder.tv.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_100670368 != -1) {
    swift_once();
  }
  id v2 = (void *)static Artwork.Placeholder.tv;
  id v3 = (void *)unk_10067B450;
  id v5 = (void *)qword_10067B458;
  uint64_t v4 = unk_10067B460;
  id v10 = (id)unk_10067B460;
  *(void *)a1 = static Artwork.Placeholder.tv;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = xmmword_10067B468;
  id v6 = v2;
  id v7 = v3;
  id v8 = v5;

  return v10;
}

id sub_1003B8770()
{
  NSString v0 = sub_100534CA0();
  id v1 = [self _systemImageNamed:v0];

  id v2 = [self configurationWithWeight:4];
  id v3 = [self secondarySystemFillColor];
  if (qword_100670340 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_100671220;
  static Artwork.Placeholder.microphone = (uint64_t)v3;
  unk_10067B480 = qword_100671220;
  qword_10067B488 = (uint64_t)v1;
  unk_10067B490 = v2;
  xmmword_10067B498 = xmmword_10054DCE0;

  return v4;
}

uint64_t *Artwork.Placeholder.microphone.unsafeMutableAddressor()
{
  if (qword_100670370 != -1) {
    swift_once();
  }
  return &static Artwork.Placeholder.microphone;
}

id static Artwork.Placeholder.microphone.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_100670370 != -1) {
    swift_once();
  }
  id v2 = (void *)static Artwork.Placeholder.microphone;
  id v3 = (void *)unk_10067B480;
  id v5 = (void *)qword_10067B488;
  uint64_t v4 = unk_10067B490;
  id v10 = (id)unk_10067B490;
  *(void *)a1 = static Artwork.Placeholder.microphone;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = xmmword_10067B498;
  id v6 = v2;
  id v7 = v3;
  id v8 = v5;

  return v10;
}

id sub_1003B8980()
{
  NSString v0 = sub_100534CA0();
  id v1 = [self _systemImageNamed:v0];

  id v2 = [self configurationWithWeight:3];
  id v3 = [self secondarySystemFillColor];
  if (qword_100670340 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_100671220;
  static Artwork.Placeholder.person = (uint64_t)v3;
  unk_10067B4B0 = qword_100671220;
  qword_10067B4B8 = (uint64_t)v1;
  unk_10067B4C0 = v2;
  xmmword_10067B4C8 = xmmword_10054DCD0;

  return v4;
}

uint64_t *Artwork.Placeholder.person.unsafeMutableAddressor()
{
  if (qword_100670378 != -1) {
    swift_once();
  }
  return &static Artwork.Placeholder.person;
}

id static Artwork.Placeholder.person.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_100670378 != -1) {
    swift_once();
  }
  id v2 = (void *)static Artwork.Placeholder.person;
  id v3 = (void *)unk_10067B4B0;
  id v5 = (void *)qword_10067B4B8;
  uint64_t v4 = unk_10067B4C0;
  id v10 = (id)unk_10067B4C0;
  *(void *)a1 = static Artwork.Placeholder.person;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = xmmword_10067B4C8;
  id v6 = v2;
  id v7 = v3;
  id v8 = v5;

  return v10;
}

double sub_1003B8B94()
{
  NSString v0 = sub_100534CA0();
  id v1 = [self _systemImageNamed:v0];

  id v2 = [self configurationWithWeight:3];
  static Artwork.Placeholder.newPlaylist = (uint64_t)[self secondarySystemFillColor];
  unk_10067B4E0 = 0;
  qword_10067B4E8 = (uint64_t)v1;
  unk_10067B4F0 = v2;
  double result = 0.5;
  xmmword_10067B4F8 = xmmword_10054DCD0;
  return result;
}

uint64_t *Artwork.Placeholder.newPlaylist.unsafeMutableAddressor()
{
  if (qword_100670380 != -1) {
    swift_once();
  }
  return &static Artwork.Placeholder.newPlaylist;
}

id static Artwork.Placeholder.newPlaylist.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_100670380 != -1) {
    swift_once();
  }
  id v2 = (void *)static Artwork.Placeholder.newPlaylist;
  id v3 = (void *)unk_10067B4E0;
  id v5 = (void *)qword_10067B4E8;
  uint64_t v4 = unk_10067B4F0;
  id v10 = (id)unk_10067B4F0;
  *(void *)a1 = static Artwork.Placeholder.newPlaylist;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = xmmword_10067B4F8;
  id v6 = v2;
  id v7 = v3;
  id v8 = v5;

  return v10;
}

double static Artwork.Placeholder.playlist(ofType:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_10000BB04(&qword_100671258);
  __chkstk_darwin();
  id v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100534590();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  id v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MPModelPlaylistType.variant.getter(a1, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Playlist.Variant.regular(_:), v6);
    sub_1003BB424((uint64_t)v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  }
  double v10 = sub_1003BB484((uint64_t)v9, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, double))(v7 + 8))(v9, v6, v10);
  long long v11 = v13[1];
  *a2 = v13[0];
  a2[1] = v11;
  double result = *(double *)&v14;
  a2[2] = v14;
  return result;
}

double static Artwork.Placeholder.playlist(withVariant:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1003BB484(a1, (uint64_t)v5);
  long long v3 = v5[1];
  *a2 = v5[0];
  a2[1] = v3;
  double result = *(double *)&v6;
  a2[2] = v6;
  return result;
}

id sub_1003B8F3C()
{
  NSString v0 = sub_100534CA0();
  id v1 = [self _systemImageNamed:v0];

  id v2 = [self configurationWithWeight:4];
  id v3 = [self secondarySystemFillColor];
  if (qword_100670340 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_100671220;
  static Artwork.Placeholder.radio = (uint64_t)v3;
  unk_10067B510 = qword_100671220;
  qword_10067B518 = (uint64_t)v1;
  unk_10067B520 = v2;
  xmmword_10067B528 = xmmword_10054DCF0;

  return v4;
}

uint64_t *Artwork.Placeholder.radio.unsafeMutableAddressor()
{
  if (qword_100670388 != -1) {
    swift_once();
  }
  return &static Artwork.Placeholder.radio;
}

id static Artwork.Placeholder.radio.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_100670388 != -1) {
    swift_once();
  }
  id v2 = (void *)static Artwork.Placeholder.radio;
  id v3 = (void *)unk_10067B510;
  id v5 = (void *)qword_10067B518;
  uint64_t v4 = unk_10067B520;
  id v10 = (id)unk_10067B520;
  *(void *)a1 = static Artwork.Placeholder.radio;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = xmmword_10067B528;
  id v6 = v2;
  id v7 = v3;
  id v8 = v5;

  return v10;
}

__n128 Artwork.Placeholder.withSolidBackgroundColor()@<Q0>(__n128 *a1@<X8>)
{
  id v2 = v1;
  uint64_t v4 = (void *)v1[1].n128_u64[0];
  id v5 = (void *)v1[1].n128_u64[1];
  id v6 = (id)v1->n128_u64[0];
  id v7 = (void *)v1->n128_u64[1];
  if (v1->n128_u64[0])
  {
    id v8 = self;
    id v22 = v4;
    id v9 = v4;
    id v10 = v5;
    id v11 = v6;
    id v12 = v7;
    id v13 = [v8 secondarySystemFillColor];
    sub_100123DA4(0, (unint64_t *)&qword_100678F40);
    char v14 = sub_100535D90();

    if (v14)
    {
      if (qword_100670390 != -1) {
        swift_once();
      }
      id v6 = (id)qword_100671228;

      uint64_t v4 = v22;
    }
    else
    {
      id v18 = v11;
      id v19 = [v8 tertiarySystemFillColor];
      char v20 = sub_100535D90();

      uint64_t v4 = v22;
      if (v20)
      {
        if (qword_100670398 != -1) {
          swift_once();
        }
        id v6 = (id)qword_100671230;
      }
    }
  }
  else
  {
    id v15 = v4;
    id v16 = v5;
    id v17 = v7;
  }
  a1->n128_u64[0] = (unint64_t)v6;
  a1->n128_u64[1] = (unint64_t)v7;
  a1[1].n128_u64[0] = (unint64_t)v4;
  a1[1].n128_u64[1] = (unint64_t)v5;
  __n128 result = v2[2];
  a1[2] = result;
  return result;
}

id Artwork.Placeholder.withBackground(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = *(void **)(v2 + 8);
  uint64_t v4 = *(void **)(v2 + 16);
  id v9 = *(id *)(v2 + 24);
  *(void *)a2 = a1;
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v9;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(v2 + 32);
  id v5 = a1;
  id v6 = v3;
  id v7 = v4;

  return v9;
}

id Artwork.Placeholder.withScaleFactor(_:)@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  id v3 = *(void **)v2;
  uint64_t v4 = *(void **)(v2 + 8);
  id v5 = *(void **)(v2 + 16);
  id v11 = *(id *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 40);
  *(void *)a1 = *(void *)v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v11;
  *(double *)(a1 + 32) = a2;
  *(void *)(a1 + 40) = v6;
  id v7 = v3;
  id v8 = v4;
  id v9 = v5;

  return v11;
}

id Artwork.Placeholder.withTint(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void **)v2;
  id v5 = *(void **)(v2 + 16);
  id v10 = *(id *)(v2 + 24);
  *(void *)a2 = *(void *)v2;
  *(void *)(a2 + 8) = a1;
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v10;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(v2 + 32);
  id v6 = v4;
  id v7 = a1;
  id v8 = v5;

  return v10;
}

uint64_t sub_1003B944C(uint64_t a1)
{
  return sub_1003B94B0(a1, (uint64_t)sub_1003B9474, (uint64_t)&unk_100632A00, &qword_100671228);
}

id sub_1003B9474(void *a1)
{
  return sub_1003B9584(a1, 38, 41, 233, 234);
}

uint64_t sub_1003B9488(uint64_t a1)
{
  return sub_1003B94B0(a1, (uint64_t)sub_1003B9570, (uint64_t)&unk_100632A28, &qword_100671230);
}

uint64_t sub_1003B94B0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = objc_allocWithZone((Class)UIColor);
  v11[4] = a2;
  v11[5] = 0;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  _OWORD v11[2] = sub_100042F08;
  void v11[3] = a3;
  id v8 = _Block_copy(v11);
  id v9 = [v7 initWithDynamicProvider:v8];
  _Block_release(v8);
  uint64_t result = swift_release();
  *a4 = v9;
  return result;
}

id sub_1003B9570(void *a1)
{
  return sub_1003B9584(a1, 44, 46, 245, 245);
}

id sub_1003B9584(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9 = [a1 userInterfaceStyle];
  sub_100123DA4(0, (unint64_t *)&qword_100678F40);
  if (v9 == (id)2)
  {
    uint64_t v10 = a2;
    uint64_t v11 = a2;
    uint64_t v12 = a3;
  }
  else
  {
    uint64_t v10 = a4;
    uint64_t v11 = a4;
    uint64_t v12 = a5;
  }
  return UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(v10, v11, v12, 1.0);
}

double sub_1003B975C()
{
  sub_10000BB04(&qword_100677840);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10053A3B0;
  *(void *)(v1 + 32) = sub_100534CE0();
  *(void *)(v1 + 40) = v2;
  Class isa = sub_1005350C0().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v4 = self;
  id v5 = [v4 propertySetWithProperties:isa];

  LODWORD(isa) = [v0 hasLoadedValuesForPropertySet:v5];
  double v6 = 1.0;
  if (isa && [v0 hasVideo])
  {
    if (qword_1006703A0 != -1) {
      swift_once();
    }
    double v6 = *(double *)&static Artwork.Size.musicVideoAspectRatio;
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_10053A3B0;
    *(void *)(v7 + 32) = sub_100534CE0();
    *(void *)(v7 + 40) = v8;
    Class v9 = sub_1005350C0().super.isa;
    swift_bridgeObjectRelease();
    id v10 = [v4 propertySetWithProperties:v9];

    unsigned int v11 = [v0 hasLoadedValuesForPropertySet:v10];
    if (v11)
    {
      id v12 = [v0 artworkCatalog];
      if (v12)
      {
        id v13 = v12;
        double v14 = COERCE_DOUBLE(MPArtworkCatalog.expectedRatio.getter());
        if ((v15 & 1) == 0 && v14 < 1.0)
        {
          if (qword_1006703A8 != -1) {
            swift_once();
          }
          double v6 = *(double *)&static Artwork.Size.verticalMusicVideoAspectRatio;
        }
      }
    }
  }
  return v6;
}

uint64_t *Artwork.Size.musicVideoAspectRatio.unsafeMutableAddressor()
{
  if (qword_1006703A0 != -1) {
    swift_once();
  }
  return &static Artwork.Size.musicVideoAspectRatio;
}

uint64_t *Artwork.Size.verticalMusicVideoAspectRatio.unsafeMutableAddressor()
{
  if (qword_1006703A8 != -1) {
    swift_once();
  }
  return &static Artwork.Size.verticalMusicVideoAspectRatio;
}

id static MPModelPlaylist.artworkPlaceholderImage(for:)()
{
  return sub_1003BB7E0();
}

id MPModelPlaylist.artworkPlaceholderImage.getter()
{
  if ([v0 hasLoadedValueForKey:MPModelPropertyPlaylistType])
  {
    [v0 type];
    return sub_1003BB7E0();
  }
  else
  {
    NSString v2 = sub_100534CA0();
    id v3 = [self _systemImageNamed:v2];

    return v3;
  }
}

void sub_1003B9B04()
{
  static Artwork.Size.musicVideoAspectRatio = 0x3FFC71C71C71C71CLL;
}

double static Artwork.Size.musicVideoAspectRatio.getter()
{
  return sub_1003B9CF8(&qword_1006703A0, (uint64_t)&static Artwork.Size.musicVideoAspectRatio);
}

void sub_1003B9B44()
{
  static Artwork.Size.verticalMusicVideoAspectRatio = 0x3FE2000000000000;
}

double static Artwork.Size.verticalMusicVideoAspectRatio.getter()
{
  return sub_1003B9CF8(&qword_1006703A8, (uint64_t)&static Artwork.Size.verticalMusicVideoAspectRatio);
}

double sub_1003B9B78(uint64_t a1)
{
  return sub_1003B9C40(a1, &qword_1006703A0, (double *)&static Artwork.Size.musicVideoAspectRatio, &static Artwork.Size.videoAspectRatio);
}

void *Artwork.Size.videoAspectRatio.unsafeMutableAddressor()
{
  if (qword_1006703B0 != -1) {
    swift_once();
  }
  return &static Artwork.Size.videoAspectRatio;
}

double static Artwork.Size.videoAspectRatio.getter()
{
  return sub_1003B9CF8(&qword_1006703B0, (uint64_t)&static Artwork.Size.videoAspectRatio);
}

double sub_1003B9C14(uint64_t a1)
{
  return sub_1003B9C40(a1, &qword_1006703A8, (double *)&static Artwork.Size.verticalMusicVideoAspectRatio, &static Artwork.Size.verticalVideoAspectRatio);
}

double sub_1003B9C40(uint64_t a1, void *a2, double *a3, void *a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  double result = *a3;
  *a4 = *(void *)a3;
  return result;
}

void *Artwork.Size.verticalVideoAspectRatio.unsafeMutableAddressor()
{
  if (qword_1006703B8 != -1) {
    swift_once();
  }
  return &static Artwork.Size.verticalVideoAspectRatio;
}

double static Artwork.Size.verticalVideoAspectRatio.getter()
{
  return sub_1003B9CF8(&qword_1006703B8, (uint64_t)&static Artwork.Size.verticalVideoAspectRatio);
}

double sub_1003B9CF8(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  return *(double *)a2;
}

void MPModelObject.artworkPlaceholder.getter(void *a1@<X8>)
{
  sub_10000BB04(&qword_100671258);
  __chkstk_darwin();
  uint64_t v4 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100534590();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  uint64_t v9 = swift_dynamicCastObjCClass();
  if (v9)
  {
    id v10 = (void *)v9;
    id v11 = v1;
    id v12 = [v10 anyObject];
    if (v12)
    {
      id v13 = v12;
      MPModelObject.artworkPlaceholder.getter(v38);

LABEL_23:
      uint64_t v22 = v38[4];
      uint64_t v23 = v38[5];
      uint64_t v21 = (void *)v38[2];
      id v25 = (id)v38[3];
      id v18 = (void *)v38[0];
      id v19 = (void *)v38[1];
      goto LABEL_24;
    }
    if (qword_100670358 != -1) {
      swift_once();
    }
    id v18 = (void *)static Artwork.Placeholder.music;
    id v19 = (void *)unk_10067B3F0;
    uint64_t v21 = (void *)qword_10067B3F8;
    char v20 = (void *)unk_10067B400;
    uint64_t v23 = *((void *)&xmmword_10067B408 + 1);
    uint64_t v22 = xmmword_10067B408;
    id v24 = (id)qword_10067B3F8;
    id v25 = v20;
    id v26 = v18;
    id v27 = v19;
  }
  else
  {
    self;
    uint64_t v14 = swift_dynamicCastObjCClass();
    if (v14)
    {
      char v15 = (void *)v14;
      uint64_t v16 = MPModelPropertyPlaylistType;
      id v17 = v1;
      if ([v15 hasLoadedValueForKey:v16])
      {
        MPModelPlaylistType.variant.getter((uint64_t)[v15 type], (uint64_t)v4);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
        {
          (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Playlist.Variant.regular(_:), v5);
          sub_1003BB424((uint64_t)v4);
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
        }
        double v37 = sub_1003BB484((uint64_t)v8, (uint64_t)v38);
        (*(void (**)(char *, uint64_t, double))(v6 + 8))(v8, v5, v37);

        goto LABEL_23;
      }
      if (qword_100670358 != -1) {
        swift_once();
      }
      id v18 = (void *)static Artwork.Placeholder.music;
      id v19 = (void *)unk_10067B3F0;
      uint64_t v21 = (void *)qword_10067B3F8;
      double v33 = (void *)unk_10067B400;
      uint64_t v23 = *((void *)&xmmword_10067B408 + 1);
      uint64_t v22 = xmmword_10067B408;
      id v34 = (id)qword_10067B3F8;
      id v25 = v33;
      id v35 = v18;
      id v36 = v19;
    }
    else
    {
      self;
      if (swift_dynamicCastObjCClass()
        || (self, swift_dynamicCastObjCClass())
        || (self, swift_dynamicCastObjCClass()))
      {
        if (qword_100670370 != -1) {
          swift_once();
        }
        char v28 = &static Artwork.Placeholder.microphone;
      }
      else
      {
        self;
        if (swift_dynamicCastObjCClass())
        {
          if (qword_100670378 != -1) {
            swift_once();
          }
          char v28 = &static Artwork.Placeholder.person;
        }
        else
        {
          self;
          if (swift_dynamicCastObjCClass()
            || (self, swift_dynamicCastObjCClass())
            || (self, swift_dynamicCastObjCClass())
            || (self, swift_dynamicCastObjCClass()))
          {
            if (qword_100670368 != -1) {
              swift_once();
            }
            char v28 = &static Artwork.Placeholder.tv;
          }
          else
          {
            if (qword_100670358 != -1) {
              swift_once();
            }
            char v28 = &static Artwork.Placeholder.music;
          }
        }
      }
      id v18 = (void *)*v28;
      id v19 = (void *)v28[1];
      uint64_t v21 = (void *)v28[2];
      uint64_t v29 = (void *)v28[3];
      uint64_t v22 = v28[4];
      uint64_t v23 = v28[5];
      id v30 = v21;
      id v25 = v29;
      id v31 = v18;
      id v32 = v19;
    }
  }
LABEL_24:
  *a1 = v18;
  a1[1] = v19;
  a1[2] = v21;
  a1[3] = v25;
  a1[4] = v22;
  a1[5] = v23;
}

id MusicItem.artworkPlaceholder.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v127 = a2;
  uint64_t v89 = sub_1005343B0();
  uint64_t v87 = *(void *)(v89 - 8);
  __chkstk_darwin();
  int v90 = (char *)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_1005302D0();
  uint64_t v88 = *(void *)(v93 - 8);
  __chkstk_darwin();
  uint64_t v92 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_100530560();
  uint64_t v91 = *(void *)(v96 - 8);
  __chkstk_darwin();
  uint64_t v95 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_1005305C0();
  uint64_t v94 = *(void *)(v99 - 8);
  __chkstk_darwin();
  unint64_t v98 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_100530500();
  uint64_t v97 = *(void *)(v103 - 8);
  __chkstk_darwin();
  uint64_t v102 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_100534580();
  uint64_t v101 = *(void *)(v109 - 8);
  __chkstk_darwin();
  uint64_t v108 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000BB04(&qword_100671258);
  __chkstk_darwin();
  unint64_t v107 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_100534590();
  uint64_t v114 = *(void *)(v110 - 8);
  __chkstk_darwin();
  uint64_t v100 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v106 = (char *)&v86 - v11;
  uint64_t v113 = sub_100534720();
  uint64_t v105 = *(void *)(v113 - 8);
  __chkstk_darwin();
  uint64_t v104 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v111 = (char *)&v86 - v13;
  uint64_t v116 = sub_1005339C0();
  uint64_t v112 = *(void *)(v116 - 8);
  __chkstk_darwin();
  uint64_t v117 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_1005303E0();
  uint64_t v115 = *(void *)(v120 - 8);
  __chkstk_darwin();
  uint64_t v119 = (char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_100534360();
  uint64_t v118 = *(void *)(v123 - 8);
  __chkstk_darwin();
  unint64_t v122 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100530510();
  uint64_t v121 = *(void *)(v17 - 8);
  __chkstk_darwin();
  id v19 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100533DF0();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin();
  uint64_t v23 = (char *)&v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1005341C0();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin();
  id v27 = (char *)&v86 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v29 = (char *)&v86 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = v30;
  (*(void (**)(char *, void, uint64_t))(v30 + 16))(v29, v124, a1);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    uint64_t v31 = v127;
    uint64_t v32 = a1;
LABEL_5:
    (*(void (**)(char *, uint64_t))(v126 + 8))(v29, v32);
    if (qword_100670370 != -1) {
      swift_once();
    }
    double v33 = &static Artwork.Placeholder.microphone;
    goto LABEL_18;
  }
  uint64_t v32 = a1;
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    uint64_t v31 = v127;
    goto LABEL_5;
  }
  int v34 = swift_dynamicCast();
  uint64_t v31 = v127;
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v121 + 8))(v19, v17);
  }
  else
  {
    id v36 = v122;
    uint64_t v35 = v123;
    if (swift_dynamicCast())
    {
      uint64_t v37 = v118;
    }
    else
    {
      id v36 = v119;
      uint64_t v35 = v120;
      if (!swift_dynamicCast())
      {
        uint64_t v47 = v116;
        if (swift_dynamicCast())
        {
          id v48 = v29;
          if (qword_100670360 != -1) {
            swift_once();
          }
          double v38 = (void *)static Artwork.Placeholder.musicVideo;
          double v39 = (void *)unk_10067B420;
          objc_super v41 = (void *)qword_10067B428;
          uint64_t v49 = (void *)unk_10067B430;
          long long v124 = xmmword_10067B438;
          id v50 = *(void (**)(char *, uint64_t))(v112 + 8);
          id v51 = (id)static Artwork.Placeholder.musicVideo;
          id v52 = v39;
          id v53 = v41;
          id v43 = v49;
          v50(v117, v47);
          id result = (id)(*(uint64_t (**)(char *, uint64_t))(v126 + 8))(v48, v32);
          goto LABEL_19;
        }
        uint64_t v54 = v111;
        uint64_t v55 = v113;
        if (swift_dynamicCast())
        {
          uint64_t v56 = v105;
          id v57 = v104;
          (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v104, v54, v55);
          uint64_t v58 = (uint64_t)v107;
          sub_1005345B0();
          uint64_t v59 = v114;
          uint64_t v60 = v110;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v58, 1, v110) == 1)
          {
            uint64_t v61 = (uint64_t)v106;
            (*(void (**)(char *, void, uint64_t))(v59 + 104))(v106, enum case for Playlist.Variant.regular(_:), v60);
            sub_1003BB424(v58);
          }
          else
          {
            uint64_t v61 = (uint64_t)v106;
            (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v106, v58, v60);
          }
          double v69 = sub_1003BB484(v61, (uint64_t)v128);
          (*(void (**)(uint64_t, uint64_t, double))(v59 + 8))(v61, v60, v69);
          (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v55);
        }
        else
        {
          id v62 = v108;
          uint64_t v63 = v109;
          int v64 = swift_dynamicCast();
          uint64_t v65 = v114;
          if (!v64)
          {
            uint64_t v70 = v102;
            uint64_t v71 = v103;
            if (swift_dynamicCast())
            {
              long long v72 = v128;
            }
            else
            {
              uint64_t v70 = v98;
              uint64_t v71 = v99;
              if (swift_dynamicCast())
              {
                long long v72 = (uint64_t *)&v125;
              }
              else
              {
                uint64_t v70 = v95;
                uint64_t v71 = v96;
                if (swift_dynamicCast())
                {
                  long long v72 = &v123;
                }
                else
                {
                  uint64_t v70 = v92;
                  uint64_t v71 = v93;
                  if (!swift_dynamicCast())
                  {
                    uint64_t v73 = v89;
                    if (swift_dynamicCast())
                    {
                      uint64_t v74 = v29;
                      if (qword_100670388 != -1) {
                        swift_once();
                      }
                      double v38 = (void *)static Artwork.Placeholder.radio;
                      double v39 = (void *)unk_10067B510;
                      objc_super v41 = (void *)qword_10067B518;
                      uint64_t v75 = (void *)unk_10067B520;
                      long long v124 = xmmword_10067B528;
                      uint64_t v76 = *(void (**)(char *, uint64_t))(v87 + 8);
                      id v77 = (id)static Artwork.Placeholder.radio;
                      id v78 = v39;
                      id v79 = v41;
                      id v43 = v75;
                      v76(v90, v73);
                      id result = (id)(*(uint64_t (**)(char *, uint64_t))(v126 + 8))(v74, v32);
                    }
                    else
                    {
                      uint64_t v80 = v29;
                      if (qword_100670358 != -1) {
                        swift_once();
                      }
                      double v38 = (void *)static Artwork.Placeholder.music;
                      double v39 = (void *)unk_10067B3F0;
                      objc_super v41 = (void *)qword_10067B3F8;
                      uint64_t v81 = (void *)unk_10067B400;
                      long long v124 = xmmword_10067B408;
                      id v82 = *(uint64_t (**)(char *, uint64_t))(v126 + 8);
                      id v83 = (id)static Artwork.Placeholder.music;
                      id v84 = v39;
                      id v85 = v41;
                      id v43 = v81;
                      id result = (id)v82(v80, v32);
                    }
                    goto LABEL_19;
                  }
                  long long v72 = &v120;
                }
              }
            }
            (*(void (**)(char *, uint64_t))(*(v72 - 32) + 8))(v70, v71);
            (*(void (**)(char *, uint64_t))(v126 + 8))(v29, v32);
            if (qword_100670368 != -1) {
              swift_once();
            }
            double v33 = &static Artwork.Placeholder.tv;
            goto LABEL_18;
          }
          uint64_t v66 = (uint64_t)v100;
          uint64_t v67 = v110;
          (*(void (**)(char *, void, uint64_t))(v114 + 104))(v100, enum case for Playlist.Variant.folder(_:), v110);
          double v68 = sub_1003BB484(v66, (uint64_t)v128);
          (*(void (**)(uint64_t, uint64_t, double))(v65 + 8))(v66, v67, v68);
          (*(void (**)(char *, uint64_t))(v101 + 8))(v62, v63);
        }
        id result = (id)(*(uint64_t (**)(char *, uint64_t))(v126 + 8))(v29, v32);
        long long v46 = v129;
        objc_super v41 = (void *)v128[2];
        id v43 = (id)v128[3];
        double v38 = (void *)v128[0];
        double v39 = (void *)v128[1];
        goto LABEL_20;
      }
      uint64_t v37 = v115;
    }
    (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v35);
  }
  (*(void (**)(char *, uint64_t))(v126 + 8))(v29, a1);
  if (qword_100670378 != -1) {
    swift_once();
  }
  double v33 = &static Artwork.Placeholder.person;
LABEL_18:
  double v38 = (void *)*v33;
  double v39 = (void *)v33[1];
  objc_super v41 = (void *)v33[2];
  double v40 = (void *)v33[3];
  long long v124 = *((_OWORD *)v33 + 2);
  id v42 = v41;
  id v43 = v40;
  id v44 = v38;
  id result = v39;
LABEL_19:
  long long v46 = v124;
LABEL_20:
  *(void *)uint64_t v31 = v38;
  *(void *)(v31 + 8) = v39;
  *(void *)(v31 + 16) = v41;
  *(void *)(v31 + 24) = v43;
  *(_OWORD *)(v31 + 32) = v46;
  return result;
}

BOOL _s11MusicCoreUI7ArtworkV11PlaceholderV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  if (*(void *)a1)
  {
    if (!v5) {
      return 0;
    }
    sub_100123DA4(0, (unint64_t *)&qword_100678F40);
    id v6 = v5;
    id v7 = v4;
    char v8 = sub_100535D90();

    if ((v8 & 1) == 0) {
      return 0;
    }
  }
  else if (v5)
  {
    return 0;
  }
  uint64_t v9 = *(void **)(a1 + 8);
  uint64_t v10 = *(void **)(a2 + 8);
  if (v9)
  {
    if (!v10) {
      return 0;
    }
    sub_100123DA4(0, (unint64_t *)&qword_100678F40);
    id v11 = v10;
    id v12 = v9;
    char v13 = sub_100535D90();

    if ((v13 & 1) == 0) {
      return 0;
    }
  }
  else if (v10)
  {
    return 0;
  }
  uint64_t v14 = *(void **)(a1 + 16);
  uint64_t v15 = *(void **)(a2 + 16);
  if (v14)
  {
    if (!v15) {
      return 0;
    }
    sub_100123DA4(0, &qword_100677850);
    id v16 = v15;
    id v17 = v14;
    char v18 = sub_100535D90();

    if ((v18 & 1) == 0) {
      return 0;
    }
  }
  else if (v15)
  {
    return 0;
  }
  sub_100123DA4(0, (unint64_t *)&qword_1006729F0);
  if ((sub_100535D90() & 1) != 0 && *(double *)(a1 + 32) == *(double *)(a2 + 32)) {
    return *(double *)(a1 + 40) == *(double *)(a2 + 40);
  }
  return 0;
}

uint64_t sub_1003BB424(uint64_t a1)
{
  uint64_t v2 = sub_10000BB04(&qword_100671258);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_1003BB484@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100534590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  id v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v9 = &v21[-v8];
  uint64_t v10 = *(void (**)(unsigned char *))(v5 + 104);
  int v22 = enum case for Playlist.Variant.folder(_:);
  v10(&v21[-v8]);
  sub_1003BBC44(&qword_100671308, 255, (void (*)(uint64_t))&type metadata accessor for Playlist.Variant);
  sub_100535070();
  sub_100535070();
  uint64_t v11 = v23;
  uint64_t v12 = v24;
  char v13 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v13(v9, v4);
  uint64_t v14 = 0;
  if (v12 != v11)
  {
    if (qword_100670340 != -1) {
      swift_once();
    }
    uint64_t v14 = qword_100671220;
    id v15 = (id)qword_100671220;
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  int v16 = (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 88))(v7, v4);
  if (v16 != enum case for Playlist.Variant.smart(_:) && v16 != enum case for Playlist.Variant.genius(_:) && v16 != v22) {
    v13(v7, v4);
  }
  NSString v17 = sub_100534CA0();
  swift_bridgeObjectRelease();
  id v18 = [self _systemImageNamed:v17];

  id v19 = [self configurationWithWeight:3];
  *(void *)a2 = [self secondarySystemFillColor];
  *(void *)(a2 + 8) = v14;
  *(void *)(a2 + 16) = v18;
  *(void *)(a2 + 24) = v19;
  double result = 0.4;
  *(_OWORD *)(a2 + 32) = xmmword_10054DCF0;
  return result;
}

id sub_1003BB7E0()
{
  NSString v0 = sub_100534CA0();
  id v1 = [self _systemImageNamed:v0];

  return v1;
}

unint64_t sub_1003BB8B8()
{
  unint64_t result = qword_100671260;
  if (!qword_100671260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100671260);
  }
  return result;
}

uint64_t sub_1003BB90C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1003BBC44(&qword_100671208, a2, (void (*)(uint64_t))type metadata accessor for Artwork.Placeholder.View);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for Artwork.Placeholder.View()
{
  return self;
}

uint64_t sub_1003BB988(uint64_t a1, uint64_t a2)
{
  return sub_1003BBC44(&qword_1006712A8, a2, (void (*)(uint64_t))type metadata accessor for Artwork.Placeholder.View);
}

unint64_t sub_1003BB9D0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1003BBA00();
  unint64_t result = sub_1003B3530();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1003BBA00()
{
  unint64_t result = qword_1006712D8;
  if (!qword_1006712D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006712D8);
  }
  return result;
}

uint64_t _s11PlaceholderVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  id v7 = v3;
  id v8 = v4;
  id v9 = v5;
  id v10 = v6;
  return a1;
}

uint64_t _s11PlaceholderVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  id v7 = *(void **)(a1 + 8);
  id v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  id v10 = *(void **)(a1 + 16);
  uint64_t v11 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v11;
  id v12 = v11;

  char v13 = *(void **)(a2 + 24);
  uint64_t v14 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v13;
  id v15 = v13;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t _s11PlaceholderVwta(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  uint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  *(_OWORD *)(a1 + 32) = a2[2];
  return a1;
}

uint64_t _s11PlaceholderVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s11PlaceholderVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Artwork.Placeholder()
{
  return &type metadata for Artwork.Placeholder;
}

uint64_t sub_1003BBC3C()
{
  return sub_1002D40E4();
}

uint64_t sub_1003BBC44(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

__n128 CAPackageDefinition.transform.getter@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 40);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 56);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 CAPackageDefinition.transform.setter(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v2;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 56) = result;
  return result;
}

__n128 CAPackageDefinition.init(name:bundle:transform:states:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  long long v6 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a6 + 24) = *(_OWORD *)a4;
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(_OWORD *)(a6 + 40) = v6;
  __n128 result = *(__n128 *)(a4 + 32);
  *(__n128 *)(a6 + 56) = result;
  *(void *)(a6 + 72) = a5;
  return result;
}

__n128 CAPackageDefinition.scaled(byX:y:)@<Q0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>)
{
  long long v15 = *(_OWORD *)(v3 + 40);
  long long v17 = *(_OWORD *)(v3 + 24);
  CGFloat v5 = *(double *)(v3 + 56);
  CGFloat v6 = *(double *)(v3 + 64);
  uint64_t v7 = *(void *)v3;
  uint64_t v8 = *(void *)(v3 + 72);
  long long v19 = *(_OWORD *)(v3 + 8);
  CGAffineTransformMakeScale(&t1, a2, a3);
  long long v9 = *(_OWORD *)&t1.a;
  long long v10 = *(_OWORD *)&t1.c;
  long long v11 = *(_OWORD *)&t1.tx;
  *(_OWORD *)&t1.a = v17;
  *(_OWORD *)&t1.c = v15;
  t1.tCGFloat x = v5;
  t1.tCGFloat y = v6;
  *(_OWORD *)&t2.a = v9;
  *(_OWORD *)&t2.c = v10;
  *(_OWORD *)&t2.tCGFloat x = v11;
  CGAffineTransformConcat(&v20, &t1, &t2);
  __n128 v16 = *(__n128 *)&v20.c;
  long long v18 = *(_OWORD *)&v20.a;
  tCGFloat x = v20.tx;
  tCGFloat y = v20.ty;
  sub_1003BBDBC(v3);
  *(void *)a1 = v7;
  *(_OWORD *)(a1 + 8) = v19;
  *(_OWORD *)(a1 + 24) = v18;
  __n128 result = v16;
  *(__n128 *)(a1 + 40) = v16;
  *(CGFloat *)(a1 + 56) = tx;
  *(CGFloat *)(a1 + 64) = ty;
  *(void *)(a1 + 72) = v8;
  return result;
}

uint64_t sub_1003BBDBC(uint64_t a1)
{
  long long v2 = *(void **)(a1 + 16);
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1003BBE08(_OWORD *a1, long long *a2)
{
  long long v2 = a1[3];
  v8[2] = a1[2];
  _OWORD v8[3] = v2;
  long long v3 = a1[4];
  long long v4 = a1[1];
  v8[0] = *a1;
  v8[1] = v4;
  long long v5 = a2[3];
  _OWORD v9[2] = a2[2];
  v9[3] = v5;
  v9[4] = a2[4];
  long long v6 = *a2;
  v9[1] = a2[1];
  v8[4] = v3;
  v9[0] = v6;
  return _s11MusicCoreUI19CAPackageDefinitionV23__derived_struct_equalsySbAC_ACtFZ_0(v8, v9) & 1;
}

void *sub_1003BBE64()
{
  _s16PackageDataCacheCMa();
  swift_allocObject();
  __n128 result = (void *)sub_1003BC360();
  off_100671318 = result;
  return result;
}

uint64_t sub_1003BBEA4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_100533280();
  uint64_t v23 = *(void *)(v10 - 8);
  __chkstk_darwin();
  id v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1005332B0();
  uint64_t v13 = *(void *)(v22 - 8);
  __chkstk_darwin();
  long long v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v16 = *(void **)(v5 + 24);
  long long v17 = (void *)swift_allocObject();
  void v17[2] = v5;
  v17[3] = a3;
  void v17[4] = a4;
  v17[5] = a1;
  void v17[6] = a2;
  aBlock[4] = sub_1003BD318;
  uint64_t aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001CB5A0;
  aBlock[3] = &unk_100632B78;
  long long v18 = _Block_copy(aBlock);
  id v19 = v16;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10004A0A8(a1, a2);
  sub_1005332A0();
  uint64_t v24 = _swiftEmptyArrayStorage;
  sub_1003BD328((unint64_t *)&unk_100672CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000BB04(&qword_1006711F8);
  sub_1001CF9D8((unint64_t *)&qword_100672CB0, &qword_1006711F8);
  sub_1005360C0();
  sub_100535980();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v22);
  return swift_release();
}

uint64_t sub_1003BC188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_10004A0A8(a4, a5);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0x8000000000000000;
  sub_1003E9EFC(a4, a5, a2, a3, isUniquelyReferenced_nonNull_native);
  *(void *)(a1 + 16) = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1003BC250(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t v8 = *(void *)(a2 + 16);
  if (*(void *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_1001A1AC8(a3, a4);
    if (v10)
    {
      uint64_t v11 = (uint64_t *)(*(void *)(v8 + 56) + 16 * v9);
      uint64_t v12 = *v11;
      unint64_t v13 = v11[1];
      sub_10004A0A8(*v11, v13);
    }
    else
    {
      uint64_t v12 = 0;
      unint64_t v13 = 0xF000000000000000;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = 0;
    unint64_t v13 = 0xF000000000000000;
  }
  uint64_t v14 = *a1;
  unint64_t v15 = a1[1];
  *a1 = v12;
  a1[1] = v13;
  return sub_1000D0F4C(v14, v15);
}

uint64_t sub_1003BC320()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1003BC360()
{
  v5[0] = sub_100535950();
  uint64_t v1 = *(void *)(v5[0] - 8);
  __chkstk_darwin();
  long long v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100535910();
  __chkstk_darwin();
  sub_1005332B0();
  __chkstk_darwin();
  *(void *)(v0 + 16) = sub_1003CC358((uint64_t)_swiftEmptyArrayStorage);
  sub_100123DA4(0, (unint64_t *)&qword_1006708E0);
  sub_1005332A0();
  v5[1] = _swiftEmptyArrayStorage;
  sub_1003BD328((unint64_t *)&unk_100671B50, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000BB04((uint64_t *)&unk_1006708F0);
  sub_1001CF9D8((unint64_t *)&qword_100671B60, (uint64_t *)&unk_1006708F0);
  sub_1005360C0();
  (*(void (**)(char *, void, void))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v5[0]);
  *(void *)(v0 + 24) = sub_1005359A0();
  return v0;
}

char *CAPackage.init(definition:)(uint64_t *a1)
{
  sub_10000BB04(&qword_100670C90);
  __chkstk_darwin();
  long long v3 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_10052F360();
  uint64_t v47 = *(void *)(v45 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v43 = (char *)&v42 - v6;
  if (qword_1006703C0 != -1) {
    swift_once();
  }
  uint64_t v7 = off_100671318;
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  id v48 = a1;
  long long v50 = xmmword_10054DD00;
  char v10 = (void *)*((void *)off_100671318 + 3);
  uint64_t v11 = (void *)swift_allocObject();
  _OWORD v11[2] = &v50;
  void v11[3] = v7;
  uint64_t v46 = v8;
  v11[4] = v8;
  v11[5] = v9;
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = sub_1003BD03C;
  unint64_t v12[3] = v11;
  aBlock[4] = sub_10011C994;
  uint64_t aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1001F5E38;
  aBlock[3] = &unk_100632AA0;
  unint64_t v13 = _Block_copy(aBlock);
  uint64_t v14 = v10;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v14, v13);

  _Block_release(v13);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v8) {
    __break(1u);
  }
  long long v15 = v50;
  swift_release();
  if (*((void *)&v15 + 1) >> 60 == 15)
  {
    uint64_t v16 = (uint64_t)v48;
    id v17 = (id)v48[2];
    NSString v18 = sub_100534CA0();
    NSString v19 = sub_100534CA0();
    id v20 = [v17 URLForResource:v18 withExtension:v19];

    if (v20)
    {
      sub_10052F300();

      uint64_t v21 = v47;
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
      uint64_t v23 = v45;
      v22(v3, v5, v45);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v3, 0, 1, v23);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v3, 1, v23) != 1)
      {
        uint64_t v24 = v43;
        v22(v43, v3, v23);
        uint64_t v25 = v44;
        uint64_t v26 = sub_10052F380();
        if (v25)
        {

          sub_1003BD070(v16);
          (*(void (**)(char *, uint64_t))(v47 + 8))(v24, v23);
        }
        else
        {
          uint64_t v36 = v26;
          unint64_t v37 = v27;
          sub_1003BBEA4(v26, v27, v46, v9);
          uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
          unint64_t v39 = v37;
          Class isa = sub_10052F3C0().super.isa;
          aBlock[0] = 0;
          long long v3 = (char *)[ObjCClassFromMetadata packageWithData:isa type:kCAPackageTypeArchive options:0 error:aBlock];

          if (v3)
          {
            id v41 = aBlock[0];
          }
          else
          {
            long long v3 = (char *)aBlock[0];
            sub_10052F1E0();

            swift_willThrow();
          }

          sub_10004A100(v36, v39);
          sub_1003BD070(v16);
          (*(void (**)(char *, uint64_t))(v47 + 8))(v43, v23);
        }
        return v3;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v3, 1, 1, v45);
    }
    sub_1003ADBAC((uint64_t)v3);
    sub_100534CE0();
    long long v3 = v32;
    id v33 = objc_allocWithZone((Class)NSError);
    NSString v34 = sub_100534CA0();
    swift_bridgeObjectRelease();
    [v33 initWithDomain:v34 code:-1002 userInfo:0];

    swift_willThrow();
    sub_1003BD070(v16);

    return v3;
  }
  uint64_t v28 = (void *)swift_getObjCClassFromMetadata();
  Class v29 = sub_10052F3C0().super.isa;
  aBlock[0] = 0;
  long long v3 = (char *)[v28 packageWithData:v29 type:kCAPackageTypeArchive options:0 error:aBlock];

  uint64_t v30 = (uint64_t)v48;
  if (v3)
  {
    id v31 = aBlock[0];
  }
  else
  {
    long long v3 = (char *)aBlock[0];
    sub_10052F1E0();

    swift_willThrow();
  }
  sub_1003BD070(v30);
  sub_1000D0F4C(v15, *((unint64_t *)&v15 + 1));
  return v3;
}

id static CAPackageDefinition.play.getter@<X0>(void *a1@<X8>)
{
  return sub_1003BCE7C(0x7375615079616C50, 0xED0000706F745365, (uint64_t)&off_100631308, a1);
}

id static CAPackageDefinition.pause.getter@<X0>(void *a1@<X8>)
{
  return sub_1003BCE7C(0x7375615079616C50, 0xED0000706F745365, (uint64_t)&off_100631338, a1);
}

id static CAPackageDefinition.stop.getter@<X0>(void *a1@<X8>)
{
  return sub_1003BCE7C(0x7375615079616C50, 0xED0000706F745365, (uint64_t)&off_100631368, a1);
}

id static CAPackageDefinition.skipForward.getter@<X0>(void *a1@<X8>)
{
  return sub_1003BCE7C(0x4264726177726F46, 0xEF647261776B6361, (uint64_t)&off_100631398, a1);
}

id static CAPackageDefinition.skipBackward.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_100670320 != -1) {
    swift_once();
  }
  id v6 = (id)qword_10067B320;
  CGAffineTransformMakeScale(&v7, -1.0, 1.0);
  long long v2 = *(_OWORD *)&v7.a;
  long long v3 = *(_OWORD *)&v7.c;
  long long v4 = *(_OWORD *)&v7.tx;
  *(void *)a1 = 0x4264726177726F46;
  *(void *)(a1 + 8) = 0xEF647261776B6361;
  *(void *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 24) = v2;
  *(_OWORD *)(a1 + 40) = v3;
  *(_OWORD *)(a1 + 56) = v4;
  *(void *)(a1 + 72) = &off_1006313F8;

  return v6;
}

id static CAPackageDefinition.favorite.getter@<X0>(void *a1@<X8>)
{
  return sub_1003BCE7C(0x657469726F766146, 0xE800000000000000, (uint64_t)_swiftEmptyArrayStorage, a1);
}

id static CAPackageDefinition.favoriteDark.getter@<X0>(void *a1@<X8>)
{
  return sub_1003BCE7C(0x657469726F766146, 0xEC0000006B726144, (uint64_t)_swiftEmptyArrayStorage, a1);
}

id static CAPackageDefinition.favoriteHighContrastDark.getter@<X0>(void *a1@<X8>)
{
  return sub_1003BCE7C(0xD000000000000018, 0x8000000100566A20, (uint64_t)_swiftEmptyArrayStorage, a1);
}

id static CAPackageDefinition.favoriteHighContrastLight.getter@<X0>(void *a1@<X8>)
{
  return sub_1003BCE7C(0xD000000000000019, 0x8000000100566A40, (uint64_t)_swiftEmptyArrayStorage, a1);
}

id sub_1003BCE7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (qword_100670320 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)qword_10067B320;
  *a4 = a1;
  a4[1] = a2;
  a4[2] = v8;
  a4[3] = 0x3FF0000000000000;
  a4[4] = 0;
  a4[5] = 0;
  a4[6] = 0x3FF0000000000000;
  a4[7] = 0;
  a4[8] = 0;
  a4[9] = a3;

  return v8;
}

uint64_t _s11MusicCoreUI19CAPackageDefinitionV23__derived_struct_equalsySbAC_ACtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_100536780() & 1) == 0) {
    return 0;
  }
  sub_100123DA4(0, (unint64_t *)&qword_1006729F0);
  if ((sub_100535D90() & 1) == 0 || (sub_1005358A0() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = (void *)a1[9];
  id v6 = (void *)a2[9];

  return sub_1003D1CC0(v5, v6);
}

uint64_t sub_1003BCFFC()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1003BD03C()
{
  return sub_1003BC250(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1003BD048()
{
  return swift_deallocObject();
}

uint64_t sub_1003BD058(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003BD068()
{
  return swift_release();
}

uint64_t sub_1003BD070(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t destroy for CAPackageDefinition(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CAPackageDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  BOOL v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  id v5 = v4;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CAPackageDefinition(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  BOOL v4 = (void *)a2[2];
  id v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for CAPackageDefinition(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for CAPackageDefinition(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  long long v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CAPackageDefinition()
{
  return &type metadata for CAPackageDefinition;
}

uint64_t _s16PackageDataCacheCMa()
{
  return self;
}

uint64_t sub_1003BD2D0()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_10004A100(*(void *)(v0 + 40), *(void *)(v0 + 48));

  return swift_deallocObject();
}

uint64_t sub_1003BD318()
{
  return sub_1003BC188(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1003BD328(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id CoreAnimationPackageView.__allocating_init(definition:)(_OWORD *a1)
{
  id v3 = objc_allocWithZone(v1);
  return CoreAnimationPackageView.init(definition:)(a1);
}

id CoreAnimationPackageView.init(definition:)(_OWORD *a1)
{
  swift_getObjectType();
  id v3 = &v1[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateName];
  *(void *)id v3 = 0;
  *((void *)v3 + 1) = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_foregroundColor] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateAnimationTimer] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_currentStates] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_package] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateController] = 0;
  long long v4 = &v1[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_definition];
  long long v5 = a1[3];
  *((_OWORD *)v4 + 2) = a1[2];
  *((_OWORD *)v4 + 3) = v5;
  *((_OWORD *)v4 + 4) = a1[4];
  long long v6 = a1[1];
  *(_OWORD *)long long v4 = *a1;
  *((_OWORD *)v4 + 1) = v6;
  sub_1003BBDBC((uint64_t)a1);
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for CoreAnimationPackageView();
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_1003BDB64();
  CoreAnimationPackageView.reset()();
  sub_100123DA4(0, &qword_100671448);
  id v8 = v7;
  sub_1005359C0();
  sub_100535D10();
  sub_1003BD070((uint64_t)a1);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v8;
}

uint64_t type metadata accessor for CoreAnimationPackageView()
{
  return self;
}

void sub_1003BD57C(uint64_t *a1)
{
  id v3 = &v1[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_definition];
  swift_beginAccess();
  long long v4 = (void *)*((void *)v3 + 2);
  long long v5 = (void *)*((void *)v3 + 9);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  BOOL v8 = *(void *)v3 == *a1 && *((void *)v3 + 1) == v7;
  if (v8 || (sub_100536780() & 1) != 0)
  {
    sub_100123DA4(0, (unint64_t *)&qword_1006729F0);
    swift_bridgeObjectRetain();
    id v9 = v4;
    swift_bridgeObjectRetain();
    if (sub_100535D90() & 1) != 0 && (sub_1005358A0())
    {
      char v10 = sub_1003D1CC0(v5, (void *)a1[9]);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      if (v10) {
        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
  }
  BOOL v11 = *(void *)v3 == v6 && *((void *)v3 + 1) == v7;
  if (!v11 && (sub_100536780() & 1) == 0) {
    sub_1003BDB64();
  }
  if ((sub_1005358A0() & 1) == 0) {
    [v1 setNeedsLayout];
  }
  CoreAnimationPackageView.reset()();
}

uint64_t CoreAnimationPackageView.definition.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_definition;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 8);
  long long v5 = *(void **)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 72);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v3 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v3 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(v3 + 56);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRetain();
  id v7 = v5;
  return swift_bridgeObjectRetain();
}

uint64_t CoreAnimationPackageView.definition.setter(_OWORD *a1)
{
  uint64_t v3 = (_OWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_definition);
  swift_beginAccess();
  long long v4 = v3[1];
  long long v5 = v3[3];
  v10[2] = v3[2];
  v10[3] = v5;
  void v10[4] = v3[4];
  v10[0] = *v3;
  v10[1] = v4;
  uint64_t v6 = (void *)*((void *)v3 + 2);
  long long v7 = a1[1];
  *uint64_t v3 = *a1;
  v3[1] = v7;
  long long v8 = a1[4];
  v3[3] = a1[3];
  id v3[4] = v8;
  v3[2] = a1[2];
  sub_1003BBDBC((uint64_t)v10);
  sub_1003BBDBC((uint64_t)a1);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1003BD57C((uint64_t *)v10);
  sub_1003BD070((uint64_t)a1);
  return sub_1003BD070((uint64_t)v10);
}

void (*CoreAnimationPackageView.definition.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = (char *)malloc(0x118uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_definition;
  *((void *)v3 + 33) = v1;
  *((void *)v3 + 34) = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 8);
  long long v7 = *(void **)(v5 + 16);
  *((void *)v3 + 20) = *(void *)v5;
  *((void *)v3 + 21) = v6;
  v3 += 160;
  uint64_t v8 = *(void *)(v5 + 72);
  *((void *)v3 + 2) = v7;
  *(_OWORD *)(v3 + 24) = *(_OWORD *)(v5 + 24);
  *(_OWORD *)(v3 + 40) = *(_OWORD *)(v5 + 40);
  *(_OWORD *)(v3 + 56) = *(_OWORD *)(v5 + 56);
  *((void *)v3 + 9) = v8;
  swift_bridgeObjectRetain();
  id v9 = v7;
  swift_bridgeObjectRetain();
  return sub_1003BD998;
}

void sub_1003BD998(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 160);
  uint64_t v4 = *(void *)(*a1 + 168);
  uint64_t v5 = *(void **)(*a1 + 176);
  uint64_t v7 = *(void *)(*a1 + 184);
  uint64_t v6 = *(void *)(*a1 + 192);
  uint64_t v9 = *(void *)(*a1 + 200);
  uint64_t v8 = *(void *)(*a1 + 208);
  uint64_t v11 = *(void *)(*a1 + 216);
  uint64_t v10 = *(void *)(*a1 + 224);
  uint64_t v12 = *(void *)(*a1 + 232);
  uint64_t v13 = *(void *)(*a1 + 264) + *(void *)(*a1 + 272);
  if (a2)
  {
    *(_OWORD *)uint64_t v2 = *(_OWORD *)v13;
    long long v14 = *(_OWORD *)(v13 + 16);
    long long v15 = *(_OWORD *)(v13 + 32);
    long long v16 = *(_OWORD *)(v13 + 64);
    *(_OWORD *)(v2 + 48) = *(_OWORD *)(v13 + 48);
    *(_OWORD *)(v2 + 64) = v16;
    *(_OWORD *)(v2 + 16) = v14;
    *(_OWORD *)(v2 + 32) = v15;
    id v17 = *(void **)(v13 + 16);
    *(void *)uint64_t v13 = v3;
    *(void *)(v13 + 8) = v4;
    *(void *)(v13 + 16) = v5;
    *(void *)(v13 + 24) = v7;
    *(void *)(v13 + 32) = v6;
    *(void *)(v13 + 40) = v9;
    *(void *)(v13 + 48) = v8;
    *(void *)(v13 + 56) = v11;
    *(void *)(v13 + 64) = v10;
    *(void *)(v13 + 72) = v12;
    swift_bridgeObjectRetain_n();
    id v18 = v5;
    swift_bridgeObjectRetain_n();
    id v19 = v18;
    sub_1003BBDBC(v2);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1003BD57C((uint64_t *)v2);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1003BD070(v2);
    id v20 = *(void **)(v2 + 176);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(v2 + 80) = *(_OWORD *)v13;
    long long v21 = *(_OWORD *)(v13 + 16);
    long long v22 = *(_OWORD *)(v13 + 32);
    long long v23 = *(_OWORD *)(v13 + 64);
    *(_OWORD *)(v2 + 128) = *(_OWORD *)(v13 + 48);
    *(_OWORD *)(v2 + 144) = v23;
    *(_OWORD *)(v2 + 96) = v21;
    *(_OWORD *)(v2 + 112) = v22;
    uint64_t v24 = *(void **)(v13 + 16);
    *(void *)uint64_t v13 = v3;
    *(void *)(v13 + 8) = v4;
    *(void *)(v13 + 16) = v5;
    *(void *)(v13 + 24) = v7;
    *(void *)(v13 + 32) = v6;
    *(void *)(v13 + 40) = v9;
    *(void *)(v13 + 48) = v8;
    *(void *)(v13 + 56) = v11;
    *(void *)(v13 + 64) = v10;
    *(void *)(v13 + 72) = v12;
    sub_1003BBDBC(v2 + 80);
    swift_bridgeObjectRetain();
    id v25 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1003BD57C((uint64_t *)(v2 + 80));
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1003BD070(v2 + 80);
  }

  free((void *)v2);
}

void sub_1003BDB64()
{
  uint64_t v1 = v0;
  sub_100123DA4(0, &qword_1006714A0);
  uint64_t v2 = &v0[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_definition];
  swift_beginAccess();
  long long v3 = *((_OWORD *)v2 + 2);
  long long v4 = *((_OWORD *)v2 + 3);
  long long v5 = *(_OWORD *)v2;
  v30[1] = *((_OWORD *)v2 + 1);
  v30[2] = v3;
  long long v6 = *((_OWORD *)v2 + 4);
  v30[3] = v4;
  void v30[4] = v6;
  v30[0] = v5;
  sub_1003BBDBC((uint64_t)v30);
  uint64_t v7 = CAPackage.init(definition:)((uint64_t *)v30);
  id v20 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_package];
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_package] = v7;
  long long v21 = v7;

  id v22 = [v21 rootLayer];
  if (v22)
  {
    long long v23 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer];
    *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer] = v22;
    id v24 = v22;
    [v23 removeFromSuperlayer];

    id v25 = [objc_allocWithZone((Class)CAStateController) initWithLayer:v24];
    uint64_t v26 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateController];
    *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateController] = v25;

    [v24 removeFromSuperlayer];
    [v24 setGeometryFlipped:[v21 isGeometryFlipped]];
    id v27 = [v1 layer];
    [v27 addSublayer:v24];

    id v28 = [v1 layer];
    [v28 bounds];

    sub_100535BD0();
    [v24 setPosition:];
    sub_1003BEF14();
  }
  else
  {
    sub_1003C0044();
    swift_allocError();
    swift_willThrow();

    if (qword_1006703D0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_100530920();
    sub_10000EA90(v8, (uint64_t)qword_10067B560);
    uint64_t v9 = v1;
    swift_errorRetain();
    uint64_t v10 = v9;
    swift_errorRetain();
    uint64_t v11 = sub_100530900();
    os_log_type_t v12 = sub_1005357D0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      v29[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136446466;
      long long v14 = (void *)*((void *)v2 + 2);
      swift_bridgeObjectRetain();
      id v15 = v14;
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_100534D70();
      *(void *)(v13 + 4) = sub_1003C5E90(v16, v17, v29);

      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2082;
      swift_errorRetain();
      sub_10000BB04(&qword_1006714A8);
      uint64_t v18 = sub_100534D70();
      *(void *)(v13 + 14) = sub_1003C5E90(v18, v19, v29);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Failed to load CAPackage with definition=%{public}s. Error=%{public}s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

void sub_1003BDFD8(uint64_t a1, uint64_t a2)
{
  long long v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateName);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  if (v6)
  {
    uint64_t v7 = *v5;
    if (a2)
    {
      BOOL v8 = v7 == a1 && v6 == a2;
      if (v8 || (sub_100536780() & 1) != 0) {
        return;
      }
    }
    uint64_t v9 = (void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer);
    uint64_t v10 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer);
    if (!v10) {
      return;
    }
    id v11 = v10;
    swift_bridgeObjectRetain();
    NSString v12 = sub_100534CA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (!a2) {
      return;
    }
    uint64_t v9 = (void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer);
    uint64_t v13 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer);
    if (!v13) {
      return;
    }
    id v11 = v13;
    NSString v12 = 0;
  }
  id v14 = [v11 stateWithName:v12];

  if (v14)
  {
    id v15 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateController);
    if (v15)
    {
      uint64_t v16 = *v9;
      unint64_t v17 = self;
      id v18 = v16;
      id v19 = v15;
      id v20 = v14;
      unsigned int v21 = [v17 areAnimationsEnabled];
      double v22 = 0.0;
      if (v21) {
        *(float *)&double v22 = 1.0;
      }
      [v19 setState:v20 ofLayer:v18 transitionSpeed:v22];
    }
  }
}

uint64_t CoreAnimationPackageView.stateName.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateName);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t CoreAnimationPackageView.stateName.setter(uint64_t a1, uint64_t a2)
{
  long long v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateName);
  swift_beginAccess();
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  *long long v5 = a1;
  v5[1] = a2;
  sub_1003BDFD8(v6, v7);
  return swift_bridgeObjectRelease();
}

void (*CoreAnimationPackageView.stateName.modify(void *a1))(uint64_t a1, char a2)
{
  long long v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateName;
  v3[5] = v1;
  v3[6] = v4;
  long long v5 = (void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[3] = *v5;
  id v3[4] = v6;
  swift_bridgeObjectRetain();
  return sub_1003BE2D8;
}

void sub_1003BE2D8(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v5 = *(void *)(*(void *)a1 + 40);
  uint64_t v4 = *(void *)(*(void *)a1 + 48);
  uint64_t v6 = *(void *)(*(void *)a1 + 32);
  uint64_t v7 = (uint64_t *)(v5 + v4);
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  *uint64_t v7 = v3;
  v7[1] = v6;
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1003BDFD8(v9, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1003BDFD8(v9, v8);
  }
  swift_bridgeObjectRelease();

  free(v2);
}

void *CoreAnimationPackageView.foregroundColor.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_foregroundColor);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void CoreAnimationPackageView.foregroundColor.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_foregroundColor);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
  Class v5 = a1;

  if (*v3)
  {
    sub_1003BEF14();
  }
  else
  {
    uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer);
    if (v6)
    {
      id v7 = v6;
      Class isa = sub_1005350C0().super.isa;
      [v7 setFilters:isa];

      Class v5 = isa;
    }
  }
}

void (*CoreAnimationPackageView.foregroundColor.modify(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_foregroundColor;
  v3[3] = v1;
  id v3[4] = v4;
  swift_beginAccess();
  return sub_1003BE4F4;
}

void sub_1003BE4F4(void **a1, char a2)
{
  id v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    if (*(void *)(v4 + v3[4]))
    {
      sub_1003BEF14();
    }
    else
    {
      Class v5 = *(void **)(v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer);
      if (v5)
      {
        id v6 = v5;
        Class isa = sub_1005350C0().super.isa;
        [v6 setFilters:isa];
      }
    }
  }

  free(v3);
}

Swift::Void __swiftcall CoreAnimationPackageView.reset()()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_definition;
  swift_beginAccess();
  uint64_t v2 = *(void **)(v1 + 72);
  if (v2[2])
  {
    uint64_t v4 = v2[4];
    uint64_t v3 = v2[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  Class v5 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateName);
  swift_beginAccess();
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  *Class v5 = v4;
  v5[1] = v3;
  sub_1003BDFD8(v6, v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v1 + 72);
  uint64_t v9 = *(void *)(v8 + 16);
  sub_1005367B0();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v10 = (void *)swift_dynamicCastClass();
  if (!v10)
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v11 = v10[2];
  swift_release();
  if (v11 == v9 - (v9 != 0))
  {
    NSString v12 = (void *)swift_dynamicCastClass();
    if (!v12)
    {
      swift_bridgeObjectRelease();
      NSString v12 = _swiftEmptyArrayStorage;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1003BF34C(v8, v8 + 32, v9 != 0, (2 * v9) | 1);
    NSString v12 = v13;
  }
  swift_bridgeObjectRelease();
  *(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_currentStates) = v12;
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall CoreAnimationPackageView.set(stateName:forSublayer:)(Swift::String stateName, Swift::String forSublayer)
{
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer);
  if (v3)
  {
    object = forSublayer._object;
    uint64_t countAndFlagsBits = forSublayer._countAndFlagsBits;
    id v6 = [v3 sublayers];
    if (v6)
    {
      uint64_t v7 = v6;
      sub_100123DA4(0, &qword_100671450);
      unint64_t v8 = sub_1005350E0();

      swift_bridgeObjectRetain();
      id v17 = sub_1003BF770(v8, countAndFlagsBits, (uint64_t)object);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v17)
      {
        NSString v9 = sub_100534CA0();
        id v10 = [v17 stateWithName:v9];

        if (v10)
        {
          uint64_t v11 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateController);
          if (v11)
          {
            NSString v12 = self;
            id v13 = v11;
            id v14 = v10;
            id v10 = v17;
            unsigned int v15 = [v12 areAnimationsEnabled];
            double v16 = 0.0;
            if (v15) {
              *(float *)&double v16 = 1.0;
            }
            [v13 setState:v14 ofLayer:v10 transitionSpeed:v16];
          }
        }
      }
    }
  }
}

Swift::Void __swiftcall CoreAnimationPackageView.advanceState()()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_currentStates);
  uint64_t v3 = *v2;
  if (*(void *)(*v2 + 16)
    || (uint64_t v4 = v1 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_definition,
        swift_beginAccess(),
        *uint64_t v2 = *(void *)(v4 + 72),
        swift_bridgeObjectRetain(),
        swift_bridgeObjectRelease(),
        uint64_t v3 = *v2,
        *(void *)(*v2 + 16)))
  {
    uint64_t v6 = *(void *)(v3 + 32);
    uint64_t v5 = *(void *)(v3 + 40);
    swift_bridgeObjectRetain();
    sub_1003BF904(0, 1);
    uint64_t v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateName);
    swift_beginAccess();
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    *uint64_t v7 = v6;
    v7[1] = v5;
    sub_1003BDFD8(v8, v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall CoreAnimationPackageView.startCyclingThroughStates(with:)(Swift::Double with)
{
  uint64_t v3 = OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateAnimationTimer;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateAnimationTimer);
  if (!v4 || ([v4 timeInterval], v5 != with))
  {
    uint64_t v6 = self;
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    void v12[4] = sub_1003BFA54;
    v12[5] = v7;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    void v12[2] = sub_100199084;
    unint64_t v12[3] = &unk_100632BC8;
    uint64_t v8 = _Block_copy(v12);
    swift_release();
    id v9 = [v6 scheduledTimerWithTimeInterval:1 repeats:v8 block:with];
    _Block_release(v8);
    id v10 = *(void **)(v1 + v3);
    *(void *)(v1 + v3) = v9;
    id v11 = v9;
    [v10 invalidate];
  }
}

void sub_1003BEB30()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    CoreAnimationPackageView.advanceState()();
  }
}

Swift::Void __swiftcall CoreAnimationPackageView.stopCyclingThroughStates()()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateAnimationTimer;
  if (*(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateAnimationTimer))
  {
    CoreAnimationPackageView.reset()();
    uint64_t v2 = *(void **)(v0 + v1);
    id v3 = v2;
    *(void *)(v0 + v1) = 0;
    [v2 invalidate];
  }
}

Swift::Void __swiftcall CoreAnimationPackageView.layoutSubviews()()
{
  v36.receiver = v0;
  v36.super_class = (Class)type metadata accessor for CoreAnimationPackageView();
  [super layoutSubviews];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer];
  if (v1)
  {
    id v2 = v1;
    id v3 = [v0 layer];
    [v3 bounds];
    CGFloat v5 = v4;
    CGFloat v7 = v6;
    CGFloat v9 = v8;
    CGFloat v11 = v10;

    [v2 bounds];
    CGFloat v29 = v12;
    CGFloat v14 = v13;
    CGFloat v16 = v15;
    CGFloat v18 = v17;
    v37.origin.CGFloat x = v5;
    v37.origin.CGFloat y = v7;
    v37.size.CGFloat width = v9;
    v37.size.CGFloat height = v11;
    double Width = CGRectGetWidth(v37);
    v38.origin.CGFloat x = v5;
    v38.origin.CGFloat y = v7;
    v38.size.CGFloat width = v9;
    CGFloat rect = v11;
    v38.size.CGFloat height = v11;
    double v20 = Width / CGRectGetHeight(v38);
    v39.origin.CGFloat x = v29;
    v39.origin.CGFloat y = v14;
    v39.size.CGFloat width = v16;
    v39.size.CGFloat height = v18;
    double v21 = CGRectGetWidth(v39);
    v40.origin.CGFloat x = v29;
    v40.origin.CGFloat y = v14;
    v40.size.CGFloat width = v16;
    v40.size.CGFloat height = v18;
    if (v20 >= v21 / CGRectGetHeight(v40))
    {
      v43.origin.CGFloat x = v5;
      v43.origin.CGFloat y = v7;
      v43.size.CGFloat width = v9;
      v43.size.CGFloat height = rect;
      double Height = CGRectGetHeight(v43);
      v44.origin.CGFloat x = v29;
      v44.origin.CGFloat y = v14;
      v44.size.CGFloat width = v16;
      v44.size.CGFloat height = v18;
      double v23 = CGRectGetHeight(v44);
    }
    else
    {
      v41.origin.CGFloat x = v5;
      v41.origin.CGFloat y = v7;
      v41.size.CGFloat width = v9;
      v41.size.CGFloat height = rect;
      double Height = CGRectGetWidth(v41);
      v42.origin.CGFloat x = v29;
      v42.origin.CGFloat y = v14;
      v42.size.CGFloat width = v16;
      v42.size.CGFloat height = v18;
      double v23 = CGRectGetWidth(v42);
    }
    CGAffineTransformMakeScale((CGAffineTransform *)&t1, Height / v23, Height / v23);
    long long v31 = *(_OWORD *)&t1.m13;
    long long v32 = *(_OWORD *)&t1.m11;
    CGFloat m21 = t1.m21;
    CGFloat m22 = t1.m22;
    uint64_t v26 = &v0[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_definition];
    swift_beginAccess();
    *(_OWORD *)&t1.m11 = v32;
    *(_OWORD *)&t1.m13 = v31;
    t1.CGFloat m21 = m21;
    t1.CGFloat m22 = m22;
    long long v27 = *(_OWORD *)(v26 + 40);
    *(_OWORD *)&t2.a = *(_OWORD *)(v26 + 24);
    *(_OWORD *)&t2.c = v27;
    *(_OWORD *)&t2.tCGFloat x = *(_OWORD *)(v26 + 56);
    CGAffineTransformConcat(&v34, (CGAffineTransform *)&t1, &t2);
    CGAffineTransform t2 = v34;
    CATransform3DMakeAffineTransform(&t1, &t2);
    [v2 setTransform:&t1];
    id v28 = [v0 layer];
    [v28 bounds];

    sub_100535BD0();
    [v2 setPosition:];
  }
}

id sub_1003BEF14()
{
  uint64_t v1 = self;
  [v1 begin];
  [v1 setDisableActions:1];
  id v2 = (void **)&v0[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_foregroundColor];
  swift_beginAccess();
  id v3 = *v2;
  if (*v2)
  {
    sub_100534CE0();
    id v4 = objc_allocWithZone((Class)CAFilter);
    Class v5 = v3;
    NSString v6 = sub_100534CA0();
    swift_bridgeObjectRelease();
    id v7 = [v4 initWithType:v6];

    Class isa = sub_100535520().super.super.isa;
    [v7 setValue:isa forKey:kCAFilterInputBias];

    Class v9 = sub_100535520().super.super.isa;
    [v7 setValue:v9 forKey:kCAFilterInputAmount];

    id v10 = [v0 traitCollection];
    id v11 = [(objc_class *)v5 resolvedColorWithTraitCollection:v10];

    id v12 = [v11 CGColor];
    [v7 setValue:v12 forKey:kCAFilterInputColor];

    double v13 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer];
    if (v13)
    {
      sub_10000BB04(&qword_100671490);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_10053A3B0;
      *(void *)(v14 + 56) = sub_100123DA4(0, (unint64_t *)&qword_100671498);
      *(void *)(v14 + 32) = v7;
      id v15 = v13;
      id v16 = v7;
      Class v17 = sub_1005350C0().super.isa;
      swift_bridgeObjectRelease();
      [v15 setFilters:v17];
    }
    goto LABEL_6;
  }
  CGFloat v18 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer];
  if (v18)
  {
    id v7 = v18;
    Class v5 = sub_1005350C0().super.isa;
    [v7 setFilters:v5];
LABEL_6:
  }
  return [v1 commit];
}

void CoreAnimationPackageView.init(frame:)()
{
}

id CoreAnimationPackageView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoreAnimationPackageView();
  return [super dealloc];
}

void sub_1003BF34C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_11:
    __break(1u);
    return;
  }
  if (v5)
  {
    if (v5 <= 0)
    {
      if (v4 != a3)
      {
LABEL_7:
        swift_arrayInitWithCopy();
        return;
      }
    }
    else
    {
      sub_10000BB04(&qword_100677840);
      id v7 = (void *)swift_allocObject();
      int64_t v8 = j__malloc_size(v7);
      uint64_t v9 = v8 - 32;
      if (v8 < 32) {
        uint64_t v9 = v8 - 17;
      }
      _OWORD v7[2] = v5;
      _OWORD v7[3] = 2 * (v9 >> 4);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
    goto LABEL_11;
  }
}

void sub_1003BF41C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_14;
  }
  if (v5)
  {
    if (v5 <= 0)
    {
      if (v4 != a3) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_10000BB04(&qword_100671488);
      uint64_t v7 = *(void *)(type metadata accessor for PlaylistCurators.Curator(0) - 8);
      uint64_t v8 = *(void *)(v7 + 72);
      unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      id v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      if (!v8)
      {
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
        return;
      }
      if (v11 - v9 == 0x8000000000000000 && v8 == -1) {
        goto LABEL_16;
      }
      v10[2] = v5;
      v10[3] = 2 * ((uint64_t)(v11 - v9) / v8);
      if (v4 != a3)
      {
LABEL_10:
        type metadata accessor for PlaylistCurators.Curator(0);
        swift_arrayInitWithCopy();
        return;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
}

void *sub_1003BF5B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10000BB04(&qword_100671480);
  uint64_t v3 = swift_allocObject();
  size_t v4 = j__malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * v4 - 64;
  uint64_t v5 = sub_100395440(&v7, (unsigned char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_100206FC4();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (void *)v3;
}

id sub_1003BF68C()
{
  return sub_1003BEF14();
}

void sub_1003BF6B0()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateName];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_foregroundColor] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateAnimationTimer] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_currentStates] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_package] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateController] = 0;

  sub_1005363F0();
  __break(1u);
}

void *sub_1003BF770(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_100536470())
  {
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (a1 & 0xC000000000000001) != 0 ? (id)sub_100536210() : *(id *)(a1 + 8 * v6);
      uint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      id v10 = [v7 name];
      if (v10)
      {
        size_t v11 = v10;
        uint64_t v12 = sub_100534CE0();
        uint64_t v14 = v13;

        if (v12 == a2 && v14 == a3)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v8;
        }
        char v16 = sub_100536780();
        swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_18;
        }
      }

      ++v6;
      if (v9 == v5) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_21:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1003BF904(uint64_t result, int64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  size_t v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = result;
  int64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *((void *)v4 + 3) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    size_t v4 = sub_1003D774C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_19;
  }
  uint64_t v12 = *((void *)v4 + 2);
  BOOL v13 = __OFSUB__(v12, a2);
  uint64_t v14 = v12 - a2;
  if (v13) {
    goto LABEL_25;
  }
  id v15 = &v4[16 * a2 + 32];
  if (v6 != a2 || &v4[16 * v6 + 32] >= &v15[16 * v14]) {
    uint64_t result = (uint64_t)memmove(&v4[16 * v6 + 32], v15, 16 * v14);
  }
  uint64_t v16 = *((void *)v4 + 2);
  BOOL v13 = __OFADD__(v16, v8);
  uint64_t v17 = v16 - v7;
  if (!v13)
  {
    *((void *)v4 + 2) = v17;
LABEL_19:
    *objc_super v2 = v4;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1003BFA1C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1003BFA54()
{
}

uint64_t sub_1003BFA5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003BFA6C()
{
  return swift_release();
}

uint64_t sub_1003BFA74(uint64_t a1, uint64_t a2)
{
  return sub_1003BFD54(a1, a2, (unint64_t *)&qword_100672C20);
}

uint64_t sub_1003BFA88(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!((unint64_t)*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_100536470();
  swift_bridgeObjectRelease();
  if (v20 < v2) {
    goto LABEL_28;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_100536470();
    swift_bridgeObjectRelease();
    uint64_t v8 = v21 + v5;
    if (!__OFADD__(v21, v5)) {
      goto LABEL_8;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if ((unint64_t)*v3 >> 62) {
    goto LABEL_31;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_33;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v9 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      *uint64_t v3 = sub_100536220();
      swift_bridgeObjectRelease();
      uint64_t v11 = *v3 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_34:
    swift_bridgeObjectRetain();
    sub_100536470();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v12 = v11 + 32;
  BOOL v13 = (char *)(v11 + 32 + 8 * v4);
  type metadata accessor for SyncedLyricsLineView();
  uint64_t result = swift_arrayDestroy();
  if (v5)
  {
    if ((unint64_t)*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_100536470();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v16 = v22 - v2;
      if (!__OFSUB__(v22, v2)) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v16 = v15 - v2;
      if (!__OFSUB__(v15, v2))
      {
LABEL_17:
        uint64_t v17 = (char *)(v12 + 8 * v2);
        if (v4 != v2 || v13 >= &v17[8 * v16]) {
          uint64_t result = (uint64_t)memmove(v13, v17, 8 * v16);
        }
        if (!((unint64_t)*v3 >> 62))
        {
          uint64_t v18 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v19 = v18 + v5;
          if (!__OFADD__(v18, v5))
          {
LABEL_22:
            *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
            goto LABEL_23;
          }
LABEL_40:
          __break(1u);
          return result;
        }
LABEL_38:
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_100536470();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v19 = v23 + v5;
        if (!__OFADD__(v23, v5)) {
          goto LABEL_22;
        }
        goto LABEL_40;
      }
    }
    __break(1u);
    goto LABEL_38;
  }
LABEL_23:

  return sub_100535100();
}

uint64_t sub_1003BFD40(uint64_t a1, uint64_t a2)
{
  return sub_1003BFD54(a1, a2, (unint64_t *)&qword_100675380);
}

uint64_t sub_1003BFD54(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v3 = a2;
    uint64_t v5 = a1;
    uint64_t v7 = *v4;
    if (!((unint64_t)*v4 >> 62))
    {
      if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_100536470();
  swift_bridgeObjectRelease();
  if (v22 < v3) {
    goto LABEL_28;
  }
LABEL_4:
  uint64_t v7 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v8 = (unint64_t *)(v5 - v3);
  if (__OFSUB__(0, v7))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_100536470();
    swift_bridgeObjectRelease();
    id v10 = (char *)v8 + v23;
    if (!__OFADD__(v23, v8)) {
      goto LABEL_8;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if ((unint64_t)*v4 >> 62) {
    goto LABEL_31;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v10 = (char *)(v9 - v7);
  if (__OFADD__(v9, v8)) {
    goto LABEL_33;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v11;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v11 & 0x8000000000000000) != 0
    || (v11 & 0x4000000000000000) != 0
    || (uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8, (uint64_t)v10 > *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    uint64_t v7 = (uint64_t)v8;
    uint64_t v8 = v6;
    if (!(v11 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      *uint64_t v4 = sub_100536220();
      swift_bridgeObjectRelease();
      uint64_t v13 = *v4 & 0xFFFFFFFFFFFFFF8;
      uint64_t v6 = v8;
      uint64_t v8 = (unint64_t *)v7;
      goto LABEL_14;
    }
LABEL_34:
    swift_bridgeObjectRetain();
    sub_100536470();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v14 = v13 + 32;
  uint64_t v15 = (char *)(v13 + 32 + 8 * v5);
  sub_100123DA4(0, v6);
  uint64_t result = swift_arrayDestroy();
  if (v8)
  {
    if ((unint64_t)*v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_100536470();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v18 = v24 - v3;
      if (!__OFSUB__(v24, v3)) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v17 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v18 = v17 - v3;
      if (!__OFSUB__(v17, v3))
      {
LABEL_17:
        uint64_t v19 = (char *)(v14 + 8 * v3);
        if (v5 != v3 || v15 >= &v19[8 * v18]) {
          uint64_t result = (uint64_t)memmove(v15, v19, 8 * v18);
        }
        if (!((unint64_t)*v4 >> 62))
        {
          uint64_t v20 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v21 = (char *)v8 + v20;
          if (!__OFADD__(v20, v8))
          {
LABEL_22:
            *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v21;
            goto LABEL_23;
          }
LABEL_40:
          __break(1u);
          return result;
        }
LABEL_38:
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_100536470();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v21 = (char *)v8 + v25;
        if (!__OFADD__(v25, v8)) {
          goto LABEL_22;
        }
        goto LABEL_40;
      }
    }
    __break(1u);
    goto LABEL_38;
  }
LABEL_23:

  return sub_100535100();
}

unint64_t sub_1003C0044()
{
  unint64_t result = qword_1006714B0;
  if (!qword_1006714B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006714B0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CoreAnimationPackageView.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1003C0138);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreAnimationPackageView.Error()
{
  return &type metadata for CoreAnimationPackageView.Error;
}

unint64_t sub_1003C0174()
{
  unint64_t result = qword_1006714B8;
  if (!qword_1006714B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006714B8);
  }
  return result;
}

id sub_1003C01C8()
{
  if (qword_100670320 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_10067B320;
  static NSBundle.musicCoreUIBundle = qword_10067B320;

  return v0;
}

uint64_t *NSBundle.musicCoreUIBundle.unsafeMutableAddressor()
{
  if (qword_1006703C8 != -1) {
    swift_once();
  }
  return &static NSBundle.musicCoreUIBundle;
}

id static NSBundle.musicCoreUIBundle.getter()
{
  if (qword_1006703C8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static NSBundle.musicCoreUIBundle;

  return v0;
}

void MusicLibrary.ActionableState.updateSymbolConfiguration(from:traitCollection:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int16 a4)
{
  sub_10000BB04(&qword_100678A80);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006707E8 != -1) {
    swift_once();
  }
  unsigned int v9 = a4;
  long long v10 = static SymbolButton.Configuration.platterMinimumSize;
  unint64_t v11 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  *(_OWORD *)(a1 + v11[13]) = v10;
  sub_100535CD0();
  uint64_t v12 = sub_100535CE0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_1003C0640((uint64_t)v8, a1 + v11[9]);
  uint64_t v13 = a1 + v11[10];
  if (*(void *)v13)
  {
    long long v14 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
    *(_OWORD *)(v13 + 8) = *(_OWORD *)&UIEdgeInsetsZero.top;
    *(_OWORD *)(v13 + 24) = v14;
  }

  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 56) = 2;
  objc_storeStrong((id *)(a1 + 24), UIFontTextStyleSubheadline);
  *(void *)(a1 + 48) = 6;
  switch(v9 >> 8)
  {
    case 2u:
      swift_bridgeObjectRelease();
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      goto LABEL_16;
    case 3u:
      swift_bridgeObjectRelease();
      *(_OWORD *)a1 = xmmword_10054DD30;
      *(void *)(a1 + 48) = 7;
      goto LABEL_16;
    case 4u:
      swift_bridgeObjectRelease();
      long long v19 = xmmword_10054DD20;
      goto LABEL_15;
    case 5u:
      swift_bridgeObjectRelease();
      long long v19 = xmmword_10054DD10;
      goto LABEL_15;
    default:
      if ((v9 & 0x100) != 0)
      {
        swift_bridgeObjectRelease();
        long long v19 = xmmword_10054DD40;
LABEL_15:
        *(_OWORD *)a1 = v19;
LABEL_16:
        sub_1003C06A8(*(void **)v13, *(void *)(v13 + 8), *(void *)(v13 + 16), *(void *)(v13 + 24), *(void *)(v13 + 32), *(void *)(v13 + 40), *(void **)(v13 + 48));
        *(void *)(v13 + 48) = 0;
        *(_OWORD *)(v13 + 16) = 0u;
        *(_OWORD *)(v13 + 32) = 0u;
        *(_OWORD *)uint64_t v13 = 0u;
      }
      else
      {
        uint64_t v15 = *(void **)v13;
        if (*(void *)v13
          && (type metadata accessor for CircularProgressView(), (uint64_t v16 = swift_dynamicCastClass()) != 0))
        {
          uint64_t v17 = (char *)v16;
          id v18 = v15;
        }
        else
        {
          id v20 = objc_allocWithZone((Class)type metadata accessor for CircularProgressView());
          uint64_t v17 = CircularProgressView.init(size:)(0.0, 0.0);
        }
        CircularProgressView.setState(_:animated:)(a3, v9 & 1, 1);
        sub_1003C06E8(*(void *)(a1 + 192), *(void **)(a1 + 200));
        *(_OWORD *)(a1 + 192) = xmmword_10053DED0;
        *(void *)(a1 + 208) = 0;
        *(void *)(a1 + 216) = 0;
        swift_bridgeObjectRelease();
        *(_OWORD *)a1 = xmmword_10054DD50;
        *(void *)(a1 + 56) = 1;
        uint64_t v21 = UIFontTextStyleFootnote;

        *(void *)(a1 + 24) = v21;
        long long v24 = *(_OWORD *)&UIEdgeInsetsZero.top;
        CGFloat bottom = UIEdgeInsetsZero.bottom;
        CGFloat right = UIEdgeInsetsZero.right;
        sub_1003C06A8(*(void **)v13, *(void *)(v13 + 8), *(void *)(v13 + 16), *(void *)(v13 + 24), *(void *)(v13 + 32), *(void *)(v13 + 40), *(void **)(v13 + 48));
        *(void *)uint64_t v13 = v17;
        *(_OWORD *)(v13 + 8) = v24;
        *(CGFloat *)(v13 + 24) = bottom;
        *(CGFloat *)(v13 + 32) = right;
        *(_OWORD *)(v13 + 40) = xmmword_10054DC60;
      }
      return;
  }
}

uint64_t sub_1003C0640(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000BB04(&qword_100678A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1003C06A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  if (a1)
  {
  }
}

uint64_t sub_1003C06E8(uint64_t a1, void *a2)
{
  if (a2 != (void *)1)
  {

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1003C072C()
{
  uint64_t v0 = sub_100530920();
  sub_10000ED18(v0, qword_10067B560);
  sub_10000EA90(v0, (uint64_t)qword_10067B560);
  sub_1003C07A8();
  OS_os_log.init(musicCategory:)();
  return sub_100530930();
}

unint64_t sub_1003C07A8()
{
  unint64_t result = qword_1006714C0;
  if (!qword_1006714C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1006714C0);
  }
  return result;
}

uint64_t ArtworkImageViewModelAttributeProviding.cropStyle.getter@<X0>(uint64_t a1@<X8>)
{
  sub_100534220();
  uint64_t v2 = sub_1005342A0();
  int v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 0, 1, v2);
}

uint64_t sub_1003C0858@<X0>(void (*a1)(uint64_t)@<X0>, void (*a2)(uint64_t)@<X1>, char *a3@<X8>)
{
  sub_10000BB04(&qword_1006714C8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000BB04((uint64_t *)&unk_100676E50);
  __chkstk_darwin();
  unsigned int v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100534330();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin();
  uint64_t v16 = (char *)&v23 - v15;
  a1(v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_100013C44((uint64_t)v9, (uint64_t *)&unk_100676E50);
    uint64_t v17 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a3, 1, 1, v17);
  }
  else
  {
    long long v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v19(v16, v9, v10);
    uint64_t v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
    a2(v20);
    uint64_t v21 = sub_1005342A0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v7, 0, 1, v21);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    v19(a3, v13, v10);
    uint64_t v22 = type metadata accessor for ArtworkImage.ViewModel(0);
    sub_1003C11FC((uint64_t)v7, (uint64_t)&a3[*(int *)(v22 + 20)]);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a3, 0, 1, v22);
  }
}

uint64_t sub_1003C0B58@<X0>(char *a1@<X8>)
{
  return sub_1003C0858((void (*)(uint64_t))&UploadedVideo.artwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.boundedBox.getter, a1);
}

uint64_t sub_1003C0B84@<X0>(unsigned char *a1@<X8>)
{
  sub_10000BB04(&qword_1006714C8);
  __chkstk_darwin();
  int v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000BB04((uint64_t *)&unk_100676E50);
  __chkstk_darwin();
  uint64_t v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100534330();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  unsigned int v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v11 = &v17[-v10];
  sub_10000BB04(&qword_100671500);
  swift_allocObject();
  sub_1005335E0();
  sub_1005341B0();
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100013C44((uint64_t)v5, (uint64_t *)&unk_100676E50);
    uint64_t v12 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
  else
  {
    uint64_t v14 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 32);
    v14(v11, v5, v6);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 16))(v9, v11, v6);
    sub_100534220();
    uint64_t v15 = sub_1005342A0();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v3, 0, 1, v15);
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v11, v6);
    v14(a1, v9, v6);
    uint64_t v16 = type metadata accessor for ArtworkImage.ViewModel(0);
    sub_1003C11FC((uint64_t)v3, (uint64_t)&a1[*(int *)(v16 + 20)]);
    return (*(uint64_t (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a1, 0, 1, v16);
  }
}

uint64_t ArtworkImageViewModelAttributeProviding.artworkViewModel.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  sub_10000BB04(&qword_1006714C8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000BB04((uint64_t *)&unk_100676E50);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100534330();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v22 - v15;
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(a2 + 16);
  uint64_t v23 = v3;
  v17(a1, a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_100013C44((uint64_t)v10, (uint64_t *)&unk_100676E50);
    uint64_t v18 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a3, 1, 1, v18);
  }
  else
  {
    uint64_t v22 = a1;
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v20(v16, v10, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v16, v11);
    (*(void (**)(uint64_t, uint64_t))(a2 + 24))(v22, a2);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
    v20(a3, v14, v11);
    uint64_t v21 = type metadata accessor for ArtworkImage.ViewModel(0);
    sub_1003C11FC((uint64_t)v8, (uint64_t)&a3[*(int *)(v21 + 20)]);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a3, 0, 1, v21);
  }
}

uint64_t sub_1003C11FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000BB04(&qword_1006714C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003C1268@<X0>(uint64_t a1@<X8>)
{
  return sub_1003C3164((void (*)(void))&static Artwork.CropStyle.boundedBox.getter, a1);
}

uint64_t sub_1003C1280@<X0>(char *a1@<X8>)
{
  return sub_1003C0858((void (*)(uint64_t))&Album.artwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.boundedBox.getter, a1);
}

uint64_t sub_1003C12C0()
{
  sub_10000BB04(&qword_100671500);
  swift_allocObject();
  sub_1005335E0();
  sub_1005341B0();

  return swift_release();
}

uint64_t sub_1003C13CC@<X0>(char *a1@<X8>)
{
  return sub_1003C0858((void (*)(uint64_t))&Curator.artwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.boundedBox.getter, a1);
}

uint64_t sub_1003C1410@<X0>(char *a1@<X8>)
{
  return sub_1003C0858((void (*)(uint64_t))&EditorialItem.artwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.boundedBox.getter, a1);
}

uint64_t sub_1003C1454@<X0>(char *a1@<X8>)
{
  return sub_1003C0858((void (*)(uint64_t))&Genre.artwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.boundedBox.getter, a1);
}

uint64_t sub_1003C1498@<X0>(char *a1@<X8>)
{
  return sub_1003C0858((void (*)(uint64_t))&MusicVideo.artwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.boundedBox.getter, a1);
}

uint64_t sub_1003C14D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100534330();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000BB04((uint64_t *)&unk_100676E50);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v15 - v8;
  sub_100534700();
  sub_100013720((uint64_t)v9, (uint64_t)v7, (uint64_t *)&unk_100676E50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v7, 1, v2) == 1)
  {
    uint64_t v10 = type metadata accessor for ArtworkImage.ViewModel(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v7, v2);
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(a1, v5, v2);
    uint64_t v11 = type metadata accessor for ArtworkImage.ViewModel(0);
    uint64_t v12 = a1 + *(int *)(v11 + 20);
    sub_100534210();
    uint64_t v13 = sub_1005342A0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 0, 1, v13);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 0, 1, v11);
  }
  return sub_100013C44((uint64_t)v9, (uint64_t *)&unk_100676E50);
}

uint64_t Playlist.artworkViewModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v71 = a1;
  sub_10000BB04(&qword_1006714C8);
  __chkstk_darwin();
  id v62 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100534330();
  uint64_t v67 = *(void *)(v3 - 8);
  uint64_t v68 = v3;
  __chkstk_darwin();
  uint64_t v61 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v66 = (char *)&v60 - v5;
  sub_10000BB04((uint64_t *)&unk_100676E50);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v65 = (char *)&v60 - v8;
  __chkstk_darwin();
  uint64_t v10 = (char *)&v60 - v9;
  __chkstk_darwin();
  uint64_t v12 = (char *)&v60 - v11;
  uint64_t v13 = sub_100534720();
  uint64_t v69 = *(void *)(v13 - 8);
  uint64_t v70 = v13;
  __chkstk_darwin();
  int v64 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v60 - v15;
  sub_10000BB04((uint64_t *)&unk_100670930);
  __chkstk_darwin();
  uint64_t v63 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v19 = (char *)&v60 - v18;
  sub_10000BB04(&qword_100671258);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v23 = (char *)&v60 - v22;
  sub_1005345B0();
  uint64_t v24 = sub_100534590();
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1) {
    goto LABEL_2;
  }
  sub_100013720((uint64_t)v23, (uint64_t)v21, &qword_100671258);
  int v27 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v21, v24);
  if (v27 != enum case for Playlist.Variant.regular(_:) && v27 != enum case for Playlist.Variant.smart(_:))
  {
    if (v27 == enum case for Playlist.Variant.genius(_:)) {
      goto LABEL_2;
    }
    if (v27 == enum case for Playlist.Variant.favoriteSongs(_:)) {
      goto LABEL_7;
    }
    if (v27 == enum case for Playlist.Variant.folder(_:)) {
      goto LABEL_14;
    }
    if (v27 != enum case for Playlist.Variant.subscribed(_:))
    {
      if (v27 != enum case for Playlist.Variant.admin(_:))
      {
        if (v27 == enum case for Playlist.Variant.personalMix(_:))
        {
          uint64_t v46 = (uint64_t)v65;
          sub_100534520();
          sub_100013720(v46, (uint64_t)v7, (uint64_t *)&unk_100676E50);
          uint64_t v48 = v67;
          uint64_t v47 = v68;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v7, 1, v68) == 1)
          {
            uint64_t v49 = type metadata accessor for ArtworkImage.ViewModel(0);
            uint64_t v50 = (uint64_t)v63;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v63, 1, 1, v49);
          }
          else
          {
            uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
            id v51 = v66;
            v60(v66, v7, v47);
            id v52 = v61;
            (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v51, v47);
            uint64_t v53 = (uint64_t)v62;
            sub_100534290();
            uint64_t v54 = sub_1005342A0();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v53, 0, 1, v54);
            uint64_t v50 = (uint64_t)v63;
            v60(v63, v52, v47);
            uint64_t v49 = type metadata accessor for ArtworkImage.ViewModel(0);
            sub_1003C11FC(v53, v50 + *(int *)(v49 + 20));
            (*(void (**)(char *, uint64_t))(v48 + 8))(v51, v47);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v50, 0, 1, v49);
          }
          uint64_t v56 = v70;
          uint64_t v55 = v71;
          uint64_t v57 = v69;
          uint64_t v58 = v64;
          sub_100013C44(v46, (uint64_t *)&unk_100676E50);
          (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v58, v1, v56);
          type metadata accessor for ArtworkImage.ViewModel(0);
          uint64_t v59 = *(void *)(v49 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v50, 1, v49) == 1)
          {
            sub_1003C14D8(v55);
            (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v56);
            sub_100013C44(v50, (uint64_t *)&unk_100670930);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v56);
            sub_1003C2180(v50, v55);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v55, 0, 1, v49);
          }
          goto LABEL_15;
        }
        (*(void (**)(char *, uint64_t))(v25 + 8))(v21, v24);
LABEL_14:
        uint64_t v45 = type metadata accessor for ArtworkImage.ViewModel(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v71, 1, 1, v45);
LABEL_15:
        CGRect v42 = &qword_100671258;
        uint64_t v43 = (uint64_t)v23;
        return sub_100013C44(v43, v42);
      }
LABEL_2:
      sub_100013C44((uint64_t)v23, &qword_100671258);
      return sub_1003C14D8(v71);
    }
  }
LABEL_7:
  sub_100013C44((uint64_t)v23, &qword_100671258);
  sub_1003C14D8((uint64_t)v19);
  uint64_t v28 = v69;
  uint64_t v29 = v1;
  uint64_t v30 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v16, v29, v70);
  uint64_t v31 = type metadata accessor for ArtworkImage.ViewModel(0);
  uint64_t v32 = *(void *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v19, 1, v31) == 1)
  {
    sub_100534570();
    sub_100013720((uint64_t)v12, (uint64_t)v10, (uint64_t *)&unk_100676E50);
    uint64_t v34 = v67;
    uint64_t v33 = v68;
    uint64_t v35 = 1;
    BOOL v36 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v10, 1, v68) == 1;
    uint64_t v37 = v71;
    if (!v36)
    {
      CGRect v38 = v66;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v66, v10, v33);
      CGRect v39 = v38;
      (*(void (**)(uint64_t, char *, uint64_t))(v34 + 16))(v71, v38, v33);
      uint64_t v40 = v71 + *(int *)(v31 + 20);
      sub_100534220();
      uint64_t v41 = sub_1005342A0();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 0, 1, v41);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v39, v33);
      uint64_t v37 = v71;
      uint64_t v35 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v37, v35, 1, v31);
    sub_100013C44((uint64_t)v12, (uint64_t *)&unk_100676E50);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v70);
    CGRect v42 = (uint64_t *)&unk_100670930;
    uint64_t v43 = (uint64_t)v19;
    return sub_100013C44(v43, v42);
  }
  (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v30);
  uint64_t v44 = v71;
  sub_1003C2180((uint64_t)v19, v71);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v44, 0, 1, v31);
}

uint64_t sub_1003C2180(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003C21F0@<X0>(char *a1@<X8>)
{
  return sub_1003C0858((void (*)(uint64_t))&Song.artwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.boundedBox.getter, a1);
}

uint64_t sub_1003C2234@<X0>(char *a1@<X8>)
{
  return sub_1003C0858((void (*)(uint64_t))&Playlist.Entry.InternalItem.artwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.boundedBox.getter, a1);
}

uint64_t sub_1003C2278@<X0>(char *a1@<X8>)
{
  return sub_1003C0858((void (*)(uint64_t))&RadioShow.artwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.boundedBox.getter, a1);
}

uint64_t RecentlyAddedMusicItem.artworkViewModel.getter@<X0>(char *a1@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v1 = sub_100530480();
  uint64_t v34 = *(void *)(v1 - 8);
  uint64_t v35 = v1;
  __chkstk_darwin();
  uint64_t v33 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1005339C0();
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  __chkstk_darwin();
  uint64_t v41 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100530560();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  __chkstk_darwin();
  BOOL v36 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100534720();
  uint64_t v39 = *(void *)(v7 - 8);
  uint64_t v40 = v7;
  __chkstk_darwin();
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005302D0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100534080();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10052FF70();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v44, v18);
  int v22 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v21, v18);
  if (v22 == enum case for RecentlyAddedMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v19 + 96))(v21, v18);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v21, v14);
    sub_1003C0858((void (*)(uint64_t))&Album.artwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.boundedBox.getter, v45);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  uint64_t v24 = v45;
  if (v22 == enum case for RecentlyAddedMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v19 + 96))(v21, v18);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v21, v10);
    sub_1003C0858((void (*)(uint64_t))&MusicMovie.artwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.boundedBox.getter, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  if (v22 == enum case for RecentlyAddedMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v19 + 96))(v21, v18);
    uint64_t v26 = v41;
    uint64_t v25 = v42;
    uint64_t v27 = v43;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v41, v21, v43);
    uint64_t v28 = &MusicVideo.artwork.getter;
  }
  else
  {
    if (v22 == enum case for RecentlyAddedMusicItem.playlist(_:))
    {
      (*(void (**)(char *, uint64_t))(v19 + 96))(v21, v18);
      uint64_t v30 = v39;
      uint64_t v29 = v40;
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v9, v21, v40);
      Playlist.artworkViewModel.getter((uint64_t)v24);
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v9, v29);
    }
    if (v22 == enum case for RecentlyAddedMusicItem.tvSeason(_:))
    {
      (*(void (**)(char *, uint64_t))(v19 + 96))(v21, v18);
      uint64_t v26 = v36;
      uint64_t v25 = v37;
      uint64_t v27 = v38;
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v36, v21, v38);
      uint64_t v28 = &TVSeason.artwork.getter;
    }
    else
    {
      if (v22 != enum case for RecentlyAddedMusicItem.uploadedVideo(_:))
      {
        uint64_t v31 = type metadata accessor for ArtworkImage.ViewModel(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v24, 1, 1, v31);
        return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      }
      (*(void (**)(char *, uint64_t))(v19 + 96))(v21, v18);
      uint64_t v26 = v33;
      uint64_t v25 = v34;
      uint64_t v27 = v35;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v33, v21, v35);
      uint64_t v28 = &UploadedVideo.artwork.getter;
    }
  }
  sub_1003C0858((void (*)(uint64_t))v28, (void (*)(uint64_t))&static Artwork.CropStyle.boundedBox.getter, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v26, v27);
}

uint64_t sub_1003C29F0@<X0>(char *a1@<X8>)
{
  return sub_1003C0858((void (*)(uint64_t))&RecordLabel.artwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.boundedBox.getter, a1);
}

uint64_t sub_1003C2A34@<X0>(char *a1@<X8>)
{
  return sub_1003C0858((void (*)(uint64_t))&MusicMovie.artwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.boundedBox.getter, a1);
}

uint64_t sub_1003C2A7C@<X0>(uint64_t a1@<X8>)
{
  return sub_1003C3164((void (*)(void))&static Artwork.CropStyle.specificRectangle.getter, a1);
}

uint64_t sub_1003C2A94@<X0>(char *a1@<X8>)
{
  return sub_1003C0858((void (*)(uint64_t))&SocialProfile.artwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.specificRectangle.getter, a1);
}

uint64_t sub_1003C2AD8@<X0>(char *a1@<X8>)
{
  return sub_1003C0858((void (*)(uint64_t))&Station.artwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.specificRectangle.getter, a1);
}

uint64_t TVEpisode.artworkViewModel.getter@<X0>(char *a1@<X8>)
{
  uint64_t v31 = a1;
  sub_10000BB04(&qword_1006714C8);
  __chkstk_darwin();
  uint64_t v30 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000BB04((uint64_t *)&unk_100676E50);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v30 - v4;
  uint64_t v6 = sub_100534330();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v30 - v10;
  __chkstk_darwin();
  uint64_t v13 = (char *)&v30 - v12;
  sub_100530580();
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v14(v5, 1, v6) == 1)
  {
    uint64_t v15 = v9;
    uint64_t v16 = (uint64_t)v30;
    sub_100013C44((uint64_t)v5, (uint64_t *)&unk_100676E50);
    sub_1005305A0();
    int v17 = v14(v3, 1, v6);
    uint64_t v18 = v31;
    if (v17 == 1)
    {
      sub_100013C44((uint64_t)v3, (uint64_t *)&unk_100676E50);
      uint64_t v19 = type metadata accessor for ArtworkImage.ViewModel(0);
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
    }
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v28(v15, v3, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v15, v6);
    sub_100534220();
    uint64_t v29 = sub_1005342A0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v16, 0, 1, v29);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    v28(v18, v11, v6);
    uint64_t v25 = type metadata accessor for ArtworkImage.ViewModel(0);
    sub_1003C11FC(v16, (uint64_t)&v18[*(int *)(v25 + 20)]);
    uint64_t v26 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
    uint64_t v27 = v18;
  }
  else
  {
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v21(v13, v5, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v13, v6);
    uint64_t v22 = (uint64_t)v30;
    sub_100534220();
    uint64_t v23 = sub_1005342A0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 0, 1, v23);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    uint64_t v24 = v31;
    v21(v31, v11, v6);
    uint64_t v25 = type metadata accessor for ArtworkImage.ViewModel(0);
    sub_1003C11FC(v22, (uint64_t)&v24[*(int *)(v25 + 20)]);
    uint64_t v26 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
    uint64_t v27 = v24;
  }
  return v26((uint64_t)v27, 0, 1, v25);
}

uint64_t sub_1003C2FA0@<X0>(char *a1@<X8>)
{
  return sub_1003C0858((void (*)(uint64_t))&TVShow.artwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.boundedBox.getter, a1);
}

uint64_t sub_1003C2FE4@<X0>(char *a1@<X8>)
{
  return sub_1003C0858((void (*)(uint64_t))&TVSeason.artwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.boundedBox.getter, a1);
}

uint64_t sub_1003C3028@<X0>(char *a1@<X8>)
{
  return sub_1003C0858((void (*)(uint64_t))&UploadedVideo.artwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.boundedBox.getter, a1);
}

uint64_t sub_1003C306C@<X0>(char *a1@<X8>)
{
  return sub_1003C0858((void (*)(uint64_t))&UploadedAudio.artwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.boundedBox.getter, a1);
}

uint64_t _s8MusicKit7StationV0A6CoreUIE9cropStyleAA7ArtworkV0aB8InternalE04CropG0VSgvg_0@<X0>(uint64_t a1@<X8>)
{
  sub_100534260();
  uint64_t v2 = sub_1005342A0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 0, 1, v2);
}

uint64_t sub_1003C3120@<X0>(char *a1@<X8>)
{
  return sub_1003C0858((void (*)(uint64_t))&UserProfile.artwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.specificRectangle.getter, a1);
}

uint64_t sub_1003C3164@<X0>(void (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  a1();
  uint64_t v3 = sub_1005342A0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 0, 1, v3);
}

uint64_t sub_1003C31D8@<X0>(char *a1@<X8>)
{
  return sub_1003C0858((void (*)(uint64_t))&CreditArtist.artwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.boundedBox.getter, a1);
}

uint64_t Track.artworkViewModel.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005339C0();
  uint64_t v20 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100533F70();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100534150();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v2, v11);
  int v15 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v14, v11);
  if (v15 == enum case for Track.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v12 + 96))(v14, v11);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v14, v7);
    sub_1003C0858((void (*)(uint64_t))&Song.artwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.boundedBox.getter, a1);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else if (v15 == enum case for Track.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v12 + 96))(v14, v11);
    uint64_t v17 = v20;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v6, v14, v4);
    sub_1003C0858((void (*)(uint64_t))&MusicVideo.artwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.boundedBox.getter, a1);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v6, v4);
  }
  else
  {
    uint64_t v18 = type metadata accessor for ArtworkImage.ViewModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t GenericMusicItem.artworkViewModel.getter@<X0>(char *a1@<X8>)
{
  uint64_t v117 = a1;
  uint64_t v1 = sub_100530370();
  uint64_t v115 = *(void *)(v1 - 8);
  uint64_t v116 = v1;
  __chkstk_darwin();
  uint64_t v114 = (char *)&v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1005303E0();
  uint64_t v88 = *(void *)(v89 - 8);
  __chkstk_darwin();
  uint64_t v87 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100530480();
  uint64_t v67 = *(void *)(v68 - 8);
  __chkstk_darwin();
  uint64_t v66 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_100530430();
  uint64_t v70 = *(void *)(v71 - 8);
  __chkstk_darwin();
  uint64_t v69 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100530500();
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin();
  long long v72 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100530560();
  uint64_t v76 = *(void *)(v77 - 8);
  __chkstk_darwin();
  uint64_t v75 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1005305C0();
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin();
  id v78 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_100533DF0();
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin();
  int v90 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_100534750();
  uint64_t v94 = *(void *)(v95 - 8);
  __chkstk_darwin();
  uint64_t v93 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1005343B0();
  uint64_t v82 = *(void *)(v83 - 8);
  __chkstk_darwin();
  uint64_t v81 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_100533F70();
  uint64_t v85 = *(void *)(v86 - 8);
  __chkstk_darwin();
  id v84 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_100534720();
  uint64_t v97 = *(void *)(v98 - 8);
  __chkstk_darwin();
  uint64_t v96 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005339C0();
  uint64_t v100 = *(void *)(v14 - 8);
  uint64_t v101 = v14;
  __chkstk_darwin();
  uint64_t v99 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005302D0();
  uint64_t v103 = *(void *)(v16 - 8);
  uint64_t v104 = v16;
  __chkstk_darwin();
  uint64_t v102 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1005340B0();
  uint64_t v106 = *(void *)(v18 - 8);
  uint64_t v107 = v18;
  __chkstk_darwin();
  uint64_t v105 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1005303A0();
  uint64_t v109 = *(void *)(v20 - 8);
  uint64_t v110 = v20;
  __chkstk_darwin();
  uint64_t v108 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100534360();
  uint64_t v112 = *(void *)(v22 - 8);
  uint64_t v113 = v22;
  __chkstk_darwin();
  uint64_t v111 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1005341C0();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin();
  uint64_t v27 = (char *)&v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100534080();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin();
  uint64_t v31 = (char *)&v63 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10052FFA0();
  uint64_t v33 = *(void *)(v32 - 8);
  __chkstk_darwin();
  uint64_t v65 = (char *)&v63 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  BOOL v36 = (char *)&v63 - v35;
  int v64 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
  v64((char *)&v63 - v35, v118, v32);
  int v37 = (*(uint64_t (**)(char *, uint64_t))(v33 + 88))(v36, v32);
  if (v37 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v36, v32);
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v31, v36, v28);
    sub_1003C0858((void (*)(uint64_t))&Album.artwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.boundedBox.getter, v117);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  }
  uint64_t v39 = v117;
  if (v37 == enum case for GenericMusicItem.artist(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v36, v32);
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v27, v36, v24);
    sub_1003C0B84(v39);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  }
  if (v37 == enum case for GenericMusicItem.composer(_:))
  {
    uint64_t v40 = type metadata accessor for ArtworkImage.ViewModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 1, 1, v40);
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v36, v32);
  }
  if (v37 == enum case for GenericMusicItem.creditArtist(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v36, v32);
    uint64_t v41 = v114;
    uint64_t v42 = v115;
    uint64_t v43 = v116;
    (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v114, v36, v116);
    uint64_t v44 = &CreditArtist.artwork.getter;
LABEL_13:
    uint64_t v45 = (void (*)(uint64_t))v44;
    uint64_t v46 = &static Artwork.CropStyle.boundedBox.getter;
LABEL_14:
    sub_1003C0858(v45, (void (*)(uint64_t))v46, v39);
    return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v41, v43);
  }
  if (v37 == enum case for GenericMusicItem.curator(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v36, v32);
    uint64_t v41 = v111;
    uint64_t v42 = v112;
    uint64_t v43 = v113;
    (*(void (**)(char *, char *, uint64_t))(v112 + 32))(v111, v36, v113);
    uint64_t v44 = &Curator.artwork.getter;
    goto LABEL_13;
  }
  if (v37 == enum case for GenericMusicItem.editorialItem(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v36, v32);
    uint64_t v41 = v108;
    uint64_t v42 = v109;
    uint64_t v43 = v110;
    (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v108, v36, v110);
    uint64_t v44 = &EditorialItem.artwork.getter;
    goto LABEL_13;
  }
  if (v37 == enum case for GenericMusicItem.genre(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v36, v32);
    uint64_t v48 = v105;
    uint64_t v47 = v106;
    uint64_t v49 = v107;
    (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v105, v36, v107);
    uint64_t v50 = &Genre.artwork.getter;
LABEL_22:
    id v51 = (void (*)(uint64_t))v50;
    id v52 = &static Artwork.CropStyle.boundedBox.getter;
LABEL_23:
    sub_1003C0858(v51, (void (*)(uint64_t))v52, v39);
    return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v48, v49);
  }
  if (v37 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v36, v32);
    uint64_t v48 = v102;
    uint64_t v47 = v103;
    uint64_t v49 = v104;
    (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v102, v36, v104);
    uint64_t v50 = &MusicMovie.artwork.getter;
    goto LABEL_22;
  }
  if (v37 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v36, v32);
    uint64_t v48 = v99;
    uint64_t v47 = v100;
    uint64_t v49 = v101;
    (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v99, v36, v101);
    uint64_t v50 = &MusicVideo.artwork.getter;
    goto LABEL_22;
  }
  if (v37 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v36, v32);
    uint64_t v47 = v97;
    uint64_t v48 = v96;
    uint64_t v49 = v98;
    (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v96, v36, v98);
    Playlist.artworkViewModel.getter((uint64_t)v39);
    return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v48, v49);
  }
  if (v37 == enum case for GenericMusicItem.radioShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v36, v32);
    uint64_t v47 = v94;
    uint64_t v48 = v93;
    uint64_t v49 = v95;
    (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v93, v36, v95);
    uint64_t v50 = &RadioShow.artwork.getter;
    goto LABEL_22;
  }
  if (v37 == enum case for GenericMusicItem.recordLabel(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v36, v32);
    uint64_t v47 = v91;
    uint64_t v48 = v90;
    uint64_t v49 = v92;
    (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v90, v36, v92);
    uint64_t v50 = &RecordLabel.artwork.getter;
    goto LABEL_22;
  }
  if (v37 == enum case for GenericMusicItem.socialProfile(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v36, v32);
    uint64_t v47 = v88;
    uint64_t v48 = v87;
    uint64_t v49 = v89;
    (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v87, v36, v89);
    id v51 = (void (*)(uint64_t))&SocialProfile.artwork.getter;
    id v52 = &static Artwork.CropStyle.specificRectangle.getter;
    goto LABEL_23;
  }
  if (v37 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v36, v32);
    uint64_t v47 = v85;
    uint64_t v48 = v84;
    uint64_t v49 = v86;
    (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v84, v36, v86);
    uint64_t v50 = &Song.artwork.getter;
    goto LABEL_22;
  }
  if (v37 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v36, v32);
    uint64_t v42 = v82;
    uint64_t v41 = v81;
    uint64_t v43 = v83;
    (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v81, v36, v83);
    uint64_t v45 = (void (*)(uint64_t))&Station.artwork.getter;
    uint64_t v46 = &static Artwork.CropStyle.specificRectangle.getter;
    goto LABEL_14;
  }
  if (v37 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v36, v32);
    uint64_t v42 = v79;
    uint64_t v41 = v78;
    uint64_t v43 = v80;
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v78, v36, v80);
    TVEpisode.artworkViewModel.getter(v39);
    return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v41, v43);
  }
  if (v37 == enum case for GenericMusicItem.tvSeason(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v36, v32);
    uint64_t v42 = v76;
    uint64_t v41 = v75;
    uint64_t v43 = v77;
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v75, v36, v77);
    uint64_t v44 = &TVSeason.artwork.getter;
    goto LABEL_13;
  }
  if (v37 == enum case for GenericMusicItem.tvShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v36, v32);
    uint64_t v42 = v73;
    uint64_t v41 = v72;
    uint64_t v43 = v74;
    (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v72, v36, v74);
    uint64_t v44 = &TVShow.artwork.getter;
    goto LABEL_13;
  }
  if (v37 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v36, v32);
    uint64_t v42 = v70;
    uint64_t v41 = v69;
    uint64_t v43 = v71;
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v69, v36, v71);
    uint64_t v44 = &UploadedAudio.artwork.getter;
    goto LABEL_13;
  }
  if (v37 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v36, v32);
    uint64_t v42 = v67;
    uint64_t v41 = v66;
    uint64_t v43 = v68;
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v66, v36, v68);
    uint64_t v44 = &UploadedVideo.artwork.getter;
    goto LABEL_13;
  }
  if (v37 == enum case for GenericMusicItem.other(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v36, v32);
    swift_bridgeObjectRelease();
    uint64_t v53 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v39, 1, 1, v53);
  }
  else
  {
    if (qword_1006705F8 != -1) {
      swift_once();
    }
    uint64_t v54 = sub_100530920();
    sub_10000EA90(v54, (uint64_t)static Logger.artwork);
    v64(v65, v118, v32);
    uint64_t v55 = sub_100530900();
    os_log_type_t v56 = sub_1005357D0();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = swift_slowAlloc();
      uint64_t v118 = swift_slowAlloc();
      uint64_t v119 = v118;
      *(_DWORD *)uint64_t v57 = 136315394;
      *(void *)(v57 + 4) = sub_1003C5E90(0xD000000000000010, 0x8000000100566C20, &v119);
      *(_WORD *)(v57 + 12) = 2080;
      sub_1003C6284();
      uint64_t v58 = v65;
      uint64_t v59 = sub_100536700();
      *(void *)(v57 + 14) = sub_1003C5E90(v59, v60, &v119);
      swift_bridgeObjectRelease();
      uint64_t v61 = *(void (**)(char *, uint64_t))(v33 + 8);
      v61(v58, v32);
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "Unhandled case for %s: %s", (uint8_t *)v57, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v61 = *(void (**)(char *, uint64_t))(v33 + 8);
      v61(v65, v32);
    }

    uint64_t v62 = type metadata accessor for ArtworkImage.ViewModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v39, 1, 1, v62);
    return ((uint64_t (*)(char *, uint64_t))v61)(v36, v32);
  }
}

uint64_t ArtworkImage.ViewModel.image(for:)(double a1, double a2)
{
  *(void *)(v3 + 32) = v2;
  *(double *)(v3 + 16) = a1;
  *(double *)(v3 + 24) = a2;
  sub_10000BB04(&qword_1006714C8);
  *(void *)(v3 + 40) = swift_task_alloc();
  uint64_t v4 = sub_1005342A0();
  *(void *)(v3 + 48) = v4;
  *(void *)(v3 + 56) = *(void *)(v4 - 8);
  *(void *)(v3 + 64) = swift_task_alloc();
  uint64_t v5 = sub_100534330();
  *(void *)(v3 + 72) = v5;
  *(void *)(v3 + 80) = *(void *)(v5 - 8);
  *(void *)(v3 + 88) = swift_task_alloc();
  return _swift_task_switch(sub_1003C4DC4, 0, 0);
}

uint64_t sub_1003C4DC4()
{
  uint64_t v1 = *((void *)v0 + 6);
  uint64_t v2 = *((void *)v0 + 7);
  uint64_t v4 = *((void *)v0 + 4);
  uint64_t v3 = *((void *)v0 + 5);
  (*(void (**)(void, uint64_t, void))(*((void *)v0 + 10) + 16))(*((void *)v0 + 11), v4, *((void *)v0 + 9));
  uint64_t v5 = type metadata accessor for ArtworkImage.ViewModel(0);
  sub_100013720(v4 + *(int *)(v5 + 20), v3, &qword_1006714C8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    if (qword_1006705E8 != -1) {
      swift_once();
    }
    uint64_t v7 = *((void *)v0 + 7);
    uint64_t v6 = *((void *)v0 + 8);
    uint64_t v9 = *((void *)v0 + 5);
    uint64_t v8 = *((void *)v0 + 6);
    uint64_t v10 = sub_10000EA90(v8, (uint64_t)static Artwork.CropStyle.fallback);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v10, v8);
    sub_100013C44(v9, &qword_1006714C8);
  }
  else
  {
    (*(void (**)(void, void, void))(*((void *)v0 + 7) + 32))(*((void *)v0 + 8), *((void *)v0 + 5), *((void *)v0 + 6));
  }
  if (qword_1006705F0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1005341F0();
  uint64_t v12 = sub_10000EA90(v11, (uint64_t)static Artwork.ImageFormat.fallback);
  uint64_t v13 = (void *)swift_task_alloc();
  *((void *)v0 + 12) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1003C4FAC;
  uint64_t v14 = *((void *)v0 + 8);
  double v15 = v0[2];
  double v16 = v0[3];
  return Artwork.image(for:cropStyle:format:)(v14, v12, v15, v16);
}

uint64_t sub_1003C4FAC(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  v4[13] = v1;
  swift_task_dealloc();
  uint64_t v6 = v4[11];
  uint64_t v7 = v4[10];
  uint64_t v8 = v4[9];
  uint64_t v9 = v4[7];
  uint64_t v10 = v4[6];
  if (v1)
  {
    (*(void (**)(void, uint64_t))(v9 + 8))(v4[8], v10);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    return _swift_task_switch(sub_1003C520C, 0, 0);
  }
  else
  {
    (*(void (**)(void, uint64_t))(v9 + 8))(v4[8], v10);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(uint64_t))v5[1];
    return v11(a1);
  }
}

uint64_t sub_1003C520C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Artwork.image(for:cropStyle:format:)(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)(v5 + 40) = a2;
  *(void *)(v5 + 48) = v4;
  *(void *)(v5 + 32) = a1;
  *(double *)(v5 + 16) = a3;
  *(double *)(v5 + 24) = a4;
  sub_10000BB04(&qword_1006714E8);
  *(void *)(v5 + 56) = swift_task_alloc();
  sub_10000BB04(&qword_1006714C8);
  *(void *)(v5 + 64) = swift_task_alloc();
  return _swift_task_switch(sub_1003C5354, 0, 0);
}

uint64_t sub_1003C5354()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  id v5 = [self currentTraitCollection];
  [v5 displayScale];
  double v7 = v6;

  uint64_t v8 = sub_1005342A0();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v2, v4, v8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v8);
  uint64_t v10 = sub_1005341F0();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v1, v3, v10);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v1, 0, 1, v10);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[9] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1003C5550;
  uint64_t v14 = v0[7];
  uint64_t v15 = v0[8];
  v16.n128_u64[0] = v0[2];
  v17.n128_u64[0] = v0[3];
  v13.n128_f64[0] = 1.0 / v7;
  return Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)(v15, v14, 0, 0, v16, v17, v13);
}

uint64_t sub_1003C5550(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  *(void *)(*v2 + 80) = v1;
  swift_task_dealloc();
  uint64_t v6 = *(void *)(v4 + 64);
  sub_100013C44(*(void *)(v4 + 56), &qword_1006714E8);
  sub_100013C44(v6, &qword_1006714C8);
  if (v1)
  {
    return _swift_task_switch(sub_1003C5700, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    double v7 = *(uint64_t (**)(uint64_t))(v5 + 8);
    return v7(a1);
  }
}

uint64_t sub_1003C5700()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003C576C(double a1, double a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10007C664;
  return ArtworkImage.ViewModel.image(for:)(a1, a2);
}

uint64_t ArtworkImageFetching<>.image(for:)(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)(v5 + 40) = a2;
  *(void *)(v5 + 48) = v4;
  *(void *)(v5 + 32) = a1;
  *(double *)(v5 + 16) = a3;
  *(double *)(v5 + 24) = a4;
  sub_10000BB04(&qword_1006714C8);
  *(void *)(v5 + 56) = swift_task_alloc();
  uint64_t v6 = sub_1005342A0();
  *(void *)(v5 + 64) = v6;
  *(void *)(v5 + 72) = *(void *)(v6 - 8);
  *(void *)(v5 + 80) = swift_task_alloc();
  uint64_t v7 = sub_100534330();
  *(void *)(v5 + 88) = v7;
  *(void *)(v5 + 96) = *(void *)(v7 - 8);
  *(void *)(v5 + 104) = swift_task_alloc();
  return _swift_task_switch(sub_1003C5964, 0, 0);
}

uint64_t sub_1003C5964()
{
  uint64_t v1 = *((void *)v0 + 8);
  uint64_t v2 = *((void *)v0 + 9);
  uint64_t v3 = *((void *)v0 + 7);
  uint64_t v5 = *((void *)v0 + 4);
  uint64_t v4 = *((void *)v0 + 5);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v4);
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v5, v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    if (qword_1006705E8 != -1) {
      swift_once();
    }
    uint64_t v7 = *((void *)v0 + 9);
    uint64_t v6 = *((void *)v0 + 10);
    uint64_t v9 = *((void *)v0 + 7);
    uint64_t v8 = *((void *)v0 + 8);
    uint64_t v10 = sub_10000EA90(v8, (uint64_t)static Artwork.CropStyle.fallback);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v10, v8);
    sub_100013C44(v9, &qword_1006714C8);
  }
  else
  {
    (*(void (**)(void, void, void))(*((void *)v0 + 9) + 32))(*((void *)v0 + 10), *((void *)v0 + 7), *((void *)v0 + 8));
  }
  if (qword_1006705F0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1005341F0();
  uint64_t v12 = sub_10000EA90(v11, (uint64_t)static Artwork.ImageFormat.fallback);
  __n128 v13 = (void *)swift_task_alloc();
  *((void *)v0 + 14) = v13;
  *__n128 v13 = v0;
  v13[1] = sub_1003C5B5C;
  uint64_t v14 = *((void *)v0 + 10);
  double v15 = v0[2];
  double v16 = v0[3];
  return Artwork.image(for:cropStyle:format:)(v14, v12, v15, v16);
}

uint64_t sub_1003C5B5C(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  v4[15] = v1;
  swift_task_dealloc();
  uint64_t v6 = v4[13];
  uint64_t v7 = v4[12];
  uint64_t v8 = v4[11];
  uint64_t v9 = v4[9];
  uint64_t v10 = v4[8];
  if (v1)
  {
    (*(void (**)(void, uint64_t))(v9 + 8))(v4[10], v10);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    return _swift_task_switch(sub_1003C5DBC, 0, 0);
  }
  else
  {
    (*(void (**)(void, uint64_t))(v9 + 8))(v4[10], v10);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(uint64_t))v5[1];
    return v11(a1);
  }
}

uint64_t sub_1003C5DBC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003C5E38(void *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  unint64_t v8 = sub_1003C5E90(v6, v7, a3);
  uint64_t v9 = (void *)*a1;
  *(void *)*a1 = v8;
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v9 + 1;
  return result;
}

unint64_t sub_1003C5E90(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  unint64_t v6 = sub_1003C5F64(v12, 0, 0, 1, a1, a2);
  unint64_t v7 = v12[0];
  if (v6)
  {
    unint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10009B1D4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10009B1D4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100013D48((uint64_t)v12);
  return v7;
}

unint64_t sub_1003C5F64(unint64_t *a1, void *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v10 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v10)
        {
          v12[0] = a5;
          v12[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          memcpy(__dst, v12, HIBYTE(a6) & 0xF);
          unint64_t result = 0;
          *((unsigned char *)__dst + v10) = 0;
          *a1 = (unint64_t)__dst;
          return result;
        }
      }
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    unint64_t result = (unint64_t)sub_1003C6064(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    unint64_t result = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    unint64_t result = sub_100536250();
    if (!result)
    {
      __break(1u);
      return result;
    }
  }
  *a1 = result;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

char *sub_1003C6064(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (char *)sub_1003C60FC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1003C6198(0, *((void *)v2 + 2) + 1, 1, v2);
  }
  unint64_t v4 = *((void *)v2 + 2);
  unint64_t v3 = *((void *)v2 + 3);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1003C6198((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v4 + 1;
  v2[v4 + 32] = 0;
  return v2;
}

void *sub_1003C60FC(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_9;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1003E9D04(v2, 0);
      unint64_t result = (void *)sub_1005361D0();
      if (v5) {
        break;
      }
      if (result == (void *)v2) {
        return v3;
      }
      __break(1u);
LABEL_9:
      uint64_t v2 = sub_100534EA0();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

char *sub_1003C6198(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_100671DA0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_1003C6284()
{
  unint64_t result = qword_1006714D0;
  if (!qword_1006714D0)
  {
    sub_10052FFA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006714D0);
  }
  return result;
}

Swift::Bool __swiftcall Text.StringOption.evaluate(_:)(Swift::String a1)
{
  uint64_t v1 = HIBYTE(a1._object) & 0xF;
  if (((uint64_t)a1._object & 0x2000000000000000) == 0) {
    uint64_t v1 = a1._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  return v1 != 0;
}

uint64_t Text.init(optional:options:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (a2
    && (swift_bridgeObjectRetain(),
        char v6 = sub_1003C763C(a3, a1, a2),
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v6 & 1) != 0))
  {
    sub_1003C7738();
    return sub_1005325F0();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t static Edge.Set.on(_:)()
{
  uint64_t v0 = sub_100532270();
  unsigned __int8 v1 = sub_1005321E0();
  sub_1005321F0();
  if (sub_1005321F0() == v1)
  {
    unsigned __int8 v2 = sub_100532260();
    unsigned __int8 v3 = sub_100532280();
    unsigned __int8 v4 = sub_100532270();
    sub_100532270();
    if (sub_100532270() != v2) {
      unsigned __int8 v4 = sub_100532270();
    }
    sub_100532270();
    if (sub_100532270() != v3) {
      unsigned __int8 v4 = sub_100532270();
    }
    sub_100532270();
    if (sub_100532270() != v4) {
      uint64_t v0 = sub_100532270();
    }
  }
  unsigned __int8 v5 = sub_100532200();
  sub_1005321F0();
  if (sub_1005321F0() != v5) {
    return v0;
  }
  unsigned __int8 v6 = sub_100532240();
  unsigned __int8 v7 = sub_100532250();
  unsigned __int8 v8 = sub_100532270();
  sub_100532270();
  if (sub_100532270() != v6) {
    unsigned __int8 v8 = sub_100532270();
  }
  sub_100532270();
  if (sub_100532270() != v7) {
    unsigned __int8 v8 = sub_100532270();
  }
  sub_100532270();
  if (sub_100532270() == v8) {
    return v0;
  }

  return sub_100532270();
}

double EdgeInsets.init(_:length:)(char a1, double a2)
{
  if (a1) {
    sub_100532200();
  }
  else {
    sub_1005321E0();
  }
  static Edge.Set.on(_:)();

  return _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(a2);
}

double EdgeInsets.init(_:length:)(double a1)
{
  static Edge.Set.on(_:)();

  return _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(a1);
}

double EdgeInsets.init(horizontal:vertical:)(double a1, double a2)
{
  return a2;
}

void EdgeInsets.affecting(_:)(uint64_t a1)
{
  sub_100532230();
  _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(0.0);
  int64_t v2 = 0;
  uint64_t v3 = a1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    while (v6)
      v6 &= v6 - 1;
    int64_t v8 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v8 >= v7) {
      return;
    }
    uint64_t v9 = *(void *)(v3 + 8 * v8);
    ++v2;
    if (!v9)
    {
      int64_t v2 = v8 + 1;
      if (v8 + 1 >= v7) {
        return;
      }
      uint64_t v9 = *(void *)(v3 + 8 * v2);
      if (!v9)
      {
        int64_t v2 = v8 + 2;
        if (v8 + 2 >= v7) {
          return;
        }
        uint64_t v9 = *(void *)(v3 + 8 * v2);
        if (!v9)
        {
          int64_t v2 = v8 + 3;
          if (v8 + 3 >= v7) {
            return;
          }
          uint64_t v9 = *(void *)(v3 + 8 * v2);
          if (!v9)
          {
            int64_t v2 = v8 + 4;
            if (v8 + 4 >= v7) {
              return;
            }
            uint64_t v9 = *(void *)(v3 + 8 * v2);
            if (!v9) {
              break;
            }
          }
        }
      }
    }
LABEL_23:
    uint64_t v6 = (v9 - 1) & v9;
  }
  int64_t v10 = v8 + 5;
  if (v10 >= v7) {
    return;
  }
  uint64_t v9 = *(void *)(v3 + 8 * v10);
  if (v9)
  {
    int64_t v2 = v10;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v2 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v2 >= v7) {
      return;
    }
    uint64_t v9 = *(void *)(v3 + 8 * v2);
    ++v10;
    if (v9) {
      goto LABEL_23;
    }
  }
LABEL_26:
  __break(1u);
}

double EdgeInsets.affecting(_:)(char a1)
{
  char v1 = a1 & 1;
  sub_10000BB04(&qword_100671508);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10053A3B0;
  *(unsigned char *)(inited + 32) = v1;
  Swift::Int v3 = sub_1003C7858(inited);
  swift_setDeallocating();
  EdgeInsets.affecting(_:)(v3);
  double v5 = v4;
  swift_bridgeObjectRelease();
  return v5;
}

double EdgeInsets.value(for:)(char a1, double a2, double a3, double a4, double a5)
{
  double result = a2 + a4;
  double v6 = a3 + a5;
  if ((a1 & 1) == 0) {
    return v6;
  }
  return result;
}

double EdgeInsets.horizontal.getter(double a1, double a2, double a3, double a4)
{
  return a2 + a4;
}

double EdgeInsets.vertical.getter(double a1, double a2, double a3)
{
  return a1 + a3;
}

double sub_1003C6860()
{
  double result = 0.0;
  static EdgeInsets.zero = 0u;
  *(_OWORD *)&qword_10067B588 = 0u;
  return result;
}

long long *EdgeInsets.zero.unsafeMutableAddressor()
{
  if (qword_1006703D8 != -1) {
    swift_once();
  }
  return &static EdgeInsets.zero;
}

double static EdgeInsets.zero.getter()
{
  if (qword_1006703D8 != -1) {
    swift_once();
  }
  return *(double *)&static EdgeInsets.zero;
}

double CGSize.length(for:)(char a1, double a2, double a3)
{
  if (a1) {
    return a3;
  }
  return result;
}

BOOL CGSize.fitsWithin(_:)(double a1, double a2, double a3, double a4)
{
  return a4 <= a2 && a3 <= a1;
}

BOOL Axis.orthogonal.getter(char a1)
{
  return (a1 & 1) == 0;
}

uint64_t Axis.isOrthogonal(to:)(char a1, char a2)
{
  if (a2)
  {
    if ((a1 & 1) == 0) {
      return 1;
    }
  }
  else if (a1)
  {
    return 1;
  }
  return 0;
}

uint64_t Optional<A>.isOrthogonal(to:)(char a1, char a2)
{
  if (a2 == 2) {
    return 1;
  }
  if (a2)
  {
    if ((a1 & 1) == 0) {
      return 1;
    }
  }
  else if (a1)
  {
    return 1;
  }
  return 0;
}

uint64_t Axis.Set.init(_:)(char a1)
{
  if (a1) {
    return sub_100532200();
  }
  else {
    return sub_1005321E0();
  }
}

uint64_t View.always(perform:)@<X0>(void (*a1)(void)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  a1();
  double v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16);

  return v6(a3, v3, a2);
}

double DynamicTypeSize.scaledValue(_:relativeTo:)(uint64_t a1, double a2)
{
  sub_10000BB04(&qword_100671510);
  __chkstk_darwin();
  double v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:a1];
  uint64_t v8 = sub_100531470();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v6, v2, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  int64_t v10 = (void *)sub_100535AF0();
  id v11 = [self traitCollectionWithPreferredContentSizeCategory:v10];
  [v7 scaledValueForValue:v11 compatibleWithTraitCollection:a2];
  double v13 = v12;

  return v13;
}

uint64_t static Color.random(opacity:)()
{
  uint64_t v0 = sub_100532B40();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001AEDC0(0x20000000000001uLL);
  sub_1001AEDC0(0x20000000000001uLL);
  sub_1001AEDC0(0x20000000000001uLL);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Color.RGBColorSpace.sRGB(_:), v0);
  return sub_100532BF0();
}

uint64_t RoundedRectangle.outset(horizontal:vertical:)@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100531490();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  id v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  double v13 = (char *)&v21 - v12;
  sub_1005315A0();
  __chkstk_darwin();
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003C841C(v4, (uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v16 = enum case for LayoutDirection.leftToRight(_:);
  __n128 v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v13, enum case for LayoutDirection.leftToRight(_:), v8);
  sub_1003C841C((uint64_t)v15, a1, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v18 = (int *)_s21OmnidirectionalOutsetVMa();
  *(double *)(a1 + v18[5]) = a3;
  *(double *)(a1 + v18[6]) = a2;
  *(double *)(a1 + v18[7]) = a3;
  *(double *)(a1 + v18[8]) = a2;
  v17(v11, v16, v8);
  LOBYTE(v16) = sub_100531480();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v13, v8);
  sub_1003C7A14((uint64_t)v15);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v19)(v11, v8);
  *(void *)(a1 + v18[9]) = (v16 & 1) == 0;
  return result;
}

uint64_t RoundedRectangle.outset(top:leading:bottom:trailing:layoutDirection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v7 = v6;
  uint64_t v14 = sub_100531490();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin();
  __n128 v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v25 - v18;
  sub_1005315A0();
  __chkstk_darwin();
  uint64_t v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003C841C(v7, (uint64_t)v21, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v19, a1, v14);
  sub_1003C841C((uint64_t)v21, a2, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v22 = (int *)_s21OmnidirectionalOutsetVMa();
  *(double *)(a2 + v22[5]) = a3;
  *(double *)(a2 + v22[6]) = a4;
  *(double *)(a2 + v22[7]) = a5;
  *(double *)(a2 + v22[8]) = a6;
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for LayoutDirection.leftToRight(_:), v14);
  LOBYTE(v7) = sub_100531480();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v15 + 8);
  v23(v19, v14);
  sub_1003C7A14((uint64_t)v21);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v23)(v17, v14);
  *(void *)(a2 + v22[9]) = (v7 & 1) == 0;
  return result;
}

double sub_1003C718C@<D0>(int *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v5 = v3;
  sub_1003C841C(v5, a2, (uint64_t (*)(void))_s21OmnidirectionalOutsetVMa);
  uint64_t v8 = a1[6];
  *(double *)(a2 + a1[5]) = *(double *)(a2 + a1[5]) - a3;
  *(double *)(a2 + v8) = *(double *)(a2 + v8) - a3;
  uint64_t v9 = a1[8];
  *(double *)(a2 + a1[7]) = *(double *)(a2 + a1[7]) - a3;
  double result = *(double *)(a2 + v9) - a3;
  *(double *)(a2 + v9) = result;
  return result;
}

double sub_1003C7214@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100531B40();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005315A0() - 8;
  __chkstk_darwin();
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGRect.outset(by:for:)();
  sub_1003C841C(v2, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, &v10[*(int *)(v8 + 28)], v4);
  sub_100532490();
  double result = *(double *)&v14;
  long long v12 = v15;
  *(_OWORD *)a1 = v14;
  *(_OWORD *)(a1 + 16) = v12;
  *(unsigned char *)(a1 + 32) = v16;
  return result;
}

uint64_t sub_1003C740C()
{
  return Shape.sizeThatFits(_:)();
}

void (*sub_1003C7424(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_100530DD0();
  return sub_1003B757C;
}

uint64_t sub_1003C7498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1003C8CAC(&qword_1006715F0, (void (*)(uint64_t))_s21OmnidirectionalOutsetVMa);

  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1003C752C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1003C8CAC(&qword_1006715F0, (void (*)(uint64_t))_s21OmnidirectionalOutsetVMa);

  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1003C75C0(uint64_t a1)
{
  uint64_t v2 = sub_1003C8CAC(&qword_1006715F0, (void (*)(uint64_t))_s21OmnidirectionalOutsetVMa);

  return Shape.body.getter(a1, v2);
}

uint64_t sub_1003C763C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int64_t v3 = 0;
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t result = a1 + 56;
  uint64_t v5 = v6;
  uint64_t v7 = 1 << *(unsigned char *)(result - 24);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  uint64_t v9 = v8 & v5;
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v11 = a2 & 0xFFFFFFFFFFFFLL;
  }
  while (1)
  {
    if (!v9)
    {
      int64_t v12 = v3 + 1;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
        goto LABEL_27;
      }
      if (v12 >= v10) {
        return 1;
      }
      uint64_t v9 = *(void *)(result + 8 * v12);
      ++v3;
      if (!v9)
      {
        int64_t v3 = v12 + 1;
        if (v12 + 1 >= v10) {
          return 1;
        }
        uint64_t v9 = *(void *)(result + 8 * v3);
        if (!v9)
        {
          int64_t v3 = v12 + 2;
          if (v12 + 2 >= v10) {
            return 1;
          }
          uint64_t v9 = *(void *)(result + 8 * v3);
          if (!v9)
          {
            int64_t v3 = v12 + 3;
            if (v12 + 3 >= v10) {
              return 1;
            }
            uint64_t v9 = *(void *)(result + 8 * v3);
            if (!v9) {
              break;
            }
          }
        }
      }
    }
LABEL_7:
    v9 &= v9 - 1;
    if (!v11) {
      return 0;
    }
  }
  int64_t v13 = v12 + 4;
  if (v13 >= v10) {
    return 1;
  }
  uint64_t v9 = *(void *)(result + 8 * v13);
  if (v9)
  {
    int64_t v3 = v13;
    goto LABEL_7;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v10) {
      return 1;
    }
    uint64_t v9 = *(void *)(result + 8 * v3);
    ++v13;
    if (v9) {
      goto LABEL_7;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

unint64_t sub_1003C7738()
{
  unint64_t result = qword_100675ED0;
  if (!qword_100675ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100675ED0);
  }
  return result;
}

double _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(double a1)
{
  unsigned __int8 v2 = sub_100532240();
  sub_100532270();
  if (sub_100532270() == v2) {
    double v3 = a1;
  }
  else {
    double v3 = 0.0;
  }
  sub_100532260();
  sub_100532270();
  sub_100532270();
  sub_100532250();
  sub_100532270();
  sub_100532270();
  sub_100532280();
  sub_100532270();
  sub_100532270();
  return v3;
}

Swift::Int sub_1003C7858(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10000BB04(&qword_100671630);
    uint64_t v3 = sub_1005361A0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      char v7 = *(unsigned char *)(v6 + v4);
      sub_100536950();
      Swift::UInt8 v8 = sub_100532210();
      sub_100536970(v8);
      Swift::Int result = sub_1005369A0();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        int v15 = sub_100532210();
        Swift::Int result = sub_100532210();
        if (v15 == result) {
          goto LABEL_3;
        }
        uint64_t v16 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v16;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          int v17 = sub_100532210();
          Swift::Int result = sub_100532210();
          if (v17 == result) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(unsigned char *)(*(void *)(v3 + 48) + v11) = v7;
      uint64_t v18 = *(void *)(v3 + 16);
      BOOL v19 = __OFADD__(v18, 1);
      uint64_t v20 = v18 + 1;
      if (v19)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v20;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t _s21OmnidirectionalOutsetVMa()
{
  uint64_t result = qword_100671580;
  if (!qword_100671580) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003C7A14(uint64_t a1)
{
  uint64_t v2 = sub_1005315A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1003C7A74()
{
  unint64_t result = qword_100671518;
  if (!qword_100671518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100671518);
  }
  return result;
}

unsigned char *_s12StringOptionOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1003C7B64);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Text.StringOption()
{
  return &type metadata for Text.StringOption;
}

uint64_t sub_1003C7B9C()
{
  return sub_1003C8CAC(&qword_100671520, (void (*)(uint64_t))_s21OmnidirectionalOutsetVMa);
}

uint64_t *sub_1003C7BE4(uint64_t *a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = *(int *)(sub_1005315A0() + 20);
    Swift::UInt8 v8 = (char *)v4 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_100531B40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[6];
    *(uint64_t *)((char *)v4 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)v4 + v11) = *(uint64_t *)((char *)a2 + v11);
    uint64_t v12 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)v4 + v12) = *(uint64_t *)((char *)a2 + v12);
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  }
  return v4;
}

uint64_t sub_1003C7CFC(uint64_t a1)
{
  uint64_t v1 = a1 + *(int *)(sub_1005315A0() + 20);
  uint64_t v2 = sub_100531B40();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

_OWORD *sub_1003C7D70(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(sub_1005315A0() + 20);
  uint64_t v7 = (char *)a1 + v6;
  Swift::UInt8 v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100531B40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  uint64_t v11 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  return a1;
}

void *sub_1003C7E38(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(sub_1005315A0() + 20);
  uint64_t v7 = (char *)a1 + v6;
  Swift::UInt8 v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100531B40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  return a1;
}

_OWORD *sub_1003C7F10(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(sub_1005315A0() + 20);
  uint64_t v7 = (char *)a1 + v6;
  Swift::UInt8 v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100531B40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  uint64_t v11 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  return a1;
}

_OWORD *sub_1003C7FD8(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(sub_1005315A0() + 20);
  uint64_t v7 = (char *)a1 + v6;
  Swift::UInt8 v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100531B40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  uint64_t v11 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  return a1;
}

uint64_t sub_1003C80A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003C80B4);
}

uint64_t sub_1003C80B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005315A0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1003C8120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003C8134);
}

uint64_t sub_1003C8134(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005315A0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1003C81A4()
{
  uint64_t result = sub_1005315A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1003C8248()
{
  unint64_t result = qword_1006715C8;
  if (!qword_1006715C8)
  {
    sub_100013BFC(&qword_1006715D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006715C8);
  }
  return result;
}

unint64_t sub_1003C82A8()
{
  unint64_t result = qword_1006715D8;
  if (!qword_1006715D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006715D8);
  }
  return result;
}

uint64_t sub_1003C82FC()
{
  return sub_1003C8CAC(&qword_1006715E0, (void (*)(uint64_t))_s21OmnidirectionalOutsetVMa);
}

uint64_t sub_1003C8344()
{
  return sub_1003C8CAC(&qword_1006715E8, (void (*)(uint64_t))_s21OmnidirectionalOutsetVMa);
}

uint64_t sub_1003C838C()
{
  return sub_1003C8CAC(&qword_1006715F0, (void (*)(uint64_t))_s21OmnidirectionalOutsetVMa);
}

uint64_t sub_1003C83D4()
{
  return sub_1003C8CAC(&qword_100671520, (void (*)(uint64_t))_s21OmnidirectionalOutsetVMa);
}

uint64_t sub_1003C841C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

Swift::Int sub_1003C8484(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10000BB04(&qword_100671620);
    uint64_t v3 = sub_1005361A0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      double v7 = *(double *)(v6 + 8 * v4);
      sub_100536950();
      sub_100536960(0);
      if ((*(void *)&v7 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v8 = *(void *)&v7;
      }
      else {
        Swift::UInt64 v8 = 0;
      }
      sub_100536990(v8);
      Swift::Int result = sub_1005369A0();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      uint64_t v15 = *(void *)(v3 + 48);
      if (((1 << v11) & v13) != 0)
      {
        if (*(double *)(v15 + 8 * v11) == v7) {
          goto LABEL_3;
        }
        uint64_t v16 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v16;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          if (*(double *)(v15 + 8 * v11) == v7) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(double *)(v15 + 8 * v11) = v7;
      uint64_t v17 = *(void *)(v3 + 16);
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v19;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void sub_1003C85DC(unint64_t a1)
{
}

Swift::Int sub_1003C85FC(uint64_t a1)
{
  return sub_1003C8D00(a1, &qword_1006715F8);
}

void sub_1003C8608(unint64_t a1)
{
}

void sub_1003C8628(unint64_t a1, uint64_t *a2, void (*a3)(void))
{
  unint64_t v5 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_100536470();
    swift_bridgeObjectRelease();
    if (v9)
    {
LABEL_3:
      sub_10000BB04(a2);
      uint64_t v6 = (void *)sub_1005361A0();
      uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v5) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_100536470();
      swift_bridgeObjectRelease();
      if (!v8) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v6 = &_swiftEmptySetSingleton;
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v5) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return;
  }
LABEL_9:
  uint64_t v10 = (char *)(v6 + 7);
  uint64_t v46 = v8;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v11 = 0;
    while (1)
    {
      uint64_t v12 = sub_100536210();
      BOOL v13 = __OFADD__(v11++, 1);
      if (v13)
      {
        __break(1u);
        goto LABEL_36;
      }
      uint64_t v14 = v12;
      Swift::Int v15 = sub_100535D80(v6[5]);
      uint64_t v16 = -1 << *((unsigned char *)v6 + 32);
      unint64_t v17 = v15 & ~v16;
      unint64_t v18 = v17 >> 6;
      uint64_t v19 = *(void *)&v10[8 * (v17 >> 6)];
      uint64_t v20 = 1 << v17;
      if (((1 << v17) & v19) != 0)
      {
        a3(0);
        id v21 = *(id *)(v6[6] + 8 * v17);
        char v22 = sub_100535D90();

        if (v22)
        {
LABEL_11:
          swift_unknownObjectRelease();
          goto LABEL_12;
        }
        uint64_t v23 = ~v16;
        while (1)
        {
          unint64_t v17 = (v17 + 1) & v23;
          unint64_t v18 = v17 >> 6;
          uint64_t v19 = *(void *)&v10[8 * (v17 >> 6)];
          uint64_t v20 = 1 << v17;
          if ((v19 & (1 << v17)) == 0) {
            break;
          }
          id v24 = *(id *)(v6[6] + 8 * v17);
          char v25 = sub_100535D90();

          if (v25) {
            goto LABEL_11;
          }
        }
      }
      *(void *)&v10[8 * v18] = v20 | v19;
      *(void *)(v6[6] + 8 * v17) = v14;
      uint64_t v26 = v6[2];
      BOOL v13 = __OFADD__(v26, 1);
      uint64_t v27 = v26 + 1;
      if (v13) {
        goto LABEL_37;
      }
      void v6[2] = v27;
LABEL_12:
      if (v11 == v46) {
        return;
      }
    }
  }
  uint64_t v28 = 0;
  uint64_t v44 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v28 != v44)
  {
    Swift::Int v29 = v6[5];
    id v30 = *(id *)(a1 + 32 + 8 * v28);
    Swift::Int v31 = sub_100535D80(v29);
    uint64_t v32 = -1 << *((unsigned char *)v6 + 32);
    unint64_t v33 = v31 & ~v32;
    unint64_t v34 = v33 >> 6;
    uint64_t v35 = *(void *)&v10[8 * (v33 >> 6)];
    uint64_t v36 = 1 << v33;
    if (((1 << v33) & v35) != 0)
    {
      a3(0);
      id v37 = *(id *)(v6[6] + 8 * v33);
      char v38 = sub_100535D90();

      if (v38) {
        goto LABEL_23;
      }
      uint64_t v39 = ~v32;
      unint64_t v33 = (v33 + 1) & v39;
      unint64_t v34 = v33 >> 6;
      uint64_t v35 = *(void *)&v10[8 * (v33 >> 6)];
      uint64_t v36 = 1 << v33;
      if ((v35 & (1 << v33)) != 0)
      {
        while (1)
        {
          id v40 = *(id *)(v6[6] + 8 * v33);
          char v41 = sub_100535D90();

          if (v41) {
            break;
          }
          unint64_t v33 = (v33 + 1) & v39;
          unint64_t v34 = v33 >> 6;
          uint64_t v35 = *(void *)&v10[8 * (v33 >> 6)];
          uint64_t v36 = 1 << v33;
          if ((v35 & (1 << v33)) == 0) {
            goto LABEL_31;
          }
        }
LABEL_23:

        uint64_t v8 = v46;
        goto LABEL_24;
      }
LABEL_31:
      uint64_t v8 = v46;
    }
    *(void *)&v10[8 * v34] = v36 | v35;
    *(void *)(v6[6] + 8 * v33) = v30;
    uint64_t v42 = v6[2];
    BOOL v13 = __OFADD__(v42, 1);
    uint64_t v43 = v42 + 1;
    if (v13) {
      goto LABEL_38;
    }
    void v6[2] = v43;
LABEL_24:
    if (++v28 == v8) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

void *sub_1003C8994(uint64_t a1)
{
  uint64_t v2 = sub_10052F900();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  unint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v36 = (char *)&v29 - v6;
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    sub_10000BB04(&qword_100671600);
    uint64_t v8 = sub_1005361A0();
    uint64_t v9 = 0;
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v10 = v3 + 16;
    unint64_t v34 = v11;
    uint64_t v35 = v8 + 56;
    uint64_t v12 = *(unsigned __int8 *)(v10 + 64);
    uint64_t v31 = v7;
    uint64_t v32 = a1 + ((v12 + 32) & ~v12);
    uint64_t v13 = *(void *)(v10 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v10 - 8);
    id v30 = (uint64_t (**)(unint64_t, char *, uint64_t))(v10 + 16);
    while (1)
    {
      uint64_t v33 = v9;
      v34(v36, v32 + v13 * v9, v2);
      sub_1003C8CAC(&qword_100671608, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
      uint64_t v15 = sub_100534B40();
      uint64_t v16 = ~(-1 << *(unsigned char *)(v8 + 32));
      unint64_t v17 = v15 & v16;
      unint64_t v18 = (v15 & (unint64_t)v16) >> 6;
      uint64_t v19 = *(void *)(v35 + 8 * v18);
      uint64_t v20 = 1 << (v15 & v16);
      if ((v20 & v19) != 0)
      {
        while (1)
        {
          uint64_t v21 = v10;
          v34(v5, *(void *)(v8 + 48) + v17 * v13, v2);
          sub_1003C8CAC(&qword_100671610, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
          char v22 = sub_100534BF0();
          uint64_t v23 = *v14;
          (*v14)(v5, v2);
          if (v22) {
            break;
          }
          unint64_t v17 = (v17 + 1) & v16;
          unint64_t v18 = v17 >> 6;
          uint64_t v19 = *(void *)(v35 + 8 * (v17 >> 6));
          uint64_t v20 = 1 << v17;
          uint64_t v10 = v21;
          if ((v19 & (1 << v17)) == 0) {
            goto LABEL_8;
          }
        }
        v23(v36, v2);
        uint64_t v10 = v21;
      }
      else
      {
LABEL_8:
        id v24 = v36;
        *(void *)(v35 + 8 * v18) = v20 | v19;
        Swift::Int result = (void *)(*v30)(*(void *)(v8 + 48) + v17 * v13, v24, v2);
        uint64_t v26 = *(void *)(v8 + 16);
        BOOL v27 = __OFADD__(v26, 1);
        uint64_t v28 = v26 + 1;
        if (v27)
        {
          __break(1u);
          return result;
        }
        *(void *)(v8 + 16) = v28;
      }
      uint64_t v9 = v33 + 1;
      if (v33 + 1 == v31) {
        return (void *)v8;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_1003C8CAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Int sub_1003C8CF4(uint64_t a1)
{
  return sub_1003C8D00(a1, &qword_100671618);
}

Swift::Int sub_1003C8D00(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_10000BB04(a2);
    uint64_t v4 = sub_1005361A0();
    uint64_t v5 = 0;
    uint64_t v6 = v4 + 56;
    uint64_t v7 = a1 + 32;
    while (1)
    {
      Swift::UInt v8 = *(unsigned __int8 *)(v7 + v5);
      sub_100536950();
      sub_100536960(v8);
      Swift::Int result = sub_1005369A0();
      uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v6 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      uint64_t v15 = *(void *)(v4 + 48);
      if (((1 << v11) & v13) != 0)
      {
        if (*(unsigned __int8 *)(v15 + v11) == v8) {
          goto LABEL_3;
        }
        uint64_t v16 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v16;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v6 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v15 + v11) == v8) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v6 + 8 * v12) = v14 | v13;
      *(unsigned char *)(v15 + v11) = v8;
      uint64_t v17 = *(void *)(v4 + 16);
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18)
      {
        __break(1u);
        return result;
      }
      *(void *)(v4 + 16) = v19;
LABEL_3:
      if (++v5 == v2) {
        return v4;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

unint64_t sub_1003C8E40()
{
  unint64_t result = qword_100671628;
  if (!qword_100671628)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100671628);
  }
  return result;
}

uint64_t sub_1003C8E80()
{
  uint64_t v0 = sub_100530920();
  sub_10000ED18(v0, qword_10067B598);
  sub_10000EA90(v0, (uint64_t)qword_10067B598);
  sub_1003C07A8();
  sub_100535F00();
  return sub_100530930();
}

unint64_t SymbolButton.Configuration.description.getter()
{
  uint64_t v1 = v0;
  sub_10000BB04(&qword_100678A80);
  __chkstk_darwin();
  uint64_t v117 = (uint64_t)&v108 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (void *)sub_100535CE0();
  uint64_t v118 = (void (**)(char *, uint64_t, id))*(v3 - 1);
  id v119 = v3;
  __chkstk_darwin();
  uint64_t v115 = (char *)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v116 = (char *)&v108 - v5;
  unint64_t v128 = 0xD00000000000001CLL;
  unint64_t v129 = 0x8000000100566C40;
  v122._uint64_t countAndFlagsBits = 0;
  v122._object = (void *)0xE000000000000000;
  sub_1005361C0(26);
  swift_bridgeObjectRelease();
  v122._uint64_t countAndFlagsBits = 0xD000000000000017;
  v122._object = (void *)0x8000000100566C60;
  uint64_t v6 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  v130._uint64_t countAndFlagsBits = sub_100535400();
  sub_100534E80(v130);
  swift_bridgeObjectRelease();
  v131._uint64_t countAndFlagsBits = 10;
  v131._object = (void *)0xE100000000000000;
  sub_100534E80(v131);
  sub_100534E80(v122);
  swift_bridgeObjectRelease();
  v122._uint64_t countAndFlagsBits = 0;
  v122._object = (void *)0xE000000000000000;
  sub_1005361C0(18);
  swift_bridgeObjectRelease();
  v122._uint64_t countAndFlagsBits = 0x6D756D696E696D20;
  v122._object = (void *)0xEF203A20657A6953;
  v132._uint64_t countAndFlagsBits = sub_100535C00();
  sub_100534E80(v132);
  swift_bridgeObjectRelease();
  v133._uint64_t countAndFlagsBits = 10;
  v133._object = (void *)0xE100000000000000;
  sub_100534E80(v133);
  sub_100534E80(v122);
  swift_bridgeObjectRelease();
  if ((*(unsigned char *)(v0 + v6[14] + 16) & 1) == 0)
  {
    v122._uint64_t countAndFlagsBits = 0;
    v122._object = (void *)0xE000000000000000;
    sub_1005361C0(23);
    swift_bridgeObjectRelease();
    v122._uint64_t countAndFlagsBits = 0xD000000000000014;
    v122._object = (void *)0x8000000100567020;
    v134._uint64_t countAndFlagsBits = sub_100535C00();
    sub_100534E80(v134);
    swift_bridgeObjectRelease();
    v135._uint64_t countAndFlagsBits = 10;
    v135._object = (void *)0xE100000000000000;
    sub_100534E80(v135);
    sub_100534E80(v122);
    swift_bridgeObjectRelease();
  }
  v122._uint64_t countAndFlagsBits = 0;
  v122._object = (void *)0xE000000000000000;
  sub_1005361C0(20);
  swift_bridgeObjectRelease();
  v127._uint64_t countAndFlagsBits = 0xD000000000000011;
  v127._object = (void *)0x8000000100566C80;
  uint64_t v7 = v0 + v6[15];
  long long v8 = *(_OWORD *)(v7 + 16);
  Swift::String v122 = *(Swift::String *)v7;
  long long v123 = v8;
  _s3__C23NSDirectionalEdgeInsetsVMa_0(0);
  v136._uint64_t countAndFlagsBits = sub_100534D70();
  sub_100534E80(v136);
  swift_bridgeObjectRelease();
  v137._uint64_t countAndFlagsBits = 10;
  v137._object = (void *)0xE100000000000000;
  sub_100534E80(v137);
  sub_100534E80(v127);
  swift_bridgeObjectRelease();
  int v9 = *(unsigned __int8 *)(v0 + v6[19]);
  if (v9 == 2)
  {
    v138._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
    v138._object = (void *)0x8000000100566CA0;
    sub_100534E80(v138);
  }
  else
  {
    v122._uint64_t countAndFlagsBits = 0;
    v122._object = (void *)0xE000000000000000;
    sub_1005361C0(19);
    swift_bridgeObjectRelease();
    v122._uint64_t countAndFlagsBits = 0xD000000000000010;
    v122._object = (void *)0x8000000100567000;
    if (v9) {
      v10._uint64_t countAndFlagsBits = 1702195828;
    }
    else {
      v10._uint64_t countAndFlagsBits = 0x65736C6166;
    }
    if (v9) {
      unint64_t v11 = (void *)0xE400000000000000;
    }
    else {
      unint64_t v11 = (void *)0xE500000000000000;
    }
    v10._object = v11;
    sub_100534E80(v10);
    swift_bridgeObjectRelease();
    v139._uint64_t countAndFlagsBits = 10;
    v139._object = (void *)0xE100000000000000;
    sub_100534E80(v139);
    sub_100534E80(v122);
    swift_bridgeObjectRelease();
  }
  v122._uint64_t countAndFlagsBits = 0x3A206168706C6120;
  v122._object = (void *)0xE900000000000020;
  v140._uint64_t countAndFlagsBits = sub_100535400();
  sub_100534E80(v140);
  swift_bridgeObjectRelease();
  v141._uint64_t countAndFlagsBits = 10;
  v141._object = (void *)0xE100000000000000;
  sub_100534E80(v141);
  sub_100534E80(v122);
  swift_bridgeObjectRelease();
  v122._uint64_t countAndFlagsBits = 0x203A20746E697420;
  v122._object = (void *)0xE800000000000000;
  uint64_t v121 = v6;
  v127._uint64_t countAndFlagsBits = *(void *)(v0 + v6[18]);
  id v12 = (id)v127._countAndFlagsBits;
  uint64_t v120 = sub_10000BB04(&qword_100671238);
  v142._uint64_t countAndFlagsBits = sub_100534D70();
  sub_100534E80(v142);
  swift_bridgeObjectRelease();
  v143._uint64_t countAndFlagsBits = 10;
  v143._object = (void *)0xE100000000000000;
  sub_100534E80(v143);
  sub_100534E80(v122);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void **)(v0 + 8);
  if (v13)
  {
    uint64_t v14 = *(void **)(v0 + 16);
    uint64_t v15 = *(void **)(v0 + 24);
    char v16 = *(unsigned char *)(v0 + 40);
    uint64_t v17 = *(void *)(v0 + 48);
    uint64_t v112 = *(void *)(v0 + 56);
    uint64_t v110 = *(void *)(v0 + 64);
    uint64_t v109 = *(void **)(v0 + 72);
    LODWORD(v113) = *(unsigned __int8 *)(v0 + 80);
    BOOL v18 = *(void **)(v0 + 96);
    uint64_t v111 = *(void *)(v0 + 88);
    id v114 = *(id *)(v0 + 112);
    uint64_t v19 = *(void *)v0;
    swift_bridgeObjectRetain();
    v144._uint64_t countAndFlagsBits = 0x6D7953209480E220;
    v144._object = (void *)0xAE000A7B206C6F62;
    sub_100534E80(v144);
    v122._uint64_t countAndFlagsBits = 0x656D616E20202020;
    v122._object = (void *)0xEB00000000203A20;
    v145._uint64_t countAndFlagsBits = v19;
    v145._object = v13;
    sub_100534E80(v145);
    swift_bridgeObjectRelease();
    v146._uint64_t countAndFlagsBits = 10;
    v146._object = (void *)0xE100000000000000;
    sub_100534E80(v146);
    sub_100534E80(v122);
    swift_bridgeObjectRelease();
    if (v14)
    {
      id v20 = [v14 bundlePath];
      uint64_t v21 = sub_100534CE0();
      uint64_t v23 = v22;

      v122._uint64_t countAndFlagsBits = 0;
      v122._object = (void *)0xE000000000000000;
      sub_1005361C0(16);
      swift_bridgeObjectRelease();
      strcpy((char *)&v122, "    bundle : ");
      HIWORD(v122._object) = -4864;
      v147._uint64_t countAndFlagsBits = v21;
      v147._object = v23;
      sub_100534E80(v147);
      swift_bridgeObjectRelease();
      v148._uint64_t countAndFlagsBits = 10;
      v148._object = (void *)0xE100000000000000;
      sub_100534E80(v148);
      sub_100534E80(v122);
      swift_bridgeObjectRelease();
    }
    strcpy((char *)&v122, "    style : ");
    BYTE5(v122._object) = 0;
    HIWORD(v122._object) = -5120;
    v127._uint64_t countAndFlagsBits = (uint64_t)v15;
    type metadata accessor for TextStyle(0);
    id v24 = v15;
    v149._uint64_t countAndFlagsBits = sub_100534D70();
    sub_100534E80(v149);
    swift_bridgeObjectRelease();
    v150._uint64_t countAndFlagsBits = 10;
    v150._object = (void *)0xE100000000000000;
    sub_100534E80(v150);
    sub_100534E80(v122);
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      v122._uint64_t countAndFlagsBits = 0;
      v122._object = (void *)0xE000000000000000;
      sub_1005361C0(23);
      swift_bridgeObjectRelease();
      v122._uint64_t countAndFlagsBits = 0xD000000000000014;
      v122._object = (void *)0x8000000100566FE0;
      v151._uint64_t countAndFlagsBits = sub_100535400();
      sub_100534E80(v151);
      swift_bridgeObjectRelease();
      v152._uint64_t countAndFlagsBits = 10;
      v152._object = (void *)0xE100000000000000;
      sub_100534E80(v152);
      sub_100534E80(v122);
      swift_bridgeObjectRelease();
    }
    v122._uint64_t countAndFlagsBits = 0;
    v122._object = (void *)0xE000000000000000;
    sub_1005361C0(16);
    swift_bridgeObjectRelease();
    strcpy((char *)&v122, "    weight : ");
    HIWORD(v122._object) = -4864;
    v127._uint64_t countAndFlagsBits = v17;
    type metadata accessor for SymbolWeight(0);
    v153._uint64_t countAndFlagsBits = sub_100534D70();
    sub_100534E80(v153);
    swift_bridgeObjectRelease();
    v154._uint64_t countAndFlagsBits = 10;
    v154._object = (void *)0xE100000000000000;
    sub_100534E80(v154);
    sub_100534E80(v122);
    swift_bridgeObjectRelease();
    strcpy((char *)&v122, "    scale : ");
    BYTE5(v122._object) = 0;
    HIWORD(v122._object) = -5120;
    v127._uint64_t countAndFlagsBits = v112;
    type metadata accessor for SymbolScale(0);
    v155._uint64_t countAndFlagsBits = sub_100534D70();
    sub_100534E80(v155);
    swift_bridgeObjectRelease();
    v156._uint64_t countAndFlagsBits = 10;
    v156._object = (void *)0xE100000000000000;
    sub_100534E80(v156);
    sub_100534E80(v122);
    swift_bridgeObjectRelease();
    char v25 = v113;
    if (v113 != 255)
    {
      v122._uint64_t countAndFlagsBits = 0;
      v122._object = (void *)0xE000000000000000;
      sub_1005361C0(16);
      swift_bridgeObjectRelease();
      strcpy((char *)&v127, "    offset : ");
      HIWORD(v127._object) = -4864;
      v122._uint64_t countAndFlagsBits = v110;
      v122._object = v109;
      LOBYTE(v123) = v25 & 1;
      sub_10000BB04(&qword_100678F90);
      v157._uint64_t countAndFlagsBits = sub_100534D70();
      sub_100534E80(v157);
      swift_bridgeObjectRelease();
      v158._uint64_t countAndFlagsBits = 10;
      v158._object = (void *)0xE100000000000000;
      sub_100534E80(v158);
      sub_100534E80(v127);
      swift_bridgeObjectRelease();
    }
    strcpy((char *)&v122, "    alpha : ");
    BYTE5(v122._object) = 0;
    HIWORD(v122._object) = -5120;
    v159._uint64_t countAndFlagsBits = sub_100535400();
    sub_100534E80(v159);
    swift_bridgeObjectRelease();
    v160._uint64_t countAndFlagsBits = 10;
    v160._object = (void *)0xE100000000000000;
    sub_100534E80(v160);
    sub_100534E80(v122);
    swift_bridgeObjectRelease();
    v122._uint64_t countAndFlagsBits = 0x746E697420202020;
    v122._object = (void *)0xEB00000000203A20;
    v127._uint64_t countAndFlagsBits = (uint64_t)v114;
    id v26 = v114;
    v161._uint64_t countAndFlagsBits = sub_100534D70();
    sub_100534E80(v161);
    swift_bridgeObjectRelease();
    v162._uint64_t countAndFlagsBits = 10;
    v162._object = (void *)0xE100000000000000;
    sub_100534E80(v162);
    sub_100534E80(v122);
    swift_bridgeObjectRelease();
    if (v18)
    {
      v122._uint64_t countAndFlagsBits = 0;
      v122._object = (void *)0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1005361C0(27);
      swift_bridgeObjectRelease();
      v122._uint64_t countAndFlagsBits = 0xD000000000000018;
      v122._object = (void *)0x8000000100566FC0;
      v163._uint64_t countAndFlagsBits = v111;
      v163._object = v18;
      sub_100534E80(v163);
      swift_bridgeObjectRelease();
      v164._uint64_t countAndFlagsBits = 10;
      v164._object = (void *)0xE100000000000000;
      sub_100534E80(v164);
      sub_100534E80(v122);
      swift_bridgeObjectRelease();
    }
    v165._uint64_t countAndFlagsBits = 687392;
    v165._object = (void *)0xE300000000000000;
    sub_100534E80(v165);
  }
  else
  {
    v166._object = (void *)0x8000000100566CC0;
    v166._uint64_t countAndFlagsBits = 0x1000000000000012;
    sub_100534E80(v166);
  }
  BOOL v27 = *(void **)(v1 + 128);
  if (v27)
  {
    uint64_t v28 = *(void **)(v1 + 160);
    uint64_t v113 = *(void *)(v1 + 152);
    LODWORD(v114) = *(unsigned __int8 *)(v1 + 184);
    uint64_t v29 = *(void **)(v1 + 176);
    uint64_t v30 = *(void *)(v1 + 144);
    uint64_t v31 = *(void **)(v1 + 136);
    uint64_t v32 = *(void *)(v1 + 120);
    swift_bridgeObjectRetain();
    v167._object = (void *)0xAD00000A7B20656CLL;
    v167._uint64_t countAndFlagsBits = 0x746954209480E220;
    sub_100534E80(v167);
    v122._uint64_t countAndFlagsBits = 0x7478657420202020;
    v122._object = (void *)0xEB00000000203A20;
    v168._uint64_t countAndFlagsBits = v32;
    v168._object = v27;
    sub_100534E80(v168);
    swift_bridgeObjectRelease();
    v169._uint64_t countAndFlagsBits = 10;
    v169._object = (void *)0xE100000000000000;
    sub_100534E80(v169);
    sub_100534E80(v122);
    swift_bridgeObjectRelease();
    strcpy((char *)&v122, "    style : ");
    BYTE5(v122._object) = 0;
    HIWORD(v122._object) = -5120;
    v127._uint64_t countAndFlagsBits = (uint64_t)v31;
    type metadata accessor for TextStyle(0);
    id v33 = v31;
    v170._uint64_t countAndFlagsBits = sub_100534D70();
    sub_100534E80(v170);
    swift_bridgeObjectRelease();
    v171._uint64_t countAndFlagsBits = 10;
    v171._object = (void *)0xE100000000000000;
    sub_100534E80(v171);
    sub_100534E80(v122);
    swift_bridgeObjectRelease();
    v122._uint64_t countAndFlagsBits = 0;
    v122._object = (void *)0xE000000000000000;
    sub_1005361C0(16);
    swift_bridgeObjectRelease();
    strcpy((char *)&v122, "    weight : ");
    HIWORD(v122._object) = -4864;
    v127._uint64_t countAndFlagsBits = v30;
    type metadata accessor for Weight(0);
    v172._uint64_t countAndFlagsBits = sub_100534D70();
    sub_100534E80(v172);
    swift_bridgeObjectRelease();
    v173._uint64_t countAndFlagsBits = 10;
    v173._object = (void *)0xE100000000000000;
    sub_100534E80(v173);
    sub_100534E80(v122);
    swift_bridgeObjectRelease();
    strcpy((char *)&v122, "    alpha : ");
    BYTE5(v122._object) = 0;
    HIWORD(v122._object) = -5120;
    v174._uint64_t countAndFlagsBits = sub_100535400();
    sub_100534E80(v174);
    swift_bridgeObjectRelease();
    v175._uint64_t countAndFlagsBits = 10;
    v175._object = (void *)0xE100000000000000;
    sub_100534E80(v175);
    sub_100534E80(v122);
    swift_bridgeObjectRelease();
    v122._uint64_t countAndFlagsBits = 0x746E697420202020;
    v122._object = (void *)0xEB00000000203A20;
    v127._uint64_t countAndFlagsBits = (uint64_t)v29;
    id v34 = v29;
    v176._uint64_t countAndFlagsBits = sub_100534D70();
    sub_100534E80(v176);
    swift_bridgeObjectRelease();
    v177._uint64_t countAndFlagsBits = 10;
    v177._object = (void *)0xE100000000000000;
    sub_100534E80(v177);
    sub_100534E80(v122);
    swift_bridgeObjectRelease();
    v122._uint64_t countAndFlagsBits = 0;
    v122._object = (void *)0xE000000000000000;
    sub_1005361C0(16);
    swift_bridgeObjectRelease();
    strcpy((char *)&v122, "    hidden : ");
    HIWORD(v122._object) = -4864;
    if (v114) {
      v35._uint64_t countAndFlagsBits = 1702195828;
    }
    else {
      v35._uint64_t countAndFlagsBits = 0x65736C6166;
    }
    if (v114) {
      uint64_t v36 = (void *)0xE400000000000000;
    }
    else {
      uint64_t v36 = (void *)0xE500000000000000;
    }
    v35._object = v36;
    sub_100534E80(v35);
    swift_bridgeObjectRelease();
    v178._uint64_t countAndFlagsBits = 10;
    v178._object = (void *)0xE100000000000000;
    sub_100534E80(v178);
    sub_100534E80(v122);
    swift_bridgeObjectRelease();
    if (v28)
    {
      v122._uint64_t countAndFlagsBits = 0;
      v122._object = (void *)0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1005361C0(27);
      swift_bridgeObjectRelease();
      v122._uint64_t countAndFlagsBits = 0xD000000000000018;
      v122._object = (void *)0x8000000100566FC0;
      v179._uint64_t countAndFlagsBits = v113;
      v179._object = v28;
      sub_100534E80(v179);
      swift_bridgeObjectRelease();
      v180._uint64_t countAndFlagsBits = 10;
      v180._object = (void *)0xE100000000000000;
      sub_100534E80(v180);
      sub_100534E80(v122);
      swift_bridgeObjectRelease();
    }
    v37._uint64_t countAndFlagsBits = 687392;
    v37._object = (void *)0xE300000000000000;
  }
  else
  {
    v37._uint64_t countAndFlagsBits = 0x1000000000000011;
    v37._object = (void *)0x8000000100566CE0;
  }
  sub_100534E80(v37);
  char v38 = *(void **)(v1 + 200);
  if (v38 == (void *)1)
  {
    v181._uint64_t countAndFlagsBits = 0x1000000000000016;
    v181._object = (void *)0x8000000100566D00;
    sub_100534E80(v181);
  }
  else
  {
    uint64_t v40 = *(void *)(v1 + 208);
    uint64_t v39 = *(void **)(v1 + 216);
    swift_bridgeObjectRetain();
    id v41 = v38;
    v182._object = (void *)0x8000000100566FA0;
    v182._uint64_t countAndFlagsBits = 0x1000000000000012;
    sub_100534E80(v182);
    strcpy((char *)&v122, "    alpha : ");
    BYTE5(v122._object) = 0;
    HIWORD(v122._object) = -5120;
    v183._uint64_t countAndFlagsBits = sub_100535400();
    sub_100534E80(v183);
    swift_bridgeObjectRelease();
    v184._uint64_t countAndFlagsBits = 10;
    v184._object = (void *)0xE100000000000000;
    sub_100534E80(v184);
    sub_100534E80(v122);
    swift_bridgeObjectRelease();
    v122._uint64_t countAndFlagsBits = 0x746E697420202020;
    v122._object = (void *)0xEB00000000203A20;
    v127._uint64_t countAndFlagsBits = (uint64_t)v38;
    id v42 = v41;
    v185._uint64_t countAndFlagsBits = sub_100534D70();
    sub_100534E80(v185);
    swift_bridgeObjectRelease();
    v186._uint64_t countAndFlagsBits = 10;
    v186._object = (void *)0xE100000000000000;
    sub_100534E80(v186);
    sub_100534E80(v122);
    swift_bridgeObjectRelease();
    if (v39)
    {
      v122._uint64_t countAndFlagsBits = 0;
      v122._object = (void *)0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1005361C0(27);
      swift_bridgeObjectRelease();
      v122._uint64_t countAndFlagsBits = 0xD000000000000018;
      v122._object = (void *)0x8000000100566FC0;
      v187._uint64_t countAndFlagsBits = v40;
      v187._object = v39;
      sub_100534E80(v187);
      swift_bridgeObjectRelease();
      v188._uint64_t countAndFlagsBits = 10;
      v188._object = (void *)0xE100000000000000;
      sub_100534E80(v188);
      sub_100534E80(v122);
      swift_bridgeObjectRelease();
    }
    v189._uint64_t countAndFlagsBits = 687392;
    v189._object = (void *)0xE300000000000000;
    sub_100534E80(v189);
    swift_bridgeObjectRelease();
  }
  uint64_t v43 = *(void **)(v1 + 288);
  if (v43)
  {
    int v44 = *(_DWORD *)(v1 + 280);
    uint64_t v45 = *(void *)(v1 + 272);
    v122._uint64_t countAndFlagsBits = 0;
    v122._object = (void *)0xE000000000000000;
    id v46 = v43;
    sub_1005361C0(17);
    swift_bridgeObjectRelease();
    v127._uint64_t countAndFlagsBits = 0x726F42209480E220;
    v127._object = (void *)0xAE00203A20726564;
    v122._uint64_t countAndFlagsBits = v45;
    LOBYTE(v122._object) = v44 & 1;
    *(void *)&long long v123 = v46;
    id v47 = v46;
    v190._uint64_t countAndFlagsBits = sub_100534D70();
    sub_100534E80(v190);
    swift_bridgeObjectRelease();
    v191._uint64_t countAndFlagsBits = 10;
    v191._object = (void *)0xE100000000000000;
    sub_100534E80(v191);
    sub_100534E80(v127);

    swift_bridgeObjectRelease();
  }
  else
  {
    v192._object = (void *)0x8000000100566D20;
    v192._uint64_t countAndFlagsBits = 0x1000000000000012;
    sub_100534E80(v192);
  }
  uint64_t v48 = v121;
  uint64_t v49 = v117;
  sub_1003CAAB0(v1 + v121[9], v117);
  id v51 = v118;
  id v50 = v119;
  if (((unsigned int (*)(uint64_t, uint64_t, id))v118[6])(v49, 1, v119) == 1)
  {
    sub_1003CAB18(v49);
    v193._object = (void *)0x8000000100566D40;
    v193._uint64_t countAndFlagsBits = 0x1000000000000012;
    sub_100534E80(v193);
  }
  else
  {
    id v52 = v116;
    v51[4](v116, v49, v50);
    v122._uint64_t countAndFlagsBits = 0;
    v122._object = (void *)0xE000000000000000;
    sub_1005361C0(17);
    swift_bridgeObjectRelease();
    v122._uint64_t countAndFlagsBits = 0x726F43209480E220;
    v122._object = (void *)0xAE00203A2072656ELL;
    v51[2](v115, (uint64_t)v52, v50);
    v194._uint64_t countAndFlagsBits = sub_100534D70();
    sub_100534E80(v194);
    swift_bridgeObjectRelease();
    v195._uint64_t countAndFlagsBits = 10;
    v195._object = (void *)0xE100000000000000;
    sub_100534E80(v195);
    sub_100534E80(v122);
    swift_bridgeObjectRelease();
    ((void (*)(char *, id))v51[1])(v52, v50);
  }
  uint64_t v53 = *(void **)(v1 + 224);
  if (v53 == (void *)1)
  {
    v196._uint64_t countAndFlagsBits = 0x1000000000000014;
    v196._object = (void *)0x8000000100566D60;
    sub_100534E80(v196);
  }
  else
  {
    uint64_t v55 = *(void **)(v1 + 232);
    uint64_t v54 = *(void **)(v1 + 240);
    os_log_type_t v56 = *(void **)(v1 + 264);
    uint64_t v117 = *(void *)(v1 + 256);
    uint64_t v57 = *(unsigned __int8 *)(v1 + 248);
    swift_bridgeObjectRetain();
    id v58 = v53;
    id v119 = v55;
    uint64_t v118 = v54;
    v197._uint64_t countAndFlagsBits = 0x1000000000000010;
    v197._object = (void *)0x8000000100566F20;
    sub_100534E80(v197);
    if (v53)
    {
      v122._uint64_t countAndFlagsBits = 0;
      v122._object = (void *)0xE000000000000000;
      id v59 = v58;
      sub_1005361C0(26);
      swift_bridgeObjectRelease();
      v122._uint64_t countAndFlagsBits = 0xD000000000000017;
      v122._object = (void *)0x8000000100566F80;
      id v60 = v59;
      id v61 = [v60 description];
      uint64_t v62 = sub_100534CE0();
      int v64 = v63;

      v198._uint64_t countAndFlagsBits = v62;
      v198._object = v64;
      sub_100534E80(v198);
      swift_bridgeObjectRelease();
      v199._uint64_t countAndFlagsBits = 10;
      v199._object = (void *)0xE100000000000000;
      sub_100534E80(v199);
      sub_100534E80(v122);

      swift_bridgeObjectRelease();
    }
    if (v55)
    {
      v122._uint64_t countAndFlagsBits = 0;
      v122._object = (void *)0xE000000000000000;
      id v65 = v119;
      sub_1005361C0(26);
      swift_bridgeObjectRelease();
      v122._uint64_t countAndFlagsBits = 0xD000000000000017;
      v122._object = (void *)0x8000000100566F60;
      id v66 = v65;
      id v67 = [v66 description];
      uint64_t v68 = sub_100534CE0();
      uint64_t v70 = v69;

      v200._uint64_t countAndFlagsBits = v68;
      v200._object = v70;
      sub_100534E80(v200);
      swift_bridgeObjectRelease();
      v201._uint64_t countAndFlagsBits = 10;
      v201._object = (void *)0xE100000000000000;
      sub_100534E80(v201);
      sub_100534E80(v122);

      swift_bridgeObjectRelease();
    }
    if (v54)
    {
      v122._uint64_t countAndFlagsBits = 0;
      v122._object = (void *)0xE000000000000000;
      uint64_t v71 = v118;
      sub_1005361C0(23);
      swift_bridgeObjectRelease();
      v122._uint64_t countAndFlagsBits = 0xD000000000000014;
      v122._object = (void *)0x8000000100566F40;
      long long v72 = v71;
      id v73 = [v72 description];
      uint64_t v74 = sub_100534CE0();
      uint64_t v76 = v75;

      v202._uint64_t countAndFlagsBits = v74;
      v202._object = v76;
      sub_100534E80(v202);
      swift_bridgeObjectRelease();
      v203._uint64_t countAndFlagsBits = 10;
      v203._object = (void *)0xE100000000000000;
      sub_100534E80(v203);
      sub_100534E80(v122);

      swift_bridgeObjectRelease();
    }
    uint64_t v48 = v121;
    if (v57 != 2)
    {
      strcpy((char *)&v122, "    color : ");
      BYTE5(v122._object) = 0;
      HIWORD(v122._object) = -5120;
      LOBYTE(v127._countAndFlagsBits) = v57 & 1;
      v204._uint64_t countAndFlagsBits = sub_100534D70();
      sub_100534E80(v204);
      swift_bridgeObjectRelease();
      v205._uint64_t countAndFlagsBits = 10;
      v205._object = (void *)0xE100000000000000;
      sub_100534E80(v205);
      sub_100534E80(v122);
      swift_bridgeObjectRelease();
    }
    if (v56)
    {
      strcpy((char *)&v122, "    group : ");
      BYTE5(v122._object) = 0;
      HIWORD(v122._object) = -5120;
      swift_bridgeObjectRetain();
      v206._uint64_t countAndFlagsBits = v117;
      v206._object = v56;
      sub_100534E80(v206);
      swift_bridgeObjectRelease();
      v207._uint64_t countAndFlagsBits = 10;
      v207._object = (void *)0xE100000000000000;
      sub_100534E80(v207);
      sub_100534E80(v122);
      swift_bridgeObjectRelease();
    }
    v208._uint64_t countAndFlagsBits = 687392;
    v208._object = (void *)0xE300000000000000;
    sub_100534E80(v208);
    swift_bridgeObjectRelease();
  }
  uint64_t v77 = v1 + v48[10];
  id v78 = *(void **)v77;
  if (*(void *)v77)
  {
    uint64_t v80 = *(void *)(v77 + 40);
    uint64_t v79 = *(void **)(v77 + 48);
    uint64_t v82 = *(void *)(v77 + 24);
    uint64_t v81 = *(void *)(v77 + 32);
    uint64_t v83 = *(void **)(v77 + 8);
    uint64_t v84 = *(void *)(v77 + 16);
    v122._uint64_t countAndFlagsBits = 0;
    v122._object = (void *)0xE000000000000000;
    sub_1003CAB88(v78, (uint64_t)v83, v84, v82, v81, v80, v79);
    sub_1005361C0(22);
    swift_bridgeObjectRelease();
    v127._uint64_t countAndFlagsBits = 0x1000000000000013;
    v127._object = (void *)0x8000000100566F00;
    v122._uint64_t countAndFlagsBits = (uint64_t)v78;
    v122._object = v83;
    *(void *)&long long v123 = v84;
    *((void *)&v123 + 1) = v82;
    uint64_t v124 = v81;
    uint64_t v125 = v80;
    uint64_t v126 = v79;
    id v85 = v79;
    id v86 = v78;
    v209._uint64_t countAndFlagsBits = sub_100534D70();
    sub_100534E80(v209);
    swift_bridgeObjectRelease();
    v210._uint64_t countAndFlagsBits = 10;
    v210._object = (void *)0xE100000000000000;
    sub_100534E80(v210);
    sub_100534E80(v127);
    swift_bridgeObjectRelease();
    uint64_t v87 = v80;
    uint64_t v48 = v121;
    sub_1003C06A8(v78, (uint64_t)v83, v84, v82, v81, v87, v79);
  }
  else
  {
    v211._uint64_t countAndFlagsBits = 0x1000000000000017;
    v211._object = (void *)0x8000000100566D80;
    sub_100534E80(v211);
  }
  uint64_t v88 = (uint64_t *)(v1 + v48[11]);
  uint64_t v89 = (void *)v88[2];
  if (v89 == (void *)1)
  {
    v212._uint64_t countAndFlagsBits = 0x1000000000000011;
    v212._object = (void *)0x8000000100566DA0;
    sub_100534E80(v212);
  }
  else
  {
    uint64_t v91 = *v88;
    uint64_t v90 = v88[1];
    id v92 = v89;
    v213._uint64_t countAndFlagsBits = 0x646142209480E220;
    v213._object = (void *)0xAD00000A7B206567;
    sub_100534E80(v213);
    v122._uint64_t countAndFlagsBits = 0;
    v122._object = (void *)0xE000000000000000;
    sub_1005361C0(23);
    swift_bridgeObjectRelease();
    v122._uint64_t countAndFlagsBits = 0xD000000000000014;
    v122._object = (void *)0x8000000100566EE0;
    v214._uint64_t countAndFlagsBits = sub_100535400();
    sub_100534E80(v214);
    swift_bridgeObjectRelease();
    v215._uint64_t countAndFlagsBits = 10;
    v215._object = (void *)0xE100000000000000;
    sub_100534E80(v215);
    sub_100534E80(v122);
    swift_bridgeObjectRelease();
    strcpy((char *)&v122, "    alpha : ");
    BYTE5(v122._object) = 0;
    HIWORD(v122._object) = -5120;
    v216._uint64_t countAndFlagsBits = sub_100535400();
    sub_100534E80(v216);
    swift_bridgeObjectRelease();
    v217._uint64_t countAndFlagsBits = 10;
    v217._object = (void *)0xE100000000000000;
    sub_100534E80(v217);
    sub_100534E80(v122);
    swift_bridgeObjectRelease();
    v122._uint64_t countAndFlagsBits = 0x746E697420202020;
    v122._object = (void *)0xEB00000000203A20;
    v127._uint64_t countAndFlagsBits = (uint64_t)v89;
    id v93 = v92;
    v218._uint64_t countAndFlagsBits = sub_100534D70();
    sub_100534E80(v218);
    swift_bridgeObjectRelease();
    v219._uint64_t countAndFlagsBits = 10;
    v219._object = (void *)0xE100000000000000;
    sub_100534E80(v219);
    sub_100534E80(v122);
    swift_bridgeObjectRelease();
    v220._uint64_t countAndFlagsBits = 687392;
    v220._object = (void *)0xE300000000000000;
    sub_100534E80(v220);
    sub_1003CAB78(v91, v90, (uint64_t)v89);
  }
  uint64_t v94 = (unsigned __int8 *)(v1 + v121[16]);
  int v95 = *v94;
  uint64_t v96 = (void *)*((void *)v94 + 1);
  uint64_t v97 = (void *)*((void *)v94 + 2);
  int v98 = v94[24];
  v221._uint64_t countAndFlagsBits = 0x1000000000000015;
  v221._object = (void *)0x8000000100566DC0;
  sub_100534E80(v221);
  v122._uint64_t countAndFlagsBits = 0;
  v122._object = (void *)0xE000000000000000;
  sub_1005361C0(30);
  swift_bridgeObjectRelease();
  v122._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v122._object = (void *)0x8000000100566DE0;
  if (v95) {
    v99._uint64_t countAndFlagsBits = 1702195828;
  }
  else {
    v99._uint64_t countAndFlagsBits = 0x65736C6166;
  }
  if (v95) {
    uint64_t v100 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v100 = (void *)0xE500000000000000;
  }
  v99._object = v100;
  sub_100534E80(v99);
  swift_bridgeObjectRelease();
  v222._uint64_t countAndFlagsBits = 10;
  v222._object = (void *)0xE100000000000000;
  sub_100534E80(v222);
  sub_100534E80(v122);
  swift_bridgeObjectRelease();
  if (v96)
  {
    v122._uint64_t countAndFlagsBits = 0;
    v122._object = (void *)0xE000000000000000;
    id v101 = v96;
    sub_1005361C0(36);
    swift_bridgeObjectRelease();
    v122._uint64_t countAndFlagsBits = 0xD000000000000021;
    v122._object = (void *)0x8000000100566EB0;
    v127._uint64_t countAndFlagsBits = (uint64_t)v101;
    type metadata accessor for UIContentSizeCategory(0);
    id v102 = v101;
    v223._uint64_t countAndFlagsBits = sub_100534D70();
    sub_100534E80(v223);
    swift_bridgeObjectRelease();
    v224._uint64_t countAndFlagsBits = 10;
    v224._object = (void *)0xE100000000000000;
    sub_100534E80(v224);
    sub_100534E80(v122);

    swift_bridgeObjectRelease();
    if (v97)
    {
LABEL_72:
      v122._uint64_t countAndFlagsBits = 0;
      v122._object = (void *)0xE000000000000000;
      id v103 = v97;
      sub_1005361C0(36);
      swift_bridgeObjectRelease();
      v122._uint64_t countAndFlagsBits = 0xD000000000000021;
      v122._object = (void *)0x8000000100566E80;
      v127._uint64_t countAndFlagsBits = (uint64_t)v103;
      type metadata accessor for UIContentSizeCategory(0);
      id v104 = v103;
      v225._uint64_t countAndFlagsBits = sub_100534D70();
      sub_100534E80(v225);
      swift_bridgeObjectRelease();
      v226._uint64_t countAndFlagsBits = 10;
      v226._object = (void *)0xE100000000000000;
      sub_100534E80(v226);
      sub_100534E80(v122);

      swift_bridgeObjectRelease();
      goto LABEL_75;
    }
  }
  else
  {
    v227._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
    v227._object = (void *)0x8000000100566E00;
    sub_100534E80(v227);
    if (v97) {
      goto LABEL_72;
    }
  }
  v228._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  v228._object = (void *)0x8000000100566E30;
  sub_100534E80(v228);
LABEL_75:
  v122._uint64_t countAndFlagsBits = 0;
  v122._object = (void *)0xE000000000000000;
  sub_1005361C0(33);
  swift_bridgeObjectRelease();
  v122._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v122._object = (void *)0x8000000100566E60;
  if (v98) {
    v105._uint64_t countAndFlagsBits = 1702195828;
  }
  else {
    v105._uint64_t countAndFlagsBits = 0x65736C6166;
  }
  if (v98) {
    uint64_t v106 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v106 = (void *)0xE500000000000000;
  }
  v105._object = v106;
  sub_100534E80(v105);
  swift_bridgeObjectRelease();
  v229._uint64_t countAndFlagsBits = 10;
  v229._object = (void *)0xE100000000000000;
  sub_100534E80(v229);
  sub_100534E80(v122);
  swift_bridgeObjectRelease();
  v230._uint64_t countAndFlagsBits = 687392;
  v230._object = (void *)0xE300000000000000;
  sub_100534E80(v230);
  v231._uint64_t countAndFlagsBits = 41;
  v231._object = (void *)0xE100000000000000;
  sub_100534E80(v231);
  return v128;
}

uint64_t sub_1003CAAB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000BB04(&qword_100678A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003CAB18(uint64_t a1)
{
  uint64_t v2 = sub_10000BB04(&qword_100678A80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003CAB78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1) {
    return _objc_release_x2();
  }
  return result;
}

id sub_1003CAB88(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  if (result)
  {
    id v8 = result;
    id v7 = a7;
    return v8;
  }
  return result;
}

uint64_t sub_1003CABCC(uint64_t a1)
{
  return sub_1003B94B0(a1, (uint64_t)sub_1003CABF4, (uint64_t)&unk_100633210, &static UIColor.MusicTint.normal);
}

id sub_1003CABF4(void *a1)
{
  id v2 = [a1 userInterfaceStyle];
  id v3 = [a1 accessibilityContrast];
  id v4 = v3;
  if (!v2) {
    goto LABEL_6;
  }
  if (v2 == (id)2)
  {
    sub_1003CB884();
    double v5 = 1.0;
    uint64_t v6 = 250;
    if (v4 == (id)1)
    {
      uint64_t v7 = 88;
      uint64_t v8 = 106;
    }
    else
    {
      uint64_t v7 = 45;
      uint64_t v8 = 72;
    }
    return UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(v6, v7, v8, v5);
  }
  if (v2 == (id)1)
  {
LABEL_6:
    if (v3 == (id)1)
    {
      sub_1003CB884();
      double v5 = 1.0;
      uint64_t v6 = 204;
      uint64_t v7 = 0;
      uint64_t v8 = 20;
    }
    else
    {
      sub_1003CB884();
      double v5 = 1.0;
      uint64_t v6 = 250;
      uint64_t v7 = 35;
      uint64_t v8 = 59;
    }
    return UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(v6, v7, v8, v5);
  }
  id result = (id)sub_1005363F0();
  __break(1u);
  return result;
}

uint64_t *UIColor.MusicTint.normal.unsafeMutableAddressor()
{
  if (qword_1006703E8 != -1) {
    swift_once();
  }
  return &static UIColor.MusicTint.normal;
}

id static UIColor.MusicTint.normal.getter()
{
  return sub_1001C49B4(&qword_1006703E8, (void **)&static UIColor.MusicTint.normal);
}

uint64_t sub_1003CAD8C(uint64_t a1)
{
  return sub_1003B94B0(a1, (uint64_t)sub_1003CADB4, (uint64_t)&unk_1006331E8, &static UIColor.MusicTint.rollover);
}

id sub_1003CADB4(void *a1)
{
  id v2 = [a1 userInterfaceStyle];
  id v3 = [a1 accessibilityContrast];
  id v4 = v3;
  if (!v2) {
    goto LABEL_6;
  }
  if (v2 == (id)2)
  {
    sub_1003CB884();
    double v5 = 1.0;
    uint64_t v6 = 255;
    if (v4 == (id)1)
    {
      uint64_t v7 = 138;
      uint64_t v8 = 156;
    }
    else
    {
      uint64_t v7 = 95;
      uint64_t v8 = 122;
    }
    return UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(v6, v7, v8, v5);
  }
  if (v2 == (id)1)
  {
LABEL_6:
    if (v3 == (id)1)
    {
      sub_1003CB884();
      double v5 = 1.0;
      uint64_t v6 = 162;
      uint64_t v7 = 0;
      uint64_t v8 = 0;
    }
    else
    {
      sub_1003CB884();
      double v5 = 1.0;
      uint64_t v6 = 198;
      uint64_t v7 = 0;
      uint64_t v8 = 7;
    }
    return UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(v6, v7, v8, v5);
  }
  id result = (id)sub_1005363F0();
  __break(1u);
  return result;
}

void *UIColor.MusicTint.rollover.unsafeMutableAddressor()
{
  if (qword_1006703F0 != -1) {
    swift_once();
  }
  return &static UIColor.MusicTint.rollover;
}

id static UIColor.MusicTint.rollover.getter()
{
  return sub_1001C49B4(&qword_1006703F0, (void **)&static UIColor.MusicTint.rollover);
}

uint64_t sub_1003CAF4C(uint64_t a1)
{
  return sub_1003B94B0(a1, (uint64_t)sub_1003CAF74, (uint64_t)&unk_1006331C0, &static UIColor.MusicTint.pressed);
}

id sub_1003CAF74(void *a1)
{
  id v2 = [a1 userInterfaceStyle];
  id v3 = [a1 accessibilityContrast];
  id v4 = v3;
  if (!v2) {
    goto LABEL_6;
  }
  if (v2 == (id)2)
  {
    sub_1003CB884();
    double v5 = 1.0;
    uint64_t v6 = 255;
    if (v4 == (id)1)
    {
      uint64_t v7 = 113;
      uint64_t v8 = 131;
    }
    else
    {
      uint64_t v7 = 70;
      uint64_t v8 = 97;
    }
    return UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(v6, v7, v8, v5);
  }
  if (v2 == (id)1)
  {
LABEL_6:
    if (v3 == (id)1)
    {
      sub_1003CB884();
      double v5 = 1.0;
      uint64_t v6 = 187;
      uint64_t v7 = 0;
      uint64_t v8 = 0;
    }
    else
    {
      sub_1003CB884();
      double v5 = 1.0;
      uint64_t v6 = 224;
      uint64_t v7 = 9;
      uint64_t v8 = 33;
    }
    return UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(v6, v7, v8, v5);
  }
  id result = (id)sub_1005363F0();
  __break(1u);
  return result;
}

uint64_t *UIColor.MusicTint.pressed.unsafeMutableAddressor()
{
  if (qword_1006703F8 != -1) {
    swift_once();
  }
  return &static UIColor.MusicTint.pressed;
}

id static UIColor.MusicTint.pressed.getter()
{
  return sub_1001C49B4(&qword_1006703F8, (void **)&static UIColor.MusicTint.pressed);
}

uint64_t sub_1003CB10C(uint64_t a1)
{
  return sub_1003B94B0(a1, (uint64_t)sub_1003CB134, (uint64_t)&unk_100633198, &static UIColor.MusicTint.deepPressed);
}

id sub_1003CB134(void *a1)
{
  id v2 = [a1 userInterfaceStyle];
  id v3 = [a1 accessibilityContrast];
  id v4 = v3;
  if (!v2) {
    goto LABEL_6;
  }
  if (v2 == (id)2)
  {
    sub_1003CB884();
    double v5 = 1.0;
    uint64_t v6 = 255;
    if (v4 == (id)1)
    {
      uint64_t v7 = 138;
      uint64_t v8 = 156;
    }
    else
    {
      uint64_t v7 = 95;
      uint64_t v8 = 122;
    }
    return UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(v6, v7, v8, v5);
  }
  if (v2 == (id)1)
  {
LABEL_6:
    if (v3 == (id)1)
    {
      sub_1003CB884();
      double v5 = 1.0;
      uint64_t v6 = 162;
      uint64_t v7 = 0;
      uint64_t v8 = 0;
    }
    else
    {
      sub_1003CB884();
      double v5 = 1.0;
      uint64_t v6 = 198;
      uint64_t v7 = 0;
      uint64_t v8 = 7;
    }
    return UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(v6, v7, v8, v5);
  }
  id result = (id)sub_1005363F0();
  __break(1u);
  return result;
}

void *UIColor.MusicTint.deepPressed.unsafeMutableAddressor()
{
  if (qword_100670400 != -1) {
    swift_once();
  }
  return &static UIColor.MusicTint.deepPressed;
}

id static UIColor.MusicTint.deepPressed.getter()
{
  return sub_1001C49B4(&qword_100670400, (void **)&static UIColor.MusicTint.deepPressed);
}

uint64_t sub_1003CB2CC(uint64_t a1)
{
  return sub_1003B94B0(a1, (uint64_t)sub_1003CB2F4, (uint64_t)&unk_100633170, &static UIColor.MusicTint.disabled);
}

id sub_1003CB2F4(void *a1)
{
  id v2 = [a1 userInterfaceStyle];
  id v3 = [a1 accessibilityContrast];
  id v4 = v3;
  if (!v2) {
    goto LABEL_6;
  }
  if (v2 == (id)2)
  {
    sub_1003CB884();
    uint64_t v5 = 250;
    if (v4 == (id)1)
    {
      uint64_t v6 = 88;
      uint64_t v7 = 106;
    }
    else
    {
      uint64_t v6 = 45;
      uint64_t v7 = 72;
    }
    return UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(v5, v6, v7, 0.35);
  }
  if (v2 == (id)1)
  {
LABEL_6:
    if (v3 == (id)1)
    {
      sub_1003CB884();
      uint64_t v5 = 214;
      uint64_t v6 = 0;
      uint64_t v7 = 23;
    }
    else
    {
      sub_1003CB884();
      uint64_t v5 = 250;
      uint64_t v6 = 35;
      uint64_t v7 = 59;
    }
    return UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(v5, v6, v7, 0.35);
  }
  id result = (id)sub_1005363F0();
  __break(1u);
  return result;
}

void *UIColor.MusicTint.disabled.unsafeMutableAddressor()
{
  if (qword_100670408 != -1) {
    swift_once();
  }
  return &static UIColor.MusicTint.disabled;
}

id static UIColor.MusicTint.disabled.getter()
{
  return sub_1001C49B4(&qword_100670408, (void **)&static UIColor.MusicTint.disabled);
}

uint64_t sub_1003CB4A4(uint64_t a1)
{
  return sub_1003CB740(a1, &qword_1006703E8, (id *)&static UIColor.MusicTint.normal, &static Color.MusicTint.normal);
}

uint64_t *Color.MusicTint.normal.unsafeMutableAddressor()
{
  if (qword_100670410 != -1) {
    swift_once();
  }
  return &static Color.MusicTint.normal;
}

uint64_t static Color.MusicTint.normal.getter()
{
  return sub_1003CB800(&qword_100670410);
}

uint64_t sub_1003CB540(uint64_t a1)
{
  return sub_1003CB740(a1, &qword_1006703F0, (id *)&static UIColor.MusicTint.rollover, &static Color.MusicTint.rollover);
}

uint64_t *Color.MusicTint.rollover.unsafeMutableAddressor()
{
  if (qword_100670418 != -1) {
    swift_once();
  }
  return &static Color.MusicTint.rollover;
}

uint64_t static Color.MusicTint.rollover.getter()
{
  return sub_1003CB800(&qword_100670418);
}

uint64_t sub_1003CB5DC(uint64_t a1)
{
  return sub_1003CB740(a1, &qword_1006703F8, (id *)&static UIColor.MusicTint.pressed, &static Color.MusicTint.pressed);
}

uint64_t *Color.MusicTint.pressed.unsafeMutableAddressor()
{
  if (qword_100670420 != -1) {
    swift_once();
  }
  return &static Color.MusicTint.pressed;
}

uint64_t static Color.MusicTint.pressed.getter()
{
  return sub_1003CB800(&qword_100670420);
}

uint64_t sub_1003CB678(uint64_t a1)
{
  return sub_1003CB740(a1, &qword_100670400, (id *)&static UIColor.MusicTint.deepPressed, &static Color.MusicTint.deepPressed);
}

uint64_t *Color.MusicTint.deepPressed.unsafeMutableAddressor()
{
  if (qword_100670428 != -1) {
    swift_once();
  }
  return &static Color.MusicTint.deepPressed;
}

uint64_t static Color.MusicTint.deepPressed.getter()
{
  return sub_1003CB800(&qword_100670428);
}

uint64_t sub_1003CB714(uint64_t a1)
{
  return sub_1003CB740(a1, &qword_100670408, (id *)&static UIColor.MusicTint.disabled, &static Color.MusicTint.disabled);
}

uint64_t sub_1003CB740(uint64_t a1, void *a2, id *a3, uint64_t *a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  id v6 = *a3;
  uint64_t result = sub_100532C00();
  *a4 = result;
  return result;
}

uint64_t *Color.MusicTint.disabled.unsafeMutableAddressor()
{
  if (qword_100670430 != -1) {
    swift_once();
  }
  return &static Color.MusicTint.disabled;
}

uint64_t static Color.MusicTint.disabled.getter()
{
  return sub_1003CB800(&qword_100670430);
}

uint64_t sub_1003CB800(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }

  return swift_retain();
}

ValueMetadata *type metadata accessor for UIColor.MusicTint()
{
  return &type metadata for UIColor.MusicTint;
}

ValueMetadata *type metadata accessor for Color.MusicTint()
{
  return &type metadata for Color.MusicTint;
}

uint64_t sub_1003CB86C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003CB87C()
{
  return swift_release();
}

unint64_t sub_1003CB884()
{
  unint64_t result = qword_100678F40;
  if (!qword_100678F40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100678F40);
  }
  return result;
}

UITraitCollection __swiftcall UITraitCollection.init(mediaLibrary:)(MPMediaLibrary_optional mediaLibrary)
{
  Class isa = mediaLibrary.value.super.isa;
  sub_10000BB04(&qword_100671AE0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10053A390;
  id v3 = self;
  id v4 = isa;
  NSString v5 = sub_100534CA0();
  id v6 = [v3 _traitCollectionWithValue:v4 forTraitNamed:v5];

  if (v6)
  {
    uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    *(void *)(v2 + 32) = v6;
    sub_100535100();
    sub_100123DA4(0, &qword_100671448);
    Class v9 = sub_1005350C0().super.isa;
    swift_bridgeObjectRelease();
    id v10 = [ObjCClassFromMetadata traitCollectionWithTraitsFromCollections:v9];

    return (UITraitCollection)v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id UITraitCollection.mediaLibrary.getter()
{
  NSString v1 = sub_100534CA0();
  id v2 = [v0 _valueForTraitNamed:v1];

  if (v2)
  {
    sub_100536090();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_1003CBB48((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    sub_100123DA4(0, &qword_100671638);
    if (swift_dynamicCast()) {
      return (id)v4;
    }
  }
  else
  {
    sub_1003CBBB0((uint64_t)v6);
  }
  id result = [self deviceMediaLibrary];
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003CBB48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000BB04(&qword_100672CD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003CBBB0(uint64_t a1)
{
  uint64_t v2 = sub_10000BB04(&qword_100672CD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

UITraitCollection __swiftcall UITraitCollection.init(legacyLibraryFilter:)(__C::MPMediaLibraryFilteringOptions legacyLibraryFilter)
{
  sub_1003CBF94(legacyLibraryFilter.rawValue);
  return result;
}

__C::MPMediaLibraryFilteringOptions UITraitCollection.legacyLibraryFilter.getter()
{
  return sub_1003CC104();
}

BOOL UITraitCollection.isMediaPicker.getter()
{
  uint64_t v0 = (void *)UITraitCollection.mediaPickerConfiguration.getter();
  NSString v1 = v0;
  if (v0) {

  }
  return v1 != 0;
}

uint64_t UITraitCollection.mediaPickerConfiguration.getter()
{
  NSString v1 = sub_100534CA0();
  id v2 = [v0 _valueForTraitNamed:v1];

  if (v2)
  {
    sub_100536090();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_1003CBB48((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    sub_100123DA4(0, &qword_100671648);
    if (swift_dynamicCast()) {
      return v4;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1003CBBB0((uint64_t)v6);
    return 0;
  }
}

uint64_t UITraitCollection.init(mediaPickerConfiguration:)(void *a1)
{
  id v2 = self;
  id v3 = a1;
  NSString v4 = sub_100534CA0();
  id v5 = [v2 _traitCollectionWithValue:v3 forTraitNamed:v4];

  if (v5)
  {
    v6.rawValue = *(void *)MPMediaLibraryFilteringOptions.none.unsafeMutableAddressor();
    if (![v3 showsItemsWithProtectedAssets]) {
      v6.rawValue |= 0x20;
    }
    if (![v3 showsCloudItems]) {
      v6.rawValue |= 2;
    }
    sub_100123DA4(0, &qword_100671448);
    Class isa = UITraitCollection.init(mediaPickerLibraryFilter:)(v6).super.isa;
    uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    sub_10000BB04(&qword_100671AE0);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_10053DFD0;
    *(void *)(v9 + 32) = v5;
    *(void *)(v9 + 40) = isa;
    sub_100535100();
    id v10 = v5;
    unint64_t v11 = isa;
    Class v12 = sub_1005350C0().super.isa;
    swift_bridgeObjectRelease();
    id v13 = [ObjCClassFromMetadata traitCollectionWithTraitsFromCollections:v12];

    return (uint64_t)v13;
  }
  else
  {
    uint64_t result = sub_1005363F0();
    __break(1u);
  }
  return result;
}

UITraitCollection __swiftcall UITraitCollection.init(mediaPickerLibraryFilter:)(__C::MPMediaLibraryFilteringOptions mediaPickerLibraryFilter)
{
  sub_1003CBF94(mediaPickerLibraryFilter.rawValue);
  return result;
}

void sub_1003CBF94(uint64_t a1)
{
  sub_10000BB04(&qword_100671AE0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10053A390;
  id v3 = self;
  id v4 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInteger:a1];
  NSString v5 = sub_100534CA0();
  id v6 = [v3 _traitCollectionWithValue:v4 forTraitNamed:v5];

  if (v6)
  {
    uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    *(void *)(v2 + 32) = v6;
    sub_100535100();
    sub_100123DA4(0, &qword_100671448);
    Class isa = sub_1005350C0().super.isa;
    swift_bridgeObjectRelease();
    [ObjCClassFromMetadata traitCollectionWithTraitsFromCollections:isa];
  }
  else
  {
    __break(1u);
  }
}

__C::MPMediaLibraryFilteringOptions UITraitCollection.mediaPickerLibraryFilter.getter()
{
  return sub_1003CC104();
}

__C::MPMediaLibraryFilteringOptions sub_1003CC104()
{
  NSString v1 = sub_100534CA0();
  id v2 = [v0 _valueForTraitNamed:v1];

  if (v2)
  {
    sub_100536090();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1003CBB48((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    sub_100123DA4(0, &qword_100671640);
    if (swift_dynamicCast()) {
      v3.value.super.super.Class isa = v5;
    }
    else {
      v3.value.super.super.Class isa = 0;
    }
  }
  else
  {
    sub_1003CBBB0((uint64_t)v7);
    v3.value.super.super.Class isa = 0;
  }
  return MPMediaLibraryFilteringOptions.init(_:)(v3);
}

__C::MPMediaLibraryFilteringOptions UITraitCollection.combinedLibraryRequestFilter.getter()
{
  Swift::UInt rawValue = UITraitCollection.legacyLibraryFilter.getter().rawValue;
  return (__C::MPMediaLibraryFilteringOptions)(UITraitCollection.mediaPickerLibraryFilter.getter().rawValue | rawValue);
}

uint64_t UITraitCollection.configure<A, B>(libraryRequest:)(void *a1)
{
  id v2 = [a1 mediaLibrary];
  id v3 = UITraitCollection.mediaLibrary.getter();
  id v4 = v3;
  if (v2)
  {
    sub_100123DA4(0, &qword_100671638);
    id v5 = v2;
    char v6 = sub_100535D90();

    if (v6)
    {
      uint64_t v7 = 0;
      goto LABEL_6;
    }
  }
  else
  {
  }
  id v8 = UITraitCollection.mediaLibrary.getter();
  [a1 setMediaLibrary:v8];

  uint64_t v7 = 1;
LABEL_6:
  unint64_t v9 = (unint64_t)[a1 filteringOptions];
  Swift::UInt rawValue = UITraitCollection.legacyLibraryFilter.getter().rawValue;
  if (((UITraitCollection.mediaPickerLibraryFilter.getter().rawValue | rawValue) & ~v9) != 0)
  {
    Swift::UInt v11 = UITraitCollection.legacyLibraryFilter.getter().rawValue;
    [a1 setFilteringOptions:UITraitCollection.mediaPickerLibraryFilter.getter().rawValue | v11 | (unint64_t)[a1 filteringOptions]];
    return 1;
  }
  return v7;
}

unint64_t sub_1003CC358(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000BB04(&qword_100671700);
  id v2 = (void *)sub_1005364C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  id v4 = (unint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v7 = *(v4 - 1);
    unint64_t v8 = *v4;
    swift_bridgeObjectRetain();
    sub_10004A0A8(v7, v8);
    unint64_t result = sub_1001A1AC8(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    Swift::UInt v11 = (uint64_t *)(v2[6] + 16 * result);
    *Swift::UInt v11 = v5;
    v11[1] = v6;
    Class v12 = (uint64_t *)(v2[7] + 16 * result);
    *Class v12 = v7;
    v12[1] = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    _OWORD v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003CC480(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v8 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000BB04(a2);
  uint64_t v7 = sub_1005364C0();
  unint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100013720(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_1001A20AC(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003CC5B0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000BB04(&qword_1006716C8);
  id v2 = (void *)sub_1005364C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  id v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1001A1AC8(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    _OWORD v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003CC6CC(uint64_t a1)
{
  return sub_1003CC6E4(a1, &qword_1006716C0);
}

unint64_t sub_1003CC6D8(uint64_t a1)
{
  return sub_1003CC6E4(a1, &qword_1006716B8);
}

unint64_t sub_1003CC6E4(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000BB04(a2);
  uint64_t v3 = (void *)sub_1005364C0();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (uint64_t)*(v5 - 2);
    uint64_t v7 = (uint64_t)*(v5 - 1);
    unint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    id v9 = v8;
    unint64_t result = sub_1001A1AC8(v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v12 = (uint64_t *)(v3[6] + 16 * result);
    *BOOL v12 = v6;
    v12[1] = v7;
    *(void *)(v3[7] + 8 * result) = v9;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003CC7FC(uint64_t a1)
{
  return sub_1003CC480(a1, &qword_100671690, &qword_100671698, (uint64_t (*)(uint64_t))sub_1001AE40C);
}

unint64_t sub_1003CC824(uint64_t a1)
{
  return sub_1003CC480(a1, &qword_1006716A8, &qword_1006716B0, (uint64_t (*)(uint64_t))sub_1001AE40C);
}

unint64_t sub_1003CC84C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000BB04(&qword_1006716A0);
  id v2 = (void *)sub_1005364C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1001A1AC8(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    _OWORD v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003CC960(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000BB04(&qword_100671688);
  id v2 = (void *)sub_1005364C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (id *)(a1 + 40);
  while (1)
  {
    char v5 = *((unsigned char *)v4 - 8);
    id v6 = *v4;
    unint64_t result = sub_1003D9D00(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    _OWORD v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void static UIButton.Configuration.barButtonConfiguration(imageName:)()
{
  uint64_t v0 = sub_100535E20();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100535DE0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  char v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100535E30();
  id v8 = [self configurationWithPointSize:6 weight:2 scale:15.0];
  swift_bridgeObjectRetain();
  NSString v9 = sub_100534CA0();
  swift_bridgeObjectRelease();
  id v10 = [self systemImageNamed:v9];

  if (v10)
  {
    id v11 = [v10 imageWithConfiguration:v8];
  }
  sub_100535E40();
  id v12 = [self tertiarySystemFillColor];
  sub_100535E00();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v4);
  sub_100535DF0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for UIButton.Configuration.Size.small(_:), v0);
  sub_100535DD0();
}

void static UIButton.Configuration.selectedBarButtonConfiguration(imageName:)()
{
  uint64_t v0 = sub_100535E20();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100535DE0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  char v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100535E30();
  id v8 = [self configurationWithPointSize:6 weight:2 scale:15.0];
  swift_bridgeObjectRetain();
  NSString v9 = sub_100534CA0();
  swift_bridgeObjectRelease();
  id v10 = [self systemImageNamed:v9];

  if (v10)
  {
    id v11 = [v10 imageWithConfiguration:v8];
  }
  sub_100535E40();
  id v12 = self;
  id v13 = [v12 tintColor];
  sub_100535E00();
  id v14 = [v12 systemBackgroundColor];
  sub_100535E10();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v4);
  sub_100535DF0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for UIButton.Configuration.Size.small(_:), v0);
  sub_100535DD0();
}

id sub_1003CCF78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v5 = *(uint64_t (**)(long long *, uint64_t))(a1 + 32);
  if (a2)
  {
    *((void *)&v9 + 1) = swift_getObjectType();
    *(void *)&long long v8 = a2;
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  long long v8 = 0u;
  long long v9 = 0u;
  if (a3)
  {
LABEL_3:
    sub_100123DA4(0, &qword_1006716F8);
    uint64_t v3 = sub_1005350E0();
  }
LABEL_4:
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v6 = (void *)v5(&v8, v3);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1003CBBB0((uint64_t)&v8);

  return v6;
}

id static UIBarButtonItem.contextBarButtonItem(_:)(uint64_t a1, uint64_t a2)
{
  id v2 = _sSo8UIButtonC11MusicCoreUIE16contextBarButtonyABSo6UIMenuCSgypSg_SaySo0H7ElementCGSgtcSgFZ_0(a1, a2);
  id v3 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v2];

  return v3;
}

uint64_t UITraitCollection.isAccessibilitySizeCategory.getter()
{
  id v1 = [v0 preferredContentSizeCategory];
  char v2 = sub_100535AC0();

  return v2 & 1;
}

Swift::Bool __swiftcall UIViewController.scrollToTopIfPossible()()
{
  id v1 = [v0 contentScrollView];
  if (!v1) {
    return 0;
  }
  char v2 = v1;
  unsigned __int8 v3 = [v1 _scrollToTopIfPossible:1];

  return v3;
}

Swift::Bool __swiftcall UIViewController.focusOnSearchBarIfPossible()()
{
  id v1 = [v0 navigationItem];
  id v2 = [v1 searchController];

  if (!v2) {
    return 0;
  }
  id v3 = [v2 searchBar];
  unsigned int v4 = [v3 canBecomeFirstResponder];

  if (v4)
  {
    id v5 = [v2 searchBar];
    unsigned __int8 v6 = [v5 becomeFirstResponder];

    id v2 = v5;
  }
  else
  {
    unsigned __int8 v6 = 0;
  }

  return v6;
}

id static UIKeyCommand.findKeyCommand(affecting:)()
{
  sub_10052F840();
  __chkstk_darwin();
  uint64_t v0 = sub_100534C90();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  id v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  id v5 = &v13[-v4];
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100123DA4(0, &qword_100671658);
  swift_retain();
  sub_100534C20();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v3, v5, v0);
  if (qword_100670320 != -1) {
    swift_once();
  }
  id v7 = (id)qword_10067B320;
  sub_10052F7F0();
  uint64_t v8 = sub_100534D50();
  uint64_t v10 = v9;
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v5, v0);
  id v11 = UIKeyCommand.init(title:input:modifierFlags:handler:)(v8, v10, 102, 0xE100000000000000, 1572864, (uint64_t)sub_1003CE8F4, v6);
  swift_release();
  return v11;
}

void sub_1003CD490()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong setActive:1];
    id v2 = [v1 searchBar];
    [v2 becomeFirstResponder];

    uint64_t v3 = UISearchController.searchText.getter();
    if (v4)
    {
      uint64_t v5 = v3;
      unint64_t v6 = v4;
      swift_bridgeObjectRelease();
      uint64_t v7 = HIBYTE(v6) & 0xF;
      if ((v6 & 0x2000000000000000) == 0) {
        uint64_t v7 = v5 & 0xFFFFFFFFFFFFLL;
      }
      if (v7)
      {
        id v8 = [v1 searchBar];
        id v9 = [v8 searchTextField];

        [v9 selectAll:v1];
      }
    }
  }
}

uint64_t UISearchController.searchText.getter()
{
  uint64_t v1 = sub_10052EEE0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  unint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [v0 searchBar];
  id v6 = [v5 text];

  if (!v6) {
    return 0;
  }
  uint64_t v7 = sub_100534CE0();
  uint64_t v9 = v8;

  v15[0] = v7;
  v15[1] = v9;
  sub_10052EED0();
  sub_1003C7738();
  uint64_t v10 = sub_100536010();
  unint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_bridgeObjectRelease();
  uint64_t v13 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0) {
    uint64_t v13 = v10 & 0xFFFFFFFFFFFFLL;
  }
  if (!v13)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v10;
}

id static UIKeyCommand.findKeyCommand(_:)(uint64_t a1, uint64_t a2)
{
  sub_10052F840();
  __chkstk_darwin();
  uint64_t v4 = sub_100534C90();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v9 = &v15[-v8];
  sub_100123DA4(0, &qword_100671658);
  sub_100534C20();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16))(v7, v9, v4);
  if (qword_100670320 != -1) {
    swift_once();
  }
  id v10 = (id)qword_10067B320;
  sub_10052F7F0();
  uint64_t v11 = sub_100534D50();
  uint64_t v13 = v12;
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v9, v4);
  swift_retain();
  return UIKeyCommand.init(title:input:modifierFlags:handler:)(v11, v13, 102, 0xE100000000000000, 1572864, a1, a2);
}

id UIKeyCommand.init(title:input:modifierFlags:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  NSString v11 = sub_100534CA0();
  swift_bridgeObjectRelease();
  id v12 = [ObjCClassFromMetadata keyCommandWithInput:v11 modifierFlags:a5 action:"music_handleKeyCommand:"];

  id v13 = v12;
  NSString v14 = sub_100534CA0();
  swift_bridgeObjectRelease();
  [v13 setTitle:v14];

  uint64_t v15 = qword_100670438;
  swift_retain();
  if (v15 != -1) {
    swift_once();
  }
  BOOL v16 = (const void *)qword_100671650;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a6;
  *(void *)(v17 + 24) = a7;
  swift_retain();
  sub_10000BB04(&qword_100671660);
  uint64_t v18 = (void *)sub_100536810();
  objc_setAssociatedObject(v13, v16, v18, (void *)3);

  swift_unknownObjectRelease();
  swift_release_n();
  return v13;
}

uint64_t UIKeyCommand.handler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_100670438 != -1) {
    swift_once();
  }
  uint64_t v6 = (const void *)qword_100671650;
  if (a1)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    *(void *)(v7 + 24) = a2;
    swift_retain();
    sub_10000BB04(&qword_100671660);
    uint64_t v8 = (void *)sub_100536810();
  }
  else
  {
    uint64_t v8 = 0;
  }
  objc_setAssociatedObject(v3, v6, v8, (void *)3);
  sub_100121638(a1);
  return swift_unknownObjectRelease();
}

uint64_t (*UIKeyCommand.handler.getter())(uint64_t a1)
{
  if (qword_100670438 != -1) {
    swift_once();
  }
  if (objc_getAssociatedObject(v0, (const void *)qword_100671650))
  {
    sub_100536090();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v3, 0, sizeof(v3));
  }
  sub_1003CBB48((uint64_t)v3, (uint64_t)v4);
  if (v5)
  {
    sub_10000BB04(&qword_100671660);
    if (swift_dynamicCast())
    {
      *(_OWORD *)(swift_allocObject() + 16) = v2;
      return sub_1003CE928;
    }
  }
  else
  {
    sub_1003CBBB0((uint64_t)v4);
  }
  return 0;
}

void (*UIKeyCommand.handler.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  id v3[4] = v1;
  *uint64_t v3 = UIKeyCommand.handler.getter();
  v3[1] = v4;
  return sub_1003CDD74;
}

void sub_1003CDD74(uint64_t **a1, char a2)
{
  long long v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  if (a2)
  {
    sub_100121440(**a1);
    if (qword_100670438 != -1) {
      swift_once();
    }
    uint64_t v5 = (const void *)qword_100671650;
    if (v4)
    {
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v4;
      *(void *)(v6 + 24) = v3;
      _OWORD v2[2] = (uint64_t)sub_1003CEA08;
      _OWORD v2[3] = v6;
      swift_retain();
      sub_10000BB04(&qword_100671660);
      uint64_t v7 = (void *)sub_100536810();
    }
    else
    {
      uint64_t v7 = 0;
    }
    objc_setAssociatedObject((id)v2[4], v5, v7, (void *)3);
    sub_100121638(v4);
    swift_unknownObjectRelease();
    sub_100121638(*v2);
  }
  else
  {
    if (qword_100670438 != -1) {
      swift_once();
    }
    uint64_t v8 = (const void *)qword_100671650;
    if (v4)
    {
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = v4;
      *(void *)(v9 + 24) = v3;
      _OWORD v2[2] = (uint64_t)sub_1003CEA08;
      _OWORD v2[3] = v9;
      swift_retain();
      sub_10000BB04(&qword_100671660);
      id v10 = (void *)sub_100536810();
    }
    else
    {
      id v10 = 0;
    }
    objc_setAssociatedObject((id)v2[4], v8, v10, (void *)3);
    sub_100121638(v4);
    swift_unknownObjectRelease();
  }

  free(v2);
}

uint64_t sub_1003CDF54()
{
  uint64_t result = swift_slowAlloc();
  qword_100671650 = result;
  return result;
}

id UIKeyCommand.pioritizedOverSystemBehavior(_:)(char a1)
{
  [v1 setWantsPriorityOverSystemBehavior:a1 & 1];

  return v3;
}

id UIFont.monospacedDigits()()
{
  swift_getObjectType();
  sub_10000BB04(&qword_100671668);
  uint64_t inited = swift_initStackObject();
  long long v2 = (void *)UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(void *)(inited + 32) = UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(void *)(inited + 40) = 6;
  *(_OWORD *)(inited + 16) = xmmword_10053A3A0;
  id v3 = (void *)UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(void *)(inited + 64) = &type metadata for Int;
  *(void *)(inited + 72) = v3;
  *(void *)(inited + 104) = &type metadata for Int;
  *(void *)(inited + 80) = 0;
  id v4 = v2;
  id v5 = v3;
  unint64_t v6 = sub_1003CC480(inited, &qword_1006716E0, &qword_1006716E8, (uint64_t (*)(uint64_t))sub_1001AE40C);
  id v7 = [v0 fontDescriptor];
  sub_10000BB04(&qword_100671670);
  uint64_t v8 = swift_initStackObject();
  *(_OWORD *)(v8 + 16) = xmmword_10053A3B0;
  *(void *)(v8 + 32) = UIFontDescriptorFeatureSettingsAttribute;
  sub_10000BB04(&qword_100671678);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10053A3B0;
  *(void *)(v9 + 32) = v6;
  *(void *)(v8 + 64) = sub_10000BB04(&qword_100671680);
  *(void *)(v8 + 40) = v9;
  id v10 = UIFontDescriptorFeatureSettingsAttribute;
  sub_1003CC480(v8, &qword_1006716D0, &qword_1006716D8, (uint64_t (*)(uint64_t))sub_1001AE40C);
  _s3__C13AttributeNameVMa_0(0);
  sub_1003CE998();
  Class isa = sub_100534A90().super.isa;
  swift_bridgeObjectRelease();
  id v12 = [v7 fontDescriptorByAddingAttributes:isa];

  id v13 = [(id)swift_getObjCClassFromMetadata() fontWithDescriptor:v12 size:0.0];
  return v13;
}

id _sSo8UIButtonC11MusicCoreUIE16contextBarButtonyABSo6UIMenuCSgypSg_SaySo0H7ElementCGSgtcSgFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = a2;
  uint64_t v44 = a1;
  sub_10052F840();
  __chkstk_darwin();
  id v41 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100534C90();
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  __chkstk_darwin();
  uint64_t v39 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v40 = (char *)&v34 - v5;
  uint64_t v38 = sub_100535E20();
  uint64_t v6 = *(void *)(v38 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_100535DE0();
  uint64_t v9 = *(void *)(v36 - 8);
  __chkstk_darwin();
  NSString v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_100535E50();
  uint64_t v12 = *(void *)(v37 - 8);
  __chkstk_darwin();
  NSString v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  BOOL v16 = (char *)&v34 - v15;
  sub_100535E30();
  id v17 = [self configurationWithPointSize:6 weight:2 scale:15.0];
  NSString v18 = sub_100534CA0();
  id v19 = [self systemImageNamed:v18];

  if (v19)
  {
    id v20 = [v19 imageWithConfiguration:v17];
  }
  sub_100123DA4(0, &qword_1006716F0);
  sub_100535E40();
  id v21 = [self tertiarySystemFillColor];
  sub_100535E00();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v36);
  sub_100535DF0();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for UIButton.Configuration.Size.small(_:), v38);
  sub_100535DD0();

  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v14, v37);
  char v22 = (void *)sub_100535E60();
  [v22 setShowsMenuAsPrimaryAction:1];
  uint64_t v23 = v40;
  sub_100534C20();
  uint64_t v25 = v42;
  uint64_t v24 = v43;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v23, v43);
  if (qword_100670320 != -1) {
    swift_once();
  }
  id v26 = (id)qword_10067B320;
  sub_10052F7F0();
  sub_100534D50();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
  id v27 = v22;
  NSString v28 = sub_100534CA0();
  [v27 setAccessibilityLabel:v28];

  id v29 = v27;
  NSString v30 = sub_100534CA0();
  swift_bridgeObjectRelease();
  [v29 setLargeContentTitle:v30];

  [v29 setShowsLargeContentViewer:1];
  uint64_t v31 = v44;
  if (v44)
  {
    aBlock[4] = v44;
    uint64_t aBlock[5] = v35;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1003CCF78;
    aBlock[3] = &unk_100633328;
    uint64_t v32 = _Block_copy(aBlock);
    swift_retain_n();
    swift_release();
    [v29 _setMenuProvider:v32];
    _Block_release(v32);
    sub_100121638(v31);
  }
  return v29;
}

uint64_t sub_1003CE8BC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1003CE8F4()
{
}

uint64_t sub_1003CE8FC(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1003CE928(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_1003CE960()
{
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_1003CE998()
{
  unint64_t result = qword_100670C30;
  if (!qword_100670C30)
  {
    _s3__C13AttributeNameVMa_0(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100670C30);
  }
  return result;
}

uint64_t sub_1003CE9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003CEA00()
{
  return swift_release();
}

uint64_t *UIView.Border.artwork.unsafeMutableAddressor()
{
  if (qword_100670440 != -1) {
    swift_once();
  }
  return &static UIView.Border.artwork;
}

uint64_t UIView.Corner.medium.unsafeMutableAddressor()
{
  return sub_1003CF0E4(&qword_100670460, (uint64_t)static UIView.Corner.medium);
}

uint64_t UIView.Corner.small.unsafeMutableAddressor()
{
  return sub_1003CF0E4(&qword_100670458, (uint64_t)static UIView.Corner.small);
}

void sub_1003CEAB0()
{
  id v0 = objc_allocWithZone((Class)UIColor);
  v5[4] = sub_1003CEB98;
  void v5[5] = 0;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  _OWORD v5[2] = sub_100042F08;
  _OWORD v5[3] = &unk_100633350;
  uint64_t v1 = _Block_copy(v5);
  [v0 initWithDynamicProvider:v1];
  _Block_release(v1);
  swift_release();
  UIView.Border.init(thickness:color:)();
  static UIView.Border.artwork = v2;
  byte_10067B608 = v3 & 1;
  qword_10067B610 = v4;
}

id sub_1003CEB98(void *a1)
{
  id v1 = [a1 userInterfaceStyle];
  id v2 = objc_allocWithZone((Class)UIColor);
  double v3 = 0.0;
  if (v1 == (id)2) {
    double v3 = 1.0;
  }

  return [v2 initWithWhite:v3 alpha:0.1];
}

uint64_t static UIView.Border.artwork.getter()
{
  if (qword_100670440 != -1) {
    swift_once();
  }
  uint64_t v0 = static UIView.Border.artwork;
  id v1 = (id)qword_10067B610;
  return v0;
}

void sub_1003CEC78()
{
  id v0 = [self currentDevice];
  id v1 = [v0 userInterfaceIdiom];

  byte_100671708 = v1 == (id)6;
}

uint64_t sub_1003CECDC()
{
  uint64_t v0 = sub_100535CE0();
  sub_10000ED18(v0, static UIView.Corner.extraSmall);
  sub_10000EA90(v0, (uint64_t)static UIView.Corner.extraSmall);
  if (qword_100670448 != -1) {
    swift_once();
  }
  return sub_100535C70();
}

uint64_t UIView.Corner.extraSmall.unsafeMutableAddressor()
{
  return sub_1003CF0E4(&qword_100670450, (uint64_t)static UIView.Corner.extraSmall);
}

uint64_t static UIView.Corner.extraSmall.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1003CF15C(&qword_100670450, (uint64_t)static UIView.Corner.extraSmall, a1);
}

uint64_t sub_1003CEDC0()
{
  uint64_t v0 = sub_100535CE0();
  sub_10000ED18(v0, static UIView.Corner.small);
  sub_10000EA90(v0, (uint64_t)static UIView.Corner.small);
  if (qword_100670448 != -1) {
    swift_once();
  }
  return sub_100535C70();
}

uint64_t static UIView.Corner.small.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1003CF15C(&qword_100670458, (uint64_t)static UIView.Corner.small, a1);
}

uint64_t sub_1003CEE80()
{
  uint64_t v0 = sub_100535CE0();
  sub_10000ED18(v0, static UIView.Corner.medium);
  sub_10000EA90(v0, (uint64_t)static UIView.Corner.medium);
  if (qword_100670448 != -1) {
    swift_once();
  }
  return sub_100535C70();
}

uint64_t static UIView.Corner.medium.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1003CF15C(&qword_100670460, (uint64_t)static UIView.Corner.medium, a1);
}

uint64_t sub_1003CEF40()
{
  uint64_t v0 = sub_100535CE0();
  sub_10000ED18(v0, static UIView.Corner.large);
  sub_10000EA90(v0, (uint64_t)static UIView.Corner.large);
  if (qword_100670448 != -1) {
    swift_once();
  }
  return sub_100535C70();
}

uint64_t UIView.Corner.large.unsafeMutableAddressor()
{
  return sub_1003CF0E4(&qword_100670468, (uint64_t)static UIView.Corner.large);
}

uint64_t static UIView.Corner.large.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1003CF15C(&qword_100670468, (uint64_t)static UIView.Corner.large, a1);
}

uint64_t sub_1003CF024()
{
  uint64_t v0 = sub_100535CE0();
  sub_10000ED18(v0, static UIView.Corner.extraLarge);
  sub_10000EA90(v0, (uint64_t)static UIView.Corner.extraLarge);
  if (qword_100670448 != -1) {
    swift_once();
  }
  return sub_100535C70();
}

uint64_t UIView.Corner.extraLarge.unsafeMutableAddressor()
{
  return sub_1003CF0E4(&qword_100670470, (uint64_t)static UIView.Corner.extraLarge);
}

uint64_t sub_1003CF0E4(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_100535CE0();

  return sub_10000EA90(v3, a2);
}

uint64_t static UIView.Corner.extraLarge.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1003CF15C(&qword_100670470, (uint64_t)static UIView.Corner.extraLarge, a1);
}

uint64_t sub_1003CF15C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100535CE0();
  uint64_t v6 = sub_10000EA90(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_1003CF1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003CF204()
{
  return swift_release();
}

uint64_t sub_1003CF20C(uint64_t a1)
{
  return sub_1003B94B0(a1, (uint64_t)sub_1003CF234, (uint64_t)&unk_1006333C0, &static HI.Color.prominentTextColor);
}

id sub_1003CF234(void *a1)
{
  return sub_1003CF2EC(a1, 224, 9, 33);
}

void *HI.Color.prominentTextColor.unsafeMutableAddressor()
{
  if (qword_100670478 != -1) {
    swift_once();
  }
  return &static HI.Color.prominentTextColor;
}

id static HI.Color.prominentTextColor.getter()
{
  return sub_1001C49B4(&qword_100670478, (void **)&static HI.Color.prominentTextColor);
}

uint64_t sub_1003CF2B4(uint64_t a1)
{
  return sub_1003B94B0(a1, (uint64_t)sub_1003CF2DC, (uint64_t)&unk_100633398, &static HI.Color.prominentBackgroundColor);
}

id sub_1003CF2DC(void *a1)
{
  return sub_1003CF2EC(a1, 250, 35, 59);
}

id sub_1003CF2EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = [a1 userInterfaceStyle];
  sub_1003CB884();
  if (v7 == (id)2)
  {
    uint64_t v8 = 250;
    uint64_t v9 = 45;
    uint64_t v10 = 72;
  }
  else
  {
    uint64_t v8 = a2;
    uint64_t v9 = a3;
    uint64_t v10 = a4;
  }
  return UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(v8, v9, v10, 1.0);
}

void *HI.Color.prominentBackgroundColor.unsafeMutableAddressor()
{
  if (qword_100670480 != -1) {
    swift_once();
  }
  return &static HI.Color.prominentBackgroundColor;
}

id static HI.Color.prominentBackgroundColor.getter()
{
  return sub_1001C49B4(&qword_100670480, (void **)&static HI.Color.prominentBackgroundColor);
}

ValueMetadata *type metadata accessor for HI.Color()
{
  return &type metadata for HI.Color;
}

uint64_t sub_1003CF3E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003CF3F8()
{
  return swift_release();
}

double HI.SizeClass.rawValue.getter(char a1)
{
  return dbl_100550840[a1];
}

double HI.SizeClass.gutter.getter(char a1)
{
  return dbl_100550720[a1];
}

double HI.SizeClass.margin.getter(char a1)
{
  return dbl_100550760[a1];
}

double HI.SizeClass.peek.getter()
{
  return 36.0;
}

_UNKNOWN **static HI.SizeClass.allCases.getter()
{
  return &off_100631458;
}

BOOL sub_1003CF468(char *a1, char *a2)
{
  return sub_1003D180C(*a1, *a2);
}

uint64_t sub_1003CF474@<X0>(double *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s11MusicCoreUI2HIO9SizeClassO8rawValueAESg0B8Graphics7CGFloatV_tcfC_0(*a1);
  *a2 = result;
  return result;
}

double sub_1003CF4A0@<D0>(double *a1@<X8>)
{
  double result = dbl_100550840[*v1];
  *a1 = result;
  return result;
}

void sub_1003CF4B8(void *a1@<X8>)
{
  *a1 = &off_100631458;
}

BOOL sub_1003CF4C8(char *a1, char *a2)
{
  return _s11MusicCoreUI2HIO9SizeClassO1loiySbAE_AEtFZ_0(*a1, *a2);
}

BOOL sub_1003CF4D4(char *a1, char *a2)
{
  return sub_1003CF4E0(*a1, *a2);
}

BOOL sub_1003CF4E0(char a1, char a2)
{
  return dbl_100550840[a2] >= dbl_100550840[a1];
}

BOOL sub_1003CF504(char *a1, char *a2)
{
  return sub_1003CF510(*a1, *a2);
}

BOOL sub_1003CF510(char a1, char a2)
{
  return dbl_100550840[a1] >= dbl_100550840[a2];
}

BOOL sub_1003CF534(char *a1, char *a2)
{
  return sub_1003CF540(*a1, *a2);
}

BOOL sub_1003CF540(char a1, char a2)
{
  return dbl_100550840[a2] < dbl_100550840[a1];
}

Swift::Int sub_1003CF564()
{
  char v1 = *v0;
  sub_100536950();
  sub_1003CF5B4((uint64_t)v3, v1);
  return sub_1005369A0();
}

void sub_1003CF5AC(uint64_t a1)
{
  sub_1003CF5B4(a1, *v1);
}

void sub_1003CF5B4(uint64_t a1, char a2)
{
}

uint64_t sub_1003CF5E8()
{
  sub_100534DD0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1003CF678()
{
  char v1 = *v0;
  sub_100536950();
  sub_1003CF5B4((uint64_t)v3, v1);
  return sub_1005369A0();
}

double sub_1003CF6BC(char a1, char a2, char a3)
{
  switch(a3)
  {
    case 1:
      double result = 1.0;
      switch(a1)
      {
        case 1:
          goto LABEL_20;
        case 2:
          double result = 3.0;
          break;
        case 3:
          if (a2) {
            double result = 4.0;
          }
          break;
        default:
          return result;
      }
      return result;
    case 2:
      double result = 3.0;
      switch(a1)
      {
        case 1:
          return result;
        case 2:
          double result = 4.0;
          break;
        case 3:
LABEL_20:
          double result = 2.0;
          break;
        default:
          double result = 1.0;
          if (a2) {
            double result = 3.0;
          }
          break;
      }
      return result;
    case 3:
      uint64_t v3 = a1;
      uint64_t v4 = (double *)&unk_1005507C0;
      return v4[v3];
    case 4:
      uint64_t v3 = a1;
      uint64_t v4 = (double *)&unk_1005507E0;
      return v4[v3];
    case 5:
      double result = 3.0;
      switch(a1)
      {
        case 1:
          double result = 6.0;
          break;
        case 2:
          double result = 7.0;
          break;
        case 3:
          double result = 5.0;
          if (a2) {
            double result = 9.0;
          }
          break;
        default:
          return result;
      }
      return result;
    case 6:
      double result = 7.0;
      switch(a1)
      {
        case 1:
          return result;
        case 2:
          double result = 8.0;
          break;
        case 3:
          double result = 6.0;
          if (a2) {
            double result = 28.0;
          }
          break;
        default:
          double result = 4.0;
          if (a2) {
            double result = 7.0;
          }
          break;
      }
      return result;
    case 7:
      double result = 5.0;
      switch(a1)
      {
        case 1:
          double result = 10.0;
          break;
        case 2:
          double result = 12.0;
          break;
        case 3:
          double result = 7.0;
          if (a2) {
            double result = 15.0;
          }
          break;
        default:
          return result;
      }
      return result;
    default:
      uint64_t v3 = a1;
      uint64_t v4 = (double *)&unk_1005507A0;
      return v4[v3];
  }
}

double sub_1003CF900(char a1, char a2, char a3)
{
  switch(a3)
  {
    case 1:
      if (a1 != 3) {
        return 1.0;
      }
      double result = 3.0;
      if ((a2 & 1) == 0) {
        return 1.0;
      }
      return result;
    case 2:
      if (!a1) {
        goto LABEL_11;
      }
      return 1.0;
    case 5:
    case 7:
      if (a1 != 3) {
        return 1.0;
      }
      goto LABEL_11;
    case 6:
      if (a1 != 3)
      {
        if (!a1)
        {
LABEL_11:
          double result = 2.0;
          if (a2) {
            return result;
          }
        }
        return 1.0;
      }
      double result = 5.0;
      if ((a2 & 1) == 0) {
        return 1.0;
      }
      return result;
    default:
      return 1.0;
  }
}

_UNKNOWN **static HI.Grid.Variant.allCases.getter()
{
  return &off_100631480;
}

void sub_1003CF9B8(void *a1@<X8>)
{
  *a1 = &off_1006314A8;
}

uint64_t Lyrics.TextLine.agentAlignment.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t Lyrics.TextLine.direction.getter()
{
  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t Lyrics.TextLine.lyricsDirection.getter()
{
  return *(unsigned __int8 *)(v0 + 26);
}

double Lyrics.TextLine.primaryVocalsStartTime.getter()
{
  return *(double *)(v0 + 40);
}

double Lyrics.TextLine.primaryVocalsEndTime.getter()
{
  return *(double *)(v0 + 48);
}

void HI.Grid.Metrics.init(width:variant:swiping:isAccessibilitySize:)(char a1@<W0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>)
{
  if (a5 <= 374.0)
  {
    char v13 = 0;
    double v10 = 10.0;
    double v11 = 16.0;
    goto LABEL_19;
  }
  double v10 = 12.0;
  double v11 = 20.0;
  if (a5 <= 500.0)
  {
    char v13 = 1;
    goto LABEL_19;
  }
  if (a5 <= 726.0)
  {
    char v13 = 2;
    goto LABEL_19;
  }
  double v10 = 20.0;
  if (a5 <= 981.0)
  {
    char v13 = 3;
LABEL_18:
    double v11 = 34.0;
    goto LABEL_19;
  }
  if (a5 <= 1194.0)
  {
    char v13 = 4;
    goto LABEL_18;
  }
  if (a5 <= 2500.0) {
    char v12 = 6;
  }
  else {
    char v12 = 7;
  }
  if (a5 > 1500.0) {
    char v13 = v12;
  }
  else {
    char v13 = 5;
  }
  double v11 = 34.0;
LABEL_19:
  double v14 = a5 - (v11 + v11);
  if (a3)
  {
    id v15 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleBody];
    [v15 scaledValueForValue:1.0];
    double v17 = v16;

    double v18 = round(sub_1003CF6BC(a1, a2 & 1, v13) * (1.0 / (v17 * 0.7)));
  }
  else
  {
    double v18 = sub_1003CF6BC(a1, a2 & 1, v13);
  }
  char v19 = a2 & 1;
  double v20 = sub_1003CF900(a1, v19, v13);
  double v21 = v20 * ((v14 - v10 * (v18 + -1.0)) / v18);
  double v22 = v20 + -1.0;
  double v23 = v10 * v22;
  BOOL v24 = v22 <= 0.0;
  double v25 = -0.0;
  if (!v24) {
    double v25 = v23;
  }
  double v26 = v25 + v21;
  *(double *)a4 = a5;
  *(double *)(a4 + 8) = v10;
  *(double *)(a4 + 16) = v11;
  *(unsigned char *)(a4 + 24) = v13;
  BOOL v27 = v18 == 1.0 || v26 > 300.0;
  *(unsigned char *)(a4 + 25) = a1;
  *(unsigned char *)(a4 + 26) = v19;
  *(double *)(a4 + 32) = v14;
  *(double *)(a4 + 40) = v18;
  if ((a3 & 1) == 0) {
    BOOL v27 = 0;
  }
  *(double *)(a4 + 48) = v26;
  *(unsigned char *)(a4 + 56) = v27;
}

void HI.Grid.Metrics.hash(into:)()
{
  if ((*(void *)v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *(void *)v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  sub_100536990(v1);
  if ((*(void *)(v0 + 8) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = *(void *)(v0 + 8);
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  sub_100536990(v2);
  if ((*(void *)(v0 + 16) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = *(void *)(v0 + 16);
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  sub_100536990(v3);
  sub_100536990(qword_100550800[*(char *)(v0 + 24)]);
  sub_100536960(*(unsigned __int8 *)(v0 + 25));
  sub_100536970(*(unsigned char *)(v0 + 26) & 1);
  if ((*(void *)(v0 + 32) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = *(void *)(v0 + 32);
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  sub_100536990(v4);
  if ((*(void *)(v0 + 40) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = *(void *)(v0 + 40);
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  sub_100536990(v5);
  if ((*(void *)(v0 + 48) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v6 = *(void *)(v0 + 48);
  }
  else {
    Swift::UInt64 v6 = 0;
  }
  sub_100536990(v6);
  sub_100536970(*(unsigned char *)(v0 + 56) & 1);
}

Swift::Int HI.Grid.Metrics.hashValue.getter()
{
  return sub_1005369A0();
}

Swift::Int sub_1003CFD78()
{
  return sub_1005369A0();
}

uint64_t sub_1003CFDB4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v5[0] = *a1;
  v5[1] = v2;
  v6[0] = a1[2];
  *(_OWORD *)((char *)v6 + 9) = *(_OWORD *)((char *)a1 + 41);
  long long v3 = a2[1];
  v7[0] = *a2;
  v7[1] = v3;
  v8[0] = a2[2];
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)a2 + 41);
  return _s11MusicCoreUI2HIO4GridO7MetricsV23__derived_struct_equalsySbAG_AGtFZ_0((uint64_t)v5, (uint64_t)v7) & 1;
}

const char *HI.IndexBar.NumberOfItemsRequirement.artists.unsafeMutableAddressor()
{
  return "2";
}

uint64_t static HI.IndexBar.NumberOfItemsRequirement.artists.getter()
{
  return 50;
}

const char *HI.IndexBar.NumberOfItemsRequirement.default.unsafeMutableAddressor()
{
  return "d";
}

uint64_t static HI.IndexBar.NumberOfItemsRequirement.default.getter()
{
  return 100;
}

double sub_1003CFE38()
{
  double result = 12.0;
  static Corner.search = xmmword_10054DD60;
  byte_10067B6B0 = 0;
  return result;
}

long long *Corner.search.unsafeMutableAddressor()
{
  if (qword_100670488 != -1) {
    swift_once();
  }
  return &static Corner.search;
}

uint64_t static Corner.search.getter()
{
  if (qword_100670488 != -1) {
    swift_once();
  }
  return static Corner.search;
}

double sub_1003CFEF4()
{
  double result = 16.0;
  static Corner.featured = xmmword_10054DD70;
  byte_10067B6D0 = 0;
  return result;
}

long long *Corner.featured.unsafeMutableAddressor()
{
  if (qword_100670490 != -1) {
    swift_once();
  }
  return &static Corner.featured;
}

uint64_t static Corner.featured.getter()
{
  if (qword_100670490 != -1) {
    swift_once();
  }
  return static Corner.featured;
}

void sub_1003CFFB0()
{
  static HI.HoverOutset.list = 0x4024000000000000;
}

uint64_t *HI.HoverOutset.list.unsafeMutableAddressor()
{
  if (qword_100670498 != -1) {
    swift_once();
  }
  return &static HI.HoverOutset.list;
}

double static HI.HoverOutset.list.getter()
{
  return sub_1003B9CF8(&qword_100670498, (uint64_t)&static HI.HoverOutset.list);
}

void sub_1003D0030()
{
  static HI.HoverOutset.grid = 0x4028000000000000;
}

uint64_t *HI.HoverOutset.grid.unsafeMutableAddressor()
{
  if (qword_1006704A0 != -1) {
    swift_once();
  }
  return &static HI.HoverOutset.grid;
}

double static HI.HoverOutset.grid.getter()
{
  return sub_1003B9CF8(&qword_1006704A0, (uint64_t)&static HI.HoverOutset.grid);
}

void sub_1003D00B0()
{
  static HI.HoverOutset.text = 0x4010000000000000;
}

uint64_t *HI.HoverOutset.text.unsafeMutableAddressor()
{
  if (qword_1006704A8 != -1) {
    swift_once();
  }
  return &static HI.HoverOutset.text;
}

double static HI.HoverOutset.text.getter()
{
  return sub_1003B9CF8(&qword_1006704A8, (uint64_t)&static HI.HoverOutset.text);
}

void sub_1003D0130()
{
  static HI.BottomPlayer.Ornament.overlappingdouble Height = Int.seconds.getter(20);
}

uint64_t *HI.BottomPlayer.Ornament.overlappingHeight.unsafeMutableAddressor()
{
  if (qword_1006704B0 != -1) {
    swift_once();
  }
  return &static HI.BottomPlayer.Ornament.overlappingHeight;
}

double static HI.BottomPlayer.Ornament.overlappingHeight.getter()
{
  return sub_1003B9CF8(&qword_1006704B0, (uint64_t)&static HI.BottomPlayer.Ornament.overlappingHeight);
}

double sub_1003D01C4()
{
  if (qword_1006704B0 != -1) {
    swift_once();
  }
  double result = -*(double *)&static HI.BottomPlayer.Ornament.overlappingHeight;
  static HI.BottomPlayer.Ornament.offset = 0;
  *(double *)&qword_10067B700 = -*(double *)&static HI.BottomPlayer.Ornament.overlappingHeight;
  return result;
}

uint64_t *HI.BottomPlayer.Ornament.offset.unsafeMutableAddressor()
{
  if (qword_1006704B8 != -1) {
    swift_once();
  }
  return &static HI.BottomPlayer.Ornament.offset;
}

double static HI.BottomPlayer.Ornament.offset.getter()
{
  if (qword_1006704B8 != -1) {
    swift_once();
  }
  return *(double *)&static HI.BottomPlayer.Ornament.offset;
}

double static HI.BottomPlayer.size(dynamicTypeSize:)(uint64_t a1)
{
  sub_10000BB04(&qword_100671510);
  __chkstk_darwin();
  long long v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100531470();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  id v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v14 - v8;
  sub_1003D0874(a1, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1003D08DC((uint64_t)v3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v9, v3, v4);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for DynamicTypeSize.accessibility1(_:), v4);
    sub_1003D093C();
    char v10 = sub_100534BC0();
    double v11 = *(void (**)(char *, uint64_t))(v5 + 8);
    v11(v7, v4);
    v11(v9, v4);
    if ((v10 & 1) == 0) {
      return 924.0;
    }
  }
  return 784.0;
}

void sub_1003D04C8()
{
  static HI.BottomPlayer.buttonSpacing = Int.seconds.getter(16);
}

uint64_t *HI.BottomPlayer.buttonSpacing.unsafeMutableAddressor()
{
  if (qword_1006704C0 != -1) {
    swift_once();
  }
  return &static HI.BottomPlayer.buttonSpacing;
}

double static HI.BottomPlayer.buttonSpacing.getter()
{
  return sub_1003B9CF8(&qword_1006704C0, (uint64_t)&static HI.BottomPlayer.buttonSpacing);
}

void sub_1003D055C()
{
  static HI.BottomPlayer.contentHorizontalPadding = Int.seconds.getter(16);
}

uint64_t *HI.BottomPlayer.contentHorizontalPadding.unsafeMutableAddressor()
{
  if (qword_1006704C8 != -1) {
    swift_once();
  }
  return &static HI.BottomPlayer.contentHorizontalPadding;
}

double static HI.BottomPlayer.contentHorizontalPadding.getter()
{
  return sub_1003B9CF8(&qword_1006704C8, (uint64_t)&static HI.BottomPlayer.contentHorizontalPadding);
}

uint64_t _s11MusicCoreUI2HIO4GridO7MetricsV23__derived_struct_equalsySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 == *(double *)a2
    && *(double *)(a1 + 8) == *(double *)(a2 + 8)
    && *(double *)(a1 + 16) == *(double *)(a2 + 16)
    && dbl_100550840[*(char *)(a1 + 24)] == dbl_100550840[*(char *)(a2 + 24)]
    && *(unsigned __int8 *)(a1 + 25) == *(unsigned __int8 *)(a2 + 25)
    && ((*(unsigned __int8 *)(a1 + 26) ^ *(unsigned __int8 *)(a2 + 26)) & 1) == 0
    && *(double *)(a1 + 32) == *(double *)(a2 + 32)
    && *(double *)(a1 + 40) == *(double *)(a2 + 40)
    && *(double *)(a1 + 48) == *(double *)(a2 + 48))
  {
    return (((*(unsigned char *)(a1 + 56) & 1) == 0) ^ *(unsigned __int8 *)(a2 + 56)) & 1;
  }
  else
  {
    return 0;
  }
}

BOOL _s11MusicCoreUI2HIO9SizeClassO1loiySbAE_AEtFZ_0(char a1, char a2)
{
  return dbl_100550840[a1] < dbl_100550840[a2];
}

uint64_t _s11MusicCoreUI2HIO9SizeClassOyAE0B8Graphics7CGFloatVcfC_0(double a1)
{
  if (a1 <= 374.0) {
    return 0;
  }
  if (a1 <= 500.0) {
    return 1;
  }
  if (a1 <= 726.0) {
    return 2;
  }
  if (a1 <= 981.0) {
    return 3;
  }
  if (a1 > 2500.0) {
    int v1 = 7;
  }
  else {
    int v1 = 6;
  }
  if (a1 > 1500.0) {
    unsigned int v2 = v1;
  }
  else {
    unsigned int v2 = 5;
  }
  if (a1 > 1194.0) {
    return v2;
  }
  else {
    return 4;
  }
}

uint64_t _s11MusicCoreUI2HIO9SizeClassO8rawValueAESg0B8Graphics7CGFloatV_tcfC_0(double a1)
{
  if (a1 == 374.0) {
    return 0;
  }
  if (a1 == 500.0) {
    return 1;
  }
  if (a1 == 726.0) {
    return 2;
  }
  if (a1 == 981.0) {
    return 3;
  }
  if (a1 == 1194.0) {
    return 4;
  }
  if (a1 == 2501.0) {
    int v2 = 7;
  }
  else {
    int v2 = 8;
  }
  if (a1 == 2500.0) {
    unsigned int v3 = 6;
  }
  else {
    unsigned int v3 = v2;
  }
  if (a1 == 1500.0) {
    return 5;
  }
  else {
    return v3;
  }
}

uint64_t sub_1003D0874(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000BB04(&qword_100671510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003D08DC(uint64_t a1)
{
  uint64_t v2 = sub_10000BB04(&qword_100671510);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1003D093C()
{
  unint64_t result = qword_100675F30;
  if (!qword_100675F30)
  {
    sub_100531470();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100675F30);
  }
  return result;
}

uint64_t sub_1003D0994()
{
  return sub_1002BFF88(&qword_100671710, &qword_100671718);
}

unint64_t sub_1003D09C0()
{
  unint64_t result = qword_100671720;
  if (!qword_100671720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100671720);
  }
  return result;
}

uint64_t sub_1003D0A14()
{
  return sub_1002BFF88(&qword_100671728, &qword_100671730);
}

unint64_t sub_1003D0A40()
{
  unint64_t result = qword_100671738;
  if (!qword_100671738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100671738);
  }
  return result;
}

unint64_t sub_1003D0A98()
{
  unint64_t result = qword_100671740;
  if (!qword_100671740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100671740);
  }
  return result;
}

ValueMetadata *type metadata accessor for HI()
{
  return &type metadata for HI;
}

unsigned char *initializeBufferWithCopyOfBuffer for TextBadge(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

unsigned char *storeEnumTagSinglePayload for HI.SizeClass(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003D0BD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HI.SizeClass()
{
  return &type metadata for HI.SizeClass;
}

ValueMetadata *type metadata accessor for HI.Grid()
{
  return &type metadata for HI.Grid;
}

unsigned char *storeEnumTagSinglePayload for HI.Grid.Variant(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003D0CE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HI.Grid.Variant()
{
  return &type metadata for HI.Grid.Variant;
}

__n128 initializeWithCopy for HI.Grid.Metrics(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for HI.Grid.Metrics(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 26);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HI.Grid.Metrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 26) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HI.Grid.Metrics()
{
  return &type metadata for HI.Grid.Metrics;
}

ValueMetadata *type metadata accessor for HI.IndexBar()
{
  return &type metadata for HI.IndexBar;
}

ValueMetadata *type metadata accessor for HI.IndexBar.NumberOfItemsRequirement()
{
  return &type metadata for HI.IndexBar.NumberOfItemsRequirement;
}

ValueMetadata *type metadata accessor for HI.HoverOutset()
{
  return &type metadata for HI.HoverOutset;
}

ValueMetadata *type metadata accessor for HI.BottomPlayer()
{
  return &type metadata for HI.BottomPlayer;
}

ValueMetadata *type metadata accessor for HI.BottomPlayer.Ornament()
{
  return &type metadata for HI.BottomPlayer.Ornament;
}

void sub_1003D0E44()
{
  qword_10067B718 = Int.seconds.getter(32);
}

double sub_1003D0E68(uint64_t a1, uint64_t a2, char a3, char a4)
{
  id v7 = [self currentTraitCollection];
  id v8 = [v7 userInterfaceIdiom];

  double result = 512.0;
  switch(a4)
  {
    case 1:
    case 4:
      double result = 540.0;
      if (v8 == (id)6) {
        double result = 512.0;
      }
      break;
    case 2:
      double result = 540.0;
      if ((a3 & 1) == 0 && *(double *)&a1 > 1194.0) {
        double result = 712.0;
      }
      break;
    case 3:
      return result;
    default:
      double result = 540.0;
      if (v8 == (id)6) {
        double result = 512.0;
      }
      break;
  }
  return result;
}

double static HI.Modal.modalSize(modalType:sceneSize:canExceedSceneSize:navigationBarHeight:)(char a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  int v7 = a4 & 1;
  double v8 = sub_1003D0E68(a2, a3, a4 & 1, a1);
  id v9 = [self currentTraitCollection];
  id v10 = [v9 userInterfaceIdiom];

  BOOL v11 = v10 == (id)6 && v7 == 0;
  if (v11 && (a5 & 1) == 0)
  {
    double v12 = *(double *)&a2;
    if (qword_1006704D0 != -1)
    {
      swift_once();
      double v12 = *(double *)&a2;
    }
    if (v8 + *(double *)&qword_10067B718 + *(double *)&qword_10067B718 > v12) {
      return v12 - (*(double *)&qword_10067B718 + *(double *)&qword_10067B718);
    }
  }
  return v8;
}

unint64_t sub_1003D113C()
{
  unint64_t result = qword_100671748;
  if (!qword_100671748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100671748);
  }
  return result;
}

ValueMetadata *type metadata accessor for HI.Modal()
{
  return &type metadata for HI.Modal;
}

unsigned char *_s5ModalO9ModalTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003D126CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HI.Modal.ModalType()
{
  return &type metadata for HI.Modal.ModalType;
}

void *sub_1003D12A4(uint64_t a1)
{
  uint64_t v2 = sub_10052F360();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10000BB04(&qword_100670C90);
  uint64_t v6 = *(void *)(v19 - 8);
  __chkstk_darwin();
  double v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  id v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    double v20 = _swiftEmptyArrayStorage;
    sub_1003D8B5C(0, v9, 0);
    double v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v17 = *(void *)(v11 + 56);
    double v18 = v12;
    do
    {
      v18(v5, v13, v2);
      swift_dynamicCast();
      id v10 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1003D8B5C(0, v10[2] + 1, 1);
        id v10 = v20;
      }
      unint64_t v15 = v10[2];
      unint64_t v14 = v10[3];
      if (v15 >= v14 >> 1)
      {
        sub_1003D8B5C(v14 > 1, v15 + 1, 1);
        id v10 = v20;
      }
      v10[2] = v15 + 1;
      sub_100013A18((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v15, &qword_100670C90);
      v13 += v17;
      --v9;
    }
    while (v9);
  }
  return v10;
}

void *sub_1003D1500(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_1005362C0();
    uint64_t v4 = a1 + 32;
    do
    {
      v4 += 8;
      sub_10052FBB0();
      sub_100536290();
      sub_1005362D0();
      sub_1005362E0();
      sub_1005362A0();
      --v2;
    }
    while (v2);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1003D15A8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    double v25 = _swiftEmptyArrayStorage;
    sub_1003D8BDC(0, v1, 0);
    uint64_t v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = (void *)(a1 + 128);
    do
    {
      uint64_t v5 = *(v4 - 12);
      uint64_t v6 = *(v4 - 11);
      uint64_t v19 = *(v4 - 10);
      char v7 = *((unsigned char *)v4 - 72);
      char v8 = *((unsigned char *)v4 - 71);
      char v18 = *((unsigned char *)v4 - 70);
      uint64_t v9 = *(v4 - 8);
      uint64_t v10 = *(v4 - 7);
      uint64_t v11 = *(v4 - 6);
      uint64_t v17 = *(v4 - 5);
      long long v20 = *((_OWORD *)v4 - 1);
      long long v21 = *((_OWORD *)v4 - 2);
      uint64_t v12 = *v4;
      unint64_t v13 = v2[2];
      unint64_t v14 = v2[3];
      double v25 = v2;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      if (v13 >= v14 >> 1)
      {
        sub_1003D8BDC((void *)(v14 > 1), v13 + 1, 1);
        uint64_t v2 = v25;
      }
      double v23 = &type metadata for Lyrics.TextLine;
      BOOL v24 = &protocol witness table for Lyrics.TextLine;
      uint64_t v15 = swift_allocObject();
      *(void *)&long long v22 = v15;
      *(void *)(v15 + 16) = v5;
      *(void *)(v15 + 24) = v6;
      *(void *)(v15 + 32) = v19;
      *(unsigned char *)(v15 + 40) = v7;
      *(unsigned char *)(v15 + 41) = v8;
      *(unsigned char *)(v15 + 42) = v18;
      *(void *)(v15 + 48) = v9;
      *(void *)(v15 + 56) = v10;
      *(void *)(v15 + 64) = v11;
      *(void *)(v15 + 72) = v17;
      *(_OWORD *)(v15 + 80) = v21;
      *(_OWORD *)(v15 + 96) = v20;
      *(void *)(v15 + 112) = v12;
      _OWORD v2[2] = v13 + 1;
      sub_1000ECF64(&v22, (uint64_t)&v2[5 * v13 + 4]);
      v4 += 13;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1003D175C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7365756E6576;
  }
  else {
    uint64_t v3 = 0x652D6D617A616873;
  }
  if (v2) {
    unint64_t v4 = 0xED000073746E6576;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x7365756E6576;
  }
  else {
    uint64_t v5 = 0x652D6D617A616873;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xED000073746E6576;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_100536780();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

BOOL sub_1003D180C(char a1, char a2)
{
  return dbl_1005510D8[a1] == dbl_1005510D8[a2];
}

uint64_t sub_1003D1830(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000015;
  unint64_t v3 = 0x8000000100566610;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000014;
    }
    else {
      unint64_t v5 = 0xD000000000000015;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x8000000100566630;
    }
    else {
      unint64_t v6 = 0x8000000100566650;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_12;
    }
  }
  else
  {
    unint64_t v5 = 0xD000000000000015;
    unint64_t v6 = 0x8000000100566610;
    int v7 = a2;
    if (!a2) {
      goto LABEL_12;
    }
  }
  if (v7 == 1)
  {
    unint64_t v2 = 0xD000000000000014;
    unint64_t v3 = 0x8000000100566630;
  }
  else
  {
    unint64_t v3 = 0x8000000100566650;
  }
LABEL_12:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_100536780();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1003D1928(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x73736572646461;
    }
    else {
      uint64_t v3 = 7300455;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xE300000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x73736572646461;
      }
      else {
        uint64_t v6 = 7300455;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xE300000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v3 = 1701667182;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 1701667182)
  {
LABEL_21:
    char v8 = sub_100536780();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1003D1A24(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7365756E6576;
  }
  else {
    uint64_t v3 = 0x73747369747261;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x7365756E6576;
  }
  else {
    uint64_t v5 = 0x73747369747261;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_100536780();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1003D1AC8(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 1701669236;
  }
  else {
    uint64_t v2 = 1701667182;
  }
  if (a2) {
    uint64_t v3 = 1701669236;
  }
  else {
    uint64_t v3 = 1701667182;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_100536780();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1003D1B34(uint64_t a1, uint64_t a2)
{
  return sub_1001BE104(a1, a2, (uint64_t)&qword_100678F40);
}

BOOL sub_1003D1B48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32)) {
    return 0;
  }
  uint64_t v3 = (double *)(a1 + 40);
  char v4 = (double *)(a2 + 40);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    double v7 = *v3++;
    double v8 = v7;
    double v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_1003D1BB4(uint64_t a1, uint64_t a2)
{
  return sub_1001BE104(a1, a2, (uint64_t)&qword_1006719E8);
}

uint64_t sub_1003D1BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = (float64x2_t *)(a2 + 80);
    for (unint64_t i = (float64x2_t *)(a1 + 80); ; unint64_t i = (float64x2_t *)((char *)i + 56))
    {
      int32x2_t v5 = vmovn_s64(vceqq_f64(i[-3], v3[-3]));
      if ((v5.i32[0] & v5.i32[1] & 1) == 0) {
        break;
      }
      float64_t v7 = i[-1].f64[0];
      float64_t v6 = i[-1].f64[1];
      float64_t v8 = i->f64[0];
      float64_t v10 = v3[-1].f64[0];
      float64_t v9 = v3[-1].f64[1];
      float64_t v11 = v3->f64[0];
      if (*(void *)&i[-2].f64[0] == *(void *)&v3[-2].f64[0]
        && *(void *)&i[-2].f64[1] == *(void *)&v3[-2].f64[1])
      {
        uint64_t result = 0;
      }
      else
      {
        char v13 = sub_100536780();
        uint64_t result = 0;
        if ((v13 & 1) == 0) {
          return result;
        }
      }
      if (*(void *)&v7 != *(void *)&v10 || *(void *)&v6 != *(void *)&v9 || *(void *)&v8 != *(void *)&v11) {
        return result;
      }
      uint64_t v3 = (float64x2_t *)((char *)v3 + 56);
      if (!--v2) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1003D1CC0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_100536780(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    float64_t v9 = a2 + 7;
    for (unint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_100536780() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t _s11MusicCoreUI16PlaylistCuratorsO4ViewV13ConfigurationV23__derived_struct_equalsySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100534330();
  uint64_t v33 = *(void *)(v4 - 8);
  __chkstk_darwin();
  char v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000BB04((uint64_t *)&unk_100676E50);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000BB04(&qword_1006719F0);
  __chkstk_darwin();
  BOOL v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PlaylistCurators.Curator(0);
  __chkstk_darwin();
  char v13 = (void (***)(char *, uint64_t, uint64_t))((char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = __chkstk_darwin();
  uint64_t v17 = (void (***)(char *, uint64_t, uint64_t))((char *)&v30 - v16);
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18 == *(void *)(a2 + 16))
  {
    uint64_t v40 = v9;
    id v41 = v8;
    if (!v18 || a1 == a2) {
      return 1;
    }
    uint64_t v31 = v6;
    unint64_t v19 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v34 = *(void *)(v15 + 72);
    uint64_t v35 = a2;
    uint64_t v37 = (unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
    uint64_t v38 = v14;
    NSString v30 = (void (**)(char *, uint64_t, uint64_t))(v33 + 32);
    uint64_t v32 = (void (**)(uint64_t, uint64_t))(v33 + 8);
    uint64_t v20 = (uint64_t)v41;
    uint64_t v36 = a1;
    uint64_t v39 = v13;
    while (1)
    {
      sub_1003E1418(a1 + v19, (uint64_t)v17);
      sub_1003E1418(a2 + v19, (uint64_t)v13);
      BOOL v21 = *v17 == *v13 && v17[1] == v13[1];
      if (!v21 && (sub_100536780() & 1) == 0) {
        break;
      }
      uint64_t v22 = *(int *)(v38 + 20);
      uint64_t v23 = (uint64_t)v13 + v22;
      uint64_t v24 = (uint64_t)&v11[*(int *)(v40 + 48)];
      sub_100013720((uint64_t)v17 + v22, (uint64_t)v11, (uint64_t *)&unk_100676E50);
      sub_100013720(v23, v24, (uint64_t *)&unk_100676E50);
      double v25 = *v37;
      if ((*v37)(v11, 1, v4) == 1)
      {
        if (v25((char *)v24, 1, v4) != 1) {
          goto LABEL_19;
        }
        sub_100013C44((uint64_t)v11, (uint64_t *)&unk_100676E50);
        char v13 = v39;
      }
      else
      {
        sub_100013720((uint64_t)v11, v20, (uint64_t *)&unk_100676E50);
        if (v25((char *)v24, 1, v4) == 1)
        {
          (*v32)(v20, v4);
LABEL_19:
          sub_100013C44((uint64_t)v11, &qword_1006719F0);
          char v13 = v39;
          break;
        }
        double v26 = v31;
        (*v30)(v31, v24, v4);
        sub_1003E1808(&qword_100676280, (void (*)(uint64_t))&type metadata accessor for Artwork);
        LODWORD(v33) = sub_100534BF0();
        BOOL v27 = *v32;
        uint64_t v28 = (uint64_t)v26;
        uint64_t v20 = (uint64_t)v41;
        (*v32)(v28, v4);
        v27(v20, v4);
        sub_100013C44((uint64_t)v11, (uint64_t *)&unk_100676E50);
        char v13 = v39;
        if ((v33 & 1) == 0) {
          break;
        }
      }
      sub_1003E147C((uint64_t)v13);
      sub_1003E147C((uint64_t)v17);
      a2 = v35;
      v19 += v34;
      --v18;
      a1 = v36;
      if (!v18) {
        return 1;
      }
    }
    sub_1003E147C((uint64_t)v13);
    sub_1003E147C((uint64_t)v17);
  }
  return 0;
}

Swift::Int sub_1003D2218()
{
  return sub_1005369A0();
}

double TimedElement.duration.getter(uint64_t a1, uint64_t a2)
{
  double v4 = (*(double (**)(void))(a2 + 16))();
  return v4 - (*(double (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
}

void TimedElement.timeRange.getter(uint64_t a1, uint64_t a2)
{
  double v4 = (*(double (**)(void))(a2 + 8))();
  if (v4 > (*(double (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2)) {
    __break(1u);
  }
}

double Lyrics.Word.startTime.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (*(void *)(v1 + 16)) {
    return *(double *)(v1 + 32);
  }
  else {
    return 0.0;
  }
}

double Lyrics.Word.endTime.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2) {
    return *(double *)(v1 + 56 * v2 - 16);
  }
  else {
    return 0.0;
  }
}

uint64_t Lyrics.Word.range.getter()
{
  return sub_1003DC41C(*(void *)(v0 + 16));
}

uint64_t Lyrics.Word.emphasis.getter()
{
  return *(void *)(v0 + 24);
}

double Lyrics.Word.Emphasis.factor.getter(uint64_t a1, char a2)
{
  double result = *(double *)&a1;
  if (a2) {
    return 0.0;
  }
  return result;
}

void Lyrics.Word.Emphasis.hash(into:)(uint64_t a1, Swift::UInt64 a2, char a3)
{
  if (a3)
  {
    sub_100536960(0);
  }
  else
  {
    sub_100536960(1uLL);
    if ((a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v4 = a2;
    }
    else {
      Swift::UInt64 v4 = 0;
    }
    sub_100536990(v4);
  }
}

uint64_t static Lyrics.Word.Emphasis.__derived_enum_equals(_:_:)(uint64_t a1, unsigned __int8 a2, uint64_t a3, unsigned __int8 a4)
{
  if ((a2 | a4)) {
    char v4 = a2 & a4;
  }
  else {
    char v4 = *(double *)&a1 == *(double *)&a3;
  }
  return v4 & 1;
}

Swift::Int Lyrics.Word.Emphasis.hashValue.getter(Swift::UInt64 a1, char a2)
{
  sub_100536950();
  if (a2)
  {
    sub_100536960(0);
  }
  else
  {
    sub_100536960(1uLL);
    if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v4 = a1;
    }
    else {
      Swift::UInt64 v4 = 0;
    }
    sub_100536990(v4);
  }
  return sub_1005369A0();
}

Swift::Int sub_1003D24F0()
{
  return Lyrics.Word.Emphasis.hashValue.getter(*(void *)v0, *(unsigned char *)(v0 + 8));
}

void sub_1003D24FC()
{
  if (*(unsigned char *)(v0 + 8))
  {
    sub_100536960(0);
  }
  else
  {
    Swift::UInt64 v1 = *(void *)v0;
    sub_100536960(1uLL);
    if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v2 = v1;
    }
    else {
      Swift::UInt64 v2 = 0;
    }
    sub_100536990(v2);
  }
}

Swift::Int sub_1003D254C()
{
  Swift::UInt64 v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  sub_100536950();
  if (v2)
  {
    sub_100536960(0);
  }
  else
  {
    sub_100536960(1uLL);
    if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v3 = v1;
    }
    else {
      Swift::UInt64 v3 = 0;
    }
    sub_100536990(v3);
  }
  return sub_1005369A0();
}

uint64_t sub_1003D25B8(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  uint64_t result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0) {
    return *(double *)a1 == *(double *)a2;
  }
  return result;
}

void Lyrics.Word.hash(into:)(uint64_t a1)
{
  swift_bridgeObjectRetain();
  sub_100534DD0();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_1003DC1C4(a1, v3);
  swift_bridgeObjectRelease();
  sub_100262D90((uint64_t *)(v1 + 24), (uint64_t)v6);
  sub_100262D90(v6, (uint64_t)&v7);
  if (v8 == 1)
  {
    sub_100536960(0);
  }
  else
  {
    Swift::UInt64 v4 = v7;
    sub_100536960(1uLL);
    if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v5 = v4;
    }
    else {
      Swift::UInt64 v5 = 0;
    }
    sub_100536990(v5);
  }
}

uint64_t static Lyrics.Word.__derived_struct_equals(_:_:)(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_100536780(), result = 0, (v5 & 1) != 0))
  {
    if (sub_1003D1BC8(a1[2], a2[2]))
    {
      sub_100262D90(a1 + 3, (uint64_t)v9);
      sub_100262D90(a2 + 3, (uint64_t)v8);
      sub_100262D90(v9, (uint64_t)&v10);
      if (v11 == 1)
      {
        sub_100262D90(v8, (uint64_t)&v12);
        if (v13) {
          return 1;
        }
      }
      else
      {
        double v7 = v10;
        sub_100262D90(v8, (uint64_t)&v12);
        if ((v13 & 1) == 0 && v7 == v12) {
          return 1;
        }
      }
    }
    return 0;
  }
  return result;
}

Swift::Int Lyrics.Word.hashValue.getter()
{
  sub_100536950();
  Lyrics.Word.hash(into:)((uint64_t)v1);
  return sub_1005369A0();
}

Swift::Int sub_1003D27D4()
{
  long long v1 = v0[1];
  long long v4 = *v0;
  long long v5 = v1;
  char v6 = *((unsigned char *)v0 + 32);
  sub_100536950();
  Lyrics.Word.hash(into:)((uint64_t)v3);
  return sub_1005369A0();
}

void sub_1003D2828(uint64_t a1)
{
}

Swift::Int sub_1003D2864()
{
  long long v1 = v0[1];
  long long v4 = *v0;
  long long v5 = v1;
  char v6 = *((unsigned char *)v0 + 32);
  sub_100536950();
  Lyrics.Word.hash(into:)((uint64_t)v3);
  return sub_1005369A0();
}

uint64_t sub_1003D28B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  double v3 = *(double *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v5 = *(void *)(a2 + 16);
  double v6 = *(double *)(a2 + 24);
  int v7 = *(unsigned __int8 *)(a2 + 32);
  BOOL v8 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v8 || (char v9 = sub_100536780(), result = 0, (v9 & 1) != 0))
  {
    int v11 = sub_1003D1BC8(v2, v5);
    int v12 = v11 ^ 1 | v4;
    if ((v12 | v7)) {
      return v11 & v7 & v12;
    }
    else {
      return v3 == v6;
    }
  }
  return result;
}

uint64_t Lyrics.TextLine.BackgroundVocals.range.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t Lyrics.Syllable.wordLength.getter()
{
  return *(void *)(v0 + 48);
}

void Lyrics.Syllable.hash(into:)()
{
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  sub_100536990(v1);
  if ((v0[1] & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = v0[1];
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  sub_100536990(v2);
  sub_1003DC45C((uint64_t)v0);
  sub_100534DD0();
  sub_10019F5CC((uint64_t)v0);
  Swift::UInt v3 = v0[5];
  sub_100536960(v0[4]);
  sub_100536960(v3);
  sub_100536960(v0[6]);
}

Swift::Int Lyrics.Syllable.hashValue.getter()
{
  sub_100536950();
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  sub_100536990(v1);
  if ((v0[1] & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = v0[1];
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  sub_100536990(v2);
  sub_1003DC45C((uint64_t)v0);
  sub_100534DD0();
  sub_10019F5CC((uint64_t)v0);
  Swift::UInt v3 = v0[5];
  sub_100536960(v0[4]);
  sub_100536960(v3);
  sub_100536960(v0[6]);
  return sub_1005369A0();
}

Swift::Int sub_1003D2AB4()
{
  return Lyrics.Syllable.hashValue.getter();
}

void sub_1003D2AF8()
{
}

Swift::Int sub_1003D2B3C()
{
  Swift::UInt64 v1 = *v0;
  Swift::UInt64 v2 = v0[1];
  Swift::UInt v3 = v0[4];
  Swift::UInt v4 = v0[5];
  Swift::UInt v5 = v0[6];
  sub_100536950();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v6 = v1;
  }
  else {
    Swift::UInt64 v6 = 0;
  }
  sub_100536990(v6);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v7 = v2;
  }
  else {
    Swift::UInt64 v7 = 0;
  }
  sub_100536990(v7);
  swift_bridgeObjectRetain();
  sub_100534DD0();
  swift_bridgeObjectRelease();
  sub_100536960(v3);
  sub_100536960(v4);
  sub_100536960(v5);
  return sub_1005369A0();
}

BOOL sub_1003D2BFC(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  _OWORD v5[2] = *(_OWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  _OWORD v7[2] = *(_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  return _s11MusicCoreUI6LyricsC8SyllableV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v5, (uint64_t)v7);
}

uint64_t Lyrics.TextLine.words.getter()
{
  return (*(uint64_t (**)(void))(v0 + 72))();
}

uint64_t Lyrics.TextLine.text.getter()
{
  return (*(uint64_t (**)(void))(v0 + 56))();
}

uint64_t Lyrics.TextLine.backgroundVocals.getter@<X0>(uint64_t a1@<X8>)
{
  (*(void (**)(void *__return_ptr))(v1 + 88))(v4);
  return sub_100013A18((uint64_t)v4, a1, &qword_100671750);
}

uint64_t Lyrics.TextLine.backgroundText.getter()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 88))(v3);
  sub_100013A18((uint64_t)v3, (uint64_t)v4, &qword_100671750);
  if (!v6) {
    return 0;
  }
  uint64_t v1 = v5;
  swift_bridgeObjectRetain();
  sub_1003DC488(v3);
  return v1;
}

uint64_t Lyrics.TextLine.debugDescription.getter()
{
  sub_1005361C0(54);
  v2._object = (void *)0x80000001005671F0;
  v2._uint64_t countAndFlagsBits = 0xD000000000000014;
  sub_100534E80(v2);
  v3._uint64_t countAndFlagsBits = sub_100536700();
  sub_100534E80(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 0x6954747261747320;
  v4._object = (void *)0xEB000000003D656DLL;
  sub_100534E80(v4);
  sub_100535410();
  v5._uint64_t countAndFlagsBits = 0x656D6954646E6520;
  v5._object = (void *)0xE90000000000003DLL;
  sub_100534E80(v5);
  sub_100535410();
  v6._uint64_t countAndFlagsBits = 0x3D7478657420;
  v6._object = (void *)0xE600000000000000;
  sub_100534E80(v6);
  v7._uint64_t countAndFlagsBits = (*(uint64_t (**)(void))(v0 + 56))();
  sub_100534E80(v7);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t Lyrics.TextLine.textAlignment.getter()
{
  if (*(unsigned char *)(v0 + 26))
  {
    if ((*(unsigned char *)(v0 + 24) & 1) == 0) {
      return 2;
    }
  }
  else if (*(unsigned char *)(v0 + 24))
  {
    return 2;
  }
  return 0;
}

_UNKNOWN **static Lyrics.Capability.allCases.getter()
{
  return &off_1006314D0;
}

uint64_t Lyrics.TextLine.init(lineIndex:startTime:endTime:primaryVocalsStartTime:primaryVocalsEndTime:agentAlignment:direction:lyricsDirection:capabilities:localizedTextProvider:localizedWordsProvider:localizedBackgroundVocalsProvider:)@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, long long a14, uint64_t a15)
{
  *(double *)a9 = a10;
  *(double *)(a9 + 8) = a11;
  *(void *)(a9 + 16) = result;
  *(unsigned char *)(a9 + 24) = a2 & 1;
  *(unsigned char *)(a9 + 25) = a3 & 1;
  *(unsigned char *)(a9 + 26) = a4 & 1;
  *(void *)(a9 + 32) = a5;
  *(double *)(a9 + 40) = a12;
  *(double *)(a9 + 48) = a13;
  *(void *)(a9 + 56) = a6;
  *(void *)(a9 + 64) = a7;
  *(void *)(a9 + 72) = a8;
  *(_OWORD *)(a9 + 80) = a14;
  *(void *)(a9 + 96) = a15;
  return result;
}

uint64_t Lyrics.TextLine.hash(into:)()
{
  sub_100536960(*(void *)(v0 + 16));
  if ((*(void *)v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *(void *)v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  sub_100536990(v1);
  if ((*(void *)(v0 + 8) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = *(void *)(v0 + 8);
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  sub_100536990(v2);
  (*(void (**)(void))(v0 + 56))();
  sub_100534DD0();

  return swift_bridgeObjectRelease();
}

uint64_t Lyrics.TextLine.BackgroundVocals.direction.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t Lyrics.TextLine.BackgroundVocals.words.getter()
{
  return swift_bridgeObjectRetain();
}

Swift::Int Lyrics.TextLine.hashValue.getter()
{
  return sub_1005369A0();
}

uint64_t sub_1003D3018()
{
  if (*(unsigned char *)(v0 + 26))
  {
    if (*(unsigned char *)(v0 + 24)) {
      return 0;
    }
  }
  else if ((*(unsigned char *)(v0 + 24) & 1) == 0)
  {
    return 0;
  }
  return 2;
}

Swift::Int sub_1003D3040()
{
  return sub_1005369A0();
}

uint64_t sub_1003D3080(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v2;
  uint64_t v12 = *(void *)(a1 + 96);
  long long v3 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  _OWORD v11[2] = *(_OWORD *)(a1 + 32);
  void v11[3] = v4;
  long long v5 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 32);
  long long v7 = *(_OWORD *)(a2 + 48);
  long long v8 = *(_OWORD *)(a2 + 64);
  long long v9 = *(_OWORD *)(a2 + 80);
  uint64_t v14 = *(void *)(a2 + 96);
  v13[4] = v8;
  _OWORD v13[5] = v9;
  _OWORD v13[2] = v6;
  v13[3] = v7;
  return _s11MusicCoreUI6LyricsC8TextLineV2eeoiySbAE_AEtFZ_0((uint64_t)v11, (uint64_t)v13) & 1;
}

double Lyrics.InstrumentalLine.endTime.getter(double a1, double a2)
{
  return a2;
}

uint64_t Lyrics.InstrumentalLine.lyricsDirection.getter(uint64_t a1, char a2)
{
  return a2 & 1;
}

uint64_t Lyrics.InstrumentalLine.textAlignment.getter(uint64_t a1, char a2)
{
  return 2 * (a2 & 1u);
}

uint64_t Lyrics.InstrumentalLine.debugDescription.getter()
{
  sub_1005361C0(54);
  v1._object = (void *)0x8000000100567210;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  sub_100534E80(v1);
  v2._uint64_t countAndFlagsBits = sub_100536700();
  sub_100534E80(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0x6954747261747320;
  v3._object = (void *)0xEB000000003D656DLL;
  sub_100534E80(v3);
  sub_100535410();
  v4._uint64_t countAndFlagsBits = 0x656D6954646E6520;
  v4._object = (void *)0xE90000000000003DLL;
  sub_100534E80(v4);
  sub_100535410();
  return 0;
}

uint64_t Lyrics.SongwritersLine.textAlignment.getter()
{
  if (*(unsigned char *)(v0 + 24)) {
    return 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_1003D3244()
{
  return Lyrics.InstrumentalLine.debugDescription.getter();
}

uint64_t Lyrics.SongwritersLine.debugDescription.getter()
{
  sub_1005361C0(68);
  v2._object = (void *)0x8000000100567230;
  v2._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  sub_100534E80(v2);
  v3._uint64_t countAndFlagsBits = sub_100536700();
  sub_100534E80(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 0x6954747261747320;
  v4._object = (void *)0xEB000000003D656DLL;
  sub_100534E80(v4);
  sub_100535410();
  v5._uint64_t countAndFlagsBits = 0x656D6954646E6520;
  v5._object = (void *)0xE90000000000003DLL;
  sub_100534E80(v5);
  sub_100535410();
  v6._uint64_t countAndFlagsBits = 0x697277676E6F7320;
  v6._object = (void *)0xED00003D73726574;
  sub_100534E80(v6);
  swift_bridgeObjectRetain();
  v7._uint64_t countAndFlagsBits = sub_1005350F0();
  sub_100534E80(v7);
  swift_bridgeObjectRelease();
  sub_1003DC508(v0);
  return 0;
}

uint64_t sub_1003D33C8()
{
  return Lyrics.SongwritersLine.debugDescription.getter();
}

uint64_t Lyrics.originalLines.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Lyrics.availableLanguages.getter()
{
  return swift_bridgeObjectRetain();
}

double Lyrics.leadingSilence.getter()
{
  return *(double *)(v0 + 88);
}

uint64_t Lyrics.vocalistsType.getter()
{
  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t Lyrics.songwriters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Lyrics.currentLanguage.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Lyrics.currentLanguage.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*Lyrics.currentLanguage.modify())()
{
  return j__swift_endAccess;
}

uint64_t Lyrics.staticText.getter()
{
  if (*(void *)(v0 + 144))
  {
    uint64_t v1 = *(void *)(v0 + 136);
  }
  else
  {
    uint64_t v1 = sub_1003D3590(v0);
    *(void *)(v0 + 136) = v1;
    *(void *)(v0 + 144) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1003D3590(uint64_t a1)
{
  void (*v12)(uint64_t *__return_ptr);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t countAndFlagsBits;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24[8];
  unsigned char v25[16];
  uint64_t v26;
  uint64_t v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;

  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v22 = 0;
  uint64_t v23 = 0xE000000000000000;
  uint64_t v20 = *(void *)(v1 + 16);
  if (v20)
  {
    unint64_t v19 = v1 + 32;
    swift_bridgeObjectRetain_n();
    uint64_t v2 = 0;
    do
    {
      uint64_t v5 = *(void *)(v19 + 8 * v2);
      uint64_t v3 = v22;
      unint64_t v4 = v23;
      uint64_t v6 = *(void *)(v5 + 16);
      if (v6)
      {
        BOOL v21 = v2;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v7 = v5 + 128;
        do
        {
          int v11 = *(uint64_t (**)(uint64_t))(v7 - 40);
          uint64_t v12 = *(void (**)(uint64_t *__return_ptr))(v7 - 8);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          char v13 = swift_retain();
          if ((v23 & 0xF00000000000000) != 0)
          {
            v33._uint64_t countAndFlagsBits = 10;
            v33._object = (void *)0xE100000000000000;
            sub_100534E80(v33);
          }
          uint64_t v14 = v11(v13);
          uint64_t v16 = v15;
          v12(v24);
          sub_100013A18((uint64_t)v24, (uint64_t)v25, &qword_100671750);
          uint64_t v9 = v27;
          if (v27)
          {
            uint64_t v8 = v26;
            swift_bridgeObjectRetain();
            sub_1003DC488(v24);
            v29._uint64_t countAndFlagsBits = v8;
            v29._object = (void *)v9;
            sub_100534E80(v29);
            v30._uint64_t countAndFlagsBits = 41;
            v30._object = (void *)0xE100000000000000;
            sub_100534E80(v30);
            swift_bridgeObjectRelease();
            uint64_t v9 = 40;
            double v10 = (void *)0xE100000000000000;
          }
          else
          {
            double v10 = (void *)0xE000000000000000;
          }
          swift_bridgeObjectRetain();
          v31._uint64_t countAndFlagsBits = v9;
          v31._object = v10;
          sub_100534E80(v31);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v32._uint64_t countAndFlagsBits = v14;
          v32._object = v16;
          sub_100534E80(v32);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          v7 += 104;
          --v6;
        }
        while (v6);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v3 = v22;
        unint64_t v4 = v23;
        uint64_t v2 = v21;
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      ++v2;
      uint64_t v22 = v3;
      uint64_t v23 = v4;
      v28._uint64_t countAndFlagsBits = 10;
      v28._object = (void *)0xE100000000000000;
      sub_100534E80(v28);
      swift_bridgeObjectRelease();
    }
    while (v2 != v20);
    swift_bridgeObjectRelease_n();
  }
  uint64_t countAndFlagsBits = String.trim()()._countAndFlagsBits;
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t Lyrics.staticText.setter(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*Lyrics.staticText.modify(uint64_t *a1))(void *a1)
{
  a1[2] = v1;
  *a1 = Lyrics.staticText.getter();
  a1[1] = v3;
  return sub_1003D388C;
}

uint64_t sub_1003D388C(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v1 = a1[2];
  *(void *)(v1 + 136) = *a1;
  *(void *)(v1 + 144) = v2;
  return swift_bridgeObjectRelease();
}

uint64_t Lyrics.alignment(for:default:)(void *a1, uint64_t a2, char a3)
{
  if (*(unsigned char *)(v3 + 96))
  {
    uint64_t v4 = a1[3];
    uint64_t v5 = a1[4];
    sub_10000ECD4(a1, v4);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  }
  else
  {
    sub_100104808((uint64_t)a1, (uint64_t)v11);
    if (a3)
    {
      uint64_t v9 = v12;
      uint64_t v10 = v13;
      sub_10000ECD4(v11, v12);
      a2 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
    }
    sub_100013D48((uint64_t)v11);
    return a2;
  }
}

double *Lyrics.originalLine(for:)@<X0>(double *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  long long v5 = 0uLL;
  if (!v4)
  {
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    long long v25 = 0uLL;
    long long v26 = 0uLL;
    long long v27 = 0uLL;
    goto LABEL_20;
  }
  uint64_t v6 = result;
  uint64_t v31 = a2;
  double v7 = *result;
  swift_bridgeObjectRetain_n();
  uint64_t v8 = 0;
  while (1)
  {
    uint64_t v9 = v3 + v8;
    long long v10 = *(_OWORD *)(v3 + v8 + 32);
    if (*(double *)&v10 != v7 || *((double *)&v10 + 1) != v6[1]) {
      goto LABEL_3;
    }
    uint64_t v38 = *(void *)(v9 + 48);
    uint64_t v34 = *(unsigned __int8 *)(v9 + 56);
    int v32 = *(unsigned __int8 *)(v9 + 57);
    int v33 = *(unsigned __int8 *)(v9 + 58);
    long long v35 = *(_OWORD *)(v3 + v8 + 32);
    long long v36 = *(_OWORD *)(v9 + 72);
    int v11 = *(uint64_t (**)(void))(v9 + 88);
    long long v40 = *(_OWORD *)(v9 + 112);
    long long v41 = *(_OWORD *)(v9 + 96);
    uint64_t v12 = *(void *)(v9 + 128);
    uint64_t v39 = *(void *)(v9 + 64);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v13 = swift_retain();
    uint64_t v37 = v11;
    uint64_t v14 = v11(v13);
    uint64_t v16 = v15;
    if (v14 == (*((uint64_t (**)(void))v6 + 7))() && v16 == v17) {
      break;
    }
    char v19 = sub_100536780();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_15;
    }
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
LABEL_3:
    v8 += 104;
    if (!--v4)
    {
      uint64_t result = (double *)swift_bridgeObjectRelease_n();
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      long long v25 = 0uLL;
      long long v26 = 0uLL;
      long long v27 = 0uLL;
      a2 = v31;
      long long v5 = 0uLL;
      goto LABEL_20;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_15:
  uint64_t result = (double *)swift_bridgeObjectRelease_n();
  uint64_t v28 = 256;
  if (!v32) {
    uint64_t v28 = 0;
  }
  uint64_t v29 = v28 | v34;
  uint64_t v30 = 0x10000;
  if (!v33) {
    uint64_t v30 = 0;
  }
  uint64_t v21 = v29 | v30;
  long long v5 = v35;
  long long v25 = v36;
  a2 = v31;
  uint64_t v23 = v37;
  uint64_t v20 = v38;
  uint64_t v24 = v12;
  uint64_t v22 = v39;
  long long v27 = v40;
  long long v26 = v41;
LABEL_20:
  *(_OWORD *)a2 = v5;
  *(void *)(a2 + 16) = v20;
  *(void *)(a2 + 24) = v21;
  *(void *)(a2 + 32) = v22;
  *(_OWORD *)(a2 + 40) = v25;
  *(void *)(a2 + 56) = v23;
  *(_OWORD *)(a2 + 64) = v26;
  *(_OWORD *)(a2 + 80) = v27;
  *(void *)(a2 + 96) = v24;
  return result;
}

void sub_1003D3BD8(void *a1@<X8>)
{
  *a1 = &off_1006314F8;
}

NLLanguage sub_1003D3BE8()
{
  sub_10000BB04(&qword_100671AB0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10053A3A0;
  *(void *)(v0 + 32) = NLLanguageArabic;
  *(void *)(v0 + 40) = NLLanguageHebrew;
  qword_10067B720 = v0;
  uint64_t v1 = NLLanguageArabic;

  return NLLanguageHebrew;
}

NLLanguage sub_1003D3C68()
{
  sub_10000BB04(&qword_100671AB0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10053D3F0;
  *(void *)(v0 + 32) = NLLanguageJapanese;
  *(void *)(v0 + 40) = NLLanguageSimplifiedChinese;
  *(void *)(v0 + 48) = NLLanguageTraditionalChinese;
  qword_10067B728 = v0;
  uint64_t v1 = NLLanguageJapanese;
  uint64_t v2 = NLLanguageSimplifiedChinese;

  return NLLanguageTraditionalChinese;
}

uint64_t Lyrics.audioAttributes.getter()
{
  return swift_bridgeObjectRetain();
}

void Lyrics.AudioAttribute.hash(into:)(double a1)
{
  sub_100536960(0);
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  sub_100536990(v2);
}

BOOL static Lyrics.AudioAttribute.__derived_enum_equals(_:_:)(double a1, double a2)
{
  return a1 == a2;
}

Swift::Int Lyrics.AudioAttribute.hashValue.getter(double a1)
{
  sub_100536950();
  sub_100536960(0);
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  sub_100536990(v2);
  return sub_1005369A0();
}

Swift::Int sub_1003D3DC0()
{
  Swift::UInt64 v1 = *v0;
  sub_100536950();
  sub_100536960(0);
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = v1;
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  sub_100536990(v2);
  return sub_1005369A0();
}

void sub_1003D3E18()
{
  Swift::UInt64 v1 = *v0;
  sub_100536960(0);
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = v1;
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  sub_100536990(v2);
}

Swift::Int sub_1003D3E5C()
{
  Swift::UInt64 v1 = *v0;
  sub_100536950();
  sub_100536960(0);
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = v1;
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  sub_100536990(v2);
  return sub_1005369A0();
}

void Lyrics.spatialOffset.getter()
{
  uint64_t v1 = *(void *)(v0 + 152);
  char v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = -1;
  if (1 << v2 < 64) {
    uint64_t v3 = ~(-1 << (1 << v2));
  }
  if ((v3 & *(void *)(v1 + 56)) == 0)
  {
    unsigned int v4 = v2 & 0x3F;
    if (v4 > 6
      && !*(void *)(v1 + 64)
      && v4 >= 8
      && !*(void *)(v1 + 72)
      && !*(void *)(v1 + 80)
      && v4 >= 9
      && !*(void *)(v1 + 88))
    {
      unint64_t v5 = (unint64_t)((1 << v2) + 63) >> 6;
      if (v5 <= 5) {
        unint64_t v5 = 5;
      }
      unint64_t v6 = v5 - 5;
      double v7 = (uint64_t *)(v1 + 96);
      uint64_t v8 = 256;
      do
      {
        if (!v6) {
          break;
        }
        uint64_t v9 = *v7++;
        --v6;
        v8 += 64;
      }
      while (!v9);
    }
  }
}

uint64_t Lyrics.__allocating_init(identifier:songInfo:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  Lyrics.init(identifier:songInfo:)(a1, a2, a3);
  return v6;
}

uint64_t Lyrics.init(identifier:songInfo:)(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&long long v198 = sub_10052F830();
  int64_t v196 = *(void *)(v198 - 8);
  __chkstk_darwin();
  Swift::String v195 = (char *)v179 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[14] = 0;
  v3[15] = 0;
  unint64_t v8 = sub_1003CC5B0((uint64_t)_swiftEmptyArrayStorage);
  Swift::String v180 = v3;
  v3[16] = v8;
  uint64_t v9 = v3 + 16;
  v3[17] = 0;
  v3[18] = 0;
  _OWORD v3[2] = a1;
  v3[3] = a2;
  Swift::String v197 = a3;
  id v10 = [a3 language];
  if (v10)
  {
    int v11 = v10;
    uint64_t v12 = sub_100534CE0();
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v14 = 0;
  }
  uint64_t v15 = v180;
  v180[8] = v12;
  v15[9] = v14;
  uint64_t v16 = v197;
  id v17 = [v197 availableTranslations];
  uint64_t v18 = sub_1005350E0();

  v15[10] = v18;
  uint64_t v20 = v15[8];
  uint64_t v19 = v15[9];
  swift_beginAccess();
  v15[14] = v20;
  v15[15] = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v21 = sub_1003CC5B0((uint64_t)_swiftEmptyArrayStorage);
  swift_beginAccess();
  unsigned char v15[16] = v21;
  swift_bridgeObjectRelease();
  [v16 leadingSilence];
  v15[11] = v22;
  id v23 = [v16 songwriters];
  v179[1] = sub_100123DA4(0, &qword_100671758);
  unint64_t v24 = sub_1005350E0();

  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_100536470();
    swift_bridgeObjectRelease();
    if (v25) {
      goto LABEL_6;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    long long v27 = _swiftEmptyArrayStorage;
    goto LABEL_17;
  }
  uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v25) {
    goto LABEL_16;
  }
LABEL_6:
  *(void *)&long long v200 = _swiftEmptyArrayStorage;
  sub_1003D8B9C(0, v25 & ~(v25 >> 63), 0);
  if (v25 < 0)
  {
    __break(1u);
LABEL_107:
    swift_bridgeObjectRetain();
    uint64_t v98 = sub_100536470();
    swift_bridgeObjectRelease();
    if (!v98) {
      goto LABEL_108;
    }
LABEL_70:
    if (v98 < 1)
    {
      __break(1u);
LABEL_163:
      __break(1u);
LABEL_164:
      uint64_t result = sub_100536860();
      __break(1u);
      return result;
    }
    *(void *)&long long v199 = v15;
    uint64_t v99 = 0;
    uint64_t v100 = (char *)_swiftEmptyArrayStorage;
    Swift::String v187 = _swiftEmptyArrayStorage;
    while (1)
    {
      if ((v24 & 0xC000000000000001) != 0) {
        id v101 = (id)sub_100536210();
      }
      else {
        id v101 = *(id *)(v24 + 8 * v99 + 32);
      }
      id v102 = v101;
      id v103 = [v101 lines];
      sub_100123DA4(0, &qword_100671770);
      uint64_t v104 = sub_1005350E0();

      Swift::String v105 = sub_1003DEB98(v104, v181, v182, v183, v197, v186, (uint64_t)v194, v184);
      swift_bridgeObjectRelease();
      uint64_t v106 = *((void *)v105 + 2);
      int64_t v107 = *((void *)v100 + 2);
      int64_t v108 = v107 + v106;
      if (__OFADD__(v107, v106)) {
        goto LABEL_98;
      }
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
      uint64_t v110 = v100;
      if (isUniquelyReferenced_nonNull_native && v108 <= *((void *)v100 + 3) >> 1)
      {
        if (!*((void *)v105 + 2)) {
          goto LABEL_87;
        }
      }
      else
      {
        if (v107 <= v108) {
          int64_t v113 = v107 + v106;
        }
        else {
          int64_t v113 = v107;
        }
        uint64_t v110 = sub_1003D7BD4(isUniquelyReferenced_nonNull_native, v113, 1, v100);
        if (!*((void *)v105 + 2))
        {
LABEL_87:
          uint64_t v100 = v110;
          if (v106) {
            goto LABEL_99;
          }
          goto LABEL_88;
        }
      }
      if ((*((void *)v110 + 3) >> 1) - *((void *)v110 + 2) < v106) {
        goto LABEL_100;
      }
      uint64_t v100 = v110;
      swift_arrayInitWithCopy();
      if (v106)
      {
        uint64_t v111 = *((void *)v100 + 2);
        BOOL v68 = __OFADD__(v111, v106);
        uint64_t v112 = v111 + v106;
        if (v68) {
          goto LABEL_102;
        }
        *((void *)v100 + 2) = v112;
      }
LABEL_88:
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::String v187 = sub_1003D8088(0, v187[2] + 1, 1, v187, &qword_100671778, &qword_100671A40);
      }
      unint64_t v115 = v187[2];
      unint64_t v114 = v187[3];
      if (v115 >= v114 >> 1) {
        Swift::String v187 = sub_1003D8088((void *)(v114 > 1), v115 + 1, 1, v187, &qword_100671778, &qword_100671A40);
      }
      ++v99;
      uint64_t v116 = v187;
      v187[2] = v115 + 1;
      v116[v115 + 4] = v105;

      if (v98 == v99)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_109;
      }
    }
  }
  Swift::String v194 = (_UNKNOWN **)v9;
  uint64_t v26 = 0;
  long long v27 = (void *)v200;
  *(void *)&long long v199 = v24 & 0xC000000000000001;
  unint64_t v28 = v24;
  uint64_t v29 = v25;
  do
  {
    if ((void)v199) {
      id v30 = (id)sub_100536210();
    }
    else {
      id v30 = *(id *)(v24 + 8 * v26 + 32);
    }
    uint64_t v31 = v30;
    id v32 = [v30 name];
    uint64_t v33 = sub_100534CE0();
    uint64_t v35 = v34;

    *(void *)&long long v200 = v27;
    unint64_t v37 = v27[2];
    unint64_t v36 = v27[3];
    if (v37 >= v36 >> 1)
    {
      sub_1003D8B9C((char *)(v36 > 1), v37 + 1, 1);
      long long v27 = (void *)v200;
    }
    ++v26;
    v27[2] = v37 + 1;
    uint64_t v38 = &v27[2 * v37];
    v38[4] = v33;
    v38[5] = v35;
    unint64_t v24 = v28;
  }
  while (v29 != v26);
  swift_bridgeObjectRelease();
  uint64_t v9 = v194;
LABEL_17:
  v180[13] = v27;
  id v39 = [v197 audioAttributes];
  if (v39)
  {
    long long v40 = v39;
    long long v41 = &selRef_setAnimationTimingFunction_;
    if ([v39 isSpatialRole])
    {
      [v40 lyricsOffset];
      uint64_t v43 = v42;

      sub_10000BB04(&qword_100671780);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10053A3B0;
      *(void *)(inited + 32) = v43;
      uint64_t v45 = (void *)sub_1003C8484(inited);
      swift_setDeallocating();
    }
    else
    {

      uint64_t v45 = &_swiftEmptySetSingleton;
    }
  }
  else
  {
    uint64_t v45 = &_swiftEmptySetSingleton;
    long long v41 = &selRef_setAnimationTimingFunction_;
  }
  id v46 = v180;
  v180[19] = v45;
  id v47 = v197;
  id v48 = [v197 type];
  char v49 = v48 == (id)1;
  if (v48 == (id)2) {
    char v49 = 2;
  }
  *((unsigned char *)v46 + 56) = v49;
  uint64_t v184 = swift_allocObject();
  v179[0] = v184 + 16;
  swift_weakInit();
  Swift::String v183 = (BOOL *)swift_allocObject();
  v183[16] = 0;
  uint64_t v182 = swift_allocObject();
  *(void *)(v182 + 16) = 0;
  id v50 = [v47 v41[239]];
  if (v50)
  {
    id v51 = v50;
    sub_100534CE0();

    swift_bridgeObjectRetain();
    id v52 = v195;
    sub_10052F800();
    BOOL v186 = sub_10052F820() == 2;
    (*(void (**)(char *, void))(v196 + 8))(v52, v198);
    swift_bridgeObjectRelease();
  }
  else
  {
    BOOL v186 = 0;
  }
  id v53 = [v197 v41[239]];
  if (v53)
  {
    uint64_t v54 = v53;
    uint64_t v55 = sub_100534CE0();
    uint64_t v57 = v56;
  }
  else
  {
    uint64_t v55 = 0;
    uint64_t v57 = 0;
  }
  Swift::String v194 = sub_1003DC5B4(v55, v57);
  swift_bridgeObjectRelease();
  id v58 = [v197 translationsMap];
  sub_10000BB04(&qword_100671760);
  uint64_t v59 = sub_100534AB0();

  uint64_t v60 = 0;
  uint64_t v61 = *(void *)(v59 + 64);
  Swift::String v195 = (char *)(v59 + 64);
  *(void *)&long long v198 = v59;
  uint64_t v62 = 1 << *(unsigned char *)(v59 + 32);
  uint64_t v63 = -1;
  if (v62 < 64) {
    uint64_t v63 = ~(-1 << v62);
  }
  unint64_t v64 = v63 & v61;
  int64_t v196 = (unint64_t)(v62 + 63) >> 6;
  while (1)
  {
    if (v64)
    {
      unint64_t v66 = __clz(__rbit64(v64));
      v64 &= v64 - 1;
      *(void *)&long long v199 = v60;
      unint64_t v67 = v66 | (v60 << 6);
      goto LABEL_48;
    }
    BOOL v68 = __OFADD__(v60, 1);
    int64_t v69 = v60 + 1;
    if (v68) {
      goto LABEL_97;
    }
    if (v69 >= v196) {
      break;
    }
    unint64_t v70 = *(void *)&v195[8 * v69];
    if (!v70)
    {
      int64_t v71 = v69 + 1;
      if (v69 + 1 >= v196) {
        break;
      }
      unint64_t v70 = *(void *)&v195[8 * v71];
      if (!v70)
      {
        int64_t v71 = v69 + 2;
        if (v69 + 2 >= v196) {
          break;
        }
        unint64_t v70 = *(void *)&v195[8 * v71];
        if (!v70)
        {
          int64_t v71 = v69 + 3;
          if (v69 + 3 >= v196) {
            break;
          }
          unint64_t v70 = *(void *)&v195[8 * v71];
          if (!v70)
          {
            while (1)
            {
              int64_t v69 = v71 + 1;
              if (__OFADD__(v71, 1)) {
                goto LABEL_101;
              }
              if (v69 >= v196) {
                goto LABEL_63;
              }
              unint64_t v70 = *(void *)&v195[8 * v69];
              ++v71;
              if (v70) {
                goto LABEL_47;
              }
            }
          }
        }
      }
      int64_t v69 = v71;
    }
LABEL_47:
    unint64_t v64 = (v70 - 1) & v70;
    *(void *)&long long v199 = v69;
    unint64_t v67 = __clz(__rbit64(v70)) + (v69 << 6);
LABEL_48:
    long long v72 = (uint64_t *)(*(void *)(v198 + 48) + 16 * v67);
    uint64_t v73 = *v72;
    uint64_t v74 = v72[1];
    swift_bridgeObjectRetain_n();
    uint64_t v75 = v197;
    uint64_t v76 = swift_bridgeObjectRetain();
    uint64_t v77 = sub_1003DE81C(v76, v75, v73, v74);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v78 = swift_isUniquelyReferenced_nonNull_native();
    Swift::String v203 = (void *)*v9;
    uint64_t v79 = v203;
    uint64_t v80 = v9;
    void *v9 = 0x8000000000000000;
    unint64_t v82 = sub_1001A1AC8(v73, v74);
    uint64_t v83 = v79[2];
    BOOL v84 = (v81 & 1) == 0;
    uint64_t v85 = v83 + v84;
    if (__OFADD__(v83, v84))
    {
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
      goto LABEL_103;
    }
    char v86 = v81;
    if (v79[3] >= v85)
    {
      if (v78)
      {
        if (v81) {
          goto LABEL_33;
        }
      }
      else
      {
        sub_1003DB378();
        uint64_t v79 = v203;
        if (v86) {
          goto LABEL_33;
        }
      }
    }
    else
    {
      sub_1003DA3CC(v85, v78);
      uint64_t v79 = v203;
      unint64_t v87 = sub_1001A1AC8(v73, v74);
      if ((v86 & 1) != (v88 & 1)) {
        goto LABEL_164;
      }
      unint64_t v82 = v87;
      if (v86)
      {
LABEL_33:
        uint64_t v65 = v79[7];
        swift_bridgeObjectRelease();
        *(void *)(v65 + 8 * v82) = v77;
        goto LABEL_34;
      }
    }
    v79[(v82 >> 6) + 8] |= 1 << v82;
    uint64_t v89 = (uint64_t *)(v79[6] + 16 * v82);
    uint64_t *v89 = v73;
    v89[1] = v74;
    *(void *)(v79[7] + 8 * v82) = v77;
    uint64_t v90 = v79[2];
    BOOL v68 = __OFADD__(v90, 1);
    uint64_t v91 = v90 + 1;
    if (v68) {
      goto LABEL_96;
    }
    v79[2] = v91;
    swift_bridgeObjectRetain();
LABEL_34:
    uint64_t v9 = v80;
    *uint64_t v80 = v79;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v60 = v199;
  }
LABEL_63:
  swift_release();
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
  {
LABEL_64:
    id v92 = &_swiftEmptySetSingleton;
    goto LABEL_65;
  }
LABEL_103:
  if (!sub_100536470()) {
    goto LABEL_64;
  }
  sub_1003C85DC((unint64_t)_swiftEmptyArrayStorage);
  id v92 = v121;
LABEL_65:
  uint64_t v93 = swift_allocObject();
  Swift::String v181 = (char *)v93;
  *(void *)(v93 + 16) = v92;
  uint64_t v15 = (void *)(v93 + 16);
  id v94 = [v197 lyricsSections];
  sub_100123DA4(0, &qword_100671768);
  unint64_t v95 = sub_1005350E0();

  if (v95 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v96 = sub_100536470();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v96 = *(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v96 <= 0)
  {
    uint64_t v117 = v197;
    id v118 = [v197 lyricsLines];
    sub_100123DA4(0, &qword_100671770);
    uint64_t v119 = sub_1005350E0();

    uint64_t v100 = sub_1003DEB98(v119, v181, v182, v183, v117, v186, (uint64_t)v194, v184);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10000BB04(&qword_100671778);
    uint64_t v120 = swift_allocObject();
    *(_OWORD *)(v120 + 16) = xmmword_10053A3B0;
    Swift::String v187 = (void *)v120;
    *(void *)(v120 + 32) = v100;
    swift_bridgeObjectRetain();
    goto LABEL_109;
  }
  id v97 = [v197 lyricsSections];
  unint64_t v24 = sub_1005350E0();

  if (v24 >> 62) {
    goto LABEL_107;
  }
  uint64_t v98 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v98) {
    goto LABEL_70;
  }
LABEL_108:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v100 = (char *)_swiftEmptyArrayStorage;
  Swift::String v187 = _swiftEmptyArrayStorage;
LABEL_109:
  swift_beginAccess();
  uint64_t v122 = swift_bridgeObjectRetain();
  char v123 = sub_1003DF930(v122);
  swift_bridgeObjectRelease();
  uint64_t v124 = v180;
  *((unsigned char *)v180 + 96) = v123;
  v124[6] = v100;
  uint64_t v125 = *((void *)v100 + 2);
  Swift::String v185 = v100;
  if (v125)
  {
    int64_t v126 = *((void *)v100 + 14);
    Swift::String v127 = (char *)*((void *)v100 + 12);
    unint64_t v128 = (_UNKNOWN **)*((void *)v100 + 8);
    double v129 = *((double *)v100 + 4);
    double v130 = *((double *)v100 + 5);
    swift_bridgeObjectRetain_n();
    Swift::String v194 = v128;
    swift_bridgeObjectRetain();
    Swift::String v195 = v127;
    swift_retain();
    int64_t v196 = v126;
    swift_retain();
    swift_retain();
    uint64_t v131 = 0;
    uint64_t v132 = 0;
    Swift::String v133 = _swiftEmptyArrayStorage;
    while (1)
    {
      double v135 = *(double *)&v185[v131 + 32];
      double v134 = *(double *)&v185[v131 + 40];
      int v136 = v185[v131 + 56];
      int v137 = v185[v131 + 57];
      int v138 = v185[v131 + 58];
      Swift::String v139 = *(char ***)&v185[v131 + 64];
      long long v140 = *(_OWORD *)&v185[v131 + 72];
      uint64_t v141 = *(void *)&v185[v131 + 88];
      long long v199 = *(_OWORD *)&v185[v131 + 96];
      long long v198 = *(_OWORD *)&v185[v131 + 112];
      uint64_t v142 = *(void *)&v185[v131 + 128];
      long long v193 = v140;
      int v192 = v136;
      int v191 = v137;
      int v190 = v138;
      uint64_t v189 = v141;
      if (v132 || v129 <= 7.0)
      {
        if (v135 - v130 <= 7.0)
        {
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_retain();
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            Swift::String v133 = sub_1003D7CF4(0, v133[2] + 1, 1, v133);
          }
          unint64_t v147 = v133[2];
          unint64_t v146 = v133[3];
          if (v147 >= v146 >> 1) {
            Swift::String v133 = sub_1003D7CF4((void *)(v146 > 1), v147 + 1, 1, v133);
          }
          Swift::String v201 = &type metadata for Lyrics.InstrumentalLine;
          Swift::String v202 = &protocol witness table for Lyrics.InstrumentalLine;
          uint64_t v148 = swift_allocObject();
          *(void *)&long long v200 = v148;
          *(void *)(v148 + 16) = v132;
          *(double *)(v148 + 24) = v130 + 0.1;
          *(double *)(v148 + 32) = v135;
          *(unsigned char *)(v148 + 40) = v186;
          v133[2] = v147 + 1;
          sub_1000ECF64(&v200, (uint64_t)&v133[5 * v147 + 4]);
          BOOL v68 = __OFADD__(v132++, 1);
          if (v68) {
            goto LABEL_159;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          Swift::String v133 = sub_1003D7CF4(0, v133[2] + 1, 1, v133);
        }
        unint64_t v144 = v133[2];
        unint64_t v143 = v133[3];
        if (v144 >= v143 >> 1) {
          Swift::String v133 = sub_1003D7CF4((void *)(v143 > 1), v144 + 1, 1, v133);
        }
        Swift::String v201 = &type metadata for Lyrics.InstrumentalLine;
        Swift::String v202 = &protocol witness table for Lyrics.InstrumentalLine;
        uint64_t v145 = swift_allocObject();
        *(void *)&long long v200 = v145;
        *(void *)(v145 + 16) = 0;
        *(void *)(v145 + 24) = 0;
        *(double *)(v145 + 32) = v129;
        *(unsigned char *)(v145 + 40) = v186;
        v133[2] = v144 + 1;
        sub_1000ECF64(&v200, (uint64_t)&v133[5 * v144 + 4]);
        uint64_t v132 = 1;
      }
      uint64_t v188 = v125;
      swift_bridgeObjectRetain_n();
      Swift::String v149 = (char *)v199;
      swift_retain_n();
      int64_t v150 = v198;
      swift_retain_n();
      swift_retain_n();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::String v133 = sub_1003D7CF4(0, v133[2] + 1, 1, v133);
      }
      unint64_t v152 = v133[2];
      unint64_t v151 = v133[3];
      Swift::String v153 = v133;
      if (v152 >= v151 >> 1) {
        Swift::String v153 = sub_1003D7CF4((void *)(v151 > 1), v152 + 1, 1, v133);
      }
      Swift::String v201 = &type metadata for Lyrics.TextLine;
      Swift::String v202 = &protocol witness table for Lyrics.TextLine;
      uint64_t v154 = swift_allocObject();
      *(void *)&long long v200 = v154;
      *(double *)(v154 + 16) = v135;
      *(double *)(v154 + 24) = v134;
      *(void *)(v154 + 32) = v132;
      *(unsigned char *)(v154 + 40) = v192;
      *(unsigned char *)(v154 + 41) = v191;
      *(unsigned char *)(v154 + 42) = v190;
      *(void *)(v154 + 48) = v139;
      *(_OWORD *)(v154 + 56) = v193;
      *(void *)(v154 + 72) = v189;
      long long v155 = v198;
      *(_OWORD *)(v154 + 80) = v199;
      *(_OWORD *)(v154 + 96) = v155;
      *(void *)(v154 + 112) = v142;
      v153[2] = v152 + 1;
      Swift::String v133 = v153;
      sub_1000ECF64(&v200, (uint64_t)&v153[5 * v152 + 4]);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      BOOL v68 = __OFADD__(v132++, 1);
      if (v68) {
        break;
      }
      v131 += 104;
      double v129 = v135;
      double v130 = v134;
      Swift::String v194 = (_UNKNOWN **)v139;
      Swift::String v195 = v149;
      int64_t v196 = v150;
      uint64_t v125 = v188 - 1;
      if (v188 == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_135;
      }
    }
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    swift_bridgeObjectRetain();
    uint64_t v158 = sub_100536470();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v132 = 0;
    Swift::String v133 = _swiftEmptyArrayStorage;
    double v134 = 0.0;
LABEL_135:
    Swift::String v139 = &selRef_setAnimationTimingFunction_;
    id v156 = [v197 songwriters];
    unint64_t v157 = sub_1005350E0();

    if (v157 >> 62) {
      goto LABEL_160;
    }
    uint64_t v158 = *(void *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v158)
  {
    swift_bridgeObjectRelease();
    goto LABEL_157;
  }
  id v159 = [v197 v139[454]];
  unint64_t v160 = sub_1005350E0();

  if (v160 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v161 = sub_100536470();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v161 = *(void *)((v160 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)&long long v198 = v133;
  if (!v161)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    Swift::String v163 = _swiftEmptyArrayStorage;
    goto LABEL_152;
  }
  *(void *)&long long v200 = _swiftEmptyArrayStorage;
  sub_1003D8B9C(0, v161 & ~(v161 >> 63), 0);
  if (v161 < 0) {
    goto LABEL_163;
  }
  uint64_t v162 = 0;
  Swift::String v163 = (void *)v200;
  *(void *)&long long v199 = v160 & 0xC000000000000001;
  unint64_t v164 = v160;
  do
  {
    if ((void)v199) {
      id v165 = (id)sub_100536210();
    }
    else {
      id v165 = *(id *)(v160 + 8 * v162 + 32);
    }
    Swift::String v166 = v165;
    id v167 = [v165 name];
    uint64_t v168 = sub_100534CE0();
    uint64_t v170 = v169;

    *(void *)&long long v200 = v163;
    unint64_t v172 = v163[2];
    unint64_t v171 = v163[3];
    if (v172 >= v171 >> 1)
    {
      sub_1003D8B9C((char *)(v171 > 1), v172 + 1, 1);
      Swift::String v163 = (void *)v200;
    }
    ++v162;
    v163[2] = v172 + 1;
    Swift::String v173 = &v163[2 * v172];
    v173[4] = v168;
    v173[5] = v170;
    unint64_t v160 = v164;
  }
  while (v161 != v162);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_152:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    *(void *)&long long v198 = sub_1003D7CF4(0, *(void *)(v198 + 16) + 1, 1, (void *)v198);
  }
  unint64_t v175 = *(void *)(v198 + 16);
  unint64_t v174 = *(void *)(v198 + 24);
  if (v175 >= v174 >> 1) {
    *(void *)&long long v198 = sub_1003D7CF4((void *)(v174 > 1), v175 + 1, 1, (void *)v198);
  }
  Swift::String v201 = &type metadata for Lyrics.SongwritersLine;
  Swift::String v202 = &protocol witness table for Lyrics.SongwritersLine;
  uint64_t v176 = swift_allocObject();
  *(void *)&long long v200 = v176;
  *(void *)(v176 + 16) = v132;
  *(double *)(v176 + 24) = v134;
  *(void *)(v176 + 32) = 0x7FF0000000000000;
  *(unsigned char *)(v176 + 40) = v186;
  *(void *)(v176 + 48) = v163;
  Swift::String v133 = (void *)v198;
  *(void *)(v198 + 16) = v175 + 1;
  sub_1000ECF64(&v200, (uint64_t)&v133[5 * v175 + 4]);
LABEL_157:

  Swift::String v177 = v180;
  v180[4] = v187;
  v177[5] = v133;
  swift_beginAccess();
  swift_weakAssign();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return (uint64_t)v177;
}

void *sub_1003D57AC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1003D8B9C(0, v1, 0);
    uint64_t v3 = a1 + 32;
    do
    {
      uint64_t v4 = sub_100534CE0();
      uint64_t v6 = v5;
      unint64_t v8 = _swiftEmptyArrayStorage[2];
      unint64_t v7 = _swiftEmptyArrayStorage[3];
      if (v8 >= v7 >> 1) {
        sub_1003D8B9C((char *)(v7 > 1), v8 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v8 + 1;
      uint64_t v9 = &_swiftEmptyArrayStorage[2 * v8];
      v9[4] = v4;
      _OWORD v9[5] = v6;
      v3 += 8;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

BOOL sub_1003D5888(double *a1, double *a2)
{
  return *a1 < *a2;
}

uint64_t sub_1003D589C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_19;
  }
  unint64_t v8 = (void *)Strong;
  swift_beginAccess();
  uint64_t v9 = v8[15];
  if (!v9
    || ((uint64_t v10 = v8[9]) != 0 ? (v11 = a3 == 0) : (v11 = 1),
        v11
     || ((uint64_t v12 = v8[14], v12 == v8[8]) ? (v13 = v9 == v10) : (v13 = 0),
         v13 || (sub_100536780() & 1) != 0 || (swift_beginAccess(), uint64_t v14 = v8[16], !*(void *)(v14 + 16)))))
  {
    swift_release();
LABEL_19:
    swift_bridgeObjectRetain();
    return a4;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_1001A1AC8(v12, v9);
  if ((v16 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v17 = *(void *)(*(void *)(v14 + 56) + 8 * v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v17 + 16) || (unint64_t v18 = sub_1001A1AC8(a2, a3), (v19 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_23;
  }
  uint64_t v20 = (uint64_t *)(*(void *)(v17 + 56) + 88 * v18);
  uint64_t v22 = v20[2];
  uint64_t v21 = v20[3];
  uint64_t v23 = v20[5];
  uint64_t v27 = v20[1];
  uint64_t v28 = v20[4];
  uint64_t v24 = v20[6];
  uint64_t v26 = *v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1003E1720(v21, v28, v23, v24);
  swift_bridgeObjectRelease();
  swift_release();
  if (!v27)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  a4 = v26;
  sub_1003E1764(v26, v27, v22, v21, v28, v23, v24);
  swift_bridgeObjectRelease();
  return a4;
}

uint64_t sub_1003D5B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_16;
  }
  unint64_t v8 = (void *)Strong;
  swift_beginAccess();
  uint64_t v9 = v8[15];
  if (!v9) {
    goto LABEL_15;
  }
  uint64_t v10 = v8[9];
  if (!v10) {
    goto LABEL_15;
  }
  if (!a3) {
    goto LABEL_15;
  }
  uint64_t v11 = v8[14];
  if (v11 == v8[8] && v9 == v10) {
    goto LABEL_15;
  }
  if (sub_100536780()) {
    goto LABEL_15;
  }
  swift_beginAccess();
  uint64_t v12 = v8[16];
  if (!*(void *)(v12 + 16)) {
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_1001A1AC8(v11, v9);
  if ((v14 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_16:
    swift_beginAccess();
    uint64_t v19 = *(void *)(a4 + 16);
    swift_bridgeObjectRetain();
    return v19;
  }
  uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v15 + 16) || (unint64_t v16 = sub_1001A1AC8(a2, a3), (v17 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_15:
    swift_release();
    goto LABEL_16;
  }
  unint64_t v18 = (void *)(*(void *)(v15 + 56) + 88 * v16);
  uint64_t v19 = v18[2];
  uint64_t v20 = v18[3];
  uint64_t v21 = v18[4];
  uint64_t v22 = v18[5];
  uint64_t v23 = v18[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1003E1720(v20, v21, v22, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1003DC4C4(v20, v21, v22, v23);
  return v19;
}

uint64_t sub_1003D5D68@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X3>, uint64_t *a4@<X8>)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_16;
  }
  uint64_t v9 = (void *)Strong;
  swift_beginAccess();
  uint64_t v10 = v9[15];
  if (!v10) {
    goto LABEL_15;
  }
  uint64_t v11 = v9[9];
  if (!v11) {
    goto LABEL_15;
  }
  if (!a2) {
    goto LABEL_15;
  }
  uint64_t v12 = v9[14];
  if (v12 == v9[8] && v10 == v11) {
    goto LABEL_15;
  }
  if (sub_100536780()) {
    goto LABEL_15;
  }
  swift_beginAccess();
  uint64_t v13 = v9[16];
  if (!*(void *)(v13 + 16)) {
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_1001A1AC8(v12, v10);
  if ((v15 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_16:
    swift_beginAccess();
    uint64_t v20 = a3[2];
    uint64_t v21 = a3[3];
    uint64_t v22 = a3[4];
    uint64_t v23 = a3[5];
    uint64_t v24 = a3[6];
    uint64_t v25 = a3[7];
    uint64_t v27 = a3[8];
    uint64_t v26 = a3[9];
    uint64_t result = sub_1003E1720(v20, v21, v22, v23);
    goto LABEL_17;
  }
  uint64_t v16 = *(void *)(*(void *)(v13 + 56) + 8 * v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v16 + 16) || (unint64_t v17 = sub_1001A1AC8(a1, a2), (v18 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_15:
    swift_release();
    goto LABEL_16;
  }
  uint64_t v19 = (void *)(*(void *)(v16 + 56) + 88 * v17);
  uint64_t v20 = v19[3];
  uint64_t v21 = v19[4];
  uint64_t v22 = v19[5];
  uint64_t v23 = v19[6];
  uint64_t v24 = v19[7];
  uint64_t v25 = v19[8];
  uint64_t v27 = v19[9];
  uint64_t v26 = v19[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1003E1720(v20, v21, v22, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1003E1720(v20, v21, v22, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1003DC4C4(v20, v21, v22, v23);
LABEL_17:
  *a4 = v20;
  a4[1] = v21;
  a4[2] = v22;
  a4[3] = v23;
  a4[4] = v24;
  a4[5] = v25;
  a4[6] = v27;
  a4[7] = v26;
  return result;
}

void Lyrics.line(before:useOriginalLines:)(char a1@<W0>, uint64_t a2@<X8>, double a3@<D0>)
{
  if (a1)
  {
    uint64_t v6 = sub_1003D15A8(*(void *)(v3 + 48));
    uint64_t v7 = v6[2];
    if (!v7) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v6 = *(void **)(v3 + 40);
    swift_bridgeObjectRetain();
    uint64_t v7 = v6[2];
    if (!v7)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      *(void *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return;
    }
  }
  unint64_t v8 = v6 + 4;
  sub_100104808((uint64_t)(v6 + 4), (uint64_t)&v29);
  uint64_t v10 = *((void *)&v30 + 1);
  uint64_t v9 = v31;
  sub_10000ECD4(&v29, *((uint64_t *)&v30 + 1));
  double v11 = (*(double (**)(uint64_t))(*(void *)(v9 + 8) + 8))(v10);
  sub_100013D48((uint64_t)&v29);
  if (v11 > a3) {
    goto LABEL_6;
  }
  uint64_t v12 = 0;
  uint64_t v13 = v7 - 1;
  uint64_t v31 = 0;
  long long v29 = 0u;
  long long v30 = 0u;
  uint64_t v14 = v13;
  while (!__OFSUB__(v14, v12))
  {
    unint64_t v15 = v12 + (v14 - v12) / 2;
    if (__OFADD__(v12, (v14 - v12) / 2)) {
      goto LABEL_25;
    }
    if ((v15 & 0x8000000000000000) != 0) {
      goto LABEL_26;
    }
    if (v15 >= v6[2]) {
      goto LABEL_27;
    }
    sub_100104808((uint64_t)&v8[5 * v15], (uint64_t)v26);
    uint64_t v17 = v27;
    uint64_t v16 = v28;
    sub_10000ECD4(v26, v27);
    double v18 = (*(double (**)(uint64_t))(*(void *)(v16 + 8) + 8))(v17);
    double v19 = v18;
    if ((uint64_t)v15 >= v13)
    {
      double v22 = INFINITY;
      if (v18 > a3) {
        goto LABEL_8;
      }
    }
    else
    {
      if (v15 + 1 >= v6[2]) {
        goto LABEL_28;
      }
      sub_100104808((uint64_t)&v8[5 * v15 + 5], (uint64_t)v23);
      uint64_t v21 = v24;
      uint64_t v20 = v25;
      sub_10000ECD4(v23, v24);
      double v22 = (*(double (**)(uint64_t))(*(void *)(v20 + 8) + 8))(v21);
      sub_100013D48((uint64_t)v23);
      if (v19 > a3)
      {
LABEL_8:
        uint64_t v14 = v15 - 1;
        goto LABEL_9;
      }
    }
    if (v22 >= a3)
    {
      sub_100013C44((uint64_t)&v29, &qword_100672AC0);
      swift_bridgeObjectRelease();
      sub_100104808((uint64_t)v26, (uint64_t)&v29);
      sub_100013D48((uint64_t)v26);
      goto LABEL_23;
    }
    uint64_t v12 = v15 + 1;
LABEL_9:
    sub_100013D48((uint64_t)v26);
    if (v14 < v12)
    {
      swift_bridgeObjectRelease();
LABEL_23:
      sub_100013A18((uint64_t)&v29, a2, &qword_100672AC0);
      return;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
}

uint64_t Lyrics.line(after:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  sub_10000ECD4(a1, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  uint64_t v7 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v8 = *(void *)(v2 + 40);
  if (v7 >= *(void *)(v8 + 16))
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  if (v7 < 0) {
    goto LABEL_9;
  }

  return sub_100104808(v8 + 40 * v7 + 32, a2);
}

BOOL sub_1003D6360(id *a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  [*a1 characterRange];
  v9._uint64_t countAndFlagsBits = a2;
  v9._object = a3;
  v10._uint64_t countAndFlagsBits = a4;
  v10._object = a5;
  __C::_NSRange v11 = _NSRange.convert(from:to:preserveLength:)(v9, v10, 1);
  if (!v12) {
    return _NSRange.contains(_:)(v11);
  }
  swift_errorRelease();
  return 0;
}

BOOL sub_1003D6404(id *a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  id v9 = *a1;
  [*a1 characterRange];
  v10._uint64_t countAndFlagsBits = a2;
  v10._object = a3;
  v11._uint64_t countAndFlagsBits = a4;
  v11._object = a5;
  __C::_NSRange v12 = _NSRange.convert(from:to:preserveLength:)(v10, v11, 0);
  if (!v13) {
    return _NSRange.intersects(_:)(v12);
  }
  if (qword_1006704E8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100530920();
  sub_10000EA90(v14, (uint64_t)static Logger.lyrics);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  id v15 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  id v16 = v15;
  uint64_t v17 = sub_100530900();
  os_log_type_t v18 = sub_1005357C0();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v24 = (void *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136446978;
    [v16 characterRange];
    uint64_t v20 = sub_100535E80();
    *(void *)(v19 + 4) = sub_1003C5E90(v20, v21, &v25);

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v19 + 14) = sub_1003C5E90(a4, (unint64_t)a5, &v25);
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 22) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v19 + 24) = sub_1003C5E90(a2, (unint64_t)a3, &v25);
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 32) = 2114;
    swift_errorRetain();
    uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v19 + 34) = v22;
    *uint64_t v24 = v22;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "    Wasn't able to convert syllable range from primaryVocalText to lyricsText indicating a parsing issue.\n    MSVLyricsWord.characterRange=%{public}s\n    primaryVocalsText=%{public}s\n    lyricsText=%{public}s\n    thrownError=%{public}@", (uint8_t *)v19, 0x2Au);
    sub_10000BB04(&qword_100671200);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    swift_errorRelease();
    swift_errorRelease();
  }
  return 0;
}

uint64_t Logger.lyrics.unsafeMutableAddressor()
{
  if (qword_1006704E8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100530920();

  return sub_10000EA90(v0, (uint64_t)static Logger.lyrics);
}

void sub_1003D67B8(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1005360F0();
    sub_100123DA4(0, (unint64_t *)&qword_100671628);
    sub_1003E14D8();
    sub_1005354E0();
    uint64_t v1 = v25;
    uint64_t v24 = v26;
    uint64_t v2 = v27;
    uint64_t v3 = v28;
    unint64_t v4 = v29;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v24 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  uint64_t v22 = v2;
  int64_t v23 = (unint64_t)(v2 + 64) >> 6;
  while (1)
  {
    uint64_t v9 = v3;
    if (v1 < 0)
    {
      if (!sub_100536120()) {
        goto LABEL_37;
      }
      sub_100123DA4(0, (unint64_t *)&qword_100671628);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v12 = v30;
      swift_unknownObjectRelease();
      if (!v30) {
        goto LABEL_37;
      }
      goto LABEL_32;
    }
    if (!v4) {
      break;
    }
    unint64_t v10 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v11 = v10 | (v3 << 6);
LABEL_31:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v11);
    if (!v12) {
      goto LABEL_37;
    }
LABEL_32:
    id v16 = [v12 type];
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v18 = v1;
      uint64_t v19 = sub_100534CE0();
      uint64_t v21 = v20;

      if (v19 == 0x70756F7267 && v21 == 0xE500000000000000)
      {

        swift_bridgeObjectRelease();
LABEL_37:
        sub_100206FC4();
        return;
      }
      char v8 = sub_100536780();

      swift_bridgeObjectRelease();
      uint64_t v1 = v18;
      if (v8) {
        goto LABEL_37;
      }
    }
    else
    {
    }
  }
  int64_t v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 >= v23) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v24 + 8 * v13);
    ++v3;
    if (!v14)
    {
      uint64_t v3 = v9 + 2;
      if (v9 + 2 >= v23) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v24 + 8 * v3);
      if (!v14)
      {
        uint64_t v3 = v9 + 3;
        if (v9 + 3 >= v23) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v24 + 8 * v3);
        if (!v14)
        {
          uint64_t v3 = v9 + 4;
          if (v9 + 4 >= v23) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v24 + 8 * v3);
          if (!v14)
          {
            uint64_t v3 = v9 + 5;
            if (v9 + 5 >= v23) {
              goto LABEL_37;
            }
            unint64_t v14 = *(void *)(v24 + 8 * v3);
            if (!v14)
            {
              uint64_t v15 = v9 + 6;
              while (v23 != v15)
              {
                unint64_t v14 = *(void *)(v24 + 8 * v15++);
                if (v14)
                {
                  uint64_t v3 = v15 - 1;
                  goto LABEL_30;
                }
              }
              goto LABEL_37;
            }
          }
        }
      }
    }
LABEL_30:
    unint64_t v4 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v3 << 6);
    goto LABEL_31;
  }
  __break(1u);
}

void sub_1003D6B3C(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1005360F0();
    sub_100123DA4(0, (unint64_t *)&qword_100671628);
    sub_1003E14D8();
    sub_1005354E0();
    uint64_t v1 = v25;
    uint64_t v24 = v26;
    uint64_t v2 = v27;
    uint64_t v3 = v28;
    unint64_t v4 = v29;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v24 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  uint64_t v22 = v2;
  int64_t v23 = (unint64_t)(v2 + 64) >> 6;
  while (1)
  {
    uint64_t v9 = v3;
    if (v1 < 0)
    {
      if (!sub_100536120()) {
        goto LABEL_37;
      }
      sub_100123DA4(0, (unint64_t *)&qword_100671628);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v12 = v30;
      swift_unknownObjectRelease();
      if (!v30) {
        goto LABEL_37;
      }
      goto LABEL_32;
    }
    if (!v4) {
      break;
    }
    unint64_t v10 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v11 = v10 | (v3 << 6);
LABEL_31:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v11);
    if (!v12) {
      goto LABEL_37;
    }
LABEL_32:
    id v16 = [v12 type];
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v18 = v1;
      uint64_t v19 = sub_100534CE0();
      uint64_t v21 = v20;

      if (v19 == 0x726568746FLL && v21 == 0xE500000000000000)
      {

        swift_bridgeObjectRelease();
LABEL_37:
        sub_100206FC4();
        return;
      }
      char v8 = sub_100536780();

      swift_bridgeObjectRelease();
      uint64_t v1 = v18;
      if (v8) {
        goto LABEL_37;
      }
    }
    else
    {
    }
  }
  int64_t v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 >= v23) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v24 + 8 * v13);
    ++v3;
    if (!v14)
    {
      uint64_t v3 = v9 + 2;
      if (v9 + 2 >= v23) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v24 + 8 * v3);
      if (!v14)
      {
        uint64_t v3 = v9 + 3;
        if (v9 + 3 >= v23) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v24 + 8 * v3);
        if (!v14)
        {
          uint64_t v3 = v9 + 4;
          if (v9 + 4 >= v23) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v24 + 8 * v3);
          if (!v14)
          {
            uint64_t v3 = v9 + 5;
            if (v9 + 5 >= v23) {
              goto LABEL_37;
            }
            unint64_t v14 = *(void *)(v24 + 8 * v3);
            if (!v14)
            {
              uint64_t v15 = v9 + 6;
              while (v23 != v15)
              {
                unint64_t v14 = *(void *)(v24 + 8 * v15++);
                if (v14)
                {
                  uint64_t v3 = v15 - 1;
                  goto LABEL_30;
                }
              }
              goto LABEL_37;
            }
          }
        }
      }
    }
LABEL_30:
    unint64_t v4 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v3 << 6);
    goto LABEL_31;
  }
  __break(1u);
}

uint64_t Lyrics.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Lyrics.__deallocating_deinit()
{
  Lyrics.deinit();

  return swift_deallocClassInstance();
}

id sub_1003D6F64(id *a1)
{
  return [*a1 isBackgroundVocal];
}

id sub_1003D6F98()
{
  return [*v0 startTime];
}

id sub_1003D6FA8()
{
  return [*v0 endTime];
}

uint64_t MSVLyricsAgent.isEqual(_:)(uint64_t a1)
{
  sub_100013720(a1, (uint64_t)v48, &qword_100672CD0);
  if (!v49)
  {
    sub_100013C44((uint64_t)v48, &qword_100672CD0);
    goto LABEL_46;
  }
  sub_100123DA4(0, (unint64_t *)&qword_100671628);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_46:
    char v34 = 0;
    return v34 & 1;
  }
  id v2 = [v1 type];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = sub_100534CE0();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  id v7 = [v47 type];
  if (v7)
  {
    char v8 = v7;
    uint64_t v9 = sub_100534CE0();
    uint64_t v11 = v10;

    if (v6)
    {
      if (!v11) {
        goto LABEL_44;
      }
      if (v4 == v9 && v6 == v11)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v12 = sub_100536780();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v12 & 1) == 0) {
          goto LABEL_51;
        }
      }
    }
    else if (v11)
    {
      goto LABEL_44;
    }
  }
  else if (v6)
  {
    goto LABEL_44;
  }
  id v13 = [v1 name];
  if (v13)
  {
    unint64_t v14 = v13;
    uint64_t v15 = sub_100534CE0();
    uint64_t v17 = v16;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v17 = 0;
  }
  id v18 = [v47 name];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = sub_100534CE0();
    uint64_t v22 = v21;

    if (v17)
    {
      if (!v22) {
        goto LABEL_44;
      }
      if (v15 == v20 && v17 == v22)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v23 = sub_100536780();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v23 & 1) == 0) {
          goto LABEL_51;
        }
      }
    }
    else if (v22)
    {
      goto LABEL_44;
    }
  }
  else if (v17)
  {
    goto LABEL_44;
  }
  id v24 = [v1 artistID];
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = sub_100534CE0();
    uint64_t v28 = v27;
  }
  else
  {
    uint64_t v26 = 0;
    uint64_t v28 = 0;
  }
  id v29 = [v47 artistID];
  if (!v29)
  {
    if (v28) {
      goto LABEL_44;
    }
    goto LABEL_49;
  }
  long long v30 = v29;
  uint64_t v31 = sub_100534CE0();
  uint64_t v33 = v32;

  if (!v28)
  {
    if (v33) {
      goto LABEL_44;
    }
    goto LABEL_49;
  }
  if (!v33) {
    goto LABEL_44;
  }
  if (v26 == v31 && v28 == v33)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_49;
  }
  char v36 = sub_100536780();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v36 & 1) == 0)
  {
LABEL_51:

    goto LABEL_46;
  }
LABEL_49:
  id v37 = [v1 identifier];
  if (v37)
  {
    uint64_t v38 = v37;
    uint64_t v39 = sub_100534CE0();
    uint64_t v41 = v40;
  }
  else
  {
    uint64_t v39 = 0;
    uint64_t v41 = 0;
  }
  id v42 = [v47 identifier];
  if (!v42)
  {
    if (!v41)
    {

      char v34 = 1;
      return v34 & 1;
    }
    goto LABEL_44;
  }
  uint64_t v43 = v42;
  uint64_t v44 = sub_100534CE0();
  uint64_t v46 = v45;

  if (!v41)
  {

    if (!v46)
    {
      char v34 = 1;
      return v34 & 1;
    }
    goto LABEL_45;
  }
  if (!v46)
  {
LABEL_44:

LABEL_45:
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  if (v39 == v44 && v41 == v46) {
    char v34 = 1;
  }
  else {
    char v34 = sub_100536780();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v34 & 1;
}

uint64_t sub_1003D746C()
{
  uint64_t v0 = sub_100530920();
  sub_10000ED18(v0, static Logger.lyrics);
  sub_10000EA90(v0, (uint64_t)static Logger.lyrics);
  return static Logger.music(_:)();
}

uint64_t static Logger.lyrics.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1006704E8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100530920();
  uint64_t v3 = sub_10000EA90(v2, (uint64_t)static Logger.lyrics);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

size_t sub_1003D7570(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    id v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000BB04(&qword_100670C98);
  uint64_t v10 = *(void *)(sub_10000BB04(&qword_100670C90) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  id v13 = (void *)swift_allocObject();
  uint64_t result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  _OWORD v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(sub_10000BB04(&qword_100670C90) - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v13;
}

char *sub_1003D774C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_100677840);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  id v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1003D7850(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_100671A90);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_10000BB04(&qword_100671A98);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1003D7988(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_100671AA0);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_10000BB04(&qword_100671AA8);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1003D7AC0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_100671A88);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  id v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1003D7BD4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_100671A48);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 104);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  id v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[104 * v8]) {
      memmove(v12, v13, 104 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1003D7CF4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_100671A30);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_10000BB04(&qword_100671A38);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1003D7E2C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_100671980);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[8 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, v8 << 6);
    }
    a4[2] = 0;
  }
  else
  {
    sub_10000BB04(&qword_100671988);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

size_t sub_1003D7F50(size_t a1, int64_t a2, char a3, void *a4)
{
  return sub_1003D82F4(a1, a2, a3, a4, &qword_1006719F8, type metadata accessor for Razzmatazz);
}

char *sub_1003D7F70(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_100671A28);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  id v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1003D8074(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1003D8088(a1, a2, a3, a4, &qword_100671A00, &qword_100671A08);
}

void *sub_1003D8088(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_10000BB04(a5);
    id v13 = (void *)swift_allocObject();
    int64_t v14 = j__malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    _OWORD v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    id v13 = _swiftEmptyArrayStorage;
  }
  if (v8)
  {
    if (v13 != a4 || v13 + 4 >= &a4[v11 + 4]) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
  }
  else
  {
    sub_10000BB04(a6);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v13;
}

void *sub_1003D81B0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_100671A10);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_10000BB04(&qword_100671A18);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

size_t sub_1003D82D4(size_t a1, int64_t a2, char a3, void *a4)
{
  return sub_1003D82F4(a1, a2, a3, a4, &qword_100671960, (uint64_t (*)(void))&type metadata accessor for Playlist.Collaborator);
}

size_t sub_1003D82F4(size_t result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  char v8 = result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000BB04(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  uint64_t result = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_29;
  }
  _OWORD v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(result - v15) / v14);
LABEL_19:
  uint64_t v18 = *(void *)(a6(0) - 8);
  if (v8)
  {
    if (v16 < a4
      || (unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80),
          (char *)v16 + v19 >= (char *)a4 + v19 + *(void *)(v18 + 72) * v11))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v16;
}

char *sub_1003D84D0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_1006719D8);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 120);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[120 * v8]) {
      memmove(v12, v13, 120 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1003D85EC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_1006719C8);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[88 * v8]) {
      memmove(v12, v13, 88 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1003D8708(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_1006719A8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1003D880C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_1006719B0);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_10000BB04(&qword_1006719B8);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1003D8930(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_100671998);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_10000BB04(&qword_1006719A0);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1003D8A54(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_100671490);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

size_t sub_1003D8B5C(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_1003D8D34(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1003D8B7C(char *a1, int64_t a2, char a3)
{
  size_t result = sub_1003D8F10(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1003D8B9C(char *a1, int64_t a2, char a3)
{
  size_t result = sub_1003D9018(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1003D8BBC(char *a1, int64_t a2, char a3)
{
  size_t result = sub_1003D911C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_1003D8BDC(void *a1, int64_t a2, char a3)
{
  size_t result = sub_1003D9230(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1003D8BFC(char *a1, int64_t a2, char a3)
{
  size_t result = sub_1003D9368(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1003D8C1C(char *a1, int64_t a2, char a3)
{
  size_t result = sub_1003D9488(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_1003D8C3C(void *a1, int64_t a2, char a3)
{
  size_t result = sub_1003D9584(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1003D8C5C(char *a1, int64_t a2, char a3)
{
  size_t result = sub_1003D96A8(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_1003D8C7C(void *a1, int64_t a2, char a3)
{
  size_t result = sub_1003D97A4(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

size_t sub_1003D8C9C(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_1003D98C8(a1, a2, a3, (void *)*v3, &qword_1006719F8, type metadata accessor for Razzmatazz);
  *uint64_t v3 = result;
  return result;
}

size_t sub_1003D8CD8(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_1003D98C8(a1, a2, a3, (void *)*v3, &qword_100671A20, (uint64_t (*)(void))&type metadata accessor for Artist);
  *uint64_t v3 = result;
  return result;
}

char *sub_1003D8D14(char *a1, int64_t a2, char a3)
{
  size_t result = sub_1003D9B90(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

size_t sub_1003D8D34(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000BB04(&qword_100670C98);
  uint64_t v10 = *(void *)(sub_10000BB04(&qword_100670C90) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  _OWORD v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(sub_10000BB04(&qword_100670C90) - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

char *sub_1003D8F10(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_100671490);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1003D9018(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_100677840);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1003D911C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_100671A88);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_1003D9230(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_100671A30);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_10000BB04(&qword_100671A38);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1003D9368(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_100671A80);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1003D9488(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_100671990);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_release();
  return v10;
}

void *sub_1003D9584(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_100671980);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[8 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, v8 << 6);
    }
    a4[2] = 0;
  }
  else
  {
    sub_10000BB04(&qword_100671988);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1003D96A8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_100671968);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 32 * v8);
  }
  swift_release();
  return v10;
}

void *sub_1003D97A4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000BB04(&qword_100671970);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_10000BB04(&qword_100671978);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}