void sub_10042D72C()
{
  void *v0;
  uint64_t v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (qword_1006AE190 != -1) {
    swift_once();
  }
  v1 = type metadata accessor for Logger();
  sub_1000606BC(v1, (uint64_t)qword_1006D1E98);
  v2 = v0;
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v5 = 136315394;
    sub_1000606F4(0x416D726F66726570, 0xEF29286E6F697463, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 12) = 2080;
    v6 = String.init<A>(describing:)();
    sub_1000606F4(v6, v7, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMStewieWelcomeViewController: %s - action: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  switch(*((unsigned char *)v2 + OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_actionToPerform))
  {
    case 1:
      sub_10042DAC4();
      break;
    case 2:
      sub_10042F228();
      break;
    case 3:
      sub_10042F024();
      break;
    default:
      [v2 dismissViewControllerAnimated:1 completion:0];
      break;
  }
}

void sub_10042DAC4()
{
  v1 = v0;
  v2 = sub_100429DFC();
  uint64_t v4 = v3;
  uint64_t updated = type metadata accessor for FMFSatelliteLocationUpdateEvent();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 48))(v4, 1, updated)) {
    FMFSatelliteLocationUpdateEvent.sendLocationTapped.setter();
  }
  ((void (*)(void *, void))v2)(v9, 0);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v1;
  v9[4] = sub_10042F01C;
  v9[5] = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_10003C410;
  v9[3] = &unk_10063BA30;
  v7 = _Block_copy(v9);
  id v8 = v1;
  swift_release();
  [v8 dismissViewControllerAnimated:1 completion:v7];
  _Block_release(v7);
}

uint64_t sub_10042DC14()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1000805F8();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10042DC6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v52 = a1;
  uint64_t v1 = type metadata accessor for FMFSatelliteLocationTapSource();
  uint64_t v53 = *(void *)(v1 - 8);
  uint64_t v54 = v1;
  uint64_t v2 = __chkstk_darwin(v1);
  v50 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v51 = (char *)&v44 - v4;
  uint64_t updated = type metadata accessor for FMFSatelliteUpdateBlockingCondition();
  uint64_t v6 = *(void *)(updated - 8);
  uint64_t v7 = __chkstk_darwin(updated);
  v49 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v44 - v9;
  uint64_t v11 = type metadata accessor for FMFSatelliteEducationFlowType();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  v47 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)&v44 - v15;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  v17 = v63;
  uint64_t v18 = 256;
  if (!BYTE1(v61)) {
    uint64_t v18 = 0;
  }
  uint64_t v19 = v18 | v61;
  uint64_t v20 = 0x10000;
  if (!BYTE2(v61)) {
    uint64_t v20 = 0;
  }
  uint64_t v21 = 0x1000000;
  if (!BYTE3(v61)) {
    uint64_t v21 = 0;
  }
  uint64_t v22 = v19 | v20 | v21;
  v23 = &_mh_execute_header;
  if (!BYTE4(v61)) {
    v23 = 0;
  }
  uint64_t v24 = 0x10000000000;
  if (!BYTE5(v61)) {
    uint64_t v24 = 0;
  }
  uint64_t v25 = 0x1000000000000;
  if (!BYTE6(v61)) {
    uint64_t v25 = 0;
  }
  sub_10016C260(v22 | (unint64_t)v23 | v24 | v25, *((uint64_t *)&v61 + 1), v62, v63, v60);

  uint64_t v55 = v12;
  v26 = *(void (**)(char *, void, uint64_t))(v12 + 104);
  v58 = v16;
  uint64_t v59 = v11;
  v26(v16, enum case for FMFSatelliteEducationFlowType.learnMoreBlockingCondition(_:), v11);
  uint64_t v27 = enum case for FMFSatelliteUpdateBlockingCondition.none(_:);
  uint64_t v56 = v6;
  uint64_t v57 = updated;
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v29 = v10;
  v45 = v28;
  v28(v10, enum case for FMFSatelliteUpdateBlockingCondition.none(_:), updated);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  int v46 = v61;

  sub_1000C81A0(v60, &v61);
  char v30 = v61;
  if ((unint64_t)v61 >> 62)
  {
    if ((unint64_t)v61 >> 62 != 1) {
      goto LABEL_27;
    }
    *(void *)&long long v61 = v61 & 0x3FFFFFFFFFFFFFFFLL;
    sub_10042F42C((uint64_t)v60, (void (*)(void, void, void, void, void, void))sub_10007F218);
    uint64_t v31 = v57;
    (*(void (**)(char *, uint64_t))(v56 + 8))(v10, v57);
    v33 = v58;
    uint64_t v32 = v59;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v58, v59);
    v26(v33, enum case for FMFSatelliteEducationFlowType.updateLocation(_:), v32);
  }
  else
  {
    *(void *)&long long v61 = v61 & 0x3FFFFFFFFFFFFFFFLL;
    uint64_t v31 = v57;
    (*(void (**)(char *, uint64_t))(v56 + 8))(v10, v57);
    sub_10042F42C((uint64_t)v60, (void (*)(void, void, void, void, void, void))sub_10007F218);
    switch(v30)
    {
      case 2:
        v34 = (unsigned int *)&enum case for FMFSatelliteUpdateBlockingCondition.notSetUp(_:);
        break;
      case 3:
        v34 = (unsigned int *)&enum case for FMFSatelliteUpdateBlockingCondition.noFriends(_:);
        break;
      case 4:
        v34 = (unsigned int *)&enum case for FMFSatelliteUpdateBlockingCondition.notMeDevice(_:);
        break;
      case 5:
        v34 = (unsigned int *)&enum case for FMFSatelliteUpdateBlockingCondition.airplaneMode(_:);
        break;
      case 6:
        v34 = (unsigned int *)&enum case for FMFSatelliteUpdateBlockingCondition.shareMyLocationDisabled(_:);
        break;
      case 7:
        v34 = (unsigned int *)&enum case for FMFSatelliteUpdateBlockingCondition.regionNotSupported(_:);
        break;
      case 8:
        v34 = (unsigned int *)&enum case for FMFSatelliteUpdateBlockingCondition.online(_:);
        break;
      default:
        v34 = (unsigned int *)&enum case for FMFSatelliteUpdateBlockingCondition.locationServicesDisabled(_:);
        break;
    }
    uint64_t v27 = *v34;
  }
  v45(v10, v27, v31);
LABEL_27:
  if (*(unsigned char *)(v48 + OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_presentationSource))
  {
    char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    v36 = (unsigned int *)&enum case for FMFSatelliteLocationTapSource.appLaunch(_:);
    if (v35) {
      v36 = (unsigned int *)&enum case for FMFSatelliteLocationTapSource.notificationTap(_:);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v36 = (unsigned int *)&enum case for FMFSatelliteLocationTapSource.notificationTap(_:);
  }
  uint64_t v38 = v53;
  uint64_t v37 = v54;
  v39 = v51;
  (*(void (**)(char *, void, uint64_t))(v53 + 104))(v51, *v36, v54);
  uint64_t v40 = v55;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v47, v58, v59);
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v50, v39, v37);
  uint64_t v41 = v56;
  uint64_t v42 = v57;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v49, v29, v57);
  FMFSatelliteLocationUpdateEvent.init(flowType:educationFlowInitiatedTapSource:sendLocationTapped:updateFlowBlockingCondition:updateFlowOffline:updateFlowCanceled:updateFlowLSOffGoToSettingsPressed:updateFlowLSOffOkPressed:)();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v37);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v29, v42);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v58, v59);
}

id sub_10042E3A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)&v7[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_mediator] = 0;
  *(void *)&v7[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v7[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_viewModel] = 0;
  uint64_t v11 = &v7[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_style];
  uint64_t v12 = qword_1006AE340;
  uint64_t v13 = v7;
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v15 = (void *)qword_1006BE350;
  uint64_t v14 = *(void **)algn_1006BE358;
  long long v16 = xmmword_1006BE360;
  long long v17 = unk_1006BE370;
  *(void *)uint64_t v11 = qword_1006BE350;
  *((void *)v11 + 1) = v14;
  *((_OWORD *)v11 + 1) = v16;
  *((_OWORD *)v11 + 2) = v17;
  v13[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_presentationSource] = 1;
  uint64_t v18 = &v13[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_currentViewState];
  *(void *)uint64_t v18 = 0xFFFFFFFF00;
  *(_OWORD *)(v18 + 8) = 0u;
  *(_OWORD *)(v18 + 24) = 0u;
  v18[40] = 0;
  uint64_t v19 = OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_imageView;
  id v20 = objc_allocWithZone((Class)UIImageView);
  id v21 = v15;
  id v22 = v14;
  *(void *)&v13[v19] = [v20 init];
  uint64_t v23 = OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_upperLabel;
  *(void *)&v13[v23] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v24 = OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_lowerLabel;
  *(void *)&v13[v24] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v25 = OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_performButton;
  type metadata accessor for FMOBWhiteBlueBoldTrayButton();
  *(void *)&v13[v25] = [(id)swift_getObjCClassFromMetadata() boldButton];
  v13[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_actionToPerform] = 0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    v26 = (void *)sub_100171438((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    v26 = &_swiftEmptySetSingleton;
  }
  uint64_t v27 = a7;
  *(void *)&v13[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_cancellables] = v26;
  v28 = &v13[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_stewieAnalyticsEvent];
  uint64_t updated = type metadata accessor for FMFSatelliteLocationUpdateEvent();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 56))(v28, 1, 1, updated);

  NSString v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a4)
  {
    NSString v31 = 0;
    if (a6) {
      goto LABEL_7;
    }
LABEL_9:
    NSString v32 = 0;
    goto LABEL_10;
  }
  NSString v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a6) {
    goto LABEL_9;
  }
LABEL_7:
  NSString v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_10:
  v35.receiver = v13;
  v35.super_class = (Class)type metadata accessor for FMStewieWelcomeViewController();
  id v33 = [super initWithTitle:v30 detailText:v31 symbolName:v32 contentLayout:v27];

  return v33;
}

id sub_10042E74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  *(void *)&v6[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_mediator] = 0;
  *(void *)&v6[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v6[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_viewModel] = 0;
  v10 = &v6[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_style];
  uint64_t v11 = qword_1006AE340;
  uint64_t v12 = v6;
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v14 = (void *)qword_1006BE350;
  uint64_t v13 = *(void **)algn_1006BE358;
  long long v15 = xmmword_1006BE360;
  long long v16 = unk_1006BE370;
  *(void *)v10 = qword_1006BE350;
  *((void *)v10 + 1) = v13;
  *((_OWORD *)v10 + 1) = v15;
  *((_OWORD *)v10 + 2) = v16;
  v12[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_presentationSource] = 1;
  long long v17 = &v12[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_currentViewState];
  *(void *)long long v17 = 0xFFFFFFFF00;
  *(_OWORD *)(v17 + 8) = 0u;
  *(_OWORD *)(v17 + 24) = 0u;
  v17[40] = 0;
  uint64_t v18 = OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_imageView;
  id v19 = objc_allocWithZone((Class)UIImageView);
  id v20 = v14;
  id v21 = v13;
  *(void *)&v12[v18] = [v19 init];
  uint64_t v22 = OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_upperLabel;
  *(void *)&v12[v22] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v23 = OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_lowerLabel;
  *(void *)&v12[v23] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v24 = OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_performButton;
  type metadata accessor for FMOBWhiteBlueBoldTrayButton();
  *(void *)&v12[v24] = [(id)swift_getObjCClassFromMetadata() boldButton];
  v12[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_actionToPerform] = 0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    uint64_t v25 = (void *)sub_100171438((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v25 = &_swiftEmptySetSingleton;
  }
  *(void *)&v12[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_cancellables] = v25;
  v26 = &v12[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_stewieAnalyticsEvent];
  uint64_t updated = type metadata accessor for FMFSatelliteLocationUpdateEvent();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 56))(v26, 1, 1, updated);

  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a4)
  {
    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v29 = 0;
  }
  v32.receiver = v12;
  v32.super_class = (Class)type metadata accessor for FMStewieWelcomeViewController();
  id v30 = [super initWithTitle:v28 detailText:v29 icon:a5 contentLayout:a6];

  return v30;
}

id sub_10042EAB4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMStewieWelcomeViewController();
  return [super dealloc];
}

uint64_t sub_10042EBDC()
{
  return type metadata accessor for FMStewieWelcomeViewController();
}

uint64_t type metadata accessor for FMStewieWelcomeViewController()
{
  uint64_t result = qword_1006BE418;
  if (!qword_1006BE418) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10042EC30()
{
  sub_10042ED1C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10042ED1C()
{
  if (!qword_1006BE428)
  {
    type metadata accessor for FMFSatelliteLocationUpdateEvent();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1006BE428);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for FMStewieWelcomeActionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10042EE40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMStewieWelcomeActionType()
{
  return &type metadata for FMStewieWelcomeActionType;
}

uint64_t initializeWithCopy for FMStewieWelcomeViewStyle(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  id v6 = v3;
  id v7 = v4;
  return a1;
}

uint64_t assignWithCopy for FMStewieWelcomeViewStyle(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  long long v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for FMStewieWelcomeViewStyle(uint64_t a1, _OWORD *a2)
{
  unsigned int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  long long v5 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v5;
  return a1;
}

ValueMetadata *type metadata accessor for FMStewieWelcomeViewStyle()
{
  return &type metadata for FMStewieWelcomeViewStyle;
}

unint64_t sub_10042EF88()
{
  unint64_t result = qword_1006BE430;
  if (!qword_1006BE430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BE430);
  }
  return result;
}

uint64_t sub_10042EFE4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10042F01C()
{
  return sub_10042DC14();
}

uint64_t sub_10042F024()
{
  uint64_t v0 = sub_10005D034((uint64_t *)&unk_1006AF820);
  __chkstk_darwin(v0 - 8);
  objc_super v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
    return sub_100003F10((uint64_t)v2, (uint64_t *)&unk_1006AF820);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  id v8 = [self defaultWorkspace];
  if (v8)
  {
    v10 = v8;
    URL._bridgeToObjectiveC()(v9);
    uint64_t v12 = v11;
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    [v10 openSensitiveURL:v12 withOptions:isa];
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10042F228()
{
  uint64_t v0 = sub_10005D034((uint64_t *)&unk_1006AF820);
  __chkstk_darwin(v0 - 8);
  objc_super v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
    return sub_100003F10((uint64_t)v2, (uint64_t *)&unk_1006AF820);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  id v8 = [self defaultWorkspace];
  if (v8)
  {
    v10 = v8;
    URL._bridgeToObjectiveC()(v9);
    uint64_t v12 = v11;
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    [v10 openSensitiveURL:v12 withOptions:isa];
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10042F42C(uint64_t a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

unint64_t sub_10042F46C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (result >> 8 != 0xFFFFFFFF) {
    return sub_10007F218(result, a2, a3, a4, a5, a6);
  }
  return result;
}

uint64_t sub_10042F480()
{
  return sub_10042BC98();
}

uint64_t sub_10042F488()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_10042F4C8(uint64_t a1)
{
  return sub_10042BDA0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10042F4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034(&qword_1006BE438);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10042F538()
{
  unint64_t result = qword_1006AF080;
  if (!qword_1006AF080)
  {
    type metadata accessor for AnyCancellable();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006AF080);
  }
  return result;
}

uint64_t sub_10042F590()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10042F5C8(unsigned __int8 *a1)
{
}

unint64_t sub_10042F5D0()
{
  unint64_t result = qword_1006AF0A8;
  if (!qword_1006AF0A8)
  {
    sub_100046C48(&qword_1006AF098);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006AF0A8);
  }
  return result;
}

uint64_t sub_10042F62C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034(&qword_1006BE438);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

char *sub_10042F6A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_10005D034((uint64_t *)&unk_1006C0CE0);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_locationView;
  uint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  id v9 = v2;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v10 = [self mainBundle];
  v27._countAndFlagsBits = 0xD000000000000026;
  v27._object = (void *)0x800000010059CED0;
  v11._object = (void *)0x800000010059CEB0;
  v11._countAndFlagsBits = 0xD000000000000014;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  Swift::String v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v27);

  uint64_t v14 = type metadata accessor for FMPlatterIcon();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v7, 0, 1, v14);
  id v15 = objc_allocWithZone((Class)type metadata accessor for FMMultiSettingsRowView());
  *(void *)&v3[v8] = sub_1004FC584(v13._countAndFlagsBits, (uint64_t)v13._object, 1, (uint64_t)v7, 0, 1, 0, 0.0);
  long long v16 = &v9[OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_displayAddress];
  *(void *)long long v16 = 0;
  *((void *)v16 + 1) = 0;
  *((_WORD *)v16 + 8) = 0;

  if (a2)
  {
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v17 = 0;
  }
  uint64_t v18 = (objc_class *)type metadata accessor for FMLabelTableViewLocationCell();
  v24.receiver = v9;
  v24.super_class = v18;
  id v19 = [super initWithStyle:0 reuseIdentifier:v17];

  id v20 = *(void **)&v19[OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_locationView];
  id v21 = v19;
  [v20 setUserInteractionEnabled:1];
  id v22 = [v21 contentView];
  [v22 addSubview:v20];

  sub_10042FC5C();
  return v21;
}

char *sub_10042F944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_10005D034((uint64_t *)&unk_1006C0CE0);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_locationView;
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  Swift::String v11 = v3;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v12 = [self mainBundle];
  v29._countAndFlagsBits = 0xD000000000000026;
  v29._object = (void *)0x800000010059CED0;
  v13._object = (void *)0x800000010059CEB0;
  v13._countAndFlagsBits = 0xD000000000000014;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  Swift::String v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v29);

  uint64_t v16 = type metadata accessor for FMPlatterIcon();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 0, 1, v16);
  id v17 = objc_allocWithZone((Class)type metadata accessor for FMMultiSettingsRowView());
  *(void *)&v4[v10] = sub_1004FC584(v15._countAndFlagsBits, (uint64_t)v15._object, 1, (uint64_t)v9, 0, 1, 0, 0.0);
  uint64_t v18 = &v11[OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_displayAddress];
  *(void *)uint64_t v18 = 0;
  *((void *)v18 + 1) = 0;
  *((_WORD *)v18 + 8) = 0;

  if (a3)
  {
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v19 = 0;
  }
  id v20 = (objc_class *)type metadata accessor for FMLabelTableViewLocationCell();
  v26.receiver = v11;
  v26.super_class = v20;
  id v21 = [super initWithStyle:a1 reuseIdentifier:v19];

  id v22 = *(void **)&v21[OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_locationView];
  uint64_t v23 = v21;
  [v22 setUserInteractionEnabled:1];
  id v24 = [v23 contentView];
  [v24 addSubview:v22];

  sub_10042FC5C();
  return v23;
}

void sub_10042FC5C()
{
  if (qword_1006AE228 != -1) {
    swift_once();
  }
  double v1 = *(double *)&qword_1006D20C8;
  objc_super v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_locationView];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v3 = self;
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10055B950;
  id v5 = [v2 topAnchor];
  id v6 = [v0 contentView];
  id v7 = [v6 topAnchor];

  id v8 = [v5 constraintEqualToAnchor:v7];
  *(void *)(v4 + 32) = v8;
  id v9 = [v2 leadingAnchor];
  id v10 = [v0 contentView];
  id v11 = [v10 leadingAnchor];

  id v12 = [v9 constraintEqualToAnchor:v11 constant:v1];
  *(void *)(v4 + 40) = v12;
  id v13 = [v2 trailingAnchor];
  id v14 = [v0 contentView];
  id v15 = [v14 trailingAnchor];

  id v16 = [v13 constraintEqualToAnchor:v15 constant:v1];
  *(void *)(v4 + 48) = v16;
  id v17 = [v2 bottomAnchor];
  id v18 = [v0 contentView];
  id v19 = [v18 bottomAnchor];

  id v20 = [v17 constraintEqualToAnchor:v19];
  *(void *)(v4 + 56) = v20;
  specialized Array._endMutation()();
  sub_10004FCE4();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v3 activateConstraints:isa];
}

id sub_10042FF74()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_displayAddress;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_displayAddress + 8);
  if (v2)
  {
    __int16 v3 = *(_WORD *)(v1 + 16);
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_locationView);
    uint64_t v5 = v3 & 1;
    id v6 = (void *)(v4 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle);
    *id v6 = *(void *)v1;
    v6[1] = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v7 = (id *)(v4 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel);
    id v8 = *(void **)(v4 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel);
    if (v6[1])
    {
      id v9 = v8;
      swift_bridgeObjectRetain();
      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v16 = v8;
      NSString v10 = 0;
    }
    [v8 setText:v10];

    id v17 = self;
    id v18 = &selRef_redColor;
    if ((v3 & 0x101) != 0) {
      id v18 = &selRef_secondaryLabelColor;
    }
    id v19 = [v17 *v18];
    uint64_t v20 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleColor;
    id v21 = *(void **)(v4 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleColor);
    *(void *)(v4 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleColor) = v19;
    id v22 = v19;

    [*v7 setTextColor:*(void *)(v4 + v20)];
    uint64_t v23 = (unsigned char *)(v4 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleIsCopyToPasteboardEnabled);
    *(unsigned char *)(v4 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleIsCopyToPasteboardEnabled) = v3 & 1;
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_locationView);
    uint64_t v12 = v11 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle;
    *(_OWORD *)(v11 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle) = xmmword_10055EC80;
    swift_bridgeObjectRelease();
    id v7 = (id *)(v11 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel);
    id v13 = *(void **)(v11 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel);
    if (*(void *)(v12 + 8))
    {
      id v14 = v13;
      swift_bridgeObjectRetain();
      NSString v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v24 = v13;
      NSString v15 = 0;
    }
    [v13 setText:v15];

    id v25 = [self secondaryLabelColor];
    uint64_t v26 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleColor;
    uint64_t v27 = *(void **)(v11 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleColor);
    *(void *)(v11 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleColor) = v25;
    id v28 = v25;

    [*v7 setTextColor:*(void *)(v11 + v26)];
    uint64_t v5 = 0;
    uint64_t v23 = (unsigned char *)(v11 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleIsCopyToPasteboardEnabled);
    *(unsigned char *)(v11 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleIsCopyToPasteboardEnabled) = 0;
  }
  id result = [*v7 setUserInteractionEnabled:v5];
  *((unsigned char *)*v7 + OBJC_IVAR____TtC6FindMy15FMCopyableLabel_isCopyToPasteboardEnabled) = *v23;
  return result;
}

id sub_100430224()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMLabelTableViewLocationCell();
  return [super dealloc];
}

uint64_t type metadata accessor for FMLabelTableViewLocationCell()
{
  return self;
}

void sub_1004302CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10005D034((uint64_t *)&unk_1006C0CE0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_locationView;
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v6 = [self mainBundle];
  v14._countAndFlagsBits = 0xD000000000000026;
  v14._object = (void *)0x800000010059CED0;
  v7._object = (void *)0x800000010059CEB0;
  v7._countAndFlagsBits = 0xD000000000000014;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v14);

  uint64_t v10 = type metadata accessor for FMPlatterIcon();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 0, 1, v10);
  id v11 = objc_allocWithZone((Class)type metadata accessor for FMMultiSettingsRowView());
  *(void *)&v1[v5] = sub_1004FC584(v9._countAndFlagsBits, (uint64_t)v9._object, 1, (uint64_t)v4, 0, 1, 0, 0.0);
  uint64_t v12 = &v1[OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_displayAddress];
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;
  *((_WORD *)v12 + 8) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t type metadata accessor for FMPerformanceTestRunner()
{
  return self;
}

uint64_t sub_1004304F8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10005D034(&qword_1006B20D0);
  __chkstk_darwin(v4 - 8);
  id v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for FMSelectedSection();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  id v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __chkstk_darwin(v9);
  Swift::String v14 = &v27[-v13];
  __chkstk_darwin(v12);
  id v16 = &v27[-v15];
  uint64_t v17 = type metadata accessor for FMPerformanceTestCase();
  sub_100053454(a1 + *(int *)(v17 + 20), (uint64_t)v6);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1003EE590((uint64_t)v6);
  }
  else
  {
    sub_100053C3C((uint64_t)v6, (uint64_t)v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 16) + 56);
    sub_100028164((uint64_t)v16, (uint64_t)v14);
    uint64_t v19 = v18 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess();
    sub_100028164(v19, (uint64_t)v11);
    swift_beginAccess();
    swift_retain();
    sub_100009A88((uint64_t)v14, v19);
    swift_endAccess();
    sub_100053CA0((unint64_t)v11);
    sub_100028108((uint64_t)v14);
    sub_100028108((uint64_t)v11);
    swift_release();
    sub_100028108((uint64_t)v16);
  }
  uint64_t v20 = *(char **)(v2 + 24);
  id v21 = *(void **)&v20[OBJC_IVAR____TtC6FindMy20FMMainViewController_initialCardContainer];
  uint64_t v22 = qword_1006ADFD8;
  uint64_t v23 = v20;
  id v24 = v21;
  if (v22 != -1) {
    swift_once();
  }
  id v25 = sub_10017DC18((uint64_t)v24, *(double *)&xmmword_1006D16D0, *((double *)&xmmword_1006D16D0 + 1));

  [self runTestWithParameters:v25];
  swift_unknownObjectRelease();
  return 1;
}

void sub_1004307CC(uint64_t a1)
{
}

void sub_1004307F0(uint64_t a1)
{
}

void sub_100430970()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy20FMBatteryWrapperView_batteryView];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v1 addSubview:v2];
  uint64_t v3 = self;
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10055C200;
  id v5 = [v1 leadingAnchor];
  id v6 = [v2 leadingAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];

  *(void *)(v4 + 32) = v7;
  id v8 = [v1 trailingAnchor];
  id v9 = [v2 trailingAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9];

  *(void *)(v4 + 40) = v10;
  id v11 = [v1 topAnchor];
  id v12 = [v2 topAnchor];
  id v13 = [v11 constraintLessThanOrEqualToAnchor:v12];

  *(void *)(v4 + 48) = v13;
  id v14 = [v1 bottomAnchor];
  id v15 = [v2 bottomAnchor];
  id v16 = [v14 constraintGreaterThanOrEqualToAnchor:v15];

  *(void *)(v4 + 56) = v16;
  id v17 = [v1 centerYAnchor];
  id v18 = [v2 centerYAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18];

  *(void *)(v4 + 64) = v19;
  specialized Array._endMutation()();
  sub_10004FCE4();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v3 activateConstraints:isa];
}

id sub_100430C4C()
{
  return sub_100430F78(type metadata accessor for FMBatteryWrapperView);
}

uint64_t type metadata accessor for FMBatteryWrapperView()
{
  return self;
}

void sub_100430CFC(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC6FindMy13FMBatteryView_outlineView;
  uint64_t v4 = v1;
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = self;
  id v7 = [v6 imageNamed:v5];

  id v8 = [objc_allocWithZone((Class)UIImageView) initWithImage:v7];
  *(void *)&v1[v3] = v8;
  uint64_t v9 = OBJC_IVAR____TtC6FindMy13FMBatteryView_chargingView;
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v6 imageNamed:v10];

  id v12 = [objc_allocWithZone((Class)UIImageView) initWithImage:v11];
  *(void *)&v4[v9] = v12;
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v6 imageNamed:v13];

  if (v14)
  {
    uint64_t v15 = OBJC_IVAR____TtC6FindMy13FMBatteryView_levelView;
    id v16 = [v14 imageWithRenderingMode:2];

    id v17 = [objc_allocWithZone((Class)UIImageView) initWithImage:v16];
    *(void *)&v4[v15] = v17;
    v4[OBJC_IVAR____TtC6FindMy13FMBatteryView_isCharging] = 0;
    *(void *)&v4[OBJC_IVAR____TtC6FindMy13FMBatteryView_level] = 0;
    v4[OBJC_IVAR____TtC6FindMy13FMBatteryView_isLowPowerEnabled] = 0;
    v4[OBJC_IVAR____TtC6FindMy13FMBatteryView_shouldShowLowPowerWarning] = 0;

    v18.receiver = v4;
    v18.super_class = (Class)type metadata accessor for FMBatteryView();
    [super initWithCoder:a1];
  }
  else
  {
    __break(1u);
  }
}

id sub_100430F60()
{
  return sub_100430F78(type metadata accessor for FMBatteryView);
}

id sub_100430F78(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

char *sub_100430FB0(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    NSString v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    NSString v5 = a1;
    id v7 = a2[1];
    id v6 = a2[2];
    *((void *)a1 + 1) = v7;
    *((void *)a1 + 2) = v6;
    id v8 = a2[4];
    *((void *)a1 + 3) = a2[3];
    *((void *)a1 + 4) = v8;
    uint64_t v9 = a2[6];
    *((void *)a1 + 5) = a2[5];
    *((void *)a1 + 6) = v9;
    a1[56] = *((unsigned char *)a2 + 56);
    id v11 = a2[8];
    NSString v10 = a2[9];
    *((void *)a1 + 8) = v11;
    *((void *)a1 + 9) = v10;
    uint64_t v12 = *(int *)(a3 + 48);
    uint64_t v19 = (uint64_t)a2 + v12;
    uint64_t v20 = &a1[v12];
    *((void *)a1 + 10) = a2[10];
    uint64_t v13 = type metadata accessor for PeopleListPersonRow.State();
    id v14 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    uint64_t v15 = v4;
    id v16 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v17 = v11;
    swift_bridgeObjectRetain();
    v14(v20, v19, v13);
  }
  return v5;
}

uint64_t sub_1004310F0(id *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 48);
  uint64_t v5 = type metadata accessor for PeopleListPersonRow.State();
  id v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_100431190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v9 = *(void **)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v8;
  uint64_t v10 = *(int *)(a3 + 48);
  uint64_t v17 = a2 + v10;
  uint64_t v18 = a1 + v10;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v11 = type metadata accessor for PeopleListPersonRow.State();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v4;
  id v14 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v15 = v9;
  swift_bridgeObjectRetain();
  v12(v18, v17, v11);
  return a1;
}

uint64_t sub_100431284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  uint64_t v9 = *(void **)(a1 + 8);
  uint64_t v10 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v10;
  id v11 = v10;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v12 = *(void **)(a1 + 64);
  id v13 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v13;
  id v14 = v13;

  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(int *)(a3 + 48);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for PeopleListPersonRow.State();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t sub_1004313AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v5 = *(int *)(a3 + 48);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v8 = type metadata accessor for PeopleListPersonRow.State();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_100431450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v10 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

  uint64_t v11 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 48);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for PeopleListPersonRow.State();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_10043153C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100431550);
}

uint64_t sub_100431550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for PeopleListPersonRow.State();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 48);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100431600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100431614);
}

uint64_t sub_100431614(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for PeopleListPersonRow.State();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 48);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1004316BC()
{
  uint64_t result = type metadata accessor for PeopleListPersonRow.State();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10043177C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)v0;
  if (*(void *)v0)
  {
    Hasher._combine(_:)(1u);
    id v3 = v2;
    NSObject.hash(into:)();

    unint64_t v4 = *(void **)(v1 + 8);
    if (v4)
    {
LABEL_3:
      Hasher._combine(_:)(1u);
      id v5 = v4;
      NSObject.hash(into:)();

      goto LABEL_6;
    }
  }
  else
  {
    Hasher._combine(_:)(0);
    unint64_t v4 = *(void **)(v0 + 8);
    if (v4) {
      goto LABEL_3;
    }
  }
  Hasher._combine(_:)(0);
LABEL_6:
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if ((*(void *)(v1 + 48) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v6 = *(void *)(v1 + 48);
  }
  else {
    Swift::UInt64 v6 = 0;
  }
  Hasher._combine(_:)(v6);
  Hasher._combine(_:)(*(unsigned char *)(v1 + 56));
  uint64_t v7 = *(void **)(v1 + 64);
  if (v7)
  {
    Hasher._combine(_:)(1u);
    id v8 = v7;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  type metadata accessor for FMMeCellViewModel();
  type metadata accessor for PeopleListPersonRow.State();
  sub_100431A84(&qword_1006B0B38, (void (*)(uint64_t))&type metadata accessor for PeopleListPersonRow.State);
  return dispatch thunk of Hashable.hash(into:)();
}

void *sub_10043193C()
{
  uint64_t v1 = *(void **)(v0 + 64);
  id v2 = v1;
  return v1;
}

uint64_t sub_100431964()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100431994()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

double sub_1004319C4()
{
  return *(double *)(v0 + 48);
}

uint64_t sub_1004319CC()
{
  return *(unsigned __int8 *)(v0 + 56);
}

Swift::Int sub_1004319D4()
{
  return Hasher._finalize()();
}

Swift::Int sub_100431A18()
{
  return Hasher._finalize()();
}

uint64_t sub_100431A54(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

uint64_t sub_100431A84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_100431ACC()
{
  id result = [objc_allocWithZone((Class)CNContactStore) init];
  qword_1006BE6F0 = (uint64_t)result;
  return result;
}

void sub_100431B00()
{
  id v0 = [self offMainThreadSynchronousRenderingOnlySettingsWithCacheSize:0];
  id v1 = [objc_allocWithZone((Class)CNAvatarImageRenderer) initWithSettings:v0];

  qword_1006BE6F8 = (uint64_t)v1;
}

void sub_100431D64()
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000606BC(v1, (uint64_t)qword_1006D1E98);
  id v2 = v0;
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    Swift::UInt64 v6 = (void *)swift_slowAlloc();
    *(_DWORD *)id v5 = 136315138;
    id v78 = v6;
    long long v7 = *(_OWORD *)&v2[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 80];
    long long v94 = *(_OWORD *)&v2[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 64];
    long long v95 = v7;
    uint64_t v96 = *(void *)&v2[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 96];
    long long v8 = *(_OWORD *)&v2[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 16];
    long long v90 = *(_OWORD *)&v2[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request];
    long long v91 = v8;
    long long v9 = *(_OWORD *)&v2[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 48];
    long long v92 = *(_OWORD *)&v2[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 32];
    long long v93 = v9;
    uint64_t v10 = sub_10010362C();
    uint64_t v77 = sub_1000606F4(v10, v11, (uint64_t *)&v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMPersonImageCreationOperation: started for filename: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v12 = &v2[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request];
  uint64_t v14 = *(void *)&v2[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 16];
  uint64_t v13 = *(void *)&v2[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 24];
  if (!v13) {
    goto LABEL_18;
  }
  if (qword_1006AE368 != -1) {
    swift_once();
  }
  uint64_t v15 = (void *)qword_1006BE6F0;
  NSString v16 = String._bridgeToObjectiveC()();
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_10055BD30;
  *(void *)(v17 + 32) = [self descriptorForRequiredKeys];
  id v78 = (id)v17;
  specialized Array._endMutation()();
  sub_10005D034(&qword_1006AE810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v78 = 0;
  id v19 = [v15 unifiedContactWithIdentifier:v16 keysToFetch:isa error:&v78];

  id v20 = v78;
  if (!v19)
  {
    id v55 = v78;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
LABEL_18:
    uint64_t v56 = *((void *)v12 + 1);
    uint64_t v57 = *((void *)v12 + 4);
    uint64_t v58 = *((void *)v12 + 5);
    char v59 = v12[48];
    uint64_t v60 = *((void *)v12 + 7);
    uint64_t v61 = *((void *)v12 + 8);
    double v62 = *((double *)v12 + 9);
    uint64_t v63 = *((void *)v12 + 12);
    id v78 = *(id *)v12;
    uint64_t v79 = v56;
    uint64_t v80 = v14;
    uint64_t v81 = v13;
    uint64_t v82 = v57;
    uint64_t v83 = v58;
    char v84 = v59;
    uint64_t v85 = v60;
    uint64_t v86 = v61;
    double v87 = v62;
    long long v88 = *((_OWORD *)v12 + 5);
    uint64_t v89 = v63;
    sub_100432514((uint64_t)&v78);
    return;
  }
  uint64_t v75 = *((void *)v12 + 10);
  int v21 = v12[48];
  uint64_t v22 = self;
  id v23 = v20;
  id v24 = [v22 mainScreen];
  [v24 scale];
  double v26 = v25;

  char v74 = v21;
  double v27 = 38.0;
  if (v21) {
    double v27 = 66.0;
  }
  double v28 = v27 * v26;
  Swift::String v29 = self;
  double v30 = *((double *)v12 + 9);
  id v31 = [v29 scopeWithPointSize:v75 == 1 scale:0 rightToLeft:v28 style:v28];
  if (qword_1006AE370 != -1) {
    swift_once();
  }
  objc_super v32 = (void *)qword_1006BE6F8;
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_10055BD30;
  *(void *)(v33 + 32) = v19;
  id v78 = (id)v33;
  specialized Array._endMutation()();
  sub_1001C8868();
  id v34 = v19;
  Class v35 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v36 = (UIImage *)[v32 avatarImageForContacts:v35 scope:v31];

  uint64_t v37 = UIImagePNGRepresentation(v36);
  if (v37)
  {
    uint64_t v38 = v37;
    v72 = v36;
    v73 = v34;
    uint64_t v39 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v41 = v40;

    uint64_t v42 = v2;
    v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      *(_DWORD *)v45 = 136315138;
      uint64_t v77 = v76;
      uint64_t v46 = *((void *)v12 + 1);
      uint64_t v47 = *((void *)v12 + 4);
      uint64_t v48 = *((void *)v12 + 5);
      uint64_t v49 = *((void *)v12 + 7);
      uint64_t v50 = *((void *)v12 + 8);
      uint64_t v51 = *((void *)v12 + 11);
      uint64_t v52 = *((void *)v12 + 12);
      id v78 = *(id *)v12;
      uint64_t v79 = v46;
      uint64_t v80 = v14;
      uint64_t v81 = v13;
      uint64_t v82 = v47;
      uint64_t v83 = v48;
      char v84 = v74;
      uint64_t v85 = v49;
      uint64_t v86 = v50;
      double v87 = v30;
      *(void *)&long long v88 = v75;
      *((void *)&v88 + 1) = v51;
      uint64_t v89 = v52;
      uint64_t v53 = sub_10010362C();
      sub_1000606F4(v53, v54, &v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "FMPersonImageCreationOperation: loaded monogram for filename: %s", v45, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    v71 = *(void (**)(uint64_t, unint64_t, void))&v42[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_completion];
    sub_10002B274(v39, v41);
    v71(v39, v41, 0);
    sub_10002B2CC(v39, v41);
    [v42 setFinished:1];
    swift_unknownObjectRelease();

    sub_10002B2CC(v39, v41);
  }
  else
  {
    uint64_t v64 = *((void *)v12 + 1);
    uint64_t v65 = *((void *)v12 + 4);
    uint64_t v66 = *((void *)v12 + 5);
    uint64_t v67 = *((void *)v12 + 7);
    uint64_t v68 = *((void *)v12 + 8);
    uint64_t v69 = *((void *)v12 + 11);
    uint64_t v70 = *((void *)v12 + 12);
    id v78 = *(id *)v12;
    uint64_t v79 = v64;
    uint64_t v80 = v14;
    uint64_t v81 = v13;
    uint64_t v82 = v65;
    uint64_t v83 = v66;
    char v84 = v21;
    uint64_t v85 = v67;
    uint64_t v86 = v68;
    double v87 = v30;
    *(void *)&long long v88 = v75;
    *((void *)&v88 + 1) = v69;
    uint64_t v89 = v70;
    sub_100432514((uint64_t)&v78);
    swift_unknownObjectRelease();
  }
}

id sub_100432514(uint64_t a1)
{
  uint64_t v2 = sub_100432B60(a1);
  if (v3 >> 60 == 15)
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_1000606BC(v4, (uint64_t)qword_1006D1E98);
    id v5 = v1;
    Swift::UInt64 v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      long long v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)long long v8 = 136315138;
      long long v9 = *(_OWORD *)&v5[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 80];
      long long v37 = *(_OWORD *)&v5[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 64];
      long long v38 = v9;
      uint64_t v39 = *(void *)&v5[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 96];
      long long v10 = *(_OWORD *)&v5[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 16];
      long long v33 = *(_OWORD *)&v5[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request];
      long long v34 = v10;
      long long v11 = *(_OWORD *)&v5[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 48];
      long long v35 = *(_OWORD *)&v5[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 32];
      long long v36 = v11;
      uint64_t v12 = sub_10010362C();
      sub_1000606F4(v12, v13, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMPersonImageCreationOperation: Failed to load silouhette filename: %s", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    double v26 = *(void (**)(uint64_t, void, uint64_t))&v5[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_completion];
    uint64_t v27 = type metadata accessor for FMImageCacheError();
    sub_100432CAC();
    uint64_t v28 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, enum case for FMImageCacheError.unknownError(_:), v27);
    v26(v28, 0, 1);
    swift_errorRelease();
  }
  else
  {
    uint64_t v14 = v2;
    unint64_t v15 = v3;
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_1000606BC(v16, (uint64_t)qword_1006D1E98);
    uint64_t v17 = v1;
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      id v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)id v20 = 136315138;
      long long v21 = *(_OWORD *)&v17[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 80];
      long long v37 = *(_OWORD *)&v17[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 64];
      long long v38 = v21;
      uint64_t v39 = *(void *)&v17[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 96];
      long long v22 = *(_OWORD *)&v17[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 16];
      long long v33 = *(_OWORD *)&v17[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request];
      long long v34 = v22;
      long long v23 = *(_OWORD *)&v17[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 48];
      long long v35 = *(_OWORD *)&v17[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 32];
      long long v36 = v23;
      uint64_t v24 = sub_10010362C();
      sub_1000606F4(v24, v25, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "FMPersonImageCreationOperation: loaded silouhette for filename: %s", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    double v30 = *(void (**)(uint64_t, unint64_t, void))&v17[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_completion];
    sub_10002B274(v14, v15);
    v30(v14, v15, 0);
    sub_10006A4EC(v14, v15);
    sub_10006A4EC(v14, v15);
  }
  return [v1 setFinished:1];
}

id sub_1004329AC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPersonImageCacheOperation();
  return [super dealloc];
}

id sub_100432A74(long long *a1, uint64_t a2, uint64_t a3)
{
  long long v18 = a1[1];
  long long v19 = *a1;
  uint64_t v5 = *((void *)a1 + 4);
  uint64_t v6 = *((void *)a1 + 5);
  char v7 = *((unsigned char *)a1 + 48);
  uint64_t v8 = *((void *)a1 + 7);
  uint64_t v9 = *((void *)a1 + 8);
  uint64_t v10 = *((void *)a1 + 9);
  long long v17 = a1[5];
  uint64_t v11 = *((void *)a1 + 12);
  uint64_t v12 = (objc_class *)type metadata accessor for FMPersonImageCacheOperation();
  unint64_t v13 = objc_allocWithZone(v12);
  v13[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation__isFinished] = 0;
  uint64_t v14 = &v13[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request];
  *(_OWORD *)uint64_t v14 = v19;
  *((_OWORD *)v14 + 1) = v18;
  *((void *)v14 + 4) = v5;
  *((void *)v14 + 5) = v6;
  v14[48] = v7;
  *((void *)v14 + 7) = v8;
  *((void *)v14 + 8) = v9;
  *((void *)v14 + 9) = v10;
  *((_OWORD *)v14 + 5) = v17;
  *((void *)v14 + 12) = v11;
  unint64_t v15 = &v13[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_completion];
  *unint64_t v15 = a2;
  v15[1] = a3;
  v20.receiver = v13;
  v20.super_class = v12;
  return [super init];
}

uint64_t sub_100432B60(uint64_t a1)
{
  if (qword_1006AE370 != -1) {
    swift_once();
  }
  id v2 = [(id)qword_1006BE6F8 placeholderImageProvider];
  int v3 = *(unsigned __int8 *)(a1 + 48);
  id v4 = [self mainScreen];
  [v4 scale];
  double v6 = v5;

  double v7 = 38.0;
  if (v3) {
    double v7 = 66.0;
  }
  uint64_t v8 = [v2 imageForSize:v7 * v6 scale:v7 * v6];
  swift_unknownObjectRelease();
  uint64_t v9 = UIImagePNGRepresentation(v8);

  if (!v9) {
    return 0;
  }
  uint64_t v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

  return v10;
}

unint64_t sub_100432CAC()
{
  unint64_t result = qword_1006BE748;
  if (!qword_1006BE748)
  {
    type metadata accessor for FMImageCacheError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BE748);
  }
  return result;
}

id sub_100432D04(void *a1, void *a2)
{
  int v3 = v2;
  uint64_t v47 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v48 = *(void *)(v9 - 8);
  uint64_t v49 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for DispatchTime();
  uint64_t v12 = *(void *)(v50 - 8);
  uint64_t v13 = __chkstk_darwin(v50);
  unint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  long long v17 = (char *)&v43 - v16;
  id result = [a2 annotation];
  if (result)
  {
    type metadata accessor for FMFenceMapAnnotation();
    uint64_t v19 = swift_dynamicCastClass();
    if (v19)
    {
      objc_super v20 = (char *)v19;
      uint64_t v46 = v6;
      long long v21 = *(void **)&v3[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedAnnotation];
      *(void *)&v3[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedAnnotation] = v19;
      swift_unknownObjectRetain();

      double v22 = *(double *)&v20[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius];
      [v20 coordinate];
      MKCoordinateRegion v54 = MKCoordinateRegionMakeWithDistance(v53, v22 * 3.5, v22 * 3.5);
      [a1 regionThatFits:v54.center.latitude, v54.center.longitude, v54.span.latitudeDelta, v54.span.longitudeDelta];
      double v27 = v23;
      if (v24 >= -180.0 && v24 <= 180.0 && v23 >= -90.0 && v23 <= 90.0)
      {
        double v31 = v25;
        if (v25 >= 0.0 && v25 <= 180.0)
        {
          double v33 = v26;
          if (v26 >= 0.0 && v26 <= 360.0)
          {
            id result = *(id *)&v3[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView];
            if (!result)
            {
              __break(1u);
              return result;
            }
            double v35 = v24;
            [result setRegion:1 animated:v23];
            long long v36 = (double *)&v3[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_currentMapRegion];
            double *v36 = v27;
            v36[1] = v35;
            v36[2] = v31;
            v36[3] = v33;
            *((unsigned char *)v36 + 32) = 0;
          }
        }
      }
      sub_10005EC68();
      long long v37 = (void *)static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      + infix(_:_:)();
      v45 = *(void (**)(char *, uint64_t))(v12 + 8);
      v45(v15, v50);
      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = v3;
      *(void *)(v38 + 24) = v20;
      aBlock[4] = sub_100434438;
      aBlock[5] = v38;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10003C410;
      aBlock[3] = &unk_10063BCC8;
      uint64_t v39 = _Block_copy(aBlock);
      swift_unknownObjectRetain();
      os_log_type_t v44 = v3;
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_10005FE54();
      sub_10005D034((uint64_t *)&unk_1006AE4B0);
      sub_10005ECA8();
      uint64_t v40 = v47;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v39);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v40);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v49);
      v45(v17, v50);
      id v41 = [v44 navigationController];
      if (v41)
      {
        uint64_t v42 = v41;
        [v41 setToolbarHidden:0 animated:0];
      }
      return (id)swift_unknownObjectRelease();
    }
    else
    {
      return (id)swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_100433278(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)(a2 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay);
  id v5 = v4;
  sub_100466560((uint64_t)v4);

  uint64_t v6 = *(void **)(a1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView);
  if (v6)
  {
    [v6 addHandleForAnnotation:a2];
    sub_100467828(*(void *)(a2 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius), 0);
  }
  else
  {
    __break(1u);
  }
}

id sub_1004334D4(void *a1, void *a2)
{
  uint64_t v5 = sub_10005D034(&qword_1006AF730);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  [a2 coordinate];
  v33[2] = v8;
  v33[3] = v9;
  id v10 = [a1 userLocation];
  [v10 coordinate];
  uint64_t v12 = v11;
  uint64_t v14 = v13;

  v33[0] = v12;
  v33[1] = v14;
  CLLocationCoordinate2DGetDistanceFrom();
  if (v15 == 0.0)
  {
    id v16 = objc_allocWithZone((Class)MKUserLocationView);
    swift_unknownObjectRetain();
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [v16 initWithAnnotation:a2 reuseIdentifier:v17];

    swift_unknownObjectRelease();
    [v18 setTintColor:*(void *)(v2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_style + 8)];
    return v18;
  }
  type metadata accessor for FMFenceMapAnnotation();
  uint64_t v19 = swift_dynamicCastClass();
  if (!v19) {
    return 0;
  }
  uint64_t v20 = v19;
  int v21 = *(unsigned __int8 *)(v19 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_locationType);
  swift_unknownObjectRetain();
  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = [a1 dequeueReusableAnnotationViewWithIdentifier:v22];

  if (!v23)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  self;
  double v24 = (void *)swift_dynamicCastObjCClass();
  id v18 = v24;
  if (v24)
  {
    [v24 setDraggable:1];
    uint64_t v25 = 24;
    if (v21) {
      uint64_t v25 = 32;
    }
    uint64_t v26 = *(void *)(v2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_style + v25);
    id v27 = v23;
    [v18 setMarkerTintColor:v26];
    [v18 setAnnotation:v20];

    uint64_t v28 = v20 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_fmfPlacemark;
    swift_beginAccess();
    sub_100434370(v28, (uint64_t)v7);
    uint64_t v29 = type metadata accessor for FMFAddress();
    BOOL v30 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v7, 1, v29) != 1;
    id v31 = v27;
    sub_1004343D8((uint64_t)v7);
    [v18 setCanShowCallout:v30];

    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
  }
  return v18;
}

id sub_1004338C8(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034(&qword_1006AF730);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a2 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_fmfPlacemark;
  swift_beginAccess();
  sub_100434370(v7, (uint64_t)v6);
  uint64_t v8 = type metadata accessor for FMFAddress();
  BOOL v9 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1;
  sub_1004343D8((uint64_t)v6);
  return [a1 setCanShowCallout:v9];
}

id sub_100433A5C(void *a1)
{
  self;
  uint64_t v3 = swift_dynamicCastObjCClassUnconditional();
  swift_unknownObjectRetain();
  id v4 = [a1 rendererForOverlay:v3];
  if (!v4) {
    goto LABEL_4;
  }
  uint64_t v5 = v4;
  self;
  id v6 = (id)swift_dynamicCastObjCClass();
  if (!v6)
  {

LABEL_4:
    id v6 = [objc_allocWithZone((Class)MKCircleRenderer) initWithCircle:v3];
  }
  uint64_t v7 = v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_style;
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_style + 8);
  double v9 = *(double *)(v7 + 16);
  id v10 = v6;
  id v11 = [v8 colorWithAlphaComponent:v9];
  [v10 setFillColor:v11];

  [v10 setStrokeColor:v8];
  id v12 = v10;
  [v12 setLineWidth:2.0];

  swift_unknownObjectRelease();
  return v12;
}

void sub_100433C3C(void *a1)
{
  uint64_t v2 = v1;
  if ([a1 annotation])
  {
    type metadata accessor for FMFenceMapAnnotation();
    if (swift_dynamicCastClass()
      && (uint64_t v3 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedAnnotation,
          (id v4 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedAnnotation)) != 0)
      && (swift_unknownObjectRetain(),
          id v5 = v4,
          char v6 = static NSObject.== infix(_:_:)(),
          swift_unknownObjectRelease(),
          v5,
          (v6 & 1) != 0))
    {
      uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView);
      if (v7)
      {
        [v7 removeHandle:1];
        sub_100466560(0);
        id v8 = *(id *)(v2 + v3);
        *(void *)(v2 + v3) = 0;
        swift_unknownObjectRelease();
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void sub_100433D94(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_showingUserLocation;
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_showingUserLocation) & 1) == 0)
  {
    id v4 = [a1 userLocation];
    [a1 selectAnnotation:v4 animated:1];
    [v4 coordinate];
    MKCoordinateRegion v21 = MKCoordinateRegionMakeWithDistance(v20, 2817.5, 2817.5);
    [a1 regionThatFits:v21.center.latitude, v21.center.longitude, v21.span.latitudeDelta, v21.span.longitudeDelta];
    double v9 = v5;
    if (v6 >= -180.0 && v6 <= 180.0 && v5 >= -90.0 && v5 <= 90.0)
    {
      double v13 = v7;
      if (v7 >= 0.0 && v7 <= 180.0)
      {
        double v15 = v8;
        if (v8 >= 0.0 && v8 <= 360.0)
        {
          NSString v17 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
          if (!v17)
          {
            __break(1u);
            return;
          }
          double v18 = v6;
          [v17 setRegion:1 animated:v5];
          uint64_t v19 = v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_currentMapRegion;
          *(double *)uint64_t v19 = v9;
          *(double *)(v19 + 8) = v18;
          *(double *)(v19 + 16) = v13;
          *(double *)(v19 + 24) = v15;
          *(unsigned char *)(v19 + 32) = 0;
        }
      }
    }

    *(unsigned char *)(v1 + v2) = 1;
  }
}

id sub_100433F28(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  double v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  id result = (id)__chkstk_darwin(v10);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)(a2 - 3) >= 2)
  {
    if (a2 == 1)
    {
      [a1 setCanShowCallout:0];
      id result = *(id *)(v3 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView);
      if (!result)
      {
        __break(1u);
LABEL_16:
        __break(1u);
        return result;
      }
      [result removeHandle:1];
      return sub_100466560(0);
    }
  }
  else
  {
    id result = [a1 annotation];
    if (result)
    {
      uint64_t v25 = v11;
      type metadata accessor for FMFenceMapAnnotation();
      uint64_t v15 = swift_dynamicCastClass();
      if (v15)
      {
        uint64_t v16 = v15;
        uint64_t v24 = v7;
        sub_10048626C();
        NSString v17 = *(void **)(v16 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay);
        id v18 = v17;
        sub_100466560((uint64_t)v17);

        id result = *(id *)(v3 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView);
        if (result)
        {
          [result addHandleForAnnotation:v16];
          sub_10005EC68();
          uint64_t v19 = (void *)static OS_dispatch_queue.main.getter();
          uint64_t v20 = swift_allocObject();
          *(void *)(v20 + 16) = a1;
          *(void *)(v20 + 24) = v16;
          aBlock[4] = sub_100434368;
          aBlock[5] = v20;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_10003C410;
          aBlock[3] = &unk_10063BC78;
          MKCoordinateRegion v21 = _Block_copy(aBlock);
          id v22 = a1;
          swift_unknownObjectRetain();
          static DispatchQoS.unspecified.getter();
          uint64_t v26 = _swiftEmptyArrayStorage;
          sub_10005FE54();
          sub_10005D034((uint64_t *)&unk_1006AE4B0);
          sub_10005ECA8();
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_group.notify(qos:flags:queue:execute:)();
          _Block_release(v21);

          (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v6);
          (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v10);
          swift_unknownObjectRelease();
          return (id)swift_release();
        }
        goto LABEL_16;
      }
      return (id)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_100434328()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_100434368()
{
  return sub_1004338C8(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100434370(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034(&qword_1006AF730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004343D8(uint64_t a1)
{
  uint64_t v2 = sub_10005D034(&qword_1006AF730);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100434438()
{
  sub_100433278(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_10043444C(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = [objc_allocWithZone((Class)AKAppleIDAuthenticationContext) init];
  id v7 = [self sharedInstance];
  NSString v8 = v7;
  if (v7)
  {
    id v9 = [v7 primaryAccountAltDSID];

    if (v9)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v8 = 0;
    }
  }
  [v6 setAltDSID:v8];

  [v6 setServiceType:1];
  id v10 = [objc_allocWithZone((Class)AAUISpinnerViewController) initWithNibName:0 bundle:0];
  id v11 = [objc_allocWithZone((Class)CDPUIDeviceToDeviceEncryptionHelper) initWithPresentingViewController:v10];
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_1000606BC(v12, (uint64_t)qword_1006D1E98);
  id v13 = v10;
  id v14 = a1;
  id v15 = v13;
  id v16 = v14;
  NSString v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v31 = a3;
    uint64_t v20 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 138412546;
    id v29 = v11;
    uint64_t v30 = a2;
    id v21 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v20 = v15;

    *(_WORD *)(v19 + 12) = 2112;
    aBlock[0] = v16;
    id v22 = v16;
    a2 = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v20[1] = v16;

    id v11 = v29;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "FMAppDelegate: upgrade controller - %@, presenter - %@", (uint8_t *)v19, 0x16u);
    sub_10005D034((uint64_t *)&unk_1006B5A50);
    swift_arrayDestroy();
    a3 = v31;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = v11;
  v23[3] = v6;
  v23[4] = v16;
  v23[5] = a2;
  v23[6] = a3;
  aBlock[4] = sub_1004358D8;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10063BD90;
  uint64_t v24 = v6;
  uint64_t v25 = _Block_copy(aBlock);
  id v26 = v16;
  id v27 = v11;
  id v28 = v24;
  swift_retain();
  swift_release();
  [v26 presentViewController:v15 animated:1 completion:v25];
  _Block_release(v25);
}

BOOL sub_100434850(void *a1)
{
  if (qword_1006AE048 != -1) {
    swift_once();
  }
  int v2 = sub_100227048();
  if (v2 == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v5 = [self alertControllerWithTitle:v3 message:v4 preferredStyle:1];

    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v6 = self;
    id v7 = [v6 mainBundle];
    v8._countAndFlagsBits = 0xD000000000000015;
    v28._countAndFlagsBits = 0xD000000000000027;
    v28._object = (void *)0x8000000100580CC0;
    v8._object = (void *)0x8000000100580CA0;
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v28);

    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a1;
    id v21 = a1;
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v26 = sub_1004352D8;
    uint64_t v27 = v10;
    aBlock = _NSConcreteStackBlock;
    unint64_t v23 = 1107296256;
    uint64_t v24 = sub_10000841C;
    uint64_t v25 = &unk_10063BD18;
    uint64_t v12 = _Block_copy(&aBlock);
    swift_release();
    id v13 = self;
    id v14 = [v13 actionWithTitle:v11 style:0 handler:v12];
    _Block_release(v12);

    aBlock = 0;
    unint64_t v23 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v15 = [v6 mainBundle];
    v29._countAndFlagsBits = 0xD000000000000025;
    v29._object = (void *)0x8000000100580D10;
    v16._object = (void *)0x8000000100580CF0;
    v16._countAndFlagsBits = 0xD000000000000013;
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v29);

    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v19 = [v13 actionWithTitle:v18 style:1 handler:0];

    [v5 addAction:v14];
    [v5 addAction:v19];
    if (a1) {
      [v21 presentViewController:v5 animated:1 completion:0];
    }
  }
  return v2 != 1;
}

void sub_100434C10(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_100434C88(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_1000606BC(v10, (uint64_t)qword_1006D1E98);
  NSString v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMAppDelegate: upgrade completion executed", v13, 2u);
    swift_slowDealloc();
  }

  id v14 = (void *)swift_allocObject();
  v14[2] = a3;
  v14[3] = a4;
  v14[4] = a5;
  v17[4] = sub_100435928;
  v17[5] = v14;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_100434C10;
  v17[3] = &unk_10063BDE0;
  id v15 = _Block_copy(v17);
  id v16 = a3;
  swift_retain();
  swift_release();
  [a1 performDeviceToDeviceEncryptionStateRepairForContext:a2 withCompletion:v15];
  _Block_release(v15);
}

uint64_t sub_100434E44(char a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v22 = a4;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v24 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  NSString v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  id v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005EC68();
  id v15 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = v22;
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = v17;
  *(void *)(v16 + 32) = a5;
  *(unsigned char *)(v16 + 40) = a1;
  *(void *)(v16 + 48) = a2;
  aBlock[4] = sub_10043597C;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10063BE30;
  NSString v18 = _Block_copy(aBlock);
  id v19 = a3;
  swift_retain();
  swift_errorRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10005FE54();
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_10005ECA8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v23);
}

uint64_t sub_1004350F4(void *a1, uint64_t (*a2)(void, uint64_t), uint64_t a3, char a4, uint64_t a5)
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_1000606BC(v9, (uint64_t)qword_1006D1E98);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMAppDelegate: upgrade completion dispatched", v12, 2u);
    swift_slowDealloc();
  }

  [a1 dismissViewControllerAnimated:1 completion:0];
  return a2(a4 & 1, a5);
}

void sub_10043521C(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = a2;
    id v4 = a2;
    sub_10043444C(v4, (uint64_t)sub_100435880, v3);

    swift_release();
  }
}

uint64_t sub_1004352A0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1004352D8(uint64_t a1)
{
  sub_10043521C(a1, *(void **)(v1 + 16));
}

void sub_1004352E0(char a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_errorRetain();
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_1000606BC(v3, (uint64_t)qword_1006D1E98);
    swift_errorRetain();
    swift_errorRetain();
    id v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      id v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)id v6 = 136315138;
      swift_errorRetain();
      sub_10005D034((uint64_t *)&unk_1006AEEE0);
      uint64_t v7 = String.init<A>(describing:)();
      sub_1000606F4(v7, v8, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMAppDelegate: upgrade error=%s", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v30 = 0;
    unint64_t v31 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    uint64_t v13 = self;
    id v14 = [v13 mainBundle];
    v33._countAndFlagsBits = 0xD00000000000002FLL;
    v33._object = (void *)0x800000010059D2A0;
    v15._object = (void *)0x800000010059D280;
    v15._countAndFlagsBits = 0xD00000000000001DLL;
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v33);

    uint64_t v30 = 0;
    unint64_t v31 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v17 = [v13 mainBundle];
    v18._countAndFlagsBits = 0xD00000000000001FLL;
    v34._countAndFlagsBits = 0xD000000000000031;
    v34._object = (void *)0x800000010059D2F0;
    v18._object = (void *)0x800000010059D2D0;
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v34);

    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v22 = [self alertControllerWithTitle:v20 message:v21 preferredStyle:1];

    uint64_t v30 = 0;
    unint64_t v31 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v23 = [v13 mainBundle];
    v35._countAndFlagsBits = 0xD000000000000021;
    v35._object = (void *)0x800000010057F840;
    v24._countAndFlagsBits = 0x4F545455425F4B4FLL;
    v24._object = (void *)0xEF454C5449545F4ELL;
    v25._countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v35);

    NSString v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v27 = [self actionWithTitle:v26 style:1 handler:0];

    [v22 addAction:v27];
    [a3 presentViewController:v22 animated:1 completion:0];

    swift_errorRelease();
  }
  else
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_1000606BC(v10, (uint64_t)qword_1006D1E98);
    osloga = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(osloga, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 67109120;
      LODWORD(v30) = a1 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, osloga, v11, "FMAppDelegate: didUpgrade=%{BOOL}d", v12, 8u);
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

void sub_100435880(char a1, uint64_t a2)
{
  sub_1004352E0(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100435888()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_1004358D8()
{
  sub_100434C88(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1004358E8()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100435928(char a1, uint64_t a2)
{
  return sub_100434E44(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_100435934()
{
  swift_release();
  swift_errorRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10043597C()
{
  return sub_1004350F4(*(void **)(v0 + 16), *(uint64_t (**)(void, uint64_t))(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), *(void *)(v0 + 48));
}

void sub_100435A3C(char a1)
{
  uint64_t v2 = v1;
  v15.receiver = v2;
  v15.super_class = (Class)type metadata accessor for FMUnknownItemsViewController();
  [super viewWillAppear:a1 & 1];
  if (qword_1006AE418 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000606BC(v4, (uint64_t)qword_1006D2790);
  os_log_type_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "FMUnknownItemsViewController: viewWillAppear", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t v8 = OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_mediator;
  uint64_t v9 = *(void *)(*(void *)&v2[OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_mediator] + 56);
  type metadata accessor for FMSelectionSubscription();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber + 8) = 0;
  swift_unknownObjectWeakInit();
  swift_retain();
  os_log_type_t v11 = v2;
  UUID.init()();
  *(void *)(v10 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber + 8) = &off_10063BF08;
  swift_unknownObjectWeakAssign();

  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(v9 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v9 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  swift_release();
  *(void *)&v11[OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_selectionSubscription] = v10;
  swift_release();
  uint64_t v12 = *(void *)(*(void *)&v2[v8] + 24);
  type metadata accessor for FMDevicesSubscription();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber + 8) = 0;
  swift_unknownObjectWeakInit();
  id v14 = v11;
  swift_retain();
  UUID.init()();
  *(void *)(v13 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber + 8) = &off_10063BE68;
  swift_unknownObjectWeakAssign();

  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(v12 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v12 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  swift_release();
  *(void *)&v14[OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_deviceSubscription] = v13;
  swift_release();
  sub_1004363DC();
}

uint64_t sub_100435DC4(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FMSelectedSection();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v44 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v43 = (char *)&v43 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  os_log_type_t v11 = (char *)&v43 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v43 - v12;
  id v14 = (objc_class *)type metadata accessor for FMUnknownItemsViewController();
  v47.receiver = v2;
  v47.super_class = v14;
  [super viewWillDisappear:a1 & 1];
  if (qword_1006AE418 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v46 = sub_1000606BC(v15, (uint64_t)qword_1006D2790);
  Swift::String v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    Swift::String v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "FMUnknownItemsViewController: viewWillDisappear", v18, 2u);
    swift_slowDealloc();
  }

  uint64_t v19 = *(void *)&v2[OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_selectionSubscription];
  NSString v20 = &OBJC_IVAR____TtC6FindMy19FMConditionProvider_isAccountManaged;
  if (v19)
  {
    v45 = v11;
    os_log_type_t v11 = v13;
    uint64_t v13 = (char *)v4;
    uint64_t v21 = *(void *)(*(void *)&v2[OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_mediator] + 56);
    swift_beginAccess();
    swift_retain();
    swift_retain();
    uint64_t v22 = 0;
    uint64_t v23 = sub_1003D6AB4((uint64_t *)(v21 + 16), v19);
    uint64_t v24 = v23;
    unint64_t v25 = *(void *)(v21 + 16);
    if (v25 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v26 >= v24) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v26 >= v23)
      {
LABEL_8:
        sub_1002586A8(v24, v26);
        swift_endAccess();
        swift_release();
        swift_release();
        uint64_t v13 = v11;
        os_log_type_t v11 = v45;
        NSString v20 = &OBJC_IVAR____TtC6FindMy19FMConditionProvider_isAccountManaged;
        goto LABEL_9;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
LABEL_9:
  uint64_t v27 = *(void *)&v2[OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_deviceSubscription];
  if (!v27) {
    goto LABEL_13;
  }
  uint64_t v28 = *(void *)(*(void *)&v2[v20[234]] + 24);
  swift_beginAccess();
  swift_retain();
  swift_retain();
  int64_t v29 = sub_10014040C((unint64_t *)(v28 + 16), v27);
  uint64_t v22 = v29;
  unint64_t v30 = *(void *)(v28 + 16);
  if (v30 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v31 >= v22) {
      goto LABEL_12;
    }
LABEL_26:
    __break(1u);
    JUMPOUT(0x100436348);
  }
  uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v31 < v29) {
    goto LABEL_26;
  }
LABEL_12:
  sub_100258678(v22, v31);
  swift_endAccess();
  swift_release();
  swift_release();
  NSString v20 = &OBJC_IVAR____TtC6FindMy19FMConditionProvider_isAccountManaged;
LABEL_13:
  uint64_t v32 = *(void *)&v2[v20[234]];
  uint64_t v33 = *(void *)(v32 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100028164(v33, (uint64_t)v13);
  sub_100028164((uint64_t)v13, (uint64_t)v11);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:
    case 8u:
      sub_100028108((uint64_t)v11);
      goto LABEL_15;
    case 0xFu:
LABEL_15:
      Swift::String v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v34, v35)) {
        goto LABEL_21;
      }
      long long v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v36 = 0;
      long long v37 = "FMUnknownItemsViewController: ignore current selection";
      break;
    case 0x12u:
      Swift::String v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v34, v35)) {
        goto LABEL_21;
      }
      long long v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v36 = 0;
      long long v37 = "FMUnknownItemsViewController: ranging item ignore current selection";
      break;
    default:
      uint64_t v38 = *(void *)(v32 + 56);
      uint64_t v39 = (uint64_t)v43;
      swift_storeEnumTagMultiPayload();
      uint64_t v40 = v38 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
      swift_beginAccess();
      uint64_t v41 = v44;
      sub_100028164(v40, v44);
      swift_beginAccess();
      swift_retain();
      sub_100009A88(v39, v40);
      swift_endAccess();
      sub_100053CA0(v41);
      sub_100028108(v39);
      sub_100028108(v41);
      swift_release();
      sub_100028108((uint64_t)v13);
      uint64_t v13 = v11;
      return sub_100028108((uint64_t)v13);
  }
  _os_log_impl((void *)&_mh_execute_header, v34, v35, v37, v36, 2u);
  swift_slowDealloc();
LABEL_21:

  return sub_100028108((uint64_t)v13);
}

void sub_1004363DC()
{
  if (qword_1006AE418 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000606BC(v0, (uint64_t)qword_1006D2790);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    sub_1000606F4(0xD00000000000001BLL, 0x800000010059D3C0, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "FMUnknownItemsViewController: %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_100436768();
}

void sub_100436564()
{
  uint64_t v1 = v0;
  if (qword_1006AE418 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000606BC(v2, (uint64_t)qword_1006D2790);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_1000606F4(0xD000000000000018, 0x800000010059D3A0, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMUnknownItemsViewController: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  objc_allocWithZone((Class)type metadata accessor for FMUnknownItemsLandingViewController());
  uint64_t v6 = swift_retain();
  uint64_t v7 = sub_10028A1C4(v6);
  *(void *)&v7[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_delegate + 8] = &off_10063BE58;
  swift_unknownObjectWeakAssign();
  v7[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_type] = 2;
  sub_10028AC00();
  uint64_t v8 = v7;
  sub_1004E9B78(v8, v1);
}

void sub_100436768()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMSelectedSection();
  __chkstk_darwin(v2);
  os_log_type_t v4 = (char *)&v20[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE418 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000606BC(v5, (uint64_t)qword_1006D2790);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    v20[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v19 = sub_1000606F4(0xD000000000000011, 0x800000010059D380, v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMUnknownItemsViewController: %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v9 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_mediator) + 56)
     + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100028164(v9, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload() == 9)
  {
    char v10 = *v4;
    id v11 = objc_allocWithZone((Class)type metadata accessor for FMUnknownItemsListViewController());
    uint64_t v12 = swift_retain();
    uint64_t v13 = sub_1004F2140(v12, v10);
    uint64_t v14 = *(void *)&v13[OBJC_IVAR____TtC6FindMy32FMUnknownItemsListViewController_dataSource];
    uint64_t v15 = swift_allocObject();
    swift_unknownObjectWeakInit();
    Swift::String v16 = (void (**)())(v14 + qword_1006B6A30);
    uint64_t v17 = *(void *)(v14 + qword_1006B6A30);
    NSObject *v16 = sub_1004370BC;
    v16[1] = (void (*)())v15;
    sub_100036B90(v17);
    Swift::String v18 = v13;
    sub_1004E9B78(v18, v1);
  }
  else
  {
    sub_100028108((uint64_t)v4);
  }
}

void sub_100436A40()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100436564();
  }
}

void sub_100436A94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for FMSelectedSection();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = &v27[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = &v27[-v11];
  __chkstk_darwin(v10);
  uint64_t v14 = &v27[-v13];
  uint64_t v15 = OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_mediator;
  uint64_t v16 = *(void *)(*(void *)&v3[OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_mediator] + 56)
      + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100028164(v16, (uint64_t)v14);
  LODWORD(v16) = swift_getEnumCaseMultiPayload();
  sub_100028108((uint64_t)v14);
  if (v16 == 8)
  {
    uint64_t v17 = *(void *)(*(void *)&v3[v15] + 56)
        + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
    swift_beginAccess();
    sub_100028164(v17, (uint64_t)v12);
    objc_allocWithZone((Class)type metadata accessor for FMUTCardViewController());
    uint64_t v18 = swift_retain();
    uint64_t v19 = sub_1003EE3EC(v18, (uint64_t)v12);
    swift_release();
    v19[OBJC_IVAR____TtC6FindMy22FMUTCardViewController_bypassWelcomeScreen] = 1;
    [v3 presentCard:v19 completion:0];
LABEL_5:

    return;
  }
  swift_storeEnumTagMultiPayload();
  char v20 = sub_1000281C8(a2, (uint64_t)v12);
  sub_100028108((uint64_t)v12);
  if (v20)
  {
    uint64_t v21 = a1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
    swift_beginAccess();
    sub_100028164(v21, (uint64_t)v12);
    objc_allocWithZone((Class)type metadata accessor for FMChooseMapSheetController());
    uint64_t v22 = swift_retain();
    uint64_t v19 = sub_1001A7620(v22, (uint64_t)v12);
    [v3 presentViewController:v19 animated:1 completion:0];
    goto LABEL_5;
  }
  sub_100028164(a2, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() != 9)
  {
    sub_100028108((uint64_t)v9);
    if (qword_1006AE418 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_1000606BC(v23, (uint64_t)qword_1006D2790);
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "FMUnknownItemsViewController: closing, unknown item is not selected", v26, 2u);
      swift_slowDealloc();
    }

    sub_100255968();
  }
}

uint64_t sub_100436E2C()
{
  swift_release();
  swift_release();

  return swift_release();
}

id sub_100436E7C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMUnknownItemsViewController();
  [super dealloc];
}

uint64_t type metadata accessor for FMUnknownItemsViewController()
{
  return self;
}

id sub_100436F34(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_selectionSubscription] = 0;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_deviceSubscription] = 0;
  v1[OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_shownLandingView] = 0;
  uint64_t v3 = qword_1006AE190;
  os_log_type_t v4 = v1;
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000606BC(v5, (uint64_t)qword_1006D1E98);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMUnknownItemsViewController: Initialized", v8, 2u);
    swift_slowDealloc();
  }

  *(void *)&v4[OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_mediator] = a1;
  swift_retain();

  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for FMUnknownItemsViewController();
  return [super initWithNibName:0 bundle:0];
}

uint64_t sub_100437084()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1004370BC()
{
}

void sub_1004370C4()
{
  [v0 setAxis:1];
  if (qword_1006AE390 != -1) {
    swift_once();
  }
  [v0 setSpacing:*(double *)&qword_1006D2608];
  uint64_t v1 = OBJC_IVAR____TtC6FindMy26FMLostModeSummaryEntryView_footer;
  objc_super v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMLostModeSummaryEntryView_footer];
  uint64_t v3 = self;
  id v4 = v2;
  id v5 = [v3 secondaryLabelColor];
  [v4 setTextColor:v5];

  uint64_t v6 = *(void **)&v0[v1];
  os_log_type_t v7 = self;
  id v8 = v6;
  id v9 = [v7 preferredFontForTextStyle:UIFontTextStyleCaption1];
  [v8 setFont:v9];

  [*(id *)&v0[v1] setAdjustsFontForContentSizeCategory:1];
  [*(id *)&v0[v1] setNumberOfLines:0];
  [*(id *)&v0[v1] setHidden:1];
  uint64_t v10 = OBJC_IVAR____TtC6FindMy26FMLostModeSummaryEntryView_platter;
  [v0 addArrangedSubview:*(void *)&v0[OBJC_IVAR____TtC6FindMy26FMLostModeSummaryEntryView_platter]];
  [v0 addArrangedSubview:*(void *)&v0[v1]];
  id v11 = *(id *)&v0[v10];
  id v12 = [v3 secondarySystemBackgroundColor];
  [v11 setBackgroundColor:v12];

  uint64_t v13 = qword_1006AE378;
  id v14 = *(id *)&v0[v10];
  if (v13 != -1) {
    swift_once();
  }
  double v15 = *(double *)&qword_1006D25F0;
  if (qword_1006AE380 != -1) {
    swift_once();
  }
  [v14 setDirectionalLayoutMargins:v15];

  id v16 = [*(id *)&v0[v10] layer];
  if (qword_1006AE388 != -1) {
    swift_once();
  }
  [v16 setCornerRadius:*(double *)&qword_1006D2600];

  id v17 = [*(id *)&v0[v10] layer];
  [v17 setCornerCurve:kCACornerCurveContinuous];
}

void sub_100437414()
{
  qword_1006D25F0 = 0x401C000000000000;
}

void sub_100437424()
{
  qword_1006D25F8 = 0x4030000000000000;
}

void sub_100437434()
{
  qword_1006D2600 = 0x4024000000000000;
}

void sub_100437444()
{
  qword_1006D2608 = 0x4024000000000000;
}

id sub_100437610()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMLostModeSummaryEntryView();
  [super dealloc];
}

uint64_t type metadata accessor for FMLostModeSummaryEntryView()
{
  return self;
}

uint64_t sub_1004376B4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_1004376DC(uint64_t a1, void *a2)
{
  objc_super v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

void sub_100437728()
{
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for FMTrackAnnotationView();
  [super prepareForDisplay];
  if ([v0 annotation])
  {
    type metadata accessor for FMTrackAnnotation();
    if (swift_dynamicCastClass())
    {
      uint64_t v1 = (void *)sub_100437B48();
      [v0 setImage:v1];

      LODWORD(v2) = 1144750080;
      [v0 setDisplayPriority:v2];
      id v3 = [v0 layer];
      [v3 setAnchorPoint:0.5, 0.5];
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void sub_100437870(void *a1, double a2, double a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  id v13 = [self imageNamed:v5];

  if (v13)
  {
    id v6 = [v13 CGImage];
    if (v6)
    {
      os_log_type_t v7 = v6;
      id v8 = (CGContext *)[a1 CGContext];
      CGContextSaveGState(v8);

      id v9 = (CGContext *)[a1 CGContext];
      CGContextScaleCTM(v9, 1.0, -1.0);

      uint64_t v10 = (CGContext *)[a1 CGContext];
      CGContextTranslateCTM(v10, 0.0, -a3);

      id v11 = [a1 CGContext];
      CGContextRef.draw(_:in:byTiling:)();

      id v12 = (CGContext *)[a1 CGContext];
      CGContextRestoreGState(v12);
    }
  }
}

id sub_100437B10()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMTrackAnnotationView();
  [super dealloc];
}

uint64_t sub_100437B48()
{
  id v0 = [self systemBlueColor];
  id v1 = [v0 colorWithAlphaComponent:0.2];

  id v2 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:10.0, 10.0];
  uint64_t v3 = swift_allocObject();
  __asm { FMOV            V0.2D, #10.0 }
  *(_OWORD *)(v3 + 16) = _Q0;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100437D48;
  *(void *)(v9 + 24) = v3;
  v13[4] = sub_100437D60;
  v13[5] = v9;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  void v13[2] = sub_1004376DC;
  v13[3] = &unk_10063BFC0;
  uint64_t v10 = _Block_copy(v13);
  swift_retain();
  swift_release();
  id v11 = [v2 imageWithActions:v10];

  _Block_release(v10);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v2 & 1) == 0) {
    return (uint64_t)v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100437D38()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100437D48(void *a1)
{
  sub_100437870(a1, *(double *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_100437D50()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100437D60()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_100437D8C()
{
  uint64_t v1 = [v0 navigationController];
  if (v1)
  {
    NSString v5 = v1;
    type metadata accessor for FMActivityIndicatingNavigationController();
    if (swift_dynamicCastClass())
    {
      sub_1000BEC78();
      goto LABEL_9;
    }
  }
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000606BC(v2, (uint64_t)qword_1006D1E98);
  NSString v5 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v3))
  {
    objc_super v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)objc_super v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v3, "FMActivityIndicatingViewController: showActivityIndicator called on invalid navigation controller.", v4, 2u);
    swift_slowDealloc();
  }
LABEL_9:
}

uint64_t sub_100437EC0(uint64_t a1, uint64_t a2)
{
  os_log_type_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

id sub_100437F14(uint64_t a1, unint64_t a2)
{
  aBlock = 0;
  unint64_t v34 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  objc_super v4 = self;
  id v5 = [v4 mainBundle];
  v6._countAndFlagsBits = 0xD000000000000023;
  v39._countAndFlagsBits = 0xD000000000000035;
  v39._object = (void *)0x800000010059D5A0;
  v6._object = (void *)0x800000010059D570;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v39);

  sub_10005D034((uint64_t *)&unk_1006AF790);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10055B970;
  *(void *)(v8 + 56) = &type metadata for String;
  unint64_t v9 = sub_10007F2C8();
  *(void *)(v8 + 64) = v9;
  *(void *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = a2;
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  LOBYTE(v8) = sub_100477034(a1, a2, 0);
  swift_bridgeObjectRelease();
  if (v8)
  {
    aBlock = 0;
    unint64_t v34 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v10 = [v4 mainBundle];
    v40._countAndFlagsBits = 0xD000000000000039;
    v40._object = (void *)0x800000010059D680;
    v11._object = (void *)0x800000010059D650;
    v11._countAndFlagsBits = 0xD000000000000027;
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v40);

    id v13 = v4;
  }
  else
  {
    sub_100147B5C();
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_10055B970;
    *(void *)(v14 + 56) = &type metadata for String;
    *(void *)(v14 + 64) = v9;
    *(void *)(v14 + 32) = 0xD000000000000029;
    *(void *)(v14 + 40) = 0x8000000100586570;
    double v15 = NSPredicate.init(format:_:)();
    NSString v16 = String._bridgeToObjectiveC()();
    unsigned int v17 = [v15 evaluateWithObject:v16];

    if (!v17)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    aBlock = 0;
    unint64_t v34 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v18 = [v4 mainBundle];
    v41._countAndFlagsBits = 0xD000000000000039;
    v41._object = (void *)0x800000010059D610;
    v19._object = (void *)0x800000010059D5E0;
    v19._countAndFlagsBits = 0xD000000000000027;
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v18, v20, v41);

    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_10055B970;
    *(void *)(v21 + 56) = &type metadata for String;
    *(void *)(v21 + 64) = v9;
    id v13 = v4;
    *(void *)(v21 + 32) = a1;
    *(void *)(v21 + 40) = a2;
    swift_bridgeObjectRetain();
    String.init(format:_:)();
    swift_bridgeObjectRelease();
  }
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v24 = [self alertControllerWithTitle:v22 message:v23 preferredStyle:1];

  if (v24)
  {
    id v25 = v24;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v26 = [v13 mainBundle];
    v42._countAndFlagsBits = 0xD000000000000021;
    v42._object = (void *)0x800000010057F840;
    v27._countAndFlagsBits = 0x4F545455425F4B4FLL;
    v27._object = (void *)0xEF454C5449545F4ELL;
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v26, v28, v42);

    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    long long v37 = State.rawValue.getter;
    uint64_t v38 = 0;
    aBlock = _NSConcreteStackBlock;
    unint64_t v34 = 1107296256;
    os_log_type_t v35 = sub_10000841C;
    long long v36 = &unk_10063BFE8;
    unint64_t v30 = _Block_copy(&aBlock);
    swift_release();
    id v31 = [self actionWithTitle:v29 style:0 handler:v30];
    _Block_release(v30);

    [v25 addAction:v31];
  }
  return v24;
}

void sub_100438520(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5 = sub_10005D034((uint64_t *)&unk_1006C22C0);
  __chkstk_darwin(v5 - 8);
  Swift::String v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16))
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    uint64_t v9 = sub_1000606BC(v8, (uint64_t)qword_1006D1E98);
    swift_bridgeObjectRetain_n();
    id v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      Swift::String v12 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      uint64_t v40 = v9;
      *(_DWORD *)Swift::String v12 = 136315138;
      uint64_t v13 = Array.debugDescription.getter();
      uint64_t v41 = sub_1000606F4(v13, v14, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMAddFriendViewController: 🙏 Offering shares to %s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_retain();
    dispatch thunk of FMFManager.preferences.getter();
    swift_release();
    uint64_t v19 = type metadata accessor for FMFPreferences();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v7, 1, v19) == 1)
    {
      sub_100003F10((uint64_t)v7, (uint64_t *)&unk_1006C22C0);
      uint64_t v21 = 0;
    }
    else
    {
      uint64_t v21 = FMFPreferences.primaryEmail.getter();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v19);
    }
    NSString v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v41 = 0;
      uint64_t aBlock = v25;
      *(_DWORD *)uint64_t v24 = 136315394;
      sub_10005D034(&qword_1006BE830);
      uint64_t v26 = String.init<A>(describing:)();
      uint64_t v40 = v21;
      uint64_t v41 = sub_1000606F4(v26, v27, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      uint64_t v41 = 0;
      sub_10005D034(&qword_1006B97D0);
      uint64_t v28 = String.init<A>(describing:)();
      uint64_t v41 = sub_1000606F4(v28, v29, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "FMAddFriendViewController: 🙏 Will present: \nAnchorItem: %s \nAnchorView: %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    id v30 = [self sharedInstance];
    NSString v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = a2;
    *(void *)(v32 + 24) = a3;
    uint64_t v46 = (uint64_t (*)())sub_100439E10;
    uint64_t v47 = v32;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v43 = 1107296256;
    uint64_t v44 = sub_100437EC0;
    v45 = &unk_10063C060;
    uint64_t v33 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    unint64_t v34 = a3;
    swift_release();
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v34;
    uint64_t v46 = (uint64_t (*)())sub_100439E18;
    uint64_t v47 = v35;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v43 = 1107296256;
    uint64_t v44 = sub_10003C410;
    v45 = &unk_10063C0B0;
    long long v36 = _Block_copy(&aBlock);
    long long v37 = v34;
    swift_release();
    LOBYTE(v39) = 1;
    id v38 = [v30 showOfferActionSheetInViewController:v37 popoverAnchoredAtView:0 orAnchoredOnBarButtonItem:0 fromEmail:v31 withCompletion:v33 cancelHandler:v36 showAlert:v39];
    _Block_release(v36);
    _Block_release(v33);
  }
  else
  {
    double v15 = *(void **)&a3[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView];
    if (v15)
    {
      id v16 = [v15 textView];
      if (v16)
      {
        unsigned int v17 = v16;
        [v16 resignFirstResponder];

        uint64_t v46 = State.rawValue.getter;
        uint64_t v47 = 0;
        uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
        uint64_t v43 = 1107296256;
        uint64_t v44 = sub_10003C410;
        v45 = &unk_10063C0D8;
        id v18 = _Block_copy(&aBlock);
        [a3 dismissViewControllerAnimated:1 completion:v18];
        _Block_release(v18);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_100438C00(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for FriendshipExpiration();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v20 - v12;
  __chkstk_darwin(v11);
  double v15 = (char *)&v20 - v14;
  if (a1 >= 3)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v13, *(unsigned int *)*(&off_10063C1A0 + a1), v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v13, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v15, v6);
    type metadata accessor for FMFShareLocationAction();
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v16 = FMFShareLocationAction.init(handles:friendId:duration:)();
    sub_100437D8C();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a2;
    *(void *)(v17 + 24) = a3;
    swift_bridgeObjectRetain();
    swift_retain();
    id v18 = a3;
    sub_1000F4F54(v16, (uint64_t)sub_100439E64, v17);
    swift_release();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v15, v6);
  }
  return result;
}

void sub_100438E8C(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v8 = type metadata accessor for FMFActionStatus();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v38 - v13;
  if (a2)
  {
    swift_errorRetain();
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_1000606BC(v15, (uint64_t)qword_1006D1E98);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = (void *)swift_slowAlloc();
      uint64_t v39 = v19;
      uint64_t v41 = swift_slowAlloc();
      uint64_t v43 = v41;
      *(_DWORD *)uint64_t v18 = 138412802;
      os_log_t v40 = v16;
      v20.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      Swift::String v42 = a4;
      Class isa = v20.super.isa;
      uint64_t aBlock = (uint64_t)v20.super.isa;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v19 = isa;
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2080;
      uint64_t aBlock = 0;
      unint64_t v45 = 0xE000000000000000;
      _print_unlocked<A, B>(_:_:)();
      uint64_t aBlock = sub_1000606F4(aBlock, v45, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      a4 = v42;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      *(_WORD *)(v18 + 22) = 2080;
      uint64_t aBlock = a2;
      swift_errorRetain();
      sub_10005D034((uint64_t *)&unk_1006AEEE0);
      uint64_t v22 = String.init<A>(describing:)();
      uint64_t aBlock = sub_1000606F4(v22, v23, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v24 = v40;
      _os_log_impl((void *)&_mh_execute_header, v40, v17, "FMAddFriendViewController: 🙏 Error offering shares to %@ %s %s", (uint8_t *)v18, 0x20u);
      sub_10005D034((uint64_t *)&unk_1006B5A50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      goto LABEL_13;
    }
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_1000606BC(v25, (uint64_t)qword_1006D1E98);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, a1, v8);
    swift_bridgeObjectRetain();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = (void *)swift_slowAlloc();
      uint64_t v39 = v28;
      uint64_t v41 = swift_slowAlloc();
      uint64_t v43 = v41;
      *(_DWORD *)uint64_t v27 = 138412546;
      os_log_t v40 = v16;
      v29.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      Swift::String v42 = a4;
      Class v30 = v29.super.isa;
      uint64_t aBlock = (uint64_t)v29.super.isa;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v28 = v30;
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      uint64_t aBlock = 0;
      unint64_t v45 = 0xE000000000000000;
      _print_unlocked<A, B>(_:_:)();
      uint64_t aBlock = sub_1000606F4(aBlock, v45, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      a4 = v42;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      os_log_t v31 = v40;
      _os_log_impl((void *)&_mh_execute_header, v40, v26, "FMAddFriendViewController: 🙏 Offered shares to %@ %s", (uint8_t *)v27, 0x16u);
      sub_10005D034((uint64_t *)&unk_1006B5A50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      goto LABEL_13;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }

LABEL_13:
  uint64_t v32 = *(void **)&a4[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView];
  if (v32)
  {
    id v33 = [v32 textView];
    if (v33)
    {
      unint64_t v34 = v33;
      [v33 resignFirstResponder];

      uint64_t v35 = (void *)swift_allocObject();
      v35[2] = a4;
      v35[3] = a2;
      v35[4] = a3;
      uint64_t v48 = sub_100439EB4;
      uint64_t v49 = v35;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      unint64_t v45 = 1107296256;
      uint64_t v46 = sub_10003C410;
      uint64_t v47 = &unk_10063C150;
      long long v36 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_errorRetain();
      long long v37 = a4;
      swift_release();
      [v37 dismissViewControllerAnimated:1 completion:v36];
      _Block_release(v36);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100439604(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for FMSelectedSection();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v22 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v22 - v13;
  sub_100439EC0(a2, a3);
  uint64_t v15 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_mediator;
  uint64_t v16 = *(void *)(*(void *)(a1 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_mediator) + 56);
  uint64_t v17 = v16 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
  swift_beginAccess();
  sub_100028164(v17, (uint64_t)v14);
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = v16 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100028164(v18, (uint64_t)v9);
  swift_beginAccess();
  swift_retain();
  sub_100009A88((uint64_t)v12, v18);
  swift_endAccess();
  sub_100053CA0((unint64_t)v9);
  sub_100028108((uint64_t)v12);
  sub_100028108((uint64_t)v9);
  swift_release();
  uint64_t v19 = *(void *)(*(void *)(a1 + v15) + 56);
  sub_100028164((uint64_t)v14, (uint64_t)v12);
  uint64_t v20 = v19 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
  swift_beginAccess();
  swift_retain();
  sub_100009A88((uint64_t)v12, v20);
  swift_endAccess();
  sub_10024B554();
  sub_100028108((uint64_t)v12);
  swift_release();
  return sub_100028108((uint64_t)v14);
}

void sub_100439828(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView;
  os_log_type_t v3 = *(void **)(a1 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView);
  if (!v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  [v3 setEditable:1];
  objc_super v4 = *(void **)(a1 + v2);
  if (!v4)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v5 = [v4 textView];
  if (!v5)
  {
LABEL_9:
    __break(1u);
    return;
  }
  id v6 = v5;
  [v5 becomeFirstResponder];
}

id sub_100439970()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAddFriendViewController();
  [super dealloc];
}

uint64_t sub_1004399A8()
{
  return type metadata accessor for FMAddFriendViewController();
}

uint64_t type metadata accessor for FMAddFriendViewController()
{
  uint64_t result = qword_1006BE820;
  if (!qword_1006BE820) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1004399FC()
{
  return swift_updateClassMetadata2();
}

id sub_100439A34()
{
  uint64_t v1 = type metadata accessor for FMSelectedSection();
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  objc_super v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  id v6 = &v13[-v5];
  id result = *(id *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView];
  if (result)
  {
    id result = [result textView];
    if (result)
    {
      uint64_t v8 = result;
      [result resignFirstResponder];

      aBlock[4] = State.rawValue.getter;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10003C410;
      aBlock[3] = &unk_10063C178;
      uint64_t v9 = _Block_copy(aBlock);
      [v0 dismissViewControllerAnimated:1 completion:v9];
      _Block_release(v9);
      uint64_t v10 = *(void *)(*(void *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_mediator] + 56);
      uint64_t v11 = v10 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
      swift_beginAccess();
      sub_100028164(v11, (uint64_t)v6);
      uint64_t v12 = v10 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
      swift_beginAccess();
      sub_100028164(v12, (uint64_t)v4);
      swift_beginAccess();
      swift_retain();
      sub_100009A88((uint64_t)v6, v12);
      swift_endAccess();
      sub_100053CA0((unint64_t)v4);
      sub_100028108((uint64_t)v6);
      sub_100028108((uint64_t)v4);
      return (id)swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100439C54()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView;
  uint64_t result = *(void *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t result = (uint64_t)[(id)result textView];
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v3 = (void *)result;
  [(id)result resignFirstResponder];

  unint64_t v4 = *(void *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientText + 8];
  if (v4)
  {
    if ((v4 & 0x2000000000000000) != 0
       ? HIBYTE(v4) & 0xF
       : *(void *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientText] & 0xFFFFFFFFFFFFLL)
    {
      uint64_t result = sub_10018E32C(0, 0);
      if ((result & 1) == 0) {
        return result;
      }
    }
  }
  uint64_t result = *(void *)&v0[v1];
  if (!result)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  uint64_t result = (uint64_t)[(id)result recipients];
  if (result)
  {
    id v6 = (void *)result;
    uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v8 = sub_1005436D8(v7);
    uint64_t result = swift_bridgeObjectRelease();
    if (v8)
    {
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = v0;
      uint64_t v10 = v0;
      uint64_t v11 = (void *)sub_1001942B4((unint64_t)v8, (uint64_t)sub_100439E04, v9);
      swift_bridgeObjectRelease();

      return swift_release();
    }
  }
  return result;
}

uint64_t sub_100439DCC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100439E04(uint64_t a1, uint64_t a2)
{
  sub_100438520(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_100439E10(unint64_t a1)
{
  return sub_100438C00(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_100439E18()
{
  sub_100439828(*(void *)(v0 + 16));
}

uint64_t sub_100439E24()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100439E64(uint64_t a1, uint64_t a2)
{
  sub_100438E8C(a1, a2, *(void *)(v2 + 16), *(char **)(v2 + 24));
}

uint64_t sub_100439E6C()
{
  swift_errorRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100439EB4()
{
  return sub_100439604(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_100439EC0(uint64_t a1, void *a2)
{
  if (a1)
  {
    uint64_t v66 = (void *)_convertErrorToNSError(_:)();
    id v2 = [v66 userInfo];
    uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v4 = v3 + 64;
    char v65 = 1;
    uint64_t v5 = 1 << *(unsigned char *)(v3 + 32);
    uint64_t v6 = -1;
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    unint64_t v7 = v6 & *(void *)(v3 + 64);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    swift_bridgeObjectRetain();
    uint64_t v64 = 0;
    int64_t v9 = 0;
    uint64_t v67 = _swiftEmptyArrayStorage;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_56:
          __break(1u);
          return;
        }
        if (v12 >= v8) {
          goto LABEL_41;
        }
        unint64_t v13 = *(void *)(v4 + 8 * v12);
        ++v9;
        if (!v13)
        {
          int64_t v9 = v12 + 1;
          if (v12 + 1 >= v8) {
            goto LABEL_41;
          }
          unint64_t v13 = *(void *)(v4 + 8 * v9);
          if (!v13)
          {
            int64_t v9 = v12 + 2;
            if (v12 + 2 >= v8) {
              goto LABEL_41;
            }
            unint64_t v13 = *(void *)(v4 + 8 * v9);
            if (!v13)
            {
              int64_t v9 = v12 + 3;
              if (v12 + 3 >= v8) {
                goto LABEL_41;
              }
              unint64_t v13 = *(void *)(v4 + 8 * v9);
              if (!v13)
              {
                int64_t v9 = v12 + 4;
                if (v12 + 4 >= v8) {
                  goto LABEL_41;
                }
                unint64_t v13 = *(void *)(v4 + 8 * v9);
                if (!v13)
                {
                  int64_t v14 = v12 + 5;
                  if (v14 >= v8)
                  {
LABEL_41:
                    swift_release();
                    uint64_t v26 = v67[2];
                    swift_bridgeObjectRelease();
                    if (v26)
                    {
                      if (v26 == 1)
                      {
                        swift_bridgeObjectRelease();
                        if (v65 & 1 | (v64 != 516))
                        {
                          if (a2[2])
                          {
                            uint64_t v28 = a2[4];
                            unint64_t v27 = a2[5];
                            swift_bridgeObjectRetain();
                            char v29 = sub_100477034(v28, v27, 1);
                            swift_bridgeObjectRelease();
                            if (v29)
                            {
                              uint64_t v30 = sub_100119BF4(v28);
                              uint64_t v32 = v31;
                              swift_bridgeObjectRelease();
                              *(void *)&long long v71 = 0;
                              *((void *)&v71 + 1) = 0xE000000000000000;
                              _StringGuts.grow(_:)(20);
                              swift_bridgeObjectRelease();
                              id v33 = self;
                              id v34 = [v33 mainBundle];
                              v74._countAndFlagsBits = 0xD000000000000032;
                              v74._object = (void *)0x800000010059D7E0;
                              v35._object = (void *)0x800000010059D7B0;
                              v35._countAndFlagsBits = 0xD000000000000020;
                              v36._countAndFlagsBits = 0;
                              v36._object = (void *)0xE000000000000000;
                              NSLocalizedString(_:tableName:bundle:value:comment:)(v35, (Swift::String_optional)0, (NSBundle)v34, v36, v74);

                              sub_10005D034((uint64_t *)&unk_1006AF790);
                              uint64_t v37 = swift_allocObject();
                              *(_OWORD *)(v37 + 16) = xmmword_10055B970;
                              *(void *)(v37 + 56) = &type metadata for String;
                              *(void *)(v37 + 64) = sub_10007F2C8();
                              *(void *)(v37 + 32) = v30;
                              *(void *)(v37 + 40) = v32;
                              String.init(format:_:)();
                              swift_bridgeObjectRelease();
                              *(void *)&long long v71 = 0;
                              *((void *)&v71 + 1) = 0xE000000000000000;
                              _StringGuts.grow(_:)(20);
                              swift_bridgeObjectRelease();
                              id v38 = [v33 mainBundle];
                              v39._countAndFlagsBits = 0xD000000000000022;
                              v75._countAndFlagsBits = 0xD000000000000034;
                              v75._object = (void *)0x800000010059D850;
                              v39._object = (void *)0x800000010059D820;
                              v40._countAndFlagsBits = 0;
                              v40._object = (void *)0xE000000000000000;
                              NSLocalizedString(_:tableName:bundle:value:comment:)(v39, (Swift::String_optional)0, (NSBundle)v38, v40, v75);

                              uint64_t v41 = self;
                              NSString v42 = String._bridgeToObjectiveC()();
                              swift_bridgeObjectRelease();
                              NSString v43 = String._bridgeToObjectiveC()();
                              swift_bridgeObjectRelease();
                              [v41 showSimpleAlertWithTitle:v42 message:v43];
                            }
                            else
                            {
                              swift_bridgeObjectRelease();
                              [self showGenericErrorAlert];
                            }
                          }
                        }
                        else
                        {
                          [self showOfferToSelfError];
                        }
                      }
                      else
                      {
                        unint64_t v45 = self;
                        uint64_t v46 = *(void *)(v3 + 16);
                        swift_bridgeObjectRelease();
                        id v47 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v46];
                        id v48 = [v45 localizedStringFromNumber:v47 numberStyle:0];

                        uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                        uint64_t v51 = v50;

                        *(void *)&long long v71 = 0;
                        *((void *)&v71 + 1) = 0xE000000000000000;
                        _StringGuts.grow(_:)(20);
                        swift_bridgeObjectRelease();
                        uint64_t v52 = self;
                        id v53 = [v52 mainBundle];
                        v54._countAndFlagsBits = 0xD000000000000023;
                        v76._countAndFlagsBits = 0xD000000000000035;
                        v76._object = (void *)0x800000010059D700;
                        v54._object = (void *)0x800000010059D6D0;
                        v55._countAndFlagsBits = 0;
                        v55._object = (void *)0xE000000000000000;
                        NSLocalizedString(_:tableName:bundle:value:comment:)(v54, (Swift::String_optional)0, (NSBundle)v53, v55, v76);

                        sub_10005D034((uint64_t *)&unk_1006AF790);
                        uint64_t v56 = swift_allocObject();
                        *(_OWORD *)(v56 + 16) = xmmword_10055B970;
                        *(void *)(v56 + 56) = &type metadata for String;
                        *(void *)(v56 + 64) = sub_10007F2C8();
                        *(void *)(v56 + 32) = v49;
                        *(void *)(v56 + 40) = v51;
                        String.init(format:_:)();
                        swift_bridgeObjectRelease();
                        *(void *)&long long v71 = 0;
                        *((void *)&v71 + 1) = 0xE000000000000000;
                        _StringGuts.grow(_:)(20);
                        swift_bridgeObjectRelease();
                        id v57 = [v52 mainBundle];
                        v58._countAndFlagsBits = 0xD000000000000025;
                        v77._countAndFlagsBits = 0xD000000000000037;
                        v77._object = (void *)0x800000010059D770;
                        v58._object = (void *)0x800000010059D740;
                        v59._countAndFlagsBits = 0;
                        v59._object = (void *)0xE000000000000000;
                        NSLocalizedString(_:tableName:bundle:value:comment:)(v58, (Swift::String_optional)0, (NSBundle)v57, v59, v77);

                        uint64_t v60 = self;
                        NSString v61 = String._bridgeToObjectiveC()();
                        swift_bridgeObjectRelease();
                        NSString v62 = String._bridgeToObjectiveC()();
                        swift_bridgeObjectRelease();
                        [v60 showSimpleAlertWithTitle:v61 message:v62];
                      }
                    }
                    else
                    {
                      swift_bridgeObjectRelease();
                    }

                    return;
                  }
                  unint64_t v13 = *(void *)(v4 + 8 * v14);
                  if (!v13)
                  {
                    while (1)
                    {
                      int64_t v9 = v14 + 1;
                      if (__OFADD__(v14, 1)) {
                        goto LABEL_56;
                      }
                      if (v9 >= v8) {
                        goto LABEL_41;
                      }
                      unint64_t v13 = *(void *)(v4 + 8 * v9);
                      ++v14;
                      if (v13) {
                        goto LABEL_25;
                      }
                    }
                  }
                  int64_t v9 = v14;
                }
              }
            }
          }
        }
LABEL_25:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
      }
      uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
      uint64_t v17 = *v15;
      unint64_t v16 = v15[1];
      swift_bridgeObjectRetain_n();
      uint64_t v18 = sub_100480A20(v17, v16);
      if ((v19 & 1) != 0 || (uint64_t v20 = v18, 100 * (v18 / 100) != 500) || v18 == 518)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        if (*(void *)(v3 + 16) && (unint64_t v21 = sub_100053708(v17, v16), (v22 & 1) != 0))
        {
          sub_1000607C8(*(void *)(v3 + 56) + 32 * v21, (uint64_t)&v71);
        }
        else
        {
          long long v71 = 0u;
          long long v72 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((void *)&v72 + 1))
        {
          if (swift_dynamicCast())
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v67 = sub_10007D258(0, v67[2] + 1, 1, v67);
            }
            unint64_t v24 = v67[2];
            unint64_t v23 = v67[3];
            if (v24 >= v23 >> 1) {
              uint64_t v67 = sub_10007D258((void *)(v23 > 1), v24 + 1, 1, v67);
            }
            v67[2] = v24 + 1;
            uint64_t v25 = &v67[2 * v24];
            v25[4] = v69;
            v25[5] = v70;
            uint64_t v64 = v20;
            char v65 = 0;
          }
        }
        else
        {
          sub_100003F10((uint64_t)&v71, &qword_1006AFE40);
        }
      }
    }
  }
  uint64_t v44 = self;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v44 showOfferSuccessForHandles:isa];
}

uint64_t sub_10043A7C0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_identifier;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100068760(v0 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber);

  return swift_deallocClassInstance();
}

uint64_t sub_10043A870()
{
  return type metadata accessor for FMLocationSubscription();
}

Swift::Int sub_10043A878()
{
  return Hasher._finalize()();
}

uint64_t sub_10043A910()
{
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_10043A998()
{
  return Hasher._finalize()();
}

uint64_t sub_10043AA2C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(a1, a2, ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10043AAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10043AB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10043AC24()
{
  return static UUID.== infix(_:_:)();
}

uint64_t sub_10043AC40()
{
  return sub_10043AC88(&qword_1006BE930, (void (*)(uint64_t))type metadata accessor for FMLocationSubscription);
}

uint64_t sub_10043AC88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_10043ACD0(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    int64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = &v14[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = type metadata accessor for FMFindingTechnology();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      int64_t v8 = *a2;
      int64_t v9 = a2[1];
      *(void *)a1 = *a2;
      *((void *)a1 + 1) = v9;
      unint64_t v10 = a2[2];
      *((void *)a1 + 2) = v10;
      unint64_t v11 = v8;
      int64_t v12 = v9;
      unint64_t v13 = v10;
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_10043AE00(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v4 = type metadata accessor for FMFindingTechnology();
    int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    v5(a1, v4);
  }
  else if (!EnumCaseMultiPayload)
  {

    uint64_t v3 = *(void **)(a1 + 16);
  }
}

void **sub_10043AEB0(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v13 = type metadata accessor for FMFindingTechnology();
    (*(void (**)(void **, void **, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = *a2;
    int64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    int64_t v9 = a2[2];
    a1[2] = v9;
    id v10 = v7;
    id v11 = v8;
    id v12 = v9;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void **sub_10043AF9C(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000C8200((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v13 = type metadata accessor for FMFindingTechnology();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = *a2;
      *a1 = *a2;
      int64_t v8 = a2[1];
      a1[1] = v8;
      int64_t v9 = a2[2];
      a1[2] = v9;
      id v10 = v7;
      id v11 = v8;
      id v12 = v9;
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t type metadata accessor for FMPlatterIcon()
{
  uint64_t result = qword_1006BE9D0;
  if (!qword_1006BE9D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_10043B0EC(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for FMFindingTechnology();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_10043B1A4(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000C8200((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for FMFindingTechnology();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10043B26C()
{
  uint64_t result = type metadata accessor for FMFindingTechnology();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_10043B308()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMFindingTechnology();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  int64_t v8 = (char *)&v20 - v7;
  uint64_t v9 = type metadata accessor for FMPlatterIcon();
  __chkstk_darwin(v9);
  id v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C813C(v1, (uint64_t)v11);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t result = 0xD000000000000028;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v11, v2);
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
      int v14 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
      if (v14 == enum case for FMFindingTechnology.proximity(_:))
      {
        (*(void (**)(char *, uint64_t))(v3 + 96))(v6, v2);
        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
        uint64_t v15 = type metadata accessor for FMFindingType();
        (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v6, v15);
        unint64_t result = 0xD00000000000001CLL;
      }
      else
      {
        if (v14 != enum case for FMFindingTechnology.precision(_:))
        {
          _diagnoseUnexpectedEnumCase<A>(type:)();
          __break(1u);
          JUMPOUT(0x10043B850);
        }
        (*(void (**)(char *, uint64_t))(v3 + 96))(v6, v2);
        uint64_t v18 = &v6[*(int *)(sub_10005D034(&qword_1006B27B8) + 48)];
        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
        uint64_t v19 = type metadata accessor for FMFindingType();
        (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
        unint64_t result = 0xD000000000000014;
      }
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      if (*v11 != 1) {
        unint64_t result = 0xD000000000000011;
      }
      break;
    case 3:
      return result;
    case 4:
    case 5:
    case 6:
    case 13:
    case 23:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0x656C637269632E6CLL;
      break;
    case 8:
      unint64_t result = 0x656C637269632E72;
      break;
    case 9:
    case 20:
    case 24:
      unint64_t result = 0xD000000000000016;
      break;
    case 10:
      unint64_t result = 0xD000000000000012;
      break;
    case 11:
      unint64_t result = 0xD000000000000011;
      break;
    case 12:
      unint64_t result = 0xD000000000000018;
      break;
    case 14:
      unint64_t result = 0x637269632E676174;
      break;
    case 15:
      unint64_t result = 0xD000000000000014;
      break;
    case 16:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 17:
      unint64_t result = 0xD000000000000011;
      break;
    case 18:
    case 19:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 21:
      unint64_t result = 0xD000000000000014;
      break;
    case 22:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 25:
    case 26:
    case 27:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 28:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 29:
      unint64_t result = 0xD000000000000014;
      break;
    case 30:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 31:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      unint64_t v16 = (void *)*((void *)v11 + 1);
      uint64_t v17 = (void *)*((void *)v11 + 2);

      unint64_t result = 0;
      break;
  }
  return result;
}

uint64_t sub_10043B8E0(uint64_t a1)
{
  return sub_10043B944(a1, (SEL *)&selRef_systemIndigoColor, &qword_1006BE938);
}

uint64_t sub_10043B8F4(uint64_t a1)
{
  return sub_10043B944(a1, (SEL *)&selRef_systemBlueColor, &qword_1006BE940);
}

uint64_t sub_10043B908(uint64_t a1)
{
  return sub_10043B944(a1, (SEL *)&selRef_systemOrangeColor, &qword_1006BE948);
}

uint64_t sub_10043B91C(uint64_t a1)
{
  return sub_10043B944(a1, (SEL *)&selRef_systemPinkColor, &qword_1006BE950);
}

uint64_t sub_10043B930(uint64_t a1)
{
  return sub_10043B944(a1, (SEL *)&selRef_systemRedColor, &qword_1006BE958);
}

uint64_t sub_10043B944(uint64_t a1, SEL *a2, uint64_t *a3)
{
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10055C1E0;
  uint64_t v6 = self;
  *(void *)(v5 + 32) = [v6 whiteColor];
  *(void *)(v5 + 40) = [v6 *a2];
  uint64_t result = specialized Array._endMutation()();
  *a3 = v5;
  return result;
}

uint64_t sub_10043B9F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMFindingTechnology();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  int64_t v8 = (char *)&v31 - v7;
  uint64_t v9 = type metadata accessor for FMPlatterIcon();
  __chkstk_darwin(v9);
  id v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C813C(v1, (uint64_t)v11);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v11, v2);
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
      int v18 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
      if (v18 == enum case for FMFindingTechnology.proximity(_:))
      {
        (*(void (**)(char *, uint64_t))(v3 + 96))(v6, v2);
        sub_10005D034(&qword_1006AF2D0);
        uint64_t v19 = swift_allocObject();
        *(_OWORD *)(v19 + 16) = xmmword_10055C1E0;
        uint64_t v20 = self;
        *(void *)(v19 + 32) = [v20 whiteColor];
        id v21 = [v20 systemBlueColor];
      }
      else
      {
        if (v18 != enum case for FMFindingTechnology.precision(_:))
        {
          _diagnoseUnexpectedEnumCase<A>(type:)();
          __break(1u);
          JUMPOUT(0x10043C3D0);
        }
        (*(void (**)(char *, uint64_t))(v3 + 96))(v6, v2);
        v6 += *(int *)(sub_10005D034(&qword_1006B27B8) + 48);
        sub_10005D034(&qword_1006AF2D0);
        uint64_t v19 = swift_allocObject();
        *(_OWORD *)(v19 + 16) = xmmword_10055C1E0;
        char v29 = self;
        *(void *)(v19 + 32) = [v29 whiteColor];
        id v21 = [v29 systemGreenColor];
      }
      *(void *)(v19 + 40) = v21;
      uint64_t v32 = (void *)v19;
      specialized Array._endMutation()();
      id v12 = v32;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      uint64_t v30 = type metadata accessor for FMFindingType();
      (*(void (**)(char *, uint64_t))(*(void *)(v30 - 8) + 8))(v6, v30);
      return (uint64_t)v12;
    case 2u:
      if (*v11 == 1) {
        goto LABEL_2;
      }
      if (qword_1006AE3B8 != -1) {
        swift_once();
      }
      id v12 = (void *)qword_1006BE958;
      goto LABEL_14;
    case 3u:
    case 0xFu:
    case 0x12u:
    case 0x13u:
      if (qword_1006AE3A0 != -1) {
        swift_once();
      }
      id v12 = (void *)qword_1006BE940;
      goto LABEL_14;
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 8u:
    case 0x10u:
LABEL_2:
      if (qword_1006AE398 != -1) {
        swift_once();
      }
      id v12 = (void *)qword_1006BE938;
      goto LABEL_14;
    case 9u:
    case 0xDu:
    case 0x14u:
    case 0x19u:
      if (qword_1006AE3B0 != -1) {
        swift_once();
      }
      id v12 = (void *)qword_1006BE950;
      goto LABEL_14;
    case 0xAu:
    case 0xBu:
    case 0x17u:
      sub_10005D034(&qword_1006AF2D0);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_10055C1E0;
      uint64_t v25 = self;
      *(void *)(v13 + 32) = [v25 whiteColor];
      id v15 = [v25 systemGreenColor];
      goto LABEL_29;
    case 0xCu:
    case 0x15u:
    case 0x1Bu:
      sub_10005D034(&qword_1006AF2D0);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_10055C1E0;
      uint64_t v26 = self;
      *(void *)(v13 + 32) = [v26 whiteColor];
      id v15 = [v26 systemOrangeColor];
      goto LABEL_29;
    case 0xEu:
      sub_10005D034(&qword_1006AF2D0);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_10055C1E0;
      unint64_t v23 = self;
      *(void *)(v13 + 32) = [v23 whiteColor];
      id v15 = [v23 systemYellowColor];
      goto LABEL_29;
    case 0x11u:
    case 0x1Du:
      if (qword_1006AE3A8 != -1) {
        swift_once();
      }
      id v12 = (void *)qword_1006BE948;
LABEL_14:
      swift_bridgeObjectRetain();
      return (uint64_t)v12;
    case 0x16u:
      sub_10005D034(&qword_1006AF2D0);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_10055C1E0;
      int v14 = self;
      *(void *)(v13 + 32) = [v14 whiteColor];
      id v15 = [v14 systemBlueColor];
      goto LABEL_29;
    case 0x18u:
      return sub_10043C66C();
    case 0x1Au:
    case 0x1Cu:
      sub_10005D034(&qword_1006AF2D0);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_10055C1E0;
      unint64_t v27 = self;
      *(void *)(v13 + 32) = [v27 whiteColor];
      id v15 = [v27 systemPinkColor];
      goto LABEL_29;
    case 0x1Eu:
      sub_10005D034(&qword_1006AF2D0);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_10055C1E0;
      unint64_t v24 = self;
      *(void *)(v13 + 32) = [v24 whiteColor];
      id v15 = [v24 systemBlackColor];
      goto LABEL_29;
    case 0x1Fu:
      sub_10005D034(&qword_1006AF2D0);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_10055C1E0;
      char v22 = self;
      *(void *)(v13 + 32) = [v22 whiteColor];
      id v15 = [v22 systemMintColor];
LABEL_29:
      *(void *)(v13 + 40) = v15;
      uint64_t v32 = (void *)v13;
      specialized Array._endMutation()();
      id v12 = v32;
      break;
    default:
      unint64_t v16 = *(void **)v11;
      uint64_t v17 = (void *)*((void *)v11 + 1);

      id v12 = _swiftEmptyArrayStorage;
      break;
  }
  return (uint64_t)v12;
}

unint64_t sub_10043C450(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0) {
    goto LABEL_39;
  }
  uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  unint64_t v18 = v1 & 0xFFFFFFFFFFFFFF8;
LABEL_4:
  if ((v2 & 0x4000000000000000) == 0)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    swift_bridgeObjectRelease();
    unint64_t v4 = (unint64_t)v3 >> 1;
    goto LABEL_6;
  }
  while (1)
  {
    swift_retain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v17 = v3 >= 0 ? v3 : v3 + 1;
    if (v3 < -1) {
      __break(1u);
    }
    unint64_t v4 = v17 >> 1;
LABEL_6:
    if ((unint64_t)(v3 + 1) < 3) {
      return v2;
    }
    unint64_t v5 = 0;
    while (1)
    {
      unint64_t v7 = v5 + 1;
      unint64_t v1 = v3 - (v5 + 1);
      if (__OFSUB__(v3, v5 + 1)) {
        break;
      }
      if (v5 != v1)
      {
        uint64_t v8 = v18;
        if ((v18 & 0xC000000000000001) != 0)
        {
          uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0) {
            goto LABEL_33;
          }
          unint64_t v9 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v5 >= v9) {
            goto LABEL_34;
          }
          id v10 = *(id *)(v18 + 8 * v5 + 32);
          if ((v1 & 0x8000000000000000) != 0) {
            goto LABEL_35;
          }
          if (v1 >= v9) {
            goto LABEL_37;
          }
          uint64_t v11 = (uint64_t)v10;
          id v12 = *(id *)(v18 + 32 + 8 * v1);
        }
        id v13 = v12;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v18 & 0x8000000000000000) != 0
          || (v18 & 0x4000000000000000) != 0)
        {
          uint64_t v8 = sub_100257FC0(v18);
          unint64_t v18 = v8;
        }
        uint64_t v14 = (v8 & 0xFFFFFFFFFFFFFF8) + 8 * v5;

        *(void *)(v14 + 32) = v13;
        specialized Array._endMutation()();
        uint64_t v15 = v18;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v18 & 0x8000000000000000) != 0
          || (v18 & 0x4000000000000000) != 0)
        {
          uint64_t v15 = sub_100257FC0(v18);
          unint64_t v18 = v15;
        }
        if ((v1 & 0x8000000000000000) != 0) {
          goto LABEL_36;
        }
        if (v1 >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_38;
        }
        uint64_t v6 = (v15 & 0xFFFFFFFFFFFFFF8) + 8 * v1;

        *(void *)(v6 + 32) = v11;
        specialized Array._endMutation()();
      }
      unint64_t v5 = v7;
      if (v4 == v7) {
        return v18;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    uint64_t v2 = (uint64_t)sub_1004AE8E4(v1);
    unint64_t v18 = v2;
    if ((v2 & 0x8000000000000000) == 0) {
      goto LABEL_4;
    }
  }
}

uint64_t sub_10043C66C()
{
  id v0 = [self mainScreen];
  id v1 = [v0 traitCollection];

  id v2 = [v1 userInterfaceStyle];
  uint64_t v3 = self;
  unint64_t v4 = &selRef_systemGray2Color;
  if (v2 != (id)2) {
    unint64_t v4 = &selRef_quaternaryLabelColor;
  }
  id v5 = [v3 *v4];
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10055C1E0;
  *(void *)(v6 + 32) = [self whiteColor];
  *(void *)(v6 + 40) = v5;
  specialized Array._endMutation()();
  return v6;
}

id sub_10043C780(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  id v5 = self;
  id v6 = [v5 configurationWithTextStyle:UIFontTextStyleTitle2 scale:3];
  sub_10043CB64();
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v8 = [v5 configurationWithPaletteColors:isa];

  id v9 = [v6 configurationByApplyingConfiguration:v8];
  if (a4)
  {
    NSString v10 = [v5 configurationWithWeight:7];
    id v11 = [v9 configurationByApplyingConfiguration:v10];
    swift_bridgeObjectRetain();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v13 = [self _systemImageNamed:v12 withConfiguration:v11];
  }
  else
  {
    swift_bridgeObjectRetain();
    NSString v12 = v9;
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v13 = [self _systemImageNamed:v10 withConfiguration:v12];
    id v9 = v8;
    id v11 = v12;
  }

  return v13;
}

id sub_10043C974(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for FMPlatterIcon();
  uint64_t v5 = __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v9 = (id *)((char *)&v23 - v8);
  sub_1000C813C(a1, (uint64_t)&v23 - v8);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1000C8200((uint64_t)v9);
    unint64_t v10 = sub_10043B308();
    uint64_t v12 = v11;
    if (a2)
    {
      if (a2 == 1)
      {
        unint64_t v13 = sub_10043B9F4();
        unint64_t v14 = sub_10043C450(v13);
      }
      else
      {
        unint64_t v14 = sub_10043C66C();
      }
    }
    else
    {
      unint64_t v14 = sub_10043B9F4();
    }
    uint64_t v18 = v14;
    sub_1000C813C(a1, (uint64_t)v7);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if ((EnumCaseMultiPayload - 2) >= 0x1E)
    {
      if (EnumCaseMultiPayload)
      {
        uint64_t v22 = type metadata accessor for FMFindingTechnology();
        (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v7, v22);
        char v20 = 1;
        goto LABEL_13;
      }
      sub_1000C8200((uint64_t)v7);
    }
    char v20 = 0;
LABEL_13:
    id v15 = sub_10043C780(v10, v12, v18, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v15;
  }
  id v15 = *v9;
  id v16 = v9[1];
  id v17 = v9[2];
  if (a2)
  {
    if (a2 == 1)
    {

      if (v16)
      {

        return v16;
      }
    }
    else
    {

      if (v17)
      {

        return v17;
      }
    }
  }
  else
  {
  }
  return v15;
}

unint64_t sub_10043CB64()
{
  unint64_t result = qword_1006B7C80;
  if (!qword_1006B7C80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1006B7C80);
  }
  return result;
}

id sub_10043CBA4(double a1, double a2)
{
  double v4 = a2 / 6.0;
  double v11 = a1 * 0.448;
  double v10 = a1 * 0.385;
  double v5 = a2 / 3.0;
  id v6 = [objc_allocWithZone((Class)UIBezierPath) init];
  [v6 moveToPoint:a1 + a1, a1];
  double v7 = a2 * 0.5;
  [v6 addCurveToPoint:v5 + a2 * 0.5 + a1 controlPoint1:a1 + a1 controlPoint2:a1 + a1];
  double v8 = a1 + a1 + a2;
  [v6 addCurveToPoint:a1 controlPoint1:v8 controlPoint2:v5 + a1 controlPoint2:a1 + a1 + v5];
  [v6 addCurveToPoint:a1 - (v7 + v5) controlPoint1:a1 + a1 controlPoint2:a1 - v4 v8 a1 - v5 a1 + a1 + v5];
  [v6 addCurveToPoint:0.0 controlPoint1:a1 controlPoint2:a1 + a1 - v5 0.0 a1 * 1.5];
  [v6 addCurveToPoint:a1 controlPoint1:0.0, 0.0 controlPoint2:v11, v11];
  [v6 addCurveToPoint:a1 + a1 controlPoint1:a1 controlPoint2:a1 + a1 - v11];
  [v6 closePath];
  return v6;
}

id sub_10043CD68(double a1, double a2, double a3)
{
  if (a3 == 0.0)
  {
    return sub_10043CBA4(a1, a2);
  }
  else
  {
    double v14 = a2 / 6.0;
    double v7 = a1 + a1;
    double v18 = a1 * 0.448;
    double v16 = a1 * 0.385;
    double v8 = a3 * 0.5;
    double v9 = a2 / 3.0;
    id v10 = [objc_allocWithZone((Class)UIBezierPath) init];
    [v10 moveToPoint:v7 + a3, a1];
    double v17 = a1 + a3;
    double v15 = v7 + a3;
    [v10 addCurveToPoint:controlPoint1:controlPoint2:];
    double v11 = v8 + a1;
    double v12 = a2 * 0.5;
    [v10 addLineToPoint:v9 + a2 * 0.5 + v8 + a1, a1 + a1];
    double v13 = v7 + a2;
    [v10 addCurveToPoint:v11 controlPoint1:v13 controlPoint2:v9 + v11, v7 + v9, v14 + v11, v13];
    [v10 addCurveToPoint:v11 - (v12 + v9) controlPoint1:a1 + a1 controlPoint2:v11 - v14 v13, v11 - v9, v7 + v9];
    [v10 addLineToPoint:a1, a1 + a1];
    [v10 addCurveToPoint:0.0 controlPoint1:a1 controlPoint2:v7 - v9 0.0 a1 * 1.5];
    [v10 addCurveToPoint:a1 controlPoint1:0.0, 0.0 controlPoint2:v18, v18, 0.0];
    [v10 addLineToPoint:v9 + v12 + v17];
    [v10 addCurveToPoint:v15 controlPoint1:a1 controlPoint2:v15 - v18];
    [v10 closePath];
    return v10;
  }
}

void *sub_10043CFE0(uint64_t a1)
{
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  double v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  double v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    v13[1] = v1;
    double v16 = _swiftEmptyArrayStorage;
    sub_10013E9DC(0, v6, 0);
    double v7 = v16;
    uint64_t v8 = *(void *)(type metadata accessor for FMIPBeaconShare() - 8);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v14 = *(void *)(v8 + 72);
    do
    {
      FMIPBeaconShare.identifier.getter();
      double v16 = v7;
      unint64_t v11 = v7[2];
      unint64_t v10 = v7[3];
      if (v11 >= v10 >> 1)
      {
        sub_10013E9DC(v10 > 1, v11 + 1, 1);
        double v7 = v16;
      }
      v7[2] = v11 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v11, v5, v15);
      v9 += v14;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_10043D1C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = *a1;
  int v3 = *a2;
  uint64_t result = 1;
  switch(v2)
  {
    case 1:
      uint64_t result = (0xCu >> (v3 & 0xF)) & 1;
      break;
    case 2:
      uint64_t result = v3 == 3;
      break;
    case 3:
      uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10043D22C(unsigned __int8 *a1, unsigned char *a2)
{
  int v2 = *a1;
  uint64_t result = 0;
  switch(*a2)
  {
    case 1:
      uint64_t result = (3u >> (v2 & 0xF)) & 1;
      break;
    case 2:
      uint64_t result = v2 != 3;
      break;
    case 3:
      uint64_t result = 1;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10043D294(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = *a1;
  int v3 = *a2;
  uint64_t result = 0;
  switch(v2)
  {
    case 1:
      uint64_t result = (3u >> (v3 & 0xF)) & 1;
      break;
    case 2:
      uint64_t result = v3 != 3;
      break;
    case 3:
      uint64_t result = 1;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10043D2FC(unsigned __int8 *a1, unsigned char *a2)
{
  int v2 = *a1;
  uint64_t result = 1;
  switch(*a2)
  {
    case 1:
      uint64_t result = (0xCu >> (v2 & 0xF)) & 1;
      break;
    case 2:
      uint64_t result = v2 == 3;
      break;
    case 3:
      uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10043D360(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2) {
    return sub_100249DA0(*((void *)a1 + 1), *((void *)a2 + 1));
  }
  else {
    return 0;
  }
}

BOOL sub_10043D384()
{
  uint64_t v1 = type metadata accessor for FMSelectedSection();
  __chkstk_darwin(v1);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator) + 56)
     + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_10044BF18(v4, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    uint64_t v5 = *((void *)v3 + 1);
    unint64_t v6 = *((void *)v3 + 2);
    swift_bridgeObjectRelease();
    if (v6 >= 4)
    {
      sub_100083358(v5, v6);
      return 0;
    }
    else
    {
      return (v6 & 0xF) == 0;
    }
  }
  else
  {
    sub_10044BF80((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    return 1;
  }
}

void sub_10043D4B8(char a1)
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_1000606BC(v3, (uint64_t)qword_1006D1E98);
  uint64_t v4 = v1;
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    double v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)double v7 = 136315138;
    v38[0] = v8;
    if (v4[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_updatesEnabled]) {
      uint64_t v9 = 1702195828;
    }
    else {
      uint64_t v9 = 0x65736C6166;
    }
    if (v4[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_updatesEnabled]) {
      unint64_t v10 = 0xE400000000000000;
    }
    else {
      unint64_t v10 = 0xE500000000000000;
    }
    sub_1000606F4(v9, v10, v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v5, v6, "FMItemsListDataSource: updatesEnabled: %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v11 = OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_updatesEnabled;
  if (v4[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_updatesEnabled] != 1)
  {
    uint64_t v26 = 0;
    uint64_t v27 = *(void *)&v4[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_deviceSubscription];
    if (!v27) {
      goto LABEL_22;
    }
    uint64_t v28 = *(void *)(*(void *)&v4[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator] + 24);
    swift_beginAccess();
    swift_retain();
    swift_retain();
    int64_t v29 = sub_10014040C((unint64_t *)(v28 + 16), v27);
    uint64_t v30 = v29;
    unint64_t v31 = *(void *)(v28 + 16);
    if (v31 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v32 >= v30) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v32 >= v29)
      {
LABEL_21:
        sub_100258678(v30, v32);
        swift_endAccess();
        swift_release();
        swift_release();
LABEL_22:
        uint64_t v33 = *(void *)&v4[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_locationSubscription];
        if (!v33) {
          return;
        }
        id v34 = *(char **)(*(void *)&v4[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator] + 40);
        Swift::String v35 = (uint64_t *)&v34[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions];
        swift_beginAccess();
        swift_retain();
        uint64_t v4 = v34;
        uint64_t v36 = sub_1003D7800(v35, v33);
        uint64_t v26 = v36;
        if (!((unint64_t)*v35 >> 62))
        {
          uint64_t v37 = *(void *)((*v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v37 >= v36)
          {
LABEL_25:
            sub_100258690(v26, v37);
            swift_endAccess();

            swift_release();
            return;
          }
LABEL_30:
          __break(1u);
          return;
        }
LABEL_29:
        swift_bridgeObjectRetain();
        uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v37 >= v26) {
          goto LABEL_25;
        }
        goto LABEL_30;
      }
    }
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v12 = *(void *)&v4[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator];
  uint64_t v13 = *(void *)(v12 + 24);
  type metadata accessor for FMDevicesSubscription();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber + 8) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v15 = v4;
  swift_retain();
  UUID.init()();
  *(void *)(v14 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber + 8) = &off_10063C360;
  swift_unknownObjectWeakAssign();

  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(v13 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v13 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  swift_release();
  *(void *)&v15[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_deviceSubscription] = v14;
  swift_release();
  double v16 = *(void **)(v12 + 40);
  type metadata accessor for FMLocationSubscription();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber + 8) = 0;
  swift_unknownObjectWeakInit();
  double v18 = v15;
  uint64_t v19 = v16;
  UUID.init()();
  *(void *)(v17 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber + 8) = &off_10063C330;
  swift_unknownObjectWeakAssign();

  char v20 = &v19[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions];
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v20 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();

  *(void *)&v18[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_locationSubscription] = v17;
  swift_release();
  char v21 = v4[v11] ^ a1;
  swift_retain();
  uint64_t v22 = FMIPManager.items.getter();
  swift_release();
  uint64_t v23 = *(void **)(*(void *)(v12 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  uint64_t v24 = *(void *)(*(void *)(v12 + 24) + 64);
  id v25 = v23;
  swift_bridgeObjectRetain();
  sub_10043FCE0(v22, v24, v23, v21 & 1);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
}

char *sub_10043DAE0(uint64_t a1, void *a2)
{
  uint64_t v36 = a2;
  uint64_t v37 = a1;
  uint64_t v35 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v3 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v7 - 8);
  *(void *)&v2[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_deviceSubscription] = 0;
  *(void *)&v2[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_locationSubscription] = 0;
  *(void *)&v2[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel] = _swiftEmptyArrayStorage;
  uint64_t v8 = OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_itemAger;
  type metadata accessor for FMItemAger();
  swift_allocObject();
  uint64_t v9 = v2;
  *(void *)&v2[v8] = sub_10004D3FC();
  uint64_t v34 = OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_updateQueue;
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  static DispatchQoS.utility.getter();
  Swift::String v39 = _swiftEmptyArrayStorage;
  sub_100045BA4((unint64_t *)&unk_1006AE490, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10005D034((uint64_t *)&unk_1006B6C50);
  sub_100045050((unint64_t *)&unk_1006AE4A0, (uint64_t *)&unk_1006B6C50);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v35);
  *(void *)&v9[v34] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v9[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_delayedUpdateWorkItem] = 0;
  v9[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_isRemovingCell] = 0;
  uint64_t v10 = OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_tableViewFooter;
  *(void *)&v9[v10] = [objc_allocWithZone((Class)type metadata accessor for FMListFooterActionsView()) init];
  uint64_t v11 = &v9[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource__listTitle];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0xE000000000000000;
  v9[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_updatesEnabled] = 0;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_1000606BC(v12, (uint64_t)qword_1006D1E98);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMItemsListDataSource: initialized", v15, 2u);
    swift_slowDealloc();
  }

  double v16 = v36;
  *(void *)&v9[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator] = v37;
  *(void *)&v9[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_tableView] = v16;
  swift_retain();
  id v17 = v16;

  double v18 = (objc_class *)type metadata accessor for FMItemsListDataSource();
  v38.receiver = v9;
  v38.super_class = v18;
  [super init];
  id v20 = v17;
  char v21 = (char *)v19;
  NSString v22 = String._bridgeToObjectiveC()();
  [v20 setAccessibilityIdentifier:v22];

  sub_10005D034(&qword_1006BEAB0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v24 = String._bridgeToObjectiveC()();
  [v20 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v24];

  sub_10005D034(&qword_1006BEAB8);
  uint64_t v25 = swift_getObjCClassFromMetadata();
  NSString v26 = String._bridgeToObjectiveC()();
  [v20 registerClass:v25 forCellReuseIdentifier:v26];

  *(void *)(*(void *)&v21[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_itemAger] + 24) = &off_10063C320;
  swift_unknownObjectWeakAssign();
  sub_100443468();
  sub_100440D2C();
  uint64_t v27 = *(void *)&v21[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator];
  swift_retain();
  uint64_t v28 = FMIPManager.items.getter();
  swift_release();
  int64_t v29 = *(void **)(*(void *)(v27 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  uint64_t v30 = *(void *)(*(void *)(v27 + 24) + 64);
  id v31 = v29;
  swift_bridgeObjectRetain();
  sub_10043FCE0(v28, v30, v29, 0);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  return v21;
}

unint64_t sub_10043E0C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for FMItemCellViewModel();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  objc_super v38 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IndexPath();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_1000606BC(v13, (uint64_t)qword_1006D1E98);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  os_log_type_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v36 = v2;
    id v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v34 = a1;
    uint64_t v40 = v18;
    uint64_t v37 = a2;
    *(_DWORD *)id v17 = 136315138;
    uint64_t v35 = v7;
    uint64_t v19 = IndexPath.debugDescription.getter();
    uint64_t v39 = sub_1000606F4(v19, v20, &v40);
    uint64_t v7 = v35;
    a2 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "FMItemsListDataSource: item for indexPath %s", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v3 = v36;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }

  unint64_t result = IndexPath.section.getter();
  uint64_t v22 = (uint64_t)v38;
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v23 = OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel;
  if (result >= *(void *)(*(void *)(v3 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel) + 16))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  unint64_t result = IndexPath.section.getter();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v24 = *(void *)(v3 + v23);
  if (result >= *(void *)(v24 + 16))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v25 = *(void *)(v24 + 16 * result + 40);
  swift_bridgeObjectRetain();
  unint64_t result = IndexPath.row.getter();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (result >= *(void *)(v25 + 16))
  {
LABEL_21:
    __break(1u);
    return result;
  }
  sub_10044BF18(v25+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * result, v22, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void *)(v22 + 16);
  uint64_t v27 = *(void *)(v22 + 24);
  swift_retain();
  uint64_t v28 = FMIPManager.items.getter();
  swift_bridgeObjectRetain();
  int64_t v29 = sub_100140C38(v28, v26, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = *((void *)v29 + 2);
  uint64_t v31 = type metadata accessor for FMIPItem();
  uint64_t v32 = *(void *)(v31 - 8);
  if (v30)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v31 - 8) + 16))(a2, &v29[(*(unsigned __int8 *)(*(void *)(v31 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v31 - 8) + 80)], v31);
    uint64_t v33 = 0;
  }
  else
  {
    uint64_t v33 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(a2, v33, 1, v31);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_10044BF80(v22, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
}

uint64_t sub_10043E58C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator);
  swift_retain();
  uint64_t v2 = FMIPManager.items.getter();
  swift_release();
  uint64_t v3 = *(void **)(*(void *)(v1 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  uint64_t v4 = *(void *)(*(void *)(v1 + 24) + 64);
  id v5 = v3;
  swift_bridgeObjectRetain();
  sub_10043FCE0(v2, v4, v3, 0);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10043E6B4(void *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FMItemCellViewModel();
  uint64_t v97 = *(void *)(v5 - 8);
  uint64_t v98 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v94 = v7;
  uint64_t v95 = (uint64_t)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v87 - v8;
  uint64_t v10 = (void *)type metadata accessor for IndexPath();
  uint64_t v11 = (void *)*(v10 - 1);
  uint64_t v12 = __chkstk_darwin(v10);
  long long v93 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = v13;
  __chkstk_darwin(v12);
  os_log_type_t v15 = (char *)&v87 - v14;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_1000606BC(v16, (uint64_t)qword_1006D1E98);
  id v17 = (void (*)(char *, uint64_t, void *))v11[2];
  uint64_t v100 = a2;
  long long v91 = (char *)(v11 + 2);
  long long v90 = v17;
  v17(v15, a2, v10);
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  id v20 = (id)v19;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v96 = v9;
    uint64_t v22 = (uint8_t *)v21;
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315138;
    unint64_t v2 = (unint64_t)(v22 + 12);
    uint64_t v89 = a1;
    uint64_t v23 = IndexPath.debugDescription.getter();
    void aBlock[6] = sub_1000606F4(v23, v24, aBlock);
    a1 = v89;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    ((void (*)(char *, void *))v11[1])(v15, v10);
    _os_log_impl((void *)&_mh_execute_header, v18, (os_log_type_t)v20, "FMItemsListDataSource: cellForRowAt %s", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v9 = v96;
    swift_slowDealloc();
  }
  else
  {
    ((void (*)(char *, void *))v11[1])(v15, v10);
  }

  unint64_t v25 = IndexPath.section.getter();
  uint64_t v26 = v99;
  if ((v25 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v27 = OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel;
  uint64_t v28 = *(void *)(v99 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel);
  if (v25 >= *(void *)(v28 + 16))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v29 = *(void *)(v28 + 16 * v25 + 40);
  swift_bridgeObjectRetain();
  unint64_t v30 = IndexPath.row.getter();
  if ((v30 & 0x8000000000000000) != 0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v30 >= *(void *)(v29 + 16))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  long long v88 = v11;
  uint64_t v89 = v10;
  unint64_t v2 = *(unsigned __int8 *)(v97 + 80);
  sub_10044BF18(v29 + ((v2 + 32) & ~v2) + *(void *)(v97 + 72) * v30, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
  swift_bridgeObjectRelease();
  uint64_t v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v20 = [a1 dequeueReusableCellWithIdentifier:v10 forIndexPath:isa];

  sub_10005D034(&qword_1006BEAB0);
  uint64_t v32 = swift_dynamicCastClass();
  if (!v32)
  {
LABEL_30:

    uint64_t v11 = [objc_allocWithZone((Class)UITableViewCell) init];
    uint64_t v86 = 0;
LABEL_31:
    sub_10044BF80((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
    sub_100036B90((uint64_t)v86);
    return (uint64_t)v11;
  }
  uint64_t v11 = (void *)v32;
  uint64_t v33 = IndexPath.row.getter();
  unint64_t v34 = IndexPath.section.getter();
  if ((v34 & 0x8000000000000000) != 0) {
    goto LABEL_36;
  }
  uint64_t v35 = *(void *)(v26 + v27);
  if (v34 >= *(void *)(v35 + 16))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (v33 >= *(void *)(*(void *)(v35 + 16 * v34 + 40) + 16)) {
    goto LABEL_30;
  }
  unint64_t v36 = IndexPath.section.getter();
  if ((v36 & 0x8000000000000000) != 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v37 = *(void *)(v26 + v27);
  if (v36 >= *(void *)(v37 + 16))
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v97 = *(void *)(v37 + 16);
  uint64_t v98 = ~v2;
  uint64_t v10 = *(void **)(*(void *)(v37 + 16 * v36 + 40) + 16);
  objc_super v38 = (unint64_t *)(*(void *)(v26 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_tableViewFooter)
                           + OBJC_IVAR____TtC6FindMy23FMListFooterActionsView_actions);
  swift_beginAccess();
  unint64_t v39 = *v38;
  uint64_t v96 = v9;
  if (!(v39 >> 62))
  {
    uint64_t v40 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_18;
  }
LABEL_40:
  swift_bridgeObjectRetain();
  uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_18:
  uint64_t v41 = qword_1006B6780;
  *((unsigned char *)v11 + qword_1006B6780) = v40 != 0;
  NSString v42 = self;
  id v43 = [v42 mainScreen];
  UIRoundToScreenScale();
  double v45 = v44;

  id v46 = [v11 containerView];
  [v46 bounds];
  double v48 = v47;

  uint64_t v49 = qword_1006B6770;
  uint64_t v50 = *(void **)((char *)v11 + qword_1006B6770);
  double v51 = sub_100538220();
  [v50 setFrame:v51, v48 - v45, sub_100538238(), v45];
  uint64_t v52 = v100;
  BOOL v53 = IndexPath.row.getter() == (void)v10 - 1;
  uint64_t v54 = qword_1006B6788;
  *((unsigned char *)v11 + qword_1006B6788) = v53;
  [v50 setHidden:];
  Swift::String v55 = v42;
  uint64_t v56 = v52;
  id v57 = [v55 mainScreen];
  UIRoundToScreenScale();
  double v59 = v58;

  id v60 = [v11 containerView];
  [v60 bounds];
  double v62 = v61;

  double v63 = sub_100538220();
  [v50 setFrame:v63, v62 - v59, sub_100538238(), v59];
  BOOL v64 = IndexPath.section.getter() == v97 - 1;
  *((unsigned char *)v11 + qword_1006B6798) = v64;
  unsigned int v65 = *((unsigned __int8 *)v11 + v54);
  if (v64) {
    unsigned int v66 = *((unsigned __int8 *)v11 + v54);
  }
  else {
    unsigned int v66 = 0;
  }
  if (v64) {
    unsigned int v65 = 0;
  }
  if (*((unsigned char *)v11 + v41)) {
    uint64_t v67 = v65;
  }
  else {
    uint64_t v67 = v66;
  }
  [*(id *)((char *)v11 + v49) setHidden:v67];
  uint64_t v68 = self;
  uint64_t v69 = v95;
  uint64_t v9 = v96;
  sub_10044BF18((uint64_t)v96, v95, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
  uint64_t v70 = (v2 + 24) & v98;
  uint64_t v71 = swift_allocObject();
  *(void *)(v71 + 16) = v11;
  sub_100194AF8(v69, v71 + v70);
  uint64_t v72 = swift_allocObject();
  *(void *)(v72 + 16) = sub_10044C7BC;
  *(void *)(v72 + 24) = v71;
  aBlock[4] = (uint64_t)sub_100024A90;
  aBlock[5] = v72;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100024A40;
  aBlock[3] = (uint64_t)&unk_10063C9A0;
  v73 = _Block_copy(aBlock);
  id v74 = v20;
  swift_retain();
  swift_release();
  [v68 performWithoutAnimation:v73];
  _Block_release(v73);
  LOBYTE(v73) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v73 & 1) == 0)
  {
    sub_10005D034(&qword_1006BEAB8);
    uint64_t v76 = swift_dynamicCastClass();
    if (v76)
    {
      Swift::String v77 = (void *)v76;
      uint64_t v78 = swift_allocObject();
      swift_unknownObjectUnownedInit();
      uint64_t v79 = v93;
      uint64_t v80 = v89;
      v90(v93, v56, v89);
      uint64_t v81 = v88;
      unint64_t v82 = (*((unsigned __int8 *)v88 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v88 + 80);
      uint64_t v83 = swift_allocObject();
      *(void *)(v83 + 16) = v78;
      ((void (*)(unint64_t, char *, void *))v81[4])(v83 + v82, v79, v80);
      char v84 = (void *)((char *)v77 + *(void *)((swift_isaMask & *v77) + 0x188));
      uint64_t v85 = *v84;
      *char v84 = (uint64_t)sub_10044C96C;
      v84[1] = v83;
      sub_100036B90(v85);
    }
    uint64_t v86 = sub_10044C7BC;
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

void sub_10043F12C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  unint64_t v36 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10005D034(&qword_1006B4580);
  __chkstk_darwin(v10 - 8);
  uint64_t v35 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FMItemCellViewModel();
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_1000606BC(v15, (uint64_t)qword_1006D1E98);
  sub_10044BF18(a2, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v34 = v8;
    uint64_t v19 = v18;
    uint64_t v31 = swift_slowAlloc();
    uint64_t v38 = v31;
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v32 = a4;
    uint64_t v33 = v9;
    char v20 = a1;
    uint64_t v21 = *((void *)v14 + 13);
    unint64_t v22 = *((void *)v14 + 14);
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_1000606F4(v21, v22, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a1 = v20;
    swift_bridgeObjectRelease();
    sub_10044BF80((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
    *(_WORD *)(v19 + 12) = 1024;
    LODWORD(v37) = v20 & 1;
    a4 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "FMItemsListDataSource: accept action for %s: %{BOOL}d", (uint8_t *)v19, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v8 = v34;
    swift_slowDealloc();
  }
  else
  {
    sub_10044BF80((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
  }

  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  if (a1)
  {
    uint64_t v24 = type metadata accessor for TaskPriority();
    uint64_t v25 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v35, 1, 1, v24);
    uint64_t v26 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v36, a4, v7);
    type metadata accessor for MainActor();
    id v27 = Strong;
    uint64_t v28 = static MainActor.shared.getter();
    unint64_t v29 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    unint64_t v30 = (char *)swift_allocObject();
    *((void *)v30 + 2) = v28;
    *((void *)v30 + 3) = &protocol witness table for MainActor;
    *((void *)v30 + 4) = v27;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v30[v29], v26, v7);
    sub_10016CC14(v25, (uint64_t)&unk_1006BEB40, (uint64_t)v30);
    swift_release();
  }
  else
  {
    sub_100445D20();
  }
}

uint64_t sub_10043F73C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator);
  swift_retain();
  uint64_t v2 = FMIPManager.items.getter();
  swift_release();
  uint64_t v3 = *(void **)(*(void *)(v1 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  uint64_t v4 = *(void *)(*(void *)(v1 + 24) + 64);
  id v5 = v3;
  swift_bridgeObjectRetain();
  sub_10043FCE0(v2, v4, v3, 1);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10043F7FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWallTime();
  uint64_t v17 = *(void *)(v2 - 8);
  uint64_t v18 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  id v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v16 = (char *)&v16 - v6;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  __chkstk_darwin(v7);
  uint64_t v8 = OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_delayedUpdateWorkItem;
  if (*(void *)(a1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_delayedUpdateWorkItem))
  {
    swift_retain();
    dispatch thunk of DispatchWorkItem.cancel()();
    swift_release();
  }
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_10044AFE8;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10063C4C8;
  _Block_copy(aBlock);
  uint64_t v19 = _swiftEmptyArrayStorage;
  sub_100045BA4((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  swift_retain();
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for DispatchWorkItem();
  swift_allocObject();
  uint64_t v10 = DispatchWorkItem.init(flags:block:)();
  swift_release();
  swift_release();
  *(void *)(a1 + v8) = v10;
  swift_retain();
  swift_release();
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v11 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchWallTime.now()();
  uint64_t v12 = v16;
  + infix(_:_:)();
  uint64_t v13 = v18;
  uint64_t v14 = *(void (**)(char *, uint64_t))(v17 + 8);
  v14(v5, v18);
  OS_dispatch_queue.asyncAfter(wallDeadline:execute:)();

  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v14)(v12, v13);
}

void sub_10043FB3C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void *)(Strong + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator);
    swift_retain();
    uint64_t v3 = FMIPManager.items.getter();
    swift_release();
    uint64_t v4 = *(void **)(*(void *)(v2 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
    uint64_t v5 = *(void *)(*(void *)(v2 + 24) + 64);
    id v6 = v4;
    swift_bridgeObjectRetain();
    sub_10043FCE0(v3, v5, v4, 0);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10043FC20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator);
  swift_retain();
  uint64_t v2 = FMIPManager.items.getter();
  swift_release();
  uint64_t v3 = *(void **)(*(void *)(v1 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  uint64_t v4 = *(void *)(*(void *)(v1 + 24) + 64);
  id v5 = v3;
  swift_bridgeObjectRetain();
  sub_10043FCE0(v2, v4, v3, 0);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void sub_10043FCE0(uint64_t a1, uint64_t a2, void *a3, int a4)
{
  id v5 = v4;
  LODWORD(v54) = a4;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v49 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for DispatchQoS();
  uint64_t v51 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v50 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = sub_1000606BC(v13, (uint64_t)qword_1006D1E98);
  id v15 = a3;
  swift_bridgeObjectRetain();
  uint64_t v16 = a3;
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v52 = a1;
  BOOL v53 = v16;
  if (v19)
  {
    uint64_t v20 = swift_slowAlloc();
    id v46 = v5;
    uint64_t v21 = v20;
    uint64_t v22 = swift_slowAlloc();
    double v47 = v11;
    v45[1] = v14;
    *(_DWORD *)uint64_t v21 = 134218498;
    Swift::String v55 = *(void **)(a1 + 16);
    aBlock[0] = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    Swift::String v55 = v16;
    sub_10005D034(&qword_1006BEB38);
    uint64_t v23 = Optional.debugDescription.getter();
    Swift::String v55 = (void *)sub_1000606F4(v23, v24, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v21 + 22) = 1024;
    LODWORD(v55) = v54 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "FMItemsListDataSource: update items %ld, location: %s, forceUpdate: %{BOOL}d", (uint8_t *)v21, 0x1Cu);
    swift_arrayDestroy();
    uint64_t v11 = v47;
    swift_slowDealloc();
    id v5 = v46;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_retain();
  char v25 = FMIPManager.isInitialized.getter();
  swift_release();
  if ((v25 & 1) == 0)
  {
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      unint64_t v29 = "FMItemsListDataSource: devicesProvider is not initialized, hiding items";
      goto LABEL_13;
    }
LABEL_14:

    return;
  }
  if (v5[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_updatesEnabled] != 1) {
    return;
  }
  if ([*(id *)&v5[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_tableView] isEditing])
  {
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      unint64_t v29 = "FMItemsListDataSource: Ignoring data source update due to editing mode";
LABEL_13:
      _os_log_impl((void *)&_mh_execute_header, v26, v27, v29, v28, 2u);
      swift_slowDealloc();
      goto LABEL_14;
    }
    goto LABEL_14;
  }
  unint64_t v30 = v15;
  uint64_t v31 = *(void *)&v5[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel];
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v52;
  uint64_t v34 = v53;
  *(void *)(v32 + 16) = v5;
  *(void *)(v32 + 24) = v33;
  *(void *)(v32 + 32) = a2;
  *(void *)(v32 + 40) = v34;
  *(void *)(v32 + 48) = v31;
  char v35 = v54;
  char v36 = v54 & 1;
  *(unsigned char *)(v32 + 56) = v54 & 1;
  uint64_t v37 = v33;
  if (*(void *)(v33 + 16) < 0xBuLL || (v35 & 1) != 0)
  {
    swift_bridgeObjectRetain_n();
    id v43 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    double v44 = v5;
    sub_1004403B0(v44, v37, a2, v53, v31, v36);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v54 = *(void *)&v5[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_updateQueue];
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = sub_10044C4F0;
    *(void *)(v38 + 24) = v32;
    aBlock[4] = (uint64_t)sub_100024A68;
    aBlock[5] = v38;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10003C410;
    aBlock[3] = (uint64_t)&unk_10063C8B0;
    unint64_t v39 = _Block_copy(aBlock);
    swift_retain_n();
    id v40 = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v41 = v5;
    NSString v42 = v50;
    static DispatchQoS.unspecified.getter();
    Swift::String v55 = _swiftEmptyArrayStorage;
    sub_100045BA4((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10005D034((uint64_t *)&unk_1006AE4B0);
    sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v39);
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v11, v9);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v42, v48);
    swift_release();
  }
}

uint64_t sub_1004403B0(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, char a6)
{
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v40 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchQoS();
  uint64_t v38 = *(void *)(v15 - 8);
  uint64_t v39 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v18 = sub_1004411B4(a2, a3, a4);
  BOOL v19 = _swiftEmptyArrayStorage;
  aBlock[0] = _swiftEmptyArrayStorage;
  uint64_t v20 = *((void *)v18 + 2);
  if (v20)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = 40;
    do
    {
      uint64_t v22 = swift_bridgeObjectRetain();
      sub_1004A2050(v22);
      v21 += 16;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    BOOL v19 = (void *)aBlock[0];
  }
  swift_retain();
  uint64_t v23 = sub_100537690((uint64_t)v19);
  swift_bridgeObjectRelease();
  sub_10005E24C((uint64_t)v23);
  swift_bridgeObjectRelease();
  swift_release();
  if (sub_10024A760((uint64_t)v18, a5) & 1) == 0 || (a6)
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_1000606BC(v25, (uint64_t)qword_1006D1E98);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 134218240;
      aBlock[0] = *((void *)v18 + 2);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2048;
      aBlock[0] = *(void *)(a5 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "FMItemsListDataSource: reloading table view new: %ld, old: %ld", (uint8_t *)v28, 0x16u);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v18;
    *(void *)(v29 + 24) = a1;
    unint64_t v30 = self;
    swift_bridgeObjectRetain();
    id v31 = a1;
    id v32 = [v30 currentThread];
    unsigned int v33 = [v32 isMainThread];

    if (v33)
    {
      sub_100440970((uint64_t)v18, (uint64_t)v31);
      swift_bridgeObjectRelease();
      sub_100443468();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
      uint64_t v34 = (void *)static OS_dispatch_queue.main.getter();
      char v35 = (void *)swift_allocObject();
      v35[2] = sub_10044C544;
      v35[3] = v29;
      v35[4] = v31;
      aBlock[4] = sub_10044C58C;
      aBlock[5] = v35;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10003C410;
      aBlock[3] = &unk_10063C928;
      char v36 = _Block_copy(aBlock);
      id v37 = v31;
      swift_retain();
      static DispatchQoS.unspecified.getter();
      uint64_t v41 = _swiftEmptyArrayStorage;
      sub_100045BA4((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10005D034((uint64_t *)&unk_1006AE4B0);
      sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v36);

      swift_release();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v14, v12);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v17, v39);
    }
    return swift_release();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

void sub_100440970(uint64_t a1, uint64_t a2)
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000606BC(v4, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain_n();
  id v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v8 = Array.debugDescription.getter();
    sub_1000606F4(v8, v9, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "FMItemsListDataSource: model update with %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  *(void *)(a2 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10003A158();
  uint64_t v10 = a2 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v11 = *(void *)(v10 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v11 + 8))(a2, &off_10063C280, ObjectType, v11);
    swift_unknownObjectRelease();
  }
  sub_100440BB4();
}

void sub_100440BB4()
{
  uint64_t v1 = type metadata accessor for FMSelectedSection();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(*(void *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel) + 16)) {
    goto LABEL_4;
  }
  uint64_t v4 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator) + 56)
     + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_10044BF18(v4, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    uint64_t v5 = *((void *)v3 + 1);
    unint64_t v6 = *((void *)v3 + 2);
    swift_bridgeObjectRelease();
    sub_100083358(v5, v6);
LABEL_4:
    [*(id *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_tableView) setTableFooterView:0];
    return;
  }
  sub_10044BF80((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  [*(id *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_tableView) setTableFooterView:*(void *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_tableViewFooter)];
  sub_100039FE4();
}

uint64_t sub_100440D2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMSelectedSection();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000606BC(v5, (uint64_t)qword_1006D1E98);
  unint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMItemsListDataSource: updateListTitle", v8, 2u);
    swift_slowDealloc();
  }

  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator);
  if ((*(unsigned char *)(*(void *)(v9 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_limitedPrecision) & 1) == 0)
  {
    uint64_t v10 = *(void *)(v9 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess();
    sub_10044BF18(v10, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      uint64_t v11 = *((void *)v4 + 1);
      unint64_t v12 = *((void *)v4 + 2);
      uint64_t result = swift_bridgeObjectRelease();
      switch(v12)
      {
        case 0uLL:
          goto LABEL_9;
        case 1uLL:
          id v14 = [self mainBundle];
          unint64_t v17 = 0xD000000000000012;
          unint64_t v15 = 0xD000000000000018;
          unint64_t v27 = 0x800000010057EF80;
          unint64_t v18 = 0x800000010059DBA0;
          unint64_t v16 = 0x800000010057EF60;
          goto LABEL_10;
        case 2uLL:
          id v14 = [self mainBundle];
          unint64_t v15 = 0xD000000000000018;
          unint64_t v27 = 0x800000010057EF80;
          unint64_t v18 = 0x800000010059DB80;
          unint64_t v16 = 0x800000010057EF60;
          unint64_t v17 = 0xD000000000000013;
          goto LABEL_10;
        case 3uLL:
          return result;
        default:
          id v22 = [self mainBundle];
          v29._countAndFlagsBits = 0xD000000000000018;
          v29._object = (void *)0x800000010057EF80;
          v23.value._object = (void *)0x800000010057EF60;
          v24._countAndFlagsBits = 0x41545F534D455449;
          v24._object = (void *)0xEE00454D4F485F42;
          v23.value._countAndFlagsBits = 0xD000000000000013;
          v25._countAndFlagsBits = 0;
          v25._object = (void *)0xE000000000000000;
          Swift::String v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, v23, (NSBundle)v22, v25, v29);

          *(Swift::String *)(v1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource__listTitle) = v26;
          swift_bridgeObjectRelease();
          uint64_t result = sub_100083358(v11, v12);
          break;
      }
      return result;
    }
    sub_10044BF80((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  }
LABEL_9:
  id v14 = [self mainBundle];
  unint64_t v15 = 0xD000000000000018;
  unint64_t v27 = 0x800000010057EF80;
  unint64_t v16 = 0x800000010057EF60;
  unint64_t v17 = 0x41545F534D455449;
  unint64_t v18 = 0xE900000000000042;
LABEL_10:
  unint64_t v19 = 0xD000000000000013;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  Swift::String v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v17, *(Swift::String_optional *)(&v16 - 1), (NSBundle)v14, v20, *(Swift::String *)&v15);

  *(Swift::String *)(v1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource__listTitle) = v21;
  return swift_bridgeObjectRelease();
}

char *sub_1004411B4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v101 = a2;
  uint64_t v99 = type metadata accessor for FMIPItemState();
  v110 = *(void (***)(char *, char *, uint64_t))(v99 - 8);
  uint64_t v6 = __chkstk_darwin(v99);
  uint64_t v98 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v97 = (char *)&v83 - v8;
  uint64_t v9 = sub_10005D034((uint64_t *)&unk_1006BEB20);
  __chkstk_darwin(v9 - 8);
  uint64_t v96 = (uint64_t)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  __chkstk_darwin(v11 - 8);
  uint64_t v95 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for FMIPSafeLocationType();
  uint64_t v13 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  v102 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for FMSelectedSection();
  uint64_t v15 = __chkstk_darwin(v104);
  uint64_t v94 = (void **)((char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  unint64_t v18 = (char *)&v83 - v17;
  uint64_t v19 = type metadata accessor for FMIPItem();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  v111 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  Swift::String v24 = (char *)&v83 - v23;
  v116 = (char *)_swiftEmptyArrayStorage;
  uint64_t v25 = *(void *)(a1 + 16);
  uint64_t v106 = OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator;
  swift_bridgeObjectRetain();
  v107 = v3;
  uint64_t v100 = v3;
  if (!v25)
  {
    unsigned int v33 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_41;
  }
  uint64_t v87 = a3;
  uint64_t v26 = v20;
  uint64_t v27 = 0;
  uint64_t v85 = v26;
  unint64_t v28 = v26 + 16;
  Swift::String v29 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  unint64_t v30 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v31 = *(void *)(v28 + 56);
  v113 = v29;
  uint64_t v114 = v31;
  uint64_t v86 = a1;
  unint64_t v105 = v30;
  uint64_t v112 = a1 + v30;
  long long v91 = (void (**)(char *, uint64_t))(v110 + 1);
  unsigned int v90 = enum case for FMIPSafeLocationType.home(_:);
  uint64_t v89 = (void (**)(char *, void, uint64_t))(v13 + 104);
  long long v88 = (void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v109 = v25;
  v110 = (void (**)(char *, char *, uint64_t))(v28 + 16);
  id v32 = (void (**)(char *, uint64_t))(v28 - 8);
  unint64_t v108 = v28;
  v29(v24, v112, v19);
  while (1)
  {
    FMIPItem.groupIdentifier.getter();
    uint64_t v35 = v34;
    swift_bridgeObjectRelease();
    if (v35) {
      goto LABEL_5;
    }
    uint64_t v36 = *(void *)&v107[v106];
    uint64_t v37 = *(void *)(v36 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess();
    sub_10044BF18(v37, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      uint64_t v38 = *((void *)v18 + 1);
      swift_bridgeObjectRelease();
      unint64_t v39 = v108;
      uint64_t v25 = v109;
      switch(v108)
      {
        case 0uLL:
          goto LABEL_14;
        case 1uLL:
          uint64_t v40 = v97;
          FMIPItem.state.getter();
          uint64_t v41 = v98;
          static FMIPItemState.isBTConnected.getter();
          sub_100045BA4((unint64_t *)&qword_1006BEB30, (void (*)(uint64_t))&type metadata accessor for FMIPItemState);
          uint64_t v42 = v99;
          LODWORD(v93) = dispatch thunk of SetAlgebra.isSuperset(of:)();
          id v43 = *v91;
          double v44 = v41;
          uint64_t v25 = v109;
          (*v91)(v44, v42);
          v43(v40, v42);
          if (v93) {
            goto LABEL_14;
          }
          break;
        case 2uLL:
          uint64_t v49 = *(void *)(v36 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
          swift_beginAccess();
          uint64_t v50 = v49;
          uint64_t v51 = v94;
          sub_10044BF18(v50, (uint64_t)v94, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
          if (swift_getEnumCaseMultiPayload() != 5)
          {
            sub_10044BF80((uint64_t)v51, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
            break;
          }
          uint64_t v52 = (void *)*v51;
          sub_100083358(v51[1], v51[2]);
          uint64_t v53 = FMIPItem.identifier.getter();
          Swift::String v55 = v52;
          uint64_t v56 = v54;
          uint64_t v93 = v55[2];
          if (!v93) {
            goto LABEL_28;
          }
          if (v55[4] == v53 && v55[5] == v54) {
            goto LABEL_24;
          }
          uint64_t v92 = v53;
          if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
            goto LABEL_24;
          }
          if (v93 == 1)
          {
LABEL_28:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v84 = v56;
            double v61 = v55 + 7;
            uint64_t v62 = 1;
            uint64_t v83 = v55;
            do
            {
              uint64_t v63 = v62 + 1;
              if (__OFADD__(v62, 1))
              {
                __break(1u);
                swift_release();
                swift_bridgeObjectRelease();
                __break(1u);
                swift_release();
                __break(1u);
                JUMPOUT(0x100441D68);
              }
              BOOL v64 = *(v61 - 1) == v92 && *v61 == v84;
              if (v64 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
LABEL_24:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_14;
              }
              v61 += 2;
              ++v62;
            }
            while (v63 != v93);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v25 = v109;
          }
          break;
        case 3uLL:
          break;
        default:
          uint64_t v92 = *(void *)(v36 + 24);
          uint64_t v57 = (uint64_t)v102;
          (*v89)(v102, v90, v103);
          swift_retain();
          uint64_t v58 = (uint64_t)v95;
          uint64_t v93 = v38;
          FMIPItem.location.getter();
          uint64_t v59 = v96;
          sub_1000D95CC(v57, v58, v96);
          uint64_t v60 = type metadata accessor for FMIPSafeLocation();
          LODWORD(v57) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 48))(v59, 1, v60);
          sub_100003F10(v59, (uint64_t *)&unk_1006BEB20);
          swift_release();
          sub_100083358(v93, v39);
          sub_100003F10(v58, (uint64_t *)&unk_1006B2AE0);
          (*v88)(v102, v103);
          uint64_t v25 = v109;
          if (v57 != 1) {
            goto LABEL_14;
          }
          break;
      }
LABEL_5:
      (*v32)(v24, v19);
      goto LABEL_6;
    }
    sub_10044BF80((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
LABEL_14:
    double v45 = *v110;
    (*v110)(v111, v24, v19);
    id v46 = v116;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10013E62C(0, *((void *)v46 + 2) + 1, 1);
      id v46 = v116;
    }
    unint64_t v48 = *((void *)v46 + 2);
    unint64_t v47 = *((void *)v46 + 3);
    if (v48 >= v47 >> 1)
    {
      sub_10013E62C(v47 > 1, v48 + 1, 1);
      id v46 = v116;
    }
    *((void *)v46 + 2) = v48 + 1;
    v45(&v46[v105 + v48 * v114], v111, v19);
    v116 = v46;
    uint64_t v25 = v109;
LABEL_6:
    if (++v27 == v25) {
      break;
    }
    v113(v24, v112 + v114 * v27, v19);
  }
  unsigned int v33 = v116;
  a3 = v87;
  uint64_t v20 = v85;
LABEL_41:
  uint64_t v65 = (uint64_t)v100;

  swift_bridgeObjectRelease();
  v116 = (char *)_swiftEmptyArrayStorage;
  uint64_t v66 = *((void *)v33 + 2);
  uint64_t v67 = v101;
  if (v66)
  {
    unint64_t v68 = (unint64_t)&v33[(*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80)];
    uint64_t v69 = *(void *)(v20 + 72);
    swift_retain();
    do
    {
      sub_100441D78(v68, v65, v67, a3, &v115);
      sub_1004A2050(v115);
      v68 += v69;
      --v66;
    }
    while (v66);
    swift_release_n();
    uint64_t v70 = v116;
  }
  else
  {
    swift_release();
    uint64_t v70 = (char *)_swiftEmptyArrayStorage;
  }
  v116 = v70;
  swift_bridgeObjectRetain();
  sub_100447734((void **)&v116);
  swift_bridgeObjectRelease();
  sub_1001A99DC((uint64_t)v116);
  swift_release();
  uint64_t v71 = swift_bridgeObjectRetain();
  uint64_t v72 = (char *)sub_1004AEAC4(v71);
  swift_bridgeObjectRelease();
  v116 = v72;
  sub_1004476C8((void **)&v116);
  swift_bridgeObjectRelease();
  v73 = v116;
  int64_t v74 = *((void *)v116 + 2);
  if (v74)
  {
    v116 = (char *)_swiftEmptyArrayStorage;
    sub_10013E7B4(0, v74, 0);
    Swift::String v75 = v116;
    uint64_t v76 = v73 + 40;
    do
    {
      char v77 = *((unsigned char *)v76 - 8);
      uint64_t v78 = *v76;
      v116 = v75;
      unint64_t v79 = *((void *)v75 + 2);
      unint64_t v80 = *((void *)v75 + 3);
      swift_bridgeObjectRetain();
      if (v79 >= v80 >> 1)
      {
        sub_10013E7B4(v80 > 1, v79 + 1, 1);
        Swift::String v75 = v116;
      }
      *((void *)v75 + 2) = v79 + 1;
      uint64_t v81 = &v75[16 * v79];
      v81[32] = v77;
      *((void *)v81 + 5) = v78;
      v76 += 2;
      --v74;
    }
    while (v74);
    swift_release();
  }
  else
  {
    swift_release();
    return (char *)_swiftEmptyArrayStorage;
  }
  return v75;
}

void sub_100441D78(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v108 = a3;
  id v106 = a4;
  v107 = a5;
  uint64_t v7 = sub_10005D034((uint64_t *)&unk_1006BB990);
  __chkstk_darwin(v7 - 8);
  uint64_t v103 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = type metadata accessor for FMIPItem();
  uint64_t v100 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  v102 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = type metadata accessor for FMIPBeaconShare();
  uint64_t v120 = *(void *)(v117 - 8);
  uint64_t v10 = __chkstk_darwin(v117);
  v119 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v115 = (char *)&v99 - v12;
  v118 = (void (**)(void *, char *, uint64_t))type metadata accessor for FMIPItemImageCacheRequest();
  uint64_t v116 = (uint64_t)*(v118 - 1);
  __chkstk_darwin((void (**)(char *, char *, uint64_t))v118);
  uint64_t v114 = (uint64_t)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FMIPItemImageSize();
  unint64_t v112 = *(void *)(v14 - 8);
  v113 = (void (**)(void, void))v14;
  __chkstk_darwin(v14);
  v111 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10005D034((uint64_t *)&unk_1006BEB20);
  __chkstk_darwin(v16 - 8);
  unint64_t v18 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for FMIPSafeLocationType();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = a2;
  uint64_t v26 = *(char **)(a2 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator);
  (*(void (**)(char *, void, uint64_t))(v23 + 104))(v25, enum case for FMIPSafeLocationType.home(_:), v22);
  swift_retain();
  FMIPItem.location.getter();
  sub_1000D95CC((uint64_t)v25, (uint64_t)v21, (uint64_t)v18);
  uint64_t v27 = type metadata accessor for FMIPSafeLocation();
  int v110 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v18, 1, v27);
  sub_100003F10((uint64_t)v18, (uint64_t *)&unk_1006BEB20);
  unint64_t v28 = a1;
  swift_release();
  sub_100003F10((uint64_t)v21, (uint64_t *)&unk_1006B2AE0);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  uint64_t v30 = (uint64_t)v111;
  unint64_t v29 = v112;
  uint64_t v31 = v113;
  (*(void (**)(char *, void, void (**)(void, void)))(v112 + 104))(v111, enum case for FMIPItemImageSize.list(_:), v113);
  id v32 = self;
  swift_retain();
  id v33 = [v32 currentTraitCollection];
  id v34 = [v33 userInterfaceStyle];

  uint64_t v35 = v114;
  sub_1001C9354(v30, v34 == (id)2, v114);
  dispatch thunk of FMImageCache.cachedImage(for:completion:)();
  (*(void (**)(uint64_t, void (**)(char *, char *, uint64_t)))(v116 + 8))(v35, (void (**)(char *, char *, uint64_t))v118);
  swift_release();
  id v105 = v121;
  (*(void (**)(uint64_t, void))(v29 + 8))(v30, v31);
  v111 = v26;
  swift_retain();
  dispatch thunk of FMFManager.contactsController.getter();
  swift_release();
  FMIPItem.owner.getter();
  unint64_t v36 = dispatch thunk of FMFContactsDataController.searchInStore(handle:keysToFetch:)();
  swift_release();
  uint64_t v37 = swift_bridgeObjectRelease();
  if (!v36)
  {
    id v104 = 0;
    uint64_t v38 = v117;
    goto LABEL_11;
  }
  if (!(v36 >> 62))
  {
    uint64_t v38 = v117;
    if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_10:
    uint64_t v37 = swift_bridgeObjectRelease();
    id v104 = 0;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v38 = v117;
  if (!v40) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v36 & 0xC000000000000001) != 0) {
    goto LABEL_36;
  }
  if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    for (id i = *(id *)(v36 + 32); ; id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
    {
      id v104 = i;
      uint64_t v37 = swift_bridgeObjectRelease();
LABEL_11:
      int v41 = v110;
      __chkstk_darwin(v37);
      unint64_t v112 = v28;
      *(&v99 - 2) = v28;
      uint64_t v42 = v108;
      swift_bridgeObjectRetain();
      uint64_t v43 = v109;
      uint64_t v44 = sub_100496E44((uint64_t (*)(void))sub_10044C44C, (uint64_t)(&v99 - 4), v42);
      uint64_t v109 = v43;
      char v45 = *(unsigned char *)(*((void *)v111 + 2) + OBJC_IVAR____TtC6FindMy19FMConditionProvider_isUnderAgeUser);
      id v46 = (char *)_swiftEmptyArrayStorage;
      uint64_t v116 = v44;
      if (v45) {
        break;
      }
      uint64_t v47 = v44;
      v121 = _swiftEmptyArrayStorage;
      uint64_t v48 = *(void *)(v44 + 16);
      swift_bridgeObjectRetain();
      if (!v48)
      {
LABEL_24:
        swift_bridgeObjectRelease();
        break;
      }
      unint64_t v28 = 0;
      v113 = (void (**)(void, void))(v120 + 8);
      uint64_t v114 = v120 + 16;
      v118 = (void (**)(void *, char *, uint64_t))(v120 + 32);
      uint64_t v49 = v115;
      while (v28 < *(void *)(v47 + 16))
      {
        unint64_t v50 = (*(unsigned __int8 *)(v120 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80);
        uint64_t v51 = *(void *)(v120 + 72);
        (*(void (**)(char *, unint64_t, uint64_t))(v120 + 16))(v49, v47 + v50 + v51 * v28, v38);
        if (FMIPBeaconShare.requiresResponse.getter())
        {
          uint64_t v52 = v48;
          uint64_t v53 = *v118;
          (*v118)(v119, v49, v38);
          uint64_t v54 = v121;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10013E71C(0, v54[2] + 1, 1);
            uint64_t v54 = v121;
          }
          unint64_t v56 = v54[2];
          unint64_t v55 = v54[3];
          if (v56 >= v55 >> 1)
          {
            sub_10013E71C(v55 > 1, v56 + 1, 1);
            uint64_t v54 = v121;
          }
          v54[2] = v56 + 1;
          unint64_t v57 = (unint64_t)v54 + v50 + v56 * v51;
          uint64_t v38 = v117;
          v53((void *)v57, v119, v117);
          v121 = v54;
          uint64_t v49 = v115;
          uint64_t v47 = v116;
          uint64_t v48 = v52;
        }
        else
        {
          (*v113)(v49, v38);
        }
        if (v48 == ++v28)
        {
          id v46 = (char *)v121;
          int v41 = v110;
          goto LABEL_24;
        }
      }
      __break(1u);
LABEL_36:
      ;
    }
    if (!*((void *)v46 + 2))
    {
      LODWORD(v119) = v41 != 1;
      swift_bridgeObjectRelease();
      sub_10005D034((uint64_t *)&unk_1006AEFB0);
      uint64_t v66 = *(void *)(type metadata accessor for FMItemCellViewModel() - 8);
      unint64_t v67 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
      uint64_t v68 = swift_allocObject();
      *(_OWORD *)(v68 + 16) = xmmword_10055B970;
      v118 = (void (**)(void *, char *, uint64_t))(v68 + v67);
      uint64_t v69 = v102;
      (*(void (**)(char *, unint64_t, uint64_t))(v100 + 16))(v102, v112, v101);
      uint64_t v70 = v103;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v120 + 56))(v103, 1, 1, v38);
      id v71 = v104;
      id v72 = v104;
      v73 = v111;
      swift_retain();
      id v74 = v105;
      id v75 = v105;
      id v76 = v106;
      id v77 = v106;
      sub_100356368(v73, v69, v70, v116, v74, v76, v71, v119);

LABEL_34:
      uint64_t *v107 = v68;
      return;
    }
    v119 = v46;
    uint64_t v58 = FMIPItem.owner.getter();
    uint64_t v60 = v59;
    id v61 = [self SPOwner];
    id v62 = [v61 destination];

    uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v65 = v64;

    if (v58 == v63 && v60 == v65)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v78 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v78 & 1) == 0)
      {
        uint64_t v95 = swift_bridgeObjectRelease();
        uint64_t v81 = _swiftEmptyArrayStorage;
        uint64_t v93 = (uint64_t)v104;
        uint64_t v88 = (uint64_t)v105;
        id v86 = v104;
        id v94 = v105;
        uint64_t v90 = (uint64_t)v106;
        goto LABEL_33;
      }
    }
    LODWORD(v118) = v41 != 1;
    sub_10005D034((uint64_t *)&unk_1006AEFB0);
    uint64_t v79 = *(void *)(type metadata accessor for FMItemCellViewModel() - 8);
    unint64_t v80 = (*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
    uint64_t v81 = (void *)swift_allocObject();
    *((_OWORD *)v81 + 1) = xmmword_10055B970;
    uint64_t v117 = (uint64_t)v81 + v80;
    unint64_t v82 = v102;
    (*(void (**)(char *, unint64_t, uint64_t))(v100 + 16))(v102, v112, v101);
    uint64_t v83 = v38;
    uint64_t v84 = v103;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v120 + 56))(v103, 1, 1, v83);
    uint64_t v85 = (uint64_t)v104;
    id v86 = v104;
    uint64_t v87 = v111;
    swift_retain();
    uint64_t v88 = (uint64_t)v105;
    id v89 = v105;
    uint64_t v90 = (uint64_t)v106;
    id v91 = v106;
    uint64_t v92 = v87;
    uint64_t v93 = v85;
    id v94 = v89;
    uint64_t v95 = sub_100356368(v92, v82, v84, v116, v88, v90, v93, v118);
LABEL_33:
    __chkstk_darwin(v95);
    *(&v99 - 6) = v99;
    *(&v99 - 5) = v96;
    *(&v99 - 4) = v88;
    *(&v99 - 3) = v90;
    *(&v99 - 2) = v93;
    *((unsigned char *)&v99 - 8) = v97;
    sub_10018C5EC((void (*)(uint64_t))sub_10044C46C, (uint64_t)(&v99 - 8), (uint64_t)v119);
    swift_bridgeObjectRelease();
    v121 = v81;
    swift_bridgeObjectRetain();
    uint64_t v98 = swift_bridgeObjectRetain();
    sub_1004A2050(v98);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v68 = (uint64_t)v121;
    goto LABEL_34;
  }
  __break(1u);
}

uint64_t sub_100442A48()
{
  uint64_t v0 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  FMIPBeaconShare.beaconIdentifier.getter();
  uint64_t v4 = UUID.uuidString.getter();
  uint64_t v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v4 == FMIPItem.identifier.getter() && v6 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_100442B8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X4>, void *a6@<X5>, unsigned int a7@<W6>, uint64_t a8@<X8>)
{
  unsigned int v29 = a7;
  uint64_t v28 = a8;
  uint64_t v14 = sub_10005D034((uint64_t *)&unk_1006BB990);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for FMIPItem();
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(a2 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v19, a3);
  uint64_t v22 = type metadata accessor for FMIPBeaconShare();
  uint64_t v23 = *(void *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v16, a1, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v16, 0, 1, v22);
  id v24 = a6;
  swift_retain();
  id v25 = a4;
  id v26 = a5;
  return sub_100356368(v20, v19, v16, _swiftEmptyArrayStorage, a4, a5, a6, v29);
}

void sub_100442D94(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v44 = type metadata accessor for FMSelectedSection();
  uint64_t v4 = __chkstk_darwin(v44);
  uint64_t v47 = (uint64_t)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v46 = (char *)&v44 - v6;
  uint64_t v7 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  __chkstk_darwin(v7 - 8);
  char v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMIPItem();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for IndexPath();
  uint64_t v48 = *(void *)(v14 - 8);
  uint64_t v49 = v14;
  uint64_t v15 = *(void *)(v48 + 64);
  uint64_t v16 = __chkstk_darwin(v14);
  char v45 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v44 - v17;
  uint64_t v19 = sub_10005D034(&qword_1006B4580);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v22 = IndexPath.section.getter();
  if ((v22 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v23 = *(void *)&v2[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel];
  if (v22 >= *(void *)(v23 + 16))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_6;
  }
  if (!*(unsigned char *)(v23 + 16 * v22 + 32))
  {
    uint64_t v33 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v21, 1, 1, v33);
    uint64_t v34 = v48;
    uint64_t v35 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v18, a1, v49);
    type metadata accessor for MainActor();
    unint64_t v36 = v2;
    uint64_t v37 = static MainActor.shared.getter();
    unint64_t v38 = (*(unsigned __int8 *)(v34 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    unint64_t v39 = (char *)swift_allocObject();
    *((void *)v39 + 2) = v37;
    *((void *)v39 + 3) = &protocol witness table for MainActor;
    *((void *)v39 + 4) = v36;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(&v39[v38], v18, v35);
    sub_10016CC14((uint64_t)v21, (uint64_t)&unk_1006BEAE8, (uint64_t)v39);
    swift_release();
    return;
  }
  sub_10043E0C8(a1, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    uint64_t v40 = *(void *)(*(void *)&v2[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator] + 56);
    uint64_t v41 = (uint64_t)v46;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v46, v13, v10);
    swift_storeEnumTagMultiPayload();
    uint64_t v42 = v40 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess();
    uint64_t v43 = v47;
    sub_10044BF18(v42, v47, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    swift_beginAccess();
    swift_retain();
    sub_100009A88(v41, v42);
    swift_endAccess();
    sub_100053CA0(v43);
    sub_10044BF80(v41, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    sub_10044BF80(v43, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return;
  }
  sub_100003F10((uint64_t)v9, (uint64_t *)&unk_1006AFE30);
  if (qword_1006AE190 != -1) {
    goto LABEL_14;
  }
LABEL_6:
  uint64_t v24 = type metadata accessor for Logger();
  sub_1000606BC(v24, (uint64_t)qword_1006D1E98);
  uint64_t v26 = v48;
  uint64_t v25 = v49;
  uint64_t v27 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v45, a1, v49);
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    v51[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 136315138;
    sub_100045BA4(&qword_1006B6C70, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v50 = sub_1000606F4(v31, v32, v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v25);
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "FMItemsListDataSource: cannnot select device at indexPath: %s", v30, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v25);
  }
}

void sub_100443468()
{
  sub_100006060(0, (unint64_t *)&unk_1006C1470);
  uint64_t v1 = self;
  id v2 = [v1 mainBundle];
  v3._countAndFlagsBits = 0xD00000000000001DLL;
  v24._object = (void *)0x800000010057EF80;
  v3._object = (void *)0x80000001005897A0;
  v4.value._countAndFlagsBits = 0xD000000000000013;
  v4.value._object = (void *)0x800000010057EF60;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v24._countAndFlagsBits = 0xD000000000000018;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v24);

  String._bridgeToObjectiveC()();
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v8 = [v1 mainBundle];
  v9._countAndFlagsBits = 0xD000000000000019;
  v25._object = (void *)0x800000010057EF80;
  v9._object = (void *)0x8000000100589760;
  v10.value._countAndFlagsBits = 0xD000000000000013;
  v10.value._object = (void *)0x800000010057EF60;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v25._countAndFlagsBits = 0xD000000000000018;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v25);

  String._bridgeToObjectiveC()();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  uint64_t v13 = (void *)(*(void *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_tableViewFooter)
                 + OBJC_IVAR____TtC6FindMy23FMListFooterActionsView_actions);
  swift_beginAccess();
  *uint64_t v13 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  id v14 = v7;
  unint64_t v15 = swift_bridgeObjectRetain();
  char v16 = sub_100449B1C(v15, v14);

  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
    swift_beginAccess();
    id v17 = v14;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    sub_10041C308();
  }
  swift_retain();
  uint64_t v18 = sub_1000D8B74();
  swift_release();
  uint64_t v19 = *(void *)(v18 + 16);
  swift_bridgeObjectRelease();
  if (v19)
  {
    id v20 = v12;
    unint64_t v21 = swift_bridgeObjectRetain();
    char v22 = sub_100449B1C(v21, v20);

    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      swift_beginAccess();
      id v23 = v20;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      sub_10041C308();
    }
  }
}

void sub_1004438B8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v5 = (void *)Strong;
    a3();
  }
}

uint64_t sub_100443914()
{
  uint64_t v1 = type metadata accessor for FMSelectedSection();
  uint64_t v2 = __chkstk_darwin(v1);
  Swift::String_optional v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v10[-v5];
  uint64_t v7 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator) + 56);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = v7 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_10044BF18(v8, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  swift_beginAccess();
  swift_retain();
  sub_100009A88((uint64_t)v6, v8);
  swift_endAccess();
  sub_100053CA0((unint64_t)v4);
  sub_10044BF80((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_10044BF80((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  return swift_release();
}

uint64_t sub_100443AB8()
{
  return sub_100443B10(1);
}

uint64_t sub_100443B08()
{
  return sub_100443B10(0);
}

uint64_t sub_100443B10(char a1)
{
  uint64_t v3 = type metadata accessor for FMSelectedSection();
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v12[-v7];
  uint64_t v9 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator) + 56);
  v12[-v7] = a1;
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = v9 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_10044BF18(v10, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  swift_beginAccess();
  swift_retain();
  sub_100009A88((uint64_t)v8, v10);
  swift_endAccess();
  sub_100053CA0((unint64_t)v6);
  sub_10044BF80((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_10044BF80((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  return swift_release();
}

uint64_t sub_100443CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  v5[4] = sub_10005D034(&qword_1006BEAF0);
  v5[5] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for FMIPBeaconShareState();
  v5[6] = v6;
  v5[7] = *(void *)(v6 - 8);
  v5[8] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for FMIPBeaconShare();
  v5[9] = v7;
  v5[10] = *(void *)(v7 - 8);
  v5[11] = swift_task_alloc();
  sub_10005D034(&qword_1006BEAF8);
  v5[12] = swift_task_alloc();
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  v5[15] = *(void *)(type metadata accessor for FMItemCellViewModel() - 8);
  v5[16] = swift_task_alloc();
  sub_10005D034((uint64_t *)&unk_1006AFE30);
  v5[17] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for FMIPItem();
  v5[18] = v8;
  v5[19] = *(void *)(v8 - 8);
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[22] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  return ((uint64_t (*)(unint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_100443F80, v10, v9);
}

unint64_t sub_100443F80()
{
  uint64_t v1 = v0[2];
  swift_release();
  id v2 = *(id *)(v1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_tableView);
  do
  {
    uint64_t v3 = v2;
    id v2 = [v2 nextResponder];

    if (!v2)
    {
      if (qword_1006AE190 != -1) {
        swift_once();
      }
      uint64_t v10 = type metadata accessor for Logger();
      sub_1000606BC(v10, (uint64_t)qword_1006D1E98);
      Swift::String v11 = Logger.logObject.getter();
      os_log_type_t v12 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v13 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMDevicesListDataSource: Cannot remove device without a view controller", v13, 2u);
        swift_slowDealloc();
      }

      goto LABEL_28;
    }
    self;
    uint64_t v4 = swift_dynamicCastObjCClass();
  }
  while (!v4);
  uint64_t v5 = (void *)v4;
  uint64_t v6 = v0[18];
  uint64_t v7 = v0[19];
  uint64_t v8 = v0[17];
  sub_10043E0C8(v0[3], v8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) != 1)
  {
    uint64_t v14 = v0[2];
    (*(void (**)(void, void, void))(v0[19] + 32))(v0[21], v0[17], v0[18]);
    unint64_t result = IndexPath.section.getter();
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v16 = *(void *)(v14 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel);
      if (result < *(void *)(v16 + 16))
      {
        uint64_t v17 = *(void *)(v16 + 16 * result + 40);
        swift_bridgeObjectRetain();
        unint64_t result = IndexPath.row.getter();
        if ((result & 0x8000000000000000) == 0)
        {
          if (result < *(void *)(v17 + 16))
          {
            uint64_t v18 = v0[16];
            uint64_t v19 = v0[2];
            sub_10044BF18(v17+ ((*(unsigned __int8 *)(v0[15] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0[15] + 80))+ *(void *)(v0[15] + 72) * result, v18, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
            swift_bridgeObjectRelease();
            uint64_t v81 = *(void *)(v19 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator);
            uint64_t v20 = *(void *)(*(void *)(v81 + 24) + 64);
            uint64_t v21 = swift_task_alloc();
            *(void *)(v21 + 16) = v18;
            swift_bridgeObjectRetain();
            uint64_t v22 = sub_100496E44(sub_10044C140, v21, v20);
            swift_task_dealloc();
            uint64_t v23 = v0[14];
            uint64_t v82 = v22;
            if (*(void *)(v22 + 16))
            {
              uint64_t v24 = v22;
              uint64_t v26 = v0[10];
              uint64_t v25 = v0[11];
              uint64_t v28 = v0[8];
              uint64_t v27 = v0[9];
              uint64_t v30 = v0[6];
              uint64_t v29 = v0[7];
              (*(void (**)(uint64_t, unint64_t, uint64_t))(v26 + 16))(v25, v24 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80)), v27);
              FMIPBeaconShare.state.getter();
              (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
              FMIPBeaconShareState.baseState.getter();
              (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
              char v78 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
              v78(v23, 0, 1, v30);
            }
            else
            {
              char v78 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[7] + 56);
              v78(v23, 1, 1, v0[6]);
            }
            uint64_t v32 = v0[13];
            uint64_t v31 = v0[14];
            uint64_t v34 = v0[6];
            uint64_t v33 = v0[7];
            uint64_t v35 = v0[4];
            uint64_t v36 = v0[5];
            (*(void (**)(uint64_t, void, uint64_t))(v33 + 104))(v32, enum case for FMIPBeaconShareState.invitationReceived(_:), v34);
            v78(v32, 0, 1, v34);
            uint64_t v37 = v36 + *(int *)(v35 + 48);
            sub_100006AB0(v31, v36, &qword_1006BEAF8);
            sub_100006AB0(v32, v37, &qword_1006BEAF8);
            unint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
            int v39 = v38(v36, 1, v34);
            uint64_t v40 = v0[6];
            if (v39 == 1)
            {
              uint64_t v41 = v0[14];
              sub_100003F10(v0[13], &qword_1006BEAF8);
              sub_100003F10(v41, &qword_1006BEAF8);
              if (v38(v37, 1, v40) == 1)
              {
                sub_100003F10(v0[5], &qword_1006BEAF8);
LABEL_26:
                unint64_t v48 = 2;
                goto LABEL_27;
              }
            }
            else
            {
              sub_100006AB0(v0[5], v0[12], &qword_1006BEAF8);
              int v42 = v38(v37, 1, v40);
              uint64_t v44 = v0[13];
              uint64_t v43 = v0[14];
              uint64_t v45 = v0[12];
              if (v42 != 1)
              {
                uint64_t v50 = v0[7];
                uint64_t v49 = v0[8];
                uint64_t v51 = v0[6];
                uint64_t v79 = v0[5];
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v49, v37, v51);
                sub_100045BA4(&qword_1006BEB00, (void (*)(uint64_t))&type metadata accessor for FMIPBeaconShareState);
                char v76 = dispatch thunk of static Equatable.== infix(_:_:)();
                uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
                v52(v49, v51);
                sub_100003F10(v44, &qword_1006BEAF8);
                sub_100003F10(v43, &qword_1006BEAF8);
                v52(v45, v51);
                sub_100003F10(v79, &qword_1006BEAF8);
                if (v76) {
                  goto LABEL_26;
                }
LABEL_24:
                unint64_t v48 = 3;
LABEL_27:
                uint64_t v53 = v0[20];
                uint64_t v54 = v0[19];
                uint64_t v75 = v0[18];
                uint64_t v77 = v0[21];
                uint64_t v80 = v0[16];
                (*(void (**)(uint64_t))(v54 + 16))(v53);
                id v55 = objc_allocWithZone((Class)type metadata accessor for FMItemSharingLandingViewController(0));
                swift_retain();
                unint64_t v56 = (char *)sub_1003D29D0(v53, v81, 0, v48);
                swift_release();
                uint64_t v57 = swift_allocObject();
                swift_unknownObjectWeakInit();
                uint64_t v58 = (void (*)())swift_allocObject();
                *((void *)v58 + 2) = v57;
                *((void *)v58 + 3) = v82;
                *((void *)v58 + 4) = v5;
                *((void *)v58 + 5) = v56;
                uint64_t v59 = (void (**)())&v56[qword_1006D2260];
                uint64_t v60 = *(void *)&v56[qword_1006D2260];
                *uint64_t v59 = sub_10044C1B0;
                v59[1] = v58;
                swift_bridgeObjectRetain();
                id v61 = v2;
                id v62 = v56;
                sub_100036B90(v60);
                uint64_t v63 = swift_allocObject();
                swift_unknownObjectWeakInit();
                uint64_t v64 = (void (*)())swift_allocObject();
                *((void *)v64 + 2) = v63;
                *((void *)v64 + 3) = v82;
                *((void *)v64 + 4) = v62;
                uint64_t v65 = (void (**)())&v62[qword_1006D2268];
                uint64_t v66 = *(void *)&v62[qword_1006D2268];
                *uint64_t v65 = sub_10044C204;
                v65[1] = v64;
                unint64_t v67 = v62;
                sub_100036B90(v66);
                uint64_t v68 = swift_allocObject();
                swift_unknownObjectWeakInit();
                uint64_t v69 = (void (**)())&v67[qword_1006D2270];
                uint64_t v70 = *(void *)&v67[qword_1006D2270];
                *uint64_t v69 = sub_10044C210;
                v69[1] = (void (*)())v68;
                sub_100036B90(v70);
                id v71 = objc_allocWithZone((Class)type metadata accessor for FMActivityIndicatingNavigationController());
                id v72 = v67;
                id v73 = sub_1000BE210(v72, 2);
                [v5 presentViewController:v73 animated:1 completion:0];

                (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v77, v75);
                sub_10044BF80(v80, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
                goto LABEL_28;
              }
              uint64_t v46 = v0[6];
              uint64_t v47 = v0[7];
              sub_100003F10(v0[13], &qword_1006BEAF8);
              sub_100003F10(v43, &qword_1006BEAF8);
              (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
            }
            sub_100003F10(v0[5], &qword_1006BEAF0);
            goto LABEL_24;
          }
LABEL_34:
          __break(1u);
          return result;
        }
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v9 = v0[17];

  sub_100003F10(v9, (uint64_t *)&unk_1006AFE30);
LABEL_28:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v74 = (uint64_t (*)(void))v0[1];
  return v74();
}

void sub_100444880(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  Swift::String v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v39 - v12;
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v44 = Strong;
    v39[0] = a4;
    unint64_t v15 = sub_10043CFE0(a2);
    uint64_t v16 = v15[2];
    uint64_t v41 = a3;
    if (v16)
    {
      unint64_t v48 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      uint64_t v17 = v8 + 16;
      uint64_t v19 = *(unsigned __int8 *)(v17 + 64);
      unint64_t v43 = (unint64_t)v15;
      uint64_t v20 = (char *)v15 + ((v19 + 32) & ~v19);
      uint64_t v45 = *(void *)(v17 + 56);
      uint64_t v46 = v18;
      do
      {
        uint64_t v21 = v46;
        v46(v13, v20, v7);
        v21(v11, v13, v7);
        type metadata accessor for FMIPAcceptShareAction();
        swift_allocObject();
        FMIPAcceptShareAction.init(shareIdentifier:)();
        (*(void (**)(char *, uint64_t))(v17 - 8))(v13, v7);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v20 += v45;
        --v16;
      }
      while (v16);
      unint64_t v22 = (unint64_t)v48;
      swift_bridgeObjectRelease();
      a3 = v41;
      if (!(v22 >> 62))
      {
LABEL_6:
        uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v23)
        {
LABEL_7:
          if (v23 < 1)
          {
            __break(1u);
            return;
          }
          uint64_t v25 = 0;
          uint64_t v26 = OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator;
          unint64_t v43 = v22 & 0xC000000000000001;
          *(void *)&long long v24 = 136315138;
          long long v40 = v24;
          v39[1] = (char *)&type metadata for Any + 8;
          do
          {
            if (v43)
            {
              uint64_t v29 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              uint64_t v29 = *(void *)(v22 + 8 * v25 + 32);
              swift_retain();
            }
            uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(*(void *)&v44[v26] + 24) + 32);
            uint64_t v45 = swift_allocObject();
            uint64_t v46 = v30;
            *(void *)(v45 + 16) = a3;
            uint64_t v31 = qword_1006AE190;
            swift_retain();
            id v32 = a3;
            if (v31 != -1) {
              swift_once();
            }
            uint64_t v33 = type metadata accessor for Logger();
            sub_1000606BC(v33, (uint64_t)qword_1006D1E98);
            swift_retain_n();
            uint64_t v34 = Logger.logObject.getter();
            os_log_type_t v35 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v34, v35))
            {
              uint64_t v36 = swift_slowAlloc();
              int v42 = (void *)swift_slowAlloc();
              uint64_t v47 = v29;
              unint64_t v48 = v42;
              *(_DWORD *)uint64_t v36 = v40;
              type metadata accessor for FMIPItemSharingAction();
              sub_100045BA4(&qword_1006B0520, (void (*)(uint64_t))&type metadata accessor for FMIPItemSharingAction);
              uint64_t v37 = dispatch thunk of CustomStringConvertible.description.getter();
              *(void *)(v36 + 4) = sub_1000606F4(v37, v38, (uint64_t *)&v48);
              swift_release_n();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v34, v35, "FMDevicesActionController: perform item share action %s", (uint8_t *)v36, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              a3 = v41;
              swift_slowDealloc();
            }
            else
            {

              swift_release_n();
            }
            ++v25;
            uint64_t v27 = swift_allocObject();
            uint64_t v28 = v45;
            *(void *)(v27 + 16) = sub_10044C218;
            *(void *)(v27 + 24) = v28;
            swift_retain();
            FMIPManager.perform(action:completion:)();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
          }
          while (v23 != v25);
        }
LABEL_20:
        swift_bridgeObjectRelease_n();
        [v39[0] dismissViewControllerAnimated:1 completion:0];

        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v22 = (unint64_t)_swiftEmptyArrayStorage;
      if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    if (v23) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
}

uint64_t sub_100444E10(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v20 = a2;
  uint64_t v5 = type metadata accessor for FMIPItemActionStatus();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10005D034(&qword_1006B4580);
  __chkstk_darwin(v9 - 8);
  Swift::String v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  type metadata accessor for MainActor();
  swift_errorRetain();
  id v13 = a3;
  uint64_t v14 = static MainActor.shared.getter();
  unint64_t v15 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v16 = (v7 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v14;
  *(void *)(v17 + 24) = &protocol witness table for MainActor;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v17 + v15, v8, v5);
  *(void *)(v17 + v16) = v20;
  *(void *)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8)) = v13;
  sub_10016CC14((uint64_t)v11, (uint64_t)&unk_1006BEB10, v17);
  return swift_release();
}

uint64_t sub_10044503C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[17] = a5;
  v6[18] = a6;
  v6[16] = a4;
  uint64_t v7 = type metadata accessor for FMIPItemActionStatus();
  v6[19] = v7;
  v6[20] = *(void *)(v7 - 8);
  v6[21] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[22] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_100445134, v9, v8);
}

uint64_t sub_100445134()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[20];
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for FMIPItemActionStatus.success(_:), v2);
  sub_100045BA4(&qword_1006B04E0, (void (*)(uint64_t))&type metadata accessor for FMIPItemActionStatus);
  char v4 = dispatch thunk of static Equatable.== infix(_:_:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  if ((v4 & 1) == 0)
  {
    uint64_t v5 = v0 + 2;
    uint64_t v6 = v0[17];
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    uint64_t v7 = self;
    id v8 = [v7 mainBundle];
    v42._countAndFlagsBits = 0xD00000000000001FLL;
    v42._object = (void *)0x800000010058F620;
    v9._countAndFlagsBits = 0x5F4552554C494146;
    v9._object = (void *)0xED0000454C544954;
    v10._countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v42);

    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v11 = [v7 mainBundle];
    v43._countAndFlagsBits = 0xD000000000000021;
    v43._object = (void *)0x8000000100582930;
    v12._countAndFlagsBits = 0x5F4552554C494146;
    v12._object = (void *)0xEF4547415353454DLL;
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v43);

    if (!v6)
    {
LABEL_11:
      uint64_t v29 = (void *)v0[18];
      NSString v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v32 = [self alertControllerWithTitle:v30 message:v31 preferredStyle:1];

      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      id v33 = [v7 mainBundle];
      v46._object = (void *)0x800000010057F840;
      v34._countAndFlagsBits = 0x4F545455425F4B4FLL;
      v34._object = (void *)0xEF454C5449545F4ELL;
      v35._countAndFlagsBits = 0;
      v35._object = (void *)0xE000000000000000;
      v46._countAndFlagsBits = 0xD000000000000021;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v34, (Swift::String_optional)0, (NSBundle)v33, v35, v46);

      NSString v36 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v0[6] = State.rawValue.getter;
      v0[7] = 0;
      v0[2] = _NSConcreteStackBlock;
      v0[3] = 1107296256;
      v0[4] = sub_10000841C;
      v0[5] = &unk_10063C838;
      uint64_t v37 = _Block_copy(v5);
      swift_release();
      id v38 = [self actionWithTitle:v36 style:0 handler:v37];
      _Block_release(v37);

      [v32 addAction:v38];
      [v29 presentViewController:v32 animated:1 completion:0];

      goto LABEL_12;
    }
    swift_getErrorValue();
    uint64_t v14 = v0[9];
    swift_errorRetain();
    uint64_t v15 = sub_10027E880(v14);
    uint64_t v17 = v16;
    if (v15 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v17 == v18)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v5 = v0 + 2;
    }
    else
    {
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = v0 + 2;
      if ((v19 & 1) == 0)
      {
LABEL_10:
        swift_errorRelease();
        goto LABEL_11;
      }
    }
    swift_getErrorValue();
    unint64_t v20 = (unint64_t)sub_10027E720(v0[12]);
    if (v20 <= 0xD && ((1 << v20) & 0x3080) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v21 = [v7 mainBundle];
      v22._countAndFlagsBits = 0xD00000000000002BLL;
      v44._object = (void *)0x80000001005828D0;
      v22._object = (void *)0x8000000100586820;
      v23.value._countAndFlagsBits = 0xD000000000000013;
      v23.value._object = (void *)0x80000001005828B0;
      v24._countAndFlagsBits = 0;
      v24._object = (void *)0xE000000000000000;
      v44._countAndFlagsBits = 0xD000000000000018;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v44);

      id v25 = [v7 mainBundle];
      v26._countAndFlagsBits = 0xD00000000000002DLL;
      v45._object = (void *)0x80000001005828D0;
      v26._object = (void *)0x8000000100586850;
      v27.value._countAndFlagsBits = 0xD000000000000013;
      v27.value._object = (void *)0x80000001005828B0;
      uint64_t v5 = v0 + 2;
      v28._countAndFlagsBits = 0;
      v28._object = (void *)0xE000000000000000;
      v45._countAndFlagsBits = 0xD000000000000018;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v26, v27, (NSBundle)v25, v28, v45);
    }
    goto LABEL_10;
  }
LABEL_12:
  swift_task_dealloc();
  int v39 = (uint64_t (*)(void))v0[1];
  return v39();
}

void sub_100445774(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  Swift::String v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v11 = (char *)v35 - v10;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v13 = (void *)Strong;
    v35[0] = a3;
    uint64_t v14 = sub_10043CFE0(a2);
    uint64_t v15 = v14[2];
    id v38 = v13;
    if (v15)
    {
      Swift::String v42 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
      uint64_t v16 = v6 + 16;
      uint64_t v18 = *(unsigned __int8 *)(v16 + 64);
      uint64_t v37 = v14;
      char v19 = (char *)v14 + ((v18 + 32) & ~v18);
      unint64_t v39 = *(void *)(v16 + 56);
      long long v40 = v17;
      do
      {
        unint64_t v20 = v40;
        v40(v11, v19, v5);
        v20(v9, v11, v5);
        type metadata accessor for FMIPDeclineShareAction();
        swift_allocObject();
        FMIPDeclineShareAction.init(shareIdentifier:)();
        (*(void (**)(char *, uint64_t))(v16 - 8))(v11, v5);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v19 += v39;
        --v15;
      }
      while (v15);
      unint64_t v21 = (unint64_t)v42;
      swift_bridgeObjectRelease();
      Swift::String v13 = v38;
      if (!(v21 >> 62))
      {
LABEL_6:
        uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v22)
        {
LABEL_7:
          if (v22 < 1)
          {
            __break(1u);
            return;
          }
          uint64_t v24 = 0;
          long long v40 = (void (*)(char *, char *, uint64_t))(v21 & 0xC000000000000001);
          *(void *)&long long v23 = 136315138;
          long long v36 = v23;
          v35[1] = (char *)&type metadata for Any + 8;
          unint64_t v39 = v21;
          uint64_t v37 = (void *)v22;
          do
          {
            if (v40)
            {
              uint64_t v26 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              uint64_t v26 = *(void *)(v21 + 8 * v24 + 32);
              swift_retain();
            }
            uint64_t v27 = qword_1006AE190;
            swift_retain();
            if (v27 != -1) {
              swift_once();
            }
            uint64_t v28 = type metadata accessor for Logger();
            sub_1000606BC(v28, (uint64_t)qword_1006D1E98);
            swift_retain_n();
            uint64_t v29 = Logger.logObject.getter();
            os_log_type_t v30 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v29, v30))
            {
              uint64_t v31 = swift_slowAlloc();
              id v32 = (void *)swift_slowAlloc();
              uint64_t v41 = v26;
              Swift::String v42 = v32;
              *(_DWORD *)uint64_t v31 = v36;
              type metadata accessor for FMIPItemSharingAction();
              sub_100045BA4(&qword_1006B0520, (void (*)(uint64_t))&type metadata accessor for FMIPItemSharingAction);
              uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter();
              *(void *)(v31 + 4) = sub_1000606F4(v33, v34, (uint64_t *)&v42);
              swift_release_n();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v29, v30, "FMDevicesActionController: perform item share action %s", (uint8_t *)v31, 0xCu);
              swift_arrayDestroy();
              uint64_t v22 = (uint64_t)v37;
              swift_slowDealloc();
              Swift::String v13 = v38;
              unint64_t v21 = v39;
              swift_slowDealloc();
            }
            else
            {

              swift_release_n();
            }
            ++v24;
            uint64_t v25 = swift_allocObject();
            *(void *)(v25 + 16) = State.rawValue.getter;
            *(void *)(v25 + 24) = 0;
            FMIPManager.perform(action:completion:)();
            swift_release();
            swift_release();
            swift_release();
          }
          while (v22 != v24);
        }
LABEL_20:
        swift_bridgeObjectRelease_n();
        [v35[0] dismissViewControllerAnimated:1 completion:0];

        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v21 = (unint64_t)_swiftEmptyArrayStorage;
      if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    if (v22) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
}

void sub_100445CB8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    [*(id *)(Strong + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_tableView) reloadData];
  }
}

unint64_t sub_100445D20()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v40 - v6;
  uint64_t v8 = type metadata accessor for FMItemCellViewModel();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8);
  id v11 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = IndexPath.section.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel);
  if (result >= *(void *)(v13 + 16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v14 = *(void *)(v13 + 16 * result + 40);
  swift_bridgeObjectRetain();
  unint64_t result = IndexPath.row.getter();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (result >= *(void *)(v14 + 16))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  sub_10044BF18(v14+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * result, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
  uint64_t v15 = swift_bridgeObjectRelease();
  uint64_t v44 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator);
  uint64_t v16 = *(void *)(*(void *)(v44 + 24) + 64);
  __chkstk_darwin(v15);
  v40[0] = v17;
  v40[-2] = v17;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_100496E44(sub_10044CD20, (uint64_t)&v40[-4], v16);
  char v19 = sub_10043CFE0(v18);
  swift_bridgeObjectRelease();
  uint64_t v20 = v19[2];
  if (v20)
  {
    uint64_t v47 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    uint64_t v21 = v2 + 16;
    Swift::String v45 = v22;
    long long v23 = (char *)v19 + ((*(unsigned __int8 *)(v21 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 64));
    uint64_t v24 = *(void *)(v21 + 56);
    unint64_t v42 = (unint64_t)v19;
    uint64_t v43 = v24;
    do
    {
      uint64_t v25 = v45;
      v45(v7, v23, v1);
      v25(v5, v7, v1);
      type metadata accessor for FMIPDeclineShareAction();
      swift_allocObject();
      FMIPDeclineShareAction.init(shareIdentifier:)();
      (*(void (**)(char *, uint64_t))(v21 - 8))(v7, v1);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v23 += v43;
      --v20;
    }
    while (v20);
    unint64_t v26 = (unint64_t)v47;
    swift_bridgeObjectRelease();
    if (!(v26 >> 62))
    {
LABEL_9:
      uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t result = swift_bridgeObjectRetain();
      if (v27) {
        goto LABEL_10;
      }
LABEL_23:
      swift_bridgeObjectRelease_n();
      return sub_10044BF80(v40[0], (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v26 = (unint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRetain();
  unint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v27 = result;
  if (!result) {
    goto LABEL_23;
  }
LABEL_10:
  if (v27 >= 1)
  {
    uint64_t v29 = 0;
    unint64_t v30 = v26 & 0xC000000000000001;
    *(void *)&long long v28 = 136315138;
    long long v41 = v28;
    v40[1] = (uint64_t)&type metadata for Any + 8;
    unint64_t v42 = v26 & 0xC000000000000001;
    do
    {
      if (v30)
      {
        uint64_t v32 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v32 = *(void *)(v26 + 8 * v29 + 32);
        swift_retain();
      }
      uint64_t v33 = qword_1006AE190;
      Swift::String v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 + 24) + 32);
      swift_retain();
      if (v33 != -1) {
        swift_once();
      }
      uint64_t v34 = type metadata accessor for Logger();
      sub_1000606BC(v34, (uint64_t)qword_1006D1E98);
      swift_retain_n();
      Swift::String v35 = Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        uint64_t v46 = v32;
        uint64_t v47 = (void *)v43;
        *(_DWORD *)uint64_t v37 = v41;
        type metadata accessor for FMIPItemSharingAction();
        sub_100045BA4(&qword_1006B0520, (void (*)(uint64_t))&type metadata accessor for FMIPItemSharingAction);
        uint64_t v38 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v37 + 4) = sub_1000606F4(v38, v39, (uint64_t *)&v47);
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "FMDevicesActionController: perform item share action %s", (uint8_t *)v37, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        unint64_t v30 = v42;
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      ++v29;
      uint64_t v31 = swift_allocObject();
      *(void *)(v31 + 16) = FMItemViewModelCapabilities.init(rawValue:);
      *(void *)(v31 + 24) = 0;
      FMIPManager.perform(action:completion:)();
      swift_release();
      swift_release();
      swift_release();
    }
    while (v27 != v29);
    goto LABEL_23;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1004463C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v27 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10005D034((uint64_t *)&unk_1006BEAC0);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10005D034((uint64_t *)&unk_1006B1760);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  long long v28 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v27 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v27 - v16;
  FMIPBeaconShare.identifier.getter();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v17, 0, 1, v3);
  uint64_t v18 = type metadata accessor for FMItemCellViewModel();
  sub_100006AB0(a2 + *(int *)(v18 + 76), (uint64_t)v15, (uint64_t *)&unk_1006B1760);
  uint64_t v19 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_100006AB0((uint64_t)v17, (uint64_t)v9, (uint64_t *)&unk_1006B1760);
  sub_100006AB0((uint64_t)v15, v19, (uint64_t *)&unk_1006B1760);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v20((uint64_t)v9, 1, v3) == 1)
  {
    sub_100003F10((uint64_t)v15, (uint64_t *)&unk_1006B1760);
    sub_100003F10((uint64_t)v17, (uint64_t *)&unk_1006B1760);
    int v21 = v20(v19, 1, v3);
    if (v21 == 1) {
      uint64_t v22 = (uint64_t *)&unk_1006B1760;
    }
    else {
      uint64_t v22 = (uint64_t *)&unk_1006BEAC0;
    }
    if (v21 == 1) {
      char v23 = -1;
    }
    else {
      char v23 = 0;
    }
  }
  else
  {
    sub_100006AB0((uint64_t)v9, (uint64_t)v28, (uint64_t *)&unk_1006B1760);
    if (v20(v19, 1, v3) == 1)
    {
      sub_100003F10((uint64_t)v15, (uint64_t *)&unk_1006B1760);
      sub_100003F10((uint64_t)v17, (uint64_t *)&unk_1006B1760);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v28, v3);
      char v23 = 0;
      uint64_t v22 = (uint64_t *)&unk_1006BEAC0;
    }
    else
    {
      uint64_t v24 = v27;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v27, v19, v3);
      sub_100045BA4((unint64_t *)&unk_1006BEAD0, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v25 = *(void (**)(char *, uint64_t))(v4 + 8);
      v25(v24, v3);
      uint64_t v22 = (uint64_t *)&unk_1006B1760;
      sub_100003F10((uint64_t)v15, (uint64_t *)&unk_1006B1760);
      sub_100003F10((uint64_t)v17, (uint64_t *)&unk_1006B1760);
      v25(v28, v3);
    }
  }
  sub_100003F10((uint64_t)v9, v22);
  return v23 & 1;
}

void *sub_100446794(uint64_t a1)
{
  uint64_t v2 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  __chkstk_darwin(v2 - 8);
  id v55 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FMIPItem();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v50 = v7;
  uint64_t v51 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v46 - v8;
  uint64_t v10 = type metadata accessor for FMItemCellViewModel();
  uint64_t v52 = *(void *)(v10 - 8);
  uint64_t v53 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for IndexPath();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char **)((char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  sub_1000606BC(v17, (uint64_t)qword_1006D1E98);
  uint64_t v18 = *(void (**)(void *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v54 = a1;
  v18(v16, a1, v13);
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v48 = v5;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v46 = v12;
    aBlock[0] = v23;
    uint64_t v47 = v9;
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v49 = v4;
    uint64_t v24 = IndexPath.debugDescription.getter();
    uint64_t v58 = sub_1000606F4(v24, v25, aBlock);
    uint64_t v4 = v49;
    uint64_t v9 = v47;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMItemsListDataSource: trailingSwipeActions for index path %s", v22, 0xCu);
    swift_arrayDestroy();
    uint64_t v12 = v46;
    swift_slowDealloc();
    uint64_t v5 = v48;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  }

  uint64_t v58 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v26 = v54;
  unint64_t v27 = IndexPath.section.getter();
  uint64_t v28 = (uint64_t)v55;
  uint64_t v29 = v56;
  if ((v27 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v30 = *(void *)&v56[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel];
  if (v27 >= *(void *)(v30 + 16))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v16 = *(void **)(v30 + 16 * v27 + 40);
  swift_bridgeObjectRetain();
  unint64_t v31 = IndexPath.row.getter();
  if ((v31 & 0x8000000000000000) != 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v31 >= v16[2])
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_10044BF18((uint64_t)v16+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(void *)(v52 + 72) * v31, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
  swift_bridgeObjectRelease();
  int v32 = v12[*(int *)(v53 + 88)];
  sub_10043E0C8(v26, v28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v28, 1, v4) == 1)
  {
    sub_10044BF80((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
    sub_100003F10(v28, (uint64_t *)&unk_1006AFE30);
    return _swiftEmptyArrayStorage;
  }
  uint64_t v13 = (uint64_t)v12;
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  v34(v9, v28, v4);
  if (v32)
  {
    Swift::String v35 = v51;
    uint64_t v28 = (uint64_t)v9;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v51, v9, v4);
    unint64_t v36 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v29;
    v34((char *)(v37 + v36), (uint64_t)v35, v4);
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = sub_10044BE40;
    *(void *)(v38 + 24) = v37;
    aBlock[4] = (uint64_t)sub_10044BF08;
    aBlock[5] = v38;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100538CCC;
    aBlock[3] = (uint64_t)&unk_10063C6D0;
    unint64_t v39 = _Block_copy(aBlock);
    long long v40 = self;
    id v41 = v29;
    id v42 = [v40 contextualActionWithStyle:1 title:0 handler:v39];
    _Block_release(v39);
    swift_release();
    NSString v43 = String._bridgeToObjectiveC()();
    id v44 = [self systemImageNamed:v43];

    [v42 setImage:v44];
    id v45 = [self systemRedColor];
    [v42 setBackgroundColor:v45];

    uint64_t v16 = v42;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_14:
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      uint64_t v9 = (char *)v28;
      goto LABEL_15;
    }
LABEL_20:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_14;
  }
LABEL_15:
  (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  sub_10044BF80(v13, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
  return (void *)v58;
}

void sub_100446F24(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000606BC(v4, (uint64_t)qword_1006D1E98);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "FMItemsListDataSource: Remove button pressed", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t v8 = *(id *)(v1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_tableView);
  while (1)
  {
    uint64_t v9 = v8;
    oslog = [v8 nextResponder];

    if (!oslog) {
      break;
    }
    self;
    uint64_t v10 = (void *)swift_dynamicCastObjCClass();
    uint64_t v8 = oslog;
    if (v10)
    {
      uint64_t v11 = FMIPItem.owner.getter();
      uint64_t v13 = v12;
      id v14 = [self SPOwner];
      id v15 = [v14 destination];

      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v18 = v17;

      if (v11 == v16 && v13 == v18)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v20 & 1) == 0)
        {
          uint64_t v21 = *(void *)(v2 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator);
          swift_retain();
          sub_1000D1D78(a1, v21, v10);
LABEL_18:
          swift_release();
          goto LABEL_19;
        }
      }
      uint64_t v24 = *(void *)(v2 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator);
      swift_retain();
      sub_1000D5CB0(a1, v24, v10);
      goto LABEL_18;
    }
  }
  oslog = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v22, "FMDevicesListDataSource: Cannot remove device without a view controller", v23, 2u);
    swift_slowDealloc();
  }
LABEL_19:
}

id sub_10044723C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMItemsListDataSource();
  return [super dealloc];
}

uint64_t type metadata accessor for FMItemsListDataSource()
{
  return self;
}

uint64_t initializeBufferWithCopyOfBuffer for FMItemsListSectionViewModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMItemsListSectionViewModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FMItemsListSectionViewModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMItemsListSectionViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMItemsListSectionViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMItemsListSectionViewModel()
{
  return &type metadata for FMItemsListSectionViewModel;
}

uint64_t sub_1004474C4(uint64_t a1, uint64_t a2)
{
  return sub_10044A2AC(a2, "FMItemsListDataSource: didUpdate %ld unknown items", (uint64_t)&unk_10063C550, (uint64_t)sub_10044AFF0, (uint64_t)&unk_10063C568);
}

uint64_t sub_10044750C(uint64_t a1, uint64_t a2)
{
  return sub_10044A2AC(a2, "FMItemsListDataSource: didUpdate %ld items", (uint64_t)&unk_10063C500, (uint64_t)sub_10044CDA0, (uint64_t)&unk_10063C518);
}

void sub_100447554(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_10044755C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10044AAA8(a3);
}

uint64_t sub_100447564(uint64_t a1, uint64_t a2)
{
  return sub_10044A688(a2);
}

uint64_t sub_10044756C()
{
  return sub_10044B238();
}

void sub_100447578()
{
}

uint64_t sub_100447580()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource__listTitle);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1004475BC(char a1)
{
  char v2 = *(unsigned char *)(v1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_updatesEnabled);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_updatesEnabled) = a1;
  sub_10043D4B8(v2);
}

uint64_t sub_1004475D4()
{
  swift_retain();
  char v0 = FMIPManager.isInitialized.getter();
  swift_release();
  return v0 & 1;
}

uint64_t sub_100447624(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

char *sub_100447670(uint64_t a1, void *a2)
{
  id v4 = objc_allocWithZone((Class)type metadata accessor for FMItemsListDataSource());
  return sub_10043DAE0(a1, a2);
}

BOOL sub_1004476BC(uint64_t a1, unint64_t a2)
{
  return sub_10044B1E0(a2);
}

Swift::Int sub_1004476C8(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_100268834(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  Swift::Int result = sub_1004477DC(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_100447734(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for FMItemCellViewModel() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_100268848(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_100447FB4(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_1004477DC(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_151;
    }
    if (v3) {
      return sub_100448D48(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_159;
  }
  Swift::Int v6 = result;
  uint64_t v99 = v1;
  uint64_t v93 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      uint64_t v12 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_117;
    }
    id v94 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    sub_10005D034((uint64_t *)&unk_1006B2BB0);
    uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v8 + 16) = v7;
    id v94 = (void *)v8;
    __dst = (char *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v92 = *a1 - 16;
  uint64_t v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v95 = v6;
  Swift::Int v96 = v3;
  uint64_t v97 = v11;
  do
  {
    Swift::Int v14 = v10++;
    if (v10 < v3)
    {
      uint64_t v15 = 16 * v14;
      BOOL v16 = 0;
      int v17 = *(unsigned __int8 *)(v11 + 16 * v10);
      switch(*(unsigned char *)(v11 + 16 * v10))
      {
        case 1:
          switch(*(unsigned char *)(v11 + 16 * v14))
          {
            case 2:
            case 3:
              goto LABEL_21;
            default:
              Swift::Int v10 = v14 + 2;
              if (v14 + 2 >= v3) {
                goto LABEL_47;
              }
              BOOL v16 = 0;
              break;
          }
          goto LABEL_25;
        case 2:
          BOOL v16 = *(unsigned __int8 *)(v11 + 16 * v14) == 3;
          goto LABEL_24;
        case 3:
LABEL_24:
          Swift::Int v10 = v14 + 2;
          if (v14 + 2 < v3) {
            goto LABEL_25;
          }
LABEL_36:
          if (!v16) {
            goto LABEL_47;
          }
LABEL_39:
          if (v10 < v14) {
            goto LABEL_152;
          }
LABEL_40:
          if (v14 >= v10) {
            goto LABEL_47;
          }
          uint64_t v22 = 16 * v10;
          Swift::Int v23 = v10;
          Swift::Int v24 = v14;
          break;
        default:
LABEL_21:
          Swift::Int v10 = v14 + 2;
          if (v14 + 2 >= v3) {
            goto LABEL_40;
          }
          BOOL v16 = 1;
LABEL_25:
          if (v3 <= v10 + 1) {
            Swift::Int v18 = v10 + 1;
          }
          else {
            Swift::Int v18 = v3;
          }
          uint64_t v19 = (unsigned __int8 *)(v11 + 16 * v10);
          while (2)
          {
            int v20 = v17;
            int v21 = *v19;
            v19 += 16;
            int v17 = v21;
            switch(v21)
            {
              case 1:
                switch(v20)
                {
                  case 2:
                  case 3:
                    goto LABEL_33;
                  default:
                    goto LABEL_29;
                }
              case 2:
                if ((v16 ^ (v20 == 3))) {
                  goto LABEL_36;
                }
                goto LABEL_30;
              case 3:
LABEL_29:
                if (!v16) {
                  goto LABEL_30;
                }
                goto LABEL_39;
              default:
LABEL_33:
                if (!v16) {
                  goto LABEL_47;
                }
LABEL_30:
                if (++v10 < v3) {
                  continue;
                }
                Swift::Int v10 = v18;
                if (v16) {
                  goto LABEL_39;
                }
                goto LABEL_47;
            }
          }
      }
      do
      {
        if (v24 != --v23)
        {
          if (!v11) {
            goto LABEL_157;
          }
          uint64_t v25 = v11 + v22;
          char v26 = *(unsigned char *)(v11 + v15);
          uint64_t v27 = *(void *)(v11 + v15 + 8);
          *(_OWORD *)(v11 + v15) = *(_OWORD *)(v11 + v22 - 16);
          *(unsigned char *)(v25 - 16) = v26;
          *(void *)(v25 - 8) = v27;
        }
        ++v24;
        v22 -= 16;
        v15 += 16;
      }
      while (v24 < v23);
    }
LABEL_47:
    if (v10 < v3)
    {
      if (__OFSUB__(v10, v14)) {
        goto LABEL_150;
      }
      if (v10 - v14 < v6)
      {
        if (__OFADD__(v14, v6)) {
          goto LABEL_153;
        }
        if (v14 + v6 >= v3) {
          Swift::Int v28 = v3;
        }
        else {
          Swift::Int v28 = v14 + v6;
        }
        if (v28 >= v14)
        {
          if (v10 != v28)
          {
            uint64_t v29 = (unsigned __int8 *)(v92 + 16 * v10);
LABEL_58:
            uint64_t v30 = *(unsigned __int8 *)(v11 + 16 * v10);
            Swift::Int v31 = v14;
            int v32 = v29;
            while (2)
            {
              unsigned int v33 = *v32;
              switch(v30)
              {
                case 1:
                  if (v33 < 2) {
                    goto LABEL_57;
                  }
                  goto LABEL_63;
                case 2:
                  if (v33 == 3) {
                    goto LABEL_63;
                  }
                  goto LABEL_57;
                case 3:
                  goto LABEL_57;
                default:
LABEL_63:
                  if (!v11) {
                    goto LABEL_155;
                  }
                  uint64_t v34 = *((void *)v32 + 3);
                  *((_OWORD *)v32 + 1) = *(_OWORD *)v32;
                  *int v32 = v30;
                  *((void *)v32 + 1) = v34;
                  v32 -= 16;
                  if (v10 != ++v31) {
                    continue;
                  }
LABEL_57:
                  ++v10;
                  v29 += 16;
                  if (v10 != v28) {
                    goto LABEL_58;
                  }
                  Swift::Int v10 = v28;
                  break;
              }
              break;
            }
          }
          goto LABEL_67;
        }
LABEL_154:
        __break(1u);
LABEL_155:
        __break(1u);
LABEL_156:
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        __break(1u);
LABEL_159:
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        JUMPOUT(0x100447F64);
      }
    }
LABEL_67:
    if (v10 < v14) {
      goto LABEL_145;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_100268068(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v36 = *((void *)v12 + 2);
    unint64_t v35 = *((void *)v12 + 3);
    unint64_t v13 = v36 + 1;
    uint64_t v11 = v97;
    if (v36 >= v35 >> 1)
    {
      uint64_t v11 = v97;
      uint64_t v12 = sub_100268068((char *)(v35 > 1), v36 + 1, 1, v12);
    }
    *((void *)v12 + 2) = v13;
    uint64_t v37 = v12 + 32;
    uint64_t v38 = &v12[16 * v36 + 32];
    *(void *)uint64_t v38 = v14;
    *((void *)v38 + 1) = v10;
    if (v36)
    {
      while (1)
      {
        unint64_t v39 = v13 - 1;
        if (v13 >= 4)
        {
          id v44 = &v37[16 * v13];
          uint64_t v45 = *((void *)v44 - 8);
          uint64_t v46 = *((void *)v44 - 7);
          BOOL v50 = __OFSUB__(v46, v45);
          uint64_t v47 = v46 - v45;
          if (v50) {
            goto LABEL_134;
          }
          uint64_t v49 = *((void *)v44 - 6);
          uint64_t v48 = *((void *)v44 - 5);
          BOOL v50 = __OFSUB__(v48, v49);
          uint64_t v42 = v48 - v49;
          char v43 = v50;
          if (v50) {
            goto LABEL_135;
          }
          unint64_t v51 = v13 - 2;
          uint64_t v52 = &v37[16 * v13 - 32];
          uint64_t v54 = *(void *)v52;
          uint64_t v53 = *((void *)v52 + 1);
          BOOL v50 = __OFSUB__(v53, v54);
          uint64_t v55 = v53 - v54;
          if (v50) {
            goto LABEL_137;
          }
          BOOL v50 = __OFADD__(v42, v55);
          uint64_t v56 = v42 + v55;
          if (v50) {
            goto LABEL_140;
          }
          if (v56 >= v47)
          {
            id v74 = &v37[16 * v39];
            uint64_t v76 = *(void *)v74;
            uint64_t v75 = *((void *)v74 + 1);
            BOOL v50 = __OFSUB__(v75, v76);
            uint64_t v77 = v75 - v76;
            if (v50) {
              goto LABEL_144;
            }
            BOOL v67 = v42 < v77;
            goto LABEL_104;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v68 = *((void *)v12 + 4);
            uint64_t v69 = *((void *)v12 + 5);
            BOOL v50 = __OFSUB__(v69, v68);
            uint64_t v61 = v69 - v68;
            char v62 = v50;
            goto LABEL_98;
          }
          uint64_t v41 = *((void *)v12 + 4);
          uint64_t v40 = *((void *)v12 + 5);
          BOOL v50 = __OFSUB__(v40, v41);
          uint64_t v42 = v40 - v41;
          char v43 = v50;
        }
        if (v43) {
          goto LABEL_136;
        }
        unint64_t v51 = v13 - 2;
        uint64_t v57 = &v37[16 * v13 - 32];
        uint64_t v59 = *(void *)v57;
        uint64_t v58 = *((void *)v57 + 1);
        BOOL v60 = __OFSUB__(v58, v59);
        uint64_t v61 = v58 - v59;
        char v62 = v60;
        if (v60) {
          goto LABEL_139;
        }
        uint64_t v63 = &v37[16 * v39];
        uint64_t v65 = *(void *)v63;
        uint64_t v64 = *((void *)v63 + 1);
        BOOL v50 = __OFSUB__(v64, v65);
        uint64_t v66 = v64 - v65;
        if (v50) {
          goto LABEL_142;
        }
        if (__OFADD__(v61, v66)) {
          goto LABEL_143;
        }
        if (v61 + v66 >= v42)
        {
          BOOL v67 = v42 < v66;
LABEL_104:
          if (v67) {
            unint64_t v39 = v51;
          }
          goto LABEL_106;
        }
LABEL_98:
        if (v62) {
          goto LABEL_138;
        }
        uint64_t v70 = &v37[16 * v39];
        uint64_t v72 = *(void *)v70;
        uint64_t v71 = *((void *)v70 + 1);
        BOOL v50 = __OFSUB__(v71, v72);
        uint64_t v73 = v71 - v72;
        if (v50) {
          goto LABEL_141;
        }
        if (v73 < v61) {
          goto LABEL_15;
        }
LABEL_106:
        unint64_t v78 = v39 - 1;
        if (v39 - 1 >= v13)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v11) {
          goto LABEL_156;
        }
        uint64_t v79 = &v37[16 * v78];
        uint64_t v80 = *(void *)v79;
        uint64_t v81 = &v37[16 * v39];
        uint64_t v82 = *((void *)v81 + 1);
        sub_100449168((char *)(v11 + 16 * *(void *)v79), (char *)(v11 + 16 * *(void *)v81), v11 + 16 * v82, __dst);
        if (v99) {
          goto LABEL_114;
        }
        if (v82 < v80) {
          goto LABEL_131;
        }
        if (v39 > *((void *)v12 + 2)) {
          goto LABEL_132;
        }
        *(void *)uint64_t v79 = v80;
        *(void *)&v37[16 * v78 + 8] = v82;
        unint64_t v83 = *((void *)v12 + 2);
        if (v39 >= v83) {
          goto LABEL_133;
        }
        unint64_t v13 = v83 - 1;
        memmove(&v37[16 * v39], v81 + 16, 16 * (v83 - 1 - v39));
        *((void *)v12 + 2) = v83 - 1;
        uint64_t v11 = v97;
        if (v83 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    Swift::Int v6 = v95;
    Swift::Int v3 = v96;
  }
  while (v10 < v96);
  uint64_t v9 = v94;
LABEL_117:
  uint64_t v84 = v12;
  id v94 = v9;
  if (v13 >= 2)
  {
    uint64_t v85 = *v93;
    do
    {
      unint64_t v86 = v13 - 2;
      if (v13 < 2) {
        goto LABEL_146;
      }
      if (!v85) {
        goto LABEL_158;
      }
      uint64_t v87 = v84;
      uint64_t v88 = *(void *)&v84[16 * v86 + 32];
      uint64_t v89 = *(void *)&v84[16 * v13 + 24];
      sub_100449168((char *)(v85 + 16 * v88), (char *)(v85 + 16 * *(void *)&v84[16 * v13 + 16]), v85 + 16 * v89, __dst);
      if (v99) {
        break;
      }
      if (v89 < v88) {
        goto LABEL_147;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v87 = sub_1002687F8((uint64_t)v87);
      }
      if (v86 >= *((void *)v87 + 2)) {
        goto LABEL_148;
      }
      uint64_t v90 = &v87[16 * v86 + 32];
      *(void *)uint64_t v90 = v88;
      *((void *)v90 + 1) = v89;
      unint64_t v91 = *((void *)v87 + 2);
      if (v13 > v91) {
        goto LABEL_149;
      }
      memmove(&v87[16 * v13 + 16], &v87[16 * v13 + 32], 16 * (v91 - v13));
      uint64_t v84 = v87;
      *((void *)v87 + 2) = v91 - 1;
      unint64_t v13 = v91 - 1;
    }
    while (v91 > 2);
  }
LABEL_114:
  swift_bridgeObjectRelease();
  v94[2] = 0;
  return swift_bridgeObjectRelease();
}

Swift::Int sub_100447FB4(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v185 = type metadata accessor for FMItemCellViewModel();
  uint64_t v183 = *(void *)(v185 - 8);
  uint64_t v4 = __chkstk_darwin(v185);
  uint64_t v180 = (uint64_t)&v172 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v191 = (uint64_t)&v172 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  Swift::Int v10 = (char *)&v172 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  unint64_t v13 = (char *)&v172 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  BOOL v16 = (char *)&v172 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v172 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v172 - v21;
  __chkstk_darwin(v20);
  uint64_t v177 = (uint64_t)&v172 - v23;
  Swift::Int v24 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v24);
  if (result >= v24)
  {
    if (v24 < 0) {
      goto LABEL_148;
    }
    if (v24) {
      return sub_100448E04(0, v24, 1, a1);
    }
    return result;
  }
  if (v24 >= 0) {
    uint64_t v26 = v24;
  }
  else {
    uint64_t v26 = v24 + 1;
  }
  if (v24 < -1) {
    goto LABEL_156;
  }
  v187 = v13;
  Swift::Int v175 = result;
  v179 = v19;
  if (v24 < 2)
  {
    unint64_t v182 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v183 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v183 + 80));
    v173 = _swiftEmptyArrayStorage;
    if (v24 != 1)
    {
      int v32 = (char *)_swiftEmptyArrayStorage;
      unint64_t v33 = _swiftEmptyArrayStorage[2];
LABEL_114:
      v165 = v32;
      if (v33 >= 2)
      {
        uint64_t v166 = *a1;
        do
        {
          unint64_t v167 = v33 - 2;
          if (v33 < 2) {
            goto LABEL_143;
          }
          if (!v166) {
            goto LABEL_155;
          }
          uint64_t v168 = *(void *)&v165[16 * v167 + 32];
          uint64_t v169 = *(void *)&v165[16 * v33 + 24];
          sub_100449454(v166 + *(void *)(v183 + 72) * v168, v166 + *(void *)(v183 + 72) * *(void *)&v165[16 * v33 + 16], v166 + *(void *)(v183 + 72) * v169, v182);
          if (v2) {
            break;
          }
          if (v169 < v168) {
            goto LABEL_144;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v165 = sub_1002687F8((uint64_t)v165);
          }
          if (v167 >= *((void *)v165 + 2)) {
            goto LABEL_145;
          }
          v170 = &v165[16 * v167 + 32];
          *(void *)v170 = v168;
          *((void *)v170 + 1) = v169;
          unint64_t v171 = *((void *)v165 + 2);
          if (v33 > v171) {
            goto LABEL_146;
          }
          memmove(&v165[16 * v33 + 16], &v165[16 * v33 + 32], 16 * (v171 - v33));
          *((void *)v165 + 2) = v171 - 1;
          unint64_t v33 = v171 - 1;
        }
        while (v171 > 2);
      }
LABEL_125:
      swift_bridgeObjectRelease();
      v173[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v30 = 1;
    v174 = v22;
  }
  else
  {
    v174 = v22;
    uint64_t v27 = v26 >> 1;
    uint64_t v28 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v28 + 16) = v27;
    uint64_t v29 = *(unsigned __int8 *)(v183 + 80);
    v173 = (void *)v28;
    unint64_t v182 = v28 + ((v29 + 32) & ~v29);
    uint64_t v30 = v24;
  }
  uint64_t v31 = 0;
  int v32 = (char *)_swiftEmptyArrayStorage;
  v186 = a1;
  v197 = v10;
  v184 = v16;
  while (1)
  {
    uint64_t v34 = v31 + 1;
    uint64_t v181 = v31;
    if (v31 + 1 >= v30)
    {
      uint64_t v55 = v31 + 1;
      goto LABEL_45;
    }
    uint64_t v35 = *a1;
    uint64_t v36 = *(void *)(v183 + 72);
    uint64_t v31 = v181;
    uint64_t v188 = v34;
    v189 = type metadata accessor for FMItemCellViewModel;
    uint64_t v190 = v30;
    uint64_t v37 = v177;
    sub_10044BF18(v35 + v36 * v34, v177, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
    uint64_t v178 = v35;
    uint64_t v192 = v36;
    uint64_t v38 = v35 + v36 * v31;
    uint64_t v39 = (uint64_t)v174;
    sub_10044BF18(v38, (uint64_t)v174, (uint64_t (*)(void))v189);
    double v40 = *(double *)(v37 + 72);
    double v41 = *(double *)(v39 + 72);
    if (v40 == v41)
    {
      uint64_t v42 = *(void *)(v37 + 112);
      uint64_t v43 = *(void *)(v37 + 16);
      id v44 = *(void **)(v37 + 24);
      v195 = *(uint64_t (**)())(v37 + 104);
      uint64_t v196 = v42;
      swift_bridgeObjectRetain();
      v45._countAndFlagsBits = v43;
      v45._object = v44;
      String.append(_:)(v45);
      uint64_t v46 = v196;
      v189 = v195;
      uint64_t v47 = *(void *)(v39 + 112);
      uint64_t v48 = *(void *)(v39 + 16);
      uint64_t v49 = *(void **)(v39 + 24);
      v195 = *(uint64_t (**)())(v39 + 104);
      uint64_t v196 = v47;
      swift_bridgeObjectRetain();
      v50._countAndFlagsBits = v48;
      v50._object = v49;
      String.append(_:)(v50);
      unint64_t v51 = v195;
      uint64_t v52 = v196;
      v195 = v189;
      uint64_t v196 = v46;
      v193 = v51;
      uint64_t v194 = v52;
      sub_100059EB8();
      uint64_t v53 = StringProtocol.caseInsensitiveCompare<A>(_:)();
      uint64_t v37 = v177;
      swift_bridgeObjectRelease();
      Swift::Int v10 = v197;
      swift_bridgeObjectRelease();
      BOOL v54 = v53 == -1;
    }
    else
    {
      BOOL v54 = v40 < v41;
    }
    LODWORD(v189) = v54;
    sub_10044BF80(v39, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
    sub_10044BF80(v37, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
    uint64_t v55 = v31 + 2;
    uint64_t v30 = v190;
    if (v31 + 2 >= v190)
    {
LABEL_30:
      if (!v189) {
        goto LABEL_45;
      }
LABEL_31:
      if (v55 < v31) {
        goto LABEL_149;
      }
      if (v31 < v55)
      {
        v176 = v32;
        uint64_t v76 = 0;
        uint64_t v77 = v192 * (v55 - 1);
        uint64_t v78 = v55 * v192;
        uint64_t v79 = v31;
        uint64_t v80 = v31 * v192;
        do
        {
          if (v79 != v55 + v76 - 1)
          {
            uint64_t v82 = v2;
            uint64_t v83 = v55;
            uint64_t v84 = v178;
            if (!v178) {
              goto LABEL_154;
            }
            unint64_t v85 = v178 + v80;
            v189 = (uint64_t (*)())(v178 + v77);
            sub_100194AF8(v178 + v80, v180);
            if (v80 < v77 || v85 >= v84 + v78)
            {
              uint64_t v81 = v189;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v81 = v189;
              if (v80 != v77) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_100194AF8(v180, (uint64_t)v81);
            Swift::Int v10 = v197;
            uint64_t v55 = v83;
            uint64_t v2 = v82;
            uint64_t v31 = v181;
          }
          ++v79;
          --v76;
          v77 -= v192;
          v78 -= v192;
          v80 += v192;
        }
        while (v79 < v55 + v76);
        a1 = v186;
        int v32 = v176;
        BOOL v16 = v184;
        uint64_t v30 = v190;
      }
      goto LABEL_45;
    }
    uint64_t v172 = v2;
    v176 = v32;
    v188 *= v192;
    uint64_t v56 = v178;
    uint64_t v57 = v192 * v55;
    do
    {
      uint64_t v58 = v55;
      uint64_t v59 = (uint64_t)v179;
      sub_10044BF18(v56 + v57, (uint64_t)v179, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
      sub_10044BF18(v56 + v188, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
      double v60 = *(double *)(v59 + 72);
      double v61 = *((double *)v16 + 9);
      if (v60 == v61)
      {
        uint64_t v62 = *(void *)(v59 + 112);
        uint64_t v63 = *(void *)(v59 + 16);
        uint64_t v64 = *(void **)(v59 + 24);
        v195 = *(uint64_t (**)())(v59 + 104);
        uint64_t v196 = v62;
        swift_bridgeObjectRetain();
        v65._countAndFlagsBits = v63;
        v65._object = v64;
        String.append(_:)(v65);
        uint64_t v66 = v195;
        uint64_t v67 = v196;
        uint64_t v68 = *((void *)v184 + 14);
        uint64_t v69 = *((void *)v184 + 2);
        uint64_t v70 = (void *)*((void *)v184 + 3);
        v195 = (uint64_t (*)())*((void *)v184 + 13);
        uint64_t v196 = v68;
        swift_bridgeObjectRetain();
        v71._countAndFlagsBits = v69;
        v71._object = v70;
        String.append(_:)(v71);
        uint64_t v72 = v195;
        uint64_t v73 = v196;
        v195 = v66;
        uint64_t v196 = v67;
        BOOL v16 = v184;
        v193 = v72;
        uint64_t v194 = v73;
        sub_100059EB8();
        uint64_t v74 = StringProtocol.caseInsensitiveCompare<A>(_:)();
        Swift::Int v10 = v197;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int v75 = v74 == -1;
      }
      else
      {
        int v75 = v60 < v61;
      }
      sub_10044BF80((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
      sub_10044BF80(v59, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
      if (v189 != v75)
      {
        a1 = v186;
        int v32 = v176;
        uint64_t v55 = v58;
        uint64_t v2 = v172;
        uint64_t v30 = v190;
        goto LABEL_30;
      }
      uint64_t v55 = v58 + 1;
      v56 += v192;
      uint64_t v30 = v190;
    }
    while (v190 != v58 + 1);
    uint64_t v55 = v190;
    a1 = v186;
    int v32 = v176;
    uint64_t v2 = v172;
    if (v189) {
      goto LABEL_31;
    }
LABEL_45:
    if (v55 >= v30) {
      goto LABEL_66;
    }
    if (__OFSUB__(v55, v31)) {
      goto LABEL_147;
    }
    if (v55 - v31 >= v175) {
      goto LABEL_66;
    }
    if (__OFADD__(v31, v175)) {
      goto LABEL_150;
    }
    uint64_t v86 = v31 + v175 >= v30 ? v30 : v31 + v175;
    if (v86 < v31) {
      break;
    }
    if (v55 != v86)
    {
      v176 = v32;
      uint64_t v172 = v2;
      uint64_t v87 = *(void *)(v183 + 72);
      uint64_t v192 = v87 * (v55 - 1);
      uint64_t v188 = v87;
      uint64_t v88 = (uint64_t (*)())(v55 * v87);
      uint64_t v178 = v86;
      do
      {
        uint64_t v90 = 0;
        v189 = v88;
        uint64_t v190 = v55;
        while (1)
        {
          uint64_t v91 = *a1;
          uint64_t v92 = (uint64_t)v88 + v90 + *a1;
          uint64_t v93 = (uint64_t)v187;
          sub_10044BF18(v92, (uint64_t)v187, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
          sub_10044BF18(v192 + v90 + v91, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
          double v94 = *(double *)(v93 + 72);
          double v95 = *((double *)v10 + 9);
          if (v94 == v95)
          {
            uint64_t v96 = *(void *)(v93 + 112);
            uint64_t v97 = *(void *)(v93 + 16);
            uint64_t v98 = *(void **)(v93 + 24);
            v195 = *(uint64_t (**)())(v93 + 104);
            uint64_t v196 = v96;
            swift_bridgeObjectRetain();
            v99._countAndFlagsBits = v97;
            v99._object = v98;
            String.append(_:)(v99);
            uint64_t v101 = v195;
            uint64_t v100 = v196;
            uint64_t v103 = (uint64_t (*)())*((void *)v10 + 13);
            uint64_t v102 = *((void *)v10 + 14);
            uint64_t v104 = *((void *)v10 + 2);
            id v105 = (void *)*((void *)v197 + 3);
            v195 = v103;
            uint64_t v196 = v102;
            swift_bridgeObjectRetain();
            v106._countAndFlagsBits = v104;
            v106._object = v105;
            String.append(_:)(v106);
            v107 = v195;
            uint64_t v108 = v196;
            v195 = v101;
            uint64_t v196 = v100;
            a1 = v186;
            v193 = v107;
            uint64_t v194 = v108;
            sub_100059EB8();
            uint64_t v109 = StringProtocol.caseInsensitiveCompare<A>(_:)();
            swift_bridgeObjectRelease();
            Swift::Int v10 = v197;
            swift_bridgeObjectRelease();
            BOOL v110 = v109 == -1;
          }
          else
          {
            BOOL v110 = v94 < v95;
          }
          sub_10044BF80((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
          sub_10044BF80(v93, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
          if (!v110) {
            break;
          }
          uint64_t v111 = *a1;
          uint64_t v88 = v189;
          if (!*a1) {
            goto LABEL_152;
          }
          uint64_t v112 = v111 + v192 + v90;
          sub_100194AF8((uint64_t)v189 + v111 + v90, v191);
          swift_arrayInitWithTakeFrontToBack();
          sub_100194AF8(v191, v112);
          v90 -= v188;
          ++v31;
          uint64_t v89 = v190;
          Swift::Int v10 = v197;
          if (v190 == v31) {
            goto LABEL_56;
          }
        }
        uint64_t v88 = v189;
        uint64_t v89 = v190;
LABEL_56:
        uint64_t v55 = v89 + 1;
        v192 += v188;
        uint64_t v88 = (uint64_t (*)())((char *)v88 + v188);
        uint64_t v31 = v181;
      }
      while (v55 != v178);
      uint64_t v55 = v178;
      uint64_t v2 = v172;
      int v32 = v176;
      BOOL v16 = v184;
    }
LABEL_66:
    if (v55 < v31) {
      goto LABEL_142;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v190 = v55;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      int v32 = sub_100268068(0, *((void *)v32 + 2) + 1, 1, v32);
    }
    unint64_t v115 = *((void *)v32 + 2);
    unint64_t v114 = *((void *)v32 + 3);
    unint64_t v33 = v115 + 1;
    if (v115 >= v114 >> 1) {
      int v32 = sub_100268068((char *)(v114 > 1), v115 + 1, 1, v32);
    }
    *((void *)v32 + 2) = v33;
    uint64_t v116 = v32 + 32;
    uint64_t v117 = &v32[16 * v115 + 32];
    uint64_t v118 = v190;
    *(void *)uint64_t v117 = v31;
    *((void *)v117 + 1) = v118;
    if (v115)
    {
      while (1)
      {
        unint64_t v119 = v33 - 1;
        if (v33 >= 4)
        {
          v124 = &v116[16 * v33];
          uint64_t v125 = *((void *)v124 - 8);
          uint64_t v126 = *((void *)v124 - 7);
          BOOL v130 = __OFSUB__(v126, v125);
          uint64_t v127 = v126 - v125;
          if (v130) {
            goto LABEL_131;
          }
          uint64_t v129 = *((void *)v124 - 6);
          uint64_t v128 = *((void *)v124 - 5);
          BOOL v130 = __OFSUB__(v128, v129);
          uint64_t v122 = v128 - v129;
          char v123 = v130;
          if (v130) {
            goto LABEL_132;
          }
          unint64_t v131 = v33 - 2;
          v132 = &v116[16 * v33 - 32];
          uint64_t v134 = *(void *)v132;
          uint64_t v133 = *((void *)v132 + 1);
          BOOL v130 = __OFSUB__(v133, v134);
          uint64_t v135 = v133 - v134;
          if (v130) {
            goto LABEL_134;
          }
          BOOL v130 = __OFADD__(v122, v135);
          uint64_t v136 = v122 + v135;
          if (v130) {
            goto LABEL_137;
          }
          if (v136 >= v127)
          {
            v154 = &v116[16 * v119];
            uint64_t v156 = *(void *)v154;
            uint64_t v155 = *((void *)v154 + 1);
            BOOL v130 = __OFSUB__(v155, v156);
            uint64_t v157 = v155 - v156;
            if (v130) {
              goto LABEL_141;
            }
            BOOL v147 = v122 < v157;
            goto LABEL_103;
          }
        }
        else
        {
          if (v33 != 3)
          {
            uint64_t v148 = *((void *)v32 + 4);
            uint64_t v149 = *((void *)v32 + 5);
            BOOL v130 = __OFSUB__(v149, v148);
            uint64_t v141 = v149 - v148;
            char v142 = v130;
            goto LABEL_97;
          }
          uint64_t v121 = *((void *)v32 + 4);
          uint64_t v120 = *((void *)v32 + 5);
          BOOL v130 = __OFSUB__(v120, v121);
          uint64_t v122 = v120 - v121;
          char v123 = v130;
        }
        if (v123) {
          goto LABEL_133;
        }
        unint64_t v131 = v33 - 2;
        v137 = &v116[16 * v33 - 32];
        uint64_t v139 = *(void *)v137;
        uint64_t v138 = *((void *)v137 + 1);
        BOOL v140 = __OFSUB__(v138, v139);
        uint64_t v141 = v138 - v139;
        char v142 = v140;
        if (v140) {
          goto LABEL_136;
        }
        v143 = &v116[16 * v119];
        uint64_t v145 = *(void *)v143;
        uint64_t v144 = *((void *)v143 + 1);
        BOOL v130 = __OFSUB__(v144, v145);
        uint64_t v146 = v144 - v145;
        if (v130) {
          goto LABEL_139;
        }
        if (__OFADD__(v141, v146)) {
          goto LABEL_140;
        }
        if (v141 + v146 >= v122)
        {
          BOOL v147 = v122 < v146;
LABEL_103:
          if (v147) {
            unint64_t v119 = v131;
          }
          goto LABEL_105;
        }
LABEL_97:
        if (v142) {
          goto LABEL_135;
        }
        v150 = &v116[16 * v119];
        uint64_t v152 = *(void *)v150;
        uint64_t v151 = *((void *)v150 + 1);
        BOOL v130 = __OFSUB__(v151, v152);
        uint64_t v153 = v151 - v152;
        if (v130) {
          goto LABEL_138;
        }
        if (v153 < v141) {
          goto LABEL_15;
        }
LABEL_105:
        unint64_t v158 = v119 - 1;
        if (v119 - 1 >= v33)
        {
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
          goto LABEL_151;
        }
        if (!*v186) {
          goto LABEL_153;
        }
        v159 = v32;
        v160 = &v116[16 * v158];
        uint64_t v161 = *(void *)v160;
        v162 = &v116[16 * v119];
        uint64_t v163 = *((void *)v162 + 1);
        sub_100449454(*v186 + *(void *)(v183 + 72) * *(void *)v160, *v186 + *(void *)(v183 + 72) * *(void *)v162, *v186 + *(void *)(v183 + 72) * v163, v182);
        if (v2) {
          goto LABEL_125;
        }
        if (v163 < v161) {
          goto LABEL_128;
        }
        if (v119 > *((void *)v159 + 2)) {
          goto LABEL_129;
        }
        *(void *)v160 = v161;
        *(void *)&v116[16 * v158 + 8] = v163;
        unint64_t v164 = *((void *)v159 + 2);
        if (v119 >= v164) {
          goto LABEL_130;
        }
        int v32 = v159;
        unint64_t v33 = v164 - 1;
        memmove(&v116[16 * v119], v162 + 16, 16 * (v164 - 1 - v119));
        *((void *)v159 + 2) = v164 - 1;
        Swift::Int v10 = v197;
        BOOL v16 = v184;
        if (v164 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v33 = 1;
LABEL_15:
    a1 = v186;
    uint64_t v30 = v186[1];
    uint64_t v31 = v190;
    if (v190 >= v30) {
      goto LABEL_114;
    }
  }
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100448D48(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 16 * a3 - 16;
    do
    {
      uint64_t v6 = *(unsigned __int8 *)(v4 + 16 * a3);
      uint64_t v7 = result;
      uint64_t v8 = (unsigned __int8 *)v5;
      while (2)
      {
        unsigned int v9 = *v8;
        switch(v6)
        {
          case 1:
            if (v9 >= 2) {
              goto LABEL_10;
            }
            break;
          case 2:
            if (v9 == 3) {
              goto LABEL_10;
            }
            break;
          case 3:
            break;
          default:
LABEL_10:
            if (!v4)
            {
              __break(1u);
              JUMPOUT(0x100448DF4);
            }
            uint64_t v10 = *((void *)v8 + 3);
            *((_OWORD *)v8 + 1) = *(_OWORD *)v8;
            *uint64_t v8 = v6;
            *((void *)v8 + 1) = v10;
            v8 -= 16;
            if (a3 != ++v7) {
              continue;
            }
            break;
        }
        break;
      }
      ++a3;
      v5 += 16;
    }
    while (a3 != a2);
  }
  return result;
}

uint64_t sub_100448E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v48 = a4;
  uint64_t v42 = a1;
  uint64_t v43 = type metadata accessor for FMItemCellViewModel();
  uint64_t v6 = __chkstk_darwin(v43);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v40 - v10;
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v46 = a3;
  uint64_t v47 = (uint64_t)&v40 - v14;
  uint64_t v41 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v13 + 72);
    uint64_t v54 = v15 * (v46 - 1);
    id v44 = v8;
    uint64_t v45 = v15;
    uint64_t v49 = v15 * v46;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v42;
    while (1)
    {
      uint64_t v18 = v47;
      uint64_t v19 = *v48;
      sub_10044BF18(v49 + v16 + *v48, v47, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
      sub_10044BF18(v54 + v16 + v19, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
      double v20 = *(double *)(v18 + 72);
      double v21 = *((double *)v11 + 9);
      if (v20 == v21)
      {
        uint64_t v23 = *(void *)(v18 + 104);
        uint64_t v22 = *(void *)(v18 + 112);
        uint64_t v24 = *(void *)(v18 + 16);
        uint64_t v25 = *(void **)(v18 + 24);
        uint64_t v52 = v23;
        uint64_t v53 = v22;
        swift_bridgeObjectRetain();
        v26._countAndFlagsBits = v24;
        v26._object = v25;
        String.append(_:)(v26);
        uint64_t v28 = v52;
        uint64_t v27 = v53;
        uint64_t v29 = *((void *)v11 + 14);
        uint64_t v30 = *((void *)v11 + 2);
        uint64_t v31 = (void *)*((void *)v11 + 3);
        uint64_t v52 = *((void *)v11 + 13);
        uint64_t v53 = v29;
        swift_bridgeObjectRetain();
        v32._countAndFlagsBits = v30;
        v32._object = v31;
        String.append(_:)(v32);
        uint64_t v33 = v52;
        uint64_t v34 = v53;
        uint64_t v52 = v28;
        uint64_t v53 = v27;
        uint64_t v8 = v44;
        uint64_t v50 = v33;
        uint64_t v51 = v34;
        sub_100059EB8();
        uint64_t v35 = StringProtocol.caseInsensitiveCompare<A>(_:)();
        swift_bridgeObjectRelease();
        uint64_t v36 = v47;
        swift_bridgeObjectRelease();
        BOOL v37 = v35 == -1;
      }
      else
      {
        uint64_t v36 = v18;
        BOOL v37 = v20 < v21;
      }
      sub_10044BF80((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
      uint64_t result = sub_10044BF80(v36, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
      if (!v37)
      {
LABEL_4:
        v54 += v45;
        v49 += v45;
        if (++v46 == v41) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v38 = *v48;
      if (!*v48) {
        break;
      }
      uint64_t v39 = v38 + v54 + v16;
      sub_100194AF8(v38 + v49 + v16, (uint64_t)v8);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_100194AF8((uint64_t)v8, v39);
      v16 -= v45;
      if (v46 == ++v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100449168(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = (unsigned __int8 *)__dst;
  uint64_t v6 = (unsigned __int8 *)a2;
  uint64_t v7 = (unsigned __int8 *)__src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  Swift::String v26 = __src;
  uint64_t v25 = (unsigned __int8 *)__dst;
  if (v10 < v12 >> 4)
  {
    if (v8 >= -15)
    {
      if (__dst != __src || &__src[16 * v10] <= __dst) {
        memmove(__dst, __src, 16 * v10);
      }
      uint64_t v14 = &v4[16 * v10];
      uint64_t v24 = v14;
      if ((unint64_t)v6 < a3 && v8 >= 16)
      {
        do
        {
          unsigned int v15 = *v4;
          switch(*v6)
          {
            case 1u:
              if (v15 >= 2) {
                goto LABEL_18;
              }
              goto LABEL_14;
            case 2u:
              if (v15 == 3) {
                goto LABEL_18;
              }
              goto LABEL_14;
            case 3u:
LABEL_14:
              if (v7 != v4) {
                *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
              }
              v4 += 16;
              uint64_t v25 = v4;
              uint64_t v16 = v6;
              break;
            default:
LABEL_18:
              uint64_t v16 = v6 + 16;
              if (v7 < v6 || v7 >= v16 || v7 != v6) {
                *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
              }
              break;
          }
          v7 += 16;
          if (v4 >= v14) {
            break;
          }
          uint64_t v6 = v16;
        }
        while ((unint64_t)v16 < a3);
        Swift::String v26 = v7;
      }
      goto LABEL_46;
    }
LABEL_47:
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    JUMPOUT(0x100449434);
  }
  if (v11 < -15) {
    goto LABEL_47;
  }
  if (__dst != a2 || &a2[16 * v13] <= __dst) {
    memmove(__dst, a2, 16 * v13);
  }
  uint64_t v17 = &v4[16 * v13];
  uint64_t v24 = v17;
  Swift::String v26 = v6;
  if (v7 < v6 && v11 >= 16)
  {
    uint64_t v18 = (unsigned __int8 *)(a3 - 16);
    uint64_t v19 = v6;
    while (2)
    {
      double v20 = v18 + 16;
      unsigned int v22 = *(v19 - 16);
      v19 -= 16;
      unsigned int v21 = v22;
      switch(*(v17 - 16))
      {
        case 1u:
          if (v21 >= 2) {
            goto LABEL_41;
          }
          goto LABEL_34;
        case 2u:
          if (v21 == 3) {
            goto LABEL_41;
          }
          goto LABEL_34;
        case 3u:
LABEL_34:
          uint64_t v24 = v17 - 16;
          if (v20 < v17 || v18 >= v17 || v20 != v17) {
            *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
          }
          uint64_t v19 = v6;
          v17 -= 16;
          if (v6 <= v7) {
            break;
          }
          goto LABEL_45;
        default:
LABEL_41:
          if (v20 != v6 || v18 >= v6) {
            *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
          }
          Swift::String v26 = v19;
          if (v19 <= v7) {
            break;
          }
LABEL_45:
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            break;
          }
          continue;
      }
      break;
    }
  }
LABEL_46:
  sub_10026817C(&v26, (const void **)&v25, &v24);
  return 1;
}

uint64_t sub_100449454(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v80 = type metadata accessor for FMItemCellViewModel();
  uint64_t v8 = __chkstk_darwin(v80);
  uint64_t v10 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v76 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v76 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v76 - v17;
  uint64_t v20 = *(void *)(v19 + 72);
  if (!v20)
  {
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  unint64_t v21 = a1;
  if (a2 - a1 == 0x8000000000000000 && v20 == -1) {
    goto LABEL_72;
  }
  int64_t v22 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v20 == -1) {
    goto LABEL_73;
  }
  uint64_t v23 = (uint64_t)(a2 - a1) / v20;
  unint64_t v88 = a1;
  unint64_t v87 = a4;
  uint64_t v24 = v22 / v20;
  unint64_t v81 = a4;
  if (v23 >= v22 / v20)
  {
    if ((v24 & 0x8000000000000000) == 0)
    {
      unint64_t v78 = a1;
      uint64_t v26 = v24 * v20;
      if (a4 < a2 || a2 + v26 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v49 = a4 + v26;
      unint64_t v86 = a4 + v26;
      unint64_t v88 = a2;
      if (v26 >= 1 && v78 < a2)
      {
        unint64_t v52 = -v20;
        unint64_t v79 = -v20;
        uint64_t v77 = v10;
        do
        {
          sub_10044BF18(v49 + v52, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
          unint64_t v53 = a2 + v52;
          sub_10044BF18(a2 + v52, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
          double v54 = *((double *)v13 + 9);
          double v55 = *((double *)v10 + 9);
          if (v54 == v55)
          {
            uint64_t v56 = *((void *)v13 + 14);
            uint64_t v58 = *((void *)v13 + 2);
            uint64_t v57 = (void *)*((void *)v13 + 3);
            uint64_t v84 = *((void *)v13 + 13);
            uint64_t v85 = v56;
            swift_bridgeObjectRetain();
            v59._countAndFlagsBits = v58;
            v59._object = v57;
            String.append(_:)(v59);
            unint64_t v60 = a3;
            uint64_t v62 = v84;
            uint64_t v61 = v85;
            uint64_t v63 = *((void *)v10 + 14);
            uint64_t v64 = *((void *)v10 + 2);
            Swift::String v65 = (void *)*((void *)v10 + 3);
            uint64_t v84 = *((void *)v10 + 13);
            uint64_t v85 = v63;
            swift_bridgeObjectRetain();
            v66._countAndFlagsBits = v64;
            v66._object = v65;
            String.append(_:)(v66);
            uint64_t v67 = v84;
            uint64_t v68 = v85;
            uint64_t v84 = v62;
            uint64_t v85 = v61;
            a3 = v60;
            uint64_t v82 = v67;
            uint64_t v83 = v68;
            sub_100059EB8();
            uint64_t v69 = StringProtocol.caseInsensitiveCompare<A>(_:)();
            unint64_t v52 = v79;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            BOOL v70 = v69 == -1;
          }
          else
          {
            BOOL v70 = v54 < v55;
          }
          uint64_t v71 = (uint64_t)v10;
          unint64_t v72 = v81;
          unint64_t v73 = a3 + v52;
          sub_10044BF80(v71, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
          sub_10044BF80((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
          if (v70)
          {
            if (a3 < a2 || v73 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v52 = v79;
            }
            else
            {
              unint64_t v52 = v79;
              if (a3 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v88 += v52;
          }
          else
          {
            unint64_t v74 = v86;
            v86 += v52;
            if (a3 < v74 || v73 >= v74)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v74)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v53 = a2;
          }
          unint64_t v49 = v86;
          BOOL v75 = v86 > v72;
          uint64_t v10 = v77;
          if (!v75) {
            break;
          }
          a2 = v53;
          a3 = v73;
        }
        while (v53 > v78);
      }
      goto LABEL_50;
    }
  }
  else if ((v23 & 0x8000000000000000) == 0)
  {
    uint64_t v25 = v23 * v20;
    if (a4 < v21 || v21 + v25 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v21)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v79 = a4 + v25;
    unint64_t v86 = a4 + v25;
    if (v25 >= 1 && a2 < a3)
    {
      do
      {
        sub_10044BF18(a2, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
        sub_10044BF18(v81, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
        unint64_t v28 = a3;
        double v29 = *((double *)v18 + 9);
        double v30 = *((double *)v16 + 9);
        if (v29 == v30)
        {
          uint64_t v31 = *((void *)v18 + 14);
          uint64_t v32 = *((void *)v18 + 2);
          uint64_t v33 = (void *)*((void *)v18 + 3);
          uint64_t v84 = *((void *)v18 + 13);
          uint64_t v85 = v31;
          swift_bridgeObjectRetain();
          v34._countAndFlagsBits = v32;
          v34._object = v33;
          String.append(_:)(v34);
          uint64_t v35 = v84;
          uint64_t v36 = v85;
          uint64_t v37 = *((void *)v16 + 14);
          uint64_t v38 = *((void *)v16 + 2);
          uint64_t v39 = (void *)*((void *)v16 + 3);
          uint64_t v84 = *((void *)v16 + 13);
          uint64_t v85 = v37;
          swift_bridgeObjectRetain();
          v40._countAndFlagsBits = v38;
          v40._object = v39;
          String.append(_:)(v40);
          uint64_t v41 = v84;
          uint64_t v42 = v85;
          uint64_t v84 = v35;
          uint64_t v85 = v36;
          uint64_t v82 = v41;
          uint64_t v83 = v42;
          sub_100059EB8();
          uint64_t v43 = StringProtocol.caseInsensitiveCompare<A>(_:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          BOOL v44 = v43 == -1;
        }
        else
        {
          BOOL v44 = v29 < v30;
        }
        sub_10044BF80((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
        sub_10044BF80((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
        if (v44)
        {
          unint64_t v45 = v88;
          unint64_t v46 = a2 + v20;
          a3 = v28;
          if (v88 < a2 || v88 >= v46)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v88 == a2)
          {
            unint64_t v45 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v45 = v88;
          unint64_t v47 = v87 + v20;
          BOOL v48 = v88 < v87 || v88 >= v47;
          a3 = v28;
          if (v48)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v88 != v87)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v87 = v47;
          unint64_t v46 = a2;
        }
        unint64_t v88 = v45 + v20;
        unint64_t v81 = v87;
        if (v87 >= v79) {
          break;
        }
        a2 = v46;
      }
      while (v46 < a3);
    }
LABEL_50:
    sub_100268238(&v88, &v87, (uint64_t *)&v86);
    return 1;
  }
LABEL_74:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100449B1C(unint64_t a1, void *a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      unint64_t v19 = v2;
      unint64_t v20 = v2 & 0xC000000000000001;
      uint64_t v4 = 4;
      while (1)
      {
        uint64_t v5 = v4 - 4;
        if (v20)
        {
          id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v5, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          id v6 = *(id *)(v2 + 8 * v4);
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        uint64_t v8 = v3;
        uint64_t v9 = v6;
        id v10 = [v6 identifier];
        id v11 = [a2 identifier];
        uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v14 = v13;
        BOOL v16 = v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15;
        if (v16)
        {

          swift_bridgeObjectRelease_n();
          char v17 = 1;
          goto LABEL_22;
        }
        char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0)
        {
          ++v4;
          uint64_t v3 = v8;
          BOOL v16 = v7 == v8;
          unint64_t v2 = v19;
          if (!v16) {
            continue;
          }
        }
        goto LABEL_22;
      }
    }
  }
  char v17 = 0;
LABEL_22:
  swift_bridgeObjectRelease();
  return v17 & 1;
}

uint64_t sub_100449CD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_1000606BC(v9, (uint64_t)qword_1006D1E98);
  id v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMItemsListDataSource: provider didInitialize", v12, 2u);
    swift_slowDealloc();
  }

  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v1;
  aBlock[4] = sub_10044B014;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10063C5B8;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = v1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100045BA4((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v19);
}

void sub_10044A058(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMIPItem();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000606BC(v6, (uint64_t)qword_1006D1E98);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v10 = FMIPItem.debugDescription.getter();
    uint64_t v12 = sub_1000606F4(v10, v11, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "FMItemsListDataSource: didUpdate single item %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_10044A2AC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v32 = a3;
  uint64_t v33 = a4;
  uint64_t v31 = a2;
  uint64_t v7 = v5;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_1000606BC(v16, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain();
  char v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = v13;
    uint64_t v20 = a5;
    unint64_t v21 = v7;
    uint64_t v22 = v10;
    uint64_t v23 = v19;
    *(_DWORD *)uint64_t v19 = 134217984;
    aBlock[0] = *(void *)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, v31, v23, 0xCu);
    uint64_t v10 = v22;
    uint64_t v7 = v21;
    a5 = v20;
    uint64_t v13 = v30;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v24 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v7;
  aBlock[4] = v33;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = a5;
  uint64_t v26 = _Block_copy(aBlock);
  id v27 = v7;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100045BA4((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v34);
}

uint64_t sub_10044A688(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE408 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_1000606BC(v11, (uint64_t)qword_1006D2760);
  swift_bridgeObjectRetain();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 134217984;
    aBlock[0] = *(void *)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMItemsListDataSource: didUpdate %ld shares", v14, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v15 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v2;
  aBlock[4] = sub_10044AA8C;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10063C428;
  char v17 = _Block_copy(aBlock);
  id v18 = v2;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100045BA4((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v21);
}

uint64_t sub_10044AA54()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10044AA8C()
{
  return sub_10043FC20(*(void *)(v0 + 16));
}

uint64_t sub_10044AAA8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v31 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for DispatchQoS();
  uint64_t v30 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v29 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FMIPItem();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_1000606BC(v12, (uint64_t)qword_1006D1E98);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  os_log_type_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v28 = v4;
    aBlock[0] = v16;
    uint64_t v26 = v2;
    uint64_t v27 = v5;
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v17 = FMIPItem.debugDescription.getter();
    uint64_t v33 = sub_1000606F4(v17, v18, aBlock);
    uint64_t v2 = v26;
    uint64_t v5 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMItemsListDataSource: didUpdate image for item %s", v15, 0xCu);
    swift_arrayDestroy();
    uint64_t v4 = v28;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }

  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v19 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v2;
  aBlock[4] = (uint64_t)sub_10044AFA8;
  aBlock[5] = v20;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10003C410;
  aBlock[3] = (uint64_t)&unk_10063C478;
  uint64_t v21 = _Block_copy(aBlock);
  id v22 = v2;
  swift_release();
  uint64_t v23 = v29;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100045BA4((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  uint64_t v24 = v31;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v24, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v23, v32);
}

uint64_t sub_10044AFA8()
{
  return sub_10043F7FC(*(void *)(v0 + 16));
}

uint64_t sub_10044AFB0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10044AFE8()
{
}

void sub_10044AFF0()
{
}

uint64_t sub_10044B014()
{
  return sub_10043F73C(*(void *)(v0 + 16));
}

void sub_10044B01C()
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000606BC(v0, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    sub_10005D034((uint64_t *)&unk_1006B2B30);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = isa;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "FMItemsListDataSource: itemAger itemsDidAge %@", v3, 0xCu);
    sub_10005D034((uint64_t *)&unk_1006B5A50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
}

BOOL sub_10044B1E0(unint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel);
  unint64_t v3 = *(void *)(v2 + 16);
  if (!v3 || (int v4 = *(unsigned __int8 *)(v2 + 32), v3 <= a1))
  {
    __break(1u);
    return 0;
  }
  if (!*(unsigned char *)(v2 + 16 * a1 + 32)) {
    return 0;
  }
  return v3 != 1 || v4 == 4 || v4 != 1;
}

uint64_t sub_10044B238()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v27 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v26 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1000606BC(v8, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v24 = v1;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v25 = v5;
    os_log_type_t v14 = (void *)v13;
    *(_DWORD *)uint64_t v12 = 138412290;
    uint64_t v23 = v6;
    sub_100006060(0, (unint64_t *)&unk_1006BEAA0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    aBlock[0] = isa;
    uint64_t v6 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v14 = isa;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMItemsListDataSource: locationProvider didUpdate locations %@", v12, 0xCu);
    sub_10005D034((uint64_t *)&unk_1006B5A50);
    swift_arrayDestroy();
    uint64_t v5 = v25;
    swift_slowDealloc();
    uint64_t v1 = v24;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v1;
  aBlock[4] = sub_10044CDA0;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10063C658;
  unint64_t v18 = _Block_copy(aBlock);
  id v19 = v1;
  swift_release();
  uint64_t v20 = v26;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100045BA4((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v20, v6);
}

void sub_10044B6A8(unint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000606BC(v4, (uint64_t)qword_1006D1E98);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134217984;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "FMItemsListDataSource: numberOfRowsInSection %ld", v7, 0xCu);
    swift_slowDealloc();
  }

  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (*(void *)(*(void *)(v2 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel) + 16) <= a1) {
LABEL_9:
  }
    __break(1u);
}

uint64_t sub_10044B7F0(unint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000606BC(v4, (uint64_t)qword_1006D1E98);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134217984;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "FMItemsListDataSource: titleForHeaderInSection %ld", v7, 0xCu);
    swift_slowDealloc();
  }

  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel);
  if (*(void *)(v8 + 16) <= a1)
  {
LABEL_14:
    __break(1u);
    JUMPOUT(0x10044BA98);
  }
  uint64_t v9 = v8 + 16 * a1;
  uint64_t countAndFlagsBits = *(unsigned __int8 *)(v9 + 32);
  switch(*(unsigned char *)(v9 + 32))
  {
    case 1:
      id v11 = [self mainBundle];
      unint64_t v12 = 0xD000000000000018;
      unint64_t v13 = 0xD000000000000020;
      unint64_t v19 = 0x80000001005828D0;
      os_log_type_t v14 = "SHARED_ITEMS_OWNED_SECTION_TITLE";
      goto LABEL_11;
    case 2:
      id v11 = [self mainBundle];
      unint64_t v12 = 0xD000000000000018;
      unint64_t v13 = 0xD000000000000027;
      unint64_t v19 = 0x80000001005828D0;
      os_log_type_t v14 = "SHARED_ITEMS_SHARED_BY_ME_SECTION_TITLE";
      goto LABEL_11;
    case 3:
      id v11 = [self mainBundle];
      unint64_t v12 = 0xD000000000000018;
      unint64_t v13 = 0xD000000000000029;
      unint64_t v19 = 0x80000001005828D0;
      os_log_type_t v14 = "SHARED_ITEMS_SHARED_WITH_ME_SECTION_TITLE";
LABEL_11:
      unint64_t v15 = (unint64_t)(v14 - 32) | 0x8000000000000000;
      v16.value._object = (void *)0x80000001005828B0;
      v16.value._uint64_t countAndFlagsBits = 0xD000000000000013;
      v17._uint64_t countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v13, v16, (NSBundle)v11, v17, *(Swift::String *)&v12)._countAndFlagsBits;

      break;
    default:
      return countAndFlagsBits;
  }
  return countAndFlagsBits;
}

uint64_t sub_10044BAA8()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v8 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  aBlock[4] = sub_10044CDA0;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10063C608;
  os_log_type_t v10 = _Block_copy(aBlock);
  id v11 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100045BA4((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

uint64_t sub_10044BD74()
{
  uint64_t v1 = type metadata accessor for FMIPItem();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_10044BE40(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *(void *)(type metadata accessor for FMIPItem() - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  a3(1);
  sub_100446F24(v6);
}

uint64_t sub_10044BED0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10044BF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100539718(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

uint64_t sub_10044BF10(uint64_t a1, void *a2)
{
  return sub_1000CC0AC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_10044BF18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10044BF80(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_10044BFE0(uint64_t a1)
{
  sub_1004438B8(a1, v1, (void (*)(void))sub_100443AB8);
}

void sub_10044C010(uint64_t a1)
{
  sub_1004438B8(a1, v1, (void (*)(void))sub_100443B08);
}

uint64_t sub_10044C044(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000E5A7C;
  return sub_100443CBC(a1, v5, v6, v7, v8);
}

uint64_t sub_10044C140(uint64_t a1)
{
  return sub_1004463C4(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_10044C160()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10044C1B0()
{
  sub_100444880(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_10044C1BC()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10044C204()
{
  sub_100445774(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_10044C210()
{
}

uint64_t sub_10044C218(uint64_t a1, uint64_t a2)
{
  return sub_100444E10(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10044C220()
{
  uint64_t v1 = type metadata accessor for FMIPItemActionStatus();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_errorRelease();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10044C318(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FMIPItemActionStatus() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = v1 + v5;
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *unint64_t v12 = v2;
  v12[1] = sub_1000E5A7C;
  return sub_10044503C(a1, v7, v8, v9, v10, v11);
}

uint64_t sub_10044C44C()
{
  return sub_100442A48() & 1;
}

uint64_t sub_10044C46C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100442B8C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40), *(void **)(v2 + 48), *(unsigned __int8 *)(v2 + 56), a2);
}

uint64_t sub_10044C498()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 57, 7);
}

uint64_t sub_10044C4F0()
{
  return sub_1004403B0(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
}

uint64_t sub_10044C504()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10044C544()
{
  sub_100440970(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10044C54C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10044C58C()
{
  (*(void (**)(void))(v0 + 16))();
  sub_100443468();
}

uint64_t sub_10044C5C4()
{
  uint64_t v1 = type metadata accessor for FMItemCellViewModel();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 64);
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v3 + *(int *)(v1 + 76);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10044C7BC()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMItemCellViewModel() - 8);
  return (*(uint64_t (**)(unint64_t))((swift_isaMask & **(void **)(v0 + 16)) + 0x158))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_10044C858()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10044C868()
{
  swift_unknownObjectUnownedDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10044C8A0()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_10044C96C(char a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_10043F12C(a1, a2, v6, v7);
}

uint64_t sub_10044C9F4()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10044CAC8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000D6E0C;
  return sub_100443CBC(a1, v5, v6, v7, v8);
}

unsigned char *storeEnumTagSinglePayload for FMItemsListSection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10044CC90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMItemsListSection()
{
  return &type metadata for FMItemsListSection;
}

unint64_t sub_10044CCCC()
{
  unint64_t result = qword_1006BEB48;
  if (!qword_1006BEB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BEB48);
  }
  return result;
}

uint64_t sub_10044CD20(uint64_t a1)
{
  return sub_10044C140(a1) & 1;
}

char *sub_10044CDD4()
{
  uint64_t v1 = sub_10005D034((uint64_t *)&unk_1006C0CE0);
  __chkstk_darwin(v1 - 8);
  int v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_showContactDetailsSwitch;
  uint64_t v5 = qword_1006AE460;
  unsigned int v6 = v0;
  if (v5 != -1) {
    swift_once();
  }
  if (qword_1006AE228 != -1) {
    swift_once();
  }
  double v7 = *(double *)&qword_1006D20C8;
  id v8 = objc_allocWithZone((Class)type metadata accessor for FMSettingRowView());
  *(void *)&v6[v4] = sub_100512828(1, v7);
  *(void *)&v6[OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v9 = &v6[OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_phoneNumber];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0xE000000000000000;

  id v10 = [self mainBundle];
  v11._uint64_t countAndFlagsBits = 0xD000000000000022;
  v18._object = (void *)0x800000010058CBA0;
  v11._object = (void *)0x800000010059DCA0;
  v12.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v12.value._object = (void *)0xEC00000031656C62;
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v18._uint64_t countAndFlagsBits = 0xD000000000000017;
  Swift::String v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v18);

  uint64_t v15 = type metadata accessor for FMPlatterIcon();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v3, 0, 1, v15);
  return sub_100456A50(v14._countAndFlagsBits, (uint64_t)v14._object, 0, 0, (uint64_t)v3, 0, 0, 0, 0, 0, 0);
}

id sub_10044D154()
{
  sub_10045716C();
  uint64_t v1 = *(char **)(v0 + OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_showContactDetailsSwitch);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_phoneNumber + 8);
  int v3 = &v1[OBJC_IVAR____TtC6FindMy16FMSettingRowView_title];
  *(void *)int v3 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_phoneNumber);
  *((void *)v3 + 1) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabel];
  if (*((void *)v3 + 1))
  {
    id v5 = v4;
    swift_bridgeObjectRetain();
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v7 = v4;
    NSString v6 = 0;
  }
  [v4 setText:v6];

  NSString v8 = String._bridgeToObjectiveC()();
  [v1 setAccessibilityIdentifier:v8];

  v1[OBJC_IVAR____TtC6FindMy16FMSettingRowView_separated] = 0;
  [*(id *)&v1[OBJC_IVAR____TtC6FindMy16FMSettingRowView_separator] setHidden:1];
  uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_contentStackView);

  return [v9 addArrangedSubview:v1];
}

void sub_10044D308()
{
  id v1 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"showContactDetailsRowTap"];
  [*(id *)(v0 + OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_showContactDetailsSwitch) addGestureRecognizer:v1];
}

void sub_10044D388(uint64_t a1)
{
  uint64_t v2 = sub_100119B04(a1);
  int v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_phoneNumber);
  *int v3 = v2;
  v3[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_showContactDetailsSwitch);
  uint64_t v6 = v3[1];
  id v7 = (uint64_t *)(v5 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_title);
  uint64_t *v7 = *v3;
  v7[1] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  NSString v8 = *(void **)(v5 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabel);
  if (v7[1])
  {
    id v9 = v8;
    swift_bridgeObjectRetain();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v10 = v8;
    NSString v11 = 0;
  }
  [v8 setText:v11];
}

void sub_10044D480()
{
  if (*(unsigned char *)(*(void *)(v0 + OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_showContactDetailsSwitch)
                + OBJC_IVAR____TtC6FindMy16FMSettingRowView_enabled) == 1)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v2 = Strong;
      int v3 = sub_10020D408();
      uint64_t v4 = *(void **)(v2
                    + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsWelcomeScreenViewController);
      *(void *)(v2
                + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsWelcomeScreenViewController) = v3;
      swift_unknownObjectRelease();
    }
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_1000606BC(v5, (uint64_t)qword_1006D1E98);
    oslog = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "FMDeviceShowContactDetailsView: User selected showContactDetails detail label.", v7, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_10044D61C()
{
  sub_100068760(v0 + OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_delegate);

  return swift_bridgeObjectRelease();
}

id sub_10044D670()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMDeviceShowContactDetailsView();
  return [super dealloc];
}

uint64_t type metadata accessor for FMDeviceShowContactDetailsView()
{
  return self;
}

void sub_10044D728(char a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_showContactDetailsSwitch);
  if (a1)
  {
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v3 = [self mainBundle];
    unint64_t v4 = 0xD00000000000002FLL;
    unint64_t v13 = 0x800000010058DBD0;
    unint64_t v5 = 0x800000010058DBB0;
    unint64_t v6 = 0xD00000000000001DLL;
  }
  else
  {
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v3 = [self mainBundle];
    unint64_t v6 = 0xD00000000000001ELL;
    unint64_t v4 = 0xD000000000000030;
    unint64_t v13 = 0x800000010058DB70;
    unint64_t v5 = 0x800000010058DB50;
  }
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  Swift::String v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v6, (Swift::String_optional)0, (NSBundle)v3, v7, *(Swift::String *)&v4);

  id v9 = (Swift::String *)(v2 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_subtitle);
  *id v9 = v8;
  swift_bridgeObjectRelease();
  id v10 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_secondaryLabel);
  if (v9->_object)
  {
    id v11 = v10;
    swift_bridgeObjectRetain();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v12 = v10;
    NSString v14 = 0;
  }
  [v10 setText:v14];
}

id sub_10044D910(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = [self defaultMetrics];
  Swift::String v7 = self;
  id v8 = [v7 systemFontOfSize:a1];
  id v9 = [v6 scaledFontForFont:v8];

  [v9 pointSize];
  if (v10 < a1)
  {
    id v11 = [v7 systemFontOfSize:a1];

    id v9 = v11;
  }
  id v12 = [self configurationWithFont:v9];
  swift_bridgeObjectRetain();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [self _systemImageNamed:v13 withConfiguration:v12];

  if (v14)
  {
    id v15 = v14;
    id v16 = [v15 imageWithTintColor:a4 renderingMode:1];
  }
  else
  {

    return 0;
  }
  return v16;
}

uint64_t sub_10044DAE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMSelectedSection();
  uint64_t v3 = __chkstk_darwin(v2);
  unint64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  Swift::String v7 = &v15[-v6];
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1000606BC(v8, (uint64_t)qword_1006D1E98);
  id v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMNoPersonView: action tapped", v11, 2u);
    swift_slowDealloc();
  }

  uint64_t v12 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_mediator) + 56);
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = v12 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100028164(v13, (uint64_t)v5);
  swift_beginAccess();
  swift_retain();
  sub_100009A88((uint64_t)v7, v13);
  swift_endAccess();
  sub_100053CA0((unint64_t)v5);
  sub_100028108((uint64_t)v7);
  sub_100028108((uint64_t)v5);
  return swift_release();
}

id sub_10044DD74()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMNoPersonView();
  [super dealloc];
}

void sub_10044DDA8(char a1)
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_1000606BC(v3, (uint64_t)qword_1006D1E98);
  uint64_t v4 = v1;
  unint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    Swift::String v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)Swift::String v7 = 136315138;
    v36[0] = v8;
    if (*((unsigned char *)&v4->super.isa + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_updatesEnabled)) {
      uint64_t v9 = 1702195828;
    }
    else {
      uint64_t v9 = 0x65736C6166;
    }
    if (*((unsigned char *)&v4->super.isa + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_updatesEnabled)) {
      unint64_t v10 = 0xE400000000000000;
    }
    else {
      unint64_t v10 = 0xE500000000000000;
    }
    sub_1000606F4(v9, v10, v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "FMMultipartEntityListDataSource: updatesEnabled: %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v11 = OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_updatesEnabled;
  if (*((unsigned char *)&v4->super.isa + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_updatesEnabled) == 1)
  {
    uint64_t v12 = *(uint64_t *)((char *)&v4->super.isa + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_mediator);
    uint64_t v13 = *(void *)(v12 + 24);
    type metadata accessor for FMDevicesSubscription();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber + 8) = 0;
    swift_unknownObjectWeakInit();
    id v15 = v4;
    swift_retain();
    UUID.init()();
    *(void *)(v14 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber + 8) = &off_10063CBC8;
    swift_unknownObjectWeakAssign();

    swift_beginAccess();
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)(v13 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v13 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    swift_release();
    *(Class *)((char *)&v15->super.isa + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_deviceSubscription) = (Class)v14;
    swift_release();
    id v16 = *(void **)(v12 + 40);
    type metadata accessor for FMLocationSubscription();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber + 8) = 0;
    swift_unknownObjectWeakInit();
    Swift::String v18 = v15;
    unint64_t v19 = v16;
    UUID.init()();
    *(void *)(v17 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber + 8) = &off_10063CB98;
    swift_unknownObjectWeakAssign();

    uint64_t v20 = &v19[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions];
    swift_beginAccess();
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v20 & 0xFFFFFFFFFFFFFF8)
                                                                                 + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();

    *(void *)&v18[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_locationSubscription] = v17;
    swift_release();
    char v21 = *((unsigned char *)&v4->super.isa + v11) ^ a1;
    swift_retain();
    uint64_t v22 = FMIPManager.devices.getter();
    swift_release();
    uint64_t v23 = *(UIImage **)(*(void *)(v12 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
    uint64_t v4 = v23;
    sub_10044FB40(v22, v23, v21 & 1);
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  uint64_t v24 = 0;
  uint64_t v25 = *(uint64_t *)((char *)&v4->super.isa + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_deviceSubscription);
  if (v25)
  {
    uint64_t v26 = (*(void **)((char *)&v4->super.isa + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_mediator))[3];
    swift_beginAccess();
    swift_retain();
    swift_retain();
    int64_t v27 = sub_10014040C((unint64_t *)(v26 + 16), v25);
    uint64_t v28 = v27;
    unint64_t v29 = *(void *)(v26 + 16);
    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v30 >= v28) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v30 >= v27)
      {
LABEL_21:
        sub_100258678(v28, v30);
        swift_endAccess();
        swift_release();
        swift_release();
        goto LABEL_22;
      }
    }
    __break(1u);
    goto LABEL_30;
  }
LABEL_22:
  uint64_t v31 = *(uint64_t *)((char *)&v4->super.isa
                   + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_locationSubscription);
  if (!v31) {
    return;
  }
  uint64_t v32 = (char *)(*(void **)((char *)&v4->super.isa + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_mediator))[5];
  uint64_t v33 = (uint64_t *)&v32[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions];
  swift_beginAccess();
  swift_retain();
  uint64_t v4 = v32;
  uint64_t v34 = sub_1003D7800(v33, v31);
  uint64_t v24 = v34;
  if ((unint64_t)*v33 >> 62)
  {
LABEL_30:
    swift_bridgeObjectRetain();
    uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v35 >= v24) {
      goto LABEL_25;
    }
LABEL_31:
    __break(1u);
    return;
  }
  uint64_t v35 = *(void *)((*v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v35 < v34) {
    goto LABEL_31;
  }
LABEL_25:
  sub_100258690(v24, v35);
  swift_endAccess();
  swift_release();
LABEL_26:
}

unint64_t sub_10044E3B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v55 = v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v57 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v48 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v48 - v12;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v15 = sub_1000606BC(v14, (uint64_t)qword_1006D1E98);
  id v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v16(v13, a1, v5);
  uint64_t v56 = v16;
  v16(v11, a1, v5);
  uint64_t v17 = v2;
  uint64_t v54 = v15;
  Swift::String v18 = Logger.logObject.getter();
  int v53 = static os_log_type_t.default.getter();
  unint64_t v19 = &OBJC_IVAR____TtC6FindMy19FMConditionProvider_isAccountManaged;
  if (os_log_type_enabled(v18, (os_log_type_t)v53))
  {
    os_log_t v50 = v18;
    uint64_t v51 = a1;
    uint64_t v52 = a2;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    uint64_t v59 = v48;
    *(_DWORD *)uint64_t v20 = 136315650;
    uint64_t v21 = IndexPath.debugDescription.getter();
    uint64_t v58 = sub_1000606F4(v21, v22, &v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    unint64_t v49 = *(void (**)(char *, uint64_t))(v6 + 8);
    v49(v13, v5);
    *(_WORD *)(v20 + 12) = 2048;
    uint64_t v23 = OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_cellsViewModel;
    uint64_t v24 = *(void *)(*(void *)&v17[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_cellsViewModel] + 16);

    uint64_t v58 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v20 + 22) = 2048;
    unint64_t result = IndexPath.section.getter();
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v26 = *(void *)&v17[v23];
      if (result < *(void *)(v26 + 16))
      {
        uint64_t v27 = *(void *)(*(void *)(v26 + 8 * result + 32) + 16);

        uint64_t v28 = v11;
        unint64_t v29 = v49;
        v49(v28, v5);
        uint64_t v58 = v27;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        os_log_t v30 = v50;
        _os_log_impl((void *)&_mh_execute_header, v50, (os_log_type_t)v53, "FMMultipartEntityListDataSource: device for index path: %s, section: %ld row: %ld", (uint8_t *)v20, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        a1 = v51;
        a2 = v52;
        unint64_t v19 = &OBJC_IVAR____TtC6FindMy19FMConditionProvider_isAccountManaged;
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }

  uint64_t v31 = v11;
  unint64_t v29 = *(void (**)(char *, uint64_t))(v6 + 8);
  v29(v31, v5);

  v29(v13, v5);
LABEL_8:
  uint64_t v32 = IndexPath.section.getter();
  uint64_t v33 = v19[379];
  uint64_t v34 = *(void *)(*(void *)&v17[v33] + 16);
  uint64_t v35 = v57;
  v56(v57, a1, v5);
  if (v32 >= v34)
  {
    v29(v35, v5);
    goto LABEL_18;
  }
  uint64_t v36 = IndexPath.row.getter();
  unint64_t result = IndexPath.section.getter();
  if ((result & 0x8000000000000000) != 0) {
    goto LABEL_23;
  }
  uint64_t v37 = *(void *)&v17[v33];
  if (result >= *(void *)(v37 + 16))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v38 = *(void *)(*(void *)(v37 + 8 * result + 32) + 16);
  v29(v35, v5);
  if (v36 < v38)
  {
    unint64_t v39 = IndexPath.section.getter();
    unint64_t result = IndexPath.row.getter();
    if ((v39 & 0x8000000000000000) == 0)
    {
      uint64_t v40 = *(void *)&v17[v33];
      if (v39 < *(void *)(v40 + 16))
      {
        unint64_t v41 = result;
        if ((result & 0x8000000000000000) == 0)
        {
          uint64_t v42 = *(void *)(v40 + 8 * v39 + 32);
          if (result < *(void *)(v42 + 16))
          {
            uint64_t v43 = type metadata accessor for FMDeviceCellViewModel();
            return sub_10010A088(v42+ ((*(unsigned __int8 *)(*(void *)(v43 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v43 - 8) + 80))+ *(void *)(*(void *)(v43 - 8) + 72) * v41+ *(int *)(v43 + 24), a2);
          }
          goto LABEL_28;
        }
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        return result;
      }
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
LABEL_18:
  BOOL v44 = Logger.logObject.getter();
  os_log_type_t v45 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v44, v45))
  {
    unint64_t v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v46 = 0;
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "FMMultipartEntityListDataSource: Not returning any device... out of bound", v46, 2u);
    swift_slowDealloc();
  }

  uint64_t v47 = type metadata accessor for FMIPItem();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(a2, 1, 1, v47);
}

void sub_10044E9AC()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_mediator);
  swift_retain();
  uint64_t v2 = FMIPManager.devices.getter();
  swift_release();
  uint64_t v3 = *(UIImage **)(*(void *)(v1 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  uint64_t v4 = v3;
  sub_10044FB40(v2, v3, 0);
  swift_bridgeObjectRelease();
}

unint64_t sub_10044EAA4(void *a1)
{
  uint64_t v3 = type metadata accessor for FMDeviceCellViewModel();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v7 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v9 = [a1 dequeueReusableCellWithIdentifier:v7 forIndexPath:isa];

  sub_10005D034(&qword_1006BEC30);
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = (void *)v10;
  uint64_t v12 = IndexPath.row.getter();
  unint64_t result = IndexPath.section.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v14 = OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_cellsViewModel;
  uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_cellsViewModel);
  if (result >= *(void *)(v15 + 16))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v12 < *(void *)(*(void *)(v15 + 8 * result + 32) + 16))
  {
    unint64_t v16 = IndexPath.section.getter();
    unint64_t result = IndexPath.row.getter();
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v17 = *(void *)(v1 + v14);
      if (v16 < *(void *)(v17 + 16))
      {
        if ((result & 0x8000000000000000) == 0)
        {
          uint64_t v18 = *(void *)(v17 + 8 * v16 + 32);
          if (result < *(void *)(v18 + 16))
          {
            sub_100057A9C(v18+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * result, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
            unint64_t result = IndexPath.section.getter();
            if ((result & 0x8000000000000000) == 0)
            {
              uint64_t v19 = *(void *)(v1 + v14);
              if (result < *(void *)(v19 + 16))
              {
                uint64_t v20 = *(void *)(*(void *)(v19 + 8 * result + 32) + 16);
                BOOL v21 = IndexPath.row.getter() == v20 - 1;
                *((unsigned char *)v11 + qword_1006B6788) = v21;
                unint64_t v22 = *(void **)((char *)v11 + qword_1006B6770);
                [v22 setHidden:];
                id v23 = [self mainScreen];
                UIRoundToScreenScale();
                double v25 = v24;

                id v26 = [v11 containerView];
                [v26 bounds];
                double v28 = v27;

                double v29 = sub_100538220();
                [v22 setFrame:v29, v28 - v25, sub_100538238(), v25];
                (*(void (**)(char *))((swift_isaMask & *v11) + 0x158))(v6);
                sub_100057ED4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
                return (unint64_t)v11;
              }
              goto LABEL_22;
            }
LABEL_21:
            __break(1u);
LABEL_22:
            __break(1u);
            return result;
          }
LABEL_20:
          __break(1u);
          goto LABEL_21;
        }
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_12:

  id v30 = objc_allocWithZone((Class)UITableViewCell);

  return (unint64_t)[v30 init];
}

void sub_10044EF78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(UIImage **)(*(void *)(*(void *)(a1 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_mediator)
                               + 40)
                   + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  uint64_t v4 = v3;
  sub_10044FB40(a2, v3, 0);
}

uint64_t sub_10044EFF8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v41 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  unint64_t v39 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FMIPDevice();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_1000606BC(v15, (uint64_t)qword_1006D1E98);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a3, v11);
  id v16 = a2;
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v33 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    uint64_t v44 = (uint64_t)v16;
    aBlock[0] = v37;
    *(_DWORD *)uint64_t v20 = 138412546;
    int v36 = v19;
    uint64_t v35 = v11;
    uint64_t v38 = v8;
    id v21 = v16;
    os_log_t v34 = v17;
    id v22 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v33 = v16;

    *(_WORD *)(v20 + 12) = 2080;
    uint64_t v23 = FMIPDevice.debugDescription.getter();
    uint64_t v44 = sub_1000606F4(v23, v24, aBlock);
    uint64_t v8 = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v35);
    os_log_t v25 = v34;
    _os_log_impl((void *)&_mh_execute_header, v34, (os_log_type_t)v36, "FMMultipartEntityListDataSource: didUpdate image %@ device %s", (uint8_t *)v20, 0x16u);
    sub_10005D034((uint64_t *)&unk_1006B5A50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  id v26 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v4;
  *(void *)(v27 + 24) = a1;
  aBlock[4] = (uint64_t)sub_1004569A4;
  aBlock[5] = v27;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10003C410;
  aBlock[3] = (uint64_t)&unk_10063CE20;
  double v28 = _Block_copy(aBlock);
  id v29 = v4;
  swift_retain();
  swift_release();
  id v30 = v39;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100045BEC((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  uint64_t v31 = v41;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v28);

  (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v30, v42);
}

uint64_t sub_10044F5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWallTime();
  uint64_t v20 = *(void *)(v4 - 8);
  uint64_t v21 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  NSString v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  int v19 = (char *)&v19 - v8;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  __chkstk_darwin(v9);
  uint64_t v10 = OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_delayedUpdateWorkItem;
  if (*(void *)(a1 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_delayedUpdateWorkItem))
  {
    swift_retain();
    dispatch thunk of DispatchWorkItem.cancel()();
    swift_release();
  }
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = a2;
  aBlock[4] = sub_100456A24;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10063CE98;
  _Block_copy(aBlock);
  id v22 = _swiftEmptyArrayStorage;
  sub_100045BEC((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  swift_retain();
  swift_retain();
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for DispatchWorkItem();
  swift_allocObject();
  uint64_t v13 = DispatchWorkItem.init(flags:block:)();
  swift_release();
  swift_release();
  *(void *)(a1 + v10) = v13;
  swift_retain();
  swift_release();
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchWallTime.now()();
  uint64_t v15 = v19;
  + infix(_:_:)();
  uint64_t v16 = v21;
  uint64_t v17 = *(void (**)(char *, uint64_t))(v20 + 8);
  v17(v7, v21);
  OS_dispatch_queue.asyncAfter(wallDeadline:execute:)();
  swift_release();

  return ((uint64_t (*)(char *, uint64_t))v17)(v15, v16);
}

void sub_10044F920()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = FMIPManager.devices.getter();
    swift_beginAccess();
    uint64_t v3 = swift_unknownObjectWeakLoadStrong();
    if (v3)
    {
      uint64_t v4 = (void *)v3;
      uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_mediator);
      swift_retain();

      uint64_t v6 = (char *)*(id *)(v5 + 40);
      swift_release();
      NSString v7 = *(UIImage **)&v6[OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation];
      uint64_t v8 = v7;
    }
    else
    {
      NSString v7 = 0;
    }
    sub_10044FB40(v2, v7, 0);

    swift_bridgeObjectRelease();
  }
}

void sub_10044FA18(uint64_t a1, unint64_t a2)
{
  swift_retain();
  uint64_t v3 = FMIPManager.devices.getter();
  swift_release();
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v6 = 0;
    goto LABEL_9;
  }
  uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_8;
  }
LABEL_3:
  if ((a2 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = (UIImage *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    uint64_t v5 = (UIImage *)*(id *)(a2 + 32);
  }
  NSString v7 = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = v7;
LABEL_9:
  uint64_t v8 = v6;
  sub_10044FB40(v3, v6, 0);
  swift_bridgeObjectRelease();
}

void sub_10044FB40(uint64_t a1, UIImage *a2, int a3)
{
  int v95 = a3;
  uint64_t v96 = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10005D034(&qword_1006B2AF0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for FMIPDevice();
  uint64_t v17 = __chkstk_darwin(*(void *)(v16 - 8));
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v101 = (char *)&v79 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v102 = (char *)&v79 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  if (v3[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_updatesEnabled] == 1)
  {
    uint64_t v81 = v6;
    uint64_t v93 = v15;
    uint64_t v28 = v23;
    uint64_t v84 = v27;
    uint64_t v85 = v26;
    unint64_t v86 = v25;
    unint64_t v29 = *(void *)(a1 + 16);
    double v94 = (char *)&v79 - v24;
    uint64_t v80 = v12;
    unint64_t v83 = v29;
    if (v29)
    {
      uint64_t v87 = v10;
      unint64_t v88 = v8;
      uint64_t v89 = v9;
      uint64_t v90 = v5;
      uint64_t v91 = v3;
      uint64_t v92 = v23;
      id v30 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
      uint64_t v31 = (char *)(a1 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80)));
      uint64_t v98 = &v3[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_selectedDevice];
      Swift::String v99 = v30;
      uint64_t v32 = (void (**)(char *, uint64_t))(v23 + 8);
      uint64_t v100 = v23 + 16;
      uint64_t v97 = *(void *)(v23 + 72);
      uint64_t v82 = a1;
      swift_bridgeObjectRetain();
      uint64_t v33 = v102;
      while (1)
      {
        os_log_t v34 = v99;
        v99(v33, v31, v16);
        uint64_t v35 = FMIPDevice.identifier.getter();
        uint64_t v37 = v36;
        uint64_t v38 = v101;
        v34(v101, v98, v16);
        uint64_t v39 = FMIPDevice.identifier.getter();
        uint64_t v41 = v40;
        uint64_t v42 = *v32;
        (*v32)(v38, v16);
        if (v35 == v39 && v37 == v41) {
          break;
        }
        char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v43) {
          goto LABEL_12;
        }
        uint64_t v33 = v102;
        v42(v102, v16);
        v31 += v97;
        if (!--v29)
        {
          uint64_t v44 = 1;
          uint64_t v3 = v91;
          uint64_t v45 = v92;
          uint64_t v9 = v89;
          uint64_t v5 = v90;
          uint64_t v8 = v88;
          uint64_t v10 = v87;
          goto LABEL_10;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_12:
      uint64_t v45 = v92;
      uint64_t v46 = (uint64_t)v93;
      (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v93, v102, v16);
      uint64_t v44 = 0;
      uint64_t v9 = v89;
      uint64_t v5 = v90;
      uint64_t v8 = v88;
      uint64_t v10 = v87;
      uint64_t v3 = v91;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v44 = 1;
      uint64_t v45 = v28;
LABEL_10:
      uint64_t v46 = (uint64_t)v93;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56))(v46, v44, 1, v16);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v46, 1, v16) == 1)
    {
      sub_100003F10(v46, &qword_1006B2AF0);
      if (qword_1006AE190 != -1) {
        swift_once();
      }
      uint64_t v47 = type metadata accessor for Logger();
      sub_1000606BC(v47, (uint64_t)qword_1006D1E98);
      uint64_t v48 = Logger.logObject.getter();
      os_log_type_t v49 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v48, v49))
      {
        os_log_t v50 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_t v50 = 0;
        _os_log_impl((void *)&_mh_execute_header, v48, v49, "FMMultipartEntityListDataSource: Did not update selected device", v50, 2u);
        swift_slowDealloc();
      }
    }
    else
    {
      uint64_t v51 = v94;
      uint64_t v102 = *(char **)(v45 + 32);
      ((void (*)(char *, uint64_t, uint64_t))v102)(v94, v46, v16);
      if ([*(id *)&v3[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_tableView] isEditing])
      {
        if (qword_1006AE190 != -1) {
          swift_once();
        }
        uint64_t v52 = type metadata accessor for Logger();
        sub_1000606BC(v52, (uint64_t)qword_1006D1E98);
        int v53 = Logger.logObject.getter();
        os_log_type_t v54 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v53, v54))
        {
          uint64_t v55 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v55 = 0;
          _os_log_impl((void *)&_mh_execute_header, v53, v54, "FMMultipartEntityListDataSource: Ignoring data source update due to editing mode", v55, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v45 + 8))(v94, v16);
      }
      else
      {
        uint64_t v87 = v10;
        unint64_t v88 = v8;
        uint64_t v89 = v9;
        uint64_t v90 = v5;
        uint64_t v56 = *(void *)&v3[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_cellsViewModel];
        uint64_t v92 = v45;
        uint64_t v57 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 16);
        uint64_t v58 = v85;
        v57((uint64_t)v85, v51, v16);
        v57((uint64_t)v86, v58, v16);
        unint64_t v59 = (*(unsigned __int8 *)(v45 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
        unint64_t v60 = (v84 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v61 = swift_allocObject();
        uint64_t v91 = v3;
        *(void *)(v61 + 16) = v3;
        ((void (*)(unint64_t, char *, uint64_t))v102)(v61 + v59, v58, v16);
        uint64_t v62 = v96;
        *(void *)(v61 + v60) = v96;
        unint64_t v63 = v61 + ((v60 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(void *)unint64_t v63 = v56;
        char v64 = v95;
        char v65 = v95 & 1;
        *(unsigned char *)(v63 + 8) = v95 & 1;
        if (v83 < 0xB || (v64 & 1) != 0)
        {
          unint64_t v74 = v62;
          BOOL v75 = v91;
          swift_bridgeObjectRetain_n();
          uint64_t v76 = v75;
          uint64_t v77 = v86;
          sub_1004505A4(v76, v86, v62, v56, v65);
          swift_bridgeObjectRelease();
          swift_release();
          unint64_t v78 = *(void (**)(char *, uint64_t))(v92 + 8);
          v78(v77, v16);
          v78(v94, v16);
        }
        else
        {
          Swift::String v66 = *(void (**)(char *, uint64_t))(v92 + 8);
          swift_bridgeObjectRetain();
          uint64_t v67 = v62;
          uint64_t v68 = v91;
          v66(v86, v16);
          uint64_t v102 = *(char **)&v68[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_updateQueue];
          uint64_t v69 = swift_allocObject();
          *(void *)(v69 + 16) = sub_100456868;
          *(void *)(v69 + 24) = v61;
          aBlock[4] = sub_100024A68;
          aBlock[5] = v69;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_10003C410;
          aBlock[3] = &unk_10063CD58;
          BOOL v70 = _Block_copy(aBlock);
          swift_retain();
          uint64_t v71 = v80;
          static DispatchQoS.unspecified.getter();
          uint64_t v103 = _swiftEmptyArrayStorage;
          sub_100045BEC((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_10005D034((uint64_t *)&unk_1006AE4B0);
          sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
          unint64_t v72 = v88;
          uint64_t v73 = v90;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v70);
          swift_release();
          (*(void (**)(char *, uint64_t))(v81 + 8))(v72, v73);
          (*(void (**)(char *, uint64_t))(v87 + 8))(v71, v89);
          v66(v94, v16);
          swift_release();
        }
      }
    }
  }
}

uint64_t sub_1004505A4(void *a1, char *a2, UIImage *a3, uint64_t a4, char a5)
{
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v36 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  uint64_t v34 = *(void *)(v13 - 8);
  uint64_t v35 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100450D6C(a2, a3);
  swift_retain();
  uint64_t v17 = swift_bridgeObjectRetain();
  size_t v18 = sub_10035BE28(v17);
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_1005376C4(v18);
  swift_release();
  sub_10005E24C((uint64_t)v19);
  swift_release();
  swift_bridgeObjectRelease();
  if (sub_10024A9E4(v16, a4) & 1) == 0 || (a5)
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_1000606BC(v21, (uint64_t)qword_1006D1E98);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 134218240;
      aBlock[0] = *(void *)(v16 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2048;
      aBlock[0] = *(void *)(a4 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "FMMultipartEntityListDataSource: reloading table view new: %ld, old: %ld", (uint8_t *)v24, 0x16u);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v16;
    *(void *)(v25 + 24) = a1;
    id v26 = self;
    swift_bridgeObjectRetain();
    id v27 = a1;
    id v28 = [v26 currentThread];
    unsigned int v29 = [v28 isMainThread];

    if (v29)
    {
      sub_100450B24(v16, (uint64_t)v27);
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
      id v30 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v31 = swift_allocObject();
      *(void *)(v31 + 16) = sub_100456984;
      *(void *)(v31 + 24) = v25;
      aBlock[4] = sub_100046398;
      aBlock[5] = v31;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10003C410;
      aBlock[3] = &unk_10063CDD0;
      uint64_t v32 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_100045BEC((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10005D034((uint64_t *)&unk_1006AE4B0);
      sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v32);
      swift_release();

      (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v10);
      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v15, v35);
    }
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100450B24(uint64_t a1, uint64_t a2)
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000606BC(v4, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    sub_10005D034(&qword_1006AEFA0);
    uint64_t v8 = Array.debugDescription.getter();
    sub_1000606F4(v8, v9, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "FMMultipartEntityListDataSource: model update with %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *(void *)(a2 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_cellsViewModel) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10003A158();
  uint64_t v10 = a2 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v12 = *(void *)(v10 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v12 + 8))(a2, &off_10063CAE8, ObjectType, v12);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100450D6C(char *a1, UIImage *a2)
{
  v143 = a2;
  uint64_t v141 = type metadata accessor for FMIPDevice();
  int64_t v154 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  BOOL v140 = (char *)&v114 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FMDeviceCellViewModel();
  uint64_t v115 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v145 = (uint64_t)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v114 - v7);
  uint64_t v9 = sub_10005D034((uint64_t *)&unk_1006BEB20);
  __chkstk_darwin(v9 - 8);
  uint64_t v138 = (uint64_t)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  __chkstk_darwin(v11 - 8);
  v137 = (char *)&v114 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = type metadata accessor for FMIPSafeLocationType();
  uint64_t v153 = *(void **)(v136 - 8);
  __chkstk_darwin(v136);
  uint64_t v135 = (char *)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = type metadata accessor for FMIPDeviceImageSize();
  uint64_t v14 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  uint64_t v133 = (char *)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = type metadata accessor for FMIPItem();
  uint64_t v16 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  size_t v18 = (char *)&v114 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  v132 = (char *)&v114 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v114 - v23;
  __chkstk_darwin(v22);
  id v26 = (char *)&v114 - v25;
  uint64_t v27 = sub_10005D034(&qword_1006B36B0);
  __chkstk_darwin(v27 - 8);
  unsigned int v29 = (char *)&v114 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v158 = _swiftEmptyArrayStorage;
  uint64_t v157 = &_swiftEmptyDictionarySingleton;
  char v142 = a1;
  FMIPDevice.itemGroup.getter();
  uint64_t v155 = 0;
  uint64_t v30 = type metadata accessor for FMIPItemGroup();
  uint64_t v31 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) == 1)
  {
    sub_100003F10((uint64_t)v29, &qword_1006B36B0);
    uint64_t v32 = &_swiftEmptySetSingleton;
  }
  else
  {
    uint64_t v32 = (void *)FMIPItemGroup.groupedItems.getter();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v30);
  }
  int64_t v33 = 0;
  uint64_t v34 = v32[7];
  uint64_t v146 = (char *)(v32 + 7);
  uint64_t v35 = 1 << *((unsigned char *)v32 + 32);
  uint64_t v36 = -1;
  if (v35 < 64) {
    uint64_t v36 = ~(-1 << v35);
  }
  uint64_t v128 = OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_mediator;
  int64_t v147 = (unint64_t)(v35 + 63) >> 6;
  uint64_t v37 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v126 = (void (**)(char *, char *, uint64_t))(v16 + 32);
  unsigned int v125 = enum case for FMIPDeviceImageSize.list(_:);
  v124 = (void (**)(char *, void, uint64_t))(v14 + 104);
  char v123 = (void (**)(uint64_t, uint64_t))(v14 + 8);
  unsigned int v122 = enum case for FMIPSafeLocationType.home(_:);
  uint64_t v121 = (void (**)(char *, void, uint64_t))(v153 + 13);
  uint64_t v120 = (void (**)(uint64_t, uint64_t))(v153 + 1);
  unint64_t v119 = (void (**)(char *, char *, uint64_t))(v154 + 16);
  uint64_t v118 = (void (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v117 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56);
  uint64_t v116 = (void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v139 = v8;
  unint64_t v38 = v36 & v34;
  uint64_t v39 = v148;
  unint64_t v131 = v24;
  BOOL v130 = v26;
  uint64_t v129 = v32;
  uint64_t v127 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  while (1)
  {
    if (v38)
    {
      unint64_t v41 = __clz(__rbit64(v38));
      v38 &= v38 - 1;
      unint64_t v42 = v41 | (v33 << 6);
      goto LABEL_25;
    }
    int64_t v43 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
      __break(1u);
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
    if (v43 >= v147) {
      goto LABEL_39;
    }
    unint64_t v44 = *(void *)&v146[8 * v43];
    ++v33;
    if (!v44)
    {
      int64_t v33 = v43 + 1;
      if (v43 + 1 >= v147) {
        goto LABEL_39;
      }
      unint64_t v44 = *(void *)&v146[8 * v33];
      if (!v44)
      {
        int64_t v33 = v43 + 2;
        if (v43 + 2 >= v147) {
          goto LABEL_39;
        }
        unint64_t v44 = *(void *)&v146[8 * v33];
        if (!v44) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v38 = (v44 - 1) & v44;
    unint64_t v42 = __clz(__rbit64(v44)) + (v33 << 6);
LABEL_25:
    uint64_t v46 = *(void *)(v32[6] + 8 * v42);
    swift_bridgeObjectRetain();
    static FMIPItemGroup.primaryPart(group:)();
    sub_10010A088((uint64_t)v26, (uint64_t)v24);
    if ((*v37)(v24, 1, v39) == 1)
    {
      sub_100003F10((uint64_t)v26, (uint64_t *)&unk_1006AFE30);
      swift_bridgeObjectRelease();
      uint64_t v40 = (uint64_t)v24;
      goto LABEL_8;
    }
    (*v126)(v18, v24, v39);
    uint64_t v47 = FMIPItem.owner.getter();
    uint64_t v49 = v157[2];
    uint64_t v153 = (void *)v38;
    int64_t v154 = v33;
    if (v49)
    {
      sub_100053708(v47, v48);
      char v51 = v50;
      swift_bridgeObjectRelease();
      if (v51) {
        goto LABEL_31;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v52 = FMIPItem.owner.getter();
    uint64_t v54 = v53;
    uint64_t v55 = v157;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v156 = v55;
    uint64_t v157 = (void *)0x8000000000000000;
    sub_1001B8070((uint64_t)_swiftEmptyArrayStorage, v52, v54, isUniquelyReferenced_nonNull_native);
    uint64_t v157 = v156;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_31:
    uint64_t v57 = *(void *)(v144 + v128);
    uint64_t v58 = (uint64_t)v133;
    uint64_t v59 = v134;
    (*v124)(v133, v125, v134);
    swift_retain();
    unint64_t v60 = v142;
    id v151 = (id)sub_1001C2C24(v46, v142, v58, 0, 0);
    swift_release();
    (*v123)(v58, v59);
    swift_retain();
    uint64_t v152 = (void *)FMIPManager.familyMembers.getter();
    swift_release();
    uint64_t v61 = (uint64_t)v135;
    uint64_t v62 = v136;
    (*v121)(v135, v122, v136);
    swift_retain();
    uint64_t v63 = (uint64_t)v137;
    FMIPItem.location.getter();
    char v64 = v18;
    uint64_t v65 = v138;
    sub_1000D95CC(v61, v63, v138);
    uint64_t v66 = type metadata accessor for FMIPSafeLocation();
    BOOL v150 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 48))(v65, 1, v66) != 1;
    sub_100003F10(v65, (uint64_t *)&unk_1006BEB20);
    swift_release();
    sub_100003F10(v63, (uint64_t *)&unk_1006B2AE0);
    (*v120)(v61, v62);
    uint64_t v67 = (uint64_t)v140;
    (*v119)(v140, v60, v141);
    uint64_t v68 = (uint64_t)v132;
    uint64_t v39 = v148;
    (*v118)(v132, v64, v148);
    (*v117)(v68, 0, 1, v39);
    LOBYTE(v65) = *(unsigned char *)(*(void *)(v57 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_limitedPrecision);
    id v69 = v151;
    id v149 = v151;
    BOOL v70 = v143;
    uint64_t v71 = v143;
    swift_retain();
    unint64_t v72 = sub_1004AE8FC(v46);
    swift_bridgeObjectRelease();
    BOOL v73 = (v65 & 1) == 0;
    unint64_t v74 = v139;
    sub_10032152C((NSString *)v57, v67, v68, v69, v70, v73, (uint64_t)v152, v150, v139, v72, 1);
    uint64_t v75 = FMIPItem.owner.getter();
    unint64_t v78 = sub_1004C185C(&v156, v75, v76);
    if (*v77)
    {
      uint64_t v79 = v77;
      id v80 = v149;
      sub_100057A9C((uint64_t)v74, v145, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
      unint64_t v81 = *v79;
      char v82 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v79 = v81;
      int64_t v33 = v154;
      if ((v82 & 1) == 0)
      {
        unint64_t v81 = sub_10007D480(0, *(void *)(v81 + 16) + 1, 1, v81);
        *uint64_t v79 = v81;
      }
      unint64_t v84 = *(void *)(v81 + 16);
      unint64_t v83 = *(void *)(v81 + 24);
      if (v84 >= v83 >> 1)
      {
        unint64_t v81 = sub_10007D480(v83 > 1, v84 + 1, 1, v81);
        *uint64_t v79 = v81;
      }
      *(void *)(v81 + 16) = v84 + 1;
      sub_10033BD90(v145, v81+ ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80))+ *(void *)(v115 + 72) * v84);
      ((void (*)(void **, void))v78)(&v156, 0);
      swift_bridgeObjectRelease();

      sub_100057ED4((uint64_t)v74, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
      size_t v18 = v64;
      uint64_t v39 = v148;
      (*v116)(v64, v148);
      id v26 = v130;
      uint64_t v40 = (uint64_t)v130;
      uint64_t v24 = v131;
      uint64_t v32 = v129;
    }
    else
    {
      ((void (*)(void **, void))v78)(&v156, 0);
      swift_bridgeObjectRelease();

      sub_100057ED4((uint64_t)v74, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
      (*v116)(v64, v39);
      id v26 = v130;
      uint64_t v40 = (uint64_t)v130;
      size_t v18 = v64;
      uint64_t v24 = v131;
      uint64_t v32 = v129;
      int64_t v33 = v154;
    }
    uint64_t v37 = v127;
    unint64_t v38 = (unint64_t)v153;
LABEL_8:
    sub_100003F10(v40, (uint64_t *)&unk_1006AFE30);
  }
  int64_t v45 = v43 + 3;
  if (v45 >= v147)
  {
LABEL_39:
    swift_release();
    uint64_t v85 = v157;
    uint64_t v86 = v157[8];
    uint64_t v153 = v157 + 8;
    uint64_t v87 = 1 << *((unsigned char *)v157 + 32);
    uint64_t v88 = -1;
    if (v87 < 64) {
      uint64_t v88 = ~(-1 << v87);
    }
    unint64_t v89 = v88 & v86;
    int64_t v154 = (unint64_t)(v87 + 63) >> 6;
    swift_bridgeObjectRetain();
    int64_t v90 = 0;
    uint64_t v152 = _swiftEmptyArrayStorage;
    if (!v89) {
      goto LABEL_45;
    }
LABEL_42:
    while (2)
    {
      unint64_t v91 = __clz(__rbit64(v89));
      v89 &= v89 - 1;
      for (unint64_t i = v91 | (v90 << 6); ; unint64_t i = __clz(__rbit64(v94)) + (v90 << 6))
      {
        uint64_t v96 = (uint64_t *)(v85[6] + 16 * i);
        uint64_t v98 = *v96;
        uint64_t v97 = v96[1];
        uint64_t v156 = *(void **)(v85[7] + 8 * i);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v99 = v155;
        sub_100452C14(&v156);
        uint64_t v155 = v99;
        if (v99) {
          goto LABEL_79;
        }
        swift_bridgeObjectRelease();
        uint64_t v100 = v156;
        id v101 = [self SPOwner];
        id v102 = [v101 destination];

        uint64_t v103 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v105 = v104;

        if (v98 == v103 && v97 == v105) {
          break;
        }
        char v107 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v107) {
          goto LABEL_44;
        }
        uint64_t v108 = v158;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v108 = sub_10007D46C(0, v108[2] + 1, 1, v108);
        }
        unint64_t v110 = v108[2];
        unint64_t v109 = v108[3];
        if (v110 >= v109 >> 1) {
          uint64_t v108 = sub_10007D46C((void *)(v109 > 1), v110 + 1, 1, v108);
        }
        v108[2] = v110 + 1;
        v108[v110 + 4] = v100;
        unint64_t v158 = v108;
        if (v89) {
          goto LABEL_42;
        }
LABEL_45:
        if (__OFADD__(v90++, 1)) {
          goto LABEL_76;
        }
        if (v90 >= v154)
        {
LABEL_73:
          uint64_t v111 = v155;
          swift_release();
          uint64_t v156 = v158;
          swift_bridgeObjectRetain_n();
          sub_100337174(&v156);
          if (v111) {
            goto LABEL_79;
          }
          swift_bridgeObjectRelease_n();
          unint64_t v158 = v156;
          sub_100257E38(0, 0, (uint64_t)v152);
          uint64_t v112 = v158;
          swift_bridgeObjectRelease();
          return (uint64_t)v112;
        }
        unint64_t v94 = v153[v90];
        if (!v94)
        {
          int64_t v95 = v90 + 1;
          if (v90 + 1 >= v154) {
            goto LABEL_73;
          }
          unint64_t v94 = v153[v95];
          if (!v94)
          {
            int64_t v95 = v90 + 2;
            if (v90 + 2 >= v154) {
              goto LABEL_73;
            }
            unint64_t v94 = v153[v95];
            if (!v94)
            {
              int64_t v95 = v90 + 3;
              if (v90 + 3 >= v154) {
                goto LABEL_73;
              }
              unint64_t v94 = v153[v95];
              if (!v94)
              {
                while (1)
                {
                  int64_t v90 = v95 + 1;
                  if (__OFADD__(v95, 1)) {
                    goto LABEL_78;
                  }
                  if (v90 >= v154) {
                    goto LABEL_73;
                  }
                  unint64_t v94 = v153[v90];
                  ++v95;
                  if (v94) {
                    goto LABEL_55;
                  }
                }
              }
            }
          }
          int64_t v90 = v95;
        }
LABEL_55:
        unint64_t v89 = (v94 - 1) & v94;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_44:
      swift_bridgeObjectRelease();
      uint64_t v152 = v100;
      if (v89) {
        continue;
      }
      goto LABEL_45;
    }
  }
  unint64_t v44 = *(void *)&v146[8 * v45];
  if (v44)
  {
    int64_t v33 = v45;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v33 = v45 + 1;
    if (__OFADD__(v45, 1)) {
      break;
    }
    if (v33 >= v147) {
      goto LABEL_39;
    }
    unint64_t v44 = *(void *)&v146[8 * v33];
    ++v45;
    if (v44) {
      goto LABEL_24;
    }
  }
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

BOOL sub_100451DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FMIPItemState();
  uint64_t v75 = *(void (**)(char *, uint64_t))(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  unint64_t v74 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  BOOL v73 = (char *)&v67 - v8;
  uint64_t v9 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v67 - v13;
  uint64_t v15 = type metadata accessor for FMIPItem();
  uint64_t v83 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v77 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  unint64_t v78 = (char *)&v67 - v19;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v67 - v20;
  uint64_t v22 = type metadata accessor for FMDeviceCellViewModel();
  uint64_t v23 = *(int *)(v22 + 60);
  double v24 = *(double *)(a1 + v23);
  double v25 = *(double *)(a2 + v23);
  BOOL v26 = v24 < v25;
  if (v24 != v25) {
    return v26;
  }
  uint64_t v72 = v5;
  uint64_t v76 = v2;
  uint64_t v27 = v22;
  sub_10010A088(a1 + *(int *)(v22 + 24), (uint64_t)v14);
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48);
  if (v28(v14, 1, v15) == 1)
  {
    sub_100003F10((uint64_t)v14, (uint64_t *)&unk_1006AFE30);
    uint64_t v29 = v27;
    goto LABEL_11;
  }
  uint64_t v69 = a1;
  uint64_t v30 = v14;
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v83 + 32);
  v31(v21, v30, v15);
  uint64_t v70 = a2;
  uint64_t v71 = v27;
  sub_10010A088(a2 + *(int *)(v27 + 24), (uint64_t)v12);
  if (v28(v12, 1, v15) == 1)
  {
    (*(void (**)(char *, uint64_t))(v83 + 8))(v21, v15);
    sub_100003F10((uint64_t)v12, (uint64_t *)&unk_1006AFE30);
    a1 = v69;
    a2 = v70;
LABEL_10:
    uint64_t v29 = v71;
    goto LABEL_11;
  }
  uint64_t v32 = v78;
  v31(v78, v12, v15);
  int64_t v33 = v73;
  uint64_t v68 = v21;
  FMIPItem.state.getter();
  uint64_t v34 = v74;
  static FMIPItemState.isBTConnected.getter();
  uint64_t v35 = sub_100045BEC((unint64_t *)&qword_1006BEB30, (void (*)(uint64_t))&type metadata accessor for FMIPItemState);
  uint64_t v36 = v72;
  uint64_t v67 = v35;
  char v37 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  unint64_t v38 = (void (*)(char *, uint64_t))*((void *)v75 + 1);
  uint64_t v39 = v34;
  v38(v34, v36);
  uint64_t v75 = v38;
  v38(v33, v36);
  uint64_t v40 = v77;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v77, v32, v15);
  unint64_t v41 = v40;
  a1 = v69;
  a2 = v70;
  if ((v37 & 1) == 0)
  {
    uint64_t v46 = *(void (**)(char *, uint64_t))(v83 + 8);
    v46(v41, v15);
    v46(v78, v15);
    v46(v68, v15);
    goto LABEL_10;
  }
  FMIPItem.state.getter();
  static FMIPItemState.isBTConnected.getter();
  char v42 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  int64_t v43 = v39;
  unint64_t v44 = v75;
  v75(v43, v36);
  v44(v33, v36);
  int64_t v45 = *(void (**)(char *, uint64_t))(v83 + 8);
  v45(v77, v15);
  v45(v78, v15);
  v45(v68, v15);
  uint64_t v29 = v71;
  if (v42) {
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v47 = *(int *)(v29 + 56);
  double v48 = *(double *)(a1 + v47);
  double v49 = *(double *)(a2 + v47);
  BOOL v26 = v48 < v49;
  if (v48 == v49)
  {
LABEL_12:
    char v50 = (uint64_t *)(a1 + *(int *)(v29 + 68));
    uint64_t v51 = v50[1];
    uint64_t v52 = v29;
    uint64_t v54 = *(void *)(a1 + 16);
    uint64_t v53 = *(void **)(a1 + 24);
    uint64_t v81 = *v50;
    uint64_t v82 = v51;
    swift_bridgeObjectRetain();
    v55._uint64_t countAndFlagsBits = v54;
    v55._object = v53;
    String.append(_:)(v55);
    uint64_t v57 = v81;
    uint64_t v56 = v82;
    uint64_t v58 = (uint64_t *)(a2 + *(int *)(v52 + 68));
    uint64_t v59 = v58[1];
    uint64_t v60 = *(void *)(a2 + 16);
    uint64_t v61 = *(void **)(a2 + 24);
    uint64_t v81 = *v58;
    uint64_t v82 = v59;
    swift_bridgeObjectRetain();
    v62._uint64_t countAndFlagsBits = v60;
    v62._object = v61;
    String.append(_:)(v62);
    uint64_t v63 = v81;
    uint64_t v64 = v82;
    uint64_t v81 = v57;
    uint64_t v82 = v56;
    uint64_t v79 = v63;
    uint64_t v80 = v64;
    sub_100059EB8();
    uint64_t v65 = StringProtocol.caseInsensitiveCompare<A>(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v65 == -1;
  }
  return v26;
}

uint64_t sub_1004523A8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FMSelectedSection();
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v32 - v7;
  uint64_t v9 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)v32 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v32 - v16;
  uint64_t v34 = v1;
  sub_10044E3B4(a1, (uint64_t)v32 - v16);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_1000606BC(v18, (uint64_t)qword_1006D1E98);
  sub_10010A088((uint64_t)v17, (uint64_t)v15);
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    int64_t v33 = v6;
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    v32[0] = v17;
    v36[0] = v22;
    v32[1] = v3;
    *(_DWORD *)uint64_t v21 = 136315138;
    sub_10010A088((uint64_t)v15, (uint64_t)v12);
    uint64_t v23 = String.init<A>(describing:)();
    uint64_t v35 = sub_1000606F4(v23, v24, v36);
    uint64_t v6 = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100003F10((uint64_t)v15, (uint64_t *)&unk_1006AFE30);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMMultipartEntityListDataSource: select at indexPath, selectedPart?: %s", v21, 0xCu);
    swift_arrayDestroy();
    uint64_t v17 = (char *)v32[0];
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100003F10((uint64_t)v15, (uint64_t *)&unk_1006AFE30);
  }

  uint64_t v25 = v34;
  uint64_t v26 = *(void *)(*(void *)(v34 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_mediator) + 56);
  uint64_t v27 = (uint64_t)&v8[*(int *)(sub_10005D034(&qword_1006BAF00) + 48)];
  uint64_t v28 = v25 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_selectedDevice;
  uint64_t v29 = type metadata accessor for FMIPDevice();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v8, v28, v29);
  sub_10010A088((uint64_t)v17, v27);
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = v26 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100057A9C(v30, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  swift_beginAccess();
  swift_retain();
  sub_100009A88((uint64_t)v8, v30);
  swift_endAccess();
  sub_100053CA0((unint64_t)v6);
  sub_100057ED4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_100057ED4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  swift_release();
  swift_retain();
  FMIPManager.updateLastActiveTimestamp()();
  swift_release();
  return sub_100003F10((uint64_t)v17, (uint64_t *)&unk_1006AFE30);
}

id sub_100452814()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMMultipartEntityListDataSource();
  return [super dealloc];
}

uint64_t sub_100452960()
{
  return type metadata accessor for FMMultipartEntityListDataSource();
}

uint64_t type metadata accessor for FMMultipartEntityListDataSource()
{
  uint64_t result = qword_1006BEC20;
  if (!qword_1006BEC20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1004529B4()
{
  uint64_t result = type metadata accessor for FMIPDevice();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100452AA0(uint64_t a1, uint64_t a2)
{
  return sub_100455260(a2);
}

void sub_100452AA8(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_100452AB4(uint64_t a1, uint64_t a2)
{
  return sub_1004562D4(a2);
}

void sub_100452ABC()
{
}

uint64_t sub_100452AC4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource__listTitle);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_100452B00(char a1)
{
  char v2 = *(unsigned char *)(v1 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_updatesEnabled);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_updatesEnabled) = a1;
  sub_10044DDA8(v2);
}

uint64_t sub_100452B18()
{
  swift_retain();
  char v0 = FMIPManager.isInitialized.getter();
  swift_release();
  return v0 & 1;
}

uint64_t sub_100452B64(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

uint64_t sub_100452BB0(uint64_t a1, void *a2)
{
  id v4 = objc_allocWithZone((Class)type metadata accessor for FMMultipartEntityListDataSource());
  uint64_t v5 = sub_100455AC0(a1, a2);
  swift_release();

  return v5;
}

Swift::Int sub_100452C14(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for FMDeviceCellViewModel() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_100268898(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_100452CBC(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_100452CBC(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for FMIPItemState();
  uint64_t v286 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  v262 = (char *)&v242 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v265 = (char *)&v242 - v5;
  uint64_t v6 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v242 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v273 = (uint64_t)&v242 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v242 - v13;
  __chkstk_darwin(v12);
  uint64_t v250 = (uint64_t)&v242 - v15;
  uint64_t v275 = type metadata accessor for FMIPItem();
  uint64_t v16 = *(void *)(v275 - 8);
  uint64_t v17 = __chkstk_darwin(v275);
  uint64_t v19 = (char *)&v242 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  v269 = (char *)&v242 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v277 = (char *)&v242 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v247 = (char *)&v242 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v282 = (char *)&v242 - v27;
  __chkstk_darwin(v26);
  v251 = (char *)&v242 - v28;
  v280 = (int *)type metadata accessor for FMDeviceCellViewModel();
  uint64_t v29 = *((void *)v280 - 1);
  uint64_t v30 = __chkstk_darwin(v280);
  uint64_t v254 = (uint64_t)&v242 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v283 = (uint64_t)&v242 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v281 = (uint64_t)&v242 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  v276 = (char *)&v242 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v40 = (char *)&v242 - v39;
  uint64_t v41 = __chkstk_darwin(v38);
  uint64_t v256 = (uint64_t)&v242 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v246 = (uint64_t)&v242 - v44;
  __chkstk_darwin(v43);
  uint64_t v46 = (char *)&v242 - v45;
  v291 = a1;
  Swift::Int v47 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v47);
  Swift::Int v249 = result;
  if (result >= v47)
  {
    if (v47 < 0) {
      goto LABEL_175;
    }
    if (v47) {
      return sub_100454410(0, v47, 1, v291);
    }
    return result;
  }
  if (v47 >= 0) {
    uint64_t v49 = v47;
  }
  else {
    uint64_t v49 = v47 + 1;
  }
  if (v47 < -1) {
    goto LABEL_183;
  }
  uint64_t v261 = v2;
  v264 = v19;
  v253 = v40;
  if (v47 < 2)
  {
    uint64_t v54 = _swiftEmptyArrayStorage;
    unint64_t v258 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
    if (v47 != 1)
    {
      unint64_t v185 = _swiftEmptyArrayStorage[2];
      uint64_t v56 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_140;
    }
    uint64_t v50 = 1;
    v243 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v50 = v47;
    uint64_t v51 = v49 >> 1;
    uint64_t v52 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v52 + 16) = v51;
    unint64_t v53 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    v243 = (void *)v52;
    unint64_t v258 = v52 + v53;
  }
  uint64_t v55 = 0;
  v274 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  v260 = (void (**)(char *, uint64_t))(v286 + 8);
  v259 = (void (**)(char *, char *, uint64_t))(v16 + 16);
  v270 = (void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v56 = (char *)_swiftEmptyArrayStorage;
  v268 = v9;
  v248 = v14;
  uint64_t v57 = v282;
  v257 = v46;
  uint64_t v58 = v50;
  uint64_t v244 = v29;
  v271 = (void (**)(char *, uint64_t, uint64_t))(v16 + 32);
  do
  {
    uint64_t v59 = v55;
    uint64_t v60 = v55 + 1;
    uint64_t v255 = v55;
    uint64_t v61 = v58;
    if (v55 + 1 >= v58) {
      goto LABEL_88;
    }
    uint64_t v62 = *v291;
    uint64_t v63 = *(void *)(v29 + 72);
    sub_100057A9C(*v291 + v63 * v60, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
    uint64_t v278 = v62;
    uint64_t v286 = v63;
    uint64_t v64 = v246;
    sub_100057A9C(v62 + v63 * v59, v246, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
    uint64_t v65 = v266;
    BOOL v66 = sub_100451DD8((uint64_t)v46, v64);
    uint64_t v67 = (uint64_t)v276;
    uint64_t v266 = v65;
    if (v65)
    {
      sub_100057ED4(v64, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
      sub_100057ED4((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
      goto LABEL_153;
    }
    BOOL v68 = v66;
    sub_100057ED4(v64, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
    sub_100057ED4((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
    uint64_t v69 = v59 + 2;
    uint64_t v263 = v61;
    if (v59 + 2 >= v61)
    {
      uint64_t v60 = v59 + 2;
      goto LABEL_40;
    }
    v242 = v56;
    uint64_t v70 = v278;
    uint64_t v284 = v286 * v69;
    uint64_t v285 = v286 * v60;
    uint64_t v71 = (uint64_t)v253;
    LODWORD(v279) = v68;
    while (1)
    {
      uint64_t v272 = v69;
      uint64_t v72 = v256;
      sub_100057A9C(v70 + v284, v256, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
      sub_100057A9C(v70 + v285, v71, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
      uint64_t v73 = v71;
      unint64_t v74 = v280;
      uint64_t v75 = v280[15];
      double v76 = *(double *)(v72 + v75);
      double v77 = *(double *)(v73 + v75);
      if (v76 != v77)
      {
        BOOL v81 = v76 < v77;
        uint64_t v71 = (uint64_t)v253;
        goto LABEL_33;
      }
      uint64_t v78 = v250;
      sub_10010A088(v72 + v280[6], v250);
      uint64_t v79 = v275;
      uint64_t v80 = *v274;
      if ((*v274)(v78, 1, v275) == 1)
      {
        sub_100003F10(v78, (uint64_t *)&unk_1006AFE30);
        uint64_t v71 = (uint64_t)v253;
        uint64_t v72 = v256;
      }
      else
      {
        v267 = *v271;
        v267(v251, v78, v79);
        uint64_t v82 = v74[6];
        uint64_t v71 = (uint64_t)v253;
        uint64_t v83 = (uint64_t)v248;
        sub_10010A088((uint64_t)&v253[v82], (uint64_t)v248);
        if (v80(v83, 1, v79) == 1)
        {
          (*v270)(v251, v79);
          sub_100003F10(v83, (uint64_t *)&unk_1006AFE30);
        }
        else
        {
          v267(v57, v83, v79);
          unint64_t v84 = v265;
          FMIPItem.state.getter();
          uint64_t v85 = v262;
          static FMIPItemState.isBTConnected.getter();
          uint64_t v86 = sub_100045BEC((unint64_t *)&qword_1006BEB30, (void (*)(uint64_t))&type metadata accessor for FMIPItemState);
          uint64_t v87 = v261;
          uint64_t v245 = v86;
          LODWORD(v267) = dispatch thunk of SetAlgebra.isSuperset(of:)();
          uint64_t v88 = *v260;
          (*v260)(v85, v87);
          v252 = v88;
          v88(v84, v87);
          unint64_t v89 = v247;
          (*v259)(v247, v57, v79);
          if (v267)
          {
            int64_t v90 = v265;
            FMIPItem.state.getter();
            static FMIPItemState.isBTConnected.getter();
            char v91 = dispatch thunk of SetAlgebra.isSuperset(of:)();
            uint64_t v92 = v252;
            v252(v85, v87);
            v92(v90, v87);
            uint64_t v93 = *v270;
            unint64_t v94 = v89;
            uint64_t v95 = v275;
            (*v270)(v94, v275);
            uint64_t v57 = v282;
            v93(v282, v95);
            v93(v251, v95);
            uint64_t v67 = (uint64_t)v276;
            uint64_t v72 = v256;
            uint64_t v61 = v263;
            if (v91) {
              goto LABEL_30;
            }
            goto LABEL_29;
          }
          uint64_t v96 = *v270;
          uint64_t v97 = v275;
          (*v270)(v89, v275);
          uint64_t v57 = v282;
          v96(v282, v97);
          v96(v251, v97);
          uint64_t v67 = (uint64_t)v276;
        }
        uint64_t v72 = v256;
        uint64_t v61 = v263;
      }
LABEL_29:
      uint64_t v98 = v280[14];
      double v99 = *(double *)(v72 + v98);
      double v100 = *(double *)(v71 + v98);
      if (v99 != v100)
      {
        BOOL v81 = v99 < v100;
        goto LABEL_32;
      }
LABEL_30:
      id v101 = v280;
      id v102 = (uint64_t *)(v72 + v280[17]);
      uint64_t v103 = v102[1];
      uint64_t v104 = *(void *)(v72 + 16);
      uint64_t v105 = *(void **)(v72 + 24);
      uint64_t v289 = *v102;
      uint64_t v290 = v103;
      swift_bridgeObjectRetain();
      v106._uint64_t countAndFlagsBits = v104;
      v106._object = v105;
      String.append(_:)(v106);
      uint64_t v107 = v289;
      uint64_t v108 = v290;
      uint64_t v109 = v101[17];
      uint64_t v67 = (uint64_t)v276;
      unint64_t v110 = (uint64_t *)(v71 + v109);
      uint64_t v111 = v110[1];
      uint64_t v112 = *(void *)(v71 + 16);
      v113 = *(void **)(v71 + 24);
      uint64_t v289 = *v110;
      uint64_t v290 = v111;
      swift_bridgeObjectRetain();
      v114._uint64_t countAndFlagsBits = v112;
      v114._object = v113;
      String.append(_:)(v114);
      uint64_t v115 = v289;
      uint64_t v116 = v290;
      uint64_t v289 = v107;
      uint64_t v290 = v108;
      uint64_t v287 = v115;
      uint64_t v288 = v116;
      sub_100059EB8();
      uint64_t v117 = StringProtocol.caseInsensitiveCompare<A>(_:)();
      swift_bridgeObjectRelease();
      uint64_t v57 = v282;
      swift_bridgeObjectRelease();
      BOOL v81 = v117 == -1;
LABEL_32:
      BOOL v68 = v279;
LABEL_33:
      sub_100057ED4(v71, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
      sub_100057ED4(v72, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
      if ((v68 ^ v81)) {
        break;
      }
      uint64_t v69 = v272 + 1;
      v70 += v286;
      if (v61 == v272 + 1)
      {
        uint64_t v60 = v61;
        uint64_t v56 = v242;
        uint64_t v46 = v257;
        goto LABEL_39;
      }
    }
    uint64_t v56 = v242;
    uint64_t v46 = v257;
    uint64_t v60 = v272;
LABEL_39:
    uint64_t v59 = v255;
LABEL_40:
    Swift::Int v118 = v249;
    if (!v68) {
      goto LABEL_53;
    }
    if (v60 < v59) {
      goto LABEL_178;
    }
    if (v59 >= v60)
    {
LABEL_53:
      uint64_t v29 = v244;
      if (v60 >= v61) {
        goto LABEL_88;
      }
      goto LABEL_56;
    }
    uint64_t v119 = v60;
    uint64_t v120 = 0;
    uint64_t v121 = v286 * (v119 - 1);
    uint64_t v122 = v59;
    uint64_t v123 = v119 * v286;
    uint64_t v124 = v122;
    uint64_t v125 = v122 * v286;
    uint64_t v272 = v119;
    do
    {
      if (v124 != v119 + v120 - 1)
      {
        uint64_t v126 = v278;
        if (!v278) {
          goto LABEL_181;
        }
        unint64_t v127 = v278 + v125;
        sub_10033BD90(v278 + v125, v254);
        if (v125 < v121 || v127 >= v126 + v123)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v125 != v121)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        sub_10033BD90(v254, v126 + v121);
        uint64_t v57 = v282;
      }
      ++v124;
      --v120;
      uint64_t v119 = v272;
      v121 -= v286;
      v123 -= v286;
      v125 += v286;
    }
    while (v124 < v272 + v120);
    uint64_t v29 = v244;
    uint64_t v67 = (uint64_t)v276;
    uint64_t v46 = v257;
    Swift::Int v118 = v249;
    uint64_t v60 = v272;
    uint64_t v59 = v255;
    uint64_t v61 = v263;
    if (v272 >= v263) {
      goto LABEL_88;
    }
LABEL_56:
    if (__OFSUB__(v60, v59)) {
      goto LABEL_174;
    }
    if (v60 - v59 >= v118) {
      goto LABEL_88;
    }
    if (__OFADD__(v59, v118)) {
      goto LABEL_176;
    }
    if (v59 + v118 >= v61) {
      uint64_t v128 = (void (*)(char *, uint64_t))v61;
    }
    else {
      uint64_t v128 = (void (*)(char *, uint64_t))(v59 + v118);
    }
    if ((uint64_t)v128 < v59)
    {
LABEL_177:
      __break(1u);
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
LABEL_180:
      __break(1u);
LABEL_181:
      __break(1u);
LABEL_182:
      __break(1u);
LABEL_183:
      Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
    if ((void (*)(char *, uint64_t))v60 == v128) {
      goto LABEL_88;
    }
    v242 = v56;
    uint64_t v129 = *(void *)(v29 + 72);
    uint64_t v130 = v129 * (v60 - 1);
    uint64_t v278 = v129;
    uint64_t v286 = v60 * v129;
    unint64_t v131 = v280;
    v252 = v128;
    while (2)
    {
      uint64_t v132 = 0;
      uint64_t v272 = v60;
      uint64_t v279 = v130;
      while (2)
      {
        uint64_t v133 = *v291;
        uint64_t v285 = v286 + v132;
        sub_100057A9C(v286 + v132 + v133, v67, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
        uint64_t v284 = v130 + v132;
        uint64_t v134 = v130 + v132 + v133;
        uint64_t v135 = v281;
        sub_100057A9C(v134, v281, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
        uint64_t v136 = v131[15];
        double v137 = *(double *)(v67 + v136);
        double v138 = *(double *)(v135 + v136);
        if (v137 == v138)
        {
          uint64_t v139 = v67 + v131[6];
          BOOL v140 = v131;
          uint64_t v141 = v273;
          sub_10010A088(v139, v273);
          uint64_t v142 = v275;
          v143 = *v274;
          if ((*v274)(v141, 1, v275) == 1)
          {
            sub_100003F10(v141, (uint64_t *)&unk_1006AFE30);
            unint64_t v131 = v140;
            uint64_t v67 = (uint64_t)v276;
            goto LABEL_80;
          }
          uint64_t v146 = v141;
          uint64_t v147 = v135;
          uint64_t v148 = *v271;
          (*v271)(v277, v146, v142);
          uint64_t v149 = v147 + v140[6];
          uint64_t v150 = (uint64_t)v268;
          sub_10010A088(v149, (uint64_t)v268);
          if (v143(v150, 1, v142) == 1)
          {
            (*v270)(v277, v142);
            sub_100003F10(v150, (uint64_t *)&unk_1006AFE30);
            goto LABEL_79;
          }
          id v151 = v269;
          v148(v269, v150, v142);
          uint64_t v152 = v265;
          FMIPItem.state.getter();
          uint64_t v153 = v262;
          static FMIPItemState.isBTConnected.getter();
          uint64_t v154 = sub_100045BEC((unint64_t *)&qword_1006BEB30, (void (*)(uint64_t))&type metadata accessor for FMIPItemState);
          uint64_t v155 = v261;
          uint64_t v263 = v154;
          LODWORD(v267) = dispatch thunk of SetAlgebra.isSuperset(of:)();
          uint64_t v156 = *v260;
          (*v260)(v153, v155);
          v156(v152, v155);
          uint64_t v157 = v264;
          (*v259)(v264, v151, v142);
          if (v267)
          {
            unint64_t v158 = v265;
            FMIPItem.state.getter();
            static FMIPItemState.isBTConnected.getter();
            char v159 = dispatch thunk of SetAlgebra.isSuperset(of:)();
            v156(v153, v155);
            v156(v158, v155);
            v160 = *v270;
            (*v270)(v264, v142);
            v160(v269, v142);
            v160(v277, v142);
            unint64_t v131 = v280;
            uint64_t v135 = v281;
            uint64_t v67 = (uint64_t)v276;
            uint64_t v60 = v272;
            if (v159)
            {
LABEL_81:
              uint64_t v166 = (uint64_t *)(v67 + v131[17]);
              uint64_t v167 = v166[1];
              uint64_t v168 = *(void *)(v67 + 16);
              uint64_t v169 = *(void **)(v67 + 24);
              uint64_t v289 = *v166;
              uint64_t v290 = v167;
              swift_bridgeObjectRetain();
              v170._uint64_t countAndFlagsBits = v168;
              v170._object = v169;
              String.append(_:)(v170);
              uint64_t v171 = v289;
              uint64_t v172 = v290;
              v173 = (uint64_t *)(v135 + v280[17]);
              uint64_t v174 = v173[1];
              uint64_t v144 = v135;
              uint64_t v175 = *(void *)(v135 + 16);
              v176 = *(void **)(v135 + 24);
              uint64_t v289 = *v173;
              uint64_t v290 = v174;
              swift_bridgeObjectRetain();
              v177._uint64_t countAndFlagsBits = v175;
              v177._object = v176;
              String.append(_:)(v177);
              uint64_t v178 = v289;
              uint64_t v179 = v290;
              uint64_t v289 = v171;
              uint64_t v290 = v172;
              unint64_t v131 = v280;
              uint64_t v287 = v178;
              uint64_t v288 = v179;
              sub_100059EB8();
              uint64_t v180 = StringProtocol.caseInsensitiveCompare<A>(_:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              BOOL v145 = v180 == -1;
              goto LABEL_83;
            }
          }
          else
          {
            uint64_t v161 = v157;
            v162 = *v270;
            (*v270)(v161, v142);
            v162(v269, v142);
            v162(v277, v142);
LABEL_79:
            unint64_t v131 = v280;
            uint64_t v135 = v281;
            uint64_t v67 = (uint64_t)v276;
            uint64_t v60 = v272;
          }
LABEL_80:
          uint64_t v163 = v131[14];
          double v164 = *(double *)(v67 + v163);
          double v165 = *(double *)(v135 + v163);
          if (v164 == v165) {
            goto LABEL_81;
          }
          uint64_t v144 = v135;
          BOOL v145 = v164 < v165;
LABEL_83:
          uint64_t v57 = v282;
        }
        else
        {
          uint64_t v144 = v135;
          BOOL v145 = v137 < v138;
        }
        sub_100057ED4(v144, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
        sub_100057ED4(v67, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
        if (v145)
        {
          uint64_t v181 = *v291;
          uint64_t v130 = v279;
          if (!*v291) {
            goto LABEL_179;
          }
          uint64_t v182 = v181 + v279 + v132;
          sub_10033BD90(v181 + v286 + v132, v283);
          swift_arrayInitWithTakeFrontToBack();
          sub_10033BD90(v283, v182);
          v132 -= v278;
          ++v59;
          uint64_t v57 = v282;
          if (v60 == v59) {
            goto LABEL_66;
          }
          continue;
        }
        break;
      }
      uint64_t v130 = v279;
LABEL_66:
      ++v60;
      v130 += v278;
      v286 += v278;
      uint64_t v59 = v255;
      if ((void (*)(char *, uint64_t))v60 != v252) {
        continue;
      }
      break;
    }
    uint64_t v60 = (uint64_t)v252;
    uint64_t v29 = v244;
    uint64_t v56 = v242;
    uint64_t v46 = v257;
LABEL_88:
    if (v60 < v59) {
      goto LABEL_170;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v56 = sub_100268068(0, *((void *)v56 + 2) + 1, 1, v56);
    }
    unint64_t v184 = *((void *)v56 + 2);
    unint64_t v183 = *((void *)v56 + 3);
    unint64_t v185 = v184 + 1;
    uint64_t v272 = v60;
    if (v184 >= v183 >> 1) {
      uint64_t v56 = sub_100268068((char *)(v183 > 1), v184 + 1, 1, v56);
    }
    *((void *)v56 + 2) = v185;
    v186 = v56 + 32;
    v187 = &v56[16 * v184 + 32];
    uint64_t v188 = v272;
    *(void *)v187 = v59;
    *((void *)v187 + 1) = v188;
    if (v184)
    {
      while (2)
      {
        unint64_t v189 = v185 - 1;
        if (v185 >= 4)
        {
          uint64_t v194 = &v186[16 * v185];
          uint64_t v195 = *((void *)v194 - 8);
          uint64_t v196 = *((void *)v194 - 7);
          BOOL v200 = __OFSUB__(v196, v195);
          uint64_t v197 = v196 - v195;
          if (v200) {
            goto LABEL_158;
          }
          uint64_t v199 = *((void *)v194 - 6);
          uint64_t v198 = *((void *)v194 - 5);
          BOOL v200 = __OFSUB__(v198, v199);
          uint64_t v192 = v198 - v199;
          char v193 = v200;
          if (v200) {
            goto LABEL_159;
          }
          unint64_t v201 = v185 - 2;
          v202 = &v186[16 * v185 - 32];
          uint64_t v204 = *(void *)v202;
          uint64_t v203 = *((void *)v202 + 1);
          BOOL v200 = __OFSUB__(v203, v204);
          uint64_t v205 = v203 - v204;
          if (v200) {
            goto LABEL_161;
          }
          BOOL v200 = __OFADD__(v192, v205);
          uint64_t v206 = v192 + v205;
          if (v200) {
            goto LABEL_164;
          }
          if (v206 >= v197)
          {
            v224 = &v186[16 * v189];
            uint64_t v226 = *(void *)v224;
            uint64_t v225 = *((void *)v224 + 1);
            BOOL v200 = __OFSUB__(v225, v226);
            uint64_t v227 = v225 - v226;
            if (v200) {
              goto LABEL_168;
            }
            BOOL v217 = v192 < v227;
          }
          else
          {
LABEL_107:
            if (v193) {
              goto LABEL_160;
            }
            unint64_t v201 = v185 - 2;
            v207 = &v186[16 * v185 - 32];
            uint64_t v209 = *(void *)v207;
            uint64_t v208 = *((void *)v207 + 1);
            BOOL v210 = __OFSUB__(v208, v209);
            uint64_t v211 = v208 - v209;
            char v212 = v210;
            if (v210) {
              goto LABEL_163;
            }
            v213 = &v186[16 * v189];
            uint64_t v215 = *(void *)v213;
            uint64_t v214 = *((void *)v213 + 1);
            BOOL v200 = __OFSUB__(v214, v215);
            uint64_t v216 = v214 - v215;
            if (v200) {
              goto LABEL_166;
            }
            if (__OFADD__(v211, v216)) {
              goto LABEL_167;
            }
            if (v211 + v216 < v192) {
              goto LABEL_119;
            }
            BOOL v217 = v192 < v216;
          }
          if (v217) {
            unint64_t v189 = v201;
          }
        }
        else
        {
          if (v185 == 3)
          {
            uint64_t v191 = *((void *)v56 + 4);
            uint64_t v190 = *((void *)v56 + 5);
            BOOL v200 = __OFSUB__(v190, v191);
            uint64_t v192 = v190 - v191;
            char v193 = v200;
            goto LABEL_107;
          }
          uint64_t v218 = *((void *)v56 + 4);
          uint64_t v219 = *((void *)v56 + 5);
          BOOL v200 = __OFSUB__(v219, v218);
          uint64_t v211 = v219 - v218;
          char v212 = v200;
LABEL_119:
          if (v212) {
            goto LABEL_162;
          }
          v220 = &v186[16 * v189];
          uint64_t v222 = *(void *)v220;
          uint64_t v221 = *((void *)v220 + 1);
          BOOL v200 = __OFSUB__(v221, v222);
          uint64_t v223 = v221 - v222;
          if (v200) {
            goto LABEL_165;
          }
          if (v223 < v211) {
            goto LABEL_136;
          }
        }
        unint64_t v228 = v189 - 1;
        if (v189 - 1 >= v185)
        {
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
          goto LABEL_177;
        }
        if (!*v291) {
          goto LABEL_180;
        }
        v229 = &v186[16 * v228];
        uint64_t v230 = *(void *)v229;
        v231 = &v186[16 * v189];
        uint64_t v232 = *((void *)v231 + 1);
        uint64_t v233 = v266;
        sub_100454CD0(*v291 + *(void *)(v29 + 72) * *(void *)v229, *v291 + *(void *)(v29 + 72) * *(void *)v231, *v291 + *(void *)(v29 + 72) * v232, v258);
        uint64_t v266 = v233;
        if (v233) {
          goto LABEL_153;
        }
        if (v232 < v230) {
          goto LABEL_155;
        }
        if (v189 > *((void *)v56 + 2)) {
          goto LABEL_156;
        }
        *(void *)v229 = v230;
        *(void *)&v186[16 * v228 + 8] = v232;
        unint64_t v234 = *((void *)v56 + 2);
        if (v189 >= v234) {
          goto LABEL_157;
        }
        unint64_t v185 = v234 - 1;
        memmove(&v186[16 * v189], v231 + 16, 16 * (v234 - 1 - v189));
        *((void *)v56 + 2) = v234 - 1;
        uint64_t v57 = v282;
        uint64_t v46 = v257;
        if (v234 <= 2) {
          goto LABEL_136;
        }
        continue;
      }
    }
    unint64_t v185 = 1;
LABEL_136:
    uint64_t v58 = v291[1];
    uint64_t v55 = v272;
  }
  while (v272 < v58);
  uint64_t v54 = v243;
LABEL_140:
  v243 = v54;
  uint64_t v235 = v266;
  if (v185 >= 2)
  {
    uint64_t v236 = *v291;
    do
    {
      unint64_t v237 = v185 - 2;
      if (v185 < 2) {
        goto LABEL_169;
      }
      if (!v236) {
        goto LABEL_182;
      }
      uint64_t v238 = *(void *)&v56[16 * v237 + 32];
      uint64_t v239 = *(void *)&v56[16 * v185 + 24];
      sub_100454CD0(v236 + *(void *)(v29 + 72) * v238, v236 + *(void *)(v29 + 72) * *(void *)&v56[16 * v185 + 16], v236 + *(void *)(v29 + 72) * v239, v258);
      if (v235) {
        break;
      }
      if (v239 < v238) {
        goto LABEL_171;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v56 = sub_1002687F8((uint64_t)v56);
      }
      if (v237 >= *((void *)v56 + 2)) {
        goto LABEL_172;
      }
      v240 = &v56[16 * v237 + 32];
      *(void *)v240 = v238;
      *((void *)v240 + 1) = v239;
      unint64_t v241 = *((void *)v56 + 2);
      if (v185 > v241) {
        goto LABEL_173;
      }
      memmove(&v56[16 * v185 + 16], &v56[16 * v185 + 32], 16 * (v241 - v185));
      *((void *)v56 + 2) = v241 - 1;
      unint64_t v185 = v241 - 1;
    }
    while (v241 > 2);
  }
LABEL_153:
  swift_bridgeObjectRelease();
  v243[2] = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100454410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v109 = a4;
  uint64_t v86 = a1;
  uint64_t v91 = type metadata accessor for FMIPItemState();
  uint64_t v6 = *(void *)(v91 - 8);
  uint64_t v7 = __chkstk_darwin(v91);
  uint64_t v92 = &v84[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v10 = &v84[-v9];
  uint64_t v11 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v98 = &v84[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  uint64_t v103 = &v84[-v14];
  uint64_t v15 = type metadata accessor for FMIPItem();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  int64_t v90 = &v84[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v96 = &v84[-v20];
  __chkstk_darwin(v19);
  double v100 = &v84[-v21];
  uint64_t v106 = type metadata accessor for FMDeviceCellViewModel();
  uint64_t v22 = __chkstk_darwin(v106);
  uint64_t v24 = &v84[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v116 = &v84[-v26];
  uint64_t result = __chkstk_darwin(v25);
  uint64_t v105 = &v84[-v29];
  uint64_t v85 = a2;
  uint64_t v102 = a3;
  if (a3 != a2)
  {
    uint64_t v30 = *(void *)(v28 + 72);
    unint64_t v94 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 32);
    uint64_t v87 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 16);
    uint64_t v93 = (void (**)(unsigned char *, uint64_t))(v16 + 8);
    uint64_t v101 = v30;
    uint64_t v110 = v30 * v102;
    uint64_t v111 = v30 * (v102 - 1);
    uint64_t v104 = v10;
    uint64_t v99 = v15;
    uint64_t v95 = v24;
    uint64_t v97 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48);
    uint64_t v88 = (void (**)(unsigned char *, uint64_t))(v6 + 8);
LABEL_5:
    uint64_t v31 = 0;
    uint64_t v32 = v86;
    while (1)
    {
      uint64_t v33 = *v109;
      uint64_t v108 = v110 + v31;
      uint64_t v34 = v105;
      sub_100057A9C(v110 + v31 + v33, (uint64_t)v105, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
      uint64_t v107 = v111 + v31;
      uint64_t v35 = v111 + v31 + v33;
      uint64_t v36 = v116;
      sub_100057A9C(v35, (uint64_t)v116, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
      uint64_t v37 = v36;
      uint64_t v38 = (int *)v106;
      uint64_t v39 = *(int *)(v106 + 60);
      double v40 = *(double *)&v34[v39];
      double v41 = *(double *)&v37[v39];
      BOOL v42 = v40 < v41;
      if (v40 != v41) {
        goto LABEL_20;
      }
      uint64_t v43 = (uint64_t)&v34[*(int *)(v106 + 24)];
      uint64_t v44 = v103;
      sub_10010A088(v43, (uint64_t)v103);
      uint64_t v45 = *v97;
      if ((*v97)(v44, 1, v15) == 1) {
        break;
      }
      uint64_t v46 = *v94;
      (*v94)(v100, v103, v15);
      uint64_t v47 = (uint64_t)&v116[v38[6]];
      double v48 = v98;
      sub_10010A088(v47, (uint64_t)v98);
      if (v45(v48, 1, v15) == 1)
      {
        (*v93)(v100, v15);
        sub_100003F10((uint64_t)v98, (uint64_t *)&unk_1006AFE30);
        goto LABEL_16;
      }
      uint64_t v49 = v96;
      v46(v96, v98, v15);
      FMIPItem.state.getter();
      uint64_t v50 = v92;
      static FMIPItemState.isBTConnected.getter();
      uint64_t v51 = sub_100045BEC((unint64_t *)&qword_1006BEB30, (void (*)(uint64_t))&type metadata accessor for FMIPItemState);
      uint64_t v52 = v91;
      uint64_t v89 = v51;
      char v53 = dispatch thunk of SetAlgebra.isSuperset(of:)();
      uint64_t v54 = *v88;
      uint64_t v55 = v50;
      uint64_t v15 = v99;
      (*v88)(v55, v52);
      v54(v10, v52);
      uint64_t v56 = v90;
      (*v87)(v90, v49, v15);
      if ((v53 & 1) == 0)
      {
        uint64_t v62 = *v93;
        (*v93)(v56, v15);
        v62(v96, v15);
        v62(v100, v15);
LABEL_16:
        uint64_t v38 = (int *)v106;
        uint64_t v24 = v95;
LABEL_17:
        uint64_t v37 = v116;
        uint64_t v34 = v105;
        goto LABEL_18;
      }
      FMIPItem.state.getter();
      uint64_t v57 = v92;
      static FMIPItemState.isBTConnected.getter();
      uint64_t v58 = v91;
      char v59 = dispatch thunk of SetAlgebra.isSuperset(of:)();
      v54(v57, v58);
      uint64_t v60 = v58;
      uint64_t v15 = v99;
      v54(v10, v60);
      uint64_t v61 = *v93;
      (*v93)(v90, v15);
      v61(v96, v15);
      v61(v100, v15);
      uint64_t v34 = v105;
      uint64_t v38 = (int *)v106;
      uint64_t v24 = v95;
      uint64_t v37 = v116;
      if (v59) {
        goto LABEL_19;
      }
LABEL_18:
      uint64_t v63 = v38[14];
      double v64 = *(double *)&v34[v63];
      double v65 = *(double *)&v37[v63];
      BOOL v42 = v64 < v65;
      if (v64 == v65)
      {
LABEL_19:
        BOOL v66 = (uint64_t *)&v34[v38[17]];
        uint64_t v67 = v66[1];
        uint64_t v68 = *((void *)v34 + 2);
        uint64_t v69 = (void *)*((void *)v34 + 3);
        uint64_t v114 = *v66;
        uint64_t v115 = v67;
        swift_bridgeObjectRetain();
        v70._uint64_t countAndFlagsBits = v68;
        v70._object = v69;
        String.append(_:)(v70);
        uint64_t v72 = v114;
        uint64_t v71 = v115;
        uint64_t v73 = (uint64_t *)&v116[v38[17]];
        uint64_t v74 = v73[1];
        uint64_t v75 = *((void *)v116 + 2);
        double v76 = (void *)*((void *)v116 + 3);
        uint64_t v114 = *v73;
        uint64_t v115 = v74;
        swift_bridgeObjectRetain();
        v77._uint64_t countAndFlagsBits = v75;
        v77._object = v76;
        String.append(_:)(v77);
        uint64_t v78 = v114;
        uint64_t v79 = v115;
        uint64_t v114 = v72;
        uint64_t v115 = v71;
        uint64_t v15 = v99;
        uint64_t v112 = v78;
        uint64_t v113 = v79;
        sub_100059EB8();
        uint64_t v80 = StringProtocol.caseInsensitiveCompare<A>(_:)();
        uint64_t v10 = v104;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v37 = v116;
        BOOL v81 = v80 == -1;
        goto LABEL_23;
      }
LABEL_20:
      BOOL v81 = v42;
LABEL_23:
      sub_100057ED4((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
      uint64_t result = sub_100057ED4((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
      if (!v81) {
        goto LABEL_4;
      }
      uint64_t v82 = *v109;
      if (!*v109)
      {
        __break(1u);
        return result;
      }
      uint64_t v83 = v82 + v111 + v31;
      sub_10033BD90(v82 + v110 + v31, (uint64_t)v24);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_10033BD90((uint64_t)v24, v83);
      v31 -= v101;
      ++v32;
      uint64_t v10 = v104;
      if (v102 == v32)
      {
LABEL_4:
        v111 += v101;
        v110 += v101;
        if (++v102 == v85) {
          return result;
        }
        goto LABEL_5;
      }
    }
    sub_100003F10((uint64_t)v103, (uint64_t *)&unk_1006AFE30);
    goto LABEL_17;
  }
  return result;
}

uint64_t sub_100454CD0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v49 = type metadata accessor for FMDeviceCellViewModel();
  uint64_t v8 = __chkstk_darwin(v49);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v45 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v45 - v13;
  __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v45 - v16;
  uint64_t v19 = *(void *)(v18 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if (a2 - a1 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_66;
  }
  int64_t v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_67;
  }
  uint64_t v21 = (uint64_t)(a2 - a1) / v19;
  unint64_t v53 = a1;
  unint64_t v52 = a4;
  uint64_t v22 = v20 / v19;
  if (v21 >= v20 / v19)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      uint64_t v24 = v22 * v19;
      uint64_t v17 = v11;
      double v48 = v15;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v34 = a4 + v24;
      unint64_t v51 = a4 + v24;
      unint64_t v53 = a2;
      if (v24 < 1 || a1 >= a2) {
        goto LABEL_64;
      }
      uint64_t v36 = -v19;
      unint64_t v46 = a4;
      unint64_t v47 = a1;
      uint64_t v14 = v48;
      while (1)
      {
        sub_100057A9C(v34 + v36, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
        unint64_t v37 = a2 + v36;
        sub_100057A9C(a2 + v36, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
        uint64_t v38 = v50;
        BOOL v39 = sub_100451DD8((uint64_t)v17, (uint64_t)v14);
        uint64_t v50 = v38;
        if (v38) {
          goto LABEL_63;
        }
        BOOL v40 = v39;
        unint64_t v41 = a3 + v36;
        sub_100057ED4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
        sub_100057ED4((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
        if (v40)
        {
          if (a3 < a2 || v41 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v42 = v47;
          }
          else
          {
            unint64_t v42 = v47;
            if (a3 != a2) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          v53 += v36;
        }
        else
        {
          unint64_t v43 = v51;
          v51 += v36;
          if (a3 < v43 || v41 >= v43)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v37 = a2;
            unint64_t v42 = v47;
          }
          else
          {
            unint64_t v42 = v47;
            if (a3 != v43) {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v37 = a2;
          }
        }
        unint64_t v34 = v51;
        if (v51 > v46)
        {
          a2 = v37;
          a3 += v36;
          if (v37 > v42) {
            continue;
          }
        }
        goto LABEL_64;
      }
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    uint64_t v23 = v21 * v19;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v25 = a4 + v23;
    unint64_t v51 = a4 + v23;
    BOOL v26 = v23 < 1 || a2 >= a3;
    if (v26) {
      goto LABEL_64;
    }
    while (1)
    {
      sub_100057A9C(a2, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
      sub_100057A9C(a4, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
      uint64_t v27 = v50;
      BOOL v28 = sub_100451DD8((uint64_t)v17, (uint64_t)v14);
      uint64_t v50 = v27;
      if (v27) {
        break;
      }
      BOOL v29 = v28;
      unint64_t v30 = a3;
      sub_100057ED4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
      sub_100057ED4((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
      unint64_t v31 = v53;
      if (v29)
      {
        unint64_t v32 = a2 + v19;
        if (v53 < a2 || v53 >= v32)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v53 == a2)
        {
          unint64_t v31 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        unint64_t v33 = v52 + v19;
        if (v53 < v52 || v53 >= v33)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v53 != v52)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v52 = v33;
        unint64_t v32 = a2;
      }
      unint64_t v53 = v31 + v19;
      a4 = v52;
      if (v52 < v25)
      {
        a2 = v32;
        BOOL v26 = v32 >= v30;
        a3 = v30;
        if (!v26) {
          continue;
        }
      }
      goto LABEL_64;
    }
LABEL_63:
    sub_100057ED4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
    sub_100057ED4((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
LABEL_64:
    sub_100268408(&v53, &v52, (uint64_t *)&v51);
    return 1;
  }
LABEL_68:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100455260(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_1000606BC(v11, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 134217984;
    aBlock[0] = *(void *)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMMultipartEntityListDataSource: didUpdate %ld devices", v14, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v15 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v2;
  *(void *)(v16 + 24) = a1;
  aBlock[4] = sub_1004558A4;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10063CC90;
  uint64_t v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v18 = v2;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100045BEC((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v21);
}

void sub_100455638(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMIPDevice();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000606BC(v6, (uint64_t)qword_1006D1E98);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v10 = FMIPDevice.debugDescription.getter();
    uint64_t v12 = sub_1000606F4(v10, v11, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "FMMultipartEntityListDataSource: didUpdate single device %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_10045588C()
{
  return sub_100008BB4((void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_1004558A4()
{
  sub_10044EF78(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1004558AC()
{
  uint64_t v1 = v0;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000606BC(v2, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    sub_10005D034((uint64_t *)&unk_1006B2B30);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v6 = isa;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMMultipartEntityListDataSource: itemAger itemsDidAge %@", v5, 0xCu);
    sub_10005D034((uint64_t *)&unk_1006B5A50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_mediator);
  swift_retain();
  uint64_t v8 = FMIPManager.devices.getter();
  swift_release();
  uint64_t v9 = *(UIImage **)(*(void *)(v7 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  uint64_t v10 = v9;
  sub_10044FB40(v8, v9, 0);
  swift_bridgeObjectRelease();
}

uint64_t sub_100455AC0(uint64_t a1, void *a2)
{
  uint64_t v55 = a2;
  uint64_t v60 = a1;
  uint64_t v56 = type metadata accessor for FMIPDevice();
  uint64_t v58 = *(void *)(v56 - 8);
  uint64_t v3 = __chkstk_darwin(v56);
  uint64_t v57 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  char v59 = (char *)&v50 - v5;
  uint64_t v54 = type metadata accessor for FMSelectedSection();
  uint64_t v6 = __chkstk_darwin(v54);
  unint64_t v53 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v52 = (char *)&v50 - v8;
  uint64_t v51 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v9 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  unint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v12);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v13 - 8);
  *(void *)&v2[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_deviceSubscription] = 0;
  *(void *)&v2[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_locationSubscription] = 0;
  *(void *)&v2[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_cellsViewModel] = _swiftEmptyArrayStorage;
  uint64_t v14 = OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_itemAger;
  type metadata accessor for FMItemAger();
  swift_allocObject();
  uint64_t v15 = v2;
  *(void *)&v2[v14] = sub_10004D3FC();
  uint64_t v50 = OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_updateQueue;
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  static DispatchQoS.userInitiated.getter();
  double v64 = _swiftEmptyArrayStorage;
  sub_100045BEC((unint64_t *)&unk_1006AE490, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10005D034((uint64_t *)&unk_1006B6C50);
  sub_100045050((unint64_t *)&unk_1006AE4A0, (uint64_t *)&unk_1006B6C50);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v51);
  uint64_t v17 = (uint64_t)v52;
  uint64_t v16 = (uint64_t)v53;
  uint64_t v18 = v60;
  *(void *)&v15[v50] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v15[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_delayedUpdateWorkItem] = 0;
  uint64_t v19 = &v15[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource__listTitle];
  *(void *)uint64_t v19 = 0;
  *((void *)v19 + 1) = 0xE000000000000000;
  v15[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_updatesEnabled] = 0;
  *(void *)&v15[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_mediator] = v18;
  uint64_t v20 = v55;
  *(void *)&v15[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_tableView] = v55;
  uint64_t v21 = *(void *)(v18 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100057A9C(v21, v17, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_100057A9C(v17, v16, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload() == 7)
  {
    uint64_t v23 = v58;
    uint64_t v22 = v59;
    uint64_t v24 = v56;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v59, v16, v56);
    unint64_t v25 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
    uint64_t v26 = v24;
    v25(&v15[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_selectedDevice], v22, v24);
    swift_retain();
    id v27 = v20;

    BOOL v28 = (objc_class *)type metadata accessor for FMMultipartEntityListDataSource();
    v61.receiver = v15;
    v61.super_class = v28;
    id v29 = [super init];
    sub_10005D034(&qword_1006BEC30);
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    unint64_t v31 = (char *)v29;
    NSString v32 = String._bridgeToObjectiveC()();
    [v27 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v32];

    *(void *)(*(void *)&v31[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_itemAger] + 24) = &off_10063CB88;
    swift_unknownObjectWeakAssign();
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    sub_1000606BC(v33, (uint64_t)qword_1006D1E98);
    unint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "FMMultipartEntityListDataSource: updateListTitle", v36, 2u);
      swift_slowDealloc();
    }

    unint64_t v37 = v57;
    v25(v57, &v31[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_selectedDevice], v26);
    uint64_t v38 = FMIPDevice.name.getter();
    uint64_t v40 = v39;
    unint64_t v41 = *(void (**)(char *, uint64_t))(v58 + 8);
    v41(v37, v26);
    unint64_t v42 = (uint64_t *)&v31[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource__listTitle];
    *unint64_t v42 = v38;
    v42[1] = v40;
    swift_bridgeObjectRelease();
    uint64_t v43 = v60;
    uint64_t v44 = FMIPManager.devices.getter();
    uint64_t v45 = *(UIImage **)(*(void *)(v43 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
    unint64_t v46 = v45;
    sub_10044FB40(v44, v45, 0);
    swift_bridgeObjectRelease();

    v41(v59, v26);
    sub_100057ED4(v17, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    return (uint64_t)v31;
  }
  else
  {
    swift_retain();
    id v48 = v20;
    sub_100057ED4(v16, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    uint64_t v62 = 0;
    unint64_t v63 = 0xE000000000000000;
    _StringGuts.grow(_:)(95);
    v49._uint64_t countAndFlagsBits = 0xD00000000000005DLL;
    v49._object = (void *)0x800000010059DEC0;
    String.append(_:)(v49);
    _print_unlocked<A, B>(_:_:)();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1004562D4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  BOOL v28 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_1000606BC(v10, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain();
  unint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    unint64_t v25 = v2;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v26 = v8;
    uint64_t v16 = (void *)v15;
    *(_DWORD *)uint64_t v14 = 138412290;
    id v27 = v7;
    sub_100006060(0, (unint64_t *)&unk_1006BEAA0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    aBlock[0] = isa;
    uint64_t v7 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v16 = isa;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMMultipartEntityListDataSource: locationProvider didUpdate locations %@", v14, 0xCu);
    sub_10005D034((uint64_t *)&unk_1006B5A50);
    swift_arrayDestroy();
    uint64_t v8 = v26;
    swift_slowDealloc();
    uint64_t v2 = v25;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v18 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v2;
  *(void *)(v19 + 24) = a1;
  aBlock[4] = sub_100456768;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10063CCE0;
  uint64_t v20 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v21 = v2;
  swift_release();
  uint64_t v22 = v28;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100045BEC((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v22, v29);
}

uint64_t sub_100456750()
{
  return sub_100008BB4((void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_100456768()
{
  sub_10044FA18(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100456770()
{
  uint64_t v1 = type metadata accessor for FMIPDevice();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 9, v5);
}

uint64_t sub_100456868()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMIPDevice() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void **)(v0 + 16);
  uint64_t v5 = (char *)(v0 + v2);
  unint64_t v6 = *(UIImage **)(v0 + v3);
  uint64_t v7 = v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *(void *)v7;
  char v9 = *(unsigned char *)(v7 + 8);

  return sub_1004505A4(v4, v5, v6, v8, v9);
}

uint64_t sub_10045690C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100456944()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100456984()
{
  return sub_100450B24(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10045698C()
{
  return sub_100008BB4((void (*)(void))&_swift_release);
}

uint64_t sub_1004569A4()
{
  return sub_10044F5B8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1004569AC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004569E4()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100456A24()
{
}

char *sub_100456A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, unsigned __int8 a11)
{
  os_log_type_t v12 = v11;
  uint64_t v68 = a3;
  uint64_t v69 = a8;
  uint64_t v74 = a7;
  uint64_t v75 = a4;
  uint64_t v67 = a6;
  uint64_t v72 = a1;
  int v70 = a10;
  int v71 = a11;
  uint64_t v14 = sub_10005D034((uint64_t *)&unk_1006C0CE0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for FMPlatterIcon();
  uint64_t v17 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v66 = (uint64_t)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_titleLabel;
  id v20 = objc_allocWithZone((Class)UILabel);
  id v21 = v11;
  *(void *)&v12[v19] = [v20 init];
  uint64_t v22 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleLabel;
  *(void *)&v21[v22] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v23 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_contentStackView;
  *(void *)&v21[v23] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v24 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButton;
  unint64_t v25 = self;
  *(void *)&v21[v24] = [v25 buttonWithType:1];
  uint64_t v26 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButton;
  *(void *)&v21[v26] = [v25 buttonWithType:1];
  uint64_t v27 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_topSeparator;
  *(void *)&v21[v27] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v28 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_buttonSeparator;
  *(void *)&v21[v28] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v29 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_iconView;
  *(void *)&v21[v29] = [objc_allocWithZone((Class)UIImageView) init];
  *(void *)&v21[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButtonOnlyShowingConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v21[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButtonOnlyShowingConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v21[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_bothActionButtonsShowingConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v21[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_bothActionButtonHiddenConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v21[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleShowingConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v21[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleHiddenConstraints] = _swiftEmptyArrayStorage;
  v21[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionEnabled] = 1;
  v21[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isSecondaryActionEnabled] = 1;
  v21[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionButtonHidden] = 1;
  v21[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isSecondaryActionButtonHidden] = 1;
  unint64_t v30 = &v21[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitle];
  *(void *)unint64_t v30 = 0;
  *((void *)v30 + 1) = 0xE000000000000000;
  v21[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isTransparent] = v70;
  v21[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_fullWidthSeparator] = v71;

  unint64_t v31 = (objc_class *)type metadata accessor for FMPlatterImageAndButtonGroupView();
  v76.receiver = v21;
  v76.super_class = v31;
  NSString v32 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v33 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_titleLabel;
  unint64_t v34 = *(void **)&v32[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_titleLabel];
  os_log_type_t v35 = v32;
  id v36 = v34;
  NSString v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v36 setText:v37];

  uint64_t v38 = *(void **)&v32[v33];
  [v38 setAdjustsFontForContentSizeCategory:1];
  id v39 = v38;
  NSString v40 = String._bridgeToObjectiveC()();
  [v39 setAccessibilityIdentifier:v40];

  sub_1002C5920(a5, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, v73) == 1)
  {
    uint64_t v41 = sub_1002C5988((uint64_t)v16);
  }
  else
  {
    uint64_t v42 = v66;
    sub_1002C59E8((uint64_t)v16, v66);
    uint64_t v43 = *(void **)&v35[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_iconView];
    id v44 = sub_10043C974(v42, 0);
    [v43 setImage:v44];

    uint64_t v41 = sub_1000C8200(v42);
  }
  uint64_t v45 = v75;
  if (v74)
  {
    uint64_t v46 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButton;
    id v47 = *(id *)&v35[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButton];
    NSString v48 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v47 setTitle:v48 forState:0];

    id v49 = *(id *)&v35[v46];
    NSString v50 = String._bridgeToObjectiveC()();
    [v49 setAccessibilityIdentifier:v50];
  }
  if (v45)
  {
    uint64_t v51 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleLabel;
    id v52 = *(id *)&v35[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleLabel];
    NSString v53 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v52 setText:v53];

    uint64_t v54 = *(void **)&v35[v51];
    [v54 setAdjustsFontForContentSizeCategory:1];
    id v55 = v54;
    NSString v56 = String._bridgeToObjectiveC()();
    [v55 setAccessibilityIdentifier:v56];
  }
  if (a9)
  {
    uint64_t v57 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButton;
    id v58 = *(id *)&v35[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButton];
    NSString v59 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v58 setTitle:v59 forState:0];

    id v60 = *(id *)&v35[v57];
    NSString v61 = String._bridgeToObjectiveC()();
    [v60 setAccessibilityIdentifier:v61];
  }
  (*(void (**)(uint64_t))((swift_isaMask & *(void *)v35) + 0x208))(v41);
  sub_100457958();
  (*(void (**)(void))((swift_isaMask & *(void *)v35) + 0x218))();
  uint64_t v62 = v35;
  NSString v63 = String._bridgeToObjectiveC()();
  [v62 setAccessibilityIdentifier:v63];

  sub_1002C5988(a5);
  return v62;
}

void sub_10045716C()
{
  uint64_t v1 = v0;
  if ((v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isTransparent] & 1) == 0)
  {
    if (qword_1006AE228 != -1) {
      swift_once();
    }
    id v2 = [v0 traitCollection];
    id v3 = [v2 userInterfaceStyle];
    uint64_t v4 = self;
    uint64_t v5 = &selRef_tertiarySystemFillColor;
    if (v3 != (id)2) {
      uint64_t v5 = &selRef_whiteColor;
    }
    id v6 = [v4 *v5];

    [v1 setBackgroundColor:v6];
    id v7 = [v1 layer];
    [v7 setShouldRasterize:1];

    id v8 = [v1 layer];
    id v9 = [self mainScreen];
    [v9 scale];
    double v11 = v10;

    [v8 setRasterizationScale:v11];
    id v12 = [v1 layer];
    [v12 setCornerRadius:_UISheetCornerRadius];

    id v13 = [v1 layer];
    [v13 setCornerCurve:kCACornerCurveContinuous];

    id v14 = [v1 layer];
    [v14 setMasksToBounds:1];

    id v15 = [v1 layer];
    id v16 = [self blackColor];
    id v17 = [v16 CGColor];

    [v15 setShadowColor:v17];
    id v18 = [v1 layer];
    LODWORD(v19) = 1031127695;
    [v18 setShadowOpacity:v19];

    id v20 = [v1 layer];
    [v20 setShadowRadius:16.0];

    id v21 = [v1 layer];
    [v21 setShadowOffset:0.0, 0.0];
  }
  NSString v53 = *(void **)&v1[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_contentStackView];
  [v53 setAxis:1];
  uint64_t v22 = *(void **)&v1[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButton];
  id v23 = [v22 titleLabel];
  if (v23)
  {
    uint64_t v24 = v23;
    id v25 = [self preferredFontForTextStyle:UIFontTextStyleBody];
    [v24 setFont:v25];
  }
  id v26 = [v22 titleLabel];
  if (v26)
  {
    uint64_t v27 = v26;
    [v26 setAdjustsFontForContentSizeCategory:1];
  }
  [v22 setContentHorizontalAlignment:4];
  [v22 addTarget:v1 action:"handleAction" forControlEvents:64];
  uint64_t v28 = *(void **)&v1[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButton];
  id v29 = [v28 titleLabel];
  if (v29)
  {
    unint64_t v30 = v29;
    id v31 = [self preferredFontForTextStyle:UIFontTextStyleBody];
    [v30 setFont:v31];
  }
  id v32 = [v28 titleLabel];
  if (v32)
  {
    uint64_t v33 = v32;
    [v32 setAdjustsFontForContentSizeCategory:1];
  }
  [v28 setContentHorizontalAlignment:4];
  [v28 addTarget:v1 action:"handleSecondaryAction" forControlEvents:64];
  unint64_t v34 = *(void **)&v1[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_titleLabel];
  os_log_type_t v35 = self;
  id v36 = [v35 preferredFontForTextStyle:UIFontTextStyleBody];
  NSString v37 = (void *)sub_100042318(0x8000);

  uint64_t v38 = (void *)sub_100042318(2);
  [v34 setFont:v38];

  [v34 setNumberOfLines:0];
  id v39 = *(void **)&v1[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_topSeparator];
  NSString v40 = self;
  id v41 = [v40 quaternaryLabelColor];
  [v39 setBackgroundColor:v41];

  uint64_t v42 = *(void **)&v1[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_buttonSeparator];
  id v43 = [v40 quaternaryLabelColor];
  [v42 setBackgroundColor:v43];

  [v1 addSubview:*(void *)&v1[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_iconView]];
  [v1 addSubview:v34];
  id v44 = *(void **)&v1[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleLabel];
  id v45 = [v35 preferredFontForTextStyle:UIFontTextStyleSubheadline];
  [v44 setFont:v45];

  id v46 = [v40 secondaryLabelColor];
  [v44 setTextColor:v46];

  [v44 setNumberOfLines:0];
  sub_1000C8648();
  [v1 addSubview:v44];
  [v1 addSubview:v39];
  [v1 addSubview:v53];
  id v47 = [v22 titleLabel];
  if (v47)
  {
    NSString v48 = v47;
    id v49 = [v47 text];

    if (v49)
    {

      [v1 addSubview:v22];
    }
  }
  id v50 = [v28 titleLabel];
  if (v50)
  {
    uint64_t v51 = v50;
    id v52 = [v50 text];

    if (v52)
    {

      [v1 addSubview:v28];
    }
  }
}

void sub_100457958()
{
  if (qword_1006AE228 != -1) {
    swift_once();
  }
  double v1 = *(double *)&qword_1006D20C8;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_titleLabel];
  id v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleLabel];
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_topSeparator];
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_buttonSeparator];
  id v6 = *(void **)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButton];
  id v7 = *(void **)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButton];
  id v195 = *(id *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_contentStackView];
  id v8 = *(id *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_iconView];
  uint64_t v192 = v0;
  id v9 = v2;
  id v10 = v3;
  id v11 = v4;
  id v12 = v5;
  id v13 = v6;
  id v14 = v7;
  id v15 = v13;
  id v16 = v14;
  id v17 = v195;
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v17 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v194 = v17;
  id v193 = v16;

  id v188 = v12;
  id v187 = v11;

  uint64_t v191 = v10;
  id v189 = v9;

  id v18 = v8;
  id v19 = [v8 image];

  id v20 = self;
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_10055C1F0;
  id v196 = v20;
  if (v19)
  {
    id v22 = [v18 topAnchor];
    id v23 = [v192 topAnchor];
    id v24 = [v22 constraintEqualToAnchor:v23 constant:v1];

    *(void *)(v21 + 32) = v24;
    id v25 = [v18 leadingAnchor];
    id v26 = [v192 leadingAnchor];
    id v27 = [v25 constraintEqualToAnchor:v26 constant:v1];

    *(void *)(v21 + 40) = v27;
    id v28 = [v18 trailingAnchor];
    id v29 = [v192 trailingAnchor];
    id v30 = [v28 constraintLessThanOrEqualToAnchor:v29 constant:-v1];

    *(void *)(v21 + 48) = v30;
    specialized Array._endMutation()();
    sub_10004FCE4();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v20 activateConstraints:isa];

    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_10055C1F0;
    id v33 = [v189 topAnchor];
    id v34 = [v18 bottomAnchor];
    os_log_type_t v35 = v189;
    if (qword_1006ADF68 != -1) {
      swift_once();
    }
    id v36 = [v33 constraintEqualToAnchor:v34 constant:*(double *)&xmmword_1006D14B0];

    *(void *)(v32 + 32) = v36;
    id v37 = [v189 leadingAnchor];
    id v38 = [v192 leadingAnchor];
    id v39 = [v37 constraintEqualToAnchor:v38 constant:v1];

    *(void *)(v32 + 40) = v39;
    id v40 = [v189 trailingAnchor];
    id v41 = [v192 trailingAnchor];
    id v42 = [v40 constraintEqualToAnchor:v41 constant:-v1];

    *(void *)(v32 + 48) = v42;
    specialized Array._endMutation()();
    v43.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    id v44 = &selRef_tableView_viewForFooterInSection_;
  }
  else
  {
    id v45 = [v9 topAnchor];
    id v46 = [v192 topAnchor];
    id v47 = [v45 constraintEqualToAnchor:v46 constant:v1];

    *(void *)(v21 + 32) = v47;
    id v48 = [v9 leadingAnchor];
    id v49 = [v192 leadingAnchor];
    id v50 = [v48 constraintEqualToAnchor:v49 constant:v1];

    *(void *)(v21 + 40) = v50;
    id v51 = [v9 trailingAnchor];
    id v52 = [v192 trailingAnchor];
    id v53 = [v51 constraintEqualToAnchor:v52 constant:-v1];

    id v44 = &selRef_tableView_viewForFooterInSection_;
    *(void *)(v21 + 48) = v53;
    specialized Array._endMutation()();
    sub_10004FCE4();
    v43.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    os_log_type_t v35 = v9;
  }
  swift_bridgeObjectRelease();
  [v196 activateConstraints:v43.super.isa];

  sub_10005D034(&qword_1006AF2D0);
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_10055EFD0;
  id v55 = [v10 v44[109]];
  id v56 = [v35 bottomAnchor];
  uint64_t v57 = v35;
  id v58 = v44;
  id v59 = v56;
  id v60 = [v55 constraintEqualToAnchor:v56 constant:2.0];

  *(void *)(v54 + 32) = v60;
  id v61 = [v191 leadingAnchor];
  id v62 = [v57 leadingAnchor];
  id v63 = [v61 constraintEqualToAnchor:v62];

  *(void *)(v54 + 40) = v63;
  id v64 = [v191 trailingAnchor];
  id v65 = [v57 trailingAnchor];
  id v66 = [v64 constraintEqualToAnchor:v65];

  *(void *)(v54 + 48) = v66;
  id v67 = [v11 v58[109]];
  id v68 = [v191 bottomAnchor];
  id v69 = [v67 constraintEqualToAnchor:v68 constant:v1];

  *(void *)(v54 + 56) = v69;
  id v70 = [v11 leadingAnchor];
  id v71 = [v192 leadingAnchor];
  id v72 = [v70 constraintEqualToAnchor:v71 constant:v1];

  *(void *)(v54 + 64) = v72;
  id v73 = [v11 trailingAnchor];
  id v74 = [v192 trailingAnchor];
  id v75 = [v73 constraintEqualToAnchor:v74];

  *(void *)(v54 + 72) = v75;
  id v76 = [v11 heightAnchor];
  Swift::String v77 = self;
  id v78 = [v77 mainScreen];
  [v78 scale];
  double v80 = v79;

  id v81 = [v76 constraintEqualToConstant:1.0 / v80];
  *(void *)(v54 + 80) = v81;
  specialized Array._endMutation()();
  *(void *)&v192[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleShowingConstraints] = v54;
  swift_bridgeObjectRelease();
  uint64_t v82 = swift_allocObject();
  *(_OWORD *)(v82 + 16) = xmmword_10055B950;
  id v83 = [v187 leadingAnchor];
  id v84 = [v192 leadingAnchor];
  double v85 = 0.0;
  if (!v192[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_fullWidthSeparator]) {
    double v85 = v1;
  }
  id v86 = [v83 constraintEqualToAnchor:v84 constant:v85];

  *(void *)(v82 + 32) = v86;
  id v87 = [v187 trailingAnchor];
  id v88 = [v192 trailingAnchor];
  id v89 = [v87 constraintEqualToAnchor:v88 constant:0.0];

  *(void *)(v82 + 40) = v89;
  id v90 = [v187 topAnchor];
  id v91 = [v189 bottomAnchor];
  id v92 = [v90 constraintEqualToAnchor:v91 constant:v1];

  *(void *)(v82 + 48) = v92;
  id v93 = [v187 heightAnchor];
  id v190 = v77;
  id v94 = [v77 mainScreen];
  [v94 scale];
  double v96 = v95;

  id v97 = [v93 constraintEqualToConstant:1.0 / v96];
  *(void *)(v82 + 56) = v97;
  specialized Array._endMutation()();
  *(void *)&v192[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleHiddenConstraints] = v82;
  swift_bridgeObjectRelease();
  uint64_t v98 = self;
  sub_10004FCE4();
  swift_bridgeObjectRetain();
  Class v99 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v98 deactivateConstraints:v99];

  swift_bridgeObjectRetain();
  Class v100 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v98 activateConstraints:v100];

  id v186 = self;
  uint64_t v101 = swift_allocObject();
  *(_OWORD *)(v101 + 16) = xmmword_10055C1F0;
  id v102 = [v194 topAnchor];
  id v103 = [v187 bottomAnchor];
  id v104 = [v102 constraintEqualToAnchor:v103];

  *(void *)(v101 + 32) = v104;
  id v105 = [v194 leadingAnchor];
  id v106 = [v192 leadingAnchor];
  id v107 = [v105 constraintEqualToAnchor:v106 constant:v1];

  *(void *)(v101 + 40) = v107;
  id v108 = [v194 trailingAnchor];
  id v109 = [v192 trailingAnchor];
  id v110 = [v108 constraintEqualToAnchor:v109 constant:-v1];

  *(void *)(v101 + 48) = v110;
  specialized Array._endMutation()();
  Class v111 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v186 activateConstraints:v111];

  uint64_t v112 = swift_allocObject();
  *(_OWORD *)(v112 + 16) = xmmword_10055B950;
  id v113 = [v15 topAnchor];
  id v114 = [v194 bottomAnchor];
  if (qword_1006ADF68 != -1) {
    swift_once();
  }
  id v115 = [v113 constraintEqualToAnchor:v114 constant:*(double *)&qword_1006D14C8];

  *(void *)(v112 + 32) = v115;
  id v116 = [v15 leadingAnchor];
  id v117 = [v192 leadingAnchor];
  id v118 = [v116 constraintEqualToAnchor:v117 constant:v1];

  *(void *)(v112 + 40) = v118;
  id v119 = [v15 trailingAnchor];
  id v120 = [v192 trailingAnchor];
  id v121 = [v119 constraintEqualToAnchor:v120 constant:-v1];

  *(void *)(v112 + 48) = v121;
  id v122 = [v15 bottomAnchor];
  id v123 = [v192 bottomAnchor];
  id v124 = [v122 constraintEqualToAnchor:v123 constant:-*(double *)&qword_1006D14D0];

  *(void *)(v112 + 56) = v124;
  specialized Array._endMutation()();
  *(void *)&v192[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButtonOnlyShowingConstraints] = v112;
  swift_bridgeObjectRelease();
  uint64_t v125 = swift_allocObject();
  *(_OWORD *)(v125 + 16) = xmmword_10055B950;
  id v126 = [v193 topAnchor];
  id v127 = [v194 bottomAnchor];
  id v128 = [v126 constraintEqualToAnchor:v127 constant:*(double *)&qword_1006D14C8];

  *(void *)(v125 + 32) = v128;
  id v129 = [v193 leadingAnchor];
  id v130 = [v192 leadingAnchor];
  id v131 = [v129 constraintEqualToAnchor:v130 constant:v1];

  *(void *)(v125 + 40) = v131;
  id v132 = [v193 trailingAnchor];
  id v133 = [v192 trailingAnchor];
  id v134 = [v132 constraintEqualToAnchor:v133 constant:-v1];

  *(void *)(v125 + 48) = v134;
  id v135 = [v193 bottomAnchor];
  id v136 = [v192 bottomAnchor];
  id v137 = [v135 constraintEqualToAnchor:v136 constant:-*(double *)&qword_1006D14D0];

  *(void *)(v125 + 56) = v137;
  specialized Array._endMutation()();
  *(void *)&v192[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButtonOnlyShowingConstraints] = v125;
  swift_bridgeObjectRelease();
  uint64_t v138 = swift_allocObject();
  *(_OWORD *)(v138 + 16) = xmmword_100566060;
  id v139 = [v15 topAnchor];
  id v140 = [v194 bottomAnchor];
  id v141 = [v139 constraintEqualToAnchor:v140 constant:*(double *)&qword_1006D14C8];

  *(void *)(v138 + 32) = v141;
  id v142 = [v15 leadingAnchor];
  id v143 = [v192 leadingAnchor];
  id v144 = [v142 constraintEqualToAnchor:v143 constant:v1];

  *(void *)(v138 + 40) = v144;
  id v145 = [v15 trailingAnchor];
  id v146 = [v192 trailingAnchor];
  id v147 = [v145 constraintEqualToAnchor:v146 constant:-v1];

  *(void *)(v138 + 48) = v147;
  id v148 = [v188 topAnchor];
  id v149 = [v15 bottomAnchor];
  id v150 = [v148 constraintEqualToAnchor:v149 constant:*(double *)&qword_1006D20C0];

  *(void *)(v138 + 56) = v150;
  id v151 = [v188 leadingAnchor];
  id v152 = [v192 leadingAnchor];
  id v153 = [v151 constraintEqualToAnchor:v152 constant:v1];

  *(void *)(v138 + 64) = v153;
  id v154 = [v188 trailingAnchor];
  id v155 = [v192 trailingAnchor];
  id v156 = [v154 constraintEqualToAnchor:v155];

  *(void *)(v138 + 72) = v156;
  id v157 = [v188 heightAnchor];
  id v158 = [v190 mainScreen];
  [v158 scale];
  double v160 = v159;

  id v161 = [v157 constraintEqualToConstant:1.0 / v160];
  *(void *)(v138 + 80) = v161;
  id v162 = [v193 topAnchor];
  id v163 = [v188 bottomAnchor];
  id v164 = [v162 constraintEqualToAnchor:v163 constant:*(double *)&qword_1006D20C0];

  *(void *)(v138 + 88) = v164;
  id v165 = [v193 leadingAnchor];
  id v166 = [v192 leadingAnchor];
  id v167 = [v165 constraintEqualToAnchor:v166 constant:v1];

  *(void *)(v138 + 96) = v167;
  id v168 = [v193 trailingAnchor];
  id v169 = [v192 trailingAnchor];
  id v170 = [v168 constraintEqualToAnchor:v169 constant:-v1];

  *(void *)(v138 + 104) = v170;
  id v171 = [v193 bottomAnchor];
  id v172 = [v192 bottomAnchor];
  id v173 = [v171 constraintEqualToAnchor:v172 constant:-*(double *)&qword_1006D14D0];

  *(void *)(v138 + 112) = v173;
  specialized Array._endMutation()();
  *(void *)&v192[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_bothActionButtonsShowingConstraints] = v138;
  swift_bridgeObjectRelease();
  uint64_t v174 = swift_allocObject();
  *(_OWORD *)(v174 + 16) = xmmword_10055BD30;
  id v175 = [v194 bottomAnchor];
  id v176 = [v192 bottomAnchor];
  if (qword_1006AE3C0 != -1) {
    swift_once();
  }
  id v177 = [v175 constraintEqualToAnchor:v176 constant:-*(double *)&qword_1006D2658];

  *(void *)(v174 + 32) = v177;
  specialized Array._endMutation()();
  *(void *)&v192[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_bothActionButtonHiddenConstraints] = v174;
  swift_bridgeObjectRelease();
  id v178 = [v15 titleLabel];
  if (v178
    && (v179 = v178, id v180 = [v178 text], v179, v180))
  {

    char v181 = 0;
  }
  else
  {
    char v181 = 1;
  }
  v192[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionButtonHidden] = v181;
  sub_1004591F4();
  id v182 = [v193 titleLabel];
  if (v182
    && (unint64_t v183 = v182, v184 = [v182 text], v183, v184))
  {

    char v185 = 0;
  }
  else
  {
    char v185 = 1;
  }
  v192[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isSecondaryActionButtonHidden] = v185;

  sub_100459480();
}

void sub_1004591C8()
{
  qword_1006D2658 = 0;
}

void sub_1004591F4()
{
  int v1 = v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionButtonHidden];
  int v2 = v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isSecondaryActionButtonHidden];
  id v3 = self;
  sub_10004FCE4();
  if (v1 == 1)
  {
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 deactivateConstraints:isa];

    swift_bridgeObjectRetain();
    Class v5 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 activateConstraints:v5];

    [*(id *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButton] removeFromSuperview];
    id v6 = *(void **)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_buttonSeparator];
    [v6 removeFromSuperview];
  }
  else
  {
    swift_bridgeObjectRetain();
    Class v7 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 deactivateConstraints:v7];

    [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButton]];
    if (!v2) {
      [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_buttonSeparator]];
    }
    swift_bridgeObjectRetain();
    Class v8 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 activateConstraints:v8];
  }
}

void sub_100459480()
{
  int v1 = v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isSecondaryActionButtonHidden];
  int v2 = v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionButtonHidden];
  id v3 = self;
  sub_10004FCE4();
  if (v1 == 1)
  {
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 deactivateConstraints:isa];

    swift_bridgeObjectRetain();
    Class v5 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 activateConstraints:v5];

    [*(id *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButton] removeFromSuperview];
    id v6 = *(void **)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_buttonSeparator];
    [v6 removeFromSuperview];
  }
  else
  {
    swift_bridgeObjectRetain();
    Class v7 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 deactivateConstraints:v7];

    [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButton]];
    if (!v2) {
      [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_buttonSeparator]];
    }
    swift_bridgeObjectRetain();
    Class v8 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 activateConstraints:v8];
  }
}

void sub_100459714()
{
  int v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleLabel);
  swift_bridgeObjectRetain();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setText:v2];

  id v3 = self;
  sub_10004FCE4();
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v3 deactivateConstraints:isa];

  swift_bridgeObjectRetain();
  Class v5 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v3 activateConstraints:v5];
}

void sub_1004598E8(uint64_t a1)
{
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for FMPlatterImageAndButtonGroupView();
  [super traitCollectionDidChange:a1];
  if ((*((unsigned char *)v1 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isTransparent) & 1) == 0)
  {
    if (qword_1006AE228 != -1) {
      swift_once();
    }
    id v3 = [v1 traitCollection];
    id v4 = [v3 userInterfaceStyle];
    Class v5 = self;
    id v6 = &selRef_tertiarySystemFillColor;
    if (v4 != (id)2) {
      id v6 = &selRef_whiteColor;
    }
    id v7 = [v5 *v6];

    [v1 setBackgroundColor:v7];
  }
}

id sub_100459A90()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPlatterImageAndButtonGroupView();
  return [super dealloc];
}

uint64_t type metadata accessor for FMPlatterImageAndButtonGroupView()
{
  return self;
}

void sub_100459C08()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_titleLabel;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v2 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleLabel;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v3 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_contentStackView;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v4 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButton;
  Class v5 = self;
  *(void *)&v0[v4] = [v5 buttonWithType:1];
  uint64_t v6 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButton;
  *(void *)&v0[v6] = [v5 buttonWithType:1];
  uint64_t v7 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_topSeparator;
  *(void *)&v0[v7] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v8 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_buttonSeparator;
  *(void *)&v0[v8] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v9 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_iconView;
  *(void *)&v0[v9] = [objc_allocWithZone((Class)UIImageView) init];
  *(void *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButtonOnlyShowingConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButtonOnlyShowingConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_bothActionButtonsShowingConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_bothActionButtonHiddenConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleShowingConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleHiddenConstraints] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionEnabled] = 1;
  v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isSecondaryActionEnabled] = 1;
  v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionButtonHidden] = 1;
  v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isSecondaryActionButtonHidden] = 1;
  id v10 = &v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitle];
  void *v10 = 0;
  v10[1] = 0xE000000000000000;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_100459E78()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMCardContainerView();
  return [super dealloc];
}

unsigned char *storeEnumTagSinglePayload for FMCardContainerAppearance(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100459FD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMCardContainerAppearance()
{
  return &type metadata for FMCardContainerAppearance;
}

unint64_t sub_10045A010()
{
  unint64_t result = qword_1006BED50;
  if (!qword_1006BED50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BED50);
  }
  return result;
}

void sub_10045A064()
{
  v0[OBJC_IVAR____TtC6FindMy19FMCardContainerView_appearance] = 0;
  uint64_t v1 = OBJC_IVAR____TtC6FindMy19FMCardContainerView_bluredBackground;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIVisualEffectView) init];
  uint64_t v2 = OBJC_IVAR____TtC6FindMy19FMCardContainerView_darkeningView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v3 = OBJC_IVAR____TtC6FindMy19FMCardContainerView_grabber;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)_UIGrabber) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10045A144(uint64_t a1, unint64_t a2, Class isa)
{
  unsigned int v4 = v3;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1000606BC(v8, (uint64_t)qword_1006D1E98);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  swift_bridgeObjectRetain_n();
  id v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v13, v14))
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (!a2)
    {
      NSString v18 = 0;
      if (!isa) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
LABEL_7:
    NSString v18 = String._bridgeToObjectiveC()();
    if (!isa)
    {
LABEL_9:
      id v19 = (objc_class *)type metadata accessor for FMApplication();
      v25.receiver = v4;
      v25.super_class = v19;
      [super runTest:v18 options:isa];

      return (uint64_t)v20;
    }
LABEL_8:
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    goto LABEL_9;
  }
  uint64_t v21 = isa;
  id v22 = v4;
  uint64_t v15 = a1;
  id v16 = (uint8_t *)swift_slowAlloc();
  uint64_t result = swift_slowAlloc();
  uint64_t v24 = result;
  *(_DWORD *)id v16 = 136315138;
  if (a2)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1000606F4(v15, a2, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMApplication: runTest: %s ", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    Class isa = v21;
    unsigned int v4 = v22;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

id sub_10045A4FC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMApplication();
  return [super dealloc];
}

uint64_t sub_10045A61C(void *a1)
{
  uint64_t v2 = v1;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v4 = [self mainBundle];
  v14._uint64_t countAndFlagsBits = 0xD000000000000028;
  v14._object = (void *)0x800000010059E290;
  v5._object = (void *)0x800000010059E270;
  v5._uint64_t countAndFlagsBits = 0xD000000000000016;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v14);

  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 setPlaceholder:v7];

  uint64_t result = *(void *)(v2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView);
  if (result)
  {
    [(id)result setHidden:0];
    id v9 = [a1 text];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      sub_100465070(v11, v13);
      swift_bridgeObjectRelease();
    }
    return 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10045A838(void *a1)
{
  uint64_t v3 = type metadata accessor for FMFLocationAlertAddressType();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::String v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  [a1 resignFirstResponder];
  id result = [a1 text];
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    id v12 = [v1 navigationItem];
    id v13 = [v12 searchController];

    if (v13)
    {
      [v13 setActive:0];
    }
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for FMFLocationAlertAddressType.custom(_:), v3);
    sub_10046E108(v9, v11, (uint64_t)v6, 0);
    swift_bridgeObjectRelease();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

void sub_10045AA44(void *a1)
{
  [a1 setText:0];
  uint64_t v2 = &v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSearchedQuery];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView];
  if (v3)
  {
    [v3 setHidden:1];
    sub_100465070(0, 0xE000000000000000);
    id v4 = [v1 navigationController];
    if (v4)
    {
      id v5 = v4;
      [v4 setToolbarHidden:0 animated:0];
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10045AB7C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006B36A0);
  __chkstk_darwin(v4 - 8);
  Swift::String v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FindingMode(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v13 = (char *)&v23 - v12;
  if (qword_1006AE410 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_1000606BC(v14, (uint64_t)qword_1006D2778);
  sub_10045D3AC(a1, (uint64_t)v13);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v25 = a1;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v26 = v2;
    NSString v18 = (uint8_t *)v17;
    v28[0] = swift_slowAlloc();
    uint64_t v24 = v8;
    *(_DWORD *)NSString v18 = 136315138;
    sub_10045D3AC((uint64_t)v13, (uint64_t)v11);
    uint64_t v19 = String.init<A>(describing:)();
    uint64_t v27 = sub_1000606F4(v19, v20, v28);
    uint64_t v8 = v24;
    a1 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10045D058((uint64_t)v13);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "🧭 FMFindingExperienceCoordinator: Did update finding experience mode: %s", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = v26;
    swift_slowDealloc();
  }
  else
  {
    sub_10045D058((uint64_t)v13);
  }

  sub_10045D3AC(a1, (uint64_t)v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  uint64_t v21 = v2 + OBJC_IVAR____TtC6FindMy30FMFindingExperienceCoordinator_mode;
  swift_beginAccess();
  sub_10045D410((uint64_t)v6, v21);
  return swift_endAccess();
}

void sub_10045AE90()
{
  uint64_t v1 = v0;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000606BC(v2, (uint64_t)qword_1006D1E98);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMFindingExperienceCoordinator: Creating spBTFindingSession", v5, 2u);
    swift_slowDealloc();
  }

  id v6 = [objc_allocWithZone((Class)SPBTFindingSessionConfig) initWithOptInRawRSSIMeasurement:0];
  id v7 = [objc_allocWithZone((Class)SPBTFindingSession) initWithConfig:v6];

  uint64_t v8 = OBJC_IVAR____TtC6FindMy30FMFindingExperienceCoordinator_spFindingSession;
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy30FMFindingExperienceCoordinator_spFindingSession);
  *(void *)(v1 + OBJC_IVAR____TtC6FindMy30FMFindingExperienceCoordinator_spFindingSession) = v7;

  uint64_t v10 = *(void **)(v1 + v8);
  if (v10)
  {
    uint64_t v11 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v14[4] = sub_10045CFE8;
    v14[5] = v11;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 1107296256;
    v14[2] = sub_10003C410;
    v14[3] = &unk_10063CF78;
    uint64_t v12 = _Block_copy(v14);
    id v13 = v10;
    swift_release();
    [v13 setSessionInvalidatedCallback:v12];
    _Block_release(v12);
  }
}

uint64_t sub_10045B090()
{
  uint64_t v0 = sub_10005D034((uint64_t *)&unk_1006B1760);
  __chkstk_darwin(v0 - 8);
  uint64_t v125 = (char *)v114 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10005D034(&qword_1006B2AF0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  id v122 = (char *)v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v124 = (char *)v114 - v5;
  uint64_t v6 = type metadata accessor for FMIPDevice();
  uint64_t v126 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  id v121 = (char *)v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v123 = (char *)v114 - v9;
  uint64_t v128 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v128 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = __chkstk_darwin(v128);
  id v13 = (char *)v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  os_log_type_t v16 = (char *)v114 - v15;
  __chkstk_darwin(v14);
  id v127 = (char *)v114 - v17;
  uint64_t v18 = sub_10005D034((uint64_t *)&unk_1006B36A0);
  uint64_t v19 = __chkstk_darwin(v18);
  id v129 = (char *)v114 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)v114 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)v114 - v24;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v27 = (void *)result;
    uint64_t v115 = v11;
    uint64_t v119 = v6;
    sub_10045AE90();
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    uint64_t v29 = sub_1000606BC(v28, (uint64_t)qword_1006D1E98);
    id v30 = v27;
    uint64_t v120 = v29;
    id v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.default.getter();
    BOOL v33 = os_log_type_enabled(v31, v32);
    id v34 = &OBJC_IVAR____TtC6FindMy19FMConditionProvider_isAccountManaged;
    id v116 = v16;
    id v118 = v13;
    if (v33)
    {
      os_log_type_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v117 = v10;
      v114[2] = v36;
      v131[0] = v36;
      *(_DWORD *)os_log_type_t v35 = 136315138;
      v114[1] = v35 + 4;
      id v37 = v23;
      id v38 = (char *)v30 + OBJC_IVAR____TtC6FindMy30FMFindingExperienceCoordinator_mode;
      swift_beginAccess();
      uint64_t v39 = (uint64_t)v38;
      uint64_t v23 = v37;
      sub_10045CFF0(v39, (uint64_t)v25);
      uint64_t v40 = String.init<A>(describing:)();
      uint64_t v130 = sub_1000606F4(v40, v41, v131);
      id v34 = &OBJC_IVAR____TtC6FindMy19FMConditionProvider_isAccountManaged;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "FMFindingExperienceCoordinator: SPBTFindingSession invalidated, determining whether to re-set up for mode: %s", v35, 0xCu);
      swift_arrayDestroy();
      uint64_t v10 = v117;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v42 = (uint64_t)v30 + v34[470];
    swift_beginAccess();
    sub_10045CFF0(v42, (uint64_t)v23);
    uint64_t v43 = type metadata accessor for FindingMode(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v23, 1, v43) == 1)
    {
    }
    else
    {
      sub_10045CFF0((uint64_t)v23, (uint64_t)v129);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        id v56 = *(char **)v129;
        uint64_t v57 = dispatch thunk of FMFindingSession.findingSessionIdentifier.getter();
        uint64_t v59 = v58;
        uint64_t v60 = (uint64_t)v125;
        UUID.init(uuidString:)();
        uint64_t v61 = v128;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v60, 1, v128) == 1)
        {
          swift_bridgeObjectRelease();
          sub_100003F10(v60, (uint64_t *)&unk_1006B1760);
          id v62 = Logger.logObject.getter();
          os_log_type_t v63 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v62, v63))
          {
            id v64 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v64 = 0;
            _os_log_impl((void *)&_mh_execute_header, v62, v63, "FMFindingExperienceCoordinator: Currently in proximity finding mode, no findable. Returning.", v64, 2u);
            swift_slowDealloc();
            id v65 = v30;
          }
          else
          {
            id v65 = v62;
            id v62 = v30;
          }

          swift_release();
        }
        else
        {
          id v129 = v23;
          uint64_t v117 = v10;
          id v127 = *(char **)(v10 + 32);
          ((void (*)(char *, uint64_t, uint64_t))v127)(v118, v60, v61);
          v114[0] = v30;
          swift_retain();
          uint64_t v66 = FMIPManager.devices.getter();
          swift_bridgeObjectRetain();
          id v67 = sub_1004B2348(v66, v57, v59);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*((void *)v67 + 2))
          {
            uint64_t v68 = v126;
            uint64_t v69 = (uint64_t)v122;
            uint64_t v70 = v119;
            (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v122, &v67[(*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80)], v119);
            uint64_t v71 = 0;
          }
          else
          {
            uint64_t v71 = 1;
            uint64_t v70 = v119;
            uint64_t v68 = v126;
            uint64_t v69 = (uint64_t)v122;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56))(v69, v71, 1, v70);
          swift_release();
          swift_bridgeObjectRelease();
          int v92 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v69, 1, v70);
          id v93 = (void *)v114[0];
          if (v92 == 1)
          {
            swift_bridgeObjectRelease();
            sub_100003F10(v69, &qword_1006B2AF0);
          }
          else
          {
            id v94 = v121;
            (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v121, v69, v70);
            if (FMIPDevice.isLocalFindable.getter())
            {
              uint64_t v125 = v56;
              double v95 = Logger.logObject.getter();
              os_log_type_t v96 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v95, v96))
              {
                id v97 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)id v97 = 0;
                _os_log_impl((void *)&_mh_execute_header, v95, v96, "FMFindingExperienceCoordinator: Currently in proximity finding mode, re-running start finding", v97, 2u);
                swift_slowDealloc();
              }

              uint64_t v98 = swift_allocObject();
              swift_unknownObjectWeakInit();
              uint64_t v99 = v117;
              Class v100 = v116;
              uint64_t v101 = v128;
              (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v116, v118, v128);
              unint64_t v102 = (*(unsigned __int8 *)(v99 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80);
              unint64_t v103 = (v115 + v102 + 7) & 0xFFFFFFFFFFFFFFF8;
              uint64_t v104 = swift_allocObject();
              *(void *)(v104 + 16) = v98;
              ((void (*)(unint64_t, char *, uint64_t))v127)(v104 + v102, v100, v101);
              id v105 = (uint64_t *)(v104 + v103);
              *id v105 = v57;
              v105[1] = v59;
              swift_retain();
              uint64_t v106 = (uint64_t)v118;
              id v107 = (void *)v114[0];
              sub_10019EBEC((uint64_t)v118, (uint64_t)sub_10045D1A0, v104);

              swift_release();
              swift_release();
              (*(void (**)(char *, uint64_t))(v126 + 8))(v121, v119);
              (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v106, v101);
              swift_release();
              uint64_t v23 = v129;
              return sub_100003F10((uint64_t)v23, (uint64_t *)&unk_1006B36A0);
            }
            (*(void (**)(char *, uint64_t))(v68 + 8))(v94, v70);
            swift_bridgeObjectRelease();
          }
          id v108 = Logger.logObject.getter();
          os_log_type_t v109 = static os_log_type_t.default.getter();
          BOOL v110 = os_log_type_enabled(v108, v109);
          uint64_t v23 = v129;
          uint64_t v111 = v117;
          uint64_t v112 = (uint64_t)v118;
          if (v110)
          {
            id v113 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v113 = 0;
            _os_log_impl((void *)&_mh_execute_header, v108, v109, "FMFindingExperienceCoordinator: Currently in proximity finding mode, but device isn't local findable. Returning.", v113, 2u);
            id v93 = (void *)v114[0];
            swift_slowDealloc();
          }

          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v112, v128);
        }
      }
      else if (EnumCaseMultiPayload)
      {

        sub_10045D058((uint64_t)v129);
      }
      else
      {
        uint64_t v45 = v10;
        id v46 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
        v46(v127, v129, v128);
        v114[0] = v30;
        swift_retain();
        uint64_t v47 = UUID.uuidString.getter();
        uint64_t v49 = v48;
        uint64_t v50 = FMIPManager.devices.getter();
        swift_bridgeObjectRetain();
        id v51 = sub_1004B2348(v50, v47, v49);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((void *)v51 + 2))
        {
          uint64_t v52 = v126;
          id v53 = v124;
          uint64_t v54 = v119;
          (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v124, &v51[(*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80)], v119);
          uint64_t v55 = 0;
        }
        else
        {
          uint64_t v55 = 1;
          uint64_t v54 = v119;
          uint64_t v52 = v126;
          id v53 = v124;
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v53, v55, 1, v54);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        int v72 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48))(v53, 1, v54);
        uint64_t v73 = (uint64_t)v53;
        id v74 = (void *)v114[0];
        if (v72 == 1)
        {
          sub_100003F10(v73, &qword_1006B2AF0);
        }
        else
        {
          id v75 = v123;
          (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v123, v73, v54);
          if (FMIPDevice.isLocalFindable.getter())
          {
            id v129 = (char *)v46;
            id v76 = Logger.logObject.getter();
            os_log_type_t v77 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v76, v77))
            {
              id v78 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)id v78 = 0;
              _os_log_impl((void *)&_mh_execute_header, v76, v77, "FMFindingExperienceCoordinator: Currently in proximity discovery, re-running start finding", v78, 2u);
              swift_slowDealloc();
            }

            uint64_t v79 = v45;
            double v80 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
            id v81 = v116;
            uint64_t v82 = (uint64_t)v127;
            uint64_t v83 = v128;
            v80(v116, v127, v128);
            unint64_t v84 = (*(unsigned __int8 *)(v79 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
            uint64_t v85 = swift_allocObject();
            ((void (*)(unint64_t, char *, uint64_t))v129)(v85 + v84, v81, v83);
            id v86 = (void *)v114[0];
            sub_10019EBEC(v82, (uint64_t)sub_10045D2E4, v85);

            swift_release();
            (*(void (**)(char *, uint64_t))(v52 + 8))(v123, v54);
            (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v82, v83);
            return sub_100003F10((uint64_t)v23, (uint64_t *)&unk_1006B36A0);
          }
          (*(void (**)(char *, uint64_t))(v52 + 8))(v75, v54);
        }
        id v87 = Logger.logObject.getter();
        os_log_type_t v88 = static os_log_type_t.default.getter();
        BOOL v89 = os_log_type_enabled(v87, v88);
        uint64_t v90 = v128;
        if (v89)
        {
          id v91 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v91 = 0;
          _os_log_impl((void *)&_mh_execute_header, v87, v88, "FMFindingExperienceCoordinator: Currently in proximity finding mode, but device isn't local findable. Returning.", v91, 2u);
          id v74 = (void *)v114[0];
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v45 + 8))(v127, v90);
      }
    }
    return sub_100003F10((uint64_t)v23, (uint64_t *)&unk_1006B36A0);
  }
  return result;
}

void sub_10045BF38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMIPActionStatus();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for FMIPActionStatus.success(_:), v9);
  sub_10045D364(&qword_1006C03C0, (void (*)(uint64_t))&type metadata accessor for FMIPActionStatus);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  uint64_t v14 = v28;
  uint64_t v13 = v29;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v13 == v14)
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_1000606BC(v15, (uint64_t)qword_1006D1E98);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, v5);
    os_log_type_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315138;
      sub_10045D364((unint64_t *)&qword_1006B6CC0, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v28 = sub_1000606F4(v19, v20, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "FMFindingExperienceCoordinator: Finding action RESTART succeeded for identifier: %s", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  else
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_1000606BC(v21, (uint64_t)qword_1006D1E98);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 138412290;
      if (a2)
      {
        swift_errorRetain();
        uint64_t v26 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v29 = v26;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
      }
      else
      {
        uint64_t v29 = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v26 = 0;
      }
      *uint64_t v25 = v26;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "FMFindingExperienceCoordinator: Finding action RESTART failed with error %@", v24, 0xCu);
      sub_10005D034((uint64_t *)&unk_1006B5A50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_10045C4A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v41 = a5;
  unint64_t v42 = a6;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FMIPActionStatus();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v40 = (void *)result;
    uint64_t v17 = a4;
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for FMIPActionStatus.success(_:), v12);
    sub_10045D364(&qword_1006C03C0, (void (*)(uint64_t))&type metadata accessor for FMIPActionStatus);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v19 = v43;
    uint64_t v18 = v44;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    unint64_t v20 = &qword_1006AE000;
    if (v18 == v19)
    {
      if (qword_1006AE190 != -1) {
        swift_once();
      }
      uint64_t v21 = type metadata accessor for Logger();
      sub_1000606BC(v21, (uint64_t)qword_1006D1E98);
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v17, v8);
      uint64_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        uint64_t v44 = swift_slowAlloc();
        *(_DWORD *)uint64_t v24 = 136315138;
        sub_10045D364((unint64_t *)&qword_1006B6CC0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v43 = sub_1000606F4(v25, v26, &v44);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "FMFindingExperienceCoordinator: Finding action RESTART succeeded for identifier: %s", v24, 0xCu);
        swift_arrayDestroy();
        unint64_t v20 = &qword_1006AE000;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      }
    }
    else
    {
      if (qword_1006AE190 != -1) {
        swift_once();
      }
      uint64_t v27 = type metadata accessor for Logger();
      sub_1000606BC(v27, (uint64_t)qword_1006D1E98);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v28 = Logger.logObject.getter();
      os_log_type_t v29 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v28, v29))
      {
        id v30 = (uint8_t *)swift_slowAlloc();
        id v31 = (void *)swift_slowAlloc();
        *(_DWORD *)id v30 = 138412290;
        if (a2)
        {
          swift_errorRetain();
          uint64_t v32 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v44 = v32;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
        }
        else
        {
          uint64_t v44 = 0;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          uint64_t v32 = 0;
        }
        *id v31 = v32;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "FMFindingExperienceCoordinator: Finding action RESTART failed with error %@", v30, 0xCu);
        sub_10005D034((uint64_t *)&unk_1006B5A50);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        unint64_t v20 = &qword_1006AE000;
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }
    }
    if (v20[50] != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    sub_1000606BC(v33, (uint64_t)qword_1006D1E98);
    id v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "FMFindingExperienceCoordinator: Now re-running start fast advt", v36, 2u);
      swift_slowDealloc();
    }

    unint64_t v37 = v42;
    swift_bridgeObjectRetain();
    id v38 = v40;
    sub_1001A0064(v41, v37, 1, (uint64_t)v40, v41, v37);

    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_10045CB38(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000606BC(v6, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  oslog = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    swift_bridgeObjectRetain();
    sub_1000606F4(a3, a4, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    swift_errorRetain();
    sub_10005D034(&qword_1006B4220);
    uint64_t v9 = String.init<A>(describing:)();
    sub_1000606F4(v9, v10, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v7, "FMFindingExperienceCoordinator: Fast advertisement RESTARTED for identifier: %s. With error?: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
}

id sub_10045CDCC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFindingExperienceCoordinator();
  return [super dealloc];
}

uint64_t sub_10045CE5C()
{
  return type metadata accessor for FMFindingExperienceCoordinator();
}

uint64_t type metadata accessor for FMFindingExperienceCoordinator()
{
  uint64_t result = qword_1006BEEE0;
  if (!qword_1006BEEE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10045CEB0()
{
  sub_10045CF58();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10045CF58()
{
  if (!qword_1006B35E8)
  {
    type metadata accessor for FindingMode(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1006B35E8);
    }
  }
}

uint64_t sub_10045CFB0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10045CFE8()
{
  return sub_10045B090();
}

uint64_t sub_10045CFF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006B36A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10045D058(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FindingMode(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10045D0B4()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10045D1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = v2 + v6;
  uint64_t v9 = (uint64_t *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];

  return sub_10045C4A4(a1, a2, v7, v8, v10, v11);
}

uint64_t sub_10045D254()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_10045D2E4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_10045BF38(a1, a2, v6);
}

uint64_t sub_10045D364(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10045D3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FindingMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10045D410(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006B36A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10045D478(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

id sub_10045D4D8()
{
  uint64_t v0 = self;
  id v1 = [v0 systemBlueColor];
  id v2 = [self redPinColor];
  id result = [v0 systemRedColor];
  qword_1006D2660 = 0x4038000000000000;
  qword_1006D2668 = (uint64_t)v1;
  qword_1006D2670 = 0x3FB999999999999ALL;
  qword_1006D2678 = (uint64_t)v2;
  qword_1006D2680 = (uint64_t)result;
  return result;
}

void sub_10045D5AC()
{
  id v1 = v0;
  id v135 = 0;
  unint64_t v136 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v132 = self;
  id v2 = [v132 mainBundle];
  v139._uint64_t countAndFlagsBits = 0xD000000000000018;
  v139._object = (void *)0x800000010059E6F0;
  v3._uint64_t countAndFlagsBits = 0x594649544F4ELL;
  v3._object = (void *)0xE600000000000000;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v139);

  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setTitle:v5];

  id v6 = [objc_allocWithZone((Class)MKMapView) init];
  uint64_t v7 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
  uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView];
  *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView] = v6;

  uint64_t v9 = *(void **)&v1[v7];
  if (!v9)
  {
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v10 = self;
  id v11 = v9;
  [v11 setMapType:[v10 storedMapType]];

  uint64_t v12 = *(void **)&v1[v7];
  if (!v12)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  sub_100006060(0, &qword_1006BDA30);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v14 = v12;
  NSString v15 = String._bridgeToObjectiveC()();
  [v14 registerClass:ObjCClassFromMetadata forAnnotationViewWithReuseIdentifier:v15];

  os_log_type_t v16 = *(void **)&v1[v7];
  if (!v16)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  [v16 setDelegate:v1];
  id v17 = [v1 view];
  if (!v17)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (!*(void *)&v1[v7])
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  uint64_t v18 = v17;
  [v17 addSubview:];

  id v19 = [objc_allocWithZone((Class)FMMapDragRadiusView) init];
  uint64_t v20 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView;
  uint64_t v21 = *(void **)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView];
  *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView] = v19;

  uint64_t v22 = *(void **)&v1[v20];
  if (!v22)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  os_log_type_t v23 = self;
  id v24 = v22;
  id v134 = v23;
  id v25 = [v23 clearColor];
  [v24 setBackgroundColor:v25];

  unint64_t v26 = *(void **)&v1[v20];
  if (!v26)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  [v26 setMapView:*(void *)&v1[v7]];
  uint64_t v27 = *(void **)&v1[v20];
  if (!v27)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  [v27 setDelegate:v1];
  id v28 = [v1 view];
  if (!v28)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  if (!*(void *)&v1[v20])
  {
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  os_log_type_t v29 = v28;
  [v28 addSubview:];

  id v131 = v1;
  id v30 = [v1 navigationController];
  if (v30)
  {
    id v31 = v30;
    id v32 = [v30 view];

    if (!v32)
    {
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    id v33 = [v134 secondarySystemBackgroundColor];
    [v32 setBackgroundColor:v33];
  }
  uint64_t v128 = v7;
  unint64_t v136 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v34 = [v132 mainBundle];
  v140._uint64_t countAndFlagsBits = 0xD000000000000024;
  v140._object = (void *)0x800000010059E730;
  v35._object = (void *)0x800000010059E710;
  v35._uint64_t countAndFlagsBits = 0xD000000000000012;
  v36._uint64_t countAndFlagsBits = 0;
  v36._object = (void *)0xE000000000000000;
  Swift::String v37 = NSLocalizedString(_:tableName:bundle:value:comment:)(v35, (Swift::String_optional)0, (NSBundle)v34, v36, v140);

  uint64_t v38 = type metadata accessor for FMFenceMapViewController();
  uint64_t v137 = v38;
  id v135 = v1;
  uint64_t v39 = (objc_class *)type metadata accessor for FMStickyRoundedButton();
  id v40 = objc_allocWithZone(v39);
  uint64_t v41 = v1;
  id v127 = sub_1001CA7A0(v37._countAndFlagsBits, (uint64_t)v37._object, (uint64_t)&v135, (uint64_t)"chooseSmallRadiusActionWithSender:");
  id v42 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v127];
  uint64_t comment_8 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_smallRadiusBarButtonItem;
  uint64_t v43 = *(void **)&v41[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_smallRadiusBarButtonItem];
  *(void *)&v41[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_smallRadiusBarButtonItem] = v42;

  id v135 = 0;
  unint64_t v136 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v44 = [v132 mainBundle];
  v45._uint64_t countAndFlagsBits = 0xD000000000000013;
  v141._uint64_t countAndFlagsBits = 0xD000000000000025;
  v141._object = (void *)0x800000010059E780;
  v45._object = (void *)0x800000010059E760;
  v46._uint64_t countAndFlagsBits = 0;
  v46._object = (void *)0xE000000000000000;
  Swift::String v47 = NSLocalizedString(_:tableName:bundle:value:comment:)(v45, (Swift::String_optional)0, (NSBundle)v44, v46, v141);

  uint64_t v137 = v38;
  id v135 = v41;
  id v48 = objc_allocWithZone(v39);
  uint64_t v49 = v41;
  id v126 = sub_1001CA7A0(v47._countAndFlagsBits, (uint64_t)v47._object, (uint64_t)&v135, (uint64_t)"chooseMediumRadiusActionWithSender:");
  id v50 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v126];
  uint64_t v51 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediumRadiusBarButtonItem;
  uint64_t v52 = *(void **)&v49[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediumRadiusBarButtonItem];
  *(void *)&v49[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediumRadiusBarButtonItem] = v50;

  id v135 = 0;
  unint64_t v136 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v53 = [v132 mainBundle];
  v142._object = (void *)0x800000010059E7D0;
  v54._object = (void *)0x800000010059E7B0;
  v54._uint64_t countAndFlagsBits = 0xD000000000000012;
  v55._uint64_t countAndFlagsBits = 0;
  v55._object = (void *)0xE000000000000000;
  v142._uint64_t countAndFlagsBits = 0xD000000000000024;
  Swift::String v56 = NSLocalizedString(_:tableName:bundle:value:comment:)(v54, (Swift::String_optional)0, (NSBundle)v53, v55, v142);

  uint64_t v137 = v38;
  id v135 = v49;
  id v57 = objc_allocWithZone(v39);
  uint64_t v58 = v49;
  id v59 = sub_1001CA7A0(v56._countAndFlagsBits, (uint64_t)v56._object, (uint64_t)&v135, (uint64_t)"chooseLargeRadiusActionWithSender:");
  id v60 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v59];
  uint64_t v61 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_largeRadiusBarButtonItem;
  id v62 = *(void **)&v58[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_largeRadiusBarButtonItem];
  *(void *)&v58[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_largeRadiusBarButtonItem] = v60;

  id v63 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:6 target:0 action:0];
  [v63 setWidth:*(double *)&v58[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_style]];
  id v64 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:5 target:0 action:0];
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = xmmword_10055EFD0;
  *(void *)(v65 + 32) = v63;
  uint64_t v66 = *(void **)&v41[comment_8];
  if (!v66) {
    goto LABEL_59;
  }
  *(void *)(v65 + 40) = v66;
  *(void *)(v65 + 48) = v64;
  id v67 = *(void **)&v49[v51];
  if (!v67)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  *(void *)(v65 + 56) = v67;
  *(void *)(v65 + 64) = v64;
  uint64_t v68 = *(void **)&v58[v61];
  if (!v68)
  {
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  *(void *)(v65 + 72) = v68;
  *(void *)(v65 + 80) = v63;
  id v135 = (char *)v65;
  specialized Array._endMutation()();
  sub_100006060(0, &qword_1006AF860);
  id v69 = v63;
  id comment = v64;
  id v125 = v69;
  id v70 = v66;
  id v71 = v67;
  id v72 = v68;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v58 setToolbarItems:isa];

  id v74 = [v58 navigationController];
  if (v74)
  {
    id v75 = v74;
    id v76 = [v74 toolbar];

    if (!v76)
    {
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    [v76 setTranslucent:0];
  }
  id v77 = [v58 navigationController];
  if (v77)
  {
    id v78 = v77;
    id v79 = [v77 toolbar];

    if (!v79)
    {
LABEL_73:
      __break(1u);
      return;
    }
    id v80 = [v134 secondarySystemBackgroundColor];
    [v79 setBackgroundColor:v80];
  }
  if ((v58[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isOtherUsage] & 1) == 0)
  {
    id v81 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:1 target:v58 action:"cancelActionWithSender:"];
    id v82 = [v58 navigationItem];
    [v82 setLeftBarButtonItem:v81];
  }
  id v83 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:0 target:v58 action:"doneActionWithSender:"];
  id v84 = [v58 navigationItem];
  [v84 setRightBarButtonItem:v83];

  id v85 = [objc_allocWithZone((Class)UISearchController) initWithSearchResultsController:0];
  id v86 = [v58 traitCollection];
  id v87 = [v86 horizontalSizeClass];

  id v88 = [v58 traitCollection];
  id v89 = [v88 verticalSizeClass];

  BOOL v91 = v87 == (id)1 || v89 == (id)1;
  [v85 setHidesNavigationBarDuringPresentation:v91];
  [v85 setObscuresBackgroundDuringPresentation:0];
  [v85 setSearchResultsUpdater:v58];
  id v92 = [v85 searchBar];
  id v135 = 0;
  unint64_t v136 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v93 = [v132 mainBundle];
  v94._uint64_t countAndFlagsBits = 0xD000000000000016;
  v143._uint64_t countAndFlagsBits = 0xD000000000000028;
  v143._object = (void *)0x800000010059E290;
  v94._object = (void *)0x800000010059E270;
  v95._uint64_t countAndFlagsBits = 0;
  v95._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v94, (Swift::String_optional)0, (NSBundle)v93, v95, v143);

  NSString v96 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v92 setPlaceholder:v96];

  id v97 = [v85 searchBar];
  [v97 setDelegate:v58];

  id v98 = [v85 searchBar];
  id v99 = [v134 secondarySystemBackgroundColor];
  [v98 setBackgroundColor:v99];

  id v100 = [v85 navigationController];
  if (v100)
  {
    uint64_t v101 = v100;
    id v102 = [v100 navigationBar];

    [v102 setTranslucent:0];
  }
  unint64_t v103 = *(void **)&v58[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchController];
  *(void *)&v58[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchController] = v85;
  id v133 = v85;

  id v104 = [objc_allocWithZone((Class)UITableView) initWithFrame:0.0 style:0.0];
  uint64_t v105 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView;
  uint64_t v106 = *(void **)&v58[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView];
  *(void *)&v58[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView] = v104;

  id v107 = *(void **)&v58[v105];
  if (!v107) {
    goto LABEL_62;
  }
  [v107 setDataSource:v58];
  id v108 = *(void **)&v58[v105];
  if (!v108)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  [v108 setDelegate:v58];
  os_log_type_t v109 = *(void **)&v58[v105];
  if (!v109)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  [v109 setKeyboardDismissMode:2];
  BOOL v110 = *(void **)&v58[v105];
  if (!v110)
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  [v110 setHidden:1];
  uint64_t v111 = *(void **)&v58[v105];
  if (!v111)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  [v111 setAutoresizingMask:0];
  id v112 = [v58 view];
  if (!v112)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if (!*(void *)&v58[v105])
  {
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  id v113 = v112;
  [v112 addSubview:];

  id v114 = [v58 navigationItem];
  [v114 setHidesSearchBarWhenScrolling:1];

  id v115 = [v58 navigationItem];
  [v115 setSearchController:v133];

  id v116 = [v58 navigationController];
  if (v116)
  {
    uint64_t v117 = v116;
    id v118 = [v116 navigationBar];

    [v118 setTranslucent:0];
  }
  id v119 = [v58 navigationController];
  if (v119)
  {
    uint64_t v120 = v119;
    id v121 = [v119 navigationBar];

    id v122 = [v134 secondarySystemBackgroundColor];
    [v121 setBackgroundColor:v122];
  }
  id v123 = *(void **)&v131[v128];
  if (!v123) {
    goto LABEL_69;
  }
  [v123 setShowsUserLocation:1];
  id v124 = *(void **)&v131[v128];
  if (!v124)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  [v124 setUserTrackingMode:0 animated:1];
}

void sub_10045E488()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView];
  if (!v2)
  {
    __break(1u);
    goto LABEL_32;
  }
  Swift::String v3 = v0;
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10055B950;
  NSString v5 = *(void **)&v3[v1];
  if (!v5)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  id v6 = [v5 topAnchor];
  id v7 = [v3 view];
  if (!v7)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v8 = v7;
  id v9 = [v7 safeAreaLayoutGuide];

  id v10 = [v9 topAnchor];
  id v11 = [v6 constraintEqualToAnchor:v10];

  *(void *)(v4 + 32) = v11;
  uint64_t v12 = *(void **)&v3[v1];
  if (!v12)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  id v13 = [v12 bottomAnchor];
  id v14 = [v3 view];
  if (!v14)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  NSString v15 = v14;
  id v16 = [v14 safeAreaLayoutGuide];

  id v17 = [v16 bottomAnchor];
  id v18 = [v13 constraintEqualToAnchor:v17];

  *(void *)(v4 + 40) = v18;
  id v19 = *(void **)&v3[v1];
  if (!v19)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  id v20 = [v19 leadingAnchor];
  id v21 = [v3 view];
  if (!v21)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v22 = v21;
  id v23 = [v21 safeAreaLayoutGuide];

  id v24 = [v23 leadingAnchor];
  id v25 = [v20 constraintEqualToAnchor:v24];

  *(void *)(v4 + 48) = v25;
  unint64_t v26 = *(void **)&v3[v1];
  if (!v26)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  id v27 = [v26 trailingAnchor];
  id v28 = [v3 view];
  if (!v28)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  os_log_type_t v29 = v28;
  id v30 = self;
  id v31 = [v29 safeAreaLayoutGuide];

  id v32 = [v31 trailingAnchor];
  id v33 = [v27 constraintEqualToAnchor:v32];

  *(void *)(v4 + 56) = v33;
  specialized Array._endMutation()();
  sub_100006060(0, (unint64_t *)&qword_1006AEE60);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v96 = v30;
  [v30 activateConstraints:isa];

  uint64_t v35 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView;
  Swift::String v36 = *(void **)&v3[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView];
  if (!v36)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  [v36 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_10055B950;
  uint64_t v38 = *(void **)&v3[v35];
  if (!v38)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  id v39 = [v38 topAnchor];
  id v40 = [v3 view];
  if (!v40)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v41 = v40;
  id v42 = [v40 safeAreaLayoutGuide];

  id v43 = [v42 topAnchor];
  id v44 = [v39 constraintEqualToAnchor:v43];

  *(void *)(v37 + 32) = v44;
  Swift::String v45 = *(void **)&v3[v35];
  if (!v45)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  id v46 = [v45 bottomAnchor];
  id v47 = [v3 view];
  if (!v47)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  id v48 = v47;
  id v49 = [v47 safeAreaLayoutGuide];

  id v50 = [v49 bottomAnchor];
  id v51 = [v46 constraintEqualToAnchor:v50];

  *(void *)(v37 + 40) = v51;
  uint64_t v52 = *(void **)&v3[v35];
  if (!v52)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  id v53 = [v52 leadingAnchor];
  id v54 = [v3 view];
  if (!v54)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  Swift::String v55 = v54;
  id v56 = [v54 safeAreaLayoutGuide];

  id v57 = [v56 leadingAnchor];
  id v58 = [v53 constraintEqualToAnchor:v57];

  *(void *)(v37 + 48) = v58;
  id v59 = *(void **)&v3[v35];
  if (!v59)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  id v60 = [v59 trailingAnchor];
  id v61 = [v3 view];
  if (!v61)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  id v62 = v61;
  id v63 = [v61 safeAreaLayoutGuide];

  id v64 = [v63 trailingAnchor];
  id v65 = [v60 constraintEqualToAnchor:v64];

  *(void *)(v37 + 56) = v65;
  specialized Array._endMutation()();
  Class v66 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v96 activateConstraints:v66];

  uint64_t v67 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView;
  uint64_t v68 = *(void **)&v3[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView];
  if (!v68)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  [v68 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v69 = swift_allocObject();
  *(_OWORD *)(v69 + 16) = xmmword_10055B950;
  id v70 = *(void **)&v3[v67];
  if (!v70)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  id v71 = [v70 topAnchor];
  id v72 = [v3 view];
  if (!v72)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  uint64_t v73 = v72;
  id v74 = [v72 safeAreaLayoutGuide];

  id v75 = [v74 topAnchor];
  id v76 = [v71 constraintEqualToAnchor:v75];

  *(void *)(v69 + 32) = v76;
  id v77 = *(void **)&v3[v67];
  if (!v77)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  id v78 = [v77 bottomAnchor];
  id v79 = [v3 view];
  if (!v79)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  id v80 = v79;
  id v81 = [v79 safeAreaLayoutGuide];

  id v82 = [v81 bottomAnchor];
  id v83 = [v78 constraintEqualToAnchor:v82];

  *(void *)(v69 + 40) = v83;
  id v84 = *(void **)&v3[v67];
  if (!v84)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  id v85 = [v84 leadingAnchor];
  id v86 = [v3 view];
  if (!v86)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  id v87 = v86;
  id v88 = [v86 leadingAnchor];

  id v89 = [v85 constraintEqualToAnchor:v88];
  *(void *)(v69 + 48) = v89;
  uint64_t v90 = *(void **)&v3[v67];
  if (!v90)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  id v91 = [v90 trailingAnchor];
  id v92 = [v3 view];
  if (!v92)
  {
LABEL_57:
    __break(1u);
    return;
  }
  id v93 = v92;
  id v94 = [v92 trailingAnchor];

  id v95 = [v91 constraintEqualToAnchor:v94];
  *(void *)(v69 + 56) = v95;
  specialized Array._endMutation()();
  Class v97 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v96 activateConstraints:v97];
}

void sub_10045EE0C()
{
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for FMFenceMapViewController();
  [super viewDidLoad];
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediator];
  if (!v1)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v2 = *(void *)(v1 + 48);
  type metadata accessor for FMPeopleSubscription();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber + 8) = 0;
  swift_unknownObjectWeakInit();
  swift_retain();
  uint64_t v4 = v0;
  UUID.init()();
  *(void *)(v3 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber + 8) = &off_10063D080;
  swift_unknownObjectWeakAssign();

  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(v2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v2 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  swift_release();
  *(void *)&v4[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_peopleSubscription] = v3;
  swift_release();
  sub_10045D5AC();
  sub_10045E488();
  id v5 = [objc_allocWithZone((Class)UILongPressGestureRecognizer) initWithTarget:v4 action:"longPressActionWithSender:"];
  uint64_t v6 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
  id v7 = *(void **)&v4[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView];
  if (!v7) {
    goto LABEL_8;
  }
  [v7 addGestureRecognizer:v5];
  id v8 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v4 action:"mapTappedActionWithSender:"];
  id v9 = *(void **)&v4[v6];
  if (v9)
  {
    [v9 addGestureRecognizer:v8];

    sub_10045F9F8();
    return;
  }
LABEL_9:
  __break(1u);
}

id sub_10045F068(id result)
{
  char v2 = (char)result;
  uint64_t v3 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_peopleSubscription;
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_peopleSubscription];
  if (!v4) {
    goto LABEL_6;
  }
  uint64_t v5 = *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediator];
  if (v5)
  {
    uint64_t v6 = *(void *)(v5 + 48);
    swift_beginAccess();
    swift_retain();
    swift_retain();
    id result = (id)sub_100067860((uint64_t *)(v6 + 16), v4);
    uint64_t v7 = (uint64_t)result;
    unint64_t v8 = *(void *)(v6 + 16);
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      id result = (id)swift_bridgeObjectRelease();
      if (v9 >= v7) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v9 >= (uint64_t)result)
      {
LABEL_5:
        sub_1000675F4(v7, v9);
        swift_endAccess();
        swift_release();
        *(void *)&v1[v3] = 0;
        swift_release();
        swift_release();
LABEL_6:
        v10.receiver = v1;
        v10.super_class = (Class)type metadata accessor for FMFenceMapViewController();
        return [super viewWillDisappear:v2 & 1];
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_10045F210(uint64_t a1)
{
  v15.receiver = v1;
  v15.super_class = (Class)type metadata accessor for FMFenceMapViewController();
  id result = [super traitCollectionDidChange:a1];
  uint64_t v4 = (double *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_currentMapRegion];
  if ((v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_currentMapRegion + 32] & 1) == 0)
  {
    double v5 = *v4;
    double v6 = v4[1];
    double v7 = *v4;
    BOOL v8 = v6 < -180.0 || v6 > 180.0;
    BOOL v9 = v8 || v7 < -90.0;
    if (!v9 && v7 <= 90.0)
    {
      double v11 = v4[2];
      if (v11 >= 0.0 && v11 <= 180.0)
      {
        double v13 = v4[3];
        if (v13 >= 0.0 && v13 <= 360.0)
        {
          id result = *(id *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView];
          if (result)
          {
            id result = [result setRegion:1 animated:v7];
            *uint64_t v4 = v5;
            v4[1] = v6;
            v4[2] = v11;
            v4[3] = v13;
            *((unsigned char *)v4 + 32) = 0;
          }
          else
          {
            __break(1u);
          }
        }
      }
    }
  }
  return result;
}

void sub_10045F3A8(uint64_t a1, char *a2)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v37 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  double v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v36 = v6;
  __chkstk_darwin(v6);
  BOOL v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v14 = (char *)&v32 - v13;
  id v15 = [a2 traitCollection];
  id v16 = [v15 horizontalSizeClass];

  id v17 = [a2 traitCollection];
  id v18 = [v17 verticalSizeClass];

  if (v16 != (id)1 && v18 != (id)1) {
    return;
  }
  id v19 = *(void **)&a2[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView];
  if (!v19)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return;
  }
  [v19 setHidden:1];
  id v20 = [a2 navigationItem];
  id v21 = [v20 searchController];

  if (v21)
  {
    [v21 setActive:0];
  }
  uint64_t v22 = *(void **)&a2[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView];
  if (!v22) {
    goto LABEL_25;
  }
  id v23 = [v22 selectedAnnotations];
  sub_10005D034(&qword_1006BD9C0);
  unint64_t v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_9;
    }
  }
  else if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_9:
    if ((v24 & 0xC000000000000001) != 0)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_12:
      swift_bridgeObjectRelease();
      type metadata accessor for FMFenceMapAnnotation();
      uint64_t v25 = swift_dynamicCastClass();
      if (v25)
      {
        uint64_t v26 = v25;
        sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
        uint64_t v32 = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v33 = v9;
        uint64_t v34 = *(void *)(v34 + 8);
        ((void (*)(char *, uint64_t))v34)(v12, v9);
        uint64_t v27 = swift_allocObject();
        *(void *)(v27 + 16) = a2;
        *(void *)(v27 + 24) = v26;
        aBlock[4] = sub_10046F15C;
        aBlock[5] = v27;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10003C410;
        aBlock[3] = &unk_10063D4D0;
        id v28 = _Block_copy(aBlock);
        os_log_type_t v29 = a2;
        swift_unknownObjectRetain();
        swift_release();
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100045C34((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10005D034((uint64_t *)&unk_1006AE4B0);
        sub_10005ECA8();
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v30 = (void *)v32;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v28);
        swift_unknownObjectRelease();

        (*(void (**)(char *, uint64_t))(v37 + 8))(v5, v3);
        (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v36);
        ((void (*)(char *, uint64_t))v34)(v14, v33);
      }
      else
      {
        swift_unknownObjectRelease();
      }
      return;
    }
    if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      swift_unknownObjectRetain();
      goto LABEL_12;
    }
    __break(1u);
    goto LABEL_24;
  }

  swift_bridgeObjectRelease();
}

void sub_10045F9F8()
{
  uint64_t v1 = v0;
  uint64_t v160 = type metadata accessor for FMFAddress();
  uint64_t v161 = *(void *)(v160 - 8);
  __chkstk_darwin(v160);
  id v155 = (char *)&v141 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10005D034(&qword_1006AF730);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v141 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v141 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v141 - v11;
  __chkstk_darwin(v10);
  uint64_t v156 = (uint64_t)&v141 - v13;
  uint64_t v159 = type metadata accessor for FMFLabel();
  uint64_t v158 = *(void *)(v159 - 8);
  __chkstk_darwin(v159);
  id v154 = (char *)&v141 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10005D034(&qword_1006B8930);
  __chkstk_darwin(v15 - 8);
  uint64_t v157 = (uint64_t)&v141 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10005D034((uint64_t *)&unk_1006BF070);
  __chkstk_darwin(v17 - 8);
  id v19 = (char *)&v141 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for FMFLocationAlertAddressType();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v23 = __chkstk_darwin(v22);
  id v162 = (char *)&v141 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v141 - v26;
  uint64_t v28 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedLocation;
  os_log_type_t v29 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedLocation);
  if (v29)
  {
    id v152 = v25;
    id v149 = v9;
    uint64_t v30 = v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressType;
    swift_beginAccess();
    sub_100006AB0(v30, (uint64_t)v19, (uint64_t *)&unk_1006BF070);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
    {
      sub_100003F10((uint64_t)v19, (uint64_t *)&unk_1006BF070);
      uint64_t v31 = *(void **)(v1 + v28);
      if (v31)
      {
        if (*(unsigned char *)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressRadius + 8)) {
          double v32 = 2817.5;
        }
        else {
          double v32 = *(double *)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressRadius);
        }
        id v33 = v31;
        [v33 coordinate];
        CLLocationDegrees v35 = v34;
        [v33 coordinate];
        v166.latitude = v35;
        MKCoordinateRegion v167 = MKCoordinateRegionMakeWithDistance(v166, v32, v32);
        uint64_t v36 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
        uint64_t v37 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
        if (v37)
        {
          [v37 regionThatFits:v167.center.latitude, v167.center.longitude, v167.span.latitudeDelta, v167.span.longitudeDelta];
          double v42 = v38;
          if (v39 < -180.0) {
            goto LABEL_18;
          }
          double v43 = v39;
          if (v39 > 180.0) {
            goto LABEL_18;
          }
          if (v38 < -90.0) {
            goto LABEL_18;
          }
          if (v38 > 90.0) {
            goto LABEL_18;
          }
          double v44 = v40;
          if (v40 < 0.0) {
            goto LABEL_18;
          }
          if (v40 > 180.0) {
            goto LABEL_18;
          }
          double v45 = v41;
          if (v41 < 0.0 || v41 > 360.0) {
            goto LABEL_18;
          }
          id v46 = *(void **)(v1 + v36);
          if (v46)
          {
            [v46 setRegion:1 animated:v38, v39, v40, v41];
            uint64_t v47 = v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_currentMapRegion;
            *(double *)uint64_t v47 = v42;
            *(double *)(v47 + 8) = v43;
            *(double *)(v47 + 16) = v44;
            *(double *)(v47 + 24) = v45;
            *(unsigned char *)(v47 + 32) = 0;
LABEL_18:

            *(unsigned char *)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_showingUserLocation) = 1;
            return;
          }
          goto LABEL_83;
        }
        goto LABEL_80;
      }
      goto LABEL_19;
    }
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v27, v19, v20);
    id v55 = v29;
    [v55 coordinate];
    double v57 = v56;
    id v146 = v55;
    [v55 coordinate];
    double v59 = v58;
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressRadius + 8)) {
      double v60 = 100.0;
    }
    else {
      double v60 = *(double *)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressRadius);
    }
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    id v153 = v27;
    uint64_t v61 = type metadata accessor for Logger();
    sub_1000606BC(v61, (uint64_t)qword_1006D1E98);
    id v62 = Logger.logObject.getter();
    os_log_type_t v63 = static os_log_type_t.default.getter();
    BOOL v64 = os_log_type_enabled(v62, v63);
    uint64_t v145 = v1;
    id v147 = v6;
    Swift::String v141 = v12;
    if (v64)
    {
      id v65 = (uint8_t *)swift_slowAlloc();
      v164[0] = swift_slowAlloc();
      *(_DWORD *)id v65 = 136315138;
      uint64_t v66 = Double.description.getter();
      uint64_t v163 = sub_1000606F4(v66, v67, v164);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "FMFenceMapViewController: radius %s", v65, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v68 = v162;
    Swift::String v142 = *(void (**)(char *, void, uint64_t))(v21 + 104);
    v142(v162, enum case for FMFLocationAlertAddressType.friendLocation(_:), v20);
    uint64_t v69 = sub_100045C34((unint64_t *)&unk_1006BF0A0, (void (*)(uint64_t))&type metadata accessor for FMFLocationAlertAddressType);
    id v70 = v153;
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v143 = v69;
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v71 = v164[0];
    uint64_t v72 = v163;
    uint64_t v73 = *(void (**)(char *, uint64_t))(v21 + 8);
    v73(v68, v20);
    id v74 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
    id v75 = v152;
    uint64_t v148 = v21 + 16;
    id v144 = v74;
    v74(v152, v70, v20);
    uint64_t v151 = v21 + 8;
    id v150 = v73;
    if (v71 == v72)
    {
      uint64_t v76 = v20;
      v73(v75, v20);
    }
    else
    {
      id v83 = v142;
      v142(v68, enum case for FMFLocationAlertAddressType.custom(_:), v20);
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      uint64_t v84 = v164[0];
      uint64_t v85 = v163;
      v73(v68, v20);
      uint64_t v76 = v20;
      v73(v75, v20);
      if (v84 != v85)
      {
        id v98 = v162;
        uint64_t v97 = v20;
        v83(v162, enum case for FMFLocationAlertAddressType.currentLocation(_:), v20);
        dispatch thunk of RawRepresentable.rawValue.getter();
        dispatch thunk of RawRepresentable.rawValue.getter();
        uint64_t v104 = v164[0];
        uint64_t v105 = v163;
        v150(v98, v20);
        uint64_t v106 = v161;
        if (v104 == v105)
        {
          v164[0] = 0;
          v164[1] = 0xE000000000000000;
          _StringGuts.grow(_:)(20);
          swift_bridgeObjectRelease();
          id v107 = [self mainBundle];
          v165._uint64_t countAndFlagsBits = 0xD00000000000003FLL;
          v165._unint64_t object = (void *)0x800000010059E6B0;
          v108._unint64_t object = (void *)0x800000010059E680;
          v108._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
          v109._uint64_t countAndFlagsBits = 0;
          v109._unint64_t object = (void *)0xE000000000000000;
          Swift::String v110 = NSLocalizedString(_:tableName:bundle:value:comment:)(v108, (Swift::String_optional)0, (NSBundle)v107, v109, v165);
          uint64_t countAndFlagsBits = v110._countAndFlagsBits;
          unint64_t object = (unint64_t)v110._object;

          unint64_t v111 = ((unint64_t)v110._object >> 56) & 0xF;
          if (((uint64_t)v110._object & 0x2000000000000000) == 0) {
            unint64_t v111 = v110._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
          }
          uint64_t v112 = v145;
          if (v111)
          {
            uint64_t v113 = v145 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_address;
            swift_beginAccess();
            uint64_t v114 = v113;
            uint64_t v115 = (uint64_t)v149;
            sub_100006AB0(v114, (uint64_t)v149, &qword_1006AF730);
            uint64_t v116 = v160;
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v115, 1, v160))
            {
              uint64_t v130 = v155;
              (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v155, v115, v116);
              sub_100003F10(v115, &qword_1006AF730);
              uint64_t v131 = FMFAddress.displayAddressWithoutStreetName.getter();
              uint64_t v132 = v106;
              uint64_t v124 = v133;
              (*(void (**)(char *, uint64_t))(v132 + 8))(v130, v116);
              if (v124) {
                uint64_t v123 = v131;
              }
              else {
                uint64_t v123 = 0;
              }
              if (!v124) {
                uint64_t v124 = 0xE000000000000000;
              }
              goto LABEL_71;
            }
            sub_100003F10(v115, &qword_1006AF730);
            goto LABEL_59;
          }
          uint64_t v125 = v97;
          uint64_t v161 = v110._countAndFlagsBits;
          uint64_t v123 = 0;
          uint64_t v124 = 0;
        }
        else
        {
          uint64_t v125 = v20;
          uint64_t v123 = 0;
          uint64_t v124 = 0;
          uint64_t v161 = 0;
          unint64_t object = 0;
          uint64_t v112 = v145;
        }
        id v126 = v144;
        goto LABEL_76;
      }
    }
    uint64_t v86 = v145;
    uint64_t v87 = v145 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressLabel;
    swift_beginAccess();
    uint64_t v88 = v157;
    sub_100006AB0(v87, v157, &qword_1006B8930);
    uint64_t v89 = v158;
    uint64_t v90 = v159;
    int v91 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v158 + 48))(v88, 1, v159);
    uint64_t v92 = v161;
    if (v91)
    {
      sub_100003F10(v88, &qword_1006B8930);
      uint64_t v93 = v86 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_address;
      swift_beginAccess();
      uint64_t v94 = v93;
      uint64_t v95 = v156;
      sub_100006AB0(v94, v156, &qword_1006AF730);
      uint64_t v96 = v160;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v95, 1, v160))
      {
        sub_100003F10(v95, &qword_1006AF730);
        uint64_t v97 = v76;
        id v98 = v162;
      }
      else
      {
        uint64_t v117 = v155;
        (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v155, v95, v96);
        sub_100003F10(v95, &qword_1006AF730);
        uint64_t v118 = FMFAddress.displayAddressWithStreetName.getter();
        unint64_t object = v119;
        (*(void (**)(char *, uint64_t))(v92 + 8))(v117, v96);
        uint64_t v97 = v76;
        id v98 = v162;
        if (object)
        {
          uint64_t countAndFlagsBits = v118;
          goto LABEL_53;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t countAndFlagsBits = 0;
      unint64_t object = 0xE000000000000000;
    }
    else
    {
      uint64_t v101 = v154;
      (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v154, v88, v90);
      sub_100003F10(v88, &qword_1006B8930);
      uint64_t v102 = FMFLabel.localizedValue.getter();
      unint64_t object = v103;
      (*(void (**)(char *, uint64_t))(v89 + 8))(v101, v90);
      uint64_t v96 = v160;
      uint64_t v97 = v76;
      uint64_t countAndFlagsBits = v102;
      id v98 = v162;
    }
LABEL_53:
    uint64_t v120 = HIBYTE(object) & 0xF;
    if ((object & 0x2000000000000000) == 0) {
      uint64_t v120 = countAndFlagsBits & 0xFFFFFFFFFFFFLL;
    }
    if (!v120)
    {
      uint64_t v112 = v86;
      uint64_t v125 = v97;
      uint64_t v161 = countAndFlagsBits;
      uint64_t v123 = 0;
      uint64_t v124 = 0;
      id v126 = v144;
      goto LABEL_76;
    }
    uint64_t v121 = v86 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_address;
    swift_beginAccess();
    uint64_t v122 = (uint64_t)v141;
    sub_100006AB0(v121, (uint64_t)v141, &qword_1006AF730);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v122, 1, v96))
    {
      sub_100003F10(v122, &qword_1006AF730);
    }
    else
    {
      id v127 = v155;
      (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v155, v122, v96);
      sub_100003F10(v122, &qword_1006AF730);
      uint64_t v123 = FMFAddress.displayAddressWithoutStreetName.getter();
      uint64_t v128 = v92;
      uint64_t v124 = v129;
      (*(void (**)(char *, uint64_t))(v128 + 8))(v127, v96);
      if (v124)
      {
        uint64_t v112 = v86;
LABEL_71:
        id v126 = v144;
        uint64_t v125 = v97;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        if (countAndFlagsBits == v123 && object == v124)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          uint64_t v161 = v123;
LABEL_75:
          swift_bridgeObjectRelease();
          uint64_t v123 = 0;
          uint64_t v124 = 0;
          goto LABEL_76;
        }
        uint64_t v161 = countAndFlagsBits;
        char v134 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        if (v134) {
          goto LABEL_75;
        }
LABEL_76:
        id v135 = v153;
        v126(v98, v153, v125);
        uint64_t v136 = v112 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_address;
        swift_beginAccess();
        uint64_t v137 = (uint64_t)v98;
        uint64_t v138 = (uint64_t)v147;
        sub_100006AB0(v136, (uint64_t)v147, &qword_1006AF730);
        objc_allocWithZone((Class)type metadata accessor for FMFenceMapAnnotation());
        swift_bridgeObjectRetain();
        Swift::String v139 = sub_1004841E4(v161, object, v123, v124, 0, v137, v138, *(uint64_t *)&v60, v57, v59, 0);
        sub_100460BD8(v139);
        Swift::String v140 = *(void **)(v112 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_userDroppedAnnotation);
        *(void *)(v112 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_userDroppedAnnotation) = v139;

        v150(v135, v125);
        *(unsigned char *)(v112 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_showingUserLocation) = 1;
        swift_bridgeObjectRelease();
        return;
      }
    }
    uint64_t v112 = v86;
    swift_bridgeObjectRelease();
LABEL_59:
    uint64_t v123 = 0;
    uint64_t v124 = 0xE000000000000000;
    goto LABEL_71;
  }
LABEL_19:
  uint64_t v48 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
  id v49 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
  if (!v49)
  {
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  id v50 = [v49 userLocation];
  id v51 = [v50 location];

  uint64_t v52 = *(void **)(v1 + v48);
  if (v51)
  {
    if (v52)
    {
      id v53 = v52;
      id v54 = [v53 userLocation];
      [v53 selectAnnotation:v54 animated:1];

      return;
    }
    goto LABEL_79;
  }
  if (!v52)
  {
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
    return;
  }
  [v52 centerCoordinate];
  double v79 = v77;
  if (v78 >= -180.0)
  {
    double v80 = v78;
    if (v78 <= 180.0 && v77 >= -90.0 && v77 <= 90.0)
    {
      id v81 = *(void **)(v1 + v48);
      if (v81)
      {
        [v81 setRegion:1 v77 v78 180.0 360.0];
        uint64_t v82 = v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_currentMapRegion;
        *(double *)uint64_t v82 = v79;
        *(double *)(v82 + 8) = v80;
        *(_OWORD *)(v82 + 16) = xmmword_100568610;
        *(unsigned char *)(v82 + 32) = 0;
        return;
      }
      goto LABEL_82;
    }
  }
}

void sub_100460BD8(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v54 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  __chkstk_darwin(v4);
  id v53 = (char *)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for DispatchQoS();
  uint64_t v52 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  id v51 = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_1000606BC(v7, (uint64_t)qword_1006D1E98);
  uint64_t v8 = a1;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    unint64_t v50 = v2;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t aBlock = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    id v12 = [v8 debugDescription];
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v14;

    uint64_t v16 = v13;
    unint64_t v2 = v50;
    double v57 = (void *)sub_1000606F4(v16, v15, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMFenceMapViewController: addAndSelectAnnotation %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v17 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
  uint64_t v18 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
  if (!v18)
  {
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  id v19 = v18;
  [v8 coordinate];
  MKCoordinateRegion v65 = MKCoordinateRegionMakeWithDistance(v64, *(double *)&v8[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius] * 3.5, *(double *)&v8[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius] * 3.5);
  [v19 regionThatFits:v65.center.latitude, v65.center.longitude, v65.span.latitudeDelta, v65.span.longitudeDelta];
  double v21 = v20;
  double v23 = v22;
  double v25 = v24;
  double v27 = v26;

  BOOL v30 = v23 < -180.0 || v23 > 180.0 || v21 < -90.0 || v21 > 90.0;
  if (v30 || (v25 >= 0.0 ? (BOOL v31 = v25 > 180.0) : (BOOL v31 = 1), v31 || (v27 >= 0.0 ? (v32 = v27 > 360.0) : (v32 = 1), v32)))
  {
LABEL_27:
    CLLocationDegrees v35 = *(void **)(v2 + v17);
    if (v35)
    {
      [v35 addAnnotation:v8];
      sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
      uint64_t v36 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v37 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = v37;
      *(void *)(v38 + 24) = v8;
      id v62 = sub_10046EA74;
      uint64_t v63 = v38;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v59 = 1107296256;
      double v60 = sub_10003C410;
      uint64_t v61 = &unk_10063D368;
      double v39 = _Block_copy(&aBlock);
      double v40 = v8;
      swift_release();
      double v41 = v51;
      static DispatchQoS.unspecified.getter();
      uint64_t aBlock = _swiftEmptyArrayStorage;
      v49[2] = sub_100045C34((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      v49[1] = sub_10005D034((uint64_t *)&unk_1006AE4B0);
      unint64_t v50 = sub_10005ECA8();
      double v42 = v53;
      uint64_t v43 = v55;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v39);

      uint64_t v54 = *(void *)(v54 + 8);
      ((void (*)(char *, uint64_t))v54)(v42, v43);
      uint64_t v52 = *(void *)(v52 + 8);
      ((void (*)(char *, uint64_t))v52)(v41, v56);
      v49[0] = *(void *)&v40[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_didReverseGeocodeGroup];
      double v44 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v45 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v46 = swift_allocObject();
      *(void *)(v46 + 16) = v45;
      *(void *)(v46 + 24) = v40;
      id v62 = sub_10046EADC;
      uint64_t v63 = v46;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v59 = 1107296256;
      double v60 = sub_10003C410;
      uint64_t v61 = &unk_10063D3B8;
      uint64_t v47 = _Block_copy(&aBlock);
      uint64_t v48 = v40;
      swift_retain();
      static DispatchQoS.unspecified.getter();
      double v57 = _swiftEmptyArrayStorage;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_group.notify(qos:flags:queue:execute:)();
      _Block_release(v47);

      ((void (*)(char *, uint64_t))v54)(v42, v43);
      ((void (*)(char *, uint64_t))v52)(v41, v56);
      swift_release();
      swift_release();
      return;
    }
    goto LABEL_30;
  }
  id v33 = *(void **)(v2 + v17);
  if (v33)
  {
    [v33 setRegion:1 v21, v23, v25, v27];
    unint64_t v34 = v2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_currentMapRegion;
    *(double *)unint64_t v34 = v21;
    *(double *)(v34 + 8) = v23;
    *(double *)(v34 + 16) = v25;
    *(double *)(v34 + 24) = v27;
    *(unsigned char *)(v34 + 32) = 0;
    goto LABEL_27;
  }
LABEL_31:
  __break(1u);
}

void sub_100461330(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    uint64_t v5 = *(void **)(Strong + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
    id v6 = v5;

    if (v5)
    {
      [v6 selectAnnotation:a2 animated:1];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1004613C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10005D034(&qword_1006AF730);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    uint64_t v8 = *(void **)(Strong + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
    id v9 = v8;

    if (v8)
    {
      id v10 = [v9 viewForAnnotation:a2];

      if (v10)
      {
        uint64_t v11 = a2 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_fmfPlacemark;
        swift_beginAccess();
        sub_100006AB0(v11, (uint64_t)v5, &qword_1006AF730);
        uint64_t v12 = type metadata accessor for FMFAddress();
        BOOL v13 = (*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v5, 1, v12) != 1;
        sub_100003F10((uint64_t)v5, &qword_1006AF730);
        [v10 setCanShowCallout:v13];
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10046155C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, uint64_t a7)
{
  NSString v61 = a6;
  uint64_t v13 = sub_10005D034((uint64_t *)&unk_1006BF070);
  __chkstk_darwin(v13 - 8);
  double v60 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FMFLocationAlertAddressType();
  uint64_t v16 = __chkstk_darwin(v15);
  id v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    goto LABEL_2;
  }
  if (!a1) {
    return;
  }
  uint64_t v58 = v17;
  uint64_t v59 = v16;
  id v26 = [a1 mapItems];
  sub_100006060(0, &qword_1006BF0B0);
  unint64_t v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v28)
  {
LABEL_2:
    double v20 = *(void **)(a3 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchController);
    if (v20)
    {
      id v21 = [v20 searchBar];
      v62[0] = 0;
      v62[1] = (id)0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      id v22 = [self mainBundle];
      v65._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
      v65._unint64_t object = (void *)0x800000010058FF30;
      v23._unint64_t object = (void *)0x800000010058FF10;
      v23._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
      v24._uint64_t countAndFlagsBits = 0;
      v24._unint64_t object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, v65);

      NSString v61 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v21 setPlaceholder:v61];

      double v25 = v61;
    }
  }
  else
  {
    id v29 = [a1 mapItems];
    unint64_t v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v30 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v31)
      {
LABEL_12:
        uint64_t v57 = a7;
        unint64_t v63 = (unint64_t)_swiftEmptyArrayStorage;
        if (v31 < 1)
        {
          __break(1u);
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t v32 = 0;
          int v33 = a5 & 1;
          do
          {
            if ((v30 & 0xC000000000000001) != 0) {
              id v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v34 = *(id *)(v30 + 8 * v32 + 32);
            }
            CLLocationDegrees v35 = v34;
            ++v32;
            v62[0] = v34;
            sub_100461D60(v62, a4, &v63, v30, v33, a3);
          }
          while (v31 != v32);
          swift_bridgeObjectRelease();
          uint64_t v28 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
          uint64_t v31 = *(void *)(a3 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
          if (!v31) {
            goto LABEL_52;
          }
          a7 = v57;
          if (!(v63 >> 62))
          {
            swift_bridgeObjectRetain_n();
            id v36 = (id)v31;
            dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
            goto LABEL_21;
          }
        }
        id v46 = (id)v31;
        swift_bridgeObjectRetain();
        sub_10005D034(&qword_1006BD9C0);
        _bridgeCocoaArray<A>(_:)();
LABEL_21:
        swift_bridgeObjectRelease();
        sub_10005D034(&qword_1006BD9C0);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [(id)v31 addAnnotations:isa];

        uint64_t v39 = v58;
        uint64_t v38 = v59;
        (*(void (**)(char *, void, uint64_t))(v58 + 104))(v19, enum case for FMFLocationAlertAddressType.droppedPin(_:), v59);
        sub_100045C34((unint64_t *)&qword_1006B9D58, (void (*)(uint64_t))&type metadata accessor for FMFLocationAlertAddressType);
        LOBYTE(isa) = dispatch thunk of static Equatable.== infix(_:_:)();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v38);
        if ((isa & 1) == 0)
        {
          unint64_t v40 = v63;
          if (v63 >> 62)
          {
            swift_bridgeObjectRetain();
            if (_CocoaArrayWrapper.endIndex.getter()) {
              goto LABEL_24;
            }
          }
          else
          {
            uint64_t v41 = *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v41)
            {
LABEL_24:
              if ((v40 & 0xC000000000000001) != 0)
              {
                double v42 = (objc_class *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                goto LABEL_27;
              }
              if (*(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                double v42 = (objc_class *)*(id *)(v40 + 32);
LABEL_27:
                Class v43 = v42;
                swift_bridgeObjectRelease();
                if (v40 >> 62)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  uint64_t v44 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
                }
                if (v44 == 1)
                {
                  uint64_t v45 = *(void **)(a3 + v28);
                  if (v45)
                  {
                    [v45 selectAnnotation:v43 animated:1];
LABEL_47:
                    uint64_t v50 = (uint64_t)v60;
                    NSString v49 = v61;

                    *(void *)(a3 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapSearchResults) = v30;
                    swift_bridgeObjectRelease();
                    uint64_t v52 = v58;
                    uint64_t v51 = v59;
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16))(v50, a4, v59);
                    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v52 + 56))(v50, 0, 1, v51);
                    uint64_t v53 = a3 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSeachAddressType;
                    swift_beginAccess();
                    sub_1000AE7D4(v50, v53, (uint64_t *)&unk_1006BF070);
                    swift_endAccess();
                    uint64_t v54 = (void *)(a3 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSearchedQuery);
                    *uint64_t v54 = v49;
                    v54[1] = a7;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    id v55 = [self sharedApplication];
                    [v55 setNetworkActivityIndicatorVisible:0];

                    swift_bridgeObjectRelease();
                    return;
                  }
LABEL_54:
                  __break(1u);
                  return;
                }

                goto LABEL_43;
              }
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
              goto LABEL_54;
            }
          }
          swift_bridgeObjectRelease();
        }
LABEL_43:
        uint64_t v47 = *(void **)(a3 + v28);
        if (v47)
        {
          if (v63 >> 62)
          {
            id v56 = v47;
            swift_bridgeObjectRetain();
            _bridgeCocoaArray<A>(_:)();
          }
          else
          {
            swift_bridgeObjectRetain_n();
            id v48 = v47;
            dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
          }
          swift_bridgeObjectRelease();
          Class v43 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v47 showAnnotations:v43 animated:1];

          goto LABEL_47;
        }
        goto LABEL_53;
      }
    }
    else
    {
      uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v31) {
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
  }
}

void sub_100461D60(id *a1, uint64_t a2, void *a3, unint64_t a4, int a5, uint64_t a6)
{
  uint64_t v61 = a6;
  int v62 = a5;
  uint64_t v64 = a2;
  Swift::String v65 = a3;
  uint64_t v8 = sub_10005D034(&qword_1006AF730);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for FMFLocationAlertAddressType();
  uint64_t v11 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for FMFAddress();
  uint64_t v69 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = *a1;
  id v17 = [v16 placemark];
  uint64_t v68 = v15;
  FMFAddress.init(from:)();
  id v18 = [v16 placemark];
  id v19 = [v18 region];

  if (v19)
  {
    self;
    double v20 = (void *)swift_dynamicCastObjCClass();
    if (v20)
    {
      [v20 radius];
      uint64_t v22 = v21;

      char v23 = 0;
      uint64_t v67 = v22;
      goto LABEL_6;
    }
  }
  uint64_t v67 = 0;
  char v23 = 1;
LABEL_6:
  id v24 = [v16 placemark];
  [v24 coordinate];
  double v26 = v25;
  double v28 = v27;

  id v29 = [v16 name];
  if (v29)
  {
    unint64_t v30 = v29;
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v33 = v32;
  }
  else
  {
    uint64_t v31 = 0;
    uint64_t v33 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v64, v63);
  uint64_t v34 = v69;
  uint64_t v35 = v66;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v10, v68, v66);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v10, 0, 1, v35);
  id v36 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapAnnotation());
  uint64_t v37 = sub_1004841E4(v31, v33, 0, 0, 1, (uint64_t)v13, (uint64_t)v10, v67, v26, v28, v23);
  uint64_t v38 = v65;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  if (!(a4 >> 62))
  {
    uint64_t v39 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v40 = v16;
    swift_bridgeObjectRetain();
    if (v39) {
      goto LABEL_13;
    }
LABEL_32:

    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  id v59 = v16;
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_32;
  }
LABEL_13:
  if ((a4 & 0xC000000000000001) != 0)
  {
    id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_36;
    }
    id v41 = *(id *)(a4 + 32);
  }
  double v42 = v41;
  swift_bridgeObjectRelease();
  sub_100006060(0, &qword_1006BF0B0);
  id v43 = v16;
  char v44 = static NSObject.== infix(_:_:)();

  if ((v44 & 1) == 0)
  {
LABEL_33:
    (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v35);

    return;
  }
  if ((v62 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v35);

    return;
  }
  uint64_t v45 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
  uint64_t v46 = v61;
  uint64_t v47 = *(void **)(v61 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
  if (v47)
  {
    id v48 = v47;
    [v37 coordinate];
    MKCoordinateRegion v71 = MKCoordinateRegionMakeWithDistance(v70, *(double *)&v37[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius] * 3.5, *(double *)&v37[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius] * 3.5);
    [v48 regionThatFits:v71.center.latitude, v71.center.longitude, v71.span.latitudeDelta, v71.span.longitudeDelta];
    double v50 = v49;
    double v52 = v51;
    double v54 = v53;
    double v56 = v55;

    if (v52 < -180.0
      || v52 > 180.0
      || v50 < -90.0
      || v50 > 90.0
      || v54 < 0.0
      || v54 > 180.0
      || v56 < 0.0
      || v56 > 360.0)
    {
      goto LABEL_29;
    }
    uint64_t v57 = *(void **)(v46 + v45);
    if (v57)
    {
      [v57 setRegion:1 v50, v52, v54, v56];
      uint64_t v58 = v46 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_currentMapRegion;
      *(double *)uint64_t v58 = v50;
      *(double *)(v58 + 8) = v52;
      *(double *)(v58 + 16) = v54;
      *(double *)(v58 + 24) = v56;
      *(unsigned char *)(v58 + 32) = 0;
LABEL_29:

      (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v35);
      return;
    }
    goto LABEL_37;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void *sub_1004623A4()
{
  uint64_t v1 = sub_10005D034((uint64_t *)&unk_1006AF710);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FMFFriend();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v24 - v9;
  if (*(void *)(v0 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediator))
  {
    swift_retain();
    uint64_t v11 = dispatch thunk of FMFManager.friends.getter();
    swift_release();
    uint64_t v12 = _swiftEmptyArrayStorage;
    uint64_t v32 = _swiftEmptyArrayStorage;
    uint64_t v31 = *(void *)(v11 + 16);
    if (!v31)
    {
LABEL_14:
      swift_bridgeObjectRelease();
      uint64_t v32 = v12;
      swift_bridgeObjectRetain();
      sub_100469304(&v32);
      swift_release();
      return v32;
    }
    unint64_t v13 = 0;
    id v29 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v30 = v5 + 16;
    double v25 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v26 = v11;
    double v27 = v8;
    uint64_t v28 = v4;
    while (v13 < *(void *)(v11 + 16))
    {
      unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v15 = *(void *)(v5 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v10, v11 + v14 + v15 * v13, v4);
      FMFFriend.location.getter();
      uint64_t v16 = type metadata accessor for FMFLocation();
      int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v3, 1, v16);
      sub_100003F10((uint64_t)v3, (uint64_t *)&unk_1006AF710);
      if (v17 == 1)
      {
        (*v25)(v10, v4);
      }
      else
      {
        id v18 = *v29;
        (*v29)(v8, v10, v4);
        id v19 = v32;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10013E778(0, v19[2] + 1, 1);
          id v19 = v32;
        }
        unint64_t v21 = v19[2];
        unint64_t v20 = v19[3];
        if (v21 >= v20 >> 1)
        {
          sub_10013E778(v20 > 1, v21 + 1, 1);
          id v19 = v32;
        }
        v19[2] = v21 + 1;
        uint64_t v22 = (char *)v19 + v14 + v21 * v15;
        uint64_t v8 = v27;
        uint64_t v4 = v28;
        v18(v22, v27, v28);
        uint64_t v32 = v19;
        uint64_t v11 = v26;
      }
      if (v31 == ++v13)
      {
        uint64_t v12 = v32;
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  __break(1u);
  id result = (void *)swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1004626F8()
{
  uint64_t v263 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v246 = *(void *)(v263 - 8);
  __chkstk_darwin(v263);
  v262 = (char *)&v221 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v261 = type metadata accessor for DispatchQoS();
  uint64_t v245 = *(void *)(v261 - 8);
  __chkstk_darwin(v261);
  v260 = (char *)&v221 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v266 = type metadata accessor for FMFLabelledLocation();
  unint64_t v257 = *(void *)(v266 - 8);
  uint64_t v3 = __chkstk_darwin(v266);
  Swift::Int v249 = (char *)&v221 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v255 = (char *)&v221 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v258 = (char *)&v221 - v8;
  __chkstk_darwin(v7);
  v264 = (char *)&v221 - v9;
  uint64_t v10 = sub_10005D034((uint64_t *)&unk_1006BF090);
  __chkstk_darwin(v10 - 8);
  uint64_t v236 = (char *)&v221 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FMFContact();
  uint64_t v244 = *(char **)(v12 - 8);
  __chkstk_darwin(v12);
  v229 = (char *)&v221 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10005D034(&qword_1006B8930);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  v259 = (char *)&v221 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v254 = (void (**)(char *, uint64_t))((char *)&v221 - v18);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v256 = (char *)&v221 - v20;
  __chkstk_darwin(v19);
  uint64_t v230 = (char *)&v221 - v21;
  v253 = (char *)type metadata accessor for FMFFriend();
  v247 = (void *)*((void *)v253 - 1);
  uint64_t v22 = __chkstk_darwin(v253);
  unint64_t v234 = (char *)&v221 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v240 = (char *)&v221 - v24;
  uint64_t v25 = sub_10005D034(&qword_1006AF740);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v235 = (uint64_t)&v221 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v241 = (uint64_t)&v221 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  unint64_t v228 = (char *)&v221 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v227 = (uint64_t)&v221 - v33;
  __chkstk_darwin(v32);
  v242 = (uint64_t *)((char *)&v221 - v34);
  uint64_t v35 = sub_10005D034((uint64_t *)&unk_1006BF070);
  __chkstk_darwin(v35 - 8);
  v248 = (char *)&v221 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v251 = (void (**)(char *, char *))type metadata accessor for FMFLocationAlertAddressType();
  uint64_t v250 = (uint64_t)*(v251 - 1);
  __chkstk_darwin(v251);
  uint64_t v238 = (char *)&v221 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_10005D034(&qword_1006AF730);
  uint64_t v39 = __chkstk_darwin(v38 - 8);
  v231 = (char *)&v221 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  double v42 = (char *)&v221 - v41;
  uint64_t v43 = sub_10005D034((uint64_t *)&unk_1006AF710);
  uint64_t v44 = __chkstk_darwin(v43 - 8);
  uint64_t v233 = (char *)&v221 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __chkstk_darwin(v44);
  v243 = (char *)&v221 - v47;
  __chkstk_darwin(v46);
  double v49 = (char *)&v221 - v48;
  uint64_t v50 = type metadata accessor for FMFLocation();
  double v51 = *(char **)(v50 - 8);
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v232 = (char *)&v221 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __chkstk_darwin(v52);
  unint64_t v237 = (char *)&v221 - v55;
  __chkstk_darwin(v54);
  uint64_t v57 = (char *)&v221 - v56;
  unint64_t v272 = (unint64_t)_swiftEmptyArrayStorage;
  v265 = v0;
  uint64_t v58 = (uint64_t)&v0[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_myLocation];
  swift_beginAccess();
  id v59 = (char *)v50;
  sub_100006AB0(v58, (uint64_t)v49, (uint64_t *)&unk_1006AF710);
  uint64_t v60 = (char *)*((void *)v51 + 6);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v60)(v49, 1, v50) == 1)
  {
    sub_100003F10((uint64_t)v49, (uint64_t *)&unk_1006AF710);
LABEL_5:
    uint64_t aBlock = 0;
    unint64_t v269 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v63 = [self mainBundle];
    v273._uint64_t countAndFlagsBits = 0xD00000000000003FLL;
    v273._unint64_t object = (void *)0x800000010059E6B0;
    v64._unint64_t object = (void *)0x800000010059E680;
    v64._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
    v65._uint64_t countAndFlagsBits = 0;
    v65._unint64_t object = (void *)0xE000000000000000;
    Swift::String v66 = NSLocalizedString(_:tableName:bundle:value:comment:)(v64, (Swift::String_optional)0, (NSBundle)v63, v65, v273);

    uint64_t v67 = (uint64_t)v248;
    (*(void (**)(char *, uint64_t, uint64_t, void (**)(char *, char *)))(v250 + 56))(v248, 1, 1, v251);
    id v68 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapTransientRecord());
    uint64_t v69 = sub_1002E6324(v66._countAndFlagsBits, (uint64_t)v66._object, v67, 0, 0, 0, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v272 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v272 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    goto LABEL_10;
  }
  (*((void (**)(char *, char *, uint64_t))v51 + 4))(v57, v49, v50);
  FMFLocation.address.getter();
  uint64_t v61 = type metadata accessor for FMFAddress();
  int v62 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v61 - 8) + 48))(v42, 1, v61);
  sub_100003F10((uint64_t)v42, &qword_1006AF730);
  if (v62 == 1)
  {
    (*((void (**)(char *, uint64_t))v51 + 1))(v57, v50);
    goto LABEL_5;
  }
  uint64_t aBlock = 0;
  unint64_t v269 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v70 = [self mainBundle];
  v274._uint64_t countAndFlagsBits = 0xD00000000000003FLL;
  v274._unint64_t object = (void *)0x800000010059E6B0;
  v71._unint64_t object = (void *)0x800000010059E680;
  v71._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  v72._uint64_t countAndFlagsBits = 0;
  v72._unint64_t object = (void *)0xE000000000000000;
  Swift::String v73 = NSLocalizedString(_:tableName:bundle:value:comment:)(v71, (Swift::String_optional)0, (NSBundle)v70, v72, v274);

  id v74 = v238;
  (*(void (**)(char *, void, void (**)(char *, char *)))(v250 + 104))(v238, enum case for FMFLocationAlertAddressType.currentLocation(_:), v251);
  uint64_t v75 = (uint64_t)v237;
  (*((void (**)(char *, char *, uint64_t))v51 + 2))(v237, v57, v50);
  id v76 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapTransientRecord());
  double v77 = sub_1002E68B0(v73._countAndFlagsBits, (uint64_t)v73._object, v74, v75);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v272 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v272 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_121;
  }
  while (2)
  {
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    (*((void (**)(char *, char *))v51 + 1))(v57, v59);
LABEL_10:
    double v78 = v265;
    uint64_t v252 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isNotifyMe;
    uint64_t v79 = (uint64_t)v253;
    if (v265[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isNotifyMe] == 1)
    {
      uint64_t v226 = (char *)v12;
      double v80 = &v265[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_friendForFence];
      swift_beginAccess();
      id v81 = (void (*)(void, void))v242;
      sub_100006AB0((uint64_t)v80, (uint64_t)v242, &qword_1006AF740);
      uint64_t v82 = v247;
      uint64_t v12 = (uint64_t)(v247 + 6);
      uint64_t v239 = (uint64_t (*)(void (*)(void, void), uint64_t, uint64_t))v247[6];
      int v83 = v239(v81, 1, v79);
      uint64_t v225 = v59;
      if (v83)
      {
        sub_100003F10((uint64_t)v81, &qword_1006AF740);
        uint64_t v84 = (uint64_t)v243;
        (*((void (**)(char *, uint64_t, uint64_t, char *))v51 + 7))(v243, 1, 1, v59);
LABEL_14:
        sub_100003F10(v84, (uint64_t *)&unk_1006AF710);
        goto LABEL_15;
      }
      uint64_t v85 = (void (*)(char *, uint64_t, uint64_t))v82[2];
      v224 = v80;
      uint64_t v86 = v51;
      uint64_t v87 = v12;
      uint64_t v88 = v60;
      uint64_t v89 = v240;
      uint64_t v223 = v82 + 2;
      uint64_t v222 = v85;
      v85(v240, (uint64_t)v81, v79);
      sub_100003F10((uint64_t)v81, &qword_1006AF740);
      uint64_t v84 = (uint64_t)v243;
      FMFFriend.location.getter();
      double v78 = v265;
      uint64_t v90 = v89;
      uint64_t v60 = v88;
      uint64_t v12 = v87;
      double v51 = v86;
      double v80 = v224;
      v242 = (uint64_t *)v82[1];
      ((void (*)(char *, uint64_t))v242)(v90, v79);
      if (((unsigned int (*)(uint64_t, uint64_t, char *))v60)(v84, 1, v59) == 1) {
        goto LABEL_14;
      }
      id v98 = v232;
      uint64_t v99 = v84;
      id v100 = v225;
      (*((void (**)(char *, uint64_t, char *))v51 + 4))(v232, v99, v225);
      uint64_t v101 = (uint64_t)v231;
      FMFLocation.address.getter();
      uint64_t v102 = type metadata accessor for FMFAddress();
      int v103 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 48))(v101, 1, v102);
      sub_100003F10(v101, &qword_1006AF730);
      if (v103 == 1)
      {
        (*((void (**)(char *, char *))v51 + 1))(v98, v100);
        double v78 = v265;
        uint64_t v79 = (uint64_t)v253;
LABEL_27:
        double v80 = v224;
LABEL_15:
        uint64_t v91 = (uint64_t)v80;
        uint64_t v92 = v241;
        sub_100006AB0(v91, v241, &qword_1006AF740);
        int v93 = v239((void (*)(void, void))v92, 1, v79);
        id v59 = v226;
        uint64_t v57 = v244;
        if (v93)
        {
          sub_100003F10(v92, &qword_1006AF740);
          goto LABEL_37;
        }
        uint64_t v94 = v247;
        uint64_t v95 = v234;
        ((void (*)(char *, uint64_t, uint64_t))v247[2])(v234, v92, v79);
        sub_100003F10(v92, &qword_1006AF740);
        uint64_t v96 = (uint64_t)v233;
        FMFFriend.location.getter();
        ((void (*)(char *, uint64_t))v94[1])(v95, v79);
        uint64_t v97 = v225;
        if (((unsigned int (*)(uint64_t, uint64_t, char *))v60)(v96, 1, v225) == 1)
        {
          sub_100003F10(v96, (uint64_t *)&unk_1006AF710);
          goto LABEL_36;
        }
        uint64_t v104 = (uint64_t)v230;
        FMFLocation.label.getter();
        (*((void (**)(uint64_t, char *))v51 + 1))(v96, v97);
        uint64_t v105 = type metadata accessor for FMFLabel();
        uint64_t v106 = *(void *)(v105 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v104, 1, v105) == 1)
        {
          sub_100003F10(v104, &qword_1006B8930);
          goto LABEL_36;
        }
        uint64_t v109 = FMFLabel.localizedValue.getter();
        uint64_t v111 = v110;
        (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v104, v105);
        uint64_t aBlock = 0;
        unint64_t v269 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease();
        id v112 = [self mainBundle];
        v275._uint64_t countAndFlagsBits = 0xD00000000000003FLL;
        v275._unint64_t object = (void *)0x800000010059E6B0;
        v113._unint64_t object = (void *)0x800000010059E680;
        v113._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
        v114._uint64_t countAndFlagsBits = 0;
        v114._unint64_t object = (void *)0xE000000000000000;
        Swift::String v115 = NSLocalizedString(_:tableName:bundle:value:comment:)(v113, (Swift::String_optional)0, (NSBundle)v112, v114, v275);

        uint64_t v116 = (uint64_t)v248;
        (*(void (**)(char *, uint64_t, uint64_t, void (**)(char *, char *)))(v250 + 56))(v248, 1, 1, v251);
        id v117 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapTransientRecord());
        uint64_t v118 = sub_1002E6324(v115._countAndFlagsBits, (uint64_t)v115._object, v116, v109, v111, 0, 0);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v272 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v272 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          goto LABEL_123;
        }
        goto LABEL_29;
      }
      uint64_t v107 = v227;
      sub_100006AB0((uint64_t)v224, v227, &qword_1006AF740);
      uint64_t v79 = (uint64_t)v253;
      if (v239((void (*)(void, void))v107, 1, (uint64_t)v253))
      {
        sub_100003F10(v107, &qword_1006AF740);
        uint64_t v108 = (uint64_t)v228;
      }
      else
      {
        unint64_t v119 = v240;
        v222(v240, v107, v79);
        sub_100003F10(v107, &qword_1006AF740);
        v243 = (char *)FMFFriend.shortName.getter();
        uint64_t v121 = v120;
        ((void (*)(char *, uint64_t))v242)(v119, v79);
        uint64_t v108 = (uint64_t)v228;
        if (v121)
        {
          uint64_t v122 = v121;
          uint64_t v123 = (uint64_t)v243;
          goto LABEL_33;
        }
      }
      sub_100006AB0((uint64_t)v224, v108, &qword_1006AF740);
      if (v239((void (*)(void, void))v108, 1, v79))
      {
        sub_100003F10(v108, &qword_1006AF740);
        swift_bridgeObjectRelease();
        (*((void (**)(char *, char *))v51 + 1))(v98, v225);
        double v78 = v265;
        goto LABEL_27;
      }
      uint64_t v124 = v240;
      v222(v240, v108, v79);
      sub_100003F10(v108, &qword_1006AF740);
      uint64_t v123 = FMFFriend.name.getter();
      uint64_t v122 = v125;
      ((void (*)(char *, uint64_t))v242)(v124, v79);
      swift_bridgeObjectRelease();
LABEL_33:
      uint64_t aBlock = 0;
      unint64_t v269 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      id v126 = [self mainBundle];
      v127._uint64_t countAndFlagsBits = 0xD000000000000027;
      v276._uint64_t countAndFlagsBits = 0xD000000000000039;
      v276._unint64_t object = (void *)0x80000001005801B0;
      v127._unint64_t object = (void *)0x8000000100580180;
      v128._uint64_t countAndFlagsBits = 0;
      v128._unint64_t object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v127, (Swift::String_optional)0, (NSBundle)v126, v128, v276);

      sub_10005D034((uint64_t *)&unk_1006AF790);
      uint64_t v129 = swift_allocObject();
      *(_OWORD *)(v129 + 16) = xmmword_10055B970;
      *(void *)(v129 + 56) = &type metadata for String;
      *(void *)(v129 + 64) = sub_10007F2C8();
      *(void *)(v129 + 32) = v123;
      *(void *)(v129 + 40) = v122;
      uint64_t v130 = String.init(format:_:)();
      uint64_t v132 = v131;
      swift_bridgeObjectRelease();
      uint64_t v133 = v238;
      (*(void (**)(char *, void, void (**)(char *, char *)))(v250 + 104))(v238, enum case for FMFLocationAlertAddressType.friendLocation(_:), v251);
      uint64_t v134 = (uint64_t)v237;
      id v135 = v225;
      (*((void (**)(char *, char *, char *))v51 + 2))(v237, v98, v225);
      id v136 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapTransientRecord());
      uint64_t v137 = sub_1002E68B0(v130, v132, v133, v134);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      id v59 = v226;
      uint64_t v57 = v244;
      if (*(void *)((v272 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v272 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      (*((void (**)(char *, char *))v51 + 1))(v98, v135);
      goto LABEL_36;
    }
LABEL_40:
    for (unint64_t i = sub_10047830C(); ; unint64_t i = v165)
    {
      uint64_t v60 = (char *)v266;
      double v51 = v259;
      if (!i) {
        goto LABEL_57;
      }
      uint64_t v145 = i;
      id v146 = self;
      v247 = v145;
      uint64_t v57 = v145;
      id v147 = [v146 stringFromContact:v57 style:0];
      if (!v147)
      {

        goto LABEL_58;
      }
      uint64_t v148 = v147;
      v253 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v150 = v149;

      uint64_t v118 = (char *)[v57 postalAddresses];
      sub_10005D034((uint64_t *)&unk_1006BF080);
      uint64_t v151 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      id v152 = v256;
      if ((unint64_t)v151 >> 62) {
        break;
      }
      uint64_t v153 = *(void *)((v151 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v153) {
        goto LABEL_64;
      }
LABEL_45:
      if (v153 >= 1)
      {
        uint64_t v154 = 0;
        do
        {
          if ((v151 & 0xC000000000000001) != 0) {
            id v155 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v155 = *(id *)(v151 + 8 * v154 + 32);
          }
          uint64_t v156 = v155;
          id v157 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapTransientRecord());
          uint64_t v158 = v57;
          swift_bridgeObjectRetain();
          uint64_t v12 = v156;
          id v59 = sub_1002E75B4((uint64_t)v253, v150, v158, (void *)v12, 0, 0);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v272 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v272 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          ++v154;
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          id v152 = v256;
        }
        while (v153 != v154);
        goto LABEL_64;
      }
      __break(1u);
LABEL_123:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_29:
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

LABEL_36:
      double v78 = v265;
LABEL_37:
      if (v78[v252] != 1) {
        goto LABEL_40;
      }
      uint64_t v138 = &v78[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_friendForFence];
      swift_beginAccess();
      uint64_t v139 = (uint64_t)v138;
      uint64_t v140 = (uint64_t)v253;
      uint64_t v141 = v235;
      sub_100006AB0(v139, v235, &qword_1006AF740);
      if (v239((void (*)(void, void))v141, 1, v140))
      {
        sub_100003F10(v141, &qword_1006AF740);
        Swift::String v142 = (void (*)(char *, uint64_t, uint64_t, char *))*((void *)v57 + 7);
        v57 += 56;
        uint64_t v143 = (uint64_t)v236;
        v142(v236, 1, 1, v59);
        uint64_t v60 = (char *)v266;
        double v51 = v259;
LABEL_56:
        sub_100003F10(v143, (uint64_t *)&unk_1006BF090);
LABEL_57:
        v247 = 0;
LABEL_58:
        id v152 = v256;
        goto LABEL_65;
      }
      uint64_t v159 = v247;
      uint64_t v160 = v240;
      ((void (*)(char *, uint64_t, uint64_t))v247[2])(v240, v141, v140);
      sub_100003F10(v141, &qword_1006AF740);
      uint64_t v161 = v140;
      uint64_t v143 = (uint64_t)v236;
      FMFFriend.contact.getter();
      double v78 = v265;
      ((void (*)(char *, uint64_t))v159[1])(v160, v161);
      int v162 = (*((uint64_t (**)(uint64_t, uint64_t, char *))v57 + 6))(v143, 1, v59);
      uint64_t v60 = (char *)v266;
      double v51 = v259;
      if (v162 == 1) {
        goto LABEL_56;
      }
      uint64_t v12 = (uint64_t)v229;
      (*((void (**)(char *, uint64_t, char *))v57 + 4))(v229, v143, v59);
      FMFContact.storeUUID.getter();
      sub_10005D034(&qword_1006AF2D0);
      uint64_t v163 = swift_allocObject();
      *(_OWORD *)(v163 + 16) = xmmword_10055BD30;
      *(void *)(v163 + 32) = [self descriptorForRequiredKeys];
      uint64_t aBlock = (void **)v163;
      specialized Array._endMutation()();
      uint64_t v164 = dispatch thunk of FMFContactsDataController.contact(for:keysToFetch:)();
      double v78 = v265;
      Swift::String v165 = (void *)v164;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      CLLocationCoordinate2D v166 = (void (*)(uint64_t, char *))*((void *)v57 + 1);
      v57 += 8;
      v166(v12, v59);
    }
    if (v151 < 0) {
      uint64_t v118 = (char *)v151;
    }
    else {
      uint64_t v118 = (char *)(v151 & 0xFFFFFFFFFFFFFF8);
    }
    swift_bridgeObjectRetain();
    uint64_t v153 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v153) {
      goto LABEL_45;
    }
LABEL_64:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    double v78 = v265;
    uint64_t v60 = (char *)v266;
    double v51 = v259;
LABEL_65:
    int v167 = v78[v252];
    v271 = (char *)_swiftEmptyArrayStorage;
    uint64_t v168 = *(void *)&v78[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediator];
    if (v167 == 1)
    {
      if (!v168) {
        goto LABEL_126;
      }
      swift_retain();
      id v169 = (void *)dispatch thunk of FMFManager.labelledLocations.getter();
      swift_release();
      if (!v169) {
        id v169 = _swiftEmptyArrayStorage;
      }
      uint64_t v60 = v265;
      id v170 = sub_10046CE54((uint64_t)v169, (uint64_t)v60);
      swift_bridgeObjectRelease();

      uint64_t aBlock = (void **)v170;
      swift_bridgeObjectRetain();
      sub_10046925C(&aBlock);
      swift_bridgeObjectRelease();
      id v59 = (char *)aBlock[2];
      if (v59)
      {
        id v171 = (char *)aBlock
             + ((*(unsigned __int8 *)(v257 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v257 + 80));
        uint64_t v12 = *(void *)(v257 + 72);
        uint64_t v57 = (char *)(v257 + 16);
        swift_retain();
        while (1)
        {
          FMFLabelledLocation.label.getter();
          uint64_t v172 = type metadata accessor for FMFLabel();
          uint64_t v173 = *(void *)(v172 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v173 + 48))(v152, 1, v172) == 1) {
            break;
          }
          uint64_t v174 = FMFLabel.localizedValue.getter();
          uint64_t v176 = v175;
          (*(void (**)(char *, uint64_t))(v173 + 8))(v152, v172);
          uint64_t v177 = (uint64_t)v264;
          (*(void (**)(char *, char *, uint64_t))v57)(v264, v171, v266);
          id v178 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapTransientRecord());
          uint64_t v179 = sub_1002E9C24(v174, v176, v177, 0, 0);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v272 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v272 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          uint64_t v60 = v179;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          double v51 = *(char **)(((unint64_t)v271 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if ((unint64_t)v51 >= *(void *)(((unint64_t)v271 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          v171 += v12;
          if (!--v59) {
            goto LABEL_106;
          }
        }
        __break(1u);
LABEL_125:
        __break(1u);
LABEL_126:

        __break(1u);
LABEL_127:

        __break(1u);
        uint64_t result = swift_release();
        __break(1u);
        return result;
      }
      goto LABEL_107;
    }
    if (!v168) {
      goto LABEL_127;
    }
    swift_retain();
    uint64_t v180 = dispatch thunk of FMFManager.labelledLocations.getter();
    swift_release();
    double v77 = (char *)_swiftEmptyArrayStorage;
    if (v180) {
      char v181 = (void *)v180;
    }
    else {
      char v181 = _swiftEmptyArrayStorage;
    }
    uint64_t aBlock = (void **)_swiftEmptyArrayStorage;
    v253 = (char *)v181[2];
    if (v253)
    {
      double v51 = 0;
      uint64_t v57 = (char *)(v257 + 16);
      v248 = (char *)(v257 + 32);
      v251 = (void (**)(char *, char *))(v257 + 8);
      uint64_t v250 = (v257 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v12 = (uint64_t)v258;
      uint64_t v252 = (uint64_t)v181;
      uint64_t v182 = (uint64_t)v254;
      while (1)
      {
        if ((unint64_t)v51 >= v181[2])
        {
          __break(1u);
          goto LABEL_118;
        }
        unint64_t v184 = (*(unsigned __int8 *)(v257 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v257 + 80);
        uint64_t v256 = *(char **)(v257 + 72);
        char v185 = (char *)v181 + v184 + (void)v256 * (void)v51;
        id v186 = *(void (**)(uint64_t, char *, char *))(v257 + 16);
        v186(v12, v185, v60);
        FMFLabelledLocation.label.getter();
        uint64_t v187 = type metadata accessor for FMFLabel();
        id v59 = v60;
        uint64_t v188 = *(void *)(v187 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v188 + 48))(v182, 1, v187) == 1) {
          break;
        }
        FMFLabel.localizedValue.getter();
        uint64_t v190 = v189;
        (*(void (**)(uint64_t, uint64_t))(v188 + 8))(v182, v187);
        swift_bridgeObjectRelease();
        double v77 = v255;
        v186((uint64_t)v255, (char *)v12, v59);
        uint64_t v60 = v59;
        if (!v190) {
          goto LABEL_85;
        }
        FMFLabelledLocation.userId.getter();
        uint64_t v191 = v77;
        double v77 = v192;
        swift_bridgeObjectRelease();
        unint64_t v183 = *v251;
        (*v251)(v191, v59);
        if (!v77)
        {
          id v193 = *(void (**)(char *, char *, uint64_t))v248;
          (*(void (**)(char *, char *, char *))v248)(v249, v258, v59);
          double v77 = (char *)aBlock;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10013EB0C(0, *((void *)v77 + 2) + 1, 1);
            double v77 = (char *)aBlock;
          }
          unint64_t v195 = *((void *)v77 + 2);
          unint64_t v194 = *((void *)v77 + 3);
          if (v195 >= v194 >> 1)
          {
            sub_10013EB0C(v194 > 1, v195 + 1, 1);
            double v77 = (char *)aBlock;
          }
          *((void *)v77 + 2) = v195 + 1;
          id v196 = &v77[v184 + v195 * (void)v256];
          uint64_t v60 = (char *)v266;
          v193(v196, v249, v266);
          uint64_t aBlock = (void **)v77;
          uint64_t v12 = (uint64_t)v258;
          char v181 = (void *)v252;
          goto LABEL_87;
        }
LABEL_86:
        char v181 = (void *)v252;
        uint64_t v12 = (uint64_t)v258;
        v183(v258, v60);
LABEL_87:
        if (v253 == ++v51)
        {
          double v77 = (char *)aBlock;
          double v51 = v259;
          goto LABEL_98;
        }
      }
      sub_100003F10(v182, &qword_1006B8930);
      double v77 = v255;
      v186((uint64_t)v255, (char *)v12, v59);
      uint64_t v60 = v59;
LABEL_85:
      unint64_t v183 = *v251;
      (*v251)(v77, v60);
      goto LABEL_86;
    }
LABEL_98:
    swift_bridgeObjectRelease();
    uint64_t aBlock = (void **)v77;
    swift_retain();
    sub_10046925C(&aBlock);
    swift_release();
    id v59 = (char *)aBlock[2];
    if (v59)
    {
      uint64_t v197 = (char *)aBlock
           + ((*(unsigned __int8 *)(v257 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v257 + 80));
      uint64_t v12 = *(void *)(v257 + 72);
      uint64_t v57 = (char *)(v257 + 16);
      swift_retain();
      while (1)
      {
        FMFLabelledLocation.label.getter();
        uint64_t v198 = type metadata accessor for FMFLabel();
        uint64_t v199 = *(void *)(v198 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v199 + 48))(v51, 1, v198) == 1) {
          goto LABEL_125;
        }
        uint64_t v200 = FMFLabel.localizedValue.getter();
        unint64_t v201 = v51;
        uint64_t v203 = v202;
        (*(void (**)(char *, uint64_t))(v199 + 8))(v201, v198);
        uint64_t v204 = (uint64_t)v264;
        (*(void (**)(char *, char *, uint64_t))v57)(v264, v197, v266);
        id v205 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapTransientRecord());
        uint64_t v206 = sub_1002E9C24(v200, v203, v204, 0, 0);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v272 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v272 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        uint64_t v60 = v206;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)v271 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v271 & 0xFFFFFFFFFFFFFF8)
                                                                                             + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        v197 += v12;
        --v59;
        double v51 = v259;
        if (!v59)
        {
LABEL_106:
          swift_release_n();
          goto LABEL_108;
        }
      }
    }
LABEL_107:
    swift_release();
LABEL_108:
    double v77 = v271;
    if ((unint64_t)v271 >> 62)
    {
LABEL_118:
      swift_bridgeObjectRetain_n();
      uint64_t v207 = _CocoaArrayWrapper.endIndex.getter();
      if (!v207) {
        goto LABEL_119;
      }
    }
    else
    {
      uint64_t v207 = *(void *)(((unint64_t)v271 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v207) {
        goto LABEL_119;
      }
    }
    v264 = (char *)sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
    if (v207 < 1)
    {
      __break(1u);
LABEL_121:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      continue;
    }
    break;
  }
  uint64_t v208 = 0;
  unint64_t v257 = (unint64_t)v77 & 0xC000000000000001;
  uint64_t v256 = (char *)v270;
  uint64_t v255 = (char *)(v246 + 8);
  uint64_t v254 = (void (**)(char *, uint64_t))(v245 + 8);
  v259 = v77;
  unint64_t v258 = (char *)v207;
  uint64_t v209 = v260;
  BOOL v210 = v262;
  do
  {
    if (v257) {
      uint64_t v211 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v211 = (char *)*(id *)&v77[8 * (void)v208 + 32];
    }
    ++v208;
    uint64_t v266 = *(void *)&v211[OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_completedGeoWorkGroup];
    char v212 = v211;
    v213 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v214 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v215 = swift_allocObject();
    *(void *)(v215 + 16) = v214;
    *(void *)(v215 + 24) = v212;
    v270[2] = sub_10046EA54;
    v270[3] = v215;
    uint64_t aBlock = _NSConcreteStackBlock;
    unint64_t v269 = 1107296256;
    v270[0] = sub_10003C410;
    v270[1] = &unk_10063D318;
    uint64_t v216 = _Block_copy(&aBlock);
    BOOL v217 = v212;
    swift_retain();
    static DispatchQoS.unspecified.getter();
    v267 = _swiftEmptyArrayStorage;
    sub_100045C34((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10005D034((uint64_t *)&unk_1006AE4B0);
    sub_10005ECA8();
    uint64_t v218 = v263;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_group.notify(qos:flags:queue:execute:)();
    _Block_release(v216);

    (*(void (**)(char *, uint64_t))v255)(v210, v218);
    (*v254)(v209, v261);

    swift_release();
    swift_release();
    double v77 = v259;
  }
  while (v258 != v208);
LABEL_119:
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  unint64_t v219 = v272;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v219;
}

void sub_100464D40(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v3 = (void *)Strong;
  uint64_t v4 = *(void **)(Strong + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView);
  id v5 = v4;

  if (!v4)
  {
    __break(1u);
    return;
  }
  id v6 = [v5 visibleCells];

  sub_100006060(0, &qword_1006AF7B8);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v8) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v8) {
      goto LABEL_16;
    }
  }
  if (v8 < 1) {
    goto LABEL_29;
  }
  for (uint64_t i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0) {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v10 = *(id *)(v7 + 8 * i + 32);
    }
    uint64_t v11 = v10;
    type metadata accessor for FMFenceMapTableViewCell();
    if (swift_dynamicCastClass())
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
    }
  }
LABEL_16:
  swift_bridgeObjectRelease();
  unint64_t v7 = (unint64_t)sub_1005439DC((unint64_t)_swiftEmptyArrayStorage);
  swift_release();
  if (v7)
  {
    if (v7 >> 62) {
      goto LABEL_30;
    }
    uint64_t v12 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v13 = a2;
    swift_bridgeObjectRetain();
    for (; v12; uint64_t v12 = _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v14 = 4;
      while (1)
      {
        uint64_t v15 = (v7 & 0xC000000000000001) != 0
            ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : (char *)*(id *)(v7 + 8 * v14);
        uint64_t v16 = v15;
        uint64_t v17 = v14 - 3;
        if (__OFADD__(v14 - 4, 1)) {
          break;
        }
        uint64_t v18 = OBJC_IVAR____TtC6FindMy23FMFenceMapTableViewCell_record;
        uint64_t v19 = *(void **)&v15[OBJC_IVAR____TtC6FindMy23FMFenceMapTableViewCell_record];
        if (v19)
        {
          type metadata accessor for FMFenceMapTransientRecord();
          id v20 = a2;
          id v21 = v19;
          char v22 = static NSObject.== infix(_:_:)();

          if (v22)
          {

            swift_bridgeObjectRelease_n();
            uint64_t v23 = *(void **)&v16[v18];
            *(void *)&v16[v18] = v20;
            id v24 = v20;

            sub_1003D9840();
            return;
          }
        }

        ++v14;
        if (v17 == v12) {
          goto LABEL_31;
        }
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      id v25 = a2;
      swift_bridgeObjectRetain();
    }
LABEL_31:

    swift_bridgeObjectRelease_n();
  }
}

id sub_100465070(uint64_t a1, uint64_t a2)
{
  uint64_t v93 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v92 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v91 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v86 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10005D034((uint64_t *)&unk_1006BF070);
  __chkstk_darwin(v11 - 8);
  uint64_t v105 = (uint64_t)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for FMFLocationAlertAddressType();
  uint64_t v97 = *(void (***)(char *, void, uint64_t))(v107 - 8);
  __chkstk_darwin(v107);
  id v100 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10005D034((uint64_t *)&unk_1006AF710);
  __chkstk_darwin(v14 - 8);
  uint64_t v102 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for FMFLocation();
  uint64_t v95 = *(void (***)(char *, uint64_t))(v85 - 8);
  uint64_t v16 = __chkstk_darwin(v85);
  uint64_t v99 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  int v83 = (char *)&v79 - v18;
  uint64_t v101 = type metadata accessor for FMFFriend();
  uint64_t v19 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v84 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = a1;
  uint64_t v90 = a2;
  Swift::String v21 = String.lowercased()();
  uint64_t v22 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_defaultSearchRecords;
  uint64_t v94 = v2;
  if (!*(void *)&v2[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_defaultSearchRecords])
  {
    uint64_t v23 = v94;
    *(void *)&v23[v22] = sub_1004626F8();
    swift_bridgeObjectRelease();
  }
  unint64_t v24 = ((unint64_t)v21._object >> 56) & 0xF;
  if (((uint64_t)v21._object & 0x2000000000000000) == 0) {
    unint64_t v24 = v21._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (v24)
  {
    uint64_t v103 = v19;
    uint64_t v80 = v5;
    unint64_t v25 = (unint64_t)_swiftEmptyArrayStorage;
    unint64_t v110 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v26 = v94;
    if (*(void *)&v94[v22]) {
      uint64_t v27 = *(void **)&v94[v22];
    }
    else {
      uint64_t v27 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRetain();
    sub_1004A2D7C((unint64_t)v27);
    swift_bridgeObjectRetain();
    unint64_t v28 = swift_bridgeObjectRetain();
    uint64_t v29 = sub_10046D500(v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v110 = (unint64_t)v29;
    swift_bridgeObjectRelease();
    if (*(void *)&v26[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapSearchResults])
    {
      swift_bridgeObjectRetain();
      unint64_t v30 = swift_bridgeObjectRetain();
      unint64_t v25 = (unint64_t)sub_10046D77C(v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v96 = 0;
    uint64_t v82 = v7;
    id v81 = v9;
    Swift::String v98 = v21;
    if (v25 >> 62)
    {
      swift_bridgeObjectRetain();
      id result = (id)_CocoaArrayWrapper.endIndex.getter();
      uint64_t v31 = (uint64_t)result;
      if (!result) {
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v31 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id result = (id)swift_bridgeObjectRetain();
      if (!v31) {
        goto LABEL_28;
      }
    }
    if (v31 < 1)
    {
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    uint64_t v33 = 0;
    uint64_t v106 = (void (*)(char *, char *, uint64_t))(v25 & 0xC000000000000001);
    LODWORD(v104) = enum case for FMFLocationAlertAddressType.custom(_:);
    uint64_t v34 = (void (**)(uint64_t, void, uint64_t))(v97 + 13);
    uint64_t v35 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v97 + 7);
    uint64_t v36 = v105;
    do
    {
      if (v106) {
        id v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v37 = *(id *)(v25 + 8 * v33 + 32);
      }
      id v38 = v37;
      id v39 = [v38 placemark];
      id v40 = [v39 title];

      if (v40)
      {
        uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v43 = v42;

        uint64_t v44 = v107;
        (*v34)(v36, v104, v107);
        (*v35)(v36, 0, 1, v44);
        objc_allocWithZone((Class)type metadata accessor for FMFenceMapTransientRecord());
        sub_1002E7E7C(v41, v43, v36, v38);
        id v46 = v45;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      ++v33;
    }
    while (v31 != v33);
LABEL_28:
    swift_bridgeObjectRelease_n();
    uint64_t v48 = v94;
    double v49 = sub_1004623A4();
    uint64_t v50 = sub_10046CBAC((uint64_t)v49, v98._countAndFlagsBits, (uint64_t)v98._object);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v51 = v50[2];
    if (v51)
    {
      uint64_t v106 = *(void (**)(char *, char *, uint64_t))(v103 + 16);
      unint64_t v52 = (*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
      uint64_t v79 = v50;
      uint64_t v53 = (char *)v50 + v52;
      uint64_t v105 = *(void *)(v103 + 72);
      uint64_t v104 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 6);
      v98._unint64_t object = v95 + 4;
      LODWORD(v98._countAndFlagsBits) = enum case for FMFLocationAlertAddressType.friendLocation(_:);
      v97 += 13;
      uint64_t v96 = (void (**)(char *, char *, uint64_t))(v95 + 2);
      ++v95;
      uint64_t v54 = (void (**)(char *, uint64_t))(v103 + 8);
      uint64_t v56 = v101;
      uint64_t v55 = (uint64_t)v102;
      uint64_t v57 = v85;
      uint64_t v58 = v83;
      id v59 = v84;
      v103 += 16;
      v106(v84, v53, v101);
      while (1)
      {
        FMFFriend.location.getter();
        if ((*v104)(v55, 1, v57) == 1)
        {
          (*v54)(v59, v56);
          sub_100003F10(v55, (uint64_t *)&unk_1006AF710);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))v98._object)(v58, v55, v57);
          uint64_t v60 = FMFFriend.name.getter();
          uint64_t v62 = v61;
          id v63 = v100;
          (*v97)(v100, LODWORD(v98._countAndFlagsBits), v107);
          uint64_t v64 = (uint64_t)v99;
          (*v96)(v99, v58, v57);
          id v65 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapTransientRecord());
          Swift::String v66 = sub_1002E68B0(v60, v62, v63, v64);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          (*v95)(v58, v57);
          uint64_t v56 = v101;
          (*v54)(v59, v101);
          uint64_t v55 = (uint64_t)v102;
        }
        v53 += v105;
        if (!--v51) {
          break;
        }
        v106(v59, v53, v56);
      }
      swift_bridgeObjectRelease();
      uint64_t v67 = v93;
      uint64_t v48 = v94;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v67 = v93;
    }
    *(void *)&v48[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_filteredSearchRecords] = v110;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id result = *(id *)&v48[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView];
    uint64_t v68 = v82;
    uint64_t v69 = v81;
    if (result)
    {
      [result reloadData];
      sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
      uint64_t v70 = v87;
      Swift::String v71 = v86;
      uint64_t v72 = v88;
      (*(void (**)(char *, void, uint64_t))(v87 + 104))(v86, enum case for DispatchQoS.QoSClass.default(_:), v88);
      Swift::String v73 = (void *)static OS_dispatch_queue.global(qos:)();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
      id v74 = (void *)swift_allocObject();
      uint64_t v75 = v90;
      v74[2] = v89;
      v74[3] = v75;
      v74[4] = v48;
      aBlock[4] = sub_10046E9D8;
      aBlock[5] = v74;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10003C410;
      aBlock[3] = &unk_10063D250;
      id v76 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      double v77 = v48;
      static DispatchQoS.unspecified.getter();
      uint64_t v108 = _swiftEmptyArrayStorage;
      sub_100045C34((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10005D034((uint64_t *)&unk_1006AE4B0);
      sub_10005ECA8();
      double v78 = v92;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v76);

      (*(void (**)(char *, uint64_t))(v80 + 8))(v78, v67);
      (*(void (**)(char *, uint64_t))(v91 + 8))(v69, v68);
      swift_release();
      return (id)swift_bridgeObjectRelease();
    }
    goto LABEL_42;
  }
  swift_bridgeObjectRelease();
  uint64_t v47 = v94;
  *(void *)&v94[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_filteredSearchRecords] = *(void *)&v94[v22];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id result = *(id *)&v47[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView];
  if (!result)
  {
LABEL_43:
    __break(1u);
    return result;
  }

  return [result reloadData];
}

uint64_t sub_100465D5C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = self;
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v11 predicateForContactsMatchingString:v12 accountIdentifier:0 containerIdentifier:0 groupIdentifier:0];

  id v14 = [objc_allocWithZone((Class)CNContactStore) init];
  if (qword_1006AE3D0 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  sub_10005D034(&qword_1006AE810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  aBlock[0] = 0;
  id v16 = [v14 unifiedContactsMatchingPredicate:v13 keysToFetch:isa error:aBlock];

  id v17 = aBlock[0];
  if (v16)
  {
    sub_100006060(0, (unint64_t *)&qword_1006B45B0);
    uint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    id v19 = v17;
  }
  else
  {
    id v20 = aBlock[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    uint64_t v18 = 0;
  }
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  Swift::String v21 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = v18;
  v22[3] = a3;
  aBlock[4] = sub_10046E9FC;
  aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10063D2A0;
  uint64_t v23 = _Block_copy(aBlock);
  id v24 = a3;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100045C34((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_10005ECA8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v27);
}

void *sub_1004661BC(unint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v2 = a1;
    if (a1 >> 62) {
      goto LABEL_34;
    }
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v4 = 0;
      id v28 = self;
      unint64_t v29 = v2 & 0xC000000000000001;
      uint64_t v25 = v2 + 32;
      uint64_t v26 = v3;
      uint64_t v27 = v2;
      while (1)
      {
        if (v29)
        {
          id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v6 = __OFADD__(v4++, 1);
          if (v6) {
            break;
          }
          goto LABEL_11;
        }
        id v5 = *(id *)(v25 + 8 * v4);
        BOOL v6 = __OFADD__(v4++, 1);
        if (v6) {
          break;
        }
LABEL_11:
        id v7 = v5;
        id v8 = [v28 stringFromContact:v7 style:0];
        if (v8)
        {
          uint64_t v9 = v8;
          uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v11 = v10;

          uint64_t v2 = (uint64_t)[v7 postalAddresses];
          sub_10005D034((uint64_t *)&unk_1006BF080);
          uint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v30 = v4;
          if ((unint64_t)v12 >> 62)
          {
            if (v12 < 0) {
              uint64_t v2 = v12;
            }
            else {
              uint64_t v2 = v12 & 0xFFFFFFFFFFFFFF8;
            }
            swift_bridgeObjectRetain();
            uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (!v13) {
              goto LABEL_5;
            }
          }
          else
          {
            uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (!v13) {
              goto LABEL_5;
            }
          }
          if (v13 < 1) {
            goto LABEL_33;
          }
          uint64_t v14 = 0;
          do
          {
            if ((v12 & 0xC000000000000001) != 0) {
              id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v15 = *(id *)(v12 + 8 * v14 + 32);
            }
            id v16 = v15;
            id v17 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapTransientRecord());
            id v18 = v7;
            swift_bridgeObjectRetain();
            id v19 = v16;
            id v20 = sub_1002E75B4(v31, v11, v18, v19, 0, 0);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            ++v14;
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          while (v13 != v14);
LABEL_5:
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          uint64_t v3 = v26;
          uint64_t v2 = v27;
          uint64_t v4 = v30;
          if (v30 == v26) {
            goto LABEL_35;
          }
        }
        else
        {

          if (v4 == v3) {
            goto LABEL_35;
          }
        }
      }
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      swift_bridgeObjectRetain_n();
    }
LABEL_35:
    swift_bridgeObjectRelease_n();
  }
  uint64_t v21 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_filteredSearchRecords;
  if (*(void *)(a2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_filteredSearchRecords)) {
    uint64_t v22 = *(void **)(a2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_filteredSearchRecords);
  }
  else {
    uint64_t v22 = _swiftEmptyArrayStorage;
  }
  uint64_t v32 = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1004A2D7C((unint64_t)_swiftEmptyArrayStorage);
  *(void *)(a2 + v21) = v32;
  swift_bridgeObjectRelease();
  id result = *(void **)(a2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView);
  if (result)
  {
    [result reloadData];
    return (void *)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_100466560(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
  id result = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
  if (!result) {
    goto LABEL_26;
  }
  id v5 = [result overlays];
  sub_10005D034((uint64_t *)&unk_1006BD9A0);
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v13 = v3;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    id result = (void *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v7 = (uint64_t)result;
    if (!result) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (void *)swift_bridgeObjectRetain();
    if (!v7) {
      goto LABEL_15;
    }
  }
  if (v7 < 1)
  {
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  for (uint64_t i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_unknownObjectRetain();
    }
    self;
    if (swift_dynamicCastObjCClass())
    {
      swift_unknownObjectRetain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    swift_unknownObjectRelease();
  }
LABEL_15:
  id result = (void *)swift_bridgeObjectRelease_n();
  uint64_t v9 = *(void **)(v1 + v13);
  if (!v9)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    id v12 = v9;
    swift_bridgeObjectRetain();
    _bridgeCocoaArray<A>(_:)();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    id v10 = v9;
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  }
  swift_bridgeObjectRelease();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v9 removeOverlays:isa];

  if (!a1) {
    goto LABEL_21;
  }
  id result = *(void **)(v1 + v13);
  if (!result)
  {
LABEL_28:
    __break(1u);
    return result;
  }
  [result addOverlay:a1];
LABEL_21:

  return (void *)swift_bridgeObjectRelease();
}

void sub_1004667FC()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
  uint64_t v2 = *(void **)((char *)isa + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
  if (!v2) {
    goto LABEL_28;
  }
  uint64_t v3 = isa;
  Class isa = [v2 overlays];
  if (!isa)
  {
    sub_10005D034((uint64_t *)&unk_1006BD9A0);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = *(void **)((char *)v3 + v1);
  if (!v4) {
    goto LABEL_29;
  }
  id v5 = v4;
  [v5 removeOverlays:isa];

  unint64_t v6 = *(void **)((char *)v3 + v1);
  if (!v6)
  {
LABEL_30:
    __break(1u);
    return;
  }
  Class isa = [v6 annotations];
  sub_10005D034(&qword_1006BD9C0);
  uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0) {
      Class isa = (void *)v7;
    }
    else {
      Class isa = (void *)(v7 & 0xFFFFFFFFFFFFFF8);
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8)
    {
LABEL_8:
      if (v8 < 1)
      {
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:

        __break(1u);
        goto LABEL_30;
      }
      for (uint64_t i = 0; i != v8; ++i)
      {
        if ((v7 & 0xC000000000000001) != 0) {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          swift_unknownObjectRetain();
        }
        self;
        if (swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
      }
      swift_bridgeObjectRelease();
      Class isa = _swiftEmptyArrayStorage;
      id v10 = *(void **)((char *)v3 + v1);
      if (v10) {
        goto LABEL_18;
      }
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
  }
  swift_bridgeObjectRelease();
  Class isa = _swiftEmptyArrayStorage;
  id v10 = *(void **)((char *)v3 + v1);
  if (!v10) {
    goto LABEL_26;
  }
LABEL_18:
  id v11 = v10;
  Class v12 = Array._bridgeToObjectiveC()().super.isa;
  swift_release();
  [v11 removeAnnotations:v12];

  uint64_t v13 = *(void **)((char *)v3 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedAnnotation);
  *(void *)((char *)v3 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedAnnotation) = 0;

  uint64_t v14 = (void *)((char *)v3 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSearchedQuery);
  *uint64_t v14 = 0;
  v14[1] = 0;

  swift_bridgeObjectRelease();
}

id sub_100466ABC(char *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius;
  double v4 = *(double *)&a1[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius];
  [a1 coordinate];
  MKCoordinateRegion v31 = MKCoordinateRegionMakeWithDistance(v29, v4 * 3.5, v4 * 3.5);
  uint64_t v5 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
  id result = *(id *)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
  if (!result)
  {
    __break(1u);
    goto LABEL_32;
  }
  [result regionThatFits:v31.center.latitude, v31.center.longitude, v31.span.latitudeDelta, v31.span.longitudeDelta];
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;
  double v15 = *(double *)&a1[v3];
  [a1 coordinate];
  MKCoordinateRegion v32 = MKCoordinateRegionMakeWithDistance(v30, v15 * 3.5, v15 * 3.5);
  id result = *(id *)(v1 + v5);
  if (!result)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  [result regionThatFits:v32.center.latitude, v32.center.longitude, v32.span.latitudeDelta, v32.span.longitudeDelta];
  id result = *(id *)(v1 + v5);
  if (!result)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  double v18 = v16;
  double v19 = v17;
  id result = [result region];
  if (v21 != v18 || v20 != v19)
  {
    id result = *(id *)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView);
    if (result)
    {
      id result = [result removeHandle:0];
      goto LABEL_10;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
LABEL_10:
  if (v10 >= -180.0
    && v10 <= 180.0
    && v8 >= -90.0
    && v8 <= 90.0
    && v12 >= 0.0
    && v12 <= 180.0
    && v14 >= 0.0
    && v14 <= 360.0)
  {
    id result = *(id *)(v1 + v5);
    if (result)
    {
      id result = [result setRegion:1 animated:v8, v10, v12, v14];
      uint64_t v28 = v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_currentMapRegion;
      *(double *)uint64_t v28 = v8;
      *(double *)(v28 + 8) = v10;
      *(double *)(v28 + 16) = v12;
      *(double *)(v28 + 24) = v14;
      *(unsigned char *)(v28 + 32) = 0;
      return result;
    }
LABEL_35:
    __break(1u);
  }
  return result;
}

void sub_100466C98()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  double v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = *(void **)&v0[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView];
  if (!v10) {
    goto LABEL_24;
  }
  id v11 = [v10 selectedAnnotations];
  sub_10005D034(&qword_1006BD9C0);
  unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v12 >> 62))
  {
    if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v25) {
    goto LABEL_19;
  }
LABEL_4:
  if ((v12 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_7;
  }
  if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  swift_unknownObjectRetain();
LABEL_7:
  swift_bridgeObjectRelease();
  type metadata accessor for FMFenceMapAnnotation();
  uint64_t v13 = swift_dynamicCastClass();
  if (v13)
  {
    uint64_t v14 = v13;
    if (!*(void *)(v13 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_clPlacemark))
    {
      v26[1] = *(void *)(v13 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_didReverseGeocodeGroup);
      sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
      v26[0] = static OS_dispatch_queue.main.getter();
      swift_unknownObjectWeakInit();
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v1;
      *(void *)(v18 + 24) = v14;
      aBlock[4] = sub_10046CBA4;
      aBlock[5] = v18;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10003C410;
      aBlock[3] = &unk_10063D160;
      double v19 = _Block_copy(aBlock);
      double v20 = v1;
      swift_unknownObjectRetain();
      static DispatchQoS.unspecified.getter();
      v26[2] = _swiftEmptyArrayStorage;
      sub_100045C34((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10005D034((uint64_t *)&unk_1006AE4B0);
      sub_10005ECA8();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      double v21 = (void *)v26[0];
      OS_dispatch_group.notify(qos:flags:queue:execute:)();
      _Block_release(v19);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      swift_unknownObjectWeakDestroy();
      swift_unknownObjectRelease();
      swift_release();
      return;
    }
    double v15 = *(void (**)(uint64_t, uint64_t (*)(char), uint64_t))&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_doneHandler];
    if (v15)
    {
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = v1;
      *(void *)(v16 + 24) = v14;
      sub_1000B7838((uint64_t)v15);
      double v17 = v1;
      swift_unknownObjectRetain();
      v15(v14, sub_10046E94C, v16);
      swift_release();
      sub_100036B90((uint64_t)v15);
    }
    else
    {
      uint64_t v22 = &v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_delegate];
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v23 = *((void *)v22 + 1);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 8))(v14, 0, ObjectType, v23);
        swift_unknownObjectRelease();
      }
      sub_1004674EC(v1);
    }
  }

  swift_unknownObjectRelease();
}

uint64_t sub_1004671CC(char a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  double v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  unint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = &a2[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_delegate];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v14 = *((void *)v13 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 8))(a3, a1 & 1, ObjectType, v14);
    swift_unknownObjectRelease();
  }
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  *(unsigned char *)(v17 + 24) = a1 & 1;
  aBlock[4] = sub_10046E98C;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10063D1D8;
  uint64_t v18 = _Block_copy(aBlock);
  double v19 = a2;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100045C34((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_10005ECA8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v22);
}

void sub_1004674EC(char *a1)
{
  uint64_t v2 = sub_10005D034(&qword_1006AF090);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v14 - v6;
  if (a1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isOtherUsage] == 1)
  {
    id v8 = [a1 navigationController];
    if (v8)
    {
      id v14 = v8;

      double v9 = v14;
    }
  }
  else
  {
    uint64_t v10 = *(void *)&a1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediator];
    if (v10)
    {
      uint64_t v11 = *(void *)(v10 + 56);
      uint64_t v12 = type metadata accessor for FMSelectionPendingAction(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 0, 1, v12);
      sub_1002EBED4((uint64_t)v7, (uint64_t)v5);
      uint64_t v13 = v11 + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingAction;
      swift_beginAccess();
      swift_retain();
      sub_1000AE7D4((uint64_t)v5, v13, &qword_1006AF090);
      swift_endAccess();
      swift_release();
      [a1 dismissViewControllerAnimated:1 completion:0];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1004676E8(char *a1, void *a2)
{
  uint64_t v4 = *(void (**)(void *, uint64_t (*)(), uint64_t))&a1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_doneHandler];
  if (v4)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    *(void *)(v5 + 24) = a2;
    sub_1000B7838((uint64_t)v4);
    uint64_t v6 = a1;
    id v7 = a2;
    v4(a2, sub_10046F1E8, v5);
    swift_release();
    sub_100036B90((uint64_t)v4);
  }
  else
  {
    id v8 = &a1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_delegate];
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v9 = *((void *)v8 + 1);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 8))(a2, 0, ObjectType, v9);
      swift_unknownObjectRelease();
    }
    sub_1004674EC(a1);
  }
}

void sub_100467828(uint64_t a1, char a2)
{
  if (a2) {
    *(double *)&a1 = -1.0;
  }
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_smallRadiusBarButtonItem);
  if (!v4)
  {
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  id v5 = [v4 customView];
  if (v5)
  {
    uint64_t v6 = v5;
    type metadata accessor for FMStickyRoundedButton();
    id v7 = (void *)swift_dynamicCastClass();
    if (!v7) {
  }
    }
  else
  {
    id v7 = 0;
  }
  id v8 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediumRadiusBarButtonItem);
  if (!v8) {
    goto LABEL_30;
  }
  id v9 = [v8 customView];
  if (v9)
  {
    uint64_t v10 = v9;
    type metadata accessor for FMStickyRoundedButton();
    uint64_t v11 = swift_dynamicCastClass();
    if (v11)
    {
      id v17 = (id)v11;
      goto LABEL_15;
    }
  }
  id v17 = 0;
LABEL_15:
  uint64_t v12 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_largeRadiusBarButtonItem);
  if (!v12)
  {
LABEL_31:
    __break(1u);
    return;
  }
  id v13 = [v12 customView];
  if (v13)
  {
    id v14 = v13;
    type metadata accessor for FMStickyRoundedButton();
    double v15 = (void *)swift_dynamicCastClass();
    if (!v15) {
  }
    }
  else
  {
    double v15 = 0;
  }
  if (v7) {
    [v7 setSelected:*(double *)&a1 == 100.0];
  }
  if (v17) {
    [v17 setSelected:*(double *)&a1 == 250.0];
  }
  if (v15)
  {
    id v16 = v15;
    [v16 setSelected:*(double *)&a1 == 375.0];
  }
}

void sub_100467A04(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  double v43 = *(double *)&a1;
  LODWORD(v4) = a2 & 1;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v41 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v42 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  id v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v16 = (char *)&v36 - v15;
  uint64_t v17 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView;
  uint64_t v18 = *(void **)&v3[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView];
  if (v18)
  {
    double v19 = (char *)[v18 annotation];
    if (v19)
    {
      double v20 = v19;
      if (v4)
      {
      }
      else
      {
        int v38 = 0;
        double v21 = v43;
        uint64_t v22 = *(void **)&v3[v17];
        if (v22) {
          [v22 removeHandle:1];
        }
        uint64_t v23 = OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius;
        *(double *)&v20[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius] = fmin(fmax(v21, 100.0), 241401.0);
        [v20 coordinate];
        id v26 = [self circleWithCenterCoordinate:v24 radius:v25 * *(double *)&v20[v23]];
        uint64_t v27 = OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay;
        uint64_t v28 = *(void **)&v20[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay];
        *(void *)&v20[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay] = v26;

        CLLocationCoordinate2D v29 = *(void **)&v20[v27];
        id v4 = v29;
        sub_100466560((uint64_t)v29);

        sub_100466ABC(v20);
        sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
        uint64_t v36 = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        CLLocationCoordinate2D v30 = *(void (**)(char *, uint64_t))(v42 + 8);
        v42 += 8;
        id v37 = v30;
        v30(v14, v11);
        uint64_t v31 = swift_allocObject();
        *(void *)(v31 + 16) = v3;
        *(void *)(v31 + 24) = v20;
        aBlock[4] = sub_100469234;
        aBlock[5] = v31;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10003C410;
        aBlock[3] = &unk_10063D110;
        MKCoordinateRegion v32 = _Block_copy(aBlock);
        uint64_t v33 = v3;
        uint64_t v34 = v20;
        swift_release();
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100045C34((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10005D034((uint64_t *)&unk_1006AE4B0);
        sub_10005ECA8();
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v35 = (void *)v36;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v32);

        (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v5);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v40);
        v37(v16, v11);
        LOBYTE(v4) = v38;
      }
    }
  }
  sub_100467828(*(uint64_t *)&v43, (char)v4);
}

void sub_100467EF0(void *a1)
{
  id v3 = [a1 annotation];

  if (v3)
  {
    sub_100466560(0);
    if (a1) {
      [a1 removeHandle:1];
    }
    id v4 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
    if (v4)
    {
      [v4 setUserInteractionEnabled:0];
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_100468004(void *a1)
{
  if (a1)
  {
    id v3 = (char *)[a1 annotation];
    if (v3)
    {
      id v4 = v3;
      uint64_t v5 = OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius;
      sub_100467828(*(void *)&v3[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius], 0);
      [v4 coordinate];
      MKCoordinateRegion v26 = MKCoordinateRegionMakeWithDistance(v25, *(double *)&v4[v5] * 3.5, *(double *)&v4[v5] * 3.5);
      uint64_t v6 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
      id result = *(id *)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
      if (!result)
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      [result regionThatFits:v26.center.latitude, v26.center.longitude, v26.span.latitudeDelta, v26.span.longitudeDelta];
      double v12 = v8;
      if (v9 >= -180.0 && v9 <= 180.0 && v8 >= -90.0 && v8 <= 90.0)
      {
        double v16 = v10;
        if (v10 >= 0.0 && v10 <= 180.0)
        {
          double v18 = v11;
          if (v11 >= 0.0 && v11 <= 360.0)
          {
            id result = *(id *)(v1 + v6);
            if (!result)
            {
LABEL_31:
              __break(1u);
              return result;
            }
            double v20 = v9;
            [result setRegion:1 animated:v8];
            uint64_t v21 = v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_currentMapRegion;
            *(double *)uint64_t v21 = v12;
            *(double *)(v21 + 8) = v20;
            *(double *)(v21 + 16) = v16;
            *(double *)(v21 + 24) = v18;
            *(unsigned char *)(v21 + 32) = 0;
          }
        }
      }
      uint64_t v22 = *(void **)&v4[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay];
      id v23 = v22;
      sub_100466560((uint64_t)v22);

      [a1 addHandleForAnnotation:v4];
    }
  }
  id result = *(id *)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
  if (!result)
  {
    __break(1u);
    goto LABEL_30;
  }

  return [result setUserInteractionEnabled:1];
}

void sub_1004684D4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10005D034(&qword_1006AF730);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMFLocationAlertAddressType();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  double v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([a1 state] == (id)1)
  {
    uint64_t v11 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_userDroppedAnnotation;
    double v12 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_userDroppedAnnotation);
    if (v12)
    {
      uint64_t v36 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_userDroppedAnnotation;
      uint64_t v13 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
      if (!v13) {
        goto LABEL_9;
      }
      sub_10005D034(&qword_1006AF2D0);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_10055BD30;
      *(void *)(v14 + 32) = v12;
      uint64_t v37 = v14;
      specialized Array._endMutation()();
      id v15 = v12;
      id v16 = v13;
      sub_10005D034(&qword_1006BD9C0);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v16 removeAnnotations:isa];

      uint64_t v11 = v36;
    }
    uint64_t v18 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
    [a1 locationInView:*(void *)(v2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView)];
    double v19 = *(void **)(v2 + v18);
    if (v19)
    {
      [v19 convertPoint:*(void *)(v2 + v18) toCoordinateFromView:];
      id v22 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v20 longitude:v21];
      uint64_t v37 = 0;
      unint64_t v38 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      id v23 = [self mainBundle];
      v39._uint64_t countAndFlagsBits = 0xD000000000000033;
      v39._unint64_t object = (void *)0x800000010059E640;
      v24._unint64_t object = (void *)0x800000010059E610;
      v24._uint64_t countAndFlagsBits = 0xD000000000000021;
      v25._uint64_t countAndFlagsBits = 0;
      v25._unint64_t object = (void *)0xE000000000000000;
      Swift::String v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v39);

      [v22 coordinate];
      double v28 = v27;
      double v30 = v29;
      (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for FMFLocationAlertAddressType.droppedPin(_:), v7);
      uint64_t v31 = type metadata accessor for FMFAddress();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v6, 1, 1, v31);
      id v32 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapAnnotation());
      uint64_t v33 = sub_1004841E4(v26._countAndFlagsBits, (uint64_t)v26._object, 0, 0, 0, (uint64_t)v10, (uint64_t)v6, 0, v28, v30, 1);
      sub_100460BD8(v33);
      uint64_t v34 = *(void **)(v2 + v11);
      *(void *)(v2 + v11) = v33;

      return;
    }
    __break(1u);
LABEL_9:
    __break(1u);
  }
}

id sub_100468AE0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFenceMapViewController();
  return [super dealloc];
}

uint64_t sub_100468D44()
{
  return type metadata accessor for FMFenceMapViewController();
}

uint64_t type metadata accessor for FMFenceMapViewController()
{
  uint64_t result = qword_1006BF040;
  if (!qword_1006BF040) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100468D98()
{
  sub_100469020(319, (unint64_t *)&qword_1006BF050, (void (*)(uint64_t))&type metadata accessor for FMFLocation);
  if (v0 <= 0x3F)
  {
    sub_100469020(319, (unint64_t *)&qword_1006B9D50, (void (*)(uint64_t))&type metadata accessor for FMFAddress);
    if (v1 <= 0x3F)
    {
      sub_100469020(319, &qword_1006BF060, (void (*)(uint64_t))&type metadata accessor for FMFLocationAlertAddressType);
      if (v2 <= 0x3F)
      {
        sub_100469020(319, &qword_1006BF068, (void (*)(uint64_t))&type metadata accessor for FMFLabel);
        if (v3 <= 0x3F)
        {
          sub_100469020(319, (unint64_t *)&qword_1006AF540, (void (*)(uint64_t))&type metadata accessor for FMFFriend);
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

void sub_100469020(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void destroy for FMFenceMapViewStyle(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for FMFenceMapViewStyle(void *a1, void *a2)
{
  unint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  unint64_t v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  id v6 = v3;
  id v7 = v4;
  id v8 = v5;
  return a1;
}

void *assignWithCopy for FMFenceMapViewStyle(void *a1, void *a2)
{
  *a1 = *a2;
  unint64_t v4 = (void *)a2[1];
  uint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  a1[2] = a2[2];
  id v7 = (void *)a2[3];
  id v8 = (void *)a1[3];
  a1[3] = v7;
  id v9 = v7;

  double v10 = (void *)a2[4];
  uint64_t v11 = (void *)a1[4];
  a1[4] = v10;
  id v12 = v10;

  return a1;
}

uint64_t assignWithTake for FMFenceMapViewStyle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  unint64_t v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

ValueMetadata *type metadata accessor for FMFenceMapViewStyle()
{
  return &type metadata for FMFenceMapViewStyle;
}

uint64_t sub_1004691F4()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_100469234()
{
  id result = *(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView);
  if (result) {
    return [result addHandleForAnnotation:*(void *)(v0 + 24)];
  }
  return result;
}

Swift::Int sub_10046925C(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for FMFLabelledLocation() - 8);
  unint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = (void *)sub_100268938(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_1004693AC(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_100469304(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for FMFFriend() - 8);
  unint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = (void *)sub_10026894C(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_10046A5A8(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_1004693AC(uint64_t *a1)
{
  uint64_t v3 = sub_10005D034(&qword_1006B8930);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v190 = (char *)&v167 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  id v8 = (char *)&v167 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  char v181 = (char *)&v167 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v182 = (char *)&v167 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  id v169 = (char *)&v167 - v14;
  __chkstk_darwin(v13);
  id v170 = (char *)&v167 - v15;
  uint64_t v16 = type metadata accessor for FMFLabelledLocation();
  uint64_t v187 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v180 = (char *)&v167 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v200 = (char *)&v167 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  id v23 = (char *)&v167 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v207 = (char *)&v167 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  unint64_t v183 = (char *)&v167 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  char v185 = (char *)&v167 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v173 = (char *)&v167 - v31;
  __chkstk_darwin(v30);
  id v171 = (char *)&v167 - v32;
  uint64_t v208 = a1;
  Swift::Int v33 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v33);
  if (result >= v33)
  {
    if (v33 < 0) {
      goto LABEL_156;
    }
    if (v33) {
      return sub_10046B2B0(0, v33, 1, v208);
    }
    return result;
  }
  if (v33 >= 0) {
    uint64_t v35 = v33;
  }
  else {
    uint64_t v35 = v33 + 1;
  }
  if (v33 < -1) {
    goto LABEL_170;
  }
  Swift::Int v168 = result;
  uint64_t v188 = v1;
  if (v33 < 2)
  {
    uint64_t v39 = v187;
    unint64_t v186 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80));
    int v167 = _swiftEmptyArrayStorage;
    if (v33 != 1)
    {
      unint64_t v44 = _swiftEmptyArrayStorage[2];
      uint64_t v42 = (char *)_swiftEmptyArrayStorage;
LABEL_122:
      if (v44 >= 2)
      {
        uint64_t v159 = *v208;
        do
        {
          unint64_t v160 = v44 - 2;
          if (v44 < 2) {
            goto LABEL_151;
          }
          if (!v159) {
            goto LABEL_167;
          }
          uint64_t v161 = v42;
          uint64_t v162 = *(void *)&v42[16 * v160 + 32];
          uint64_t v163 = *(void *)&v42[16 * v44 + 24];
          uint64_t v164 = v188;
          sub_10046BB20(v159 + *(void *)(v187 + 72) * v162, v159 + *(void *)(v187 + 72) * *(void *)&v42[16 * v44 + 16], v159 + *(void *)(v187 + 72) * v163, v186);
          uint64_t v188 = v164;
          if (v164) {
            break;
          }
          if (v163 < v162) {
            goto LABEL_152;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v161 = sub_1002687F8((uint64_t)v161);
          }
          if (v160 >= *((void *)v161 + 2)) {
            goto LABEL_153;
          }
          Swift::String v165 = &v161[16 * v160 + 32];
          *(void *)Swift::String v165 = v162;
          *((void *)v165 + 1) = v163;
          unint64_t v166 = *((void *)v161 + 2);
          if (v44 > v166) {
            goto LABEL_154;
          }
          memmove(&v161[16 * v44 + 16], &v161[16 * v44 + 32], 16 * (v166 - v44));
          uint64_t v42 = v161;
          *((void *)v161 + 2) = v166 - 1;
          unint64_t v44 = v166 - 1;
        }
        while (v166 > 2);
      }
LABEL_133:
      swift_bridgeObjectRelease();
      v167[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v36 = 1;
  }
  else
  {
    uint64_t v36 = v33;
    uint64_t v37 = v35 >> 1;
    uint64_t v38 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v38 + 16) = v37;
    uint64_t v39 = v187;
    unint64_t v40 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    int v167 = (void *)v38;
    unint64_t v186 = v38 + v40;
  }
  uint64_t v41 = 0;
  unint64_t v195 = (void (**)(char *, uint64_t))(v39 + 8);
  uint64_t v196 = v39 + 16;
  uint64_t v204 = (void **)(v39 + 32);
  uint64_t v42 = (char *)_swiftEmptyArrayStorage;
  uint64_t v197 = v8;
  uint64_t v198 = v23;
  uint64_t v194 = v16;
  double v43 = v173;
  while (1)
  {
    uint64_t v45 = v41;
    uint64_t v46 = v41 + 1;
    uint64_t v202 = v36;
    uint64_t v179 = v42;
    uint64_t v184 = v41;
    if (v41 + 1 >= v36) {
      goto LABEL_49;
    }
    uint64_t v47 = *v208;
    uint64_t v48 = *(void *)(v39 + 72);
    uint64_t v199 = v41 + 1;
    double v49 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
    uint64_t v50 = v41;
    v49(v171, v47 + v48 * v46, v16);
    uint64_t v172 = v47;
    uint64_t v206 = v48;
    uint64_t v192 = v49;
    v49(v43, v47 + v48 * v50, v16);
    uint64_t v51 = v170;
    FMFLabelledLocation.label.getter();
    uint64_t v52 = type metadata accessor for FMFLabel();
    uint64_t v53 = *(void *)(v52 - 8);
    uint64_t v55 = v53 + 48;
    uint64_t v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
    if (v54(v51, 1, v52) == 1) {
      goto LABEL_168;
    }
    FMFLabel.localizedValue.getter();
    uint64_t v57 = *(void (**)(char *, uint64_t))(v53 + 8);
    uint64_t v56 = v53 + 8;
    unint64_t v201 = v57;
    v57(v51, v52);
    Swift::String v58 = String.lowercased()();
    uint64_t countAndFlagsBits = v58._countAndFlagsBits;
    unint64_t object = (void (*)(char *, uint64_t, uint64_t, char *))v58._object;
    swift_bridgeObjectRelease();
    id v59 = v169;
    FMFLabelledLocation.label.getter();
    uint64_t v191 = v55;
    uint64_t v189 = v54;
    if (v54(v59, 1, v52) == 1) {
      goto LABEL_169;
    }
    FMFLabel.localizedValue.getter();
    uint64_t v178 = v52;
    uint64_t v177 = v56;
    v201(v59, v52);
    Swift::String v60 = String.lowercased()();
    swift_bridgeObjectRelease();
    uint64_t v61 = v202;
    if (countAndFlagsBits == v60._countAndFlagsBits && object == v60._object) {
      LODWORD(v193) = 0;
    }
    else {
      LODWORD(v193) = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    id v8 = v197;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v62 = *v195;
    (*v195)(v173, v16);
    uint64_t v176 = v62;
    v62(v171, v16);
    uint64_t v46 = v184 + 2;
    if (v184 + 2 < v61)
    {
      uint64_t v175 = v206 * v199;
      uint64_t v63 = v172;
      uint64_t v199 = v184 + 2;
      uint64_t v174 = v206 * v46;
      uint64_t v64 = v183;
      while (1)
      {
        id v65 = v192;
        v192(v185, v63 + v174, v16);
        uint64_t countAndFlagsBits = v63;
        v65(v64, v63 + v175, v16);
        Swift::String v66 = v182;
        FMFLabelledLocation.label.getter();
        uint64_t v67 = v178;
        uint64_t v68 = v189;
        if (v189(v66, 1, v178) == 1) {
          goto LABEL_164;
        }
        FMFLabel.localizedValue.getter();
        uint64_t v69 = v201;
        v201(v66, v67);
        Swift::String v70 = String.lowercased()();
        unint64_t object = (void (*)(char *, uint64_t, uint64_t, char *))v70._object;
        swift_bridgeObjectRelease();
        Swift::String v71 = v181;
        FMFLabelledLocation.label.getter();
        if (v68(v71, 1, v67) == 1) {
          goto LABEL_165;
        }
        FMFLabel.localizedValue.getter();
        v69(v71, v67);
        Swift::String v72 = String.lowercased()();
        swift_bridgeObjectRelease();
        if (v70._countAndFlagsBits == v72._countAndFlagsBits && object == v72._object) {
          int v73 = 0;
        }
        else {
          int v73 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        uint64_t v16 = v194;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v64 = v183;
        id v74 = v176;
        v176(v183, v16);
        v74(v185, v16);
        if ((v193 ^ v73)) {
          break;
        }
        uint64_t v63 = countAndFlagsBits + v206;
        ++v199;
        id v8 = v197;
        if (v202 == v199)
        {
          uint64_t v61 = v202;
          uint64_t v46 = v202;
          id v23 = v198;
          goto LABEL_35;
        }
      }
      id v8 = v197;
      id v23 = v198;
      uint64_t v46 = v199;
      uint64_t v61 = v202;
    }
LABEL_35:
    uint64_t v39 = v187;
    uint64_t v42 = v179;
    uint64_t v45 = v184;
    if (v193)
    {
      if (v46 < v184) {
        goto LABEL_157;
      }
      if (v184 < v46)
      {
        uint64_t v75 = 0;
        uint64_t v76 = v206 * (v46 - 1);
        uint64_t v77 = v46 * v206;
        uint64_t v78 = v184;
        uint64_t v79 = v184 * v206;
        do
        {
          if (v78 != v46 + v75 - 1)
          {
            uint64_t v81 = v172;
            if (!v172) {
              goto LABEL_166;
            }
            unint64_t v82 = v172 + v79;
            uint64_t countAndFlagsBits = v172 + v76;
            unint64_t object = (void (*)(char *, uint64_t, uint64_t, char *))*v204;
            object(v180, v172 + v79, v16, v42);
            if (v79 < v76 || v82 >= v81 + v77)
            {
              uint64_t v80 = countAndFlagsBits;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v80 = countAndFlagsBits;
              if (v79 != v76) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            ((void (*)(uint64_t, char *, uint64_t))object)(v80, v180, v16);
            uint64_t v42 = v179;
          }
          ++v78;
          --v75;
          v76 -= v206;
          v77 -= v206;
          v79 += v206;
        }
        while (v78 < v46 + v75);
        uint64_t v39 = v187;
        id v8 = v197;
        id v23 = v198;
        uint64_t v45 = v184;
LABEL_49:
        uint64_t v61 = v202;
      }
    }
    if (v46 >= v61) {
      goto LABEL_73;
    }
    if (__OFSUB__(v46, v45)) {
      goto LABEL_155;
    }
    if (v46 - v45 >= v168) {
      goto LABEL_73;
    }
    if (__OFADD__(v45, v168)) {
      goto LABEL_158;
    }
    uint64_t v83 = v45 + v168 >= v61 ? v61 : v45 + v168;
    if (v83 < v45) {
      break;
    }
    if (v46 != v83)
    {
      uint64_t v84 = *(void *)(v39 + 72);
      uint64_t v189 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 16);
      uint64_t v85 = v84 * (v46 - 1);
      uint64_t v191 = v84;
      uint64_t v86 = v46 * v84;
      uint64_t v178 = v83;
      do
      {
        uint64_t v89 = 0;
        uint64_t v199 = v46;
        uint64_t v192 = (void (*)(char *, uint64_t, uint64_t))v86;
        uint64_t v193 = v85;
        while (1)
        {
          uint64_t v90 = *v208;
          uint64_t v202 = v86 + v89;
          uint64_t countAndFlagsBits = v45;
          uint64_t v91 = v86 + v89 + v90;
          uint64_t v92 = (void (*)(char *, uint64_t, uint64_t))v189;
          ((void (*)(char *, uint64_t, uint64_t, char *))v189)(v207, v91, v16, v42);
          uint64_t v206 = v89;
          unint64_t v201 = (void (*)(char *, uint64_t))(v85 + v89);
          v92(v23, v85 + v89 + v90, v16);
          FMFLabelledLocation.label.getter();
          uint64_t v93 = type metadata accessor for FMFLabel();
          uint64_t v94 = *(void *)(v93 - 8);
          uint64_t v95 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48);
          if (v95(v8, 1, v93) == 1) {
            goto LABEL_160;
          }
          FMFLabel.localizedValue.getter();
          uint64_t v96 = *(void (**)(char *, uint64_t))(v94 + 8);
          v96(v8, v93);
          Swift::String v97 = String.lowercased()();
          unint64_t object = (void (*)(char *, uint64_t, uint64_t, char *))v97._object;
          swift_bridgeObjectRelease();
          Swift::String v98 = v190;
          FMFLabelledLocation.label.getter();
          if (v95(v98, 1, v93) == 1) {
            goto LABEL_161;
          }
          FMFLabel.localizedValue.getter();
          v96(v98, v93);
          Swift::String v99 = String.lowercased()();
          swift_bridgeObjectRelease();
          uint64_t v86 = (uint64_t)v192;
          uint64_t v85 = v193;
          uint64_t v100 = v206;
          if (v97._countAndFlagsBits == v99._countAndFlagsBits && object == v99._object) {
            break;
          }
          char v101 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v16 = v194;
          uint64_t v102 = *v195;
          id v23 = v198;
          (*v195)(v198, v194);
          v102(v207, v16);
          if ((v101 & 1) == 0) {
            goto LABEL_61;
          }
          uint64_t v103 = *v208;
          id v8 = v197;
          if (!*v208) {
            goto LABEL_162;
          }
          uint64_t v104 = v103 + v85 + v100;
          uint64_t v105 = (void (*)(uint64_t, char *, uint64_t))*v204;
          ((void (*)(char *, uint64_t, uint64_t))*v204)(v200, v103 + v86 + v100, v16);
          swift_arrayInitWithTakeFrontToBack();
          v105(v104, v200, v16);
          uint64_t v89 = v100 - v191;
          uint64_t v45 = countAndFlagsBits + 1;
          uint64_t v88 = v199;
          if (v199 == countAndFlagsBits + 1) {
            goto LABEL_62;
          }
        }
        swift_bridgeObjectRelease_n();
        uint64_t v16 = v194;
        uint64_t v87 = *v195;
        id v23 = v198;
        (*v195)(v198, v194);
        v87(v207, v16);
LABEL_61:
        id v8 = v197;
        uint64_t v88 = v199;
LABEL_62:
        uint64_t v46 = v88 + 1;
        v85 += v191;
        v86 += v191;
        uint64_t v45 = v184;
      }
      while (v46 != v178);
      uint64_t v46 = v178;
    }
LABEL_73:
    if (v46 < v45) {
      goto LABEL_150;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v199 = v46;
    if (isUniquelyReferenced_nonNull_native) {
      uint64_t v42 = v179;
    }
    else {
      uint64_t v42 = sub_100268068(0, *((void *)v179 + 2) + 1, 1, v179);
    }
    unint64_t v108 = *((void *)v42 + 2);
    unint64_t v107 = *((void *)v42 + 3);
    unint64_t v44 = v108 + 1;
    if (v108 >= v107 >> 1) {
      uint64_t v42 = sub_100268068((char *)(v107 > 1), v108 + 1, 1, v42);
    }
    *((void *)v42 + 2) = v44;
    uint64_t v109 = v42 + 32;
    unint64_t v110 = &v42[16 * v108 + 32];
    uint64_t v111 = v199;
    *(void *)unint64_t v110 = v184;
    *((void *)v110 + 1) = v111;
    if (v108)
    {
      while (1)
      {
        unint64_t v112 = v44 - 1;
        if (v44 >= 4)
        {
          id v117 = &v109[16 * v44];
          uint64_t v118 = *((void *)v117 - 8);
          uint64_t v119 = *((void *)v117 - 7);
          BOOL v123 = __OFSUB__(v119, v118);
          uint64_t v120 = v119 - v118;
          if (v123) {
            goto LABEL_139;
          }
          uint64_t v122 = *((void *)v117 - 6);
          uint64_t v121 = *((void *)v117 - 5);
          BOOL v123 = __OFSUB__(v121, v122);
          uint64_t v115 = v121 - v122;
          char v116 = v123;
          if (v123) {
            goto LABEL_140;
          }
          unint64_t v124 = v44 - 2;
          uint64_t v125 = &v109[16 * v44 - 32];
          uint64_t v127 = *(void *)v125;
          uint64_t v126 = *((void *)v125 + 1);
          BOOL v123 = __OFSUB__(v126, v127);
          uint64_t v128 = v126 - v127;
          if (v123) {
            goto LABEL_142;
          }
          BOOL v123 = __OFADD__(v115, v128);
          uint64_t v129 = v115 + v128;
          if (v123) {
            goto LABEL_145;
          }
          if (v129 >= v120)
          {
            id v147 = &v109[16 * v112];
            uint64_t v149 = *(void *)v147;
            uint64_t v148 = *((void *)v147 + 1);
            BOOL v123 = __OFSUB__(v148, v149);
            uint64_t v150 = v148 - v149;
            if (v123) {
              goto LABEL_149;
            }
            BOOL v140 = v115 < v150;
            goto LABEL_110;
          }
        }
        else
        {
          if (v44 != 3)
          {
            uint64_t v141 = *((void *)v42 + 4);
            uint64_t v142 = *((void *)v42 + 5);
            BOOL v123 = __OFSUB__(v142, v141);
            uint64_t v134 = v142 - v141;
            char v135 = v123;
            goto LABEL_104;
          }
          uint64_t v114 = *((void *)v42 + 4);
          uint64_t v113 = *((void *)v42 + 5);
          BOOL v123 = __OFSUB__(v113, v114);
          uint64_t v115 = v113 - v114;
          char v116 = v123;
        }
        if (v116) {
          goto LABEL_141;
        }
        unint64_t v124 = v44 - 2;
        uint64_t v130 = &v109[16 * v44 - 32];
        uint64_t v132 = *(void *)v130;
        uint64_t v131 = *((void *)v130 + 1);
        BOOL v133 = __OFSUB__(v131, v132);
        uint64_t v134 = v131 - v132;
        char v135 = v133;
        if (v133) {
          goto LABEL_144;
        }
        id v136 = &v109[16 * v112];
        uint64_t v138 = *(void *)v136;
        uint64_t v137 = *((void *)v136 + 1);
        BOOL v123 = __OFSUB__(v137, v138);
        uint64_t v139 = v137 - v138;
        if (v123) {
          goto LABEL_147;
        }
        if (__OFADD__(v134, v139)) {
          goto LABEL_148;
        }
        if (v134 + v139 >= v115)
        {
          BOOL v140 = v115 < v139;
LABEL_110:
          if (v140) {
            unint64_t v112 = v124;
          }
          goto LABEL_112;
        }
LABEL_104:
        if (v135) {
          goto LABEL_143;
        }
        uint64_t v143 = &v109[16 * v112];
        uint64_t v145 = *(void *)v143;
        uint64_t v144 = *((void *)v143 + 1);
        BOOL v123 = __OFSUB__(v144, v145);
        uint64_t v146 = v144 - v145;
        if (v123) {
          goto LABEL_146;
        }
        if (v146 < v134) {
          goto LABEL_15;
        }
LABEL_112:
        unint64_t v151 = v112 - 1;
        if (v112 - 1 >= v44)
        {
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
          goto LABEL_159;
        }
        if (!*v208) {
          goto LABEL_163;
        }
        id v152 = v42;
        uint64_t v153 = &v109[16 * v151];
        uint64_t v154 = *(void *)v153;
        id v155 = &v109[16 * v112];
        uint64_t v156 = *((void *)v155 + 1);
        uint64_t v157 = v188;
        sub_10046BB20(*v208 + *(void *)(v187 + 72) * *(void *)v153, *v208 + *(void *)(v187 + 72) * *(void *)v155, *v208 + *(void *)(v187 + 72) * v156, v186);
        uint64_t v188 = v157;
        if (v157) {
          goto LABEL_133;
        }
        if (v156 < v154) {
          goto LABEL_136;
        }
        if (v112 > *((void *)v152 + 2)) {
          goto LABEL_137;
        }
        *(void *)uint64_t v153 = v154;
        *(void *)&v109[16 * v151 + 8] = v156;
        unint64_t v158 = *((void *)v152 + 2);
        if (v112 >= v158) {
          goto LABEL_138;
        }
        unint64_t v44 = v158 - 1;
        memmove(&v109[16 * v112], v155 + 16, 16 * (v158 - 1 - v112));
        uint64_t v42 = v152;
        *((void *)v152 + 2) = v158 - 1;
        id v23 = v198;
        if (v158 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v44 = 1;
LABEL_15:
    uint64_t v36 = v208[1];
    uint64_t v41 = v199;
    uint64_t v39 = v187;
    id v8 = v197;
    double v43 = v173;
    if (v199 >= v36) {
      goto LABEL_122;
    }
  }
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

Swift::Int sub_10046A5A8(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FMFFriend();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v153 = (char *)&v145 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  Swift::String v165 = (char *)&v145 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  Swift::Int v168 = (char *)&v145 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  int v167 = (char *)&v145 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v148 = (char *)&v145 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  id v155 = (char *)&v145 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  unint64_t v151 = (char *)&v145 - v19;
  __chkstk_darwin(v18);
  uint64_t v150 = (char *)&v145 - v20;
  id v170 = a1;
  Swift::Int v21 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v21);
  if (result >= v21)
  {
    if (v21 < 0) {
      goto LABEL_151;
    }
    if (v21) {
      return sub_10046B7D8(0, v21, 1, v170);
    }
    return result;
  }
  if (v21 >= 0) {
    uint64_t v23 = v21;
  }
  else {
    uint64_t v23 = v21 + 1;
  }
  if (v21 < -1) {
    goto LABEL_159;
  }
  Swift::Int v146 = result;
  if (v21 < 2)
  {
    uint64_t v26 = v5;
    uint64_t v28 = (char *)_swiftEmptyArrayStorage;
    unint64_t v156 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v145 = _swiftEmptyArrayStorage;
    if (v21 != 1)
    {
      unint64_t v30 = _swiftEmptyArrayStorage[2];
LABEL_117:
      if (v30 >= 2)
      {
        uint64_t v136 = *v170;
        do
        {
          unint64_t v137 = v30 - 2;
          if (v30 < 2) {
            goto LABEL_146;
          }
          if (!v136) {
            goto LABEL_158;
          }
          uint64_t v138 = v28;
          uint64_t v139 = v28 + 32;
          uint64_t v140 = *(void *)&v28[16 * v137 + 32];
          uint64_t v141 = *(void *)&v28[16 * v30 + 24];
          uint64_t v142 = v26;
          sub_10046C4E4(v136 + *(void *)(v26 + 72) * v140, v136 + *(void *)(v26 + 72) * *(void *)&v139[16 * v30 - 16], v136 + *(void *)(v26 + 72) * v141, v156);
          if (v2) {
            break;
          }
          if (v141 < v140) {
            goto LABEL_147;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v138 = sub_1002687F8((uint64_t)v138);
          }
          if (v137 >= *((void *)v138 + 2)) {
            goto LABEL_148;
          }
          uint64_t v143 = &v138[16 * v137 + 32];
          *(void *)uint64_t v143 = v140;
          *((void *)v143 + 1) = v141;
          unint64_t v144 = *((void *)v138 + 2);
          if (v30 > v144) {
            goto LABEL_149;
          }
          uint64_t v28 = v138;
          memmove(&v138[16 * v30 + 16], &v138[16 * v30 + 32], 16 * (v144 - v30));
          *((void *)v138 + 2) = v144 - 1;
          unint64_t v30 = v144 - 1;
          uint64_t v26 = v142;
        }
        while (v144 > 2);
      }
LABEL_128:
      swift_bridgeObjectRelease();
      v145[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v24 = v23 >> 1;
    uint64_t v25 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v25 + 16) = v24;
    uint64_t v26 = v5;
    unint64_t v27 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v145 = (void *)v25;
    unint64_t v156 = v25 + v27;
  }
  Swift::Int v29 = 0;
  uint64_t v161 = v26 + 16;
  uint64_t v162 = (void (**)(char *, uint64_t))(v26 + 8);
  unint64_t v166 = (char **)(v26 + 32);
  uint64_t v28 = (char *)_swiftEmptyArrayStorage;
  uint64_t v157 = v26;
  uint64_t v164 = v4;
  while (1)
  {
    Swift::Int v31 = v29;
    Swift::Int v32 = v29 + 1;
    Swift::Int v154 = v29;
    if (v29 + 1 >= v21)
    {
      Swift::Int v40 = v29 + 1;
      goto LABEL_69;
    }
    Swift::Int v163 = v21;
    uint64_t v149 = v28;
    uint64_t v33 = *v170;
    uint64_t v34 = *(void *)(v26 + 72);
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
    v35(v150, *v170 + v34 * v32, v4);
    unint64_t v158 = (char *)v33;
    uint64_t v169 = v34;
    v35(v151, v33 + v34 * v31, v4);
    uint64_t v36 = FMFFriend.name.getter();
    uint64_t v38 = v37;
    if (FMFFriend.name.getter() != v36) {
      goto LABEL_20;
    }
    if (v39 == v38) {
      LODWORD(v160) = 0;
    }
    else {
LABEL_20:
    }
      LODWORD(v160) = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t v41 = v148;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v42 = *v162;
    uint64_t v43 = v164;
    (*v162)(v151, v164);
    v42(v150, v43);
    Swift::Int v40 = v154 + 2;
    if (v154 + 2 >= v163)
    {
      uint64_t v55 = v157;
    }
    else
    {
      uint64_t v147 = v2;
      uint64_t v159 = v169 * v32;
      unint64_t v44 = v158;
      uint64_t v45 = v169 * v40;
      while (1)
      {
        Swift::Int v46 = v40;
        uint64_t v47 = v164;
        v35(v155, (uint64_t)&v44[v45], v164);
        v35(v41, (uint64_t)&v44[v159], v47);
        uint64_t v48 = FMFFriend.name.getter();
        uint64_t v50 = v49;
        if (FMFFriend.name.getter() == v48 && v51 == v50) {
          int v52 = 0;
        }
        else {
          int v52 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v53 = v164;
        v42(v41, v164);
        v42(v155, v53);
        if ((v160 ^ v52)) {
          break;
        }
        Swift::Int v40 = v46 + 1;
        v44 += v169;
        if (v163 == v46 + 1)
        {
          Swift::Int v54 = v163;
          Swift::Int v40 = v163;
          uint64_t v2 = v147;
          uint64_t v55 = v157;
          goto LABEL_33;
        }
      }
      uint64_t v2 = v147;
      uint64_t v55 = v157;
      Swift::Int v40 = v46;
    }
    Swift::Int v54 = v163;
LABEL_33:
    uint64_t v28 = v149;
    Swift::Int v31 = v154;
    uint64_t v56 = v158;
    if ((v160 & 1) == 0) {
      break;
    }
    if (v40 < v154) {
      goto LABEL_152;
    }
    if (v154 >= v40) {
      break;
    }
    uint64_t v147 = v2;
    uint64_t v57 = 0;
    uint64_t v58 = v169 * (v40 - 1);
    uint64_t v59 = v40 * v169;
    Swift::Int v60 = v154;
    uint64_t v61 = v154 * v169;
    do
    {
      if (v60 != v40 + v57 - 1)
      {
        if (!v56) {
          goto LABEL_157;
        }
        uint64_t v63 = &v56[v58];
        unint64_t v160 = *v166;
        ((void (*)(char *, char *, uint64_t))v160)(v153, &v56[v61], v164);
        if (v61 < v58 || &v56[v61] >= &v56[v59])
        {
          uint64_t v62 = v164;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v62 = v164;
          if (v61 != v58) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        ((void (*)(char *, char *, uint64_t))v160)(v63, v153, v62);
        uint64_t v55 = v157;
        uint64_t v56 = v158;
      }
      ++v60;
      --v57;
      v58 -= v169;
      v59 -= v169;
      v61 += v169;
    }
    while (v60 < v40 + v57);
    uint64_t v2 = v147;
    Swift::Int v54 = v163;
    uint64_t v64 = v164;
    uint64_t v28 = v149;
    Swift::Int v31 = v154;
    if (v40 < v163) {
      goto LABEL_49;
    }
LABEL_69:
    if (v40 < v31) {
      goto LABEL_145;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v28 = sub_100268068(0, *((void *)v28 + 2) + 1, 1, v28);
    }
    unint64_t v85 = *((void *)v28 + 2);
    unint64_t v84 = *((void *)v28 + 3);
    unint64_t v30 = v85 + 1;
    uint64_t v26 = v157;
    Swift::Int v163 = v40;
    if (v85 >= v84 >> 1)
    {
      char v135 = sub_100268068((char *)(v84 > 1), v85 + 1, 1, v28);
      uint64_t v26 = v157;
      uint64_t v28 = v135;
    }
    *((void *)v28 + 2) = v30;
    uint64_t v86 = v28 + 32;
    uint64_t v87 = &v28[16 * v85 + 32];
    Swift::Int v88 = v163;
    *(void *)uint64_t v87 = v31;
    *((void *)v87 + 1) = v88;
    if (v85)
    {
      while (1)
      {
        unint64_t v89 = v30 - 1;
        if (v30 >= 4)
        {
          uint64_t v94 = &v86[16 * v30];
          uint64_t v95 = *((void *)v94 - 8);
          uint64_t v96 = *((void *)v94 - 7);
          BOOL v100 = __OFSUB__(v96, v95);
          uint64_t v97 = v96 - v95;
          if (v100) {
            goto LABEL_134;
          }
          uint64_t v99 = *((void *)v94 - 6);
          uint64_t v98 = *((void *)v94 - 5);
          BOOL v100 = __OFSUB__(v98, v99);
          uint64_t v92 = v98 - v99;
          char v93 = v100;
          if (v100) {
            goto LABEL_135;
          }
          unint64_t v101 = v30 - 2;
          uint64_t v102 = &v86[16 * v30 - 32];
          uint64_t v104 = *(void *)v102;
          uint64_t v103 = *((void *)v102 + 1);
          BOOL v100 = __OFSUB__(v103, v104);
          uint64_t v105 = v103 - v104;
          if (v100) {
            goto LABEL_137;
          }
          BOOL v100 = __OFADD__(v92, v105);
          uint64_t v106 = v92 + v105;
          if (v100) {
            goto LABEL_140;
          }
          if (v106 >= v97)
          {
            unint64_t v124 = &v86[16 * v89];
            uint64_t v126 = *(void *)v124;
            uint64_t v125 = *((void *)v124 + 1);
            BOOL v100 = __OFSUB__(v125, v126);
            uint64_t v127 = v125 - v126;
            if (v100) {
              goto LABEL_144;
            }
            BOOL v117 = v92 < v127;
            goto LABEL_106;
          }
        }
        else
        {
          if (v30 != 3)
          {
            uint64_t v118 = *((void *)v28 + 4);
            uint64_t v119 = *((void *)v28 + 5);
            BOOL v100 = __OFSUB__(v119, v118);
            uint64_t v111 = v119 - v118;
            char v112 = v100;
            goto LABEL_100;
          }
          uint64_t v91 = *((void *)v28 + 4);
          uint64_t v90 = *((void *)v28 + 5);
          BOOL v100 = __OFSUB__(v90, v91);
          uint64_t v92 = v90 - v91;
          char v93 = v100;
        }
        if (v93) {
          goto LABEL_136;
        }
        unint64_t v101 = v30 - 2;
        unint64_t v107 = &v86[16 * v30 - 32];
        uint64_t v109 = *(void *)v107;
        uint64_t v108 = *((void *)v107 + 1);
        BOOL v110 = __OFSUB__(v108, v109);
        uint64_t v111 = v108 - v109;
        char v112 = v110;
        if (v110) {
          goto LABEL_139;
        }
        uint64_t v113 = &v86[16 * v89];
        uint64_t v115 = *(void *)v113;
        uint64_t v114 = *((void *)v113 + 1);
        BOOL v100 = __OFSUB__(v114, v115);
        uint64_t v116 = v114 - v115;
        if (v100) {
          goto LABEL_142;
        }
        if (__OFADD__(v111, v116)) {
          goto LABEL_143;
        }
        if (v111 + v116 >= v92)
        {
          BOOL v117 = v92 < v116;
LABEL_106:
          if (v117) {
            unint64_t v89 = v101;
          }
          goto LABEL_108;
        }
LABEL_100:
        if (v112) {
          goto LABEL_138;
        }
        uint64_t v120 = &v86[16 * v89];
        uint64_t v122 = *(void *)v120;
        uint64_t v121 = *((void *)v120 + 1);
        BOOL v100 = __OFSUB__(v121, v122);
        uint64_t v123 = v121 - v122;
        if (v100) {
          goto LABEL_141;
        }
        if (v123 < v111) {
          goto LABEL_14;
        }
LABEL_108:
        unint64_t v128 = v89 - 1;
        if (v89 - 1 >= v30)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!*v170) {
          goto LABEL_156;
        }
        uint64_t v129 = v28;
        uint64_t v130 = &v86[16 * v128];
        uint64_t v131 = *(void *)v130;
        uint64_t v132 = &v86[16 * v89];
        uint64_t v133 = *((void *)v132 + 1);
        sub_10046C4E4(*v170 + *(void *)(v26 + 72) * *(void *)v130, *v170 + *(void *)(v26 + 72) * *(void *)v132, *v170 + *(void *)(v26 + 72) * v133, v156);
        if (v2) {
          goto LABEL_128;
        }
        if (v133 < v131) {
          goto LABEL_131;
        }
        if (v89 > *((void *)v129 + 2)) {
          goto LABEL_132;
        }
        *(void *)uint64_t v130 = v131;
        *(void *)&v86[16 * v128 + 8] = v133;
        unint64_t v134 = *((void *)v129 + 2);
        if (v89 >= v134) {
          goto LABEL_133;
        }
        uint64_t v28 = v129;
        unint64_t v30 = v134 - 1;
        memmove(&v86[16 * v89], v132 + 16, 16 * (v134 - 1 - v89));
        *((void *)v129 + 2) = v134 - 1;
        uint64_t v26 = v157;
        if (v134 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v30 = 1;
LABEL_14:
    Swift::Int v21 = v170[1];
    Swift::Int v29 = v163;
    uint64_t v4 = v164;
    if (v163 >= v21) {
      goto LABEL_117;
    }
  }
  uint64_t v64 = v164;
  if (v40 >= v54) {
    goto LABEL_69;
  }
LABEL_49:
  if (__OFSUB__(v40, v31)) {
    goto LABEL_150;
  }
  if (v40 - v31 >= v146) {
    goto LABEL_69;
  }
  if (__OFADD__(v31, v146)) {
    goto LABEL_153;
  }
  if (v31 + v146 >= v54) {
    Swift::Int v65 = v54;
  }
  else {
    Swift::Int v65 = v31 + v146;
  }
  if (v65 >= v31)
  {
    if (v40 != v65)
    {
      uint64_t v149 = v28;
      uint64_t v147 = v2;
      uint64_t v66 = *(void *)(v55 + 72);
      unint64_t v158 = *(char **)(v55 + 16);
      uint64_t v159 = v66;
      uint64_t v169 = v66 * (v40 - 1);
      Swift::Int v67 = v40 * v66;
      Swift::Int v152 = v65;
      do
      {
        uint64_t v70 = 0;
        Swift::Int v71 = v31;
        Swift::Int v163 = v40;
        unint64_t v160 = (char *)v67;
        while (1)
        {
          uint64_t v72 = *v170;
          uint64_t v73 = v67 + v70 + *v170;
          id v74 = v158;
          ((void (*)(char *, uint64_t, uint64_t))v158)(v167, v73, v64);
          ((void (*)(char *, uint64_t, uint64_t))v74)(v168, v169 + v70 + v72, v64);
          uint64_t v75 = FMFFriend.name.getter();
          uint64_t v77 = v76;
          if (FMFFriend.name.getter() == v75 && v78 == v77) {
            break;
          }
          char v79 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v80 = *v162;
          uint64_t v64 = v164;
          (*v162)(v168, v164);
          v80(v167, v64);
          if ((v79 & 1) == 0) {
            goto LABEL_59;
          }
          uint64_t v81 = *v170;
          Swift::Int v67 = (Swift::Int)v160;
          if (!*v170) {
            goto LABEL_155;
          }
          uint64_t v82 = v81 + v169 + v70;
          uint64_t v83 = *v166;
          ((void (*)(char *, char *, uint64_t))*v166)(v165, &v160[v81 + v70], v64);
          swift_arrayInitWithTakeFrontToBack();
          ((void (*)(uint64_t, char *, uint64_t))v83)(v82, v165, v64);
          v70 -= v159;
          ++v71;
          Swift::Int v69 = v163;
          if (v163 == v71) {
            goto LABEL_60;
          }
        }
        swift_bridgeObjectRelease_n();
        uint64_t v68 = *v162;
        uint64_t v64 = v164;
        (*v162)(v168, v164);
        v68(v167, v64);
LABEL_59:
        Swift::Int v69 = v163;
        Swift::Int v67 = (Swift::Int)v160;
LABEL_60:
        Swift::Int v40 = v69 + 1;
        v169 += v159;
        v67 += v159;
        Swift::Int v31 = v154;
      }
      while (v40 != v152);
      Swift::Int v40 = v152;
      uint64_t v2 = v147;
      uint64_t v28 = v149;
    }
    goto LABEL_69;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10046B2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  Swift::Int v60 = a4;
  uint64_t v44 = a1;
  uint64_t v6 = sub_10005D034(&qword_1006B8930);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v42[-v10];
  uint64_t v12 = type metadata accessor for FMFLabelledLocation();
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v57 = &v42[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = &v42[-v16];
  uint64_t result = __chkstk_darwin(v15);
  Swift::Int v21 = &v42[-v19];
  uint64_t v55 = a3;
  uint64_t v43 = a2;
  if (a3 != a2)
  {
    uint64_t v51 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v20 + 16);
    uint64_t v52 = v20 + 16;
    uint64_t v22 = *(void *)(v20 + 72);
    uint64_t v45 = (void (**)(unsigned char *, uint64_t))(v20 + 8);
    Swift::Int v46 = &v42[-v19];
    uint64_t v56 = (void (**)(unsigned char *, uint64_t, uint64_t))(v20 + 32);
    uint64_t v23 = v22 * (v55 - 1);
    uint64_t v53 = v22;
    uint64_t v63 = v22 * v55;
    uint64_t v48 = v12;
    uint64_t v49 = v11;
    uint64_t v47 = v17;
    uint64_t v50 = v9;
LABEL_6:
    uint64_t v64 = 0;
    uint64_t v61 = v44;
    uint64_t v54 = v23;
    while (1)
    {
      uint64_t v25 = *v60;
      uint64_t v26 = v17;
      unint64_t v27 = v11;
      uint64_t v28 = v64;
      uint64_t v59 = v63 + v64;
      Swift::Int v29 = v51;
      v51(v21, v63 + v64 + v25, v12);
      uint64_t v58 = v23 + v28;
      v29(v26, v23 + v28 + v25, v12);
      FMFLabelledLocation.label.getter();
      uint64_t v30 = type metadata accessor for FMFLabel();
      uint64_t v31 = *(void *)(v30 - 8);
      Swift::Int v32 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v31 + 48);
      uint64_t result = v32(v27, 1, v30);
      if (result == 1) {
        break;
      }
      FMFLabel.localizedValue.getter();
      uint64_t v33 = *(void (**)(unsigned char *, uint64_t))(v31 + 8);
      v33(v27, v30);
      Swift::String v34 = String.lowercased()();
      unint64_t object = v34._object;
      swift_bridgeObjectRelease();
      uint64_t v35 = v50;
      FMFLabelledLocation.label.getter();
      uint64_t result = v32(v35, 1, v30);
      if (result == 1) {
        goto LABEL_16;
      }
      FMFLabel.localizedValue.getter();
      v33(v35, v30);
      Swift::String v36 = String.lowercased()();
      swift_bridgeObjectRelease();
      if (v34._countAndFlagsBits == v36._countAndFlagsBits && object == v36._object)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v24 = (uint64_t (*)(unsigned char *, uint64_t))*v45;
        uint64_t v17 = v47;
        uint64_t v12 = v48;
        (*v45)(v47, v48);
        Swift::Int v21 = v46;
        uint64_t result = v24(v46, v12);
        uint64_t v11 = v49;
        uint64_t v23 = v54;
LABEL_5:
        v23 += v53;
        v63 += v53;
        if (++v55 == v43) {
          return result;
        }
        goto LABEL_6;
      }
      char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v38 = (uint64_t (*)(unsigned char *, uint64_t))*v45;
      uint64_t v17 = v47;
      uint64_t v12 = v48;
      (*v45)(v47, v48);
      Swift::Int v21 = v46;
      uint64_t result = v38(v46, v12);
      uint64_t v11 = v49;
      uint64_t v23 = v54;
      if (v37)
      {
        uint64_t v39 = *v60;
        if (!*v60) {
          goto LABEL_17;
        }
        uint64_t v40 = v39 + v54 + v64;
        uint64_t v41 = (uint64_t (*)(uint64_t, unsigned char *, uint64_t))*v56;
        (*v56)(v57, v39 + v63 + v64, v12);
        swift_arrayInitWithTakeFrontToBack();
        uint64_t result = v41(v40, v57, v12);
        v64 -= v53;
        if (v55 != ++v61) {
          continue;
        }
      }
      goto LABEL_5;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  return result;
}

uint64_t sub_10046B7D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  Swift::Int v46 = a4;
  uint64_t v34 = a1;
  uint64_t v6 = type metadata accessor for FMFFriend();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v44 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v48 = (char *)&v32 - v10;
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v47 = (char *)&v32 - v13;
  uint64_t v42 = a3;
  uint64_t v33 = a2;
  if (a3 != a2)
  {
    char v37 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v38 = v12 + 16;
    uint64_t v14 = *(void *)(v12 + 72);
    uint64_t v35 = (void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v36 = v6;
    uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v15 = v14 * (v42 - 1);
    uint64_t v39 = v14;
    uint64_t v16 = v14 * v42;
LABEL_6:
    uint64_t v18 = 0;
    uint64_t v19 = v34;
    uint64_t v40 = v16;
    uint64_t v41 = v15;
    while (1)
    {
      uint64_t v20 = *v46;
      uint64_t v45 = v16 + v18;
      uint64_t v21 = v16 + v18 + v20;
      uint64_t v22 = v37;
      v37(v47, v21, v6);
      v22(v48, v15 + v18 + v20, v6);
      uint64_t v23 = FMFFriend.name.getter();
      uint64_t v25 = v24;
      if (FMFFriend.name.getter() == v23 && v26 == v25)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v6 = v36;
        uint64_t v17 = *v35;
        (*v35)(v48, v36);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v17)(v47, v6);
        uint64_t v16 = v40;
        uint64_t v15 = v41;
LABEL_5:
        v15 += v39;
        v16 += v39;
        if (++v42 == v33) {
          return result;
        }
        goto LABEL_6;
      }
      char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v36;
      uint64_t v28 = *v35;
      (*v35)(v48, v36);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v47, v6);
      uint64_t v16 = v40;
      uint64_t v15 = v41;
      if ((v27 & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v29 = *v46;
      if (!*v46) {
        break;
      }
      uint64_t v30 = v29 + v41 + v18;
      uint64_t v31 = *v43;
      (*v43)(v44, v29 + v40 + v18, v6);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v31)(v30, v44, v6);
      v18 -= v39;
      if (v42 == ++v19) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10046BB20(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_10005D034(&qword_1006B8930);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v80 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v81 = (char *)&v74 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  char v79 = (void (*)(void *))((char *)&v74 - v14);
  __chkstk_darwin(v13);
  uint64_t v82 = (char *)&v74 - v15;
  uint64_t v16 = type metadata accessor for FMFLabelledLocation();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v87 = (char *)&v74 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (void (**)(void *, uint64_t))((char *)&v74 - v22);
  __chkstk_darwin(v21);
  unint64_t object = (char *)&v74 - v25;
  uint64_t v27 = *(void *)(v26 + 72);
  if (!v27)
  {
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  if (a2 - a1 == 0x8000000000000000 && v27 == -1) {
    goto LABEL_73;
  }
  int64_t v28 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v27 == -1)
  {
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  uint64_t v29 = (uint64_t)(a2 - a1) / v27;
  unint64_t v92 = a1;
  unint64_t v91 = a4;
  uint64_t v30 = v28 / v27;
  uint64_t v85 = v16;
  if (v29 >= v28 / v27)
  {
    if (v30 < 0) {
      goto LABEL_79;
    }
    uint64_t v32 = v30 * v27;
    uint64_t v83 = v24;
    if (a4 < a2 || a2 + v32 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v50 = a4 + v32;
    unint64_t v90 = a4 + v32;
    unint64_t v92 = a2;
    if (v32 < 1 || a1 >= a2)
    {
LABEL_71:
      sub_100268684(&v92, &v91, (uint64_t *)&v90);
      return 1;
    }
    uint64_t v52 = -v27;
    uint64_t v53 = *(void (**)(void *))(v17 + 16);
    unint64_t v78 = a4;
    char v79 = v53;
    uint64_t v84 = v17 + 16;
    uint64_t v75 = (void (**)(void *, uint64_t))(v17 + 8);
    uint64_t v76 = -v27;
    uint64_t v77 = (char *)a1;
    while (1)
    {
      unint64_t v88 = a3;
      uint64_t v54 = v79;
      ((void (*)(char *, unint64_t, uint64_t))v79)(v87, v50 + v52, v16);
      unint64_t v89 = a2;
      uint64_t v82 = (char *)(a2 + v52);
      v54(v83);
      uint64_t v55 = v81;
      FMFLabelledLocation.label.getter();
      uint64_t v56 = type metadata accessor for FMFLabel();
      uint64_t v57 = *(void *)(v56 - 8);
      uint64_t v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
      if (v58(v55, 1, v56) == 1) {
        break;
      }
      FMFLabel.localizedValue.getter();
      uint64_t v59 = *(void (**)(char *, uint64_t))(v57 + 8);
      v59(v55, v56);
      Swift::String v60 = String.lowercased()();
      unint64_t object = (char *)v60._object;
      swift_bridgeObjectRelease();
      uint64_t v61 = v80;
      FMFLabelledLocation.label.getter();
      if (v58(v61, 1, v56) == 1) {
        goto LABEL_78;
      }
      FMFLabel.localizedValue.getter();
      v59(v61, v56);
      Swift::String v62 = String.lowercased()();
      swift_bridgeObjectRelease();
      if (v60._countAndFlagsBits == v62._countAndFlagsBits && object == v62._object) {
        char v63 = 0;
      }
      else {
        char v63 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      uint64_t v16 = v85;
      unint64_t v64 = v88;
      unint64_t v65 = v89;
      uint64_t v52 = v76;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v66 = v64 + v52;
      Swift::Int v67 = *v75;
      (*v75)(v83, v16);
      v67(v87, v16);
      if (v63)
      {
        unint64_t v68 = v78;
        if (v64 < v65 || v66 >= v65)
        {
          Swift::Int v71 = v82;
          swift_arrayInitWithTakeFrontToBack();
          uint64_t v70 = v77;
        }
        else
        {
          BOOL v69 = v64 == v65;
          uint64_t v70 = v77;
          Swift::Int v71 = v82;
          if (!v69) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v92 += v52;
      }
      else
      {
        unint64_t v72 = v90;
        v90 += v52;
        unint64_t v68 = v78;
        if (v64 < v72 || v66 >= v72)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v64 != v72)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        Swift::Int v71 = (char *)v65;
        uint64_t v70 = v77;
      }
      unint64_t v50 = v90;
      if (v90 > v68)
      {
        a2 = (unint64_t)v71;
        a3 = v66;
        if (v71 > v70) {
          continue;
        }
      }
      goto LABEL_71;
    }
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  if ((v29 & 0x8000000000000000) == 0)
  {
    uint64_t v31 = v29 * v27;
    if (a4 < a1 || a1 + v31 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v81 = (char *)(a4 + v31);
    unint64_t v90 = a4 + v31;
    if (v31 >= 1 && a2 < a3)
    {
      uint64_t v80 = *(char **)(v17 + 16);
      uint64_t v84 = v17 + 16;
      uint64_t v76 = v27;
      uint64_t v77 = (char *)(v17 + 8);
      unint64_t v88 = a3;
      uint64_t v75 = v23;
      while (1)
      {
        unint64_t v89 = a2;
        uint64_t v34 = (void (*)(void (**)(void *, uint64_t), unint64_t, uint64_t))v80;
        ((void (*)(char *, unint64_t, uint64_t))v80)(object, a2, v16);
        v34(v23, a4, v16);
        uint64_t v35 = v82;
        FMFLabelledLocation.label.getter();
        uint64_t v36 = type metadata accessor for FMFLabel();
        uint64_t v37 = *(void *)(v36 - 8);
        uint64_t v87 = *(char **)(v37 + 48);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v87)(v35, 1, v36) == 1) {
          goto LABEL_75;
        }
        FMFLabel.localizedValue.getter();
        uint64_t v38 = *(void (**)(char *, uint64_t))(v37 + 8);
        v38(v35, v36);
        Swift::String v39 = String.lowercased()();
        uint64_t v83 = v39._object;
        swift_bridgeObjectRelease();
        uint64_t v40 = (char *)v79;
        FMFLabelledLocation.label.getter();
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v87)(v40, 1, v36) == 1) {
          goto LABEL_77;
        }
        FMFLabel.localizedValue.getter();
        v38(v40, v36);
        Swift::String v41 = String.lowercased()();
        swift_bridgeObjectRelease();
        if (v39._countAndFlagsBits == v41._countAndFlagsBits && v83 == v41._object) {
          break;
        }
        char v44 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v45 = *(void (**)(char *, uint64_t))v77;
        uint64_t v23 = v75;
        uint64_t v16 = v85;
        (*(void (**)(void, uint64_t))v77)(v75, v85);
        v45(object, v16);
        uint64_t v43 = v76;
        if ((v44 & 1) == 0) {
          goto LABEL_33;
        }
        unint64_t v46 = v92;
        unint64_t v47 = v89 + v76;
        if (v92 < v89 || v92 >= v47)
        {
          swift_arrayInitWithTakeFrontToBack();
          unint64_t v48 = v88;
        }
        else
        {
          unint64_t v48 = v88;
          if (v92 == v89) {
            unint64_t v46 = v89;
          }
          else {
            swift_arrayInitWithTakeBackToFront();
          }
        }
LABEL_39:
        unint64_t v92 = v46 + v43;
        a4 = v91;
        if (v91 < (unint64_t)v81)
        {
          a2 = v47;
          if (v47 < v48) {
            continue;
          }
        }
        goto LABEL_71;
      }
      swift_bridgeObjectRelease_n();
      uint64_t v42 = *(void (**)(char *, uint64_t))v77;
      uint64_t v23 = v75;
      uint64_t v16 = v85;
      (*(void (**)(void, uint64_t))v77)(v75, v85);
      v42(object, v16);
      uint64_t v43 = v76;
LABEL_33:
      unint64_t v46 = v92;
      unint64_t v49 = v91 + v43;
      if (v92 < v91 || v92 >= v49)
      {
        swift_arrayInitWithTakeFrontToBack();
        unint64_t v48 = v88;
        unint64_t v47 = v89;
      }
      else
      {
        unint64_t v48 = v88;
        unint64_t v47 = v89;
        if (v92 != v91) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v91 = v49;
      goto LABEL_39;
    }
    goto LABEL_71;
  }
LABEL_79:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10046C4E4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v66 = type metadata accessor for FMFFriend();
  uint64_t v8 = *(void *)(v66 - 8);
  uint64_t v9 = __chkstk_darwin(v66);
  unint64_t v64 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  char v63 = (char *)&v58 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  Swift::String v62 = (char *)&v58 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v58 - v15;
  uint64_t v65 = *(void *)(v17 + 72);
  if (!v65)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v65 == -1) {
    goto LABEL_69;
  }
  int64_t v18 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v65 == -1) {
    goto LABEL_70;
  }
  uint64_t v19 = (uint64_t)(a2 - a1) / v65;
  unint64_t v69 = a1;
  unint64_t v68 = a4;
  uint64_t v20 = v18 / v65;
  if (v19 >= v18 / v65)
  {
    if ((v20 & 0x8000000000000000) == 0)
    {
      uint64_t v22 = v20 * v65;
      if (a4 < a2 || a2 + v22 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v40 = a4 + v22;
      unint64_t v67 = a4 + v22;
      unint64_t v69 = a2;
      Swift::String v62 = (char *)a1;
      if (v22 >= 1 && a1 < a2)
      {
        uint64_t v42 = -v65;
        uint64_t v65 = *(void *)(v8 + 16);
        unint64_t v60 = a4;
        uint64_t v61 = v8 + 16;
        uint64_t v59 = (void (**)(char *, uint64_t))(v8 + 8);
        do
        {
          unint64_t v43 = a3;
          char v44 = (void (*)(char *, unint64_t, uint64_t))v65;
          uint64_t v45 = v66;
          ((void (*)(char *, unint64_t, uint64_t))v65)(v63, v40 + v42, v66);
          unint64_t v46 = a2 + v42;
          v44(v64, a2 + v42, v45);
          uint64_t v47 = FMFFriend.name.getter();
          uint64_t v49 = v48;
          if (FMFFriend.name.getter() == v47 && v50 == v49) {
            char v51 = 0;
          }
          else {
            char v51 = _stringCompareWithSmolCheck(_:_:expecting:)();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v52 = v43 + v42;
          uint64_t v53 = *v59;
          uint64_t v54 = v66;
          (*v59)(v64, v66);
          v53(v63, v54);
          unint64_t v55 = v60;
          if (v51)
          {
            if (v43 < a2 || v52 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v43 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v69 += v42;
          }
          else
          {
            unint64_t v56 = v67;
            v67 += v42;
            if (v43 < v56 || v52 >= v56)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v43 != v56)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v46 = a2;
          }
          unint64_t v40 = v67;
          if (v67 <= v55) {
            break;
          }
          a2 = v46;
          a3 = v43 + v42;
        }
        while (v46 > (unint64_t)v62);
      }
LABEL_67:
      sub_10026869C(&v69, &v68, (uint64_t *)&v67);
      return 1;
    }
  }
  else if ((v19 & 0x8000000000000000) == 0)
  {
    uint64_t v21 = v19 * v65;
    if (a4 < a1 || a1 + v21 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v64 = (char *)(a4 + v21);
    unint64_t v67 = a4 + v21;
    if (v21 >= 1 && a2 < a3)
    {
      char v63 = *(char **)(v8 + 16);
      uint64_t v61 = v8 + 16;
      uint64_t v24 = (void (**)(char *, uint64_t))(v8 + 8);
      while (1)
      {
        unint64_t v25 = a3;
        uint64_t v26 = v66;
        uint64_t v27 = (void (*)(char *, unint64_t, uint64_t))v63;
        ((void (*)(char *, unint64_t, uint64_t))v63)(v16, a2, v66);
        v27(v62, a4, v26);
        uint64_t v28 = FMFFriend.name.getter();
        uint64_t v30 = v29;
        if (FMFFriend.name.getter() == v28 && v31 == v30) {
          break;
        }
        char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v35 = *v24;
        uint64_t v36 = v66;
        (*v24)(v62, v66);
        v35(v16, v36);
        if ((v34 & 1) == 0) {
          goto LABEL_31;
        }
        unint64_t v37 = v69;
        unint64_t v38 = a2 + v65;
        if (v69 < a2 || v69 >= v38)
        {
          swift_arrayInitWithTakeFrontToBack();
          a3 = v25;
        }
        else
        {
          a3 = v25;
          if (v69 == a2) {
            unint64_t v37 = a2;
          }
          else {
            swift_arrayInitWithTakeBackToFront();
          }
        }
LABEL_37:
        unint64_t v69 = v37 + v65;
        a4 = v68;
        if (v68 < (unint64_t)v64)
        {
          a2 = v38;
          if (v38 < a3) {
            continue;
          }
        }
        goto LABEL_67;
      }
      swift_bridgeObjectRelease_n();
      uint64_t v32 = *v24;
      uint64_t v33 = v66;
      (*v24)(v62, v66);
      v32(v16, v33);
LABEL_31:
      unint64_t v37 = v69;
      unint64_t v39 = v68 + v65;
      if (v69 < v68 || v69 >= v39)
      {
        swift_arrayInitWithTakeFrontToBack();
        a3 = v25;
      }
      else
      {
        a3 = v25;
        if (v69 != v68) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v68 = v39;
      unint64_t v38 = a2;
      goto LABEL_37;
    }
    goto LABEL_67;
  }
LABEL_71:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10046CBA4()
{
  sub_1004676E8(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

void *sub_10046CBAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v35 = a2;
  uint64_t v30 = type metadata accessor for FMFFriend();
  uint64_t v6 = __chkstk_darwin(v30);
  char v34 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t result = _swiftEmptyArrayStorage;
  unint64_t v39 = _swiftEmptyArrayStorage;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v13 = v8 + 16;
    uint64_t v15 = *(void *)(v13 + 56);
    unint64_t v28 = (*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64);
    uint64_t v29 = a3;
    uint64_t v16 = a1 + v28;
    uint64_t v26 = v3;
    uint64_t v27 = (void (**)(char *, uint64_t))(v13 - 8);
    uint64_t v32 = (void (**)(char *, char *, uint64_t))(v13 + 16);
    uint64_t v33 = v14;
    uint64_t v17 = a3;
    uint64_t v18 = v30;
    uint64_t v31 = v13;
    v14(v10, a1 + v28, v30);
    while (1)
    {
      FMFFriend.name.getter();
      Swift::String v19 = String.lowercased()();
      swift_bridgeObjectRelease();
      Swift::String v38 = v19;
      uint64_t v36 = v35;
      uint64_t v37 = v17;
      sub_100059EB8();
      char v20 = StringProtocol.contains<A>(_:)();
      swift_bridgeObjectRelease();
      if (v20)
      {
        uint64_t v21 = *v32;
        (*v32)(v34, v10, v18);
        uint64_t v22 = v39;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10013E778(0, v22[2] + 1, 1);
          uint64_t v22 = v39;
        }
        unint64_t v24 = v22[2];
        unint64_t v23 = v22[3];
        if (v24 >= v23 >> 1)
        {
          sub_10013E778(v23 > 1, v24 + 1, 1);
          uint64_t v22 = v39;
        }
        v22[2] = v24 + 1;
        unint64_t v25 = (unint64_t)v22 + v28 + v24 * v15;
        uint64_t v18 = v30;
        v21((char *)v25, v34, v30);
        unint64_t v39 = v22;
        uint64_t v17 = v29;
      }
      else
      {
        (*v27)(v10, v18);
      }
      v16 += v15;
      if (!--v12) {
        break;
      }
      v33(v10, v16, v18);
    }
    return v39;
  }
  return result;
}

char *sub_10046CE54(uint64_t a1, uint64_t a2)
{
  uint64_t v68 = type metadata accessor for FMFFriend();
  uint64_t v5 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  Swift::String v62 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10005D034(&qword_1006AF740);
  __chkstk_darwin(v7 - 8);
  uint64_t v67 = (uint64_t)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10005D034(&qword_1006B8930);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FMFLabelledLocation();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v64 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v75 = (char *)&v57 - v17;
  __chkstk_darwin(v16);
  uint64_t v74 = (char *)&v57 - v18;
  Swift::String v19 = _swiftEmptyArrayStorage;
  uint64_t v77 = (char *)_swiftEmptyArrayStorage;
  uint64_t v20 = *(void *)(a1 + 16);
  uint64_t v66 = a2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_friendForFence;
  swift_beginAccess();
  if (v20)
  {
    uint64_t v70 = v11;
    uint64_t v57 = v2;
    unint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v21 = v13 + 16;
    uint64_t v22 = v23;
    unint64_t v58 = (*(unsigned __int8 *)(v21 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 64);
    uint64_t v24 = a1 + v58;
    uint64_t v65 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v25 = *(void *)(v21 + 56);
    uint64_t v72 = v21;
    uint64_t v73 = v25;
    uint64_t v59 = (void (**)(char *, uint64_t))(v5 + 8);
    unint64_t v60 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v26 = (void (**)(char *, uint64_t))(v21 - 8);
    char v63 = (void (**)(char *, char *, uint64_t))(v21 + 16);
    Swift::Int v71 = v23;
    uint64_t v27 = v74;
    unint64_t v69 = v26;
    while (1)
    {
      uint64_t v76 = v20;
      v22(v27, v24, v12);
      uint64_t v28 = v12;
      uint64_t v29 = (uint64_t)v70;
      uint64_t v30 = v27;
      FMFLabelledLocation.label.getter();
      uint64_t v31 = type metadata accessor for FMFLabel();
      uint64_t v32 = *(void *)(v31 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v29, 1, v31) == 1)
      {
        sub_100003F10(v29, &qword_1006B8930);
        uint64_t v33 = v75;
        v22(v75, (uint64_t)v27, v28);
        uint64_t v12 = v28;
LABEL_9:
        char v44 = v33;
        unint64_t v43 = *v69;
        (*v69)(v44, v12);
LABEL_10:
        uint64_t v27 = v74;
        uint64_t v45 = v76;
        goto LABEL_11;
      }
      FMFLabel.localizedValue.getter();
      uint64_t v35 = v34;
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v29, v31);
      swift_bridgeObjectRelease();
      uint64_t v33 = v75;
      v22(v75, (uint64_t)v30, v28);
      uint64_t v12 = v28;
      if (!v35) {
        goto LABEL_9;
      }
      uint64_t v36 = FMFLabelledLocation.userId.getter();
      uint64_t v38 = v37;
      uint64_t v39 = v67;
      sub_100006AB0(v66, v67, &qword_1006AF740);
      uint64_t v40 = v68;
      int v41 = (*v65)(v39, 1, v68);
      uint64_t v42 = v69;
      if (v41) {
        break;
      }
      uint64_t v61 = v36;
      unint64_t v46 = v62;
      (*v60)(v62, v39, v40);
      sub_100003F10(v39, &qword_1006AF740);
      uint64_t v47 = FMFFriend.identifier.getter();
      uint64_t v49 = v48;
      (*v59)(v46, v40);
      if (!v38) {
        goto LABEL_21;
      }
      if (!v49)
      {
LABEL_8:
        unint64_t v43 = *v42;
        (*v42)(v75, v12);
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
      BOOL v50 = v61 == v47;
      uint64_t v27 = v74;
      uint64_t v45 = v76;
      if (v50 && v38 == v49)
      {
        swift_bridgeObjectRelease();
        (*v42)(v75, v12);
        swift_bridgeObjectRelease();
LABEL_24:
        unint64_t v52 = *v63;
        (*v63)(v64, v27, v12);
        uint64_t v53 = v77;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10013EB0C(0, *((void *)v53 + 2) + 1, 1);
          uint64_t v53 = v77;
        }
        unint64_t v55 = *((void *)v53 + 2);
        unint64_t v54 = *((void *)v53 + 3);
        if (v55 >= v54 >> 1)
        {
          sub_10013EB0C(v54 > 1, v55 + 1, 1);
          uint64_t v53 = v77;
        }
        *((void *)v53 + 2) = v55 + 1;
        v52(&v53[v58 + v55 * v73], v64, v12);
        uint64_t v77 = v53;
        uint64_t v27 = v74;
        goto LABEL_12;
      }
      char v51 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      unint64_t v43 = *v42;
      (*v42)(v75, v12);
      swift_bridgeObjectRelease();
      if (v51) {
        goto LABEL_24;
      }
LABEL_11:
      v43(v27, v12);
LABEL_12:
      v24 += v73;
      uint64_t v20 = v45 - 1;
      uint64_t v22 = v71;
      if (!v20) {
        return v77;
      }
    }
    sub_100003F10(v39, &qword_1006AF740);
    if (v38) {
      goto LABEL_8;
    }
    uint64_t v49 = 0;
LABEL_21:
    uint64_t v27 = v74;
    uint64_t v45 = v76;
    unint64_t v43 = *v42;
    (*v42)(v75, v12);
    if (!v49) {
      goto LABEL_24;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  return (char *)v19;
}

void *sub_10046D500(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v4 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        uint64_t v5 = v4;
        unint64_t v6 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_20;
        }
        uint64_t v7 = v2;
        if (*(void *)&v4[OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_title + 8])
        {
          String.lowercased()();
          sub_100059EB8();
          char v8 = StringProtocol.contains<A>(_:)();
          swift_bridgeObjectRelease();
          if (v8) {
            goto LABEL_4;
          }
        }
        if (*(void *)&v5[OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_labelLocalizedValue + 8])
        {
          String.lowercased()();
          sub_100059EB8();
          char v9 = StringProtocol.contains<A>(_:)();
          swift_bridgeObjectRelease();
          if (v9) {
            goto LABEL_4;
          }
        }
        if (*(void *)&v5[OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_displayAddress + 8]
          && (String.lowercased()(),
              sub_100059EB8(),
              char v10 = StringProtocol.contains<A>(_:)(),
              swift_bridgeObjectRelease(),
              (v10 & 1) != 0))
        {
LABEL_4:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
        }
        ++v3;
        uint64_t v2 = v7;
        if (v6 == v7) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v3 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    uint64_t v4 = (char *)*(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void *sub_10046D77C(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v1 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v1)
  {
    while (1)
    {
      unint64_t v2 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        uint64_t v4 = v3;
        if (__OFADD__(v2, 1)) {
          goto LABEL_20;
        }
        unint64_t v16 = v2 + 1;
        id v5 = [v3 name];
        if (v5)
        {
          unint64_t v6 = v5;
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          String.lowercased()();
          swift_bridgeObjectRelease();
          sub_100059EB8();
          char v7 = StringProtocol.contains<A>(_:)();
          swift_bridgeObjectRelease();
          if (v7) {
            goto LABEL_4;
          }
        }
        id v8 = [v4 placemark];
        id v9 = [v8 locality];

        if (v9)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          sub_100059EB8();
          char v10 = StringProtocol.contains<A>(_:)();
          swift_bridgeObjectRelease();
          if (v10) {
            goto LABEL_4;
          }
        }
        id v11 = [v4 placemark];
        id v12 = [v11 subLocality];

        if (!v12) {
          goto LABEL_16;
        }
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        sub_100059EB8();
        char v13 = StringProtocol.contains<A>(_:)();
        swift_bridgeObjectRelease();
        if (v13)
        {
LABEL_4:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
LABEL_16:
        }
        ++v2;
        if (v16 == v1) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v2 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      uint64_t v1 = _CocoaArrayWrapper.endIndex.getter();
      if (!v1) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v3 = *(id *)(a1 + 8 * v2 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

id sub_10046DAA0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t v14 = v13;
  uint64_t v49 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediator;
  *(void *)&v13[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediator] = 0;
  uint64_t v15 = (uint64_t)&v13[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_myLocation];
  uint64_t v16 = type metadata accessor for FMFLocation();
  uint64_t v54 = v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  uint64_t v50 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedLocation;
  *(void *)&v13[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedLocation] = 0;
  uint64_t v17 = (uint64_t)&v13[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_address];
  uint64_t v18 = type metadata accessor for FMFAddress();
  uint64_t v56 = v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = (uint64_t)&v13[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressType];
  uint64_t v20 = type metadata accessor for FMFLocationAlertAddressType();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  uint64_t v55 = v19;
  v21(v19, 1, 1, v20);
  uint64_t v22 = &v14[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressLabel];
  uint64_t v23 = type metadata accessor for FMFLabel();
  uint64_t v53 = (uint64_t)v22;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  uint64_t v24 = &v14[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressRadius];
  *(void *)uint64_t v24 = 0;
  v24[8] = 1;
  uint64_t v25 = &v14[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_friendForFence];
  uint64_t v26 = type metadata accessor for FMFFriend();
  uint64_t v51 = (uint64_t)v25;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
  uint64_t v48 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isNotifyMe;
  v14[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isNotifyMe] = 0;
  uint64_t v47 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isOtherUsage;
  v14[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isOtherUsage] = 0;
  uint64_t v27 = &v14[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_delegate];
  *(void *)&v14[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v28 = &v14[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_doneHandler];
  void *v28 = 0;
  v28[1] = 0;
  *(void *)&v14[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_peopleSubscription] = 0;
  uint64_t v29 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_style;
  uint64_t v30 = qword_1006AE3C8;
  uint64_t v31 = v14;
  if (v30 != -1) {
    swift_once();
  }
  uint64_t v32 = &v31[v29];
  uint64_t v33 = (void *)qword_1006D2668;
  uint64_t v34 = qword_1006D2670;
  uint64_t v36 = (void *)qword_1006D2678;
  uint64_t v35 = (void *)qword_1006D2680;
  *uint64_t v32 = qword_1006D2660;
  v32[1] = v33;
  void v32[2] = v34;
  v32[3] = v36;
  v32[4] = v35;
  *(void *)&v31[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView] = 0;
  *(void *)&v31[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView] = 0;
  *(void *)&v31[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView] = 0;
  *(void *)&v31[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_doneButton] = 0;
  *(void *)&v31[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_smallRadiusBarButtonItem] = 0;
  *(void *)&v31[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediumRadiusBarButtonItem] = 0;
  *(void *)&v31[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_largeRadiusBarButtonItem] = 0;
  *(void *)&v31[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_userDroppedAnnotation] = 0;
  *(void *)&v31[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedAnnotation] = 0;
  uint64_t v37 = &v31[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_currentMapRegion];
  *(_OWORD *)uint64_t v37 = 0u;
  *((_OWORD *)v37 + 1) = 0u;
  v37[32] = 1;
  v31[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_showingUserLocation] = 0;
  *(void *)&v31[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapSearchResults] = 0;
  v21((uint64_t)&v31[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSeachAddressType], 1, 1, v20);
  uint64_t v38 = &v31[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSearchedQuery];
  *uint64_t v38 = 0;
  v38[1] = 0;
  *(void *)&v31[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_defaultSearchRecords] = 0;
  v31[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isResigningFromTableView] = 0;
  uint64_t v39 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_contactsDataController;
  type metadata accessor for FMFContactsDataController();
  swift_allocObject();
  id v40 = v33;
  id v41 = v36;
  id v42 = v35;
  *(void *)&v31[v39] = FMFContactsDataController.init(isSnapshotMode:)();
  *(void *)&v31[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchController] = 0;
  *(void *)&v31[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_filteredSearchRecords] = 0;
  *(void *)&v14[v49] = a1;
  swift_retain();
  swift_release();
  swift_beginAccess();
  sub_1003053AC(a2, v54, (uint64_t *)&unk_1006AF710);
  swift_endAccess();
  unint64_t v43 = *(void **)&v14[v50];
  *(void *)&v14[v50] = a3;
  id v44 = a3;

  swift_beginAccess();
  sub_1003053AC(a4, v56, &qword_1006AF730);
  swift_endAccess();
  swift_beginAccess();
  sub_1003053AC(a5, v55, (uint64_t *)&unk_1006BF070);
  swift_endAccess();
  swift_beginAccess();
  sub_1003053AC(a6, v53, &qword_1006B8930);
  swift_endAccess();
  *(void *)uint64_t v24 = a7;
  v24[8] = a8 & 1;
  swift_beginAccess();
  sub_1003053AC(a9, v51, &qword_1006AF740);
  swift_endAccess();
  v14[v47] = a13 & 1;
  v14[v48] = a10 & 1;
  *((void *)v27 + 1) = a12;
  swift_unknownObjectWeakAssign();

  v64.receiver = v31;
  v64.super_class = (Class)type metadata accessor for FMFenceMapViewController();
  id v45 = [super initWithNibName:0 bundle:0];
  sub_100003F10(a9, &qword_1006AF740);
  sub_100003F10(a6, &qword_1006B8930);
  sub_100003F10(a5, (uint64_t *)&unk_1006BF070);
  sub_100003F10(a4, &qword_1006AF730);
  sub_100003F10(a2, (uint64_t *)&unk_1006AF710);
  return v45;
}

void sub_10046E108(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v28 = a3;
  uint64_t v8 = type metadata accessor for FMFLocationAlertAddressType();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  id v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = *(void **)&v4[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView];
  if (v12)
  {
    int v26 = a4;
    [v12 removeHandle:1];
    sub_1004667FC();
    id v13 = [objc_allocWithZone((Class)MKLocalSearchRequest) init];
    uint64_t v25 = a1;
    uint64_t v27 = a2;
    NSString v14 = String._bridgeToObjectiveC()();
    [v13 setNaturalLanguageQuery:v14];

    uint64_t v15 = *(void **)&v4[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView];
    if (v15)
    {
      [v15 region];
      [v13 setRegion:];
      id v16 = [objc_allocWithZone((Class)MKLocalSearch) initWithRequest:v13];
      id v17 = [self sharedApplication];
      [v17 setNetworkActivityIndicatorVisible:1];

      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v8);
      unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v19 = v18 + v10;
      uint64_t v20 = swift_allocObject();
      unint64_t v21 = (v19 & 0xFFFFFFFFFFFFFFF8) + v20;
      *(void *)(v20 + 16) = v4;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v20 + v18, v11, v8);
      *(unsigned char *)(v20 + v19) = v26 & 1;
      uint64_t v22 = v27;
      *(void *)(v21 + 8) = v25;
      *(void *)(v21 + 16) = v22;
      aBlock[4] = sub_10046F068;
      aBlock[5] = v20;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10011678C;
      aBlock[3] = &unk_10063D408;
      uint64_t v23 = _Block_copy(aBlock);
      uint64_t v24 = v4;
      swift_bridgeObjectRetain();
      swift_release();
      [v16 startWithCompletionHandler:v23];
      _Block_release(v23);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10046E3FC()
{
  uint64_t v1 = v0;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediator] = 0;
  unint64_t v2 = &v0[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_myLocation];
  uint64_t v3 = type metadata accessor for FMFLocation();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedLocation] = 0;
  uint64_t v4 = &v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_address];
  uint64_t v5 = type metadata accessor for FMFAddress();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  unint64_t v6 = &v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressType];
  uint64_t v7 = type metadata accessor for FMFLocationAlertAddressType();
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  uint64_t v9 = &v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressLabel];
  uint64_t v10 = type metadata accessor for FMFLabel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  id v11 = &v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressRadius];
  *(void *)id v11 = 0;
  v11[8] = 1;
  id v12 = &v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_friendForFence];
  uint64_t v13 = type metadata accessor for FMFFriend();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isNotifyMe] = 0;
  v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isOtherUsage] = 0;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  NSString v14 = &v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_doneHandler];
  *NSString v14 = 0;
  v14[1] = 0;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_peopleSubscription] = 0;
  uint64_t v15 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_style;
  if (qword_1006AE3C8 != -1) {
    swift_once();
  }
  id v16 = &v1[v15];
  id v17 = (void *)qword_1006D2668;
  uint64_t v18 = qword_1006D2670;
  uint64_t v20 = (void *)qword_1006D2678;
  uint64_t v19 = (void *)qword_1006D2680;
  void *v16 = qword_1006D2660;
  v16[1] = v17;
  v16[2] = v18;
  v16[3] = v20;
  v16[4] = v19;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_doneButton] = 0;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_smallRadiusBarButtonItem] = 0;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediumRadiusBarButtonItem] = 0;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_largeRadiusBarButtonItem] = 0;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_userDroppedAnnotation] = 0;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedAnnotation] = 0;
  unint64_t v21 = &v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_currentMapRegion];
  *(_OWORD *)unint64_t v21 = 0u;
  *((_OWORD *)v21 + 1) = 0u;
  v21[32] = 1;
  v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_showingUserLocation] = 0;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapSearchResults] = 0;
  v8(&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSeachAddressType], 1, 1, v7);
  uint64_t v22 = &v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSearchedQuery];
  *uint64_t v22 = 0;
  v22[1] = 0;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_defaultSearchRecords] = 0;
  v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isResigningFromTableView] = 0;
  uint64_t v23 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_contactsDataController;
  type metadata accessor for FMFContactsDataController();
  swift_allocObject();
  id v24 = v17;
  id v25 = v20;
  id v26 = v19;
  *(void *)&v1[v23] = FMFContactsDataController.init(isSnapshotMode:)();
  *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchController] = 0;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_filteredSearchRecords] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10046E804(void *a1)
{
  id v11 = (void (*)(uint64_t))State.rawValue.getter;
  uint64_t v12 = 0;
  uint64_t v7 = _NSConcreteStackBlock;
  uint64_t v8 = 1107296256;
  uint64_t v9 = sub_10045D478;
  uint64_t v10 = &unk_10063D430;
  uint64_t v3 = _Block_copy(&v7);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  id v11 = sub_10046F154;
  uint64_t v12 = v4;
  uint64_t v7 = _NSConcreteStackBlock;
  uint64_t v8 = 1107296256;
  uint64_t v9 = sub_10045D478;
  uint64_t v10 = &unk_10063D480;
  uint64_t v5 = _Block_copy(&v7);
  id v6 = v1;
  swift_release();
  [a1 animateAlongsideTransition:v3 completion:v5];
  _Block_release(v5);
  _Block_release(v3);
}

uint64_t sub_10046E94C(char a1)
{
  return sub_1004671CC(a1, *(char **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10046E954()
{
  return _swift_deallocObject(v0, 25, 7);
}

void sub_10046E98C()
{
  sub_1004674EC(*(char **)(v0 + 16));
}

uint64_t sub_10046E998()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10046E9D8()
{
  return sub_100465D5C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10046E9E4()
{
  return sub_10046EA94((void (*)(void))&_swift_bridgeObjectRelease);
}

void *sub_10046E9FC()
{
  return sub_1004661BC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10046EA04()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10046EA3C()
{
  return sub_10046EA94((void (*)(void))&_swift_release);
}

void sub_10046EA54()
{
  sub_100464D40(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10046EA5C()
{
  return sub_10046EA94((void (*)(void))&_swift_release);
}

void sub_10046EA74()
{
  sub_100461330(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10046EA7C()
{
  return sub_10046EA94((void (*)(void))&_swift_release);
}

uint64_t sub_10046EA94(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));

  return _swift_deallocObject(v1, 32, 7);
}

void sub_10046EADC()
{
  sub_1004613C4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_10046EAE4()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isResigningFromTableView;
  v0[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isResigningFromTableView] = 1;
  id v2 = [v0 navigationItem];
  id v3 = [v2 searchController];

  if (v3)
  {
    id v4 = [v3 searchBar];

    [v4 resignFirstResponder];
  }
  v0[v1] = 0;
}

uint64_t sub_10046EB8C()
{
  uint64_t v1 = sub_10005D034((uint64_t *)&unk_1006BF070);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for FMFLocationAlertAddressType();
  uint64_t v4 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  id v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)&v0[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSearchedQuery];
  uint64_t v7 = *(void *)&v0[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSearchedQuery + 8];
  swift_bridgeObjectRetain();
  id v9 = [v0 navigationItem];
  id v10 = [v9 searchController];

  if (!v10)
  {
    uint64_t v13 = 0;
    unint64_t v15 = 0xE000000000000000;
    if (v7) {
      goto LABEL_8;
    }
LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t v16 = v29;
    id v17 = &selRef_tableView_viewForFooterInSection_;
LABEL_13:
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for FMFLocationAlertAddressType.custom(_:), v16);
    goto LABEL_18;
  }
  id v11 = [v10 searchBar];

  id v12 = [v11 text];
  if (v12)
  {
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v14;
  }
  else
  {
    uint64_t v13 = 0;
    unint64_t v15 = 0xE000000000000000;
  }
  if (!v7) {
    goto LABEL_5;
  }
LABEL_8:
  if (v8 == v13 && v7 == v15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v29;
    id v17 = &selRef_tableView_viewForFooterInSection_;
  }
  else
  {
    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v29;
    id v17 = &selRef_tableView_viewForFooterInSection_;
    if ((v19 & 1) == 0) {
      goto LABEL_13;
    }
  }
  uint64_t v20 = (uint64_t)&v0[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSeachAddressType];
  swift_beginAccess();
  sub_100006AB0(v20, (uint64_t)v3, (uint64_t *)&unk_1006BF070);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v3, 1, v16) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for FMFLocationAlertAddressType.custom(_:), v16);
    sub_100003F10((uint64_t)v3, (uint64_t *)&unk_1006BF070);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v3, v16);
  }
LABEL_18:
  id v21 = [v0 v17[190] v29];
  id v22 = [v21 searchController];

  if (v22
    && (id v23 = [v22 searchBar],
        v22,
        id v24 = [v23 text],
        v23,
        v24))
  {
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v27 = v26;
  }
  else
  {
    uint64_t v25 = 0;
    uint64_t v27 = 0xE000000000000000;
  }
  sub_10046E108(v25, v27, (uint64_t)v6, 0);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v16);
}

uint64_t sub_10046EF80()
{
  uint64_t v1 = type metadata accessor for FMFLocationAlertAddressType();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((v4 + *(void *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + 24;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

void sub_10046F068(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for FMFLocationAlertAddressType() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  uint64_t v8 = (v7 & 0xFFFFFFFFFFFFFFF8) + v2;
  uint64_t v9 = *(void *)(v2 + 16);
  char v10 = *(unsigned char *)(v2 + v7);
  id v11 = *(void **)(v8 + 8);
  uint64_t v12 = *(void *)(v8 + 16);

  sub_10046155C(a1, a2, v9, v2 + v6, v10, v11, v12);
}

uint64_t sub_10046F11C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10046F154(uint64_t a1)
{
  sub_10045F3A8(a1, *(char **)(v1 + 16));
}

id sub_10046F15C()
{
  id result = *(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView);
  if (result) {
    return [result addHandleForAnnotation:*(void *)(v0 + 24)];
  }
  __break(1u);
  return result;
}

id sub_10046F1EC(double a1)
{
  double v12 = 0.0;
  double v13 = 0.0;
  double v10 = 0.0;
  double v11 = 0.0;
  unsigned int v3 = [v1 getRed:&v13 green:&v12 blue:&v11 alpha:&v10];
  id result = 0;
  if (v3)
  {
    double v5 = a1 / 100.0;
    if (a1 / 100.0 + v13 <= 1.0) {
      double v6 = a1 / 100.0 + v13;
    }
    else {
      double v6 = 1.0;
    }
    if (v5 + v12 <= 1.0) {
      double v7 = v5 + v12;
    }
    else {
      double v7 = 1.0;
    }
    double v8 = v5 + v11;
    if (v8 <= 1.0) {
      double v9 = v8;
    }
    else {
      double v9 = 1.0;
    }
    return [objc_allocWithZone((Class)UIColor) initWithRed:v6 green:v7 blue:v9 alpha:v10];
  }
  return result;
}

uint64_t sub_10046F2E4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_identifier;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100068760(v0 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber);

  return swift_deallocClassInstance();
}

uint64_t sub_10046F394()
{
  return type metadata accessor for FMDevicesSubscription();
}

Swift::Int sub_10046F39C()
{
  return Hasher._finalize()();
}

uint64_t sub_10046F434()
{
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_10046F4BC()
{
  return Hasher._finalize()();
}

uint64_t sub_10046F550(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10046F5F8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10046F6A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v9 = *(void *)(v7 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 40))(a1, a2, a3, ObjectType, v9);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10046F750()
{
  return static UUID.== infix(_:_:)();
}

uint64_t sub_10046F76C()
{
  return sub_10046F7B4(&qword_1006BF1B0, (void (*)(uint64_t))type metadata accessor for FMDevicesSubscription);
}

uint64_t sub_10046F7B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10046F7FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v6 = *(void (**)(char *))(a1 + 32);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_10046F8F0()
{
  uint64_t v3 = sub_100043B20();
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC6FindMy12FMNoItemView_learnMoreButton);
  swift_bridgeObjectRetain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRelease();

  return v3;
}

void *sub_10046F9AC()
{
  id v1 = objc_allocWithZone(v0);
  return sub_10046F9E0();
}

void *sub_10046F9E0()
{
  id v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButton;
  uint64_t v3 = (objc_class *)type metadata accessor for FMEmptyListButton();
  uint64_t v4 = (char *)objc_allocWithZone(v3);
  uint64_t v5 = OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor;
  double v6 = self;
  uint64_t v7 = v1;
  uint64_t v8 = v4;
  *(void *)&v4[v5] = [v6 systemBlueColor];
  v8[OBJC_IVAR____TtC6FindMy17FMEmptyListButton_isEnabled] = 1;

  id v9 = [v6 tertiarySystemFillColor];
  id v10 = sub_10004E188(v9, 1, 1, 0);

  *(void *)&v1[v2] = v10;
  *(void *)&v7[OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButtonHeight] = 0;
  uint64_t v11 = OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButton;
  double v12 = (char *)objc_allocWithZone(v3);
  uint64_t v13 = OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor;
  unint64_t v14 = v12;
  *(void *)&v12[v13] = [v6 systemBlueColor];
  v14[OBJC_IVAR____TtC6FindMy17FMEmptyListButton_isEnabled] = 1;

  id v15 = [v6 tertiarySystemFillColor];
  id v16 = sub_10004E188(v15, 1, 1, 0);

  *(void *)&v7[v11] = v16;
  *(void *)&v7[OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButtonHeight] = 0;
  *(void *)&v7[OBJC_IVAR____TtC6FindMy12FMNoItemView_devicesSubscription] = 0;
  *(void *)&v7[OBJC_IVAR____TtC6FindMy12FMNoItemView_cardChangeSubscription] = 0;
  *(void *)&v7[OBJC_IVAR____TtC6FindMy12FMNoItemView_lastCardPercentage] = 0;
  uint64_t v17 = OBJC_IVAR____TtC6FindMy12FMNoItemView_learnMoreButton;
  type metadata accessor for FMMultilineButton();
  *(void *)&v7[v17] = [(id)swift_getObjCClassFromMetadata() buttonWithType:1];

  uint64_t v18 = swift_retain();
  char v19 = sub_10028D664(v18);
  sub_1004707B8();

  swift_release();
  return v19;
}

void sub_10046FC34()
{
  swift_release();
  swift_unknownObjectRelease();
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy12FMNoItemView_learnMoreButton);
}

id sub_10046FCC4()
{
  sub_100470BA4();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMNoItemView();
  return [super dealloc];
}

id sub_10046FDE0()
{
  uint64_t v1 = v0;
  sub_100051430();
  objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_titleLabel);
  uint64_t v3 = self;
  id v4 = [v3 mainBundle];
  v74._unint64_t object = (void *)0x800000010057EF80;
  v5._uint64_t countAndFlagsBits = 0x5F4D4554495F4F4ELL;
  v5._unint64_t object = (void *)0xED0000454C544954;
  v6.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v6.value._unint64_t object = (void *)0x800000010057EF60;
  v7._uint64_t countAndFlagsBits = 0;
  v7._unint64_t object = (void *)0xE000000000000000;
  v74._uint64_t countAndFlagsBits = 0xD000000000000018;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v74);

  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setText:v8];

  id v9 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_messageLabel);
  id v10 = [v3 mainBundle];
  v75._unint64_t object = (void *)0x800000010057EF80;
  v11._uint64_t countAndFlagsBits = 0x5F4D4554495F4F4ELL;
  v11._unint64_t object = (void *)0xEF4547415353454DLL;
  v12.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v12.value._unint64_t object = (void *)0x800000010057EF60;
  v13._uint64_t countAndFlagsBits = 0;
  v13._unint64_t object = (void *)0xE000000000000000;
  v75._uint64_t countAndFlagsBits = 0xD000000000000018;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v75);

  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 setText:v14];

  uint64_t v15 = OBJC_IVAR____TtC6FindMy12FMNoItemView_learnMoreButton;
  [*(id *)(v1 + OBJC_IVAR____TtC6FindMy12FMNoItemView_learnMoreButton) setTranslatesAutoresizingMaskIntoConstraints:0];
  id v16 = *(void **)(v1 + v15);
  uint64_t v17 = self;
  id v18 = v16;
  id v19 = [v17 systemBlueColor];
  [v18 setTitleColor:v19 forState:0];

  id v20 = [*(id *)(v1 + v15) titleLabel];
  if (v20)
  {
    id v21 = v20;
    id v22 = [self preferredFontForTextStyle:UIFontTextStyleBody];
    [v21 setFont:v22];
  }
  id v23 = [*(id *)(v1 + v15) titleLabel];
  if (v23)
  {
    id v24 = v23;
    [v23 setAdjustsFontForContentSizeCategory:1];
  }
  id v25 = [*(id *)(v1 + v15) titleLabel];
  if (v25)
  {
    uint64_t v26 = v25;
    [v25 setLineBreakMode:0];
  }
  id v27 = [*(id *)(v1 + v15) titleLabel];
  if (v27)
  {
    uint64_t v28 = v27;
    [v27 setTextAlignment:1];
  }
  id v29 = *(id *)(v1 + v15);
  id v30 = [v3 mainBundle];
  v31._uint64_t countAndFlagsBits = 0xD000000000000019;
  v76._unint64_t object = (void *)0x800000010057EF80;
  v31._unint64_t object = (void *)0x800000010059E8F0;
  v32.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v32.value._unint64_t object = (void *)0x800000010057EF60;
  v33._uint64_t countAndFlagsBits = 0;
  v33._unint64_t object = (void *)0xE000000000000000;
  v76._uint64_t countAndFlagsBits = 0xD000000000000018;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v31, v32, (NSBundle)v30, v33, v76);

  NSString v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v29 setTitle:v34 forState:0];

  [*(id *)(v1 + v15) addTarget:v1 action:"handleLearnMoreButton" forControlEvents:64];
  [*(id *)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_scrollableContainerView) addArrangedSubview:*(void *)(v1 + v15)];
  uint64_t v35 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_iconView);
  sub_100006060(0, (unint64_t *)&qword_1006BA4D0);
  id v36 = sub_1003E7408(0x63496D6574496F4ELL, 0xEA00000000006E6FLL, 6778480, 0xE300000000000000);
  [v35 setImage:v36];

  id v37 = objc_retain(*(id *)(*(void *)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButton)
                          + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label));
  uint64_t comment_8 = v3;
  id v38 = [v3 mainBundle];
  v39._uint64_t countAndFlagsBits = 0xD000000000000014;
  v77._unint64_t object = (void *)0x800000010057EF80;
  v39._unint64_t object = (void *)0x8000000100589740;
  v40.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v40.value._unint64_t object = (void *)0x800000010057EF60;
  v41._uint64_t countAndFlagsBits = 0;
  v41._unint64_t object = (void *)0xE000000000000000;
  v77._uint64_t countAndFlagsBits = 0xD000000000000018;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v39, v40, (NSBundle)v38, v41, v77);

  NSString v42 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v37 setText:v42];

  uint64_t v43 = *(void *)(v1 + OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButton);
  uint64_t v44 = OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label;
  id v45 = *(id *)(v43 + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label);
  id result = [v45 font];
  if (result)
  {
    uint64_t v47 = result;
    sub_10005D034((uint64_t *)&unk_1006B4280);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10055B970;
    *(void *)(inited + 32) = UIFontWeightTrait;
    *(UIFontWeight *)(inited + 40) = UIFontWeightRegular;
    uint64_t v49 = UIFontWeightTrait;
    unint64_t v50 = sub_10005010C(inited);
    id v51 = sub_10005021C(v50);

    swift_bridgeObjectRelease();
    [v45 setFont:v51];

    id v52 = *(id *)(v43 + v44);
    id v53 = [comment_8 mainBundle];
    v54._uint64_t countAndFlagsBits = 0xD000000000000019;
    v78._unint64_t object = (void *)0x800000010057EF80;
    v54._unint64_t object = (void *)0x8000000100589760;
    v55.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v55.value._unint64_t object = (void *)0x800000010057EF60;
    v56._uint64_t countAndFlagsBits = 0;
    v56._unint64_t object = (void *)0xE000000000000000;
    v78._uint64_t countAndFlagsBits = 0xD000000000000018;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v54, v55, (NSBundle)v53, v56, v78);

    NSString v57 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v52 setText:v57];

    unint64_t v58 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButtonsStackView);
    [v58 addArrangedSubview:v43];
    uint64_t v59 = *(void *)(v1 + OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButton);
    uint64_t v60 = OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label;
    id v61 = *(id *)(v59 + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label);
    id result = [v61 font];
    if (result)
    {
      Swift::String v62 = result;
      uint64_t v63 = swift_initStackObject();
      *(_OWORD *)(v63 + 16) = xmmword_10055B970;
      *(void *)(v63 + 32) = v49;
      *(UIFontWeight *)(v63 + 40) = UIFontWeightRegular;
      objc_super v64 = v49;
      unint64_t v65 = sub_10005010C(v63);
      id v66 = sub_10005021C(v65);

      swift_bridgeObjectRelease();
      [v61 setFont:v66];

      id v67 = *(id *)(v59 + v60);
      id v68 = [comment_8 mainBundle];
      v79._uint64_t countAndFlagsBits = 0xD000000000000018;
      v69._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
      v79._unint64_t object = (void *)0x800000010057EF80;
      v69._unint64_t object = (void *)0x80000001005897A0;
      v70.value._unint64_t object = (void *)0x800000010057EF60;
      v70.value._uint64_t countAndFlagsBits = 0xD000000000000013;
      v71._uint64_t countAndFlagsBits = 0;
      v71._unint64_t object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v69, v70, (NSBundle)v68, v71, v79);

      NSString v72 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v67 setText:v72];

      [v58 addArrangedSubview:v59];
      return (id)sub_100470D3C(0, 1.0);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_100470694()
{
  sub_10004E910();
  id v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButton), "heightAnchor"));
  id v2 = [v1 constraintEqualToConstant:0.0];

  uint64_t v3 = OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButtonHeight;
  id v4 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButtonHeight);
  *(void *)(v0 + OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButtonHeight) = v2;

  Swift::String v5 = *(void **)(v0 + v3);
  if (v5) {
    [v5 setActive:1];
  }
  id v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButton), "heightAnchor"));
  id v7 = [v6 constraintEqualToConstant:0.0];

  uint64_t v8 = OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButtonHeight;
  id v9 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButtonHeight);
  *(void *)(v0 + OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButtonHeight) = v7;

  id result = *(id *)(v0 + v8);
  if (result)
  {
    return [result setActive:1];
  }
  return result;
}

uint64_t sub_1004707B8()
{
  uint64_t v1 = *(void *)(*(void *)&v0[OBJC_IVAR____TtC6FindMy15FMEmptyListView_mediator] + 24);
  type metadata accessor for FMDevicesSubscription();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber + 8) = 0;
  swift_unknownObjectWeakInit();
  swift_retain();
  uint64_t v3 = v0;
  UUID.init()();
  *(void *)(v2 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber + 8) = &off_10063D598;
  swift_unknownObjectWeakAssign();

  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(v1 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v1 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  swift_release();
  *(void *)&v3[OBJC_IVAR____TtC6FindMy12FMNoItemView_devicesSubscription] = v2;
  swift_release();
  id v4 = [self defaultCenter];
  if (qword_1006AE480 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1006D2978;
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10[4] = sub_100472134;
  v10[5] = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_10046F7FC;
  v10[3] = &unk_10063D750;
  id v7 = _Block_copy(v10);
  swift_release();
  id v8 = [v4 addObserverForName:v5 object:0 queue:0 usingBlock:v7];
  _Block_release(v7);

  *(void *)&v3[OBJC_IVAR____TtC6FindMy12FMNoItemView_cardChangeSubscription] = v8;
  return swift_unknownObjectRelease();
}

void sub_100470A38()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (!v0)
  {
    long long v9 = 0u;
    long long v10 = 0u;
LABEL_13:
    sub_100003F10((uint64_t)&v9, &qword_1006AFE40);
    return;
  }
  uint64_t v1 = v0;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v1 + 16) && (unint64_t v2 = sub_10002953C((uint64_t)v8), (v3 & 1) != 0))
  {
    sub_1000607C8(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v9);
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1000294E8((uint64_t)v8);
  if (!*((void *)&v10 + 1)) {
    goto LABEL_13;
  }
  if (swift_dynamicCast())
  {
    double v4 = *(double *)v8;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v6 = (void *)Strong;
      sub_100470D3C(1, v4);
    }
    swift_beginAccess();
    id v7 = (char *)swift_unknownObjectWeakLoadStrong();
    if (v7)
    {
      *(double *)&v7[OBJC_IVAR____TtC6FindMy12FMNoItemView_lastCardPercentage] = v4;
    }
  }
}

void sub_100470BA4()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy12FMNoItemView_devicesSubscription;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy12FMNoItemView_devicesSubscription);
  if (v2)
  {
    uint64_t v3 = v0;
    double v4 = (unint64_t *)(*(void *)(*(void *)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_mediator) + 24)
                            + 16);
    swift_beginAccess();
    swift_retain();
    swift_retain();
    int64_t v5 = sub_10014040C(v4, v2);
    uint64_t v6 = v5;
    if (*v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v7 >= v6)
      {
LABEL_4:
        sub_100258678(v6, v7);
        swift_endAccess();
        swift_release();
        *(void *)(v3 + v1) = 0;
        swift_release();
        double v4 = (unint64_t *)[self defaultCenter];
        if (qword_1006AE480 == -1)
        {
LABEL_5:
          [v4 removeObserver:v3 name:qword_1006D2978 object:0];
          swift_release();

          return;
        }
LABEL_9:
        swift_once();
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v7 >= v5) {
        goto LABEL_4;
      }
    }
    __break(1u);
    goto LABEL_9;
  }
}

uint64_t sub_100470D3C(char a1, double a2)
{
  uint64_t v3 = v2;
  if (a2 >= 0.64)
  {
    BOOL v8 = 0;
  }
  else
  {
    swift_retain();
    uint64_t v6 = sub_1000D8B74();
    swift_release();
    uint64_t v7 = *(void *)(v6 + 16);
    swift_bridgeObjectRelease();
    BOOL v8 = v7 != 0;
  }
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v3;
  *(unsigned char *)(v9 + 24) = v8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v3;
  *(unsigned char *)(v10 + 24) = a2 < 0.64;
  *(double *)&v3[OBJC_IVAR____TtC6FindMy12FMNoItemView_lastCardPercentage] = a2;
  if (a1)
  {
    Swift::String v11 = self;
    Swift::String_optional v12 = (void *)swift_allocObject();
    v12[2] = sub_10047205C;
    v12[3] = v9;
    v12[4] = sub_10047208C;
    v12[5] = v10;
    v17[4] = sub_1001A73A4;
    v17[5] = v12;
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 1107296256;
    v17[2] = sub_10003C410;
    v17[3] = &unk_10063D700;
    Swift::String v13 = _Block_copy(v17);
    NSString v14 = v3;
    swift_retain();
    swift_retain();
    swift_release();
    [v11 animateWithDuration:0x20000 delay:v13 usingSpringWithDamping:0 initialSpringVelocity:0.4 options:0.0 animations:0.8 completion:0.4];
    _Block_release(v13);
    swift_release();
    return swift_release();
  }
  else
  {
    id v16 = v3;
    sub_1001A65D4((uint64_t)v16, v8, &OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButton, &OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButtonHeight);
    sub_1001A65D4((uint64_t)v16, a2 < 0.64, &OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButton, &OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButtonHeight);
    swift_release();
    return swift_release();
  }
}

void sub_100470FD4()
{
  id v1 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"handleAction"];
  [*(id *)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButton) addGestureRecognizer:v1];

  id v2 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"handleSecondaryAction"];
  [*(id *)(v0 + OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButton) addGestureRecognizer:v2];
  id v3 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"handleTertiaryAction"];
  [*(id *)(v0 + OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButton) addGestureRecognizer:v3];
}

uint64_t sub_1004710E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMSelectedSection();
  uint64_t v3 = __chkstk_darwin(v2);
  int64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v15[-v6];
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1000606BC(v8, (uint64_t)qword_1006D1E98);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    Swift::String v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMNoItemView: action tapped", v11, 2u);
    swift_slowDealloc();
  }

  uint64_t v12 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_mediator) + 56);
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = v12 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100028164(v13, (uint64_t)v5);
  swift_beginAccess();
  swift_retain();
  sub_100009A88((uint64_t)v7, v13);
  swift_endAccess();
  sub_100053CA0((unint64_t)v5);
  sub_100028108((uint64_t)v7);
  sub_100028108((uint64_t)v5);
  return swift_release();
}

uint64_t sub_100471334()
{
  return sub_10047139C("FMNoItemView: secondary action tapped", 0);
}

uint64_t sub_10047138C()
{
  return sub_10047139C("FMNoItemView: tertiary action tapped", 1);
}

uint64_t sub_10047139C(const char *a1, char a2)
{
  uint64_t v5 = v2;
  uint64_t v6 = type metadata accessor for FMSelectedSection();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  Swift::String v11 = &v19[-v10];
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_1000606BC(v12, (uint64_t)qword_1006D1E98);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, a1, v15, 2u);
    swift_slowDealloc();
  }

  uint64_t v16 = *(void *)(*(void *)(v5 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_mediator) + 56);
  *Swift::String v11 = a2;
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = v16 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100028164(v17, (uint64_t)v9);
  swift_beginAccess();
  swift_retain();
  sub_100009A88((uint64_t)v11, v17);
  swift_endAccess();
  sub_100053CA0((unint64_t)v9);
  sub_100028108((uint64_t)v11);
  sub_100028108((uint64_t)v9);
  return swift_release();
}

uint64_t sub_1004715F8()
{
  uint64_t v0 = sub_10005D034((uint64_t *)&unk_1006AF820);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_1000606BC(v7, (uint64_t)qword_1006D1E98);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMNoItemView: Learn more button tapped", v10, 2u);
    swift_slowDealloc();
  }

  sub_100471938((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
    return sub_100003F10((uint64_t)v2, (uint64_t *)&unk_1006AF820);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  id v12 = [self sharedApplication];
  URL._bridgeToObjectiveC()(v13);
  uint64_t v15 = v14;
  sub_10014C1D0((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_1000457FC((unint64_t *)&qword_1006AEA10, type metadata accessor for OpenExternalURLOptionsKey);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v12 openURL:v15 options:isa completionHandler:0];

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100471938@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10005D034((uint64_t *)&unk_1006AF820);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000606BC(v5, (uint64_t)qword_1006D1E98);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v9 = FMIPNoItemsKBArticleLink.getter();
    uint64_t v15 = sub_1000606F4(v9, v10, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMNoItemView: getLearnMoreActionURL from %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  FMIPNoItemsKBArticleLink.getter();
  URL.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v4, 1, v11) == 1)
  {
    sub_100003F10((uint64_t)v4, (uint64_t *)&unk_1006AF820);
    uint64_t v13 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a1, v4, v11);
    uint64_t v13 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a1, v13, 1, v11);
}

uint64_t sub_100471BD0(uint64_t a1, uint64_t a2)
{
  return sub_100471BD8(a2);
}

uint64_t sub_100471BD8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  os_log_type_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_1000606BC(v12, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = v9;
    uint64_t v16 = v2;
    uint64_t v17 = v5;
    uint64_t v18 = v8;
    id v19 = v15;
    *(_DWORD *)uint64_t v15 = 134217984;
    aBlock[0] = *(void *)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMNoItemView: devicesProvider didUpdate unknownItems %ld", v19, 0xCu);
    uint64_t v8 = v18;
    uint64_t v5 = v17;
    uint64_t v2 = v16;
    uint64_t v9 = v26;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  id v20 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v2;
  aBlock[4] = sub_100471FF0;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10063D660;
  id v22 = _Block_copy(aBlock);
  id v23 = v2;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000457FC((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_10005ECA8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_100471FB8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100471FF0()
{
  return sub_100470D3C(1, *(double *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6FindMy12FMNoItemView_lastCardPercentage));
}

uint64_t sub_100472024()
{
  return _swift_deallocObject(v0, 25, 7);
}

id sub_10047205C()
{
  return sub_1001A65D4(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), &OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButton, &OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButtonHeight);
}

id sub_10047208C()
{
  return sub_1001A65D4(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), &OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButton, &OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButtonHeight);
}

uint64_t sub_1004720BC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004720FC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100472134()
{
}

void sub_10047213C()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButton;
  uint64_t v3 = (objc_class *)type metadata accessor for FMEmptyListButton();
  uint64_t v4 = (char *)objc_allocWithZone(v3);
  uint64_t v5 = OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor;
  uint64_t v6 = self;
  os_log_type_t v7 = v4;
  *(void *)&v4[v5] = [v6 systemBlueColor];
  v7[OBJC_IVAR____TtC6FindMy17FMEmptyListButton_isEnabled] = 1;

  id v8 = [v6 tertiarySystemFillColor];
  id v9 = sub_10004E188(v8, 1, 1, 0);

  *(void *)&v1[v2] = v9;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButtonHeight] = 0;
  uint64_t v10 = OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButton;
  uint64_t v11 = (char *)objc_allocWithZone(v3);
  uint64_t v12 = OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor;
  uint64_t v13 = v11;
  *(void *)&v11[v12] = [v6 systemBlueColor];
  v13[OBJC_IVAR____TtC6FindMy17FMEmptyListButton_isEnabled] = 1;

  id v14 = [v6 tertiarySystemFillColor];
  id v15 = sub_10004E188(v14, 1, 1, 0);

  *(void *)&v1[v10] = v15;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButtonHeight] = 0;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy12FMNoItemView_devicesSubscription] = 0;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy12FMNoItemView_cardChangeSubscription] = 0;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy12FMNoItemView_lastCardPercentage] = 0;
  uint64_t v16 = OBJC_IVAR____TtC6FindMy12FMNoItemView_learnMoreButton;
  type metadata accessor for FMMultilineButton();
  *(void *)&v1[v16] = [(id)swift_getObjCClassFromMetadata() buttonWithType:1];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::String *FMReplacedIdentifier.unsafeMutableAddressor()
{
  return &FMReplacedIdentifier;
}

Swift::String *FMReplacedGroupIdentifier.unsafeMutableAddressor()
{
  return &FMReplacedGroupIdentifier;
}

Swift::String *FMLatitudeIdentifier.unsafeMutableAddressor()
{
  return &FMLatitudeIdentifier;
}

Swift::String *FMLongitudeIdentifier.unsafeMutableAddressor()
{
  return &FMLongitudeIdentifier;
}

Swift::String *FMAccuracyIdentifier.unsafeMutableAddressor()
{
  return &FMAccuracyIdentifier;
}

Swift::String *FMLocationIdentifier.unsafeMutableAddressor()
{
  return &FMLocationIdentifier;
}

uint64_t PushPayload.apsData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1004723C0(v1, a1);
}

uint64_t sub_1004723C0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t PushPayload.payload.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PushPayload.showInAppAlert.getter()
{
  return *(unsigned __int8 *)(v0 + 128);
}

uint64_t PushPayload.url.getter()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PushPayload.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 152);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100472490(unsigned __int8 *a1, char *a2)
{
  return sub_1001DA4C0(*a1, *a2);
}

Swift::Int sub_10047249C()
{
  return Hasher._finalize()();
}

uint64_t sub_100472598()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10047267C()
{
  return Hasher._finalize()();
}

unint64_t sub_100472774@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_10061FE20;
  unint64_t result = sub_100473E48(*a1, v3);
  *a2 = result;
  return result;
}

void sub_1004727AC(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 7565409;
  switch(*v1)
  {
    case 1:
      uint64_t v3 = 0x6F4C796150666D66;
      unint64_t v2 = 0xEA00000000006461;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "showInAppAlert");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 3:
      *(void *)a1 = 7107189;
      *(void *)(a1 + 8) = 0xE300000000000000;
      break;
    case 4:
      *(void *)a1 = 0x696669746E656469;
      *(void *)(a1 + 8) = 0xEA00000000007265;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_10047286C()
{
  uint64_t result = 7565409;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6F4C796150666D66;
      break;
    case 2:
      uint64_t result = 0x70416E49776F6873;
      break;
    case 3:
      uint64_t result = 7107189;
      break;
    case 4:
      uint64_t result = 0x696669746E656469;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10047291C@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_10061FE20;
  unint64_t result = sub_100473E48(a1, v3);
  *a2 = result;
  return result;
}

void sub_10047294C(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_100472958(uint64_t a1)
{
  unint64_t v2 = sub_10047526C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100472994(uint64_t a1)
{
  unint64_t v2 = sub_10047526C();

  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 PushPayload.init(from:)@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100473310(a1, (uint64_t)v9);
  if (!v2)
  {
    long long v5 = v9[9];
    *(_OWORD *)(a2 + 128) = v9[8];
    *(_OWORD *)(a2 + 144) = v5;
    *(void *)(a2 + 160) = v10;
    long long v6 = v9[5];
    *(_OWORD *)(a2 + 64) = v9[4];
    *(_OWORD *)(a2 + 80) = v6;
    long long v7 = v9[7];
    *(_OWORD *)(a2 + 96) = v9[6];
    *(_OWORD *)(a2 + 112) = v7;
    long long v8 = v9[1];
    *(_OWORD *)a2 = v9[0];
    *(_OWORD *)(a2 + 16) = v8;
    __n128 result = (__n128)v9[3];
    *(_OWORD *)(a2 + 32) = v9[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t PushAPSData.alert.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100473928(v1, a1);
}

uint64_t PushAPSData.badge.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t PushAPSData.category.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PushAPSData.sound.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100472AC0(unsigned __int8 *a1, char *a2)
{
  return sub_1001DA694(*a1, *a2);
}

Swift::Int sub_100472ACC()
{
  return Hasher._finalize()();
}

uint64_t sub_100472B94()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100472C44()
{
  return Hasher._finalize()();
}

unint64_t sub_100472D08@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100473990(*a1);
  *a2 = result;
  return result;
}

void sub_100472D38(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7472656C61;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x6567646162;
      goto LABEL_3;
    case 2:
      *a1 = 0x79726F6765746163;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x646E756F73;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE500000000000000;
      break;
  }
}

uint64_t sub_100472DC0()
{
  uint64_t result = 0x7472656C61;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6567646162;
      break;
    case 2:
      uint64_t result = 0x79726F6765746163;
      break;
    case 3:
      uint64_t result = 0x646E756F73;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100472E3C@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100473990(a1);
  *a2 = result;
  return result;
}

void sub_100472E64(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_100472E70(uint64_t a1)
{
  unint64_t v2 = sub_1004750E4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100472EAC(uint64_t a1)
{
  unint64_t v2 = sub_1004750E4();

  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 PushAPSData.init(from:)@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1004739DC(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_OWORD *)(a2 + 96) = v7[6];
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t PushAlert.locArgs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PushAlert.fallbackLocArgs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PushAlert.summaryArg.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100472F7C(unsigned __int8 *a1, char *a2)
{
  return sub_1001D9058(*a1, *a2);
}

Swift::Int sub_100472F88()
{
  return sub_1002565D4();
}

uint64_t sub_100472F90()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100473074()
{
  return sub_100411374();
}

unint64_t sub_10047307C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_10061FF38;
  unint64_t result = sub_100473E48(*a1, v3);
  *a2 = result;
  return result;
}

void sub_1004730B4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 2036625250;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x79656B2D636F6CLL;
      goto LABEL_3;
    case 2:
      *a1 = 0x736772612D636F6CLL;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0xD000000000000011;
      a1[1] = 0x800000010057E3D0;
      break;
    case 4:
      *a1 = 0x2D7972616D6D7573;
      a1[1] = 0xEB00000000677261;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_100473174()
{
  unint64_t result = 2036625250;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x79656B2D636F6CLL;
      break;
    case 2:
      unint64_t result = 0x736772612D636F6CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x2D7972616D6D7573;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100473224@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_10061FF38;
  unint64_t result = sub_100473E48(a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_100473254(uint64_t a1)
{
  unint64_t v2 = sub_100475024();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100473290(uint64_t a1)
{
  unint64_t v2 = sub_100475024();

  return CodingKey.debugDescription.getter(a1, v2);
}

double PushAlert.init(from:)@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100473E90(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t *sub_100473310@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10005D034(&qword_1006BF258);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  id v66 = a1;
  sub_10002CEB8(a1, v9);
  sub_10047526C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return (uint64_t *)sub_10002CEFC((uint64_t)v66);
  }
  uint64_t v65 = v6;
  uint64_t v59 = a2;
  LOBYTE(v67) = 0;
  sub_1004752C0();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v10 = v78;
  int v11 = v87;
  uint64_t v12 = v89;
  uint64_t v54 = v86;
  uint64_t v55 = v88;
  uint64_t v13 = v91;
  uint64_t v53 = v90;
  unsigned __int8 v99 = v87;
  LOBYTE(v78) = 1;
  uint64_t v57 = v80;
  uint64_t v58 = v10;
  uint64_t v14 = v79;
  uint64_t v63 = v85;
  uint64_t v64 = v81;
  uint64_t v60 = v82;
  uint64_t v61 = v84;
  uint64_t v62 = v83;
  sub_10047518C(v10, v79, v80, v81, v82, v83, v84, v85);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v56 = v16;
  int v47 = v11;
  uint64_t v48 = v15;
  uint64_t v51 = v12;
  uint64_t v52 = v14;
  LOBYTE(v78) = 2;
  swift_bridgeObjectRetain();
  uint64_t v50 = 0;
  int v17 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  LOBYTE(v78) = 3;
  uint64_t v18 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  char v100 = 4;
  uint64_t v20 = v19;
  swift_bridgeObjectRetain();
  uint64_t v21 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v49 = v20;
  id v22 = *(void (**)(char *, uint64_t))(v65 + 8);
  uint64_t v23 = v21;
  uint64_t v42 = v24;
  uint64_t v43 = v21;
  uint64_t v25 = v8;
  uint64_t v26 = v24;
  v22(v25, v5);
  uint64_t v27 = v57;
  *(void *)&long long v67 = v58;
  *((void *)&v67 + 1) = v52;
  uint64_t v45 = v18;
  *(void *)&long long v68 = v57;
  *((void *)&v68 + 1) = v64;
  *(void *)&long long v69 = v60;
  uint64_t v28 = v20;
  uint64_t v29 = v60;
  *((void *)&v69 + 1) = v62;
  *(void *)&long long v70 = v61;
  *((void *)&v70 + 1) = v63;
  *(void *)&long long v71 = v54;
  BYTE8(v71) = v47;
  *(void *)&long long v72 = v55;
  *((void *)&v72 + 1) = v51;
  int v44 = v17;
  *(void *)&long long v73 = v53;
  *((void *)&v73 + 1) = v13;
  uint64_t v46 = v13;
  *(void *)&long long v74 = v48;
  *((void *)&v74 + 1) = v56;
  LOBYTE(v75) = v17;
  *((void *)&v75 + 1) = v18;
  *(void *)&long long v76 = v28;
  *((void *)&v76 + 1) = v23;
  uint64_t v77 = v26;
  sub_100475314((uint64_t *)&v67);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = v58;
  uint64_t v31 = v52;
  uint64_t v33 = v61;
  uint64_t v32 = v62;
  sub_1004751FC(v58, v52, v27, v64, v29, v62, v61, v63);
  swift_bridgeObjectRelease();
  uint64_t v34 = v51;
  swift_bridgeObjectRelease();
  sub_10002CEFC((uint64_t)v66);
  uint64_t v78 = v30;
  uint64_t v79 = v31;
  uint64_t v80 = v27;
  uint64_t v81 = v64;
  uint64_t v82 = v29;
  uint64_t v83 = v32;
  uint64_t v84 = v33;
  uint64_t v85 = v63;
  uint64_t v86 = v54;
  unsigned __int8 v87 = v99;
  uint64_t v88 = v55;
  uint64_t v89 = v34;
  uint64_t v90 = v53;
  uint64_t v91 = v46;
  uint64_t v92 = v48;
  uint64_t v93 = v56;
  char v94 = v44;
  uint64_t v95 = v45;
  uint64_t v96 = v49;
  uint64_t v97 = v43;
  uint64_t v98 = v42;
  double result = sub_10047539C(&v78);
  long long v36 = v76;
  uint64_t v37 = v59;
  *(_OWORD *)(v59 + 128) = v75;
  *(_OWORD *)(v37 + 144) = v36;
  *(void *)(v37 + 160) = v77;
  long long v38 = v72;
  *(_OWORD *)(v37 + 64) = v71;
  *(_OWORD *)(v37 + 80) = v38;
  long long v39 = v74;
  *(_OWORD *)(v37 + 96) = v73;
  *(_OWORD *)(v37 + 112) = v39;
  long long v40 = v68;
  *(_OWORD *)uint64_t v37 = v67;
  *(_OWORD *)(v37 + 16) = v40;
  long long v41 = v70;
  *(_OWORD *)(v37 + 32) = v69;
  *(_OWORD *)(v37 + 48) = v41;
  return result;
}

uint64_t sub_100473928(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034(&qword_1006BF220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100473990(Swift::String string)
{
  unint64_t object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._unint64_t object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10061FEB8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

uint64_t sub_1004739DC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_10005D034(&qword_1006BF240);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002CEB8(a1, a1[3]);
  sub_1004750E4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_10002CEFC((uint64_t)a1);
  }
  char v65 = 0;
  sub_100475138();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v50 = a2;
  uint64_t v9 = v56;
  uint64_t v10 = v59;
  uint64_t v12 = v60;
  uint64_t v11 = v61;
  LOBYTE(v56) = 1;
  uint64_t v51 = v9;
  uint64_t v52 = v57;
  uint64_t v53 = v58;
  uint64_t v54 = v63;
  uint64_t v55 = v62;
  sub_10047518C(v9, v57, v58, v59, v60, v61, v62, v63);
  uint64_t v13 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  int v64 = v14;
  uint64_t v45 = v13;
  uint64_t v46 = v11;
  uint64_t v47 = v12;
  uint64_t v48 = v10;
  uint64_t v16 = v52;
  uint64_t v15 = v53;
  uint64_t v17 = v51;
  LOBYTE(v56) = 2;
  uint64_t v44 = KeyedDecodingContainer.decode(_:forKey:)();
  LOBYTE(v56) = 3;
  uint64_t v49 = v18;
  swift_bridgeObjectRetain();
  uint64_t v19 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v43 = v19;
  uint64_t v42 = v21;
  v20(v8, v5);
  uint64_t v22 = v17;
  uint64_t v23 = v17;
  uint64_t v24 = v16;
  uint64_t v25 = v16;
  uint64_t v26 = v15;
  uint64_t v28 = v47;
  uint64_t v27 = v48;
  uint64_t v29 = v46;
  uint64_t v30 = v54;
  sub_10047518C(v23, v25, v26, v48, v47, v46, v55, v54);
  swift_bridgeObjectRetain();
  uint64_t v31 = v24;
  uint64_t v32 = v53;
  uint64_t v33 = v55;
  sub_1004751FC(v22, v31, v53, v27, v28, v29, v55, v30);
  sub_10002CEFC((uint64_t)a1);
  uint64_t v34 = v52;
  uint64_t v35 = v33;
  uint64_t v36 = v54;
  sub_1004751FC(v22, v52, v32, v27, v28, v29, v35, v54);
  uint64_t v37 = v42;
  swift_bridgeObjectRelease();
  uint64_t v38 = v49;
  uint64_t result = swift_bridgeObjectRelease();
  long long v40 = v50;
  uint64_t *v50 = v22;
  v40[1] = v34;
  uint64_t v40[2] = v53;
  v40[3] = v27;
  v40[4] = v28;
  v40[5] = v29;
  v40[6] = v55;
  v40[7] = v36;
  v40[8] = v45;
  *((unsigned char *)v40 + 72) = v64 & 1;
  v40[10] = v44;
  v40[11] = v38;
  v40[12] = v43;
  v40[13] = v37;
  return result;
}

unint64_t sub_100473E48(Swift::String string, Swift::OpaquePointer cases)
{
  unint64_t object = string._object;
  v3._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v3._unint64_t object = object;
  unint64_t v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease();
  if (v5 >= 5) {
    return 5;
  }
  else {
    return v5;
  }
}

uint64_t sub_100473E90@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_10005D034(&qword_1006BF228);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002CEB8(a1, a1[3]);
  sub_100475024();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_10002CEFC((uint64_t)a1);
  }
  LOBYTE(v35) = 0;
  uint64_t v9 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v11 = v10;
  LOBYTE(v35) = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v33 = v13;
  uint64_t v28 = v12;
  uint64_t v29 = v9;
  uint64_t v32 = v11;
  sub_10005D034(&qword_1006AFD50);
  char v34 = 2;
  unint64_t v14 = sub_100475078();
  swift_bridgeObjectRetain();
  unint64_t v30 = v14;
  uint64_t v31 = 0;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  unint64_t v15 = v35;
  char v34 = 3;
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v16 = v15;
  unint64_t v17 = v35;
  LOBYTE(v35) = 4;
  unint64_t v30 = v17;
  swift_bridgeObjectRetain();
  uint64_t v18 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v19 = v32;
  uint64_t v21 = v20;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v31 = v18;
  v22(v8, v5);
  swift_bridgeObjectRetain();
  uint64_t v23 = v19;
  uint64_t v24 = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10002CEFC((uint64_t)a1);
  swift_bridgeObjectRelease();
  unint64_t v25 = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v29;
  a2[1] = v23;
  a2[2] = v28;
  a2[3] = v24;
  a2[4] = v16;
  a2[5] = v25;
  a2[6] = v31;
  a2[7] = v21;
  return result;
}

uint64_t destroy for PushPayload(uint64_t a1)
{
  if (*(void *)(a1 + 56))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PushPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v7;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    long long v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  uint64_t v11 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v11;
  uint64_t v12 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v12;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v13 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v13;
  uint64_t v14 = *(void *)(a2 + 152);
  uint64_t v15 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = v14;
  *(void *)(a1 + 160) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PushPayload(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 7);
  if (*(void *)(a1 + 56))
  {
    if (v4)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      *(void *)(a1 + 56) = *((void *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1004746A8(a1);
      long long v5 = a2[3];
      long long v7 = *a2;
      long long v6 = a2[1];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v5;
      *(_OWORD *)a1 = v7;
      *(_OWORD *)(a1 + 16) = v6;
    }
  }
  else if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    *(void *)(a1 + 56) = *((void *)a2 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *a2;
    long long v9 = a2[1];
    long long v10 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v10;
    *(_OWORD *)a1 = v8;
    *(_OWORD *)(a1 + 16) = v9;
  }
  uint64_t v11 = *((void *)a2 + 8);
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 80) = *((void *)a2 + 10);
  *(void *)(a1 + 88) = *((void *)a2 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(void *)(a1 + 120) = *((void *)a2 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
  *(void *)(a1 + 136) = *((void *)a2 + 17);
  *(void *)(a1 + 144) = *((void *)a2 + 18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *((void *)a2 + 19);
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1004746A8(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for PushPayload(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for PushPayload(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 56)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(a2 + 56);
  if (!v4)
  {
    sub_1004746A8(a1);
LABEL_5:
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    long long v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    goto LABEL_6;
  }
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v12 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PushPayload(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 168)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 88);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PushPayload(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 88) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 168) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PushPayload()
{
  return &type metadata for PushPayload;
}

uint64_t destroy for PushAPSData(uint64_t a1)
{
  if (*(void *)(a1 + 56))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PushAPSData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v7;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    long long v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  uint64_t v11 = *(void *)(a2 + 96);
  uint64_t v12 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = v11;
  *(void *)(a1 + 104) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PushAPSData(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 7);
  if (*(void *)(a1 + 56))
  {
    if (v4)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      *(void *)(a1 + 56) = *((void *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1004746A8(a1);
      long long v5 = a2[3];
      long long v7 = *a2;
      long long v6 = a2[1];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v5;
      *(_OWORD *)a1 = v7;
      *(_OWORD *)(a1 + 16) = v6;
    }
  }
  else if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    *(void *)(a1 + 56) = *((void *)a2 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *a2;
    long long v9 = a2[1];
    long long v10 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v10;
    *(_OWORD *)a1 = v8;
    *(_OWORD *)(a1 + 16) = v9;
  }
  uint64_t v11 = *((void *)a2 + 8);
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 80) = *((void *)a2 + 10);
  *(void *)(a1 + 88) = *((void *)a2 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PushAPSData(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 56)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(a2 + 56);
  if (!v4)
  {
    sub_1004746A8(a1);
LABEL_5:
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    long long v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    goto LABEL_6;
  }
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PushAPSData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 88);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PushAPSData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 88) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PushAPSData()
{
  return &type metadata for PushAPSData;
}

uint64_t destroy for PushAlert()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for PushAlert(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PushAlert(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PushAlert(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PushAlert(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PushAlert(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PushAlert()
{
  return &type metadata for PushAlert;
}

unint64_t sub_100475024()
{
  unint64_t result = qword_1006BF230;
  if (!qword_1006BF230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BF230);
  }
  return result;
}

unint64_t sub_100475078()
{
  unint64_t result = qword_1006BF238;
  if (!qword_1006BF238)
  {
    sub_100046C48(&qword_1006AFD50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BF238);
  }
  return result;
}

unint64_t sub_1004750E4()
{
  unint64_t result = qword_1006BF248;
  if (!qword_1006BF248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BF248);
  }
  return result;
}

unint64_t sub_100475138()
{
  unint64_t result = qword_1006BF250;
  if (!qword_1006BF250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BF250);
  }
  return result;
}

uint64_t sub_10047518C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a8)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1004751FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a8)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_10047526C()
{
  unint64_t result = qword_1006BF260;
  if (!qword_1006BF260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BF260);
  }
  return result;
}

unint64_t sub_1004752C0()
{
  unint64_t result = qword_1006BF268;
  if (!qword_1006BF268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BF268);
  }
  return result;
}

uint64_t *sub_100475314(uint64_t *a1)
{
  return a1;
}

uint64_t *sub_10047539C(uint64_t *a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for PushPayload.CodingKeys()
{
  return &type metadata for PushPayload.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for PushAPSData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100475508);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PushAPSData.CodingKeys()
{
  return &type metadata for PushAPSData.CodingKeys;
}

unsigned char *_s6FindMy11PushPayloadV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10047560CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PushAlert.CodingKeys()
{
  return &type metadata for PushAlert.CodingKeys;
}

unint64_t sub_100475648()
{
  unint64_t result = qword_1006BF270;
  if (!qword_1006BF270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BF270);
  }
  return result;
}

unint64_t sub_1004756A0()
{
  unint64_t result = qword_1006BF278;
  if (!qword_1006BF278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BF278);
  }
  return result;
}

unint64_t sub_1004756F8()
{
  unint64_t result = qword_1006BF280;
  if (!qword_1006BF280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BF280);
  }
  return result;
}

unint64_t sub_100475750()
{
  unint64_t result = qword_1006BF288;
  if (!qword_1006BF288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BF288);
  }
  return result;
}

unint64_t sub_1004757A8()
{
  unint64_t result = qword_1006BF290;
  if (!qword_1006BF290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BF290);
  }
  return result;
}

unint64_t sub_100475800()
{
  unint64_t result = qword_1006BF298;
  if (!qword_1006BF298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BF298);
  }
  return result;
}

unint64_t sub_100475858()
{
  unint64_t result = qword_1006BF2A0;
  if (!qword_1006BF2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BF2A0);
  }
  return result;
}

unint64_t sub_1004758B0()
{
  unint64_t result = qword_1006BF2A8;
  if (!qword_1006BF2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BF2A8);
  }
  return result;
}

unint64_t sub_100475908()
{
  unint64_t result = qword_1006BF2B0;
  if (!qword_1006BF2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BF2B0);
  }
  return result;
}

uint64_t sub_100475960(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CharacterSet();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = a1;
  v16[1] = a2;
  static CharacterSet.whitespaces.getter();
  sub_100059EB8();
  uint64_t v8 = StringProtocol.trimmingCharacters(in:)();
  unint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
  }
  if (v11)
  {
    id v12 = sub_100475AC0(v8, v10, 0, 0, 0, 0, 0);
    unsigned int v14 = v13;
    swift_bridgeObjectRelease();

    return (v14 >> 8) & 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

id sub_100475AC0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  sub_100006060(0, (unint64_t *)&qword_1006B4570);
  sub_10005D034((uint64_t *)&unk_1006AF790);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_10055B970;
  *(void *)(v11 + 56) = &type metadata for String;
  *(void *)(v11 + 64) = sub_10007F2C8();
  *(void *)(v11 + 32) = 0xD000000000000029;
  *(void *)(v11 + 40) = 0x8000000100586570;
  id v12 = NSPredicate.init(format:_:)();
  NSString v13 = String._bridgeToObjectiveC()();
  unsigned int v14 = [v12 evaluateWithObject:v13];

  int v57 = v14;
  if (v14)
  {
    uint64_t v15 = self;
    NSString v16 = String._bridgeToObjectiveC()();
    id v17 = [v15 predicateForContactsMatchingEmailAddress:v16];
  }
  else
  {
    char v18 = sub_100477034(a1, a2, 0);
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
      id v21 = 0;
      int v57 = 1;
      int v58 = 1;
      if (a7) {
        goto LABEL_12;
      }
      goto LABEL_8;
    }
    id v19 = objc_allocWithZone((Class)CNPhoneNumber);
    swift_bridgeObjectRetain();
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v16 = [v19 initWithStringValue:v20];

    id v17 = [self predicateForContactsMatchingPhoneNumber:v16];
  }
  id v21 = v17;

  int v58 = 0;
  if (a7) {
    goto LABEL_12;
  }
LABEL_8:
  sub_1004762A4(v61);
  sub_100067E48((uint64_t)v61, (uint64_t)&v65, &qword_1006B5540);
  id v22 = v65;
  if (v65)
  {
    uint64_t v23 = sub_1004774B0(v65);
    sub_100476DA0((uint64_t)v23, a1, a2, (uint64_t)v62);
    swift_bridgeObjectRelease();
    sub_10047852C(v62);
    sub_100067E48((uint64_t)v62, (uint64_t)v63, (uint64_t *)&unk_1006BF390);
    uint64_t v24 = v64;
    swift_bridgeObjectRelease();
    if (v24)
    {

      swift_bridgeObjectRelease();
      return v22;
    }

    swift_bridgeObjectRelease();
  }
LABEL_12:
  id v25 = [self authorizationStatusForEntityType:0];
  if ((a7 & 1) != 0 || v25 != (id)3) {
    goto LABEL_28;
  }
  id v26 = [objc_allocWithZone((Class)CNContactStore) init];
  if (!v21) {
    goto LABEL_27;
  }
  uint64_t v27 = qword_1006AE3D0;
  id v28 = v21;
  if (v27 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  sub_10005D034(&qword_1006AE810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v60 = 0;
  id v30 = [v26 unifiedContactsMatchingPredicate:v28 keysToFetch:isa error:&v60];

  id v31 = v60;
  if (v30)
  {
    sub_100006060(0, (unint64_t *)&qword_1006B45B0);
    unint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    id v33 = v31;

    if (v32 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v36) {
        goto LABEL_20;
      }
    }
    else if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_20:
      if ((v32 & 0xC000000000000001) != 0)
      {
        id v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          __break(1u);
        }
        id v34 = *(id *)(v32 + 32);
      }
      id v22 = v34;
      swift_bridgeObjectRelease();

      return v22;
    }
    swift_bridgeObjectRelease();

LABEL_27:
    goto LABEL_28;
  }
  id v35 = v60;
  _convertNSErrorToError(_:)();

  swift_willThrow();
  swift_errorRelease();
LABEL_28:
  id v22 = [objc_allocWithZone((Class)CNMutableContact) init];
  if (a4)
  {
    NSString v37 = String._bridgeToObjectiveC()();
    [v22 setGivenName:v37];
  }
  if (a6)
  {
    NSString v38 = String._bridgeToObjectiveC()();
    [v22 setFamilyName:v38];
  }
  if ((v57 | v58))
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v39 = String._bridgeToObjectiveC()();
    id v40 = objc_allocWithZone((Class)CNLabeledValue);
    NSString v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v42 = [v40 initWithLabel:v41 value:v39];

    sub_10005D034(&qword_1006AF2D0);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_10055BD30;
    *(void *)(v43 + 32) = v42;
    id v60 = (id)v43;
    specialized Array._endMutation()();
    id v44 = v42;
    sub_10005D034((uint64_t *)&unk_1006BF080);
    Class v45 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v22 setEmailAddresses:v45];
  }
  else
  {
    id v46 = objc_allocWithZone((Class)CNPhoneNumber);
    swift_bridgeObjectRetain();
    NSString v47 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v48 = [v46 initWithStringValue:v47];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v49 = objc_allocWithZone((Class)CNLabeledValue);
    id v50 = v48;
    NSString v51 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v52 = [v49 initWithLabel:v51 value:v50];

    sub_10005D034(&qword_1006AF2D0);
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_10055BD30;
    *(void *)(v53 + 32) = v52;
    id v60 = (id)v53;
    specialized Array._endMutation()();
    id v54 = v52;
    sub_10005D034((uint64_t *)&unk_1006BF080);
    Class v55 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v22 setPhoneNumbers:v55];
  }
  return v22;
}

void sub_1004762A4(void *a1@<X8>)
{
  unint64_t v2 = &selRef_tableView_viewForFooterInSection_;
  int v3 = &_s7SwiftUI5ColorV6orangeACvgZ_ptr;
  uint64_t v4 = &selRef_tableView_viewForFooterInSection_;
  if ([self authorizationStatusForEntityType:0] == (id)3)
  {
    id v5 = [objc_allocWithZone((Class)CNContactStore) init];
    if (qword_1006AE3D0 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    sub_10005D034(&qword_1006AE810);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v47 = 0;
    id v7 = [v5 _ios_meContactWithKeysToFetch:isa error:&v47];

    if (v7)
    {
      id v8 = v47;
      unint64_t v9 = v7;
      unint64_t v10 = sub_1004774B0(v9);
      id v11 = [objc_allocWithZone((Class)ACAccountStore) init];
      id v12 = [v11 aa_primaryAppleAccount];

      if (v12)
      {
        id v13 = [v12 aa_primaryEmail];
        if (v13)
        {
          unsigned int v14 = v13;
          uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v17 = v16;
        }
        else
        {
          uint64_t v15 = 0;
          uint64_t v17 = 0;
        }
        sub_100476C7C((uint64_t)v10, v15, v17, (uint64_t)v46);
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        sub_100067E48((uint64_t)v46, (uint64_t)&v47, (uint64_t *)&unk_1006BF390);
        uint64_t v24 = v48;
        uint64_t v4 = &selRef_tableView_viewForFooterInSection_;
        unint64_t v2 = &selRef_tableView_viewForFooterInSection_;
        int v3 = &_s7SwiftUI5ColorV6orangeACvgZ_ptr;
        if (v48)
        {
          uint64_t v23 = (uint64_t)v47;
          uint64_t v26 = v49;
          id v25 = v50;
          swift_bridgeObjectRelease();
          goto LABEL_31;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        id v22 = sub_1004774B0(v9);
        if (v22[2])
        {
          uint64_t v23 = v22[4];
          uint64_t v24 = v22[5];
          uint64_t v26 = v22[6];
          id v25 = (id)v22[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

LABEL_31:
          *a1 = v7;
          a1[1] = v23;
          a1[2] = v24;
          a1[3] = v26;
          a1[4] = v25;
          return;
        }
        swift_bridgeObjectRelease();

        int v3 = &_s7SwiftUI5ColorV6orangeACvgZ_ptr;
      }
    }
    else
    {
      id v18 = v47;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_1006AE190 != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      sub_1000606BC(v19, (uint64_t)qword_1006D1E98);
      unint64_t v9 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v9, v20))
      {
        id v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, v20, "No access to me card. Use device's primary account.", v21, 2u);
        swift_slowDealloc();
      }

      swift_errorRelease();
    }
  }
  id v27 = [objc_allocWithZone((Class)v3[448]) v2[80]];
  id v25 = [v27 v4[456]];

  if (!v25)
  {
    id v7 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v26 = 0;
    goto LABEL_31;
  }
  id v28 = [v25 aa_primaryEmail];
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v32 = v31;

    id v33 = [v25 aa_firstName];
    if (v33)
    {
      id v34 = v33;
      uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v37 = v36;
    }
    else
    {
      uint64_t v35 = 0;
      uint64_t v37 = 0;
    }
    id v38 = [v25 aa_lastName];
    if (v38)
    {
      NSString v39 = v38;
      uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v42 = v41;
    }
    else
    {
      uint64_t v40 = 0;
      uint64_t v42 = 0;
    }
    id v7 = (id)sub_100475AC0(v30, v32, v35, v37, v40, v42, 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v43 = [v25 aa_primaryEmail];
    if (v43)
    {
      id v44 = v43;
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v24 = v45;

      uint64_t v26 = 0;
      id v25 = 0;
      goto LABEL_31;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1004767C4()
{
  uint64_t result = sub_1004767E4();
  qword_1006D2738 = result;
  return result;
}

uint64_t sub_1004767E4()
{
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100568D60;
  *(void *)(v0 + 32) = CNContactTypeKey;
  *(void *)(v0 + 40) = CNContactIdentifierKey;
  *(void *)(v0 + 48) = CNContactGivenNameKey;
  *(void *)(v0 + 56) = CNContactFamilyNameKey;
  *(void *)(v0 + 64) = CNContactMiddleNameKey;
  *(void *)(v0 + 72) = CNContactNicknameKey;
  *(void *)(v0 + 80) = CNContactEmailAddressesKey;
  *(void *)(v0 + 88) = CNContactPhoneNumbersKey;
  *(void *)(v0 + 96) = CNContactPostalAddressesKey;
  uint64_t v14 = v0;
  specialized Array._endMutation()();
  uint64_t v1 = self;
  unint64_t v2 = CNContactTypeKey;
  int v3 = CNContactIdentifierKey;
  uint64_t v4 = CNContactGivenNameKey;
  id v5 = CNContactFamilyNameKey;
  uint64_t v6 = CNContactMiddleNameKey;
  id v7 = CNContactNicknameKey;
  id v8 = CNContactEmailAddressesKey;
  unint64_t v9 = CNContactPhoneNumbersKey;
  unint64_t v10 = CNContactPostalAddressesKey;
  id v11 = [v1 descriptorForRequiredKeysForStyle:0];
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v12 = [self descriptorForRequiredKeys];
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return v14;
}

uint64_t sub_1004769FC(id *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = [*a1 value];
  id v7 = [v6 stringValue];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_100059EB8();
  StringProtocol.components(separatedBy:)();
  swift_bridgeObjectRelease();
  sub_10005D034(&qword_1006AFD50);
  sub_1001481D4();
  uint64_t v8 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  if (v8 == a3 && v10 == a4) {
    char v11 = 1;
  }
  else {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  return v11 & 1;
}

id sub_100476C20()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMContactsUtilities();
  return [super dealloc];
}

uint64_t type metadata accessor for FMContactsUtilities()
{
  return self;
}

uint64_t sub_100476C7C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(result + 16);
  if (!v5)
  {
    uint64_t v9 = 0;
    a3 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    long long v14 = 0uLL;
    goto LABEL_15;
  }
  uint64_t v8 = result + 40;
  while (1)
  {
    if (!a3) {
      goto LABEL_3;
    }
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(void *)v8;
    uint64_t v11 = *(void *)(v8 + 8);
    uint64_t v12 = *(void *)(v8 + 32);
    BOOL v13 = v9 == a2 && v10 == a3;
    long long v15 = *(_OWORD *)(v8 + 16);
    if (v13) {
      break;
    }
    uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
    if (result)
    {
      a3 = v10;
      goto LABEL_14;
    }
LABEL_3:
    v8 += 48;
    if (!--v5)
    {
      uint64_t v9 = 0;
      a3 = 0;
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      long long v14 = 0uLL;
      goto LABEL_15;
    }
  }
  uint64_t v9 = a2;
LABEL_14:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  long long v14 = v15;
LABEL_15:
  *(void *)a4 = v9;
  *(void *)(a4 + 8) = a3;
  *(void *)(a4 + 16) = v11;
  *(_OWORD *)(a4 + 24) = v14;
  *(void *)(a4 + 40) = v12;
  return result;
}

uint64_t sub_100476DA0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(result + 16);
  if (v5)
  {
    uint64_t v8 = result + 40;
    while (1)
    {
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v10 = *(void *)v8;
      uint64_t v11 = *(void *)(v8 + 8);
      long long v15 = *(_OWORD *)(v8 + 16);
      uint64_t v12 = *(void *)(v8 + 32);
      if (v9 == a2 && v10 == a3) {
        break;
      }
      uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      if (result) {
        goto LABEL_12;
      }
      v8 += 48;
      if (!--v5)
      {
        uint64_t v9 = 0;
        uint64_t v10 = 0;
        uint64_t v11 = 0;
        uint64_t v12 = 0;
        long long v14 = 0uLL;
        goto LABEL_13;
      }
    }
    uint64_t v9 = a2;
    uint64_t v10 = a3;
LABEL_12:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    long long v14 = v15;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    long long v14 = 0uLL;
  }
LABEL_13:
  *(void *)a4 = v9;
  *(void *)(a4 + 8) = v10;
  *(void *)(a4 + 16) = v11;
  *(_OWORD *)(a4 + 24) = v14;
  *(void *)(a4 + 40) = v12;
  return result;
}

void *sub_100476EB8(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    sub_100006060(0, (unint64_t *)&qword_1006B3E40);
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v3);
      uint64_t v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      id v7 = [v4 value];
      NSString v8 = String._bridgeToObjectiveC()();
      char v9 = static NSObject.== infix(_:_:)();

      if (v9)
      {
        swift_bridgeObjectRelease();
        return v5;
      }

      ++v3;
      if (v6 == v2) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100477034(uint64_t a1, unint64_t a2, int a3)
{
  int v41 = a3;
  uint64_t v5 = type metadata accessor for CharacterSet();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  char v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v38 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  long long v15 = (char *)&v38 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  id v18 = (char *)&v38 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  id v21 = (char *)&v38 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v38 - v23;
  __chkstk_darwin(v22);
  if (a2)
  {
    uint64_t v26 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0) {
      uint64_t v26 = a1 & 0xFFFFFFFFFFFFLL;
    }
    if (!v26) {
      goto LABEL_7;
    }
    NSString v39 = (char *)&v38 - v25;
    static CharacterSet.decimalDigits.getter();
    static CharacterSet.whitespacesAndNewlines.getter();
    unint64_t v40 = a2;
    CharacterSet.union(_:)();
    uint64_t v38 = a1;
    id v27 = *(void (**)(char *, uint64_t))(v6 + 8);
    v27(v12, v5);
    v27(v15, v5);
    static CharacterSet.controlCharacters.getter();
    CharacterSet.union(_:)();
    v27(v15, v5);
    v27(v18, v5);
    CharacterSet.init(charactersIn:)();
    CharacterSet.union(_:)();
    v27(v18, v5);
    v27(v21, v5);
    id v28 = v39;
    CharacterSet.inverted.getter();
    v27(v24, v5);
    uint64_t v44 = v38;
    unint64_t v45 = v40;
    sub_100059EB8();
    StringProtocol.rangeOfCharacter(from:options:range:)();
    if ((v29 & 1) == 0)
    {
      v27(v28, v5);
LABEL_7:
      LOBYTE(a2) = 0;
      return a2 & 1;
    }
    static CharacterSet.decimalDigits.getter();
    CharacterSet.init(charactersIn:)();
    CharacterSet.union(_:)();
    v27(v18, v5);
    v27(v21, v5);
    CharacterSet.inverted.getter();
    v27(v24, v5);
    uint64_t v31 = v38;
    unint64_t v32 = v40;
    uint64_t v44 = v38;
    unint64_t v45 = v40;
    swift_bridgeObjectRetain();
    uint64_t v42 = v31;
    unint64_t v43 = v32;
    StringProtocol.rangeOfCharacter(from:options:range:)();
    uint64_t v33 = v31;
    unint64_t v34 = v32;
    if ((v35 & 1) == 0)
    {
      do
      {
        String.removeSubrange(_:)();
        uint64_t v31 = v44;
        unint64_t v34 = v45;
        uint64_t v42 = v44;
        unint64_t v43 = v45;
        StringProtocol.rangeOfCharacter(from:options:range:)();
      }
      while ((v36 & 1) == 0);
      unint64_t v32 = v40;
    }
    if (v41)
    {
      if (v31 == v33 && v34 == v32) {
        LOBYTE(a2) = 0;
      }
      else {
        LOBYTE(a2) = _stringCompareWithSmolCheck(_:_:expecting:)() ^ 1;
      }
    }
    else
    {
      LOBYTE(a2) = 1;
    }
    v27(v9, v5);
    v27(v39, v5);
  }
  return a2 & 1;
}

void *sub_1004774B0(void *a1)
{
  uint64_t v70 = type metadata accessor for CharacterSet();
  uint64_t v2 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v4 = (uint64_t)v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [self stringFromContact:a1 style:0];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v8 = v7;
  }
  else
  {
    uint64_t v76 = 0;
    unint64_t v8 = 0;
  }
  id v9 = [a1 phoneNumbers];
  sub_10005D034((uint64_t *)&unk_1006BF080);
  unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v11 = [a1 emailAddresses];
  unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v66 = v10;
  if (v10 >> 62) {
    goto LABEL_59;
  }
  uint64_t v13 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v14 = &selRef_handleFavorite;
    unint64_t v77 = v8;
    unint64_t v71 = v12;
    if (v13) {
      break;
    }
    swift_bridgeObjectRelease();
    long long v15 = _swiftEmptyArrayStorage;
    if (!(v12 >> 62)) {
      goto LABEL_37;
    }
LABEL_54:
    swift_bridgeObjectRetain();
    uint64_t v75 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v75) {
      goto LABEL_55;
    }
LABEL_38:
    id v74 = (id)(v12 & 0xC000000000000001);
    uint64_t v4 = 4;
    while (1)
    {
      id v51 = v74 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v12 + 8 * v4);
      unint64_t v12 = (unint64_t)v51;
      uint64_t v2 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v52 = [v51 v14[223]];
      if (v52)
      {

        uint64_t result = [(id)v12 v14[223]];
        if (!result) {
          goto LABEL_61;
        }
        uint64_t v53 = result;
        id v54 = [self localizedStringForLabel:result];

        uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v57 = v56;
      }
      else
      {
        uint64_t v55 = 0;
        uint64_t v57 = 0;
      }
      id v58 = [(id)v12 value];
      uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v61 = v60;

      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v15 = sub_10007D528(0, v15[2] + 1, 1, v15);
      }
      unint64_t v63 = v15[2];
      unint64_t v62 = v15[3];
      if (v63 >= v62 >> 1) {
        long long v15 = sub_10007D528((void *)(v62 > 1), v63 + 1, 1, v15);
      }
      v15[2] = v63 + 1;
      uint64_t v64 = &v15[6 * v63];
      v64[4] = v59;
      v64[5] = v61;
      v64[6] = v55;
      v64[7] = v57;
      unint64_t v8 = v77;
      v64[8] = v76;
      v64[9] = v8;

      ++v4;
      unint64_t v12 = v71;
      uint64_t v14 = &selRef_handleFavorite;
      if (v2 == v75) {
        goto LABEL_55;
      }
    }
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  unint64_t v12 = v66;
  unint64_t v69 = v66 & 0xC000000000000001;
  v65[1] = kCFAllocatorDefault;
  long long v67 = (void (**)(uint64_t, uint64_t))(v2 + 8);
  long long v15 = _swiftEmptyArrayStorage;
  uint64_t v16 = 4;
  uint64_t v68 = v13;
  do
  {
    uint64_t v2 = v16 - 4;
    if (v69) {
      id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v17 = *(id *)(v12 + 8 * v16);
    }
    id v18 = v17;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_57;
    }
    id v19 = [v17 label];
    uint64_t v75 = v16 - 3;
    if (v19)
    {

      uint64_t result = [v18 label];
      if (!result)
      {
        __break(1u);
LABEL_61:
        __break(1u);
        return result;
      }
      id v21 = result;
      id v22 = [self localizedStringForLabel:result];

      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v72 = v24;
      uint64_t v73 = v23;
    }
    else
    {
      uint64_t v72 = 0;
      uint64_t v73 = 0;
    }
    id v74 = v18;
    id v25 = [v18 value];
    id v26 = [v25 stringValue];

    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v8 = v28;

    static CharacterSet.decimalDigits.getter();
    v29._uint64_t countAndFlagsBits = 0x2D232A29282BLL;
    v29._unint64_t object = (void *)0xE600000000000000;
    CharacterSet.insert(charactersIn:)(v29);
    uint64_t v78 = v27;
    unint64_t v79 = v8;
    sub_100059EB8();
    StringProtocol.rangeOfCharacter(from:options:range:)();
    if (v30)
    {
      swift_bridgeObjectRetain();
      uint64_t v35 = v27;
      unint64_t v37 = v8;
    }
    else
    {
      uint64_t v78 = v27;
      unint64_t v79 = v8;
      uint64_t v31 = String.Index.utf16Offset<A>(in:)();
      uint64_t v32 = String.count.getter();
      uint64_t v2 = v32 - v31;
      if (__OFSUB__(v32, v31)) {
        goto LABEL_58;
      }
      NSString v33 = String._bridgeToObjectiveC()();
      id v34 = [v33 substringWithRange:v31, v2];

      uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v37 = v36;
    }
    uint64_t v38 = HIBYTE(v37) & 0xF;
    if ((v37 & 0x2000000000000000) == 0) {
      uint64_t v38 = v35 & 0xFFFFFFFFFFFFLL;
    }
    if (!v38)
    {
      (*v67)(v4, v70);
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    uint64_t v39 = v4;
    sub_1001199D4();
    NSString v40 = String._bridgeToObjectiveC()();
    NSString v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v42 = (void *)CFPhoneNumberCreate();

    if (v42)
    {
      id v43 = v42;
      uint64_t String = CFPhoneNumberCreateString();
      uint64_t v4 = v39;
      if (!String)
      {
        (*v67)(v39, v70);
        swift_bridgeObjectRelease();

        goto LABEL_30;
      }
      unint64_t v45 = (void *)String;
      swift_bridgeObjectRelease();
      uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v37 = v46;

      (*v67)(v39, v70);
    }
    else
    {
      uint64_t v4 = v39;
      (*v67)(v39, v70);
    }
    swift_bridgeObjectRelease();
LABEL_30:
    unint64_t v12 = v66;
LABEL_31:
    unint64_t v8 = v77;
    swift_bridgeObjectRetain();
    uint64_t v14 = &selRef_handleFavorite;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v15 = sub_10007D528(0, v15[2] + 1, 1, v15);
    }
    unint64_t v48 = v15[2];
    unint64_t v47 = v15[3];
    if (v48 >= v47 >> 1) {
      long long v15 = sub_10007D528((void *)(v47 > 1), v48 + 1, 1, v15);
    }
    v15[2] = v48 + 1;
    uint64_t v49 = &v15[6 * v48];
    v49[4] = v35;
    v49[5] = v37;
    uint64_t v50 = v72;
    v49[6] = v73;
    v49[7] = v50;
    v49[8] = v76;
    v49[9] = v8;

    ++v16;
  }
  while (v75 != v68);
  swift_bridgeObjectRelease();
  unint64_t v12 = v71;
  if (v71 >> 62) {
    goto LABEL_54;
  }
LABEL_37:
  uint64_t v75 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v75) {
    goto LABEL_38;
  }
LABEL_55:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

id sub_100477CCC(uint64_t a1, NSString a2)
{
  sub_100006060(0, (unint64_t *)&qword_1006B4570);
  sub_10005D034((uint64_t *)&unk_1006AF790);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10055B970;
  *(void *)(v3 + 56) = &type metadata for String;
  *(void *)(v3 + 64) = sub_10007F2C8();
  *(void *)(v3 + 32) = 0xD000000000000029;
  *(void *)(v3 + 40) = 0x8000000100586570;
  uint64_t v4 = NSPredicate.init(format:_:)();
  if (a2) {
    a2 = String._bridgeToObjectiveC()();
  }
  id v5 = [v4 evaluateWithObject:a2];

  swift_unknownObjectRelease();
  return v5;
}

void *sub_100477DD4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v27 = type metadata accessor for CharacterSet();
  uint64_t v6 = *(void *)(v27 - 8);
  uint64_t v7 = __chkstk_darwin(v27);
  id v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v11 = (char *)&v27 - v10;
  id v12 = [a3 emailAddresses];
  sub_10005D034((uint64_t *)&unk_1006BF080);
  unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain();
  uint64_t v14 = sub_100476EB8(v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14)
  {
    id v15 = [v14 identifier];

    uint64_t v16 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    CharacterSet.init(charactersIn:)();
    CharacterSet.inverted.getter();
    id v17 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v18 = v27;
    v17(v9, v27);
    uint64_t v28 = a1;
    uint64_t v29 = a2;
    sub_100059EB8();
    uint64_t v28 = StringProtocol.components(separatedBy:)();
    sub_10005D034(&qword_1006AFD50);
    sub_1001481D4();
    uint64_t v19 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    id v22 = [a3 phoneNumbers];
    unint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    __chkstk_darwin(v24);
    *(&v27 - 4) = (uint64_t)v11;
    *(&v27 - 3) = v19;
    *(&v27 - 2) = v21;
    uint64_t v16 = sub_100496904(sub_1004785B4, (uint64_t)(&v27 - 6), v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v16)
    {
      id v25 = [v16 identifier];

      uint64_t v16 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    v17(v11, v18);
  }
  return v16;
}

uint64_t sub_10047810C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CharacterSet();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  id v11 = (char *)v20 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)v20 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v20 - v15;
  static CharacterSet.whitespacesAndNewlines.getter();
  static CharacterSet.controlCharacters.getter();
  CharacterSet.union(_:)();
  id v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v8, v4);
  v17(v11, v4);
  CharacterSet.init(charactersIn:)();
  CharacterSet.union(_:)();
  v17(v11, v4);
  v17(v14, v4);
  v20[0] = a1;
  v20[1] = a2;
  sub_100059EB8();
  uint64_t v18 = StringProtocol.trimmingCharacters(in:)();
  v17(v16, v4);
  return v18;
}

id sub_10047830C()
{
  id v0 = 0;
  if ([self authorizationStatusForEntityType:0] == (id)3)
  {
    uint64_t v1 = [objc_allocWithZone((Class)CNContactStore) init];
    if (qword_1006AE3D0 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    sub_10005D034(&qword_1006AE810);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v10 = 0;
    id v0 = [v1 _ios_meContactWithKeysToFetch:isa error:&v10];

    id v3 = v10;
    if (!v0)
    {
      uint64_t v4 = v3;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_1006AE190 != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      sub_1000606BC(v5, (uint64_t)qword_1006D1E98);
      uint64_t v6 = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "No access to me card. Use device's primary account.", v8, 2u);
        swift_slowDealloc();
      }

      swift_errorRelease();
      id v0 = 0;
      uint64_t v1 = v6;
    }
  }
  return v0;
}

uint64_t *sub_10047852C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_100478564(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1004785B4(id *a1)
{
  return sub_1004769FC(a1, v1[2], v1[3], v1[4]) & 1;
}

void sub_1004785D8()
{
  qword_1006BF3A8 = 0x4030000000000000;
}

void sub_1004785E8()
{
  qword_1006BF3B0 = 0x3FD8000000000000;
}

void sub_1004785F8()
{
  qword_1006BF3B8 = 0x4036000000000000;
}

void sub_100478608()
{
  qword_1006BF3C0 = 0x4061800000000000;
}

double sub_10047861C()
{
  double result = 20.0;
  xmmword_1006BF3C8 = xmmword_100568DA0;
  *(_OWORD *)&qword_1006BF3D8 = xmmword_100568DB0;
  return result;
}

uint64_t sub_10047863C(uint64_t a1)
{
  uint64_t v3 = sub_10005D034((uint64_t *)&unk_1006AF820);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t)&v1[OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_productImageAdjustmentsURL];
  swift_beginAccess();
  sub_1004795F0(a1, v10);
  swift_endAccess();
  sub_1000B786C(v10, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1000AFBAC((uint64_t)v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    id v11 = [v1 traitCollection];
    id v12 = [v11 userInterfaceStyle];

    if (v12 == (id)2) {
      uint64_t v13 = 1;
    }
    else {
      uint64_t v13 = 2;
    }
    id v14 = *(id *)&v1[OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_productImageView];
    URL._bridgeToObjectiveC()(v15);
    id v17 = v16;
    [v14 updateViewForAssetType:v13 adjustmentsURL:v16];

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return sub_1000AFBAC(a1);
}

id sub_10047886C()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_productImageAdjustmentsURL];
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_stackView;
  id v4 = objc_allocWithZone((Class)UIStackView);
  uint64_t v5 = v0;
  *(void *)&v0[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_titleLabel;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v7 = OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_primaryLabel;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v8 = OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_secondaryLabel;
  *(void *)&v5[v8] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v9 = OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_productImageView;
  *(void *)&v5[v9] = [objc_allocWithZone((Class)SFAdjustedImageView) init];

  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for FMProductActionHeaderView();
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_100478A9C();

  return v10;
}

id sub_100478A9C()
{
  uint64_t v1 = v0;
  sub_1004791F4();
  [v0 setAxis:1];
  [v0 setAlignment:0];
  if (qword_1006AE3F8 != -1) {
    swift_once();
  }
  [v0 setDirectionalLayoutMargins:xmmword_1006BF3C8, *(double *)&qword_1006BF3D8, unk_1006BF3E0];
  [v0 setLayoutMarginsRelativeArrangement:1];
  [v0 setBaselineRelativeArrangement:1];
  uint64_t v44 = OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_productImageView;
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_productImageView] setContentMode:1];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_primaryLabel];
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_secondaryLabel];
  id v4 = *(id *)&v1[OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_titleLabel];
  id v5 = v2;
  id v6 = v3;
  [v4 setNumberOfLines:0];
  [v4 setTextAlignment:1];
  [v4 setAdjustsFontForContentSizeCategory:1];
  id v7 = v5;
  [v7 setNumberOfLines:0];
  [v7 setTextAlignment:1];
  [v7 setAdjustsFontForContentSizeCategory:1];

  id v8 = v6;
  [v8 setNumberOfLines:0];
  [v8 setTextAlignment:1];
  [v8 setAdjustsFontForContentSizeCategory:1];

  uint64_t v9 = self;
  id v10 = [v9 preferredFontForTextStyle:UIFontTextStyleLargeTitle];
  id v11 = (void *)sub_100042318(2);

  [v4 setFont:v11];
  objc_super v12 = self;
  id v13 = [v12 labelColor];
  [v4 setTextColor:v13];

  id v14 = [v9 preferredFontForTextStyle:UIFontTextStyleHeadline];
  sub_10005D034((uint64_t *)&unk_1006B4280);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10055B970;
  *(void *)(inited + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(inited + 40) = UIFontWeightSemibold;
  uint64_t v16 = UIFontWeightTrait;
  unint64_t v17 = sub_10005010C(inited);
  id v18 = sub_10005021C(v17);

  swift_bridgeObjectRelease();
  uint64_t v19 = (void *)sub_100042318(0x8000);

  [v7 setFont:v19];
  id v20 = [v12 labelColor];
  [v7 setTextColor:v20];

  id v21 = [v9 preferredFontForTextStyle:];
  id v22 = (void *)sub_100042318(0x8000);

  [v8 setFont:v22];
  id v23 = [v12 secondaryLabelColor];
  [v8 setTextColor:v23];

  uint64_t v24 = *(void **)&v1[v44];
  id v25 = v4;
  id v26 = v7;
  id v27 = v8;
  id v28 = v24;
  [v25 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v1 addArrangedSubview:v25];

  id v29 = v28;
  [v29 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v1 addArrangedSubview:v29];

  id v30 = v26;
  [v30 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v1 addArrangedSubview:v30];

  id v31 = v27;
  [v31 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v1 addArrangedSubview:v31];

  if (qword_1006AE3D8 != -1) {
    swift_once();
  }
  [v1 setCustomSpacing:v25 afterView:*(double *)&qword_1006BF3A8];
  uint64_t v32 = self;
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_10055C1E0;
  id v34 = [*(id *)&v1[v44] heightAnchor];
  id v35 = [*(id *)&v1[v44] widthAnchor];
  if (qword_1006AE3E0 != -1) {
    swift_once();
  }
  id v36 = [v34 constraintLessThanOrEqualToAnchor:v35 multiplier:*(double *)&qword_1006BF3B0];

  *(void *)(v33 + 32) = v36;
  id v37 = [*(id *)&v1[v44] heightAnchor];
  if (qword_1006AE3F0 != -1) {
    swift_once();
  }
  id v38 = [v37 constraintEqualToConstant:*(double *)&qword_1006BF3C0];

  *(void *)(v33 + 40) = v38;
  specialized Array._endMutation()();
  sub_10004FCE4();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v32 activateConstraints:isa];

  sub_1004791F4();
  id v40 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleBody];
  if (qword_1006AE3E8 != -1) {
    swift_once();
  }
  [v40 scaledValueForValue:*(double *)&qword_1006BF3B8];
  double v42 = v41;

  return [v1 setSpacing:v42];
}

uint64_t sub_1004791F4()
{
  uint64_t v1 = sub_10005D034((uint64_t *)&unk_1006AF820);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t)&v0[OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_productImageAdjustmentsURL];
  swift_beginAccess();
  sub_1000B786C(v8, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_1000AFBAC((uint64_t)v3);
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  id v10 = [v0 traitCollection];
  id v11 = [v10 userInterfaceStyle];

  if (v11 == (id)2) {
    uint64_t v12 = 1;
  }
  else {
    uint64_t v12 = 2;
  }
  id v13 = *(id *)&v0[OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_productImageView];
  URL._bridgeToObjectiveC()(v14);
  uint64_t v16 = v15;
  [v13 updateViewForAssetType:v12 adjustmentsURL:v15];

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

id sub_100479434()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMProductActionHeaderView();
  [super dealloc];
}

uint64_t sub_1004794F8()
{
  return type metadata accessor for FMProductActionHeaderView();
}

uint64_t type metadata accessor for FMProductActionHeaderView()
{
  uint64_t result = qword_1006BF438;
  if (!qword_1006BF438) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10047954C()
{
  sub_1001867EC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1004795F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006AF820);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_100479658()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_productImageAdjustmentsURL];
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_stackView;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v4 = OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_titleLabel;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v5 = OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_primaryLabel;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v6 = OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_secondaryLabel;
  *(void *)&v0[v6] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v7 = OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_productImageView;
  *(void *)&v0[v7] = [objc_allocWithZone((Class)SFAdjustedImageView) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::String *UTAlertExtensionIdentifierKey.unsafeMutableAddressor()
{
  return &UTAlertExtensionIdentifierKey;
}

Swift::String *UTAlertExtensionUserInfoContextKey.unsafeMutableAddressor()
{
  return &UTAlertExtensionUserInfoContextKey;
}

FindMy::UTAlertContextMode_optional __swiftcall UTAlertContextMode.init(rawValue:)(Swift::String rawValue)
{
  unint64_t object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._unint64_t object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10061FFD0, v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = FindMy_UTAlertContextMode_itemDetectedWithYou;
  }
  else {
    v4.value = FindMy_UTAlertContextMode_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

unint64_t UTAlertContextMode.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000013;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_100479850(char *a1, char *a2)
{
  return sub_1001D9C6C(*a1, *a2);
}

Swift::Int sub_10047985C()
{
  return sub_10025654C();
}

uint64_t sub_100479864()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1004798D8()
{
  return sub_100410F80();
}

uint64_t sub_1004798E0@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10061FFD0, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_100479940(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD000000000000013;
  }
  else {
    unint64_t v2 = 0xD000000000000010;
  }
  unint64_t v3 = 0x800000010057E3F0;
  if (*v1) {
    unint64_t v3 = 0x800000010057E410;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100479984()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1004799D4()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t UTAlertContext.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1003E5A4C(v1, a1);
}

uint64_t UTAlertContext.mode.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for UTAlertContext() + 20));
}

uint64_t type metadata accessor for UTAlertContext()
{
  uint64_t result = qword_1006BF4E0;
  if (!qword_1006BF4E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t UTAlertContext.roleId.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for UTAlertContext() + 24));
}

uint64_t UTAlertContext.roleEmoji.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for UTAlertContext() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UTAlertContext.title.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for UTAlertContext() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UTAlertContext.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for UTAlertContext() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UTAlertContext.latitude.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for UTAlertContext() + 40));
}

uint64_t UTAlertContext.longitude.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for UTAlertContext() + 44));
}

int *UTAlertContext.init(uuid:mode:roleId:roleEmoji:title:subtitle:latitude:longitude:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, char a15)
{
  sub_100479CF8(a1, a9);
  uint64_t result = (int *)type metadata accessor for UTAlertContext();
  *(unsigned char *)(a9 + result[5]) = a2;
  uint64_t v22 = a9 + result[6];
  *(void *)uint64_t v22 = a3;
  *(unsigned char *)(v22 + 8) = a4 & 1;
  id v23 = (void *)(a9 + result[7]);
  void *v23 = a5;
  v23[1] = a6;
  uint64_t v24 = (void *)(a9 + result[8]);
  *uint64_t v24 = a7;
  v24[1] = a8;
  id v25 = (void *)(a9 + result[9]);
  *id v25 = a10;
  v25[1] = a11;
  uint64_t v26 = a9 + result[10];
  *(void *)uint64_t v26 = a12;
  *(unsigned char *)(v26 + 8) = a13 & 1;
  uint64_t v27 = a9 + result[11];
  *(void *)uint64_t v27 = a14;
  *(unsigned char *)(v27 + 8) = a15 & 1;
  return result;
}

uint64_t sub_100479CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006B1760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t UTAlertContext.debugDescription.getter()
{
  uint64_t v1 = sub_10005D034((uint64_t *)&unk_1006B1760);
  __chkstk_darwin(v1 - 8);
  unint64_t v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v38 = 0;
  unint64_t v39 = 0xE000000000000000;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease();
  unint64_t v38 = 0xD000000000000017;
  unint64_t v39 = 0x800000010059EA60;
  sub_1003E5A4C(v0, (uint64_t)v3);
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_100003F10((uint64_t)v3, (uint64_t *)&unk_1006B1760);
    Substring.init(_:)();
  }
  else
  {
    UUID.uuidString.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    sub_10047B0A4(10);
    swift_bridgeObjectRelease();
  }
  v6._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 0x3A65646F6D20;
  v7._unint64_t object = (void *)0xE600000000000000;
  String.append(_:)(v7);
  uint64_t v8 = (int *)type metadata accessor for UTAlertContext();
  int v9 = *(unsigned __int8 *)(v0 + v8[5]);
  unint64_t v10 = 0xD000000000000013;
  if ((v9 & 1) == 0) {
    unint64_t v10 = 0xD000000000000010;
  }
  unint64_t v11 = 0x800000010057E3F0;
  if (v9) {
    unint64_t v11 = 0x800000010057E410;
  }
  if (v9 == 2) {
    uint64_t v12 = 10023;
  }
  else {
    uint64_t v12 = v10;
  }
  unint64_t v13 = 0xE200000000000000;
  if (v9 == 2) {
    unint64_t v14 = 0xE200000000000000;
  }
  else {
    unint64_t v14 = v11;
  }
  unint64_t v15 = v14;
  String.append(_:)(*(Swift::String *)&v12);
  swift_bridgeObjectRelease();
  v16._uint64_t countAndFlagsBits = 8236;
  v16._unint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v16);
  unint64_t v18 = v38;
  unint64_t v17 = v39;
  unint64_t v38 = 0;
  unint64_t v39 = 0xE000000000000000;
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease();
  unint64_t v38 = 0x3A656C746974;
  unint64_t v39 = 0xE600000000000000;
  uint64_t v19 = (uint64_t *)(v0 + v8[8]);
  uint64_t v20 = v19[1];
  if (v20) {
    uint64_t v21 = *v19;
  }
  else {
    uint64_t v21 = 10023;
  }
  if (v20) {
    uint64_t v22 = (void *)v19[1];
  }
  else {
    uint64_t v22 = (void *)0xE200000000000000;
  }
  swift_bridgeObjectRetain();
  v23._uint64_t countAndFlagsBits = v21;
  v23._unint64_t object = v22;
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  v24._uint64_t countAndFlagsBits = 0x75746974616C202CLL;
  v24._unint64_t object = (void *)0xEB000000003A6564;
  String.append(_:)(v24);
  if (*(unsigned char *)(v0 + v8[10] + 8))
  {
    uint64_t v25 = 24942;
  }
  else
  {
    uint64_t v25 = Double.description.getter();
    unint64_t v13 = v26;
  }
  unint64_t v27 = v13;
  String.append(_:)(*(Swift::String *)&v25);
  swift_bridgeObjectRelease();
  v28._uint64_t countAndFlagsBits = 0x7469676E6F6C202CLL;
  v28._unint64_t object = (void *)0xEC0000003A656475;
  String.append(_:)(v28);
  if (*(unsigned char *)(v0 + v8[11] + 8))
  {
    unint64_t v29 = 0xE200000000000000;
    uint64_t v30 = 24942;
  }
  else
  {
    uint64_t v30 = Double.description.getter();
    unint64_t v29 = v31;
  }
  unint64_t v32 = v29;
  String.append(_:)(*(Swift::String *)&v30);
  swift_bridgeObjectRelease();
  v33._uint64_t countAndFlagsBits = 62;
  v33._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v33);
  uint64_t v34 = v38;
  id v35 = (void *)v39;
  unint64_t v38 = v18;
  unint64_t v39 = v17;
  swift_bridgeObjectRetain();
  v36._uint64_t countAndFlagsBits = v34;
  v36._unint64_t object = v35;
  String.append(_:)(v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v38;
}

uint64_t sub_10047A114()
{
  uint64_t result = 1684632949;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701080941;
      break;
    case 2:
      uint64_t result = 0x6449656C6F72;
      break;
    case 3:
      uint64_t result = 0x6A6F6D45656C6F72;
      break;
    case 4:
      uint64_t result = 0x656C746974;
      break;
    case 5:
      uint64_t result = 0x656C746974627573;
      break;
    case 6:
      uint64_t result = 0x656475746974616CLL;
      break;
    case 7:
      uint64_t result = 0x64757469676E6F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10047A204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10047C5E4(a1, a2);
  *a3 = result;
  return result;
}

void sub_10047A22C(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_10047A238(uint64_t a1)
{
  unint64_t v2 = sub_10047B140();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10047A274(uint64_t a1)
{
  unint64_t v2 = sub_10047B140();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t UTAlertContext.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10005D034(&qword_1006BF448);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002CEB8(a1, a1[3]);
  sub_10047B140();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v10[15] = 0;
  type metadata accessor for UUID();
  sub_10047C964(&qword_1006BF458);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v2)
  {
    v10[14] = *(unsigned char *)(v3 + *(int *)(type metadata accessor for UTAlertContext() + 20));
    v10[13] = 1;
    sub_10047B194();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    v10[12] = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v10[11] = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v10[10] = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v10[9] = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v10[8] = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v10[7] = 7;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t UTAlertContext.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006B1760);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10005D034(&qword_1006BF468);
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  __chkstk_darwin(v7);
  int v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UTAlertContext();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v44 = a1;
  sub_10002CEB8(a1, v13);
  sub_10047B140();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_10002CEFC((uint64_t)v44);
  }
  uint64_t v14 = v42;
  type metadata accessor for UUID();
  char v53 = 0;
  sub_10047C964(&qword_1006BF470);
  unint64_t v15 = v9;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v16 = (uint64_t)v12;
  sub_100479CF8((uint64_t)v6, (uint64_t)v12);
  char v51 = 1;
  sub_10047B1E8();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  unint64_t v17 = (int *)v10;
  *(unsigned char *)(v16 + *(int *)(v10 + 20)) = v52;
  char v50 = 2;
  uint64_t v18 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v19 = v16 + *(int *)(v10 + 24);
  *(void *)uint64_t v19 = v18;
  *(unsigned char *)(v19 + 8) = v20 & 1;
  char v49 = 3;
  uint64_t v21 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v22 = v14;
  Swift::String v23 = (uint64_t *)(v16 + v17[7]);
  uint64_t *v23 = v21;
  v23[1] = v24;
  char v48 = 4;
  uint64_t v25 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v26 = (uint64_t)v44;
  unint64_t v27 = (uint64_t *)(v16 + v17[8]);
  *unint64_t v27 = v25;
  v27[1] = v28;
  char v47 = 5;
  uint64_t v29 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v30 = (uint64_t *)(v16 + v17[9]);
  *uint64_t v30 = v29;
  v30[1] = v31;
  char v46 = 6;
  uint64_t v32 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v33 = v16 + v17[10];
  *(void *)uint64_t v33 = v32;
  *(unsigned char *)(v33 + 8) = v34 & 1;
  char v45 = 7;
  uint64_t v35 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  char v37 = v36;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v43);
  uint64_t v38 = v16 + v17[11];
  *(void *)uint64_t v38 = v35;
  *(unsigned char *)(v38 + 8) = v37 & 1;
  sub_10047B23C(v16, v41);
  sub_10002CEFC(v26);
  return sub_10047B2A0(v16);
}

uint64_t sub_10047AA94@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return UTAlertContext.init(from:)(a1, a2);
}

uint64_t sub_10047AAAC(void *a1)
{
  return UTAlertContext.encode(to:)(a1);
}

BOOL _s6FindMy14UTAlertContextV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10005D034((uint64_t *)&unk_1006BEAC0);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10005D034((uint64_t *)&unk_1006B1760);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  unint64_t v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v70 - v17;
  __chkstk_darwin(v16);
  char v20 = (char *)&v70 - v19;
  uint64_t v70 = a1;
  sub_1003E5A4C(a1, (uint64_t)&v70 - v19);
  uint64_t v71 = a2;
  sub_1003E5A4C(a2, (uint64_t)v18);
  uint64_t v21 = (uint64_t)&v11[*(int *)(v9 + 56)];
  sub_1003E5A4C((uint64_t)v20, (uint64_t)v11);
  sub_1003E5A4C((uint64_t)v18, v21);
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22((uint64_t)v11, 1, v4) == 1)
  {
    sub_100003F10((uint64_t)v18, (uint64_t *)&unk_1006B1760);
    sub_100003F10((uint64_t)v20, (uint64_t *)&unk_1006B1760);
    if (v22(v21, 1, v4) == 1)
    {
      sub_100003F10((uint64_t)v11, (uint64_t *)&unk_1006B1760);
      goto LABEL_8;
    }
LABEL_6:
    sub_100003F10((uint64_t)v11, (uint64_t *)&unk_1006BEAC0);
    return 0;
  }
  sub_1003E5A4C((uint64_t)v11, (uint64_t)v15);
  if (v22(v21, 1, v4) == 1)
  {
    sub_100003F10((uint64_t)v18, (uint64_t *)&unk_1006B1760);
    sub_100003F10((uint64_t)v20, (uint64_t *)&unk_1006B1760);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v21, v4);
  sub_10047C964((unint64_t *)&unk_1006BEAD0);
  char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
  v24(v7, v4);
  sub_100003F10((uint64_t)v18, (uint64_t *)&unk_1006B1760);
  sub_100003F10((uint64_t)v20, (uint64_t *)&unk_1006B1760);
  v24(v15, v4);
  sub_100003F10((uint64_t)v11, (uint64_t *)&unk_1006B1760);
  if ((v23 & 1) == 0) {
    return 0;
  }
LABEL_8:
  uint64_t v25 = (int *)type metadata accessor for UTAlertContext();
  uint64_t v26 = v25[5];
  uint64_t v28 = v70;
  uint64_t v27 = v71;
  int v29 = *(unsigned __int8 *)(v70 + v26);
  int v30 = *(unsigned __int8 *)(v71 + v26);
  if (v29 == 2)
  {
    if (v30 != 2) {
      return 0;
    }
  }
  else
  {
    if (v30 == 2) {
      return 0;
    }
    if (v29) {
      unint64_t v31 = 0xD000000000000013;
    }
    else {
      unint64_t v31 = 0xD000000000000010;
    }
    if (v29) {
      unint64_t v32 = 0x800000010057E410;
    }
    else {
      unint64_t v32 = 0x800000010057E3F0;
    }
    if (v30) {
      unint64_t v33 = 0xD000000000000013;
    }
    else {
      unint64_t v33 = 0xD000000000000010;
    }
    if (v30) {
      unint64_t v34 = 0x800000010057E410;
    }
    else {
      unint64_t v34 = 0x800000010057E3F0;
    }
    if (v31 == v33 && v32 == v34)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL result = 0;
      if ((v35 & 1) == 0) {
        return result;
      }
    }
  }
  uint64_t v37 = v25[6];
  uint64_t v38 = (void *)(v28 + v37);
  char v39 = *(unsigned char *)(v28 + v37 + 8);
  uint64_t v40 = (void *)(v27 + v37);
  int v41 = *(unsigned __int8 *)(v27 + v37 + 8);
  if (v39)
  {
    if (!v41) {
      return 0;
    }
  }
  else
  {
    if (*v38 != *v40) {
      LOBYTE(v41) = 1;
    }
    if (v41) {
      return 0;
    }
  }
  uint64_t v42 = v25[7];
  uint64_t v43 = (void *)(v28 + v42);
  uint64_t v44 = *(void *)(v28 + v42 + 8);
  char v45 = (void *)(v27 + v42);
  uint64_t v46 = v45[1];
  if (!v44)
  {
    if (v46) {
      return 0;
    }
LABEL_41:
    uint64_t v48 = v25[8];
    char v49 = (void *)(v28 + v48);
    uint64_t v50 = *(void *)(v28 + v48 + 8);
    char v51 = (void *)(v27 + v48);
    uint64_t v52 = v51[1];
    if (v50)
    {
      if (!v52) {
        return 0;
      }
      if (*v49 != *v51 || v50 != v52)
      {
        char v53 = _stringCompareWithSmolCheck(_:_:expecting:)();
        BOOL result = 0;
        if ((v53 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v52)
    {
      return 0;
    }
    uint64_t v54 = v25[9];
    uint64_t v55 = (void *)(v28 + v54);
    uint64_t v56 = *(void *)(v28 + v54 + 8);
    uint64_t v57 = (void *)(v27 + v54);
    uint64_t v58 = v57[1];
    if (v56)
    {
      if (!v58) {
        return 0;
      }
      if (*v55 != *v57 || v56 != v58)
      {
        char v59 = _stringCompareWithSmolCheck(_:_:expecting:)();
        BOOL result = 0;
        if ((v59 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v58)
    {
      return 0;
    }
    uint64_t v60 = v25[10];
    uint64_t v61 = (double *)(v28 + v60);
    char v62 = *(unsigned char *)(v28 + v60 + 8);
    unint64_t v63 = (double *)(v27 + v60);
    int v64 = *(unsigned __int8 *)(v27 + v60 + 8);
    if (v62)
    {
      if (!v64) {
        return 0;
      }
    }
    else
    {
      if (*v61 != *v63) {
        LOBYTE(v64) = 1;
      }
      if (v64) {
        return 0;
      }
    }
    uint64_t v65 = v25[11];
    unint64_t v66 = (double *)(v28 + v65);
    char v67 = *(unsigned char *)(v28 + v65 + 8);
    uint64_t v68 = (double *)(v27 + v65);
    char v69 = *(unsigned char *)(v27 + v65 + 8);
    if ((v67 & 1) == 0)
    {
      if (*v66 != *v68) {
        char v69 = 1;
      }
      return (v69 & 1) == 0;
    }
    return (v69 & 1) != 0;
  }
  if (!v46) {
    return 0;
  }
  if (*v43 == *v45 && v44 == v46) {
    goto LABEL_41;
  }
  char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
  BOOL result = 0;
  if (v47) {
    goto LABEL_41;
  }
  return result;
}

uint64_t sub_10047B0A4(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    String.index(_:offsetBy:limitedBy:)();
    return String.subscript.getter();
  }
  return result;
}

unint64_t sub_10047B140()
{
  unint64_t result = qword_1006BF450;
  if (!qword_1006BF450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BF450);
  }
  return result;
}

unint64_t sub_10047B194()
{
  unint64_t result = qword_1006BF460;
  if (!qword_1006BF460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BF460);
  }
  return result;
}

unint64_t sub_10047B1E8()
{
  unint64_t result = qword_1006BF478;
  if (!qword_1006BF478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BF478);
  }
  return result;
}

uint64_t sub_10047B23C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UTAlertContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10047B2A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UTAlertContext();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10047B300()
{
  unint64_t result = qword_1006BF480;
  if (!qword_1006BF480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BF480);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for UTAlertContextMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10047B420);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UTAlertContextMode()
{
  return &type metadata for UTAlertContextMode;
}

uint64_t *initializeBufferWithCopyOfBuffer for UTAlertContext(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_10005D034((uint64_t *)&unk_1006B1760);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    *(void *)uint64_t v12 = *(void *)v13;
    v12[8] = v13[8];
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (uint64_t *)((char *)a1 + v14);
    uint64_t v17 = (uint64_t *)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    void *v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = (uint64_t *)((char *)a1 + v15);
    char v20 = (uint64_t *)((char *)a2 + v15);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = a3[9];
    uint64_t v23 = a3[10];
    uint64_t v24 = (uint64_t *)((char *)a1 + v22);
    uint64_t v25 = (uint64_t *)((char *)a2 + v22);
    uint64_t v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    uint64_t v27 = (char *)a1 + v23;
    uint64_t v28 = (char *)a2 + v23;
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
    uint64_t v29 = a3[11];
    int v30 = (char *)a1 + v29;
    unint64_t v31 = (char *)a2 + v29;
    *(void *)int v30 = *(void *)v31;
    v30[8] = v31[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for UTAlertContext(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for UTAlertContext(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10005D034((uint64_t *)&unk_1006B1760);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = &a1[v12];
  uint64_t v15 = &a2[v12];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  uint64_t v17 = &a1[v13];
  uint64_t v18 = &a2[v13];
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = v19;
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = &a1[v20];
  uint64_t v23 = &a2[v20];
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = v24;
  uint64_t v25 = &a1[v21];
  uint64_t v26 = &a2[v21];
  *(void *)uint64_t v25 = *(void *)v26;
  v25[8] = v26[8];
  uint64_t v27 = a3[11];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  *(void *)uint64_t v28 = *(void *)v29;
  v28[8] = v29[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for UTAlertContext(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_10005D034((uint64_t *)&unk_1006B1760);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  a1[a3[5]] = a2[a3[5]];
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(void *)v14;
  v13[8] = v14[8];
  *(void *)uint64_t v13 = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[9];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = *((void *)v24 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[10];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = *(void *)v27;
  v26[8] = v27[8];
  *(void *)uint64_t v26 = v28;
  uint64_t v29 = a3[11];
  int v30 = &a1[v29];
  unint64_t v31 = &a2[v29];
  uint64_t v32 = *(void *)v31;
  v30[8] = v31[8];
  *(void *)int v30 = v32;
  return a1;
}

char *initializeWithTake for UTAlertContext(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10005D034((uint64_t *)&unk_1006B1760);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)int v10 = *(void *)v11;
  v10[8] = v11[8];
  uint64_t v12 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v12] = *(_OWORD *)&a2[v12];
  uint64_t v13 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = a3[11];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = *(void *)v18;
  v17[8] = v18[8];
  *(void *)uint64_t v17 = v19;
  return a1;
}

char *assignWithTake for UTAlertContext(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_10005D034((uint64_t *)&unk_1006B1760);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v19 = *(void *)v17;
  uint64_t v18 = *((void *)v17 + 1);
  *(void *)uint64_t v16 = v19;
  *((void *)v16 + 1) = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[8];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v24 = *(void *)v22;
  uint64_t v23 = *((void *)v22 + 1);
  *(void *)uint64_t v21 = v24;
  *((void *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[9];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v29 = *(void *)v27;
  uint64_t v28 = *((void *)v27 + 1);
  *(void *)uint64_t v26 = v29;
  *((void *)v26 + 1) = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[10];
  uint64_t v31 = a3[11];
  uint64_t v32 = &a1[v30];
  unint64_t v33 = &a2[v30];
  *(void *)uint64_t v32 = *(void *)v33;
  v32[8] = v33[8];
  unint64_t v34 = &a1[v31];
  char v35 = &a2[v31];
  *(void *)unint64_t v34 = *(void *)v35;
  v34[8] = v35[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for UTAlertContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10047BF50);
}

uint64_t sub_10047BF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10005D034((uint64_t *)&unk_1006B1760);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for UTAlertContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10047C038);
}

uint64_t sub_10047C038(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10005D034((uint64_t *)&unk_1006B1760);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 8) = a2;
  }
  return result;
}

void sub_10047C0FC()
{
  sub_1002A64EC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for UTAlertContext.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for UTAlertContext.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10047C308);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UTAlertContext.CodingKeys()
{
  return &type metadata for UTAlertContext.CodingKeys;
}

unint64_t sub_10047C344()
{
  unint64_t result = qword_1006BF538;
  if (!qword_1006BF538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BF538);
  }
  return result;
}

unint64_t sub_10047C39C()
{
  unint64_t result = qword_1006BF540;
  if (!qword_1006BF540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BF540);
  }
  return result;
}

unint64_t sub_10047C3F4()
{
  unint64_t result = qword_1006BF548;
  if (!qword_1006BF548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BF548);
  }
  return result;
}

uint64_t sub_10047C448(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = a2;
    uint64_t v3 = result;
    unint64_t v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  unint64_t result = swift_bridgeObjectRelease();
LABEL_4:
  if (v5 >= v3) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = v5;
  }
  if (v5 < 0) {
    uint64_t v6 = v3;
  }
  if (v3) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    unint64_t result = swift_bridgeObjectRelease();
    if (v9 < 0)
    {
LABEL_28:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    unint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7)
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    for (Swift::Int i = 0; i != v7; ++i)
    {
      sub_10005D034(&qword_1006BD9C0);
      _ArrayBuffer._typeCheckSlowPath(_:)(i);
    }
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.subscript.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v11;
}

uint64_t sub_10047C5E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684632949 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701080941 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6449656C6F72 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6A6F6D45656C6F72 && a2 == 0xE900000000000069 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

unint64_t sub_10047C910()
{
  unint64_t result = qword_1006BF558;
  if (!qword_1006BF558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BF558);
  }
  return result;
}

uint64_t sub_10047C964(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for UUID();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_10047C9A8()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy13FMWaitingView_title;
  id v2 = objc_allocWithZone((Class)UILabel);
  uint64_t v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  uint64_t v4 = OBJC_IVAR____TtC6FindMy13FMWaitingView_activityIndicator;
  *(void *)&v3[v4] = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithActivityIndicatorStyle:100];

  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for FMWaitingView();
  id v5 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_10047CB60();
  sub_10047CD94();

  return v5;
}

id sub_10047CB60()
{
  uint64_t v1 = v0;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy13FMWaitingView_title];
  id v3 = [self preferredFontForTextStyle:UIFontTextStyleBody];
  sub_10005D034((uint64_t *)&unk_1006B4280);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10055B970;
  *(void *)(inited + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(inited + 40) = UIFontWeightMedium;
  id v5 = UIFontWeightTrait;
  unint64_t v6 = sub_10005010C(inited);
  id v7 = sub_10005021C(v6);

  swift_bridgeObjectRelease();
  [v2 setFont:v7];

  [v2 setAdjustsFontForContentSizeCategory:1];
  id v8 = [self secondaryLabelColor];
  [v2 setTextColor:v8];

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v9 = [self mainBundle];
  v14._unint64_t object = (void *)0x800000010059EAA0;
  v10._uint64_t countAndFlagsBits = 0x474E4954494157;
  v10._unint64_t object = (void *)0xE700000000000000;
  v11._uint64_t countAndFlagsBits = 0;
  v11._unint64_t object = (void *)0xE000000000000000;
  v14._uint64_t countAndFlagsBits = 0xD000000000000019;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v14);

  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setText:v12];

  [v1 addSubview:v2];
  return [v1 addSubview:*(void *)&v1[OBJC_IVAR____TtC6FindMy13FMWaitingView_activityIndicator]];
}

void sub_10047CD94()
{
  uint64_t v1 = v0;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy13FMWaitingView_title];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy13FMWaitingView_activityIndicator];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v28 = self;
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10055B950;
  id v5 = [v3 topAnchor];
  id v6 = [v1 topAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];

  *(void *)(v4 + 32) = v7;
  id v8 = [v3 bottomAnchor];
  id v9 = [v1 bottomAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9];

  *(void *)(v4 + 40) = v10;
  id v11 = [v3 leadingAnchor];
  id v12 = [v2 trailingAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12];

  *(void *)(v4 + 48) = v13;
  id v14 = [v3 trailingAnchor];
  id v15 = [v1 trailingAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15];

  *(void *)(v4 + 56) = v16;
  specialized Array._endMutation()();
  sub_10004FCE4();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v28 activateConstraints:isa];

  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_10055C1F0;
  id v19 = [v2 topAnchor];
  id v20 = [v1 topAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20];

  *(void *)(v18 + 32) = v21;
  id v22 = [v2 bottomAnchor];
  id v23 = [v1 bottomAnchor];
  id v24 = [v22 constraintEqualToAnchor:v23];

  *(void *)(v18 + 40) = v24;
  id v25 = [v2 leadingAnchor];
  id v26 = [v1 leadingAnchor];
  id v27 = [v25 constraintEqualToAnchor:v26];

  *(void *)(v18 + 48) = v27;
  specialized Array._endMutation()();
  Class v29 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v28 activateConstraints:v29];
}

id sub_10047D1D0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMWaitingView();
  return [super dealloc];
}

uint64_t type metadata accessor for FMWaitingView()
{
  return self;
}

void sub_10047D2CC(char a1)
{
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for FMAccessoryPairingInProgressCard();
  [super viewWillAppear:a1 & 1];
  id v3 = [self mainBundle];
  v9._uint64_t countAndFlagsBits = 0xD000000000000018;
  v4._uint64_t countAndFlagsBits = 0xD000000000000034;
  v9._unint64_t object = (void *)0x800000010057EF80;
  v4._unint64_t object = (void *)0x800000010059EB30;
  v5.value._unint64_t object = (void *)0x800000010057EF60;
  v5.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v6._uint64_t countAndFlagsBits = 0;
  v6._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v9);

  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 showActivityIndicatorWithStatus:v7];
}

uint64_t sub_10047D428()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10005D034(&qword_1006B5A10);
  __chkstk_darwin(v2 - 8);
  Swift::String v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10005D034(&qword_1006B3700);
  __chkstk_darwin(v5 - 8);
  NSString v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10005D034(&qword_1006B3190);
  uint64_t v8 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  id v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10005D034(&qword_1006BF608);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v29 = v11;
  uint64_t v30 = v12;
  __chkstk_darwin(v11);
  id v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10005D034(&qword_1006BF610);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  uint64_t v32 = v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FMAccessoryPairingInProgressCard.ViewModel();
  NSString v19 = String._bridgeToObjectiveC()();
  [v0 setTitle:v19];

  FMIPDiscoveredAccessory.productInformation.getter();
  uint64_t v20 = sub_1001AC2B4((uint64_t)v7, 1);
  sub_100003F10((uint64_t)v7, &qword_1006B3700);
  uint64_t v34 = v20;
  id v33 = [self mainRunLoop];
  uint64_t v21 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v4, 1, 1, v21);
  sub_10005D034(&qword_1006B31A0);
  sub_100006060(0, (unint64_t *)&qword_1006C1DE0);
  sub_1000450A0((unint64_t *)&unk_1006B4250, &qword_1006B31A0);
  sub_100150450();
  Publisher.receive<A>(on:options:)();
  sub_100003F10((uint64_t)v4, &qword_1006B5A10);

  swift_release();
  sub_100006060(0, (unint64_t *)&qword_1006BA4D0);
  sub_1000450A0(&qword_1006B31A8, &qword_1006B3190);
  uint64_t v22 = v28;
  Publisher.map<A>(_:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v22);
  sub_10005D034(&qword_1006B5210);
  sub_1000450A0(&qword_1006BF618, &qword_1006BF608);
  sub_1000450A0(&qword_1006BF620, &qword_1006B5210);
  uint64_t v23 = v29;
  Publisher.catch<A>(_:)();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v23);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1000450A0(&qword_1006BF628, &qword_1006BF610);
  uint64_t v24 = v31;
  uint64_t v25 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v24);
  *(void *)&v1[OBJC_IVAR____TtC6FindMy32FMAccessoryPairingInProgressCard_imageFetchCancellable] = v25;
  return swift_release();
}

id sub_10047D9E4@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = v2;
  return v2;
}

uint64_t sub_10047D9F0()
{
  return Just.init(_:)();
}

void sub_10047DA5C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    id v4 = *(id *)(Strong + OBJC_IVAR____TtC6FindMy32FMAccessoryPairingInProgressCard_imageView);

    [v4 setImage:v1];
  }
}

void sub_10047DAE4()
{
  uint64_t v1 = v0;
  id v2 = [v0 contentView];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy32FMAccessoryPairingInProgressCard_imageView];
  [v2 addSubview:v3];

  [v3 setContentMode:1];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v37 = self;
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10055EFD0;
  id v5 = [v3 leadingAnchor];
  id v6 = [v1 contentView];
  id v7 = [v6 mainContentGuide];

  id v8 = [v7 leadingAnchor];
  id v9 = [v5 constraintGreaterThanOrEqualToAnchor:v8];

  *(void *)(v4 + 32) = v9;
  id v10 = [v3 trailingAnchor];
  id v11 = [v1 contentView];
  id v12 = [v11 mainContentGuide];

  id v13 = [v12 trailingAnchor];
  id v14 = [v10 constraintLessThanOrEqualToAnchor:v13];

  *(void *)(v4 + 40) = v14;
  id v15 = [v3 topAnchor];
  id v16 = [v1 contentView];
  id v17 = [v16 mainContentGuide];

  id v18 = [v17 topAnchor];
  id v19 = [v15 constraintGreaterThanOrEqualToAnchor:v18];

  *(void *)(v4 + 48) = v19;
  id v20 = [v3 bottomAnchor];
  id v21 = [v1 contentView];
  id v22 = [v21 mainContentGuide];

  id v23 = [v22 bottomAnchor];
  id v24 = [v20 constraintLessThanOrEqualToAnchor:v23];

  *(void *)(v4 + 56) = v24;
  id v25 = [v3 centerXAnchor];
  id v26 = [v1 contentView];
  id v27 = [v26 mainContentGuide];

  id v28 = [v27 centerXAnchor];
  id v29 = [v25 constraintEqualToAnchor:v28];

  *(void *)(v4 + 64) = v29;
  id v30 = [v3 centerYAnchor];
  id v31 = [v1 contentView];
  id v32 = [v31 mainContentGuide];

  id v33 = [v32 centerYAnchor];
  id v34 = [v30 constraintEqualToAnchor:v33];

  *(void *)(v4 + 72) = v34;
  id v35 = [v3 heightAnchor];
  id v36 = [v35 constraintEqualToConstant:140.0];

  *(void *)(v4 + 80) = v36;
  specialized Array._endMutation()();
  sub_100006060(0, (unint64_t *)&qword_1006AEE60);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v37 activateConstraints:isa];
}

id sub_10047E0BC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAccessoryPairingInProgressCard();
  [super dealloc];
}

uint64_t type metadata accessor for FMAccessoryPairingInProgressCard()
{
  return self;
}

uint64_t type metadata accessor for FMAccessoryPairingInProgressCard.ViewModel()
{
  uint64_t result = qword_1006BF688;
  if (!qword_1006BF688) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10047E1BC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10047E1F4(uint64_t *a1)
{
}

uint64_t *sub_10047E1FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    id v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    id v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for FMIPDiscoveredAccessory();
    id v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    id v14 = (uint64_t *)((char *)v7 + v13);
    id v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *id v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_10047E308(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for FMIPDiscoveredAccessory();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

void *sub_10047E398(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  id v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for FMIPDiscoveredAccessory();
  id v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  id v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = v13[1];
  *id v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10047E458(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  id v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for FMIPDiscoveredAccessory();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)((char *)a1 + v10);
  id v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_10047E520(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  id v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for FMIPDiscoveredAccessory();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_10047E5B8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  id v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for FMIPDiscoveredAccessory();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)((char *)a1 + v10);
  id v12 = (void *)((char *)a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10047E668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10047E67C);
}

uint64_t sub_10047E67C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FMIPDiscoveredAccessory();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10047E72C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10047E740);
}

void *sub_10047E740(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for FMIPDiscoveredAccessory();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10047E7E8()
{
  uint64_t result = type metadata accessor for FMIPDiscoveredAccessory();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_10047EA88()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAccessoryDiscoveryAccessoryCell();
  return [super dealloc];
}

uint64_t type metadata accessor for FMAccessoryDiscoveryAccessoryCell()
{
  return self;
}

uint64_t sub_10047EAE0()
{
  uint64_t v0 = type metadata accessor for FMModernPlatterButtonEntry(0);
  sub_1000671E0(v0, qword_1006D2748);
  uint64_t v1 = sub_1000606BC(v0, (uint64_t)qword_1006D2748);
  uint64_t result = UUID.init()();
  *(unsigned char *)(v1 + *(int *)(v0 + 20)) = 1;
  return result;
}

double sub_10047EB3C@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = xmmword_10055EC80;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(unsigned char *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_10047EB58(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_10047EB64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

Swift::Int sub_10047EBCC(uint64_t a1)
{
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  sub_10047FF5C((unint64_t *)&unk_1006C0B10, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  Hasher._combine(_:)(*(unsigned char *)(v1 + *(int *)(a1 + 20)));
  return Hasher._finalize()();
}

void sub_10047EC70(uint64_t a1, uint64_t a2)
{
  type metadata accessor for UUID();
  sub_10047FF5C((unint64_t *)&unk_1006C0B10, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  Hasher._combine(_:)(*(unsigned char *)(v2 + *(int *)(a2 + 20)));
}

Swift::Int sub_10047ECFC(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  sub_10047FF5C((unint64_t *)&unk_1006C0B10, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  Hasher._combine(_:)(*(unsigned char *)(v2 + *(int *)(a2 + 20)));
  return Hasher._finalize()();
}

uint64_t sub_10047ED9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (static UUID.== infix(_:_:)()) {
    char v6 = *(unsigned char *)(a1 + *(int *)(a3 + 20)) ^ *(unsigned char *)(a2 + *(int *)(a3 + 20)) ^ 1;
  }
  else {
    char v6 = 0;
  }
  return v6 & 1;
}

void sub_10047EDFC(uint64_t a1, uint64_t a2)
{
  sub_10014BF34();
  sub_10047FF5C((unint64_t *)&qword_1006B0298, (void (*)(uint64_t))sub_10014BF34);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  v18.receiver = v2;
  v18.super_class = (Class)type metadata accessor for FMModernPlatterButton(0);
  [super touchesBegan:a2];

  uint64_t v5 = self;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v2;
  uint64_t v16 = sub_1004800A8;
  uint64_t v17 = v6;
  id v12 = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  uint64_t v14 = sub_10003C410;
  id v15 = &unk_10063DD20;
  uint64_t v7 = _Block_copy(&v12);
  id v8 = v2;
  swift_release();
  [v5 animateWithDuration:v7 animations:0.15];
  _Block_release(v7);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  uint64_t v16 = sub_1004800B0;
  uint64_t v17 = v9;
  id v12 = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  uint64_t v14 = sub_10003C410;
  id v15 = &unk_10063DD70;
  uint64_t v10 = _Block_copy(&v12);
  id v11 = v8;
  swift_release();
  [v5 animateWithDuration:4 delay:v10 options:0 animations:0.25 completion:0.0];
  _Block_release(v10);
}

void sub_10047F02C(void *a1)
{
  id v2 = [a1 traitCollection];
  id v3 = [v2 userInterfaceStyle];

  uint64_t v4 = self;
  uint64_t v5 = &selRef_systemGray3Color;
  if (v3 != (id)2) {
    uint64_t v5 = &selRef_systemGray5Color;
  }
  id v6 = [v4 *v5];
  [a1 setBackgroundColor:v6];
}

id sub_10047F0E8(void *a1)
{
  long long v2 = *(_OWORD *)&CATransform3DIdentity.m13;
  *(_OWORD *)&v8.m11 = *(_OWORD *)&CATransform3DIdentity.m11;
  *(_OWORD *)&v8.m13 = v2;
  long long v3 = *(_OWORD *)&CATransform3DIdentity.m23;
  *(_OWORD *)&v8.m21 = *(_OWORD *)&CATransform3DIdentity.m21;
  *(_OWORD *)&v8.m23 = v3;
  long long v4 = *(_OWORD *)&CATransform3DIdentity.m33;
  *(_OWORD *)&v8.m31 = *(_OWORD *)&CATransform3DIdentity.m31;
  *(_OWORD *)&v8.m33 = v4;
  long long v5 = *(_OWORD *)&CATransform3DIdentity.m43;
  *(_OWORD *)&v8.m41 = *(_OWORD *)&CATransform3DIdentity.m41;
  *(_OWORD *)&v8.m43 = v5;
  CATransform3DScale(&v7, &v8, 0.93, 0.93, 1.0);
  CATransform3D v8 = v7;
  return [a1 setTransform3D:&v8];
}

uint64_t sub_10047F188(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_10047F468(a1, a2, a3, a4, (void (*)(uint64_t, void *))sub_10047EDFC);
}

void sub_10047F1A0(uint64_t a1, uint64_t a2)
{
  sub_10014BF34();
  sub_10047FF5C((unint64_t *)&qword_1006B0298, (void (*)(uint64_t))sub_10014BF34);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  v25.receiver = v2;
  v25.super_class = (Class)type metadata accessor for FMModernPlatterButton(0);
  [super touchesEnded:a2 withEvent:isa];

  if ((a1 & 0xC000000000000001) != 0)
  {
    if (__CocoaSet.count.getter() != 1) {
      goto LABEL_11;
    }
  }
  else if (*(void *)(a1 + 16) != 1)
  {
    goto LABEL_11;
  }
  uint64_t v6 = swift_bridgeObjectRetain();
  CATransform3D v7 = (void *)sub_1000E78B8(v6);
  swift_bridgeObjectRelease();
  if (v7)
  {
    [v2 bounds];
    CGFloat v9 = v8;
    CGFloat v11 = v10;
    CGFloat v13 = v12;
    CGFloat v15 = v14;
    [v7 locationInView:v2];
    v26.x = v16;
    v26.y = v17;
    v27.origin.x = v9;
    v27.origin.y = v11;
    v27.size.width = v13;
    v27.size.height = v15;
    if (CGRectContainsPoint(v27, v26))
    {
      if (qword_1006AE400 != -1) {
        swift_once();
      }
      uint64_t v18 = type metadata accessor for FMModernPlatterButtonEntry(0);
      uint64_t v19 = sub_1000606BC(v18, (uint64_t)qword_1006D2748);
      (*(void (**)(uint64_t))((swift_isaMask & *v2) + 0xF0))(v19);
    }
  }
LABEL_11:
  id v20 = self;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v2;
  v24[4] = sub_10048008C;
  v24[5] = v21;
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 1107296256;
  v24[2] = sub_10003C410;
  v24[3] = &unk_10063DCD0;
  id v22 = _Block_copy(v24);
  id v23 = v2;
  swift_release();
  [v20 animateWithDuration:4 delay:v22 options:0 animations:0.15 completion:0.1];
  _Block_release(v22);
}

uint64_t sub_10047F450(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_10047F468(a1, a2, a3, a4, (void (*)(uint64_t, void *))sub_10047F1A0);
}

uint64_t sub_10047F468(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, void *))
{
  sub_10014BF34();
  sub_10047FF5C((unint64_t *)&qword_1006B0298, (void (*)(uint64_t))sub_10014BF34);
  uint64_t v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = a4;
  id v10 = a1;
  a5(v8, a4);

  return swift_bridgeObjectRelease();
}

void sub_10047F538(void *a1)
{
  long long v2 = *(_OWORD *)&CATransform3DIdentity.m13;
  v11[0] = *(_OWORD *)&CATransform3DIdentity.m11;
  v11[1] = v2;
  long long v3 = *(_OWORD *)&CATransform3DIdentity.m23;
  v11[2] = *(_OWORD *)&CATransform3DIdentity.m21;
  v11[3] = v3;
  long long v4 = *(_OWORD *)&CATransform3DIdentity.m33;
  v11[4] = *(_OWORD *)&CATransform3DIdentity.m31;
  v11[5] = v4;
  long long v5 = *(_OWORD *)&CATransform3DIdentity.m43;
  v11[6] = *(_OWORD *)&CATransform3DIdentity.m41;
  v11[7] = v5;
  [a1 setTransform3D:v11];
  if (qword_1006AE228 != -1) {
    swift_once();
  }
  id v6 = [a1 traitCollection];
  id v7 = [v6 userInterfaceStyle];
  uint64_t v8 = self;
  id v9 = &selRef_tertiarySystemFillColor;
  if (v7 != (id)2) {
    id v9 = &selRef_whiteColor;
  }
  id v10 = [v8 *v9];

  [a1 setBackgroundColor:v10];
}

uint64_t sub_10047F650(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_10014BF34();
  sub_10047FF5C((unint64_t *)&qword_1006B0298, (void (*)(uint64_t))sub_10014BF34);
  static Set._unconditionallyBridgeFromObjectiveC(_:)();
  id v6 = a4;
  id v7 = a1;
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  v15.receiver = v7;
  v15.super_class = (Class)type metadata accessor for FMModernPlatterButton(0);
  [super touchesCancelled:v6 withEvent:isa];

  id v9 = self;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v7;
  v14[4] = sub_1004800CC;
  v14[5] = v10;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_10003C410;
  v14[3] = &unk_10063DC80;
  CGFloat v11 = _Block_copy(v14);
  id v12 = v7;
  swift_release();
  [v9 animateWithDuration:4 delay:v11 options:0 animations:0.15 completion:0.1];
  _Block_release(v11);

  return swift_bridgeObjectRelease();
}

id sub_10047F81C(void *a1)
{
  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for FMModernPlatterButton(0);
  return [super init];
}

id sub_10047F860(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for FMModernPlatterButton(0);
  return [super initWithCoder:a3];
}

id sub_10047F8AC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMModernPlatterButton(0);
  [super dealloc];
}

uint64_t type metadata accessor for FMModernPlatterButton(uint64_t a1)
{
  return sub_1000201D0(a1, qword_1006BF718);
}

uint64_t sub_10047F904()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10047F93C()
{
  return type metadata accessor for FMModernPlatterButton(0);
}

void *sub_10047F944(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_10047FA10(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_10047FA74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10047FAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10047FB6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10047FBE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10047FC64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10047FC78);
}

uint64_t sub_10047FC78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_10047FD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10047FD5C);
}

uint64_t sub_10047FD5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t type metadata accessor for FMModernPlatterButtonEntry(uint64_t a1)
{
  return sub_1000201D0(a1, qword_1006BF8E8);
}

uint64_t sub_10047FE38()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10047FECC()
{
  return sub_10047FF5C(&qword_1006BF920, (void (*)(uint64_t))type metadata accessor for FMModernPlatterButtonEntry);
}

uint64_t sub_10047FF14()
{
  return sub_10047FF5C((unint64_t *)&unk_1006BEAD0, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_10047FF5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10047FFA4(uint64_t a1)
{
  uint64_t result = sub_10047FF5C(&qword_1006BF950, (void (*)(uint64_t))type metadata accessor for FMModernPlatterButtonEntry);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10047FFFC(uint64_t a1)
{
  uint64_t result = sub_10047FF5C(&qword_1006BF958, (void (*)(uint64_t))type metadata accessor for FMModernPlatterButtonEntry);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100480054()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10048008C()
{
  sub_10047F538(*(void **)(v0 + 16));
}

void sub_1004800A8()
{
  sub_10047F02C(*(void **)(v0 + 16));
}

id sub_1004800B0()
{
  return sub_10047F0E8(*(void **)(v0 + 16));
}

void sub_1004800D8()
{
  id v1 = [v0 navigationBar];
  [v1 setTranslucent:1];

  id v2 = [v0 navigationBar];
  id v3 = [objc_allocWithZone((Class)UIImage) init];
  [v2 setBackgroundImage:v3 forBarMetrics:0];

  id v4 = [v0 navigationBar];
  id v5 = [self clearColor];
  [v4 setBackgroundColor:v5];

  id v6 = [v0 navigationBar];
  id v7 = [objc_allocWithZone((Class)UIImage) init];
  [v6 setShadowImage:v7];
}

char *sub_100480240(uint64_t a1)
{
  id v3 = &v1[qword_1006B9D70];
  *(void *)id v3 = 0xD00000000000001ELL;
  *((void *)v3 + 1) = 0x800000010058D770;
  uint64_t v4 = qword_1006B9D98;
  id v5 = objc_allocWithZone((Class)UILabel);
  id v6 = v1;
  *(void *)&v1[v4] = [v5 init];
  uint64_t v7 = qword_1006B9DA0;
  *(void *)&v6[v7] = [objc_allocWithZone((Class)type metadata accessor for FMLoadingView()) init];
  uint64_t v8 = qword_1006B9DA8;
  *(void *)&v6[v8] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v6[qword_1006B9DB0] = 0;
  v6[qword_1006B9DB8] = 0;
  uint64_t v9 = qword_1006B9DC0;
  id v10 = [self buttonWithType:1];
  NSString v11 = String._bridgeToObjectiveC()();
  [v10 setAccessibilityIdentifier:v11];

  *(void *)&v6[v9] = v10;
  v6[qword_1006B9DC8] = 0;
  v6[qword_1006B9DD0] = 0;
  type metadata accessor for FMTableView();
  id v12 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v12 setSeparatorStyle:0];
  *(void *)&v6[qword_1006B9D90] = v12;
  id v13 = objc_allocWithZone((Class)type metadata accessor for FMItemsListDataSource());
  id v14 = v12;
  uint64_t v15 = swift_retain();
  *(void *)&v6[qword_1006B9D78] = sub_10043DAE0(v15, v14);
  id v16 = objc_allocWithZone((Class)type metadata accessor for FMNoItemView());
  swift_retain();
  *(void *)&v6[qword_1006B9D80] = sub_10046F9E0();
  id v17 = objc_allocWithZone((Class)type metadata accessor for FMItemTerminalView());
  swift_retain();
  *(void *)&v6[qword_1006B9D88] = sub_1001A5414();

  *(void *)&v6[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] = a1;
  v26.receiver = v6;
  v26.super_class = (Class)type metadata accessor for FMMediatedViewController();
  swift_retain();
  uint64_t v18 = (char *)[super initWithNibName:0 bundle:0];
  NSString v19 = String._bridgeToObjectiveC()();
  [v18 setAccessibilityIdentifier:v19];

  type metadata accessor for FMTableViewSectionHeaderView();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  swift_bridgeObjectRetain();
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v14 registerClass:ObjCClassFromMetadata forHeaderFooterViewReuseIdentifier:v21];

  *(void *)(*(void *)&v18[qword_1006B9D78] + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_delegate + 8) = &off_100632400;
  swift_unknownObjectWeakAssign();
  id v22 = *(char **)&v18[qword_1006B9D88];
  *(void *)&v22[OBJC_IVAR____TtC6FindMy14FMTerminalView_delegate + 8] = &off_1006323B0;
  swift_unknownObjectWeakAssign();
  id v23 = v18;
  id v24 = v22;
  sub_10004AA50();

  swift_release();
  return v23;
}

char *sub_100480630(uint64_t a1)
{
  id v3 = &v1[qword_1006B9D70];
  *(void *)id v3 = 0xD00000000000001ELL;
  *((void *)v3 + 1) = 0x800000010058D770;
  uint64_t v4 = qword_1006B9D98;
  id v5 = objc_allocWithZone((Class)UILabel);
  id v6 = v1;
  *(void *)&v1[v4] = [v5 init];
  uint64_t v7 = qword_1006B9DA0;
  *(void *)&v6[v7] = [objc_allocWithZone((Class)type metadata accessor for FMLoadingView()) init];
  uint64_t v8 = qword_1006B9DA8;
  *(void *)&v6[v8] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v6[qword_1006B9DB0] = 0;
  v6[qword_1006B9DB8] = 0;
  uint64_t v9 = qword_1006B9DC0;
  id v10 = [self buttonWithType:1];
  NSString v11 = String._bridgeToObjectiveC()();
  [v10 setAccessibilityIdentifier:v11];

  *(void *)&v6[v9] = v10;
  v6[qword_1006B9DC8] = 0;
  v6[qword_1006B9DD0] = 0;
  type metadata accessor for FMTableView();
  id v12 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v12 setSeparatorStyle:0];
  *(void *)&v6[qword_1006B9D90] = v12;
  id v13 = objc_allocWithZone((Class)type metadata accessor for FMDevicesListDataSource());
  id v14 = v12;
  uint64_t v15 = swift_retain();
  *(void *)&v6[qword_1006B9D78] = sub_10032CA10(v15, v14);
  id v16 = objc_allocWithZone((Class)type metadata accessor for FMNoDeviceView());
  uint64_t v17 = swift_retain();
  *(void *)&v6[qword_1006B9D80] = sub_10028D664(v17);
  id v18 = objc_allocWithZone((Class)type metadata accessor for FMDevicesTerminalView());
  uint64_t v19 = swift_retain();
  *(void *)&v6[qword_1006B9D88] = sub_10041146C(v19);

  *(void *)&v6[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] = a1;
  v28.receiver = v6;
  v28.super_class = (Class)type metadata accessor for FMMediatedViewController();
  swift_retain();
  id v20 = [super initWithNibName:0 bundle:0];
  NSString v21 = String._bridgeToObjectiveC()();
  [v20 setAccessibilityIdentifier:v21];

  type metadata accessor for FMTableViewSectionHeaderView();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  swift_bridgeObjectRetain();
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v14 registerClass:ObjCClassFromMetadata forHeaderFooterViewReuseIdentifier:v23];

  *(void *)(*(void *)&v20[qword_1006B9D78] + OBJC_IVAR____TtC6FindMy23FMDevicesListDataSource_delegate + 8) = &off_100632400;
  swift_unknownObjectWeakAssign();
  id v24 = *(char **)&v20[qword_1006B9D88];
  *(void *)&v24[OBJC_IVAR____TtC6FindMy14FMTerminalView_delegate + 8] = &off_1006323B0;
  swift_unknownObjectWeakAssign();
  objc_super v25 = v20;
  objc_super v26 = v24;
  sub_10004AA50();

  swift_release();
  return v25;
}

uint64_t sub_100480A20(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        id v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        id v6 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
      }
      uint64_t v7 = (uint64_t)sub_100482E38(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        uint64_t v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              NSString v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        uint64_t v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = (uint64_t)sub_100482D50(result, a2, 10);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

char *sub_100480C70(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC6FindMy23FMInitialCardController_selectionSubscription] = 0;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy23FMInitialCardController_discoveryCoordinator] = 0;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy23FMInitialCardController_mediator] = a1;
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for FMInitialCardController();
  swift_retain();
  [super initWithNibName:0 bundle:0];
  uint64_t v3 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_dismissable;
  v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_dismissable] = 0;
  uint64_t v4 = *(void **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_closeButton];
  uint64_t v5 = v2;
  [v4 setHidden:1];
  [*(id *)(*(void *)&v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer]+ OBJC_IVAR____TtC6FindMy19FMCardContainerView_grabber) setHidden:v2[v3]];
  sub_10000B378();

  swift_release();
  return v5;
}

uint64_t sub_100480E00(char a1)
{
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for FMInitialCardController();
  uint64_t result = [super viewWillDisappear:a1 & 1];
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC6FindMy23FMInitialCardController_selectionSubscription];
  if (v4)
  {
    uint64_t v5 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC6FindMy23FMInitialCardController_mediator] + 56);
    swift_beginAccess();
    swift_retain();
    swift_retain();
    uint64_t result = sub_1003D6AB4((uint64_t *)(v5 + 16), v4);
    uint64_t v6 = result;
    unint64_t v7 = *(void *)(v5 + 16);
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 >= v6) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v8 >= result)
      {
LABEL_4:
        sub_1002586A8(v6, v8);
        swift_endAccess();
        swift_release();
        return swift_release();
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100480FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for OfferLocationDuration();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  sub_10005D034(&qword_1006BFA18);
  v3[8] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for FriendshipExpiration();
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = type metadata accessor for MainActor();
  v3[14] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[15] = v7;
  v3[16] = v6;
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_10048115C, v7, v6);
}

uint64_t sub_10048115C()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 16))(v1, v0[2], v3);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for OfferLocationDuration.oneHour(_:))
  {
    uint64_t v5 = (unsigned int *)&enum case for FriendshipExpiration.oneHour(_:);
LABEL_7:
    (*(void (**)(void, void, void))(v0[10] + 104))(v0[8], *v5, v0[9]);
    uint64_t v6 = 0;
LABEL_8:
    uint64_t v7 = v0[9];
    uint64_t v8 = v0[10];
    uint64_t v9 = v0[8];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v9, v6, 1, v7);
    int v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7);
    uint64_t v11 = v0[12];
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[10];
    uint64_t v14 = v0[8];
    if (v10 == 1)
    {
      (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for FriendshipExpiration.forever(_:), v12);
      sub_100003F10(v14, &qword_1006BFA18);
    }
    else
    {
      (*(void (**)(uint64_t, void, uint64_t))(v13 + 32))(v11, v0[8], v12);
    }
    uint64_t v15 = v0[3];
    uint64_t v16 = v0[4];
    (*(void (**)(void, void, void))(v0[10] + 16))(v0[11], v0[12], v0[9]);
    type metadata accessor for FMFShareLocationAction();
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v17 = FMFShareLocationAction.init(handles:friendId:duration:)();
    v0[17] = v17;
    uint64_t v18 = static MainActor.shared.getter();
    v0[18] = v18;
    uint64_t v19 = (void *)swift_task_alloc();
    v0[19] = v19;
    v19[2] = v16;
    v19[3] = v17;
    v19[4] = v15;
    unsigned int v20 = (void *)swift_task_alloc();
    v0[20] = v20;
    *unsigned int v20 = v0;
    v20[1] = sub_100481474;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v20, v18, &protocol witness table for MainActor, 0xD000000000000029, 0x800000010059ECD0, sub_100483A00, v19, (char *)&type metadata for () + 8);
  }
  if (v4 == enum case for OfferLocationDuration.endOfDay(_:))
  {
    uint64_t v5 = (unsigned int *)&enum case for FriendshipExpiration.endOfDay(_:);
    goto LABEL_7;
  }
  if (v4 == enum case for OfferLocationDuration.indefinitely(_:))
  {
    uint64_t v5 = (unsigned int *)&enum case for FriendshipExpiration.forever(_:);
    goto LABEL_7;
  }
  if (v4 == enum case for OfferLocationDuration.pin(_:))
  {
    uint64_t v6 = 1;
    goto LABEL_8;
  }
  return _diagnoseUnexpectedEnumCase<A>(type:)();
}

uint64_t sub_100481474()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 128);
  uint64_t v4 = *(void *)(v2 + 120);
  if (v0) {
    uint64_t v5 = sub_1004816BC;
  }
  else {
    uint64_t v5 = sub_1004815F0;
  }
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(v5, v4, v3);
}

uint64_t sub_1004815F0()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1004816BC()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100481788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_10005D034(&qword_1006B92F8);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000F4F54(a3, (uint64_t)sub_100483ADC, v11);
  swift_release();
  return swift_release();
}

uint64_t sub_100481910(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v68 = a4;
  uint64_t v70 = type metadata accessor for Person.Handle();
  uint64_t v6 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = type metadata accessor for FMFActionStatus();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v63 - v14;
  if (!a2)
  {
    if (qword_1006AE190 != -1) {
      goto LABEL_61;
    }
    goto LABEL_6;
  }
  swift_errorRetain();
  if (qword_1006AE190 != -1) {
LABEL_59:
  }
    swift_once();
  uint64_t v16 = type metadata accessor for Logger();
  sub_1000606BC(v16, (uint64_t)qword_1006D1E98);
  (*(void (**)(char *, void *, unint64_t))(v10 + 16))(v13, a1, v9);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v69 = a2;
  if (v19)
  {
    uint64_t v20 = swift_slowAlloc();
    unint64_t v64 = v9;
    unint64_t v9 = v20;
    uint64_t v21 = (void *)swift_slowAlloc();
    uint64_t v65 = (uint64_t)v21;
    char v67 = (void *)swift_slowAlloc();
    v71[0] = (uint64_t)v67;
    *(_DWORD *)unint64_t v9 = 138412802;
    os_log_t v66 = v17;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    *(void *)&long long v72 = isa;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v21 = isa;
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    *(void *)&long long v72 = 0;
    *((void *)&v72 + 1) = 0xE000000000000000;
    unint64_t v23 = v64;
    _print_unlocked<A, B>(_:_:)();
    *(void *)&long long v72 = sub_1000606F4(v72, *((unint64_t *)&v72 + 1), v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, unint64_t))(v10 + 8))(v13, v23);
    *(_WORD *)(v9 + 22) = 2080;
    *(void *)&long long v72 = v69;
    swift_errorRetain();
    sub_10005D034((uint64_t *)&unk_1006AEEE0);
    uint64_t v24 = String.init<A>(describing:)();
    *(void *)&long long v72 = sub_1000606F4(v24, v25, v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    uint64_t v17 = v66;
    _os_log_impl((void *)&_mh_execute_header, v66, v18, "FMAddFriendViewController: 🙏 Error offering shares to %@ %s %s", (uint8_t *)v9, 0x20u);
    sub_10005D034((uint64_t *)&unk_1006B5A50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, unint64_t))(v10 + 8))(v13, v9);
    swift_errorRelease();
    swift_errorRelease();
  }

  a1 = (void *)_convertErrorToNSError(_:)();
  id v33 = [a1 userInfo];

  uint64_t v34 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = (char *)(v34 + 64);
  uint64_t v35 = 1 << *(unsigned char *)(v34 + 32);
  uint64_t v36 = -1;
  if (v35 < 64) {
    uint64_t v36 = ~(-1 << v35);
  }
  unint64_t v37 = v36 & *(void *)(v34 + 64);
  uint64_t v13 = (char *)((unint64_t)(v35 + 63) >> 6);
  swift_bridgeObjectRetain();
  a2 = 0;
  uint64_t v10 = 100;
  char v67 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v37)
    {
      unint64_t v38 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      unint64_t v39 = v38 | (a2 << 6);
      goto LABEL_33;
    }
    uint64_t v40 = a2 + 1;
    if (__OFADD__(a2, 1))
    {
      __break(1u);
      goto LABEL_59;
    }
    if (v40 >= (uint64_t)v13)
    {
LABEL_48:
      swift_release();
      swift_bridgeObjectRelease();
      char v53 = v67;
      int64_t v54 = v67[2];
      if (v54)
      {
        *(void *)&long long v72 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        sub_10013EB48(0, v54, 0);
        uint64_t v55 = (void *)v72;
        uint64_t v56 = v53 + 5;
        do
        {
          swift_bridgeObjectRetain();
          Person.Handle.init(rawValue:)();
          *(void *)&long long v72 = v55;
          unint64_t v58 = v55[2];
          unint64_t v57 = v55[3];
          if (v58 >= v57 >> 1)
          {
            sub_10013EB48(v57 > 1, v58 + 1, 1);
            uint64_t v55 = (void *)v72;
          }
          v56 += 2;
          v55[2] = v58 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))((unint64_t)v55+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v58, v8, v70);
          --v54;
        }
        while (v54);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v55 = _swiftEmptyArrayStorage;
      }
      uint64_t v59 = type metadata accessor for OfferLocationError();
      sub_100483B64(&qword_1006BFA20, (void (*)(uint64_t))&type metadata accessor for OfferLocationError);
      uint64_t v60 = swift_allocError();
      *uint64_t v61 = v55;
      (*(void (**)(void *, void, uint64_t))(*(void *)(v59 - 8) + 104))(v61, enum case for OfferLocationError.failed(_:), v59);
      *(void *)&long long v72 = v60;
      sub_10005D034(&qword_1006B92F8);
      CheckedContinuation.resume(throwing:)();
      return swift_errorRelease();
    }
    unint64_t v41 = *(void *)&v15[8 * v40];
    ++a2;
    if (!v41)
    {
      a2 = v40 + 1;
      if (v40 + 1 >= (uint64_t)v13) {
        goto LABEL_48;
      }
      unint64_t v41 = *(void *)&v15[8 * a2];
      if (!v41)
      {
        a2 = v40 + 2;
        if (v40 + 2 >= (uint64_t)v13) {
          goto LABEL_48;
        }
        unint64_t v41 = *(void *)&v15[8 * a2];
        if (!v41)
        {
          a2 = v40 + 3;
          if (v40 + 3 >= (uint64_t)v13) {
            goto LABEL_48;
          }
          unint64_t v41 = *(void *)&v15[8 * a2];
          if (!v41)
          {
            a2 = v40 + 4;
            if (v40 + 4 >= (uint64_t)v13) {
              goto LABEL_48;
            }
            unint64_t v41 = *(void *)&v15[8 * a2];
            if (!v41) {
              break;
            }
          }
        }
      }
    }
LABEL_32:
    unint64_t v37 = (v41 - 1) & v41;
    unint64_t v39 = __clz(__rbit64(v41)) + (a2 << 6);
LABEL_33:
    uint64_t v43 = (unint64_t *)(*(void *)(v34 + 48) + 16 * v39);
    unint64_t v9 = *v43;
    a1 = (void *)v43[1];
    swift_bridgeObjectRetain_n();
    uint64_t v44 = sub_100480A20(v9, (unint64_t)a1);
    if ((v45 & 1) != 0 || 100 * (v44 / 100) != 500 || v44 == 518)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (*(void *)(v34 + 16) && (unint64_t v46 = sub_100053708(v9, (uint64_t)a1), (v47 & 1) != 0))
      {
        sub_1000607C8(*(void *)(v34 + 56) + 32 * v46, (uint64_t)&v72);
      }
      else
      {
        long long v72 = 0u;
        long long v73 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v73 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t v65 = v71[1];
          os_log_t v66 = (os_log_t)v71[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v67 = sub_10007D258(0, v67[2] + 1, 1, v67);
          }
          unint64_t v9 = v67[2];
          unint64_t v48 = v67[3];
          a1 = (void *)(v9 + 1);
          if (v9 >= v48 >> 1) {
            char v67 = sub_10007D258((void *)(v48 > 1), v9 + 1, 1, v67);
          }
          os_log_t v50 = v66;
          char v49 = v67;
          v67[2] = a1;
          char v51 = &v49[2 * v9];
          uint64_t v52 = v65;
          v51[4] = v50;
          v51[5] = v52;
        }
      }
      else
      {
        sub_100003F10((uint64_t)&v72, &qword_1006AFE40);
      }
    }
  }
  uint64_t v42 = v40 + 5;
  if (v42 >= (uint64_t)v13) {
    goto LABEL_48;
  }
  unint64_t v41 = *(void *)&v15[8 * v42];
  if (v41)
  {
    a2 = v42;
    goto LABEL_32;
  }
  while (1)
  {
    a2 = v42 + 1;
    if (__OFADD__(v42, 1)) {
      break;
    }
    if (a2 >= (uint64_t)v13) {
      goto LABEL_48;
    }
    unint64_t v41 = *(void *)&v15[8 * a2];
    ++v42;
    if (v41) {
      goto LABEL_32;
    }
  }
  __break(1u);
LABEL_61:
  swift_once();
LABEL_6:
  uint64_t v26 = type metadata accessor for Logger();
  sub_1000606BC(v26, (uint64_t)qword_1006D1E98);
  unint64_t v27 = v9;
  (*(void (**)(char *, void *, unint64_t))(v10 + 16))(v15, a1, v9);
  swift_bridgeObjectRetain();
  objc_super v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = swift_slowAlloc();
    id v31 = (void *)swift_slowAlloc();
    uint64_t v70 = swift_slowAlloc();
    v71[0] = v70;
    *(_DWORD *)uint64_t v30 = 138412546;
    Class v32 = Array._bridgeToObjectiveC()().super.isa;
    *(void *)&long long v72 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v31 = v32;
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2080;
    *(void *)&long long v72 = 0;
    *((void *)&v72 + 1) = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)();
    *(void *)&long long v72 = sub_1000606F4(v72, *((unint64_t *)&v72 + 1), v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, unint64_t))(v10 + 8))(v15, v27);
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "FMAddFriendViewController: 🙏 Offered shares to %@ %s", (uint8_t *)v30, 0x16u);
    sub_10005D034((uint64_t *)&unk_1006B5A50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, unint64_t))(v10 + 8))(v15, v27);
  }

  sub_10005D034(&qword_1006B92F8);
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_10048249C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = type metadata accessor for ContactPickerViewModel.Dependencies();
  __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t))(v8 + 16))((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  *(void *)(swift_allocObject() + 16) = a4;
  swift_bridgeObjectRetain();
  id v9 = a4;
  return OfferLocationContactPickerView.init(dependencies:fromEmail:performAction:showOfferSuccess:)();
}

uint64_t sub_1004825DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v22 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v20 = *(void *)(v5 - 8);
  uint64_t v21 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v19 - v13;
  sub_10005EC68();
  uint64_t v15 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  BOOL v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v12, v8);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  aBlock[4] = sub_1004839F8;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10063DE68;
  uint64_t v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100483B64((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_10005ECA8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v21);
  return ((uint64_t (*)(char *, uint64_t))v19)(v14, v8);
}

void sub_100482978()
{
  uint64_t v0 = self;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v0 showOfferSuccessForHandles:isa];
}

uint64_t sub_1004829EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMSelectedSection();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v18 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = OBJC_IVAR____TtC6FindMy23FMInitialCardController_mediator;
  uint64_t v12 = *(void *)(*(void *)(a1 + OBJC_IVAR____TtC6FindMy23FMInitialCardController_mediator) + 56);
  uint64_t v13 = v12 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
  swift_beginAccess();
  sub_100057B04(v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = v12 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100057B04(v14, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  swift_beginAccess();
  swift_retain();
  sub_100009A88((uint64_t)v8, v14);
  swift_endAccess();
  sub_100053CA0((unint64_t)v5);
  sub_100057F34((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_100057F34((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  swift_release();
  uint64_t v15 = *(void *)(*(void *)(a1 + v11) + 56);
  sub_100057B04((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  uint64_t v16 = v15 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
  swift_beginAccess();
  swift_retain();
  sub_100009A88((uint64_t)v8, v16);
  swift_endAccess();
  sub_10024B554();
  sub_100057F34((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  swift_release();
  return sub_100057F34((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
}

void sub_100482C70()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy23FMInitialCardController_discoveryCoordinator);
}

id sub_100482CC0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMInitialCardController();
  return [super dealloc];
}

unsigned __int8 *sub_100482D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = String.init<A>(_:)();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1004830B4();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  uint64_t v11 = sub_100482E38(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_100482E38(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (Swift::Int i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1004830B4()
{
  unint64_t v0 = String.subscript.getter();
  uint64_t v4 = sub_100483134(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100483134(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_10048328C(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_100060C9C(v9, 0),
          unint64_t v12 = sub_10048338C((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = static String._uncheckedFromUTF8(_:)();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return static String._uncheckedFromUTF8(_:)();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  _StringObject.sharedUTF8.getter();
LABEL_4:

  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_10048328C(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    uint64_t result = sub_10007E26C(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    uint64_t result = sub_10007E26C(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }

  return String.UTF8View._foreignDistance(from:to:)();
}

unint64_t sub_10048338C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_10007E26C(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = String.UTF8View._foreignSubscript(position:)();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = _StringObject.sharedUTF8.getter();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_10007E26C(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = String.UTF8View._foreignIndex(after:)();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

id sub_1004835A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v6 = sub_10005D034(&qword_1006AF760);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v4[qword_1006B9B00] = 0;
  *(void *)&v4[qword_1006B9B08] = 0;
  uint64_t v9 = &v4[qword_1006B9B10];
  uint64_t v10 = type metadata accessor for FMIPSafeLocation();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = &v4[qword_1006B9B18];
  *uint64_t v11 = 0;
  v11[1] = 0;
  v4[qword_1006B9B20] = 0;
  uint64_t v12 = qword_1006B9B28;
  uint64_t v13 = v4;
  static Locale.autoupdatingCurrent.getter();
  uint64_t v14 = type metadata accessor for Locale();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 0, 1, v14);
  type metadata accessor for FMIPReverseGeocodingCache();
  swift_allocObject();
  *(void *)&v4[v12] = FMIPReverseGeocodingCache.init(preferredLocale:)();
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_1000606BC(v15, (uint64_t)qword_1006D1E98);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    unint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "FMItemsGroupViewController: Initialized", v18, 2u);
    swift_slowDealloc();
  }

  *(void *)&v13[qword_1006B9AF8] = a1;
  swift_retain();

  char v19 = (objc_class *)sub_10005D034(a2);
  v21.receiver = v13;
  v21.super_class = v19;
  return [super initWithNibName:0 bundle:0];
}

uint64_t sub_10048381C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1000D6E0C;
  return sub_1002AB690(a1, a2, v2);
}

uint64_t sub_1004838C8()
{
  return sub_10048249C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1004838D4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10048390C()
{
  return sub_1004829EC(*(void *)(v0 + 16));
}

uint64_t sub_100483914(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1000E5A7C;
  return sub_100480FC4(a1, a2, v6);
}

uint64_t sub_1004839C0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1004839F8()
{
}

uint64_t sub_100483A00(uint64_t a1)
{
  return sub_100481788(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100483A0C()
{
  uint64_t v1 = sub_10005D034(&qword_1006B92F8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100483ADC(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_10005D034(&qword_1006B92F8) - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100481910(a1, a2, v6, v7);
}

uint64_t sub_100483B64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100483BAC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FMSelectedSection();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v9 = &v18[-v8];
  uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy23FMInitialCardController_discoveryCoordinator);
  *(void *)(v1 + OBJC_IVAR____TtC6FindMy23FMInitialCardController_discoveryCoordinator) = 0;

  uint64_t v11 = OBJC_IVAR____TtC6FindMy23FMInitialCardController_mediator;
  uint64_t v12 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC6FindMy23FMInitialCardController_mediator) + 56);
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = v12 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
  swift_beginAccess();
  swift_retain();
  sub_100009A88((uint64_t)v9, v13);
  swift_endAccess();
  sub_10024B554();
  sub_100057F34((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  swift_release();
  uint64_t v14 = *(void *)(*(void *)(v2 + v11) + 56);
  uint64_t v15 = type metadata accessor for FMIPItem();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v9, a1, v15);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = v14 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100057B04(v16, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  swift_beginAccess();
  swift_retain();
  sub_100009A88((uint64_t)v9, v16);
  swift_endAccess();
  sub_100053CA0((unint64_t)v7);
  sub_100057F34((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_100057F34((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  return swift_release();
}

uint64_t sub_100483DEC()
{
  uint64_t v1 = type metadata accessor for FMSelectedSection();
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v12 - v5;
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy23FMInitialCardController_discoveryCoordinator);
  *(void *)(v0 + OBJC_IVAR____TtC6FindMy23FMInitialCardController_discoveryCoordinator) = 0;

  uint64_t v8 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC6FindMy23FMInitialCardController_mediator) + 56);
  uint64_t v9 = v8 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
  swift_beginAccess();
  sub_100057B04(v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  uint64_t v10 = v8 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100057B04(v10, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  swift_beginAccess();
  swift_retain();
  sub_100009A88((uint64_t)v6, v10);
  swift_endAccess();
  sub_100053CA0((unint64_t)v4);
  sub_100057F34((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_100057F34((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  return swift_release();
}

uint64_t sub_100483F98(uint64_t a1)
{
  return sub_10048400C(a1, qword_1006D2760);
}

uint64_t sub_100483FC4(uint64_t a1)
{
  return sub_10048400C(a1, qword_1006D2778);
}

uint64_t sub_100483FE8(uint64_t a1)
{
  return sub_10048400C(a1, qword_1006D2790);
}

uint64_t sub_10048400C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for Logger();
  sub_1000671E0(v3, a2);
  sub_1000606BC(v3, (uint64_t)a2);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100484084(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_100006060(0, &qword_1006BFA88);
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void *sub_100484128@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

dispatch_semaphore_t sub_100484148()
{
  dispatch_semaphore_t result = dispatch_semaphore_create(4);
  qword_1006BFA28 = (uint64_t)result;
  return result;
}

char *sub_1004841E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, char a11)
{
  uint64_t v66 = a7;
  double v67 = *(double *)&a8;
  uint64_t v68 = a3;
  v63[1] = a1;
  char v17 = a5 & 1;
  uint64_t v18 = sub_10005D034(&qword_1006AF730);
  __chkstk_darwin(v18 - 8);
  char v20 = (char *)v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_super v21 = &v11[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_fmfPlacemark];
  uint64_t v22 = type metadata accessor for FMFAddress();
  uint64_t v23 = *(void *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
  *(void *)&v11[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_clPlacemark] = 0;
  uint64_t v24 = OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_didReverseGeocodeGroup;
  uint64_t v25 = v11;
  *(void *)&v11[v24] = dispatch_group_create();
  uint64_t v26 = OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_geocoder;
  *(void *)&v25[v26] = [objc_allocWithZone((Class)CLGeocoder) init];
  v25[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_didZoomOnSelection] = 0;
  *(void *)&v25[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay] = 0;
  *(void *)&v25[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius] = 0x4059000000000000;
  unint64_t v27 = &v25[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_addressType];
  uint64_t v28 = type metadata accessor for FMFLocationAlertAddressType();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v64 = a6;
  uint64_t v65 = v29;
  uint64_t v30 = a6;
  uint64_t v31 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v27, v30, v28);
  v25[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_locationType] = v17;

  Class v32 = (objc_class *)type metadata accessor for FMFenceMapAnnotation();
  v69.receiver = v25;
  v69.super_class = v32;
  id v33 = [super init];
  uint64_t v34 = v33;
  if (a2)
  {
    NSString v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v35 = 0;
  }
  uint64_t v36 = v66;
  [v33 setTitle:v35];

  unint64_t v37 = v33;
  if (a4)
  {
    swift_bridgeObjectRetain();
    NSString v38 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v38 = 0;
  }
  [v33 setSubtitle:v38];

  [v33 setCoordinate:a9, a10];
  sub_100434370(v36, (uint64_t)v20);
  uint64_t v39 = (uint64_t)&v33[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_fmfPlacemark];
  swift_beginAccess();
  sub_100486940((uint64_t)v20, v39);
  swift_endAccess();
  double v40 = 100.0;
  double v41 = v67;
  if (v67 < 100.0) {
    double v41 = 100.0;
  }
  if ((a11 & 1) == 0) {
    double v40 = v41;
  }
  double v42 = fmin(v40, 241401.0);
  *(double *)&v33[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius] = v42;
  id v43 = [self circleWithCenterCoordinate:a9 radius:a10];
  uint64_t v44 = *(void **)&v33[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay];
  *(void *)&v33[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay] = v43;

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v36, 1, v22) != 1)
  {
    unint64_t v48 = v33;
    char v49 = v48;
    if (a4)
    {
LABEL_14:
      NSString v50 = String._bridgeToObjectiveC()();
LABEL_15:
      uint64_t v45 = v64;
      char v47 = &qword_1006D2000;
      swift_bridgeObjectRelease();
LABEL_16:
      uint64_t v46 = v65;
      [v49 setSubtitle:v50];

      goto LABEL_17;
    }
    id v52 = [v48 title];
    if (v52)
    {
      char v53 = v52;
      uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v56 = v55;

      uint64_t v57 = sub_100485444();
      uint64_t v59 = v58;
      if (v56)
      {
        if (v58)
        {
          if (v54 == v57 && v58 == v56)
          {
            swift_bridgeObjectRelease();
            NSString v50 = 0;
            goto LABEL_15;
          }
          char v62 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v62) {
            goto LABEL_30;
          }
          goto LABEL_27;
        }
LABEL_26:
        swift_bridgeObjectRelease();
LABEL_27:
        uint64_t v68 = sub_100485444();
        if (v61) {
          goto LABEL_14;
        }
LABEL_30:
        NSString v50 = 0;
        uint64_t v45 = v64;
        char v47 = &qword_1006D2000;
        goto LABEL_16;
      }
    }
    else
    {
      sub_100485444();
      uint64_t v59 = v60;
    }
    if (!v59) {
      goto LABEL_30;
    }
    goto LABEL_26;
  }
  swift_bridgeObjectRelease();
  uint64_t v45 = v64;
  uint64_t v46 = v65;
  char v47 = &qword_1006D2000;
LABEL_17:
  dispatch_group_enter(*(dispatch_group_t *)&v33[v47[248]]);
  sub_100484720();

  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v31);
  sub_1004343D8(v36);
  return v33;
}

uint64_t sub_100484720()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v25 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v23 = *(void *)(v5 - 8);
  uint64_t v24 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  [v0 coordinate];
  double v13 = v12;
  [v0 coordinate];
  id v15 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v13 longitude:v14];
  id v16 = [self sharedApplication];
  [v16 setNetworkActivityIndicatorVisible:1];

  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchQoS.QoSClass.default(_:), v8);
  char v17 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v1;
  *(void *)(v18 + 24) = v15;
  aBlock[4] = sub_1004868B0;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10063DFC0;
  uint64_t v19 = _Block_copy(aBlock);
  id v20 = v1;
  id v21 = v15;
  static DispatchQoS.unspecified.getter();
  uint64_t v26 = _swiftEmptyArrayStorage;
  sub_1004868B8((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_10005ECA8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v24);
  return swift_release();
}

void sub_100484B28(char *a1, uint64_t a2)
{
  if (qword_1006AE420 != -1) {
    swift_once();
  }
  OS_dispatch_semaphore.wait()();
  uint64_t v4 = *(void **)&a1[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_geocoder];
  [v4 cancelGeocode];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  v8[4] = sub_100486938;
  void v8[5] = v5;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_100484084;
  v8[3] = &unk_10063E010;
  uint64_t v6 = _Block_copy(v8);
  uint64_t v7 = a1;
  swift_release();
  [v4 reverseGeocodeLocation:a2 completionHandler:v6];
  _Block_release(v6);
}

void sub_100484C68(unint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5 = sub_10005D034(&qword_1006AF730);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v51 - v9;
  if (qword_1006AE420 != -1) {
    swift_once();
  }
  OS_dispatch_semaphore.signal()();
  id v11 = [self sharedApplication];
  [v11 setNetworkActivityIndicatorVisible:0];

  if (!a1)
  {
    [a3 setTitle:0];
    [a3 setSubtitle:0];
LABEL_48:
    dispatch_group_leave(*(dispatch_group_t *)&a3[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_didReverseGeocodeGroup]);
    return;
  }
  unint64_t v12 = a1 >> 62;
  if (!(a1 >> 62))
  {
    double v13 = *(void **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_6;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    [a3 setTitle:0];
    [a3 setSubtitle:0];
LABEL_40:
    if (v12)
    {
      swift_bridgeObjectRetain();
      double v13 = (void *)_CocoaArrayWrapper.endIndex.getter();
      if (v13) {
        goto LABEL_42;
      }
    }
    else
    {
      double v13 = *(void **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v13)
      {
LABEL_42:
        if ((a1 & 0xC000000000000001) != 0)
        {
          id v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_45;
        }
        if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v48 = *(id *)(a1 + 32);
LABEL_45:
          id v49 = v48;
          swift_bridgeObjectRelease();
          NSString v50 = *(void **)&a3[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_clPlacemark];
          *(void *)&a3[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_clPlacemark] = v49;

          goto LABEL_48;
        }
        goto LABEL_52;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_48;
  }
  swift_bridgeObjectRetain();
  double v13 = (void *)_CocoaArrayWrapper.endIndex.getter();
  if (!v13) {
    goto LABEL_39;
  }
LABEL_6:
  unint64_t v53 = a1 >> 62;
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    id v14 = *(id *)(a1 + 32);
  }
  id v15 = v14;
  swift_bridgeObjectRelease();
  id v16 = [v15 name];
  [a3 setTitle:v16];

  id v52 = v15;
  FMFAddress.init(from:)();
  uint64_t v17 = type metadata accessor for FMFAddress();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v10, 0, 1, v17);
  uint64_t v19 = (uint64_t)&a3[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_fmfPlacemark];
  swift_beginAccess();
  sub_100486940((uint64_t)v10, v19);
  swift_endAccess();
  id v20 = [a3 title];
  if (!v20)
  {
    sub_100485444();
    uint64_t v27 = v29;
LABEL_17:
    if (!v27) {
      goto LABEL_23;
    }
    goto LABEL_18;
  }
  id v21 = v20;
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;

  uint64_t v25 = sub_100485444();
  uint64_t v27 = v26;
  if (!v24) {
    goto LABEL_17;
  }
  if (!v26)
  {
LABEL_18:
    swift_bridgeObjectRelease();
LABEL_19:
    sub_100485444();
    if (v30)
    {
      NSString v28 = String._bridgeToObjectiveC()();
      goto LABEL_21;
    }
    goto LABEL_23;
  }
  if (v22 == v25 && v26 == v24)
  {
    swift_bridgeObjectRelease();
    NSString v28 = 0;
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v31 & 1) == 0) {
    goto LABEL_19;
  }
LABEL_23:
  NSString v28 = 0;
LABEL_24:
  [a3 setSubtitle:v28];

  sub_100434370(v19, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v8, 1, v17) != 1)
  {

    sub_1004343D8((uint64_t)v8);
    unint64_t v12 = v53;
    goto LABEL_40;
  }
  sub_1004343D8((uint64_t)v8);
  id v32 = v52;
  id v33 = [v52 region];
  if (!v33) {
    goto LABEL_33;
  }
  uint64_t v34 = v33;
  self;
  NSString v35 = (void *)swift_dynamicCastObjCClass();
  if (!v35)
  {

    goto LABEL_33;
  }
  [v35 radius];
  double v37 = v36;

  if (v37 <= 0.0)
  {
LABEL_33:
    id v39 = [v32 location];
    if (!v39)
    {
      double v42 = 0.0;
      unint64_t v12 = v53;
      goto LABEL_37;
    }
    double v40 = &selRef_horizontalAccuracy;
    double v13 = v39;
    unint64_t v12 = v53;
LABEL_35:
    [v39 *v40];
    double v42 = v41;

LABEL_37:
    uint64_t v43 = OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius;
    *(double *)&a3[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius] = fmin(fmax(v42, 100.0), 241401.0);
    [a3 coordinate];
    id v46 = [self circleWithCenterCoordinate:v44 radius:v45 * *(double *)&a3[v43]];
    char v47 = *(void **)&a3[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay];
    *(void *)&a3[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay] = v46;

    goto LABEL_40;
  }
  id v38 = [v32 region];
  if (v38)
  {
    double v13 = v38;
    self;
    id v39 = (id)swift_dynamicCastObjCClass();
    unint64_t v12 = v53;
    if (!v39)
    {
LABEL_53:

      goto LABEL_54;
    }
    double v40 = &selRef_radius;
    goto LABEL_35;
  }
LABEL_54:
  __break(1u);
}

void sub_100485310(double a1)
{
  uint64_t v2 = OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius;
  *(double *)&v1[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius] = fmin(fmax(a1, 100.0), 241401.0);
  [v1 coordinate];
  id v5 = [self circleWithCenterCoordinate:v3 radius:v4 * *(double *)&v1[v2]];
  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay];
  *(void *)&v1[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay] = v5;
}

uint64_t sub_100485444()
{
  uint64_t v1 = type metadata accessor for FMFAddress();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  double v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10005D034(&qword_1006AF730);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_fmfPlacemark;
  swift_beginAccess();
  sub_100434370(v8, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    sub_1004343D8((uint64_t)v7);
LABEL_4:
    v16[1] = 0;
    void v16[2] = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v12 = [self mainBundle];
    v17._uint64_t countAndFlagsBits = 0xD000000000000024;
    v17._unint64_t object = (void *)0x8000000100592B20;
    v13._unint64_t object = (void *)0x8000000100592B00;
    v13._uint64_t countAndFlagsBits = 0xD000000000000012;
    v14._uint64_t countAndFlagsBits = 0;
    v14._unint64_t object = (void *)0xE000000000000000;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v17)._countAndFlagsBits;
    swift_bridgeObjectRelease();

    return countAndFlagsBits;
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
  sub_1004343D8((uint64_t)v7);
  uint64_t countAndFlagsBits = FMFAddress.displayAddress.getter();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (!v11) {
    goto LABEL_4;
  }
  return countAndFlagsBits;
}

double sub_100485754()
{
  uint64_t v1 = type metadata accessor for FMFAddress();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  double v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10005D034(&qword_1006AF730);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FMFAddressLevelType();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  id v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  id v15 = (char *)&v31 - v14;
  __chkstk_darwin(v13);
  Swift::String v17 = (char *)&v31 - v16;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_locationType) != 1) {
    return 2000.0;
  }
  uint64_t v18 = v0 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_fmfPlacemark;
  swift_beginAccess();
  sub_100434370(v18, (uint64_t)v7);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
    sub_1004343D8((uint64_t)v7);
    FMFAddress.levelType.getter();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v17, v15, v8);
    id v21 = *(void (**)(char *, void, uint64_t))(v9 + 104);
    v21(v12, enum case for FMFAddressLevelType.street(_:), v8);
    sub_1004868B8(&qword_1006BFA80, (void (*)(uint64_t))&type metadata accessor for FMFAddressLevelType);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v23 = v32;
    uint64_t v22 = v33;
    uint64_t v24 = *(void (**)(char *, uint64_t))(v9 + 8);
    v24(v12, v8);
    if (v22 == v23)
    {
      v24(v17, v8);
      return 100.0;
    }
    v21(v12, enum case for FMFAddressLevelType.city(_:), v8);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v26 = v32;
    uint64_t v25 = v33;
    v24(v12, v8);
    if (v25 == v26)
    {
      v24(v17, v8);
      return 4000.0;
    }
    v21(v12, enum case for FMFAddressLevelType.state(_:), v8);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v28 = v32;
    uint64_t v27 = v33;
    v24(v12, v8);
    if (v27 == v28)
    {
      v24(v17, v8);
    }
    else
    {
      v21(v12, enum case for FMFAddressLevelType.country(_:), v8);
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      uint64_t v30 = v32;
      uint64_t v29 = v33;
      v24(v12, v8);
      v24(v17, v8);
      if (v29 != v30) {
        return 2000.0;
      }
    }
    return 10000.0;
  }
  sub_1004343D8((uint64_t)v7);
  return 2000.0;
}

double sub_100485C88()
{
  uint64_t v1 = type metadata accessor for FMFAddress();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  double v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10005D034(&qword_1006AF730);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FMFAddressLevelType();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  id v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  id v15 = (char *)&v31 - v14;
  __chkstk_darwin(v13);
  Swift::String v17 = (char *)&v31 - v16;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_locationType) != 1) {
    return 500.0;
  }
  uint64_t v18 = v0 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_fmfPlacemark;
  swift_beginAccess();
  sub_100434370(v18, (uint64_t)v7);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
    sub_1004343D8((uint64_t)v7);
    FMFAddress.levelType.getter();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v17, v15, v8);
    id v21 = *(void (**)(char *, void, uint64_t))(v9 + 104);
    v21(v12, enum case for FMFAddressLevelType.street(_:), v8);
    sub_1004868B8(&qword_1006BFA80, (void (*)(uint64_t))&type metadata accessor for FMFAddressLevelType);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v23 = v32;
    uint64_t v22 = v33;
    uint64_t v24 = *(void (**)(char *, uint64_t))(v9 + 8);
    v24(v12, v8);
    if (v22 == v23)
    {
      v24(v17, v8);
      return 100.0;
    }
    v21(v12, enum case for FMFAddressLevelType.city(_:), v8);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v26 = v32;
    uint64_t v25 = v33;
    v24(v12, v8);
    if (v25 == v26)
    {
      v24(v17, v8);
      return 4000.0;
    }
    v21(v12, enum case for FMFAddressLevelType.state(_:), v8);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v28 = v32;
    uint64_t v27 = v33;
    v24(v12, v8);
    if (v27 == v28)
    {
      v24(v17, v8);
    }
    else
    {
      v21(v12, enum case for FMFAddressLevelType.country(_:), v8);
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      uint64_t v30 = v32;
      uint64_t v29 = v33;
      v24(v12, v8);
      v24(v17, v8);
      if (v29 != v30) {
        return 500.0;
      }
    }
    return 10000.0;
  }
  sub_1004343D8((uint64_t)v7);
  return 500.0;
}

uint64_t sub_10048626C()
{
  uint64_t v1 = v0;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v2 = [self mainBundle];
  v12._unint64_t object = (void *)0x8000000100592BA0;
  v3._uint64_t countAndFlagsBits = 0x4E49564C4F534552;
  v3._unint64_t object = (void *)0xE900000000000047;
  v4._uint64_t countAndFlagsBits = 0;
  v4._unint64_t object = (void *)0xE000000000000000;
  v12._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v12);

  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setTitle:v5];

  [v1 coordinate];
  id v8 = [self circleWithCenterCoordinate:v6 radius:v7 * *(double *)&v1[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius]];
  uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay];
  *(void *)&v1[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay] = v8;

  dispatch_group_enter(*(dispatch_group_t *)&v1[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_didReverseGeocodeGroup]);

  return sub_100484720();
}

id sub_100486470()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFenceMapAnnotation();
  return [super dealloc];
}

uint64_t sub_100486568()
{
  return type metadata accessor for FMFenceMapAnnotation();
}

uint64_t type metadata accessor for FMFenceMapAnnotation()
{
  uint64_t result = qword_1006BFA68;
  if (!qword_1006BFA68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1004865BC()
{
  type metadata accessor for FMFLocationAlertAddressType();
  if (v0 <= 0x3F)
  {
    sub_1004866BC();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1004866BC()
{
  if (!qword_1006B9D50)
  {
    type metadata accessor for FMFAddress();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1006B9D50);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for FMFLocationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004867E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFLocationType()
{
  return &type metadata for FMFLocationType;
}

unint64_t sub_10048681C()
{
  unint64_t result = qword_1006BFA78;
  if (!qword_1006BFA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BFA78);
  }
  return result;
}

uint64_t sub_100486870()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1004868B0()
{
  sub_100484B28(*(char **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1004868B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100486900()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100486938(unint64_t a1, uint64_t a2)
{
  sub_100484C68(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_100486940(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034(&qword_1006AF730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1004869B0()
{
  uint64_t v1 = v0;
  id v2 = [v0 navigationController];
  if (v2)
  {
    int v3 = v2;
    sub_1004800D8();
  }
  id v4 = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithFrame:0.0, 0.0, 20.0, 20.0];
  uint64_t v5 = self;
  id v6 = [v5 grayColor];
  [v4 setColor:v6];

  double v7 = *(void **)&v1[OBJC_IVAR____TtC6FindMy33FMPredefinedMessageViewController_rightBarButtonItem];
  if (v7) {
    [v7 setEnabled:0];
  }
  id v8 = *(void **)&v1[OBJC_IVAR____TtC6FindMy33FMPredefinedMessageViewController_tableView];
  [v8 _setSectionContentInsetFollowsLayoutMargins:1];
  [v8 setDataSource:v1];
  [v8 setDelegate:v1];
  [v8 setScrollEnabled:0];
  [v8 setAllowsSelection:1];
  [v8 setAllowsMultipleSelection:0];
  id v9 = [v5 clearColor];
  [v8 setBackgroundColor:v9];

  [v8 setRowHeight:UITableViewAutomaticDimension];
  [v8 setEstimatedRowHeight:*(double *)&v1[OBJC_IVAR____TtC6FindMy33FMPredefinedMessageViewController_style]];
  type metadata accessor for FMPredefinedMessageTableViewCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v11 = String._bridgeToObjectiveC()();
  [v8 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v11];

  id v12 = [v1 contentView];
  [v12 addSubview:v8];
}

void sub_100486C1C()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy33FMPredefinedMessageViewController_tableView];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v2 = self;
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10055C200;
  id v4 = [v1 topAnchor];
  id v5 = [v0 contentView];
  id v6 = [v5 topAnchor];

  id v7 = [v4 constraintEqualToAnchor:v6 constant:*(double *)&v0[OBJC_IVAR____TtC6FindMy33FMPredefinedMessageViewController_style + 8]];
  *(void *)(v3 + 32) = v7;
  id v8 = [v1 bottomAnchor];
  id v9 = [v0 contentView];
  id v10 = [v9 bottomAnchor];

  id v11 = [v8 constraintEqualToAnchor:v10];
  *(void *)(v3 + 40) = v11;
  id v12 = [v1 leadingAnchor];
  id v13 = [v0 contentView];
  id v14 = [v13 leadingAnchor];

  id v15 = [v12 constraintEqualToAnchor:v14];
  *(void *)(v3 + 48) = v15;
  id v16 = [v1 trailingAnchor];
  id v17 = [v0 contentView];
  id v18 = [v17 trailingAnchor];

  id v19 = [v16 constraintEqualToAnchor:v18];
  id v20 = *(void **)&v0[OBJC_IVAR____TtC6FindMy33FMPredefinedMessageViewController_tableViewheightConstraint];
  *(void *)(v3 + 56) = v19;
  *(void *)(v3 + 64) = v20;
  specialized Array._endMutation()();
  sub_100006060(0, (unint64_t *)&qword_1006AEE60);
  id v21 = v20;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];
}

uint64_t sub_10048709C(void *a1)
{
  NSString v3 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v5 = (char *)[a1 dequeueReusableCellWithIdentifier:v3 forIndexPath:isa];

  id v6 = (objc_class *)type metadata accessor for FMPredefinedMessageTableViewCell();
  uint64_t v7 = swift_dynamicCastClass();
  if (v7)
  {
    id v8 = (char *)v7;
    uint64_t v9 = IndexPath.section.getter();
    id v5 = (char *)OBJC_IVAR____TtC6FindMy33FMPredefinedMessageViewController_messages;
    if (v9 >= *(void *)(*(void *)(v1 + OBJC_IVAR____TtC6FindMy33FMPredefinedMessageViewController_messages) + 16)) {
      return (uint64_t)v8;
    }
    unint64_t v10 = IndexPath.section.getter();
    if ((v10 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v11 = *(void *)&v5[v1];
      if (v10 < *(void *)(v11 + 16))
      {
        uint64_t v12 = v11 + 16 * v10;
        uint64_t v13 = *(void *)(v12 + 40);
        id v14 = &v8[OBJC_IVAR____TtC6FindMy32FMPredefinedMessageTableViewCell_message];
        *(void *)id v14 = *(void *)(v12 + 32);
        *((void *)v14 + 1) = v13;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v19.receiver = v8;
        v19.super_class = v6;
        id v15 = [super textLabel];
        if (v15)
        {
          id v16 = v15;
          if (*((void *)v14 + 1))
          {
            swift_bridgeObjectRetain();
            NSString v17 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
          }
          else
          {
            NSString v17 = 0;
          }
          [v16 setText:v17];
        }
        return (uint64_t)v8;
      }
    }
    __break(1u);
  }

  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004873A0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v45 = a3;
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v37 = &v35[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_10005D034(&qword_1006BFB00);
  __chkstk_darwin(v8);
  unint64_t v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_10005D034(&qword_1006AF770);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  double v40 = &v35[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __chkstk_darwin(v12);
  id v16 = &v35[-v15];
  __chkstk_darwin(v14);
  id v18 = &v35[-v17];
  objc_super v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v44 = a2;
  double v41 = v19;
  uint64_t v42 = v6 + 16;
  v19((uint64_t)&v35[-v17], a2, v5);
  id v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  uint64_t v21 = 1;
  v20((uint64_t)v18, 0, 1, v5);
  id v38 = a1;
  id v22 = [a1 indexPathForSelectedRow];
  if (v22)
  {
    uint64_t v23 = v22;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v21 = 0;
  }
  uint64_t v43 = v20;
  v20((uint64_t)v16, v21, 1, v5);
  uint64_t v24 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_100487E8C((uint64_t)v18, (uint64_t)v10);
  sub_100487E8C((uint64_t)v16, v24);
  uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v25((uint64_t)v10, 1, v5) != 1)
  {
    uint64_t v28 = v40;
    sub_100487E8C((uint64_t)v10, (uint64_t)v40);
    if (v25(v24, 1, v5) != 1)
    {
      uint64_t v29 = v37;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 32))(v37, v24, v5);
      sub_1004881E8((unint64_t *)&unk_1006B8940, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      int v36 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v30 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
      v30(v29, v5);
      sub_100003F10((uint64_t)v16, &qword_1006AF770);
      sub_100003F10((uint64_t)v18, &qword_1006AF770);
      v30(v28, v5);
      sub_100003F10((uint64_t)v10, &qword_1006AF770);
      uint64_t v27 = v43;
      if (v36) {
        goto LABEL_10;
      }
LABEL_11:
      uint64_t v33 = v45;
      v41(v45, v44, v5);
      uint64_t v32 = 0;
      return v27(v33, v32, 1, v5);
    }
    sub_100003F10((uint64_t)v16, &qword_1006AF770);
    sub_100003F10((uint64_t)v18, &qword_1006AF770);
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v28, v5);
    uint64_t v27 = v43;
LABEL_8:
    sub_100003F10((uint64_t)v10, &qword_1006BFB00);
    goto LABEL_11;
  }
  sub_100003F10((uint64_t)v16, &qword_1006AF770);
  sub_100003F10((uint64_t)v18, &qword_1006AF770);
  unsigned int v26 = v25(v24, 1, v5);
  uint64_t v27 = v43;
  if (v26 != 1) {
    goto LABEL_8;
  }
  sub_100003F10((uint64_t)v10, &qword_1006AF770);
LABEL_10:
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [v38 deselectRowAtIndexPath:isa animated:0];

  [*(id *)(v39 + OBJC_IVAR____TtC6FindMy33FMPredefinedMessageViewController_rightBarButtonItem) setEnabled:0];
  uint64_t v32 = 1;
  uint64_t v33 = v45;
  return v27(v33, v32, 1, v5);
}

void sub_100487A28(void *a1)
{
  uint64_t v3 = type metadata accessor for IndexPath();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10005D034(&qword_1006AF770);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy33FMPredefinedMessageViewController_rightBarButtonItem);
  if (v10)
  {
    id v11 = v10;
    id v12 = [a1 indexPathForSelectedRow];
    if (v12)
    {
      uint64_t v13 = v12;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v6, v3);
      uint64_t v14 = 1;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) != 1) {
        goto LABEL_7;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, 1, 1, v3);
    }
    uint64_t v14 = 0;
LABEL_7:
    sub_100003F10((uint64_t)v9, &qword_1006AF770);
    [v11 setEnabled:v14];
  }
}

id sub_100487D80()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPredefinedMessageViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for FMPredefinedMessageViewController()
{
  return self;
}

ValueMetadata *type metadata accessor for FMPredefinedMessageViewStyle()
{
  return &type metadata for FMPredefinedMessageViewStyle;
}

uint64_t sub_100487E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034(&qword_1006AF770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100487EF4()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v9 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v0;
  aBlock[4] = sub_100089F58;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10063E0F0;
  id v11 = _Block_copy(aBlock);
  id v12 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1004881E8((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_10005ECA8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1004881B0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004881E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_100488230(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, double a6, double a7)
{
  sub_10002CEB8(a1, a1[3]);
  uint64_t v14 = _bridgeAnythingToObjectiveC<A>(_:)();
  uint64_t v15 = a4[3];
  if (v15)
  {
    id v16 = sub_10002CEB8(a4, a4[3]);
    uint64_t v24 = a5;
    uint64_t v25 = a2;
    uint64_t v17 = a3;
    uint64_t v18 = *(void *)(v15 - 8);
    __chkstk_darwin(v16);
    id v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v18 + 16))(v20);
    uint64_t v21 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v15);
    a3 = v17;
    a5 = v24;
    a2 = v25;
    sub_10002CEFC((uint64_t)a4);
  }
  else
  {
    uint64_t v21 = 0;
  }
  id v22 = [(id)swift_getObjCClassFromMetadata() constraintWithItem:v14 attribute:a2 relatedBy:a3 toItem:v21 attribute:a5 multiplier:a6 constant:a7];
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_10002CEFC((uint64_t)a1);
  return v22;
}

double sub_100488404()
{
  uint64_t v0 = self;
  uint64_t v1 = UIFontTextStyleHeadline;
  uint64_t v2 = UIFontTextStyleSubheadline;
  id v3 = [v0 systemBlueColor];
  id v4 = [v0 labelColor];
  id v5 = [v0 secondaryLabelColor];
  qword_1006BFB08 = (uint64_t)v1;
  unk_1006BFB10 = v2;
  qword_1006BFB18 = (uint64_t)v3;
  unk_1006BFB20 = v4;
  qword_1006BFB28 = (uint64_t)v5;
  unk_1006BFB30 = 32;
  qword_1006BFB38 = 0xE100000000000000;
  unk_1006BFB40 = xmmword_1005694E0;
  unk_1006BFB50 = xmmword_1005629B0;
  double result = 0.0;
  unk_1006BFB60 = xmmword_10055E5C0;
  qword_1006BFB70 = 0x4024000000000000;
  return result;
}

id sub_100488504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = &v3[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell__style];
  uint64_t v6 = qword_1006AE428;
  uint64_t v7 = v3;
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)qword_1006BFB08;
  uint64_t v9 = (void *)unk_1006BFB10;
  uint64_t v10 = (void *)qword_1006BFB18;
  id v11 = (void *)unk_1006BFB20;
  uint64_t v13 = (void *)qword_1006BFB28;
  uint64_t v12 = unk_1006BFB30;
  uint64_t v14 = qword_1006BFB38;
  uint64_t v15 = qword_1006BFB70;
  long long v16 = unk_1006BFB40;
  long long v17 = unk_1006BFB50;
  long long v18 = unk_1006BFB60;
  *(void *)id v5 = qword_1006BFB08;
  *((void *)v5 + 1) = v9;
  *((void *)v5 + 2) = v10;
  *((void *)v5 + 3) = v11;
  *((void *)v5 + 4) = v13;
  *((void *)v5 + 5) = v12;
  *((void *)v5 + 6) = v14;
  *(_OWORD *)(v5 + 56) = v16;
  *(_OWORD *)(v5 + 72) = v17;
  *(_OWORD *)(v5 + 88) = v18;
  *((void *)v5 + 13) = v15;
  uint64_t v19 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_monogramImageView;
  id v20 = objc_allocWithZone((Class)UIImageView);
  id v21 = v8;
  id v22 = v9;
  id v23 = v10;
  id v24 = v11;
  id v25 = v13;
  swift_bridgeObjectRetain();
  *(void *)&v7[v19] = [v20 init];
  uint64_t v26 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabel;
  *(void *)&v7[v26] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v7[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithoutImageConstraint] = 0;
  *(void *)&v7[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithImageConstraint] = 0;
  uint64_t v27 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_handleLabel;
  *(void *)&v7[v27] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v7[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_isInNetworkOperation] = 0;
  *(void *)&v7[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_recipient] = 0;

  if (a3)
  {
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v28 = 0;
  }
  v33.receiver = v7;
  v33.super_class = (Class)type metadata accessor for FMRecipientTableViewCell();
  id v29 = [super initWithStyle:a1 reuseIdentifier:v28];

  id v30 = v29;
  sub_10048876C();
  sub_1004888CC();

  return v30;
}

void sub_10048876C()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_monogramImageView;
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_monogramImageView] setContentMode:2];
  id v2 = [v0 contentView];
  [v2 addSubview:*(void *)&v0[v1]];

  uint64_t v3 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabel;
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabel] setAdjustsFontForContentSizeCategory:1];
  [*(id *)&v0[v3] setNumberOfLines:0];
  [*(id *)&v0[v3] setAdjustsFontForContentSizeCategory:1];
  id v4 = [v0 contentView];
  [v4 addSubview:*(void *)&v0[v3]];

  uint64_t v5 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_handleLabel;
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_handleLabel] setAdjustsFontForContentSizeCategory:1];
  [*(id *)&v0[v5] setNumberOfLines:0];
  [*(id *)&v0[v5] setAdjustsFontForContentSizeCategory:1];
  id v6 = [v0 contentView];
  [v6 addSubview:*(void *)&v0[v5]];
}

void sub_1004888CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_monogramImageView;
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_monogramImageView] setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v3 = self;
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10055B950;
  id v5 = [*(id *)&v0[v2] centerYAnchor];
  id v6 = [v0 contentView];
  id v7 = [v6 centerYAnchor];

  id v8 = [v5 constraintEqualToAnchor:v7];
  *(void *)(v4 + 32) = v8;
  id v9 = [*(id *)&v0[v2] leadingAnchor];
  id v10 = [v0 contentView];
  id v11 = [v10 leadingAnchor];

  uint64_t v12 = (double *)&v0[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell__style];
  id v13 = [v9 constraintEqualToAnchor:v11 constant:*(double *)&v0[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell__style + 64]];

  *(void *)(v4 + 40) = v13;
  sub_100006060(0, (unint64_t *)&qword_1006AEE60);
  uint64_t v14 = *(void **)&v0[v2];
  uint64_t v15 = sub_100006060(0, (unint64_t *)&unk_1006BFBE0);
  uint64_t v66 = v15;
  v65[0] = v14;
  long long v63 = 0u;
  long long v64 = 0u;
  double v16 = v12[7];
  id v17 = v14;
  *(void *)(v4 + 48) = sub_100488230(v65, 7, 0, &v63, 0, 1.0, v16);
  long long v18 = *(void **)&v1[v2];
  uint64_t v66 = v15;
  v65[0] = v18;
  long long v63 = 0u;
  long long v64 = 0u;
  id v19 = v18;
  *(void *)(v4 + 56) = sub_100488230(v65, 8, 0, &v63, 0, 1.0, v16);
  v65[0] = v4;
  specialized Array._endMutation()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v61 = v3;
  [v3 activateConstraints:isa];

  uint64_t v21 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabel;
  [*(id *)&v1[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabel] setTranslatesAutoresizingMaskIntoConstraints:0];
  id v22 = [*(id *)&v1[v21] leadingAnchor];
  id v23 = [v1 contentView];
  id v24 = [v23 leadingAnchor];

  double v25 = v12[9];
  id v26 = [v22 constraintEqualToAnchor:v24 constant:v25];

  uint64_t v27 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithoutImageConstraint;
  NSString v28 = *(void **)&v1[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithoutImageConstraint];
  *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithoutImageConstraint] = v26;

  id v29 = [*(id *)&v1[v21] leadingAnchor];
  id v30 = [*(id *)&v1[v2] trailingAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30 constant:v25];

  uint64_t v32 = *(void **)&v1[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithImageConstraint];
  *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithImageConstraint] = v31;

  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_10055C1F0;
  id v34 = [*(id *)&v1[v21] topAnchor];
  id v35 = [v1 contentView];
  id v36 = [v35 topAnchor];

  id v37 = [v34 constraintEqualToAnchor:v36 constant:v12[10]];
  *(void *)(v33 + 32) = v37;
  id v38 = *(void **)&v1[v27];
  if (v38)
  {
    *(void *)(v33 + 40) = v38;
    uint64_t v39 = *(void **)&v1[v21];
    id v40 = v38;
    id v41 = [v39 trailingAnchor];
    id v42 = [v1 contentView];
    id v43 = [v42 trailingAnchor];

    id v44 = [v41 constraintEqualToAnchor:v43 constant:-v12[11]];
    *(void *)(v33 + 48) = v44;
    v65[0] = v33;
    specialized Array._endMutation()();
    Class v45 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v61 activateConstraints:v45];

    uint64_t v46 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_handleLabel;
    [*(id *)&v1[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_handleLabel] setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_10055B950;
    id v48 = [*(id *)&v1[v46] topAnchor];
    id v49 = [*(id *)&v1[v21] bottomAnchor];
    id v50 = [v48 constraintEqualToAnchor:v49 constant:v12[12]];

    *(void *)(v47 + 32) = v50;
    id v51 = [*(id *)&v1[v46] bottomAnchor];
    id v52 = [v1 contentView];
    id v53 = [v52 bottomAnchor];

    id v54 = [v51 constraintEqualToAnchor:v53 constant:-v12[13]];
    *(void *)(v47 + 40) = v54;
    id v55 = [*(id *)&v1[v46] leadingAnchor];
    id v56 = [*(id *)&v1[v21] leadingAnchor];
    id v57 = [v55 constraintEqualToAnchor:v56];

    *(void *)(v47 + 48) = v57;
    id v58 = [*(id *)&v1[v46] trailingAnchor];
    id v59 = [*(id *)&v1[v21] trailingAnchor];
    id v60 = [v58 constraintEqualToAnchor:v59];

    *(void *)(v47 + 56) = v60;
    v65[0] = v47;
    specialized Array._endMutation()();
    Class v62 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v61 activateConstraints:v62];
  }
  else
  {
    __break(1u);
  }
}

void sub_100489048()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for FMRecipientTableViewCell();
  [super prepareForReuse];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabel];
  uint64_t v2 = self;
  id v3 = v1;
  id v4 = [v2 labelColor];
  [v3 setTextColor:v4];

  uint64_t v5 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_isInNetworkOperation;
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_isInNetworkOperation] cancel];
  id v6 = *(void **)&v0[v5];
  *(void *)&v0[v5] = 0;
}

void sub_100489154(char a1)
{
  uint64_t v2 = v1;
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_recipient);
  if (v3)
  {
    sub_10005D034((uint64_t *)&unk_1006B4290);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10055B970;
    *(void *)(inited + 32) = NSFontAttributeName;
    id v6 = self;
    objc_super v7 = (void *)(v2 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell__style);
    uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell__style);
    Class v62 = v3;
    id v9 = NSFontAttributeName;
    id v10 = [v6 preferredFontForTextStyle:v8];
    uint64_t v11 = sub_100006060(0, (unint64_t *)&qword_1006AF348);
    *(void *)(inited + 64) = v11;
    *(void *)(inited + 40) = v10;
    sub_10014BF88(inited);
    uint64_t v12 = swift_initStackObject();
    *(_OWORD *)(v12 + 16) = xmmword_10055B970;
    *(void *)(v12 + 32) = v9;
    uint64_t v13 = v7[1];
    uint64_t v14 = v9;
    id v15 = [v6 preferredFontForTextStyle:v13];
    *(void *)(v12 + 64) = v11;
    *(void *)(v12 + 40) = v15;
    sub_10014BF88(v12);
    double v16 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabel);
    if (a1)
    {
      id v17 = (void *)v7[2];
      [v16 setTextColor:v17];
      uint64_t v18 = sub_100006060(0, (unint64_t *)&qword_1006B7C80);
      uint64_t v65 = v18;
      *(void *)&long long v64 = v17;
      sub_100053C2C(&v64, v63);
      id v19 = NSForegroundColorAttributeName;
      id v20 = v17;
    }
    else
    {
      [v16 setTextColor:v7[3]];
      id v24 = (void *)v7[4];
      uint64_t v18 = sub_100006060(0, (unint64_t *)&qword_1006B7C80);
      uint64_t v65 = v18;
      *(void *)&long long v64 = v24;
      sub_100053C2C(&v64, v63);
      id v19 = NSForegroundColorAttributeName;
      id v20 = v24;
    }
    double v25 = v20;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1001B8BCC(v63, v19, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
    uint64_t v65 = v18;
    *(void *)&long long v64 = v25;
    sub_100053C2C(&v64, v63);
    id v27 = v25;
    NSString v28 = v19;
    char v29 = swift_isUniquelyReferenced_nonNull_native();
    sub_1001B8BCC(v63, v28, v29);

    swift_bridgeObjectRelease();
    id v60 = v7;
    if (*(void *)&v62[OBJC_IVAR____TtC6FindMy11FMRecipient_fullName + 8])
    {
      id v30 = objc_allocWithZone((Class)NSMutableAttributedString);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      NSString v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_100045C7C((unint64_t *)&qword_1006AEA20, type metadata accessor for Key);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v33 = [v30 initWithString:v31 attributes:isa];

      uint64_t v34 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabel;
      [*(id *)(v2 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabel) setTextAlignment:4];
      id v61 = v33;
      [*(id *)(v2 + v34) setAttributedText:v33];
      id v35 = objc_allocWithZone((Class)NSMutableAttributedString);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      NSString v36 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      Class v37 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v38 = [v35 initWithString:v36 attributes:v37];

      unint64_t v39 = *(void *)&v62[OBJC_IVAR____TtC6FindMy11FMRecipient_label + 8];
      if (v39)
      {
        uint64_t v40 = HIBYTE(v39) & 0xF;
        if ((v39 & 0x2000000000000000) == 0) {
          uint64_t v40 = *(void *)&v62[OBJC_IVAR____TtC6FindMy11FMRecipient_label] & 0xFFFFFFFFFFFFLL;
        }
        if (v40)
        {
          uint64_t v41 = v60[5];
          id v42 = (void *)v60[6];
          *(void *)&long long v64 = *(void *)&v62[OBJC_IVAR____TtC6FindMy11FMRecipient_label];
          *((void *)&v64 + 1) = v39;
          swift_bridgeObjectRetain();
          v43._uint64_t countAndFlagsBits = v41;
          v43._unint64_t object = v42;
          String.append(_:)(v43);
          id v44 = objc_allocWithZone((Class)NSAttributedString);
          swift_bridgeObjectRetain();
          NSString v45 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          Class v46 = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          id v47 = [v44 initWithString:v45 attributes:v46];

          [v38 insertAttributedString:v47 atIndex:0];
        }
      }
      uint64_t v48 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_handleLabel;
      [*(id *)(v2 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_handleLabel) setTextAlignment:4];
      [*(id *)(v2 + v48) setAttributedText:v38];
      id v49 = *(void **)&v62[OBJC_IVAR____TtC6FindMy11FMRecipient_monogram];
      if (!v49)
      {
        id v57 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithoutImageConstraint);
        if (v57)
        {
          [v57 setActive:1];
          id v58 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithImageConstraint);
          if (v58)
          {
            id v59 = v58;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            [v59 setActive:0];

            id v55 = *(id *)(v2 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_monogramImageView);
            [v55 setImage:0];
            goto LABEL_23;
          }
          goto LABEL_30;
        }
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
        return;
      }
      id v50 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithoutImageConstraint);
      if (v50)
      {
        id v51 = v49;
        [v50 setActive:0];
        id v52 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithImageConstraint);
        if (v52)
        {
          id v53 = v52;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          [v53 setActive:1];

          id v54 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_monogramImageView);
          id v55 = v51;
          id v56 = v54;
          [v56 setImage:v55];

LABEL_23:
          return;
        }
        goto LABEL_26;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v21 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithoutImageConstraint);
  if (!v21)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  [v21 setActive:1];
  id v22 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithImageConstraint);
  if (!v22)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  [v22 setActive:0];
  [*(id *)(v1 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabel) setText:0];
  [*(id *)(v1 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_handleLabel) setText:0];
  id v23 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_monogramImageView);

  [v23 setImage:0];
}

void sub_1004898FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_isInNetworkOperation;
  [*(id *)&v1[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_isInNetworkOperation] cancel];
  id v3 = *(void **)&v1[v2];
  *(void *)&v1[v2] = 0;

  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_recipient];
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v4 + OBJC_IVAR____TtC6FindMy11FMRecipient_handle);
    uint64_t v6 = *v5;
    uint64_t v7 = v5[1];
    id v8 = objc_allocWithZone((Class)type metadata accessor for FMReachabilityOperation());
    swift_bridgeObjectRetain_n();
    uint64_t v13 = (char *)sub_10048A534(v6, v7, 0, 1);
    id v9 = (uint64_t (*)(uint64_t))swift_allocObject();
    *((void *)v9 + 2) = v1;
    *((void *)v9 + 3) = v6;
    *((void *)v9 + 4) = v7;
    id v10 = (uint64_t (**)(uint64_t))&v13[qword_1006B14F8];
    uint64_t v11 = *(void *)&v13[qword_1006B14F8];
    void *v10 = sub_10048A2D4;
    v10[1] = v9;
    uint64_t v12 = v1;
    sub_100036B90(v11);
    [v13 start];
  }
}

uint64_t sub_100489A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a3;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v22 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)a1;
  char v13 = *(unsigned char *)(a1 + 8);
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v12;
  *(unsigned char *)(v16 + 24) = v13;
  *(void *)(v16 + 32) = v20;
  *(void *)(v16 + 40) = a4;
  *(void *)(v16 + 48) = v15;
  aBlock[4] = sub_10048A364;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10063E240;
  id v17 = _Block_copy(aBlock);
  sub_100194AD0(v12, v13);
  swift_bridgeObjectRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100045C7C((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_10005ECA8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v21);
}

void sub_100489D50(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a2 & 1;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_100073AC0(a1, v7, a3, a4);
  LOBYTE(a1) = v9;
  swift_bridgeObjectRelease();
  if (a1)
  {
    sub_10019541C(v8, 1);
    char v10 = 0;
  }
  else
  {
    char v10 = v8 & 1;
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = (void *)Strong;
    sub_100489154(v10);
  }
}

void sub_100489E14()
{
  id v1 = [self sharedApplication];
  id v2 = [v1 preferredContentSizeCategory];

  LOBYTE(v1) = UIContentSizeCategory.isAccessibilityCategory.getter();
  BOOL v3 = (v1 & 1) == 0;
  [*(id *)(v0 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabel) setNumberOfLines:v3];
  [*(id *)(v0 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_handleLabel) setNumberOfLines:v3];
  sub_100489154(0);

  sub_1004898FC();
}

id sub_100489EDC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMRecipientTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for FMRecipientTableViewCell()
{
  return self;
}

uint64_t destroy for FMRecipientTableViewCellStyle(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FMRecipientTableViewCellStyle(uint64_t a1, uint64_t a2)
{
  BOOL v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  uint64_t v8 = *(void **)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  id v9 = v3;
  id v10 = v4;
  id v11 = v5;
  id v12 = v6;
  id v13 = v8;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMRecipientTableViewCellStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  id v10 = *(void **)(a2 + 16);
  id v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  id v13 = *(void **)(a2 + 24);
  uint64_t v14 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v13;
  id v15 = v13;

  uint64_t v16 = *(void **)(a2 + 32);
  id v17 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v16;
  id v18 = v16;

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t assignWithTake for FMRecipientTableViewCellStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  id v6 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

ValueMetadata *type metadata accessor for FMRecipientTableViewCellStyle()
{
  return &type metadata for FMRecipientTableViewCellStyle;
}

uint64_t sub_10048A294()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10048A2D4(uint64_t a1)
{
  return sub_100489A38(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10048A2E0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10048A318()
{
  sub_100194A14(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_10048A364()
{
  sub_100489D50(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_10048A378()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell__style;
  if (qword_1006AE428 != -1) {
    swift_once();
  }
  objc_super v2 = &v0[v1];
  BOOL v3 = (void *)qword_1006BFB08;
  uint64_t v4 = (void *)unk_1006BFB10;
  uint64_t v5 = (void *)qword_1006BFB18;
  id v6 = (void *)unk_1006BFB20;
  uint64_t v8 = (void *)qword_1006BFB28;
  uint64_t v7 = unk_1006BFB30;
  uint64_t v9 = qword_1006BFB38;
  uint64_t v10 = qword_1006BFB70;
  long long v11 = unk_1006BFB40;
  long long v12 = unk_1006BFB50;
  long long v13 = unk_1006BFB60;
  *(void *)objc_super v2 = qword_1006BFB08;
  *((void *)v2 + 1) = v4;
  *((void *)v2 + 2) = v5;
  *((void *)v2 + 3) = v6;
  *((void *)v2 + 4) = v8;
  *((void *)v2 + 5) = v7;
  *((void *)v2 + 6) = v9;
  *(_OWORD *)(v2 + 56) = v11;
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *((void *)v2 + 13) = v10;
  uint64_t v14 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_monogramImageView;
  id v15 = objc_allocWithZone((Class)UIImageView);
  id v16 = v3;
  id v17 = v4;
  id v18 = v5;
  id v19 = v6;
  id v20 = v8;
  swift_bridgeObjectRetain();
  *(void *)&v0[v14] = [v15 init];
  uint64_t v21 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabel;
  *(void *)&v0[v21] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v0[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithoutImageConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithImageConstraint] = 0;
  uint64_t v22 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_handleLabel;
  *(void *)&v0[v22] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v0[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_isInNetworkOperation] = 0;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_recipient] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10048A520(uint64_t *a1, uint64_t a2)
{
  return sub_10048C188(*a1, a1[1], *(void *)a2, *(void *)(a2 + 8));
}

id sub_10048A534(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v26 = a4;
  uint64_t v27 = a3;
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v22 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v5 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v9);
  uint64_t v10 = &v4[qword_1006BFBF8];
  *(void *)uint64_t v10 = 0;
  v10[8] = 1;
  uint64_t v11 = qword_1006BFC00;
  long long v12 = v4;
  dispatch_group_t v23 = dispatch_group_create();
  *(void *)&v4[v11] = v23;
  *(void *)&v12[qword_1006BFC08] = 0;
  *(void *)&v12[qword_1006BFC10] = 0;
  uint64_t v21 = qword_1006BFC18;
  v20[1] = sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  char v29 = _swiftEmptyArrayStorage;
  sub_100046C00((unint64_t *)&unk_1006AE490, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10005D034((uint64_t *)&unk_1006B6C50);
  sub_100045050((unint64_t *)&unk_1006AE4A0, (uint64_t *)&unk_1006B6C50);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  static DispatchQoS.unspecified.getter();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v22);
  *(void *)&v12[v21] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v12[qword_1006BFC20] = 0;
  v12[qword_1006BFC28] = 0;
  v12[qword_1006BFC30] = 0;
  *(void *)&v12[qword_1006BFC38] = 0;
  uint64_t v13 = qword_1006BFC40;
  *(void *)&v12[v13] = sub_10014C1F8((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v12[qword_1006BFC48] = 0;
  sub_10005D034((uint64_t *)&unk_1006AEE90);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10055B970;
  uint64_t v15 = v25;
  *(void *)(v14 + 32) = v24;
  *(void *)(v14 + 40) = v15;
  *(void *)&v12[qword_1006BFBF0] = v14;
  uint64_t v16 = 0x4024000000000000;
  if ((v26 & 1) == 0) {
    uint64_t v16 = v27;
  }
  *(void *)uint64_t v10 = v16;
  v10[8] = 0;
  id v17 = v23;
  dispatch_group_enter(v17);

  id v18 = (objc_class *)type metadata accessor for FMReachabilityOperation();
  v28.receiver = v12;
  v28.super_class = v18;
  return [super init];
}

id sub_10048A8CC(uint64_t a1, uint64_t a2, int a3)
{
  int v23 = a3;
  uint64_t v24 = a2;
  uint64_t v22 = a1;
  uint64_t v21 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v4 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v8);
  uint64_t v9 = &v3[qword_1006BFBF8];
  *(void *)uint64_t v9 = 0;
  v9[8] = 1;
  uint64_t v10 = qword_1006BFC00;
  uint64_t v11 = v3;
  dispatch_group_t v12 = dispatch_group_create();
  *(void *)&v3[v10] = v12;
  *(void *)&v11[qword_1006BFC08] = 0;
  *(void *)&v11[qword_1006BFC10] = 0;
  uint64_t v19 = qword_1006BFC18;
  dispatch_group_t v20 = v12;
  uint64_t v18 = sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  int v26 = _swiftEmptyArrayStorage;
  sub_100046C00((unint64_t *)&unk_1006AE490, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10005D034((uint64_t *)&unk_1006B6C50);
  sub_100045050((unint64_t *)&unk_1006AE4A0, (uint64_t *)&unk_1006B6C50);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  static DispatchQoS.unspecified.getter();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v21);
  *(void *)&v11[v19] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v11[qword_1006BFC20] = 0;
  v11[qword_1006BFC28] = 0;
  v11[qword_1006BFC30] = 0;
  *(void *)&v11[qword_1006BFC38] = 0;
  uint64_t v13 = qword_1006BFC40;
  *(void *)&v11[v13] = sub_10014C1F8((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v11[qword_1006BFC48] = 0;
  *(void *)&v11[qword_1006BFBF0] = v22;
  uint64_t v14 = 0x4024000000000000;
  if ((v23 & 1) == 0) {
    uint64_t v14 = v24;
  }
  *(void *)uint64_t v9 = v14;
  v9[8] = 0;
  uint64_t v15 = v20;
  dispatch_group_enter(v15);

  uint64_t v16 = (objc_class *)type metadata accessor for FMReachabilityOperation();
  v25.receiver = v11;
  v25.super_class = v16;
  return [super init];
}

uint64_t sub_10048AC34(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + qword_1006BFC48);
  if (v3)
  {
    swift_errorRetain();
    a2(v3, 1);
    return swift_errorRelease();
  }
  else
  {
    unint64_t v5 = *(void *)(a1 + qword_1006BFC38);
    if (v5) {
      unint64_t v6 = v5;
    }
    else {
      unint64_t v6 = sub_10014CC70((uint64_t)_swiftEmptyArrayStorage);
    }
    swift_bridgeObjectRetain();
    a2(v6, 0);
    return swift_bridgeObjectRelease();
  }
}

void sub_10048AD00()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (unsigned char *)Strong;
    uint64_t v2 = qword_1006BFC28;
    if ((*(unsigned char *)(Strong + qword_1006BFC28) & 1) == 0
      && (*(unsigned char *)(Strong + qword_1006BFC20) & 1) == 0
      && (*(unsigned char *)(Strong + qword_1006BFC30) & 1) == 0)
    {
      [*(id *)(Strong + qword_1006BFC08) invalidate];
      sub_10048DB28();
      uint64_t v3 = swift_allocError();
      *uint64_t v4 = xmmword_100565100;
      *(void *)&v1[qword_1006BFC48] = v3;
      swift_errorRelease();
      v1[v2] = 1;
      if (qword_1006AE190 != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      sub_1000606BC(v5, (uint64_t)qword_1006D1E98);
      unint64_t v6 = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMReachabilityOperation: timed out", v8, 2u);
        swift_slowDealloc();
      }

      dispatch_group_leave(*(dispatch_group_t *)&v1[qword_1006BFC00]);
    }
  }
}

uint64_t sub_10048AEAC()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_10048AF74()
{
  uint64_t v1 = *(NSObject **)&v0[qword_1006BFC18];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_10048DC78;
  *(void *)(v3 + 24) = v2;
  v8[4] = sub_100024A90;
  void v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_100024A40;
  v8[3] = &unk_10063E3D0;
  uint64_t v4 = _Block_copy(v8);
  uint64_t v5 = v0;
  swift_retain();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

void sub_10048B0C8(char *a1)
{
  if ((a1[qword_1006BFC28] & 1) == 0)
  {
    uint64_t v2 = qword_1006BFC20;
    if ((a1[qword_1006BFC20] & 1) == 0 && (a1[qword_1006BFC30] & 1) == 0)
    {
      v8.receiver = a1;
      v8.super_class = (Class)type metadata accessor for FMReachabilityOperation();
      [super cancel];
      if (*(void *)&a1[qword_1006BFC10])
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        OS_dispatch_source.cancel()();
        swift_unknownObjectRelease();
      }
      [*(id *)&a1[qword_1006BFC08] invalidate];
      type metadata accessor for CancellationError();
      sub_100046C00((unint64_t *)&qword_1006BFF50, (void (*)(uint64_t))&type metadata accessor for CancellationError);
      uint64_t v3 = swift_allocError();
      CancellationError.init()();
      *(void *)&a1[qword_1006BFC48] = v3;
      swift_errorRelease();
      a1[v2] = 1;
      if (qword_1006AE190 != -1) {
        swift_once();
      }
      uint64_t v4 = type metadata accessor for Logger();
      sub_1000606BC(v4, (uint64_t)qword_1006D1E98);
      uint64_t v5 = Logger.logObject.getter();
      os_log_type_t v6 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v5, v6))
      {
        os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v7 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, v6, "FMReachabilityOperation: cancelled", v7, 2u);
        swift_slowDealloc();
      }

      dispatch_group_leave(*(dispatch_group_t *)&a1[qword_1006BFC00]);
    }
  }
}

void sub_10048B2D0(void *a1)
{
  id v1 = a1;
  sub_10048AF74();
}

void sub_10048B318()
{
}

uint64_t sub_10048B348()
{
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_errorRelease();
}

id sub_10048B3E8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMReachabilityOperation();
  return [super dealloc];
}

uint64_t sub_10048B420(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_errorRelease();
}

uint64_t type metadata accessor for FMReachabilityOperation()
{
  uint64_t result = qword_1006BFC78;
  if (!qword_1006BFC78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10048B518()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10048B598(char *a1, uint64_t a2)
{
  swift_retain();
  sub_10048C4C8(v2, a1, a2);

  return swift_release();
}

uint64_t sub_10048B5F0()
{
  return type metadata accessor for FMReachabilityOperation();
}

void sub_10048B5F8(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  if (a1[qword_1006BFC28]) {
    return;
  }
  if (a1[qword_1006BFC20]) {
    return;
  }
  uint64_t v4 = qword_1006BFC30;
  if (a1[qword_1006BFC30]) {
    return;
  }
  if (a2)
  {
    swift_getErrorValue();
    uint64_t v6 = Error.localizedDescription.getter();
    uint64_t v8 = v7;
    sub_10048DB28();
    uint64_t v9 = swift_allocError();
    uint64_t *v10 = v6;
    v10[1] = v8;
  }
  else
  {
    uint64_t v9 = 0;
  }
  *(void *)&a1[qword_1006BFC48] = v9;
  swift_errorRelease();
  if (!a3)
  {
    if (_swiftEmptyArrayStorage[2]) {
      goto LABEL_9;
    }
LABEL_11:
    uint64_t v14 = &_swiftEmptyDictionarySingleton;
    goto LABEL_12;
  }
  uint64_t v11 = a1;
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_10048C230(v12, v11);
  swift_bridgeObjectRelease();

  if (!*(void *)(v13 + 16)) {
    goto LABEL_11;
  }
LABEL_9:
  sub_10005D034(&qword_1006B2FB0);
  uint64_t v14 = (void *)static _DictionaryStorage.allocate(capacity:)();
LABEL_12:
  v24[0] = v14;
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_10048BE04(v15, 1, v24);
  swift_bridgeObjectRelease();
  *(void *)&a1[qword_1006BFC38] = v24[0];
  swift_bridgeObjectRelease();
  if (*(void *)&a1[qword_1006BFC10])
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    OS_dispatch_source.cancel()();
    swift_unknownObjectRelease();
  }
  a1[v4] = 1;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_1000606BC(v16, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain_n();
  id v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315138;
    unint64_t v20 = 0xE000000000000000;
    if (a3)
    {
      sub_100006060(0, &qword_1006AFC18);
      v24[0] = Dictionary.debugDescription.getter();
      v24[1] = v21;
      sub_100059EB8();
      uint64_t v22 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      unint64_t v20 = v23;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v22 = 0;
    }
    v24[0] = sub_1000606F4(v22, v20, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "FMReachabilityOperation: completed with status: %s", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  dispatch_group_leave(*(dispatch_group_t *)&a1[qword_1006BFC00]);
}

void sub_10048BA00(uint64_t *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *a1;
  unint64_t v5 = a1[1];
  uint64_t v7 = (void *)a1[2];
  uint64_t v8 = &a2[qword_1006BFC40];
  swift_beginAccess();
  uint64_t v9 = *(void *)v8;
  uint64_t v10 = *(void *)(*(void *)v8 + 16);
  swift_bridgeObjectRetain();
  if (v10)
  {
    swift_bridgeObjectRetain();
    id v11 = v7;
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_100053708(v6, v5);
    if (v13)
    {
      uint64_t v14 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v12);
      uint64_t v15 = a3;
      uint64_t v17 = *v14;
      uint64_t v16 = v14[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      id v18 = [v11 integerValue];

      *(void *)uint64_t v15 = v17;
      *(void *)(v15 + 8) = v16;
      *(unsigned char *)(v15 + 16) = v18 != (id)2;
      return;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v19 = v7;
  }
  id v30 = v7;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  sub_1000606BC(v20, (uint64_t)qword_1006D1E98);
  uint64_t v21 = a2;
  swift_bridgeObjectRetain();
  uint64_t v22 = v21;
  unint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136315394;
    swift_bridgeObjectRetain();
    sub_1000606F4(v6, v5, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v25 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v26 = Dictionary.description.getter();
    uint64_t v27 = a3;
    unint64_t v29 = v28;
    swift_bridgeObjectRelease();
    sub_1000606F4(v26, v29, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    a3 = v27;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "FMReachabilityOperation: received response for unknown handle: %s, requested: %s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 0;
}

uint64_t sub_10048BE04(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  char v43 = *(unsigned char *)(a1 + 48);
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)*a3;
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_100053708(v8, v7);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_23;
  }
  char v15 = v10;
  if (v9[3] >= v14)
  {
    if (a2)
    {
      if (v10) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1001BCB6C();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    id v19 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    uint64_t v20 = (uint64_t *)(v19[6] + 16 * v11);
    *uint64_t v20 = v8;
    v20[1] = v7;
    *(unsigned char *)(v19[7] + v11) = v43;
    uint64_t v21 = v19[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v19[2] = v23;
    uint64_t v24 = v4 - 1;
    if (v4 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    for (Swift::Int i = (unsigned char *)(a1 + 72); ; i += 24)
    {
      uint64_t v27 = *((void *)i - 2);
      uint64_t v26 = *((void *)i - 1);
      char v28 = *i;
      unint64_t v29 = (void *)*a3;
      swift_bridgeObjectRetain();
      unint64_t v30 = sub_100053708(v27, v26);
      uint64_t v32 = v29[2];
      BOOL v33 = (v31 & 1) == 0;
      BOOL v22 = __OFADD__(v32, v33);
      uint64_t v34 = v32 + v33;
      if (v22) {
        break;
      }
      char v35 = v31;
      if (v29[3] < v34)
      {
        sub_1001B5D78(v34, 1);
        unint64_t v30 = sub_100053708(v27, v26);
        if ((v35 & 1) != (v36 & 1)) {
          goto LABEL_25;
        }
      }
      if (v35) {
        goto LABEL_10;
      }
      Class v37 = (void *)*a3;
      *(void *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
      id v38 = (uint64_t *)(v37[6] + 16 * v30);
      *id v38 = v27;
      v38[1] = v26;
      *(unsigned char *)(v37[7] + v30) = v28;
      uint64_t v39 = v37[2];
      BOOL v22 = __OFADD__(v39, 1);
      uint64_t v40 = v39 + 1;
      if (v22) {
        goto LABEL_24;
      }
      v37[2] = v40;
      if (!--v24) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1001B5D78(v14, a2 & 1);
  unint64_t v16 = sub_100053708(v8, v7);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    swift_allocError();
    swift_willThrow();
    swift_errorRetain();
    sub_10005D034((uint64_t *)&unk_1006AEEE0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return swift_errorRelease();
    }
    goto LABEL_26;
  }
LABEL_25:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
LABEL_26:
  _StringGuts.grow(_:)(30);
  v41._unint64_t object = (void *)0x800000010059F340;
  v41._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v41);
  _print_unlocked<A, B>(_:_:)();
  v42._uint64_t countAndFlagsBits = 39;
  v42._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v42);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10048C188(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a2)
  {
    case 0:
      if (a4) {
        goto LABEL_14;
      }
      uint64_t result = 1;
      break;
    case 1:
      if (a4 != 1) {
        goto LABEL_14;
      }
      uint64_t result = 1;
      break;
    case 2:
      if (a4 != 2) {
        goto LABEL_14;
      }
      uint64_t result = 1;
      break;
    case 3:
      if (a4 != 3) {
        goto LABEL_14;
      }
      uint64_t result = 1;
      break;
    default:
      if (a4 < 4)
      {
LABEL_14:
        uint64_t result = 0;
      }
      else if (a1 == a3 && a2 == a4)
      {
        uint64_t result = 1;
      }
      else
      {
        uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      break;
  }
  return result;
}

uint64_t sub_10048C230(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v26 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v33 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v8 << 6);
      goto LABEL_17;
    }
    if (__OFADD__(v8++, 1)) {
      break;
    }
    if (v8 >= v27) {
      goto LABEL_31;
    }
    unint64_t v13 = *(void *)(v26 + 8 * v8);
    if (!v13)
    {
      int64_t v14 = v8 + 1;
      if (v8 + 1 >= v27) {
        goto LABEL_31;
      }
      unint64_t v13 = *(void *)(v26 + 8 * v14);
      if (v13) {
        goto LABEL_15;
      }
      int64_t v14 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_31;
      }
      unint64_t v13 = *(void *)(v26 + 8 * v14);
      if (v13) {
        goto LABEL_15;
      }
      int64_t v14 = v8 + 3;
      if (v8 + 3 >= v27) {
        goto LABEL_31;
      }
      unint64_t v13 = *(void *)(v26 + 8 * v14);
      if (v13)
      {
LABEL_15:
        int64_t v8 = v14;
      }
      else
      {
        int64_t v25 = v8 + 4;
        if (v8 + 4 >= v27)
        {
LABEL_31:
          swift_release();
          return (uint64_t)v9;
        }
        unint64_t v13 = *(void *)(v26 + 8 * v25);
        for (v8 += 4; !v13; ++v25)
        {
          int64_t v8 = v25 + 1;
          if (__OFADD__(v25, 1)) {
            goto LABEL_34;
          }
          if (v8 >= v27) {
            goto LABEL_31;
          }
          unint64_t v13 = *(void *)(v26 + 8 * v8);
        }
      }
    }
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_17:
    char v15 = (uint64_t *)(*(void *)(v33 + 48) + 16 * v11);
    uint64_t v16 = v15[1];
    char v17 = *(void **)(*(void *)(v33 + 56) + 8 * v11);
    v32[0] = *v15;
    v32[1] = v16;
    void v32[2] = (uint64_t)v17;
    swift_bridgeObjectRetain();
    id v18 = v17;
    sub_10048BA00(v32, a2, (uint64_t)&v29);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_release();

      swift_bridgeObjectRelease();
      return (uint64_t)v9;
    }

    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v19 = v30;
    if (v30)
    {
      uint64_t v20 = v29;
      char v21 = v31;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_10007DE18(0, v9[2] + 1, 1, v9);
        uint64_t v9 = (void *)result;
      }
      unint64_t v23 = v9[2];
      unint64_t v22 = v9[3];
      if (v23 >= v22 >> 1)
      {
        uint64_t result = (uint64_t)sub_10007DE18((void *)(v22 > 1), v23 + 1, 1, v9);
        uint64_t v9 = (void *)result;
      }
      v9[2] = v23 + 1;
      uint64_t v24 = &v9[3 * v23];
      v24[4] = v20;
      v24[5] = v19;
      *((unsigned char *)v24 + 48) = v21 & 1;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

void sub_10048C4C8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchTimeInterval();
  uint64_t v134 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v133 = (char *)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v132 = (char *)&v116 - v9;
  uint64_t v131 = type metadata accessor for DispatchTime();
  uint64_t v130 = *(void *)(v131 - 8);
  uint64_t v10 = __chkstk_darwin(v131);
  char v135 = (char *)&v116 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v129 = (char *)&v116 - v12;
  uint64_t v13 = type metadata accessor for OS_dispatch_source.TimerFlags();
  uint64_t v140 = *(void *)(v13 - 8);
  uint64_t v141 = v13;
  __chkstk_darwin(v13);
  uint64_t ObjectType = (char *)&v116 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v143 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  char v17 = (char *)&v116 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  char v21 = (char *)&v116 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = (void *)type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v137 = *(v138 - 1);
  __chkstk_darwin(v138);
  uint64_t v136 = (char *)&v116 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = swift_allocObject();
  uint64_t v148 = a2;
  *(void *)(v23 + 16) = a2;
  *(void *)(v23 + 24) = a3;
  uint64_t v24 = a1;
  swift_retain();
  if ([a1 isCancelled])
  {
    swift_release();
    return;
  }
  uint64_t v127 = v21;
  id v25 = [self currentQueue];
  if (!v25
    || (uint64_t v26 = v25,
        id v27 = [v25 underlyingQueue],
        v26,
        !v27))
  {
    sub_10048DB28();
    uint64_t v65 = (void *)swift_allocError();
    *uint64_t v66 = 0;
    v66[1] = 0;
    uint64_t aBlock = v65;
    LOBYTE(v150) = 1;
    ((void (*)(void **))v148)(&aBlock);
    goto LABEL_36;
  }
  id v125 = v27;
  uint64_t v123 = v19;
  uint64_t v117 = v6;
  uint64_t v119 = v18;
  uint64_t v120 = v17;
  uint64_t v121 = v15;
  uint64_t v28 = *(void *)&v24[qword_1006BFBF0];
  uint64_t v29 = *(void *)(v28 + 16);
  uint64_t v30 = _swiftEmptyArrayStorage;
  uint64_t v122 = a3;
  uint64_t v124 = v23;
  if (!v29)
  {
    uint64_t v70 = v143;
LABEL_41:
    id v71 = objc_allocWithZone((Class)IDSBatchIDQueryController);
    long long v72 = v24;
    long long v73 = (char *)v125;
    NSString v74 = String._bridgeToObjectiveC()();
    id v75 = [v71 initWithService:v74 delegate:v72 queue:v73];

    uint64_t v76 = qword_1006BFC08;
    unint64_t v77 = *(void **)&v72[qword_1006BFC08];
    *(void *)&v72[qword_1006BFC08] = v75;

    if (*(void *)&v72[v76])
    {
      unint64_t v145 = v76;
      uint64_t v142 = v73;
      uint64_t v78 = v23;
      uint64_t v147 = *(void (**)(char *, uint64_t))&v72[qword_1006BFC00];
      sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
      uint64_t v79 = v137;
      uint64_t v80 = v136;
      uint64_t v81 = v138;
      (*(void (**)(char *, void, void *))(v137 + 104))(v136, enum case for DispatchQoS.QoSClass.default(_:), v138);
      uint64_t v82 = (void *)static OS_dispatch_queue.global(qos:)();
      (*(void (**)(char *, void *))(v79 + 8))(v80, v81);
      uint64_t v83 = (void *)swift_allocObject();
      v83[2] = v72;
      v83[3] = sub_1001BF1B0;
      v83[4] = v78;
      uint64_t v153 = sub_10048DBF4;
      Swift::Int v154 = v83;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v150 = 1107296256;
      unint64_t v151 = sub_10003C410;
      Swift::Int v152 = &unk_10063E308;
      uint64_t v84 = _Block_copy(&aBlock);
      *(void *)&long long v146 = v72;
      uint64_t v148 = v72;
      swift_retain();
      uint64_t v85 = v127;
      static DispatchQoS.unspecified.getter();
      id v155 = _swiftEmptyArrayStorage;
      sub_100046C00((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10005D034((uint64_t *)&unk_1006AE4B0);
      sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
      uint64_t v86 = v120;
      uint64_t v87 = v121;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_group.notify(qos:flags:queue:execute:)();
      _Block_release(v84);

      uint64_t v88 = *(void (**)(char *, uint64_t))(v70 + 8);
      uint64_t v143 = v70 + 8;
      uint64_t v147 = v88;
      v88(v86, v87);
      uint64_t v89 = v123 + 8;
      uint64_t v138 = *(void **)(v123 + 8);
      ((void (*)(char *, uint64_t))v138)(v85, v119);
      swift_release();
      sub_100006060(0, &qword_1006BFF30);
      uint64_t v90 = (void (*)(void))v148;
      uint64_t aBlock = _swiftEmptyArrayStorage;
      sub_100046C00(&qword_1006BFF38, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
      sub_10005D034(&qword_1006BFF40);
      sub_100045050(&qword_1006BFF48, &qword_1006BFF40);
      uint64_t v91 = ObjectType;
      uint64_t v92 = v141;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v93 = static OS_dispatch_source.makeTimerSource(flags:queue:)();
      (*(void (**)(char *, uint64_t))(v140 + 8))(v91, v92);
      uint64_t v94 = qword_1006BFC10;
      *(void *)((char *)v90 + qword_1006BFC10) = v93;
      swift_unknownObjectRelease();
      if (*(void *)((char *)v90 + v94))
      {
        uint64_t v141 = v94;
        unint64_t v144 = v30;
        uint64_t v123 = v89;
        swift_unknownObjectRetain();
        uint64_t v95 = v135;
        static DispatchTime.now()();
        if (*((unsigned char *)v90 + qword_1006BFBF8 + 8))
        {
LABEL_51:
          swift_release();
          __break(1u);
          return;
        }
        uint64_t ObjectType = (char *)swift_getObjectType();
        uint64_t v96 = v129;
        + infix(_:_:)();
        uint64_t v140 = *(void *)(v130 + 8);
        uint64_t v97 = v131;
        ((void (*)(char *, uint64_t))v140)(v95, v131);
        uint64_t v98 = v134;
        unsigned __int8 v99 = *(void (**)(char *, void, uint64_t))(v134 + 104);
        char v100 = v132;
        uint64_t v101 = v117;
        v99(v132, enum case for DispatchTimeInterval.never(_:), v117);
        uint64_t v102 = v133;
        *(void *)uint64_t v133 = 0;
        v99(v102, enum case for DispatchTimeInterval.seconds(_:), v101);
        OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
        swift_unknownObjectRelease();
        uint64_t v103 = *(void (**)(char *, uint64_t))(v98 + 8);
        v103(v102, v101);
        v103(v100, v101);
        ((void (*)(char *, uint64_t))v140)(v96, v97);
        uint64_t v104 = (void (*)(void))v148;
        uint64_t v105 = v141;
        uint64_t v30 = v144;
        if (*(void *)&v148[v141])
        {
          swift_getObjectType();
          uint64_t v106 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v153 = sub_10048DC38;
          Swift::Int v154 = (void *)v106;
          uint64_t aBlock = _NSConcreteStackBlock;
          uint64_t v150 = 1107296256;
          unint64_t v151 = sub_10003C410;
          Swift::Int v152 = &unk_10063E358;
          unint64_t v107 = _Block_copy(&aBlock);
          swift_unknownObjectRetain();
          swift_retain();
          uint64_t v108 = v105;
          uint64_t v109 = v127;
          static DispatchQoS.unspecified.getter();
          BOOL v110 = v120;
          sub_10048AEAC();
          OS_dispatch_source.setEventHandler(qos:flags:handler:)();
          _Block_release(v107);
          swift_unknownObjectRelease();
          v147(v110, v121);
          ((void (*)(char *, uint64_t))v138)(v109, v119);
          swift_release();
          swift_release();
          if (*(void *)((char *)v104 + v108))
          {
            swift_getObjectType();
            swift_unknownObjectRetain();
            OS_dispatch_source.resume()();
            swift_unknownObjectRelease();
          }
        }
      }
      uint64_t v111 = *(void **)(v146 + v145);
      if (v111)
      {
        id v112 = v111;
        sub_1005377F4((uint64_t)v30);
        swift_bridgeObjectRelease();
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v112 setDestinations:isa];
        swift_release();

        return;
      }
      swift_release();
      __break(1u);
      goto LABEL_51;
    }
    swift_bridgeObjectRelease();
    sub_10048DB28();
    uint64_t v114 = (void *)swift_allocError();
    *uint64_t v115 = xmmword_10055DB20;
    uint64_t aBlock = v114;
    LOBYTE(v150) = 1;
    ((void (*)(void **))v148)(&aBlock);

LABEL_36:
    swift_errorRelease();
    swift_release();
    return;
  }
  uint64_t v147 = (void (*)(char *, uint64_t))sub_100006060(0, (unint64_t *)&qword_1006B4570);
  uint64_t v116 = v24;
  uint64_t v142 = &v24[qword_1006BFC40];
  swift_bridgeObjectRetain();
  uint64_t v118 = v28;
  char v31 = (unint64_t *)(v28 + 40);
  *((void *)&v32 + 1) = 2;
  long long v146 = xmmword_10055B970;
  unint64_t v145 = 0x8000000100586570;
  *(void *)&long long v32 = 136315138;
  long long v128 = v32;
  uint64_t v126 = (char *)&type metadata for Any + 8;
  while (1)
  {
    uint64_t v33 = *(v31 - 1);
    unint64_t v34 = *v31;
    sub_10005D034((uint64_t *)&unk_1006AF790);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = v146;
    *(void *)(v35 + 56) = &type metadata for String;
    *(void *)(v35 + 64) = sub_10007F2C8();
    unint64_t v36 = v145;
    *(void *)(v35 + 32) = 0xD000000000000029;
    *(void *)(v35 + 40) = v36;
    swift_bridgeObjectRetain_n();
    Class v37 = NSPredicate.init(format:_:)();
    NSString v38 = String._bridgeToObjectiveC()();
    unsigned int v39 = [v37 evaluateWithObject:v38];
    swift_bridgeObjectRelease();

    if (v39)
    {
      NSString v40 = String._bridgeToObjectiveC()();
      Swift::String v41 = (void *)IDSCopyIDForEmailAddress();

      if (v41)
      {
        uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v44 = v43;
      }
      else
      {
        uint64_t v42 = 0;
        uint64_t v44 = 0;
      }
      if (qword_1006AE190 != -1) {
        swift_once();
      }
      uint64_t v49 = type metadata accessor for Logger();
      sub_1000606BC(v49, (uint64_t)qword_1006D1E98);
      swift_bridgeObjectRetain_n();
      id v50 = Logger.logObject.getter();
      os_log_type_t v51 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v50, v51))
      {
        uint64_t v52 = swift_slowAlloc();
        unint64_t v144 = v30;
        uint64_t v53 = v52;
        uint64_t aBlock = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v53 = v128;
        swift_bridgeObjectRetain();
        *(void *)(v53 + 4) = sub_1000606F4(v33, v34, (uint64_t *)&aBlock);
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v50, v51, "FMReachabilityOperation: will check email address: %s...", (uint8_t *)v53, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v30 = v144;
LABEL_25:
        swift_slowDealloc();

        goto LABEL_27;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      char v45 = sub_100477034(v33, v34, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v45 & 1) == 0) {
        goto LABEL_38;
      }
      NSString v46 = String._bridgeToObjectiveC()();
      id v47 = (void *)IDSCopyIDForPhoneNumber();

      if (v47)
      {
        uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v44 = v48;
      }
      else
      {
        uint64_t v42 = 0;
        uint64_t v44 = 0;
      }
      if (qword_1006AE190 != -1) {
        swift_once();
      }
      uint64_t v54 = type metadata accessor for Logger();
      sub_1000606BC(v54, (uint64_t)qword_1006D1E98);
      swift_bridgeObjectRetain_n();
      id v50 = Logger.logObject.getter();
      os_log_type_t v55 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v50, v55))
      {
        uint64_t v56 = swift_slowAlloc();
        id v57 = (void *)swift_slowAlloc();
        unint64_t v144 = v30;
        uint64_t aBlock = v57;
        *(_DWORD *)uint64_t v56 = v128;
        swift_bridgeObjectRetain();
        *(void *)(v56 + 4) = sub_1000606F4(v33, v34, (uint64_t *)&aBlock);
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v50, v55, "FMReachabilityOperation: will check phone number: %s...", (uint8_t *)v56, 0xCu);
        swift_arrayDestroy();
        uint64_t v30 = v144;
        swift_slowDealloc();
        goto LABEL_25;
      }
    }

    swift_bridgeObjectRelease_n();
LABEL_27:
    if (!v44)
    {
LABEL_38:
      swift_bridgeObjectRelease();
      goto LABEL_40;
    }
    NSString v58 = String._bridgeToObjectiveC()();
    id v59 = (void *)IDSCopyRawAddressForDestination();

    if (!v59) {
      break;
    }

    id v60 = v142;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v155 = *(void **)v60;
    *(void *)id v60 = 0x8000000000000000;
    sub_1001B86F4(v33, v34, v42, v44, isUniquelyReferenced_nonNull_native);
    *(void *)id v60 = v155;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v30 = sub_10007D258(0, v30[2] + 1, 1, v30);
    }
    unint64_t v63 = v30[2];
    unint64_t v62 = v30[3];
    if (v63 >= v62 >> 1) {
      uint64_t v30 = sub_10007D258((void *)(v62 > 1), v63 + 1, 1, v30);
    }
    v31 += 2;
    v30[2] = v63 + 1;
    long long v64 = &v30[2 * v63];
    v64[4] = v42;
    v64[5] = v44;
    if (!--v29)
    {
      swift_bridgeObjectRelease();
      uint64_t v23 = v124;
      uint64_t v70 = v143;
      uint64_t v24 = v116;
      goto LABEL_41;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_40:
  swift_bridgeObjectRelease();
  double v67 = v148;
  swift_bridgeObjectRelease();
  sub_10048DB28();
  uint64_t v68 = (void *)swift_allocError();
  *objc_super v69 = xmmword_100565080;
  uint64_t aBlock = v68;
  LOBYTE(v150) = 1;
  ((void (*)(void **))v67)(&aBlock);

  swift_errorRelease();
  swift_release();
}

uint64_t sub_10048D80C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(void *)&v2[qword_1006BFC18];
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = v2;
  v13[3] = a2;
  v13[4] = a1;
  aBlock[4] = sub_10048DB1C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10063E290;
  uint64_t v14 = _Block_copy(aBlock);
  uint64_t v15 = v2;
  swift_errorRetain();
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  v17[1] = _swiftEmptyArrayStorage;
  sub_100046C00((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_10048DAD4()
{
  swift_errorRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10048DB1C()
{
  sub_10048B5F8(*(unsigned char **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

unint64_t sub_10048DB28()
{
  unint64_t result = qword_1006BFF28;
  if (!qword_1006BFF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BFF28);
  }
  return result;
}

uint64_t sub_10048DB7C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10048DBB4()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10048DBF4()
{
  return sub_10048AC34(*(void *)(v0 + 16), *(void (**)(uint64_t, uint64_t))(v0 + 24));
}

uint64_t sub_10048DC00()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10048DC38()
{
}

uint64_t sub_10048DC40()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10048DC78()
{
  sub_10048B0C8(*(char **)(v0 + 16));
}

uint64_t sub_10048DC80()
{
  return _swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for FMReachabilityOperationError()
{
  return &type metadata for FMReachabilityOperationError;
}

void sub_10048DD1C()
{
  id v1 = v0;
  id v2 = [v0 contentView];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy45FMAccessoryDiscoveryAccessoryConfirmationCard_imageView];
  [v2 addSubview:v3];

  [v3 setContentMode:1];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  Class v37 = self;
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10055EFD0;
  id v5 = [v3 leadingAnchor];
  id v6 = [v1 contentView];
  id v7 = [v6 mainContentGuide];

  id v8 = [v7 leadingAnchor];
  id v9 = [v5 constraintGreaterThanOrEqualToAnchor:v8];

  *(void *)(v4 + 32) = v9;
  id v10 = [v3 trailingAnchor];
  id v11 = [v1 contentView];
  id v12 = [v11 mainContentGuide];

  id v13 = [v12 trailingAnchor];
  id v14 = [v10 constraintLessThanOrEqualToAnchor:v13];

  *(void *)(v4 + 40) = v14;
  id v15 = [v3 topAnchor];
  id v16 = [v1 contentView];
  id v17 = [v16 mainContentGuide];

  id v18 = [v17 topAnchor];
  id v19 = [v15 constraintGreaterThanOrEqualToAnchor:v18];

  *(void *)(v4 + 48) = v19;
  id v20 = [v3 bottomAnchor];
  id v21 = [v1 contentView];
  id v22 = [v21 mainContentGuide];

  id v23 = [v22 bottomAnchor];
  id v24 = [v20 constraintLessThanOrEqualToAnchor:v23];

  *(void *)(v4 + 56) = v24;
  id v25 = [v3 centerXAnchor];
  id v26 = [v1 contentView];
  id v27 = [v26 mainContentGuide];

  id v28 = [v27 centerXAnchor];
  id v29 = [v25 constraintEqualToAnchor:v28];

  *(void *)(v4 + 64) = v29;
  id v30 = [v3 centerYAnchor];
  id v31 = [v1 contentView];
  id v32 = [v31 mainContentGuide];

  id v33 = [v32 centerYAnchor];
  id v34 = [v30 constraintEqualToAnchor:v33];

  *(void *)(v4 + 72) = v34;
  id v35 = [v3 heightAnchor];
  id v36 = [v35 constraintEqualToConstant:140.0];

  *(void *)(v4 + 80) = v36;
  specialized Array._endMutation()();
  sub_100006060(0, (unint64_t *)&qword_1006AEE60);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v37 activateConstraints:isa];
}

uint64_t sub_10048E230()
{
  id v1 = v0;
  uint64_t v2 = sub_10005D034(&qword_1006B5A10);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10005D034(&qword_1006B3700);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10005D034(&qword_1006B3190);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  uint64_t v41 = v9;
  __chkstk_darwin(v8);
  id v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10005D034(&qword_1006BF608);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v42 = v12;
  uint64_t v43 = v13;
  __chkstk_darwin(v12);
  NSString v38 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10005D034(&qword_1006BF610);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v44 = v15;
  uint64_t v45 = v16;
  __chkstk_darwin(v15);
  unsigned int v39 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  [v0 setDismissalType:3];
  FMIPDiscoveredAccessory.displayName.getter();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setTitle:v18];

  id v19 = [self mainBundle];
  v48._uint64_t countAndFlagsBits = 0xD000000000000018;
  v20._uint64_t countAndFlagsBits = 0xD000000000000021;
  v48._unint64_t object = (void *)0x800000010057EF80;
  v20._unint64_t object = (void *)0x800000010059F3C0;
  v21.value._unint64_t object = (void *)0x800000010057EF60;
  v21.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v22._uint64_t countAndFlagsBits = 0;
  v22._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v48);

  uint64_t v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain_n();
  swift_bridgeObjectRetain();
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_10048F354;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000841C;
  aBlock[3] = &unk_10063E4B0;
  id v25 = _Block_copy(aBlock);
  id v26 = [self actionWithTitle:v24 style:0 handler:v25];

  _Block_release(v25);
  swift_release();
  id v27 = [v0 addAction:v26];

  swift_bridgeObjectRelease();
  swift_release_n();

  type metadata accessor for FMAccessoryDiscoveryAccessoryConfirmationCard.ViewModel(0);
  FMIPDiscoveredAccessory.productInformation.getter();
  uint64_t v28 = sub_1001AC2B4((uint64_t)v7, 1);
  sub_100003F10((uint64_t)v7, &qword_1006B3700);
  aBlock[0] = v28;
  id v46 = [self mainRunLoop];
  uint64_t v29 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v4, 1, 1, v29);
  sub_10005D034(&qword_1006B31A0);
  sub_100006060(0, (unint64_t *)&qword_1006C1DE0);
  sub_1000450A0((unint64_t *)&unk_1006B4250, &qword_1006B31A0);
  sub_100150450();
  Publisher.receive<A>(on:options:)();
  sub_100003F10((uint64_t)v4, &qword_1006B5A10);

  swift_release();
  sub_100006060(0, (unint64_t *)&qword_1006BA4D0);
  sub_1000450A0(&qword_1006B31A8, &qword_1006B3190);
  id v30 = v38;
  uint64_t v31 = v40;
  Publisher.map<A>(_:)();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v31);
  sub_10005D034(&qword_1006B5210);
  sub_1000450A0(&qword_1006BF618, &qword_1006BF608);
  sub_1000450A0(&qword_1006BF620, &qword_1006B5210);
  id v32 = v39;
  uint64_t v33 = v42;
  Publisher.catch<A>(_:)();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v30, v33);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1000450A0(&qword_1006BF628, &qword_1006BF610);
  uint64_t v34 = v44;
  uint64_t v35 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v34);
  *(void *)&v1[OBJC_IVAR____TtC6FindMy45FMAccessoryDiscoveryAccessoryConfirmationCard_imageFetchCancellable] = v35;
  return swift_release();
}

void sub_10048E9D8()
{
  uint64_t v0 = type metadata accessor for FMAccessoryDiscoveryCoordinator.Event(0);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (char *)Strong;
    uint64_t v5 = swift_unknownObjectWeakLoadStrong();
    if (v5)
    {
      uint64_t v6 = (void *)v5;
      id v7 = &v4[OBJC_IVAR____TtC6FindMy45FMAccessoryDiscoveryAccessoryConfirmationCard_viewModel];
      uint64_t v8 = type metadata accessor for FMIPDiscoveredAccessory();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v2, v7, v8);
      swift_storeEnumTagMultiPayload();
      sub_1002792E0((uint64_t)v2);

      sub_10048F364((uint64_t)v2, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
    }
  }
}

void sub_10048EB24(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    id v4 = *(id *)(Strong + OBJC_IVAR____TtC6FindMy45FMAccessoryDiscoveryAccessoryConfirmationCard_imageView);

    [v4 setImage:v1];
  }
}

id sub_10048EBE0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAccessoryDiscoveryAccessoryConfirmationCard(0);
  [super dealloc];
}

uint64_t sub_10048EC98()
{
  return type metadata accessor for FMAccessoryDiscoveryAccessoryConfirmationCard(0);
}

uint64_t type metadata accessor for FMAccessoryDiscoveryAccessoryConfirmationCard(uint64_t a1)
{
  return sub_1000201D0(a1, (uint64_t *)&unk_1006BFF98);
}

uint64_t sub_10048ECC0()
{
  uint64_t result = type metadata accessor for FMAccessoryDiscoveryAccessoryConfirmationCard.ViewModel(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for FMAccessoryDiscoveryAccessoryConfirmationCard.ViewModel(uint64_t a1)
{
  return sub_1000201D0(a1, qword_1006C0000);
}

uint64_t *sub_10048ED94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for FMIPDiscoveredAccessory();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t sub_10048EE60(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMIPDiscoveredAccessory();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_release();
}

uint64_t sub_10048EED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FMIPDiscoveredAccessory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t sub_10048EF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FMIPDiscoveredAccessory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10048EFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FMIPDiscoveredAccessory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10048F05C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FMIPDiscoveredAccessory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_10048F0E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10048F0F4);
}

uint64_t sub_10048F0F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10048F1B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10048F1C8);
}

uint64_t sub_10048F1C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10048F284()
{
  uint64_t result = type metadata accessor for FMIPDiscoveredAccessory();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10048F31C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10048F354()
{
}

void sub_10048F35C(uint64_t *a1)
{
}

uint64_t sub_10048F364(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for FMAlertBehavior(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10048F490);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMAlertBehavior()
{
  return &type metadata for FMAlertBehavior;
}

uint64_t sub_10048F4C8()
{
  uint64_t v1 = type metadata accessor for FMIPAlertType();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  id v25 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  NSString v24 = (char *)&v24 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  id v26 = (char *)&v24 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v29 = (char *)&v24 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v24 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v27 = v0;
  FMIPAlert.type.getter();
  uint64_t v28 = *(void (**)(char *, void, uint64_t))(v2 + 104);
  v28(v13, enum case for FMIPAlertType.recurrentNetworkIssue(_:), v1);
  sub_100490568(&qword_1006BB8D8, (void (*)(uint64_t))&type metadata accessor for FMIPAlertType);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (v32 == v30 && v33 == v31) {
    char v16 = 1;
  }
  else {
    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v2 + 8);
  v17(v13, v1);
  v17(v15, v1);
  if ((v16 & 1) == 0)
  {
    FMIPAlert.type.getter();
    NSString v18 = v26;
    v28(v26, enum case for FMIPAlertType.networkIssue(_:), v1);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    if (v32 == v30 && v33 == v31)
    {
      swift_bridgeObjectRelease_n();
      char v19 = 1;
      Swift::String v20 = v18;
      Swift::String_optional v21 = v29;
LABEL_15:
      v17(v20, v1);
      v17(v21, v1);
      return v19 & 1;
    }
    char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17(v18, v1);
    v17(v29, v1);
    if ((v22 & 1) == 0)
    {
      Swift::String_optional v21 = v24;
      FMIPAlert.type.getter();
      Swift::String v20 = v25;
      v28(v25, enum case for FMIPAlertType.initialization(_:), v1);
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      if (v32 == v30 && v33 == v31)
      {
        swift_bridgeObjectRelease_n();
        char v19 = 1;
      }
      else
      {
        char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_15;
    }
  }
  char v19 = 1;
  return v19 & 1;
}

BOOL sub_10048F910()
{
  uint64_t v1 = type metadata accessor for FMFAlertType();
  uint64_t v2 = *(void **)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v70 = &v65[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_10005D034(&qword_1006BB8E8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v78 = &v65[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __chkstk_darwin(v5);
  long long v73 = &v65[-v8];
  __chkstk_darwin(v7);
  uint64_t v10 = &v65[-v9];
  uint64_t v11 = sub_10005D034(&qword_1006BB8F0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v68 = &v65[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __chkstk_darwin(v12);
  objc_super v69 = &v65[-v15];
  uint64_t v16 = __chkstk_darwin(v14);
  long long v72 = &v65[-v17];
  uint64_t v18 = __chkstk_darwin(v16);
  double v67 = &v65[-v19];
  uint64_t v20 = __chkstk_darwin(v18);
  unint64_t v77 = &v65[-v21];
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v76 = &v65[-v23];
  uint64_t v24 = __chkstk_darwin(v22);
  id v26 = &v65[-v25];
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = &v65[-v28];
  __chkstk_darwin(v27);
  uint64_t v31 = &v65[-v30];
  uint64_t v74 = v0;
  FMFAlert.alertType.getter();
  uint64_t v80 = (void (*)(unsigned char *, void, uint64_t))v2[13];
  v80(v29, enum case for FMFAlertType.recurrentNetworkIssue(_:), v1);
  uint64_t v81 = (void (*)(unsigned char *, void, uint64_t, uint64_t))v2[7];
  uint64_t v82 = v2 + 7;
  v81(v29, 0, 1, v1);
  uint64_t v32 = (uint64_t)&v10[*(int *)(v4 + 48)];
  sub_100369A20((uint64_t)v31, (uint64_t)v10);
  sub_100369A20((uint64_t)v29, v32);
  uint64_t v79 = v2;
  uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v2[6];
  unsigned int v34 = v33((uint64_t)v10, 1, v1);
  id v75 = v33;
  if (v34 == 1)
  {
    sub_100003F10((uint64_t)v29, &qword_1006BB8F0);
    sub_100003F10((uint64_t)v31, &qword_1006BB8F0);
    uint64_t v35 = v33;
    if (v33(v32, 1, v1) == 1)
    {
      id v36 = v10;
LABEL_16:
      sub_100003F10((uint64_t)v36, &qword_1006BB8F0);
      return 1;
    }
    goto LABEL_6;
  }
  sub_100369A20((uint64_t)v10, (uint64_t)v26);
  if (v33(v32, 1, v1) == 1)
  {
    sub_100003F10((uint64_t)v29, &qword_1006BB8F0);
    sub_100003F10((uint64_t)v31, &qword_1006BB8F0);
    ((void (*)(unsigned char *, uint64_t))v79[1])(v26, v1);
    uint64_t v35 = v75;
LABEL_6:
    sub_100003F10((uint64_t)v10, &qword_1006BB8E8);
    uint64_t v37 = v76;
    goto LABEL_7;
  }
  uint64_t v71 = v4;
  uint64_t v53 = v70;
  uint64_t v54 = v79;
  ((void (*)(unsigned char *, uint64_t, uint64_t))v79[4])(v70, v32, v1);
  sub_100490568(&qword_1006BB8F8, (void (*)(uint64_t))&type metadata accessor for FMFAlertType);
  int v66 = dispatch thunk of static Equatable.== infix(_:_:)();
  os_log_type_t v55 = (void (*)(unsigned char *, uint64_t))v54[1];
  v55(v53, v1);
  sub_100003F10((uint64_t)v29, &qword_1006BB8F0);
  sub_100003F10((uint64_t)v31, &qword_1006BB8F0);
  v55(v26, v1);
  uint64_t v4 = v71;
  sub_100003F10((uint64_t)v10, &qword_1006BB8F0);
  uint64_t v35 = v75;
  uint64_t v37 = v76;
  if (v66) {
    return 1;
  }
LABEL_7:
  FMFAlert.alertType.getter();
  uint64_t v38 = v4;
  unsigned int v39 = v77;
  v80(v77, enum case for FMFAlertType.networkIssue(_:), v1);
  v81(v39, 0, 1, v1);
  uint64_t v71 = v38;
  uint64_t v40 = v73;
  uint64_t v41 = (uint64_t)&v73[*(int *)(v38 + 48)];
  sub_100369A20((uint64_t)v37, (uint64_t)v73);
  sub_100369A20((uint64_t)v39, v41);
  if (v35((uint64_t)v40, 1, v1) == 1)
  {
    sub_100003F10((uint64_t)v39, &qword_1006BB8F0);
    sub_100003F10((uint64_t)v37, &qword_1006BB8F0);
    int v42 = v35(v41, 1, v1);
    uint64_t v43 = (uint64_t)v72;
    if (v42 == 1)
    {
      id v36 = v40;
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  uint64_t v44 = v67;
  sub_100369A20((uint64_t)v40, (uint64_t)v67);
  int v45 = v35(v41, 1, v1);
  uint64_t v43 = (uint64_t)v72;
  if (v45 == 1)
  {
    sub_100003F10((uint64_t)v77, &qword_1006BB8F0);
    sub_100003F10((uint64_t)v37, &qword_1006BB8F0);
    ((void (*)(unsigned char *, uint64_t))v79[1])(v44, v1);
LABEL_12:
    uint64_t v46 = v71;
    sub_100003F10((uint64_t)v40, &qword_1006BB8E8);
    goto LABEL_13;
  }
  uint64_t v56 = v79;
  id v57 = v44;
  NSString v58 = v70;
  uint64_t v46 = v71;
  ((void (*)(unsigned char *, uint64_t, uint64_t))v79[4])(v70, v41, v1);
  sub_100490568(&qword_1006BB8F8, (void (*)(uint64_t))&type metadata accessor for FMFAlertType);
  int v66 = dispatch thunk of static Equatable.== infix(_:_:)();
  id v59 = (void (*)(unsigned char *, uint64_t))v56[1];
  v59(v58, v1);
  sub_100003F10((uint64_t)v77, &qword_1006BB8F0);
  sub_100003F10((uint64_t)v76, &qword_1006BB8F0);
  v59(v57, v1);
  sub_100003F10((uint64_t)v73, &qword_1006BB8F0);
  if (v66) {
    return 1;
  }
LABEL_13:
  FMFAlert.alertType.getter();
  id v47 = v69;
  v80(v69, enum case for FMFAlertType.initialization(_:), v1);
  uint64_t v48 = (uint64_t)v47;
  v81(v47, 0, 1, v1);
  uint64_t v49 = v78;
  uint64_t v50 = (uint64_t)&v78[*(int *)(v46 + 48)];
  sub_100369A20(v43, (uint64_t)v78);
  sub_100369A20(v48, v50);
  os_log_type_t v51 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v75;
  if (v75((uint64_t)v49, 1, v1) == 1)
  {
    sub_100003F10(v48, &qword_1006BB8F0);
    sub_100003F10(v43, &qword_1006BB8F0);
    if (v51(v50, 1, v1) == 1)
    {
      id v36 = v78;
      goto LABEL_16;
    }
    goto LABEL_22;
  }
  sub_100369A20((uint64_t)v78, (uint64_t)v68);
  if (v51(v50, 1, v1) == 1)
  {
    sub_100003F10(v48, &qword_1006BB8F0);
    sub_100003F10(v43, &qword_1006BB8F0);
    ((void (*)(unsigned char *, uint64_t))v79[1])(v68, v1);
LABEL_22:
    sub_100003F10((uint64_t)v78, &qword_1006BB8E8);
    return 0;
  }
  id v60 = v79;
  id v61 = v70;
  ((void (*)(unsigned char *, uint64_t, uint64_t))v79[4])(v70, v50, v1);
  sub_100490568(&qword_1006BB8F8, (void (*)(uint64_t))&type metadata accessor for FMFAlertType);
  unint64_t v62 = v68;
  char v63 = dispatch thunk of static Equatable.== infix(_:_:)();
  long long v64 = (void (*)(unsigned char *, uint64_t))v60[1];
  v64(v61, v1);
  sub_100003F10(v48, &qword_1006BB8F0);
  sub_100003F10(v43, &qword_1006BB8F0);
  v64(v62, v1);
  sub_100003F10((uint64_t)v78, &qword_1006BB8F0);
  return (v63 & 1) != 0;
}

uint64_t sub_1004902E0(char *a1, char *a2)
{
  return sub_1001DA058(*a1, *a2);
}

Swift::Int sub_1004902EC()
{
  return Hasher._finalize()();
}

uint64_t sub_100490374()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1004903E8()
{
  return Hasher._finalize()();
}

uint64_t sub_10049046C@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100620020, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_1004904CC(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x746C7561666564;
  if (*v1) {
    unint64_t v2 = 0xD000000000000015;
  }
  unint64_t v3 = 0x800000010057E430;
  if (!*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_100490514()
{
  unint64_t result = qword_1006C0060;
  if (!qword_1006C0060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C0060);
  }
  return result;
}

uint64_t sub_100490568(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_1004905B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  void v32[2] = a1;
  uint64_t v33 = a4;
  v32[1] = a3;
  uint64_t v7 = sub_10005D034(&qword_1006B86E8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  v32[0] = (uint64_t)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v32 - v10;
  uint64_t v12 = type metadata accessor for UIButton.Configuration();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = OBJC_IVAR____TtC6FindMy14FMSimpleButton_button;
  sub_100006060(0, (unint64_t *)&qword_1006B2930);
  uint64_t v15 = v5;
  static UIButton.Configuration.plain()();
  *(void *)&v5[v14] = UIButton.init(configuration:primaryAction:)();
  uint64_t v16 = OBJC_IVAR____TtC6FindMy14FMSimpleButton_subtitleLabel;
  *(void *)&v15[v16] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v17 = OBJC_IVAR____TtC6FindMy14FMSimpleButton_separator;
  *(void *)&v15[v17] = [objc_allocWithZone((Class)UIView) init];
  v15[OBJC_IVAR____TtC6FindMy14FMSimpleButton_isActionEnabled] = 1;
  uint64_t v18 = &v15[OBJC_IVAR____TtC6FindMy14FMSimpleButton_subtitle];
  *(void *)uint64_t v18 = 0;
  *((void *)v18 + 1) = 0;
  uint64_t v19 = OBJC_IVAR____TtC6FindMy14FMSimpleButton_subtitleColor;
  *(void *)&v15[v19] = [self tertiaryLabelColor];
  v15[OBJC_IVAR____TtC6FindMy14FMSimpleButton_separated] = 1;
  v15[OBJC_IVAR____TtC6FindMy14FMSimpleButton_useEmbeddedSubtitle] = a5;

  uint64_t v20 = (objc_class *)type metadata accessor for FMSimpleButton();
  v34.receiver = v15;
  v34.super_class = v20;
  uint64_t v21 = (char *)objc_msgSendSuper2(&v34, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v22 = OBJC_IVAR____TtC6FindMy14FMSimpleButton_button;
  uint64_t v23 = *(void **)&v21[OBJC_IVAR____TtC6FindMy14FMSimpleButton_button];
  uint64_t v24 = v21;
  id v25 = v23;
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v25 setTitle:v26 forState:0];

  if ((a5 & 1) == 0)
  {
    uint64_t v28 = *(void **)&v24[OBJC_IVAR____TtC6FindMy14FMSimpleButton_subtitleLabel];
    if (v33)
    {
      id v29 = v28;
      NSString v27 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v30 = v28;
      NSString v27 = 0;
    }
    [v28 setText:v27];

    goto LABEL_9;
  }
  NSString v27 = *(id *)&v21[v22];
  UIButton.configuration.getter();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    UIButton.Configuration.subtitle.setter();
    UIButton.configuration.setter();
LABEL_9:

    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  sub_10028D3BC((uint64_t)v11, v32[0]);
  UIButton.configuration.setter();

  sub_1002D2A04((uint64_t)v11);
LABEL_10:
  sub_100490988();
  sub_100490F80();

  return v24;
}

id sub_100490988()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10005D034(&qword_1006C00D8);
  __chkstk_darwin(v2 - 8);
  uint64_t v31 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10005D034(&qword_1006B86E8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v30 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v30 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v16 = *(void **)&v0[OBJC_IVAR____TtC6FindMy14FMSimpleButton_button];
  UIButton.configuration.getter();
  uint64_t v17 = type metadata accessor for UIButton.Configuration();
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  if (v18(v15, 1, v17))
  {
    sub_10028D3BC((uint64_t)v15, (uint64_t)v7);
    UIButton.configuration.setter();
    sub_1002D2A04((uint64_t)v15);
  }
  else
  {
    uint64_t v19 = (void (*)(unsigned char *, void))UIButton.Configuration.contentInsets.modify();
    *(void *)(v20 + 8) = 0;
    v19(v32, 0);
    UIButton.configuration.setter();
  }
  UIButton.configuration.getter();
  if (v18(v13, 1, v17))
  {
    sub_10028D3BC((uint64_t)v13, (uint64_t)v7);
    UIButton.configuration.setter();
    sub_1002D2A04((uint64_t)v13);
  }
  else
  {
    uint64_t v21 = (void (*)(unsigned char *, void))UIButton.Configuration.contentInsets.modify();
    *(void *)(v22 + 24) = 0;
    v21(v32, 0);
    UIButton.configuration.setter();
  }
  [v16 setContentHorizontalAlignment:4];
  UIButton.configuration.getter();
  if (v18(v10, 1, v17))
  {
    sub_10028D3BC((uint64_t)v10, (uint64_t)v7);
    UIButton.configuration.setter();
    sub_1002D2A04((uint64_t)v10);
  }
  else
  {
    swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v23 = v31;
    UIConfigurationTextAttributesTransformer.init(_:)();
    uint64_t v24 = type metadata accessor for UIConfigurationTextAttributesTransformer();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 0, 1, v24);
    UIButton.Configuration.subtitleTextAttributesTransformer.setter();
    UIButton.configuration.setter();
  }
  [v16 addTarget:v0 action:"handleAction" forControlEvents:64];
  [v0 addSubview:v16];
  id v25 = *(void **)&v0[OBJC_IVAR____TtC6FindMy14FMSimpleButton_subtitleLabel];
  id v26 = [self preferredFontForTextStyle:UIFontTextStyleCaption1];
  [v25 setFont:v26];

  [v25 setNumberOfLines:0];
  [v25 setAdjustsFontForContentSizeCategory:1];
  [v25 setTextColor:*(void *)&v1[OBJC_IVAR____TtC6FindMy14FMSimpleButton_subtitleColor]];
  [v1 addSubview:v25];
  NSString v27 = *(void **)&v1[OBJC_IVAR____TtC6FindMy14FMSimpleButton_separator];
  id v28 = [self quaternaryLabelColor];
  [v27 setBackgroundColor:v28];

  return [v1 addSubview:v27];
}

uint64_t sub_100490E34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AttributeContainer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    id v7 = *(id *)(Strong + OBJC_IVAR____TtC6FindMy14FMSimpleButton_subtitleColor);
  }
  sub_100491740();
  return AttributeContainer.subscript.setter();
}

uint64_t sub_100490F24()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

void sub_100490F80()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy14FMSimpleButton_separator];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy14FMSimpleButton_button];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy14FMSimpleButton_subtitleLabel];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v4 = [v1 topAnchor];
  id v5 = [v3 bottomAnchor];
  if (qword_1006AE228 != -1) {
    swift_once();
  }
  id v44 = [v4 constraintEqualToAnchor:v5 constant:*(double *)&qword_1006D20C0];

  LODWORD(v6) = 1144750080;
  [v44 setPriority:v6];
  int v45 = self;
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1005697A0;
  id v8 = [v2 topAnchor];
  id v9 = [v0 topAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9 constant:*(double *)&qword_1006D20C0];

  *(void *)(v7 + 32) = v10;
  id v11 = [v2 leadingAnchor];
  id v12 = [v0 leadingAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12];

  *(void *)(v7 + 40) = v13;
  id v14 = [v2 trailingAnchor];
  id v15 = [v0 trailingAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15];

  *(void *)(v7 + 48) = v16;
  id v17 = [v3 topAnchor];
  id v18 = [v2 bottomAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18 constant:*(double *)&qword_1006C0068];

  *(void *)(v7 + 56) = v19;
  id v20 = [v3 leadingAnchor];
  id v21 = [v0 leadingAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21];

  *(void *)(v7 + 64) = v22;
  id v23 = [v3 trailingAnchor];
  id v24 = [v0 trailingAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24];

  *(void *)(v7 + 72) = v25;
  id v26 = [v1 topAnchor];
  id v27 = [v2 bottomAnchor];
  id v28 = [v26 constraintGreaterThanOrEqualToAnchor:v27 constant:*(double *)&qword_1006D20C0];

  *(void *)(v7 + 80) = v28;
  *(void *)(v7 + 88) = v44;
  id v29 = v44;
  id v30 = [v1 bottomAnchor];
  id v31 = [v0 bottomAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31];

  *(void *)(v7 + 96) = v32;
  id v33 = [v1 leadingAnchor];
  id v34 = [v0 leadingAnchor];
  id v35 = [v33 constraintEqualToAnchor:v34];

  *(void *)(v7 + 104) = v35;
  id v36 = [v1 trailingAnchor];
  id v37 = [v0 trailingAnchor];
  id v38 = [v36 constraintEqualToAnchor:v37 constant:*(double *)&qword_1006D20C8];

  *(void *)(v7 + 112) = v38;
  id v39 = [v1 heightAnchor];
  id v40 = [self mainScreen];
  [v40 scale];
  double v42 = v41;

  id v43 = [v39 constraintEqualToConstant:1.0 / v42];
  *(void *)(v7 + 120) = v43;
  specialized Array._endMutation()();
  sub_100006060(0, (unint64_t *)&qword_1006AEE60);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v45 activateConstraints:isa];
}

id sub_100491608()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMSimpleButton();
  return [super dealloc];
}

uint64_t type metadata accessor for FMSimpleButton()
{
  return self;
}

uint64_t sub_1004916E0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100491718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100490E34(a1, a2);
}

void sub_100491720()
{
}

unint64_t sub_100491740()
{
  unint64_t result = qword_1006C00E0;
  if (!qword_1006C00E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C00E0);
  }
  return result;
}

void sub_100491794()
{
}

uint64_t sub_1004917BC()
{
  return 8;
}

uint64_t sub_1004917C8()
{
  return swift_release();
}

uint64_t sub_1004917D0(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1004917E0()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

void *sub_100491828(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_100491834()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UIButton.Configuration();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = OBJC_IVAR____TtC6FindMy14FMSimpleButton_button;
  sub_100006060(0, (unint64_t *)&qword_1006B2930);
  static UIButton.Configuration.plain()();
  *(void *)&v0[v3] = UIButton.init(configuration:primaryAction:)();
  uint64_t v4 = OBJC_IVAR____TtC6FindMy14FMSimpleButton_subtitleLabel;
  *(void *)&v1[v4] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v5 = OBJC_IVAR____TtC6FindMy14FMSimpleButton_separator;
  *(void *)&v1[v5] = [objc_allocWithZone((Class)UIView) init];
  v1[OBJC_IVAR____TtC6FindMy14FMSimpleButton_isActionEnabled] = 1;
  double v6 = &v1[OBJC_IVAR____TtC6FindMy14FMSimpleButton_subtitle];
  *double v6 = 0;
  v6[1] = 0;
  uint64_t v7 = OBJC_IVAR____TtC6FindMy14FMSimpleButton_subtitleColor;
  *(void *)&v1[v7] = [self tertiaryLabelColor];
  v1[OBJC_IVAR____TtC6FindMy14FMSimpleButton_separated] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1004919C4(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  unint64_t v3 = sub_1001AF8D4(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  uint64_t v5 = (uint64_t *)(*(void *)(a2 + 56) + 32 * v3);
  uint64_t v6 = *v5;
  uint64_t v7 = (void *)v5[2];
  swift_retain();
  swift_bridgeObjectRetain();
  id v8 = v7;
  return v6;
}

uint64_t sub_100491A44@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t result = sub_100053708(result, a2), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(a3 + 56) + 48 * result;
    uint64_t v9 = *(void *)v7;
    uint64_t v8 = *(void *)(v7 + 8);
    uint64_t v11 = *(void *)(v7 + 16);
    uint64_t v10 = *(void *)(v7 + 24);
    uint64_t v12 = *(unsigned __int8 *)(v7 + 32);
    uint64_t v13 = *(void *)(v7 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v8 = 0;
    uint64_t v11 = 0;
    uint64_t v10 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
  }
  *a4 = v9;
  a4[1] = v8;
  a4[2] = v11;
  a4[3] = v10;
  a4[4] = v12;
  a4[5] = v13;
  return result;
}

uint64_t sub_100491AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  unint64_t v4 = sub_100053708(a1, a2);
  if ((v5 & 1) == 0) {
    return 0;
  }
  char v6 = (uint64_t *)(*(void *)(a3 + 56) + 32 * v4);
  uint64_t v7 = *v6;
  uint64_t v8 = (void *)v6[2];
  uint64_t v9 = (void *)v6[3];
  swift_bridgeObjectRetain();
  id v10 = v8;
  id v11 = v9;
  return v7;
}

void sub_100491B68()
{
  sub_1004DE808();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_sectionLabel);
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v2 = [self mainBundle];
  v7._uint64_t countAndFlagsBits = 0xD000000000000032;
  v7._unint64_t object = (void *)0x800000010059F530;
  v3._unint64_t object = (void *)0x800000010059F500;
  v3._uint64_t countAndFlagsBits = 0xD000000000000020;
  v4._uint64_t countAndFlagsBits = 0;
  v4._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v7);

  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setText:v5];
}

void sub_100491C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v220 = a3;
  uint64_t v219 = a1;
  uint64_t v5 = sub_10005D034((uint64_t *)&unk_1006C0CE0);
  __chkstk_darwin(v5 - 8);
  Swift::String v7 = (char *)&v183 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10005D034(&qword_1006AF740);
  __chkstk_darwin(v8 - 8);
  uint64_t v218 = (char *)&v183 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v217 = type metadata accessor for FMFFriend();
  uint64_t v209 = *(void *)(v217 - 8);
  __chkstk_darwin(v217);
  uint64_t v202 = (char *)&v183 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = type metadata accessor for PersonNameComponents();
  uint64_t v11 = *(void *)(v199 - 8);
  __chkstk_darwin(v199);
  uint64_t v222 = (char *)&v183 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = type metadata accessor for FMFLocationAlertAcceptanceStatus();
  uint64_t v13 = *(void *)(v194 - 8);
  __chkstk_darwin(v194);
  unint64_t v186 = (char *)&v183 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = sub_10005D034((uint64_t *)&unk_1006AEE30);
  __chkstk_darwin(v193);
  uint64_t v203 = (uint64_t)&v183 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10005D034((uint64_t *)&unk_1006C2200);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v192 = (uint64_t)&v183 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v216 = (uint64_t)&v183 - v20;
  __chkstk_darwin(v19);
  id v22 = (char *)&v183 - v21;
  uint64_t v245 = (void *)type metadata accessor for FMFLocationAlertTarget();
  uint64_t v23 = *(v245 - 1);
  uint64_t v24 = __chkstk_darwin(v245);
  uint64_t v225 = (char *)&v183 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  v224 = (char *)&v183 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v239 = (char *)&v183 - v29;
  __chkstk_darwin(v28);
  uint64_t v238 = (char *)&v183 - v30;
  uint64_t v31 = type metadata accessor for FMFLocationAlert();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v208 = (char *)&v183 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v221 = (char *)&v183 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  char v212 = (char *)&v183 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  unint64_t v234 = (char *)&v183 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  id v43 = (char *)&v183 - v42;
  __chkstk_darwin(v41);
  v240 = (char *)&v183 - v44;
  sub_1004940F4();
  if (!a2) {
    goto LABEL_102;
  }
  BOOL v210 = v22;
  uint64_t v226 = v3;
  uint64_t v45 = *(void *)(a2 + 16);
  uint64_t v46 = &unk_10055B000;
  unint64_t v237 = v7;
  if (v45)
  {
    *(void *)&long long v236 = v45;
    uint64_t v48 = *(void (**)(void *))(v32 + 16);
    uint64_t v47 = v32 + 16;
    uint64_t v246 = v48;
    uint64_t v49 = *(unsigned __int8 *)(v47 + 64);
    uint64_t v50 = (v49 + 32) & ~v49;
    os_log_type_t v51 = (void *)(a2 + v50);
    uint64_t v52 = *(void *)(v47 + 56);
    unsigned int v223 = enum case for FMFLocationAlertTarget.alertFriends(_:);
    uint64_t v233 = (void (**)(char *, void, id))(v23 + 104);
    uint64_t v232 = (void (**)(char *, id))(v23 + 8);
    uint64_t v53 = v47 - 8;
    unsigned int v211 = enum case for FMFLocationAlertTarget.alertMe(_:);
    unsigned int v190 = enum case for FMFLocationAlertAcceptanceStatus.hidden(_:);
    uint64_t v189 = (void (**)(uint64_t, void, uint64_t))(v13 + 104);
    uint64_t v188 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56);
    uint64_t v187 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    uint64_t v184 = (void (**)(char *, id, uint64_t))(v13 + 32);
    char v185 = (void (**)(uint64_t, uint64_t))(v13 + 8);
    uint64_t v198 = CNContactNicknameKey;
    uint64_t v197 = CNContactGivenNameKey;
    uint64_t v196 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v204 = v209 + 16;
    uint64_t v214 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v209 + 56);
    v213 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v209 + 48);
    unint64_t v201 = (void (**)(char *, uint64_t, uint64_t))(v209 + 32);
    unint64_t v195 = CNContactFamilyNameKey;
    uint64_t v200 = (void (**)(char *, uint64_t))(v209 + 8);
    uint64_t v191 = (void (**)(unint64_t, char *, const char *))(v47 + 16);
    uint64_t v215 = v50;
    uint64_t v229 = v52;
    uint64_t v207 = v52 + v50;
    uint64_t v206 = v49 | 7;
    uint64_t v183 = a2;
    swift_bridgeObjectRetain();
    uint64_t v54 = v51;
    uint64_t v231 = 0;
    os_log_type_t v55 = &_swiftEmptyDictionarySingleton;
    long long v205 = xmmword_10055B970;
    uint64_t v228 = v47;
    uint64_t v227 = v43;
    uint64_t v56 = v240;
    v243 = (const char *)v31;
    uint64_t v242 = v53;
    while (1)
    {
      uint64_t v244 = v55;
      uint64_t v235 = v54;
      v246(v56);
      FMFLocationAlert.locationAlertTarget.getter();
      NSString v58 = (void (*)(char *, void, void *))*v233;
      (*v233)(v239, v223, v245);
      sub_1004954DC((unint64_t *)&unk_1006C22D0, (void (*)(uint64_t))&type metadata accessor for FMFLocationAlertTarget);
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      BOOL v59 = v247 == v249 && v248 == v250;
      if (v59) {
        char v60 = 1;
      }
      else {
        char v60 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v61 = *v232;
      unint64_t v62 = v245;
      (*v232)(v239, v245);
      v61(v238, v62);
      uint64_t v56 = v240;
      ((void (*)(char *, char *, uint64_t))v246)(v43, v240, v31);
      if (v60) {
        char v63 = FMFLocationAlert.setByMe.getter();
      }
      else {
        char v63 = 0;
      }
      long long v64 = v234;
      uint64_t v65 = *(void (**)(char *, uint64_t))v242;
      int v66 = v43;
      double v67 = v243;
      (*(void (**)(char *, const char *))v242)(v66, v243);
      ((void (*)(char *, void *, const char *))v246)(v64, v56, v67);
      uint64_t v241 = v65;
      if (v63)
      {
        v65(v64, (uint64_t)v67);
        os_log_type_t v55 = v244;
        goto LABEL_19;
      }
      FMFLocationAlert.locationAlertTarget.getter();
      v58(v225, v211, v245);
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      if (v247 == v249 && v248 == v250)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v71 = v245;
        v61(v225, v245);
        v61(v224, v71);
        long long v72 = v212;
        long long v73 = v234;
        uint64_t v31 = (uint64_t)v243;
        uint64_t v74 = (void (*)(char *, char *, uint64_t))v246;
        ((void (*)(char *, char *, const char *))v246)(v212, v234, v243);
        os_log_type_t v55 = v244;
        uint64_t v75 = v216;
        uint64_t v76 = v241;
      }
      else
      {
        char v77 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v78 = v245;
        v61(v225, v245);
        v61(v224, v78);
        long long v72 = v212;
        long long v73 = v234;
        uint64_t v31 = (uint64_t)v243;
        uint64_t v74 = (void (*)(char *, char *, uint64_t))v246;
        ((void (*)(char *, char *, const char *))v246)(v212, v234, v243);
        os_log_type_t v55 = v244;
        uint64_t v75 = v216;
        uint64_t v76 = v241;
        if ((v77 & 1) == 0)
        {
          v241(v72, v31);
          id v57 = v221;
          v74(v221, v73, v31);
LABEL_5:
          v76(v57, v31);
          v76(v73, v31);
          id v43 = v227;
          uint64_t v56 = v240;
          goto LABEL_6;
        }
      }
      char v79 = FMFLocationAlert.setOnMe.getter();
      v76(v72, v31);
      id v57 = v221;
      v74(v221, v73, v31);
      uint64_t v80 = (uint64_t)v210;
      if ((v79 & 1) == 0) {
        goto LABEL_5;
      }
      FMFLocationAlert.acceptanceStatus.getter();
      uint64_t v81 = v194;
      (*v189)(v75, v190, v194);
      (*v188)(v75, 0, 1, v81);
      uint64_t v82 = v203;
      uint64_t v83 = (void *)(v203 + *(int *)(v193 + 48));
      sub_100495454(v80, v203);
      id v230 = v83;
      sub_100495454(v75, (uint64_t)v83);
      uint64_t v84 = v75;
      uint64_t v85 = *v187;
      uint64_t v86 = v81;
      if ((*v187)(v82, 1, v81) == 1)
      {
        sub_100003F10(v84, (uint64_t *)&unk_1006C2200);
        sub_100003F10(v80, (uint64_t *)&unk_1006C2200);
        v76(v221, v31);
        v76(v234, v31);
        int v87 = v85((uint64_t)v230, 1, v81);
        id v43 = v227;
        uint64_t v56 = v240;
        os_log_type_t v55 = v244;
        if (v87 != 1) {
          goto LABEL_48;
        }
        sub_100003F10(v203, (uint64_t *)&unk_1006C2200);
      }
      else
      {
        uint64_t v105 = v192;
        sub_100495454(v82, v192);
        id v106 = v230;
        uint64_t v107 = v86;
        int v108 = v85((uint64_t)v230, 1, v86);
        id v43 = v227;
        uint64_t v56 = v240;
        if (v108 == 1)
        {
          sub_100003F10(v216, (uint64_t *)&unk_1006C2200);
          sub_100003F10((uint64_t)v210, (uint64_t *)&unk_1006C2200);
          v76(v221, v31);
          v76(v234, v31);
          (*v185)(v105, v107);
          os_log_type_t v55 = v244;
LABEL_48:
          sub_100003F10(v203, (uint64_t *)&unk_1006AEE30);
LABEL_19:
          uint64_t v68 = (void *)FMFLocationAlert.emails.getter();
          if (v68)
          {
            if (v68[2])
            {
              uint64_t v70 = v68[4];
              uint64_t v69 = v68[5];
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v70 = 0;
              uint64_t v69 = 0xE000000000000000;
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v70 = 0;
            uint64_t v69 = 0xE000000000000000;
          }
          unint64_t v88 = dispatch thunk of FMFContactsDataController.searchInStore(handle:keysToFetch:)();
          if (!v88) {
            goto LABEL_53;
          }
          unint64_t v89 = v88;
          uint64_t v90 = v88 & 0xFFFFFFFFFFFFFF8;
          if (v88 >> 62)
          {
            if (!_CocoaArrayWrapper.endIndex.getter()) {
              goto LABEL_52;
            }
LABEL_36:
            if ((v89 & 0xC000000000000001) != 0)
            {
              id v91 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if (!*(void *)(v90 + 16)) {
                goto LABEL_104;
              }
              id v91 = *(id *)(v89 + 32);
            }
            uint64_t v92 = v91;
            swift_bridgeObjectRelease();
            id v93 = v92;
            PersonNameComponents.init()();
            if ([v93 isKeyAvailable:v198])
            {
              id v94 = [v93 nickname];
              static String._unconditionallyBridgeFromObjectiveC(_:)();

              PersonNameComponents.nickname.setter();
            }
            if ([v93 isKeyAvailable:v197])
            {
              id v95 = [v93 givenName];
              static String._unconditionallyBridgeFromObjectiveC(_:)();

              PersonNameComponents.givenName.setter();
            }
            if ([v93 isKeyAvailable:v195])
            {
              id v96 = [v93 familyName];
              static String._unconditionallyBridgeFromObjectiveC(_:)();

              PersonNameComponents.familyName.setter();
            }
            uint64_t v97 = self;
            uint64_t v98 = v222;
            Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
            id v100 = [v97 localizedStringFromPersonNameComponents:isa style:1 options:0];

            uint64_t v101 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v102 = v93;
            unint64_t v104 = v103;

            (*v196)(v98, v199);
            id v230 = v102;
          }
          else
          {
            if (*(void *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_36;
            }
LABEL_52:
            unint64_t v88 = swift_bridgeObjectRelease();
LABEL_53:
            uint64_t v101 = 0;
            id v230 = 0;
            unint64_t v104 = 0xE000000000000000;
          }
          uint64_t v111 = HIBYTE(v104) & 0xF;
          if ((v104 & 0x2000000000000000) == 0) {
            uint64_t v111 = v101 & 0xFFFFFFFFFFFFLL;
          }
          if (v111)
          {
            uint64_t v112 = v70;
          }
          else
          {
            swift_bridgeObjectRelease();
            unint64_t v88 = swift_bridgeObjectRetain();
            uint64_t v112 = v70;
            uint64_t v101 = v70;
            unint64_t v104 = v69;
          }
          __chkstk_darwin(v88);
          v257._unint64_t object = v56;
          uint64_t v113 = v219;
          swift_bridgeObjectRetain();
          uint64_t v114 = v231;
          uint64_t v115 = sub_100496E84(sub_1004954BC, (uint64_t)(&v183 - 4), v113);
          uint64_t v116 = *(void *)(v115 + 16);
          uint64_t v231 = v114;
          if (v116)
          {
            uint64_t v117 = (uint64_t)v218;
            uint64_t v118 = v217;
            (*(void (**)(char *, unint64_t, uint64_t))(v209 + 16))(v218, v115 + ((*(unsigned __int8 *)(v209 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v209 + 80)), v217);
            uint64_t v119 = 0;
          }
          else
          {
            uint64_t v119 = 1;
            uint64_t v117 = (uint64_t)v218;
            uint64_t v118 = v217;
          }
          (*v214)(v117, v119, 1, v118);
          swift_bridgeObjectRelease();
          int v120 = (*v213)(v117, 1, v118);
          uint64_t v56 = v240;
          if (v120 == 1)
          {
            sub_100003F10(v117, &qword_1006AF740);
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v121 = v202;
            (*v201)(v202, v117, v118);
            uint64_t v112 = FMFFriend.identifier.getter();
            uint64_t v69 = v122;
            uint64_t v101 = FMFFriend.name.getter();
            unint64_t v104 = v123;
            (*v200)(v121, v118);
          }
          if (v55[2])
          {
            swift_bridgeObjectRetain();
            unint64_t v124 = sub_100053708(v112, v69);
            if (v125)
            {
              unint64_t v126 = *(void *)(v55[7] + 48 * v124 + 40);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              ((void (*)(char *, void *, const char *))v246)(v208, v56, v243);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v126 = sub_10007D4E8(0, *(void *)(v126 + 16) + 1, 1, v126);
              }
              unint64_t v128 = *(void *)(v126 + 16);
              unint64_t v127 = *(void *)(v126 + 24);
              if (v128 >= v127 >> 1) {
                unint64_t v126 = sub_10007D4E8(v127 > 1, v128 + 1, 1, v126);
              }
              *(void *)(v126 + 16) = v128 + 1;
              uint64_t v129 = v243;
              (*v191)(v126 + v215 + v128 * v229, v208, v243);
              v254[0] = v112;
              v254[1] = v69;
              v254[2] = v101;
              v254[3] = v104;
              BOOL v255 = v120 != 1;
              unint64_t v256 = v126;
              swift_bridgeObjectRetain();
              uint64_t v130 = v244;
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v247 = v130;
              uint64_t v132 = v254;
              uint64_t v133 = v112;
              uint64_t v31 = (uint64_t)v129;
              goto LABEL_74;
            }
            swift_bridgeObjectRelease();
          }
          BOOL v134 = v120 != 1;
          sub_10005D034(&qword_1006AEF70);
          uint64_t v135 = swift_allocObject();
          *(_OWORD *)(v135 + 16) = v205;
          uint64_t v136 = v243;
          ((void (*)(uint64_t, void *, const char *))v246)(v135 + v215, v56, v243);
          v251[0] = v112;
          v251[1] = v69;
          v251[2] = v101;
          v251[3] = v104;
          BOOL v252 = v134;
          uint64_t v253 = v135;
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v247 = v55;
          uint64_t v132 = v251;
          uint64_t v133 = v112;
          uint64_t v31 = (uint64_t)v136;
LABEL_74:
          sub_1001B83C8(v132, v133, v69, isUniquelyReferenced_nonNull_native);
          os_log_type_t v55 = v247;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v43 = v227;
          v241((char *)v56, v31);
          goto LABEL_7;
        }
        uint64_t v109 = v186;
        (*v184)(v186, v106, v107);
        sub_1004954DC((unint64_t *)&unk_1006AEE70, (void (*)(uint64_t))&type metadata accessor for FMFLocationAlertAcceptanceStatus);
        LODWORD(v230) = dispatch thunk of static Equatable.== infix(_:_:)();
        BOOL v110 = *v185;
        (*v185)((uint64_t)v109, v107);
        sub_100003F10(v216, (uint64_t *)&unk_1006C2200);
        sub_100003F10((uint64_t)v210, (uint64_t *)&unk_1006C2200);
        v241(v221, v31);
        v241(v234, v31);
        v110(v192, v107);
        uint64_t v76 = v241;
        sub_100003F10(v82, (uint64_t *)&unk_1006C2200);
        os_log_type_t v55 = v244;
        if ((v230 & 1) == 0) {
          goto LABEL_19;
        }
        uint64_t v31 = (uint64_t)v243;
      }
LABEL_6:
      v76((char *)v56, v31);
LABEL_7:
      uint64_t v54 = (void *)((char *)v235 + v229);
      BOOL v59 = (void)v236 == 1;
      *(void *)&long long v236 = v236 - 1;
      Swift::String v7 = v237;
      if (v59)
      {
        swift_bridgeObjectRelease();
        uint64_t v46 = (_OWORD *)&unk_10055B000;
        uint64_t v137 = v231;
        goto LABEL_78;
      }
    }
  }
  uint64_t v137 = 0;
  os_log_type_t v55 = &_swiftEmptyDictionarySingleton;
LABEL_78:
  swift_bridgeObjectRetain_n();
  uint64_t v138 = sub_1004AEC2C((uint64_t)v55);
  swift_bridgeObjectRelease();
  v247 = v138;
  sub_100494904(&v247);
  if (v137) {
    goto LABEL_105;
  }
  swift_bridgeObjectRelease();
  uint64_t v235 = v247;
  uint64_t v139 = (void (*)(void *))v247[2];
  if (!v139)
  {
LABEL_101:
    swift_release();
    *(void *)(v226 + OBJC_IVAR____TtC6FindMy22FMMyLocationAlertsView_rowViewModel) = v55;
    swift_bridgeObjectRelease();
LABEL_102:
    sub_100493F04();
    return;
  }
  v243 = "handleFriendTapWithGestureRecognizer:";
  uint64_t v241 = (void (*)(char *, uint64_t))self;
  uint64_t v140 = v235 + 11;
  uint64_t v242 = 1;
  uint64_t v239 = (char *)0x800000010059F5A0;
  uint64_t v238 = (char *)0x800000010059F570;
  long long v236 = v46[151];
  v240 = (char *)(v226 + OBJC_IVAR____TtC6FindMy22FMMyLocationAlertsView_friendsRow);
  while (1)
  {
    uint64_t v246 = v139;
    uint64_t v141 = v55;
    uint64_t v142 = *(v140 - 5);
    uint64_t v143 = *(v140 - 4);
    uint64_t v145 = *(v140 - 3);
    uint64_t v144 = *(v140 - 2);
    uint64_t v244 = *(void **)(*v140 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v146 = objc_allocWithZone((Class)UITapGestureRecognizer);
    uint64_t v245 = [v146 initWithTarget:v226 action:v243];
    uint64_t v147 = type metadata accessor for FMPlatterIcon();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v147 - 8) + 56))(v7, 1, 1, v147);
    if (qword_1006AE228 != -1) {
      swift_once();
    }
    double v148 = *(double *)&qword_1006D20C8;
    id v149 = objc_allocWithZone((Class)type metadata accessor for FMMultiSettingsRowView());
    uint64_t v150 = sub_1004FC584(0, 0, 0, (uint64_t)v7, 1, 0, 1, v148);
    unint64_t v151 = &v150[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_identifier];
    *(void *)unint64_t v151 = v142;
    *((void *)v151 + 1) = v143;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    Swift::Int v152 = &v150[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_title];
    *(void *)Swift::Int v152 = v145;
    *((void *)v152 + 1) = v144;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v153 = *(void **)&v150[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_titleLabel];
    if (*((void *)v152 + 1))
    {
      id v154 = v153;
      swift_bridgeObjectRetain();
      NSString v155 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v156 = v153;
      NSString v155 = 0;
    }
    [v153 setText:v155];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    os_log_type_t v55 = v141;
    uint64_t v157 = v141[2];
    if (v157 != 1) {
      break;
    }
    id v158 = [*(id *)&v150[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView] layer];
    [v158 setCornerRadius:10.0];

LABEL_95:
    v247 = 0;
    unint64_t v248 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v168 = [v241 mainBundle];
    v257._uint64_t countAndFlagsBits = 0xD000000000000034;
    v257._unint64_t object = v239;
    v169._uint64_t countAndFlagsBits = 0xD000000000000022;
    v169._unint64_t object = v238;
    v170._uint64_t countAndFlagsBits = 0;
    v170._unint64_t object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v169, (Swift::String_optional)0, (NSBundle)v168, v170, v257);

    sub_10005D034((uint64_t *)&unk_1006AF790);
    uint64_t v171 = swift_allocObject();
    *(_OWORD *)(v171 + 16) = v236;
    *(void *)(v171 + 56) = &type metadata for Int;
    *(void *)(v171 + 64) = &protocol witness table for Int;
    *(void *)(v171 + 32) = v244;
    uint64_t v172 = String.init(format:_:)();
    uint64_t v174 = v173;
    swift_bridgeObjectRelease();
    uint64_t v175 = (uint64_t *)&v150[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle];
    *uint64_t v175 = v172;
    v175[1] = v174;
    swift_bridgeObjectRelease();
    uint64_t v176 = *(void **)&v150[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel];
    if (v175[1])
    {
      id v177 = v176;
      swift_bridgeObjectRetain();
      NSString v178 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v179 = v176;
      NSString v178 = 0;
    }
    [v176 setText:v178];

    uint64_t v180 = v245;
    [v150 addGestureRecognizer:v245];
    char v181 = v240;
    swift_beginAccess();
    uint64_t v182 = v150;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v181 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v181 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();

    v140 += 8;
    uint64_t v139 = (void (*)(void *))((char *)v246 - 1);
    Swift::String v7 = v237;
    if (v246 == (void (*)(void *))1) {
      goto LABEL_101;
    }
  }
  uint64_t v159 = v242;
  if (v242 != 1)
  {
    if (v242 != v157) {
      goto LABEL_93;
    }
    goto LABEL_92;
  }
  uint64_t v160 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView;
  id v161 = [*(id *)&v150[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView] layer];
  [v161 setCornerRadius:10.0];

  id v162 = [*(id *)&v150[v160] layer];
  [v162 setMaskedCorners:3];

  if (v141[2] == 1)
  {
LABEL_92:
    uint64_t v163 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView;
    id v164 = [*(id *)&v150[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView] layer];
    [v164 setCornerRadius:10.0];

    id v165 = [*(id *)&v150[v163] layer];
    [v165 setMaskedCorners:12];
  }
LABEL_93:
  BOOL v166 = __OFADD__(v159, 1);
  uint64_t v167 = v159 + 1;
  if (!v166)
  {
    uint64_t v242 = v167;
    goto LABEL_95;
  }
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  swift_release();
  __break(1u);
}

uint64_t sub_100493ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (FMFLocationAlert.setByMe.getter())
  {
    uint64_t result = FMFFriend.contactHandles.getter();
    uint64_t v6 = result;
    int64_t v7 = 0;
    uint64_t v45 = result + 56;
    uint64_t v8 = 1 << *(unsigned char *)(result + 32);
    uint64_t v9 = -1;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    unint64_t v10 = v9 & *(void *)(result + 56);
    int64_t v46 = (unint64_t)(v8 + 63) >> 6;
    while (1)
    {
      while (1)
      {
LABEL_6:
        if (v10)
        {
          unint64_t v11 = __clz(__rbit64(v10));
          v10 &= v10 - 1;
          unint64_t v12 = v11 | (v7 << 6);
        }
        else
        {
          if (__OFADD__(v7++, 1)) {
            goto LABEL_72;
          }
          if (v7 >= v46)
          {
LABEL_57:
            swift_release();
            return 0;
          }
          unint64_t v14 = *(void *)(v45 + 8 * v7);
          if (!v14)
          {
            int64_t v15 = v7 + 1;
            if (v7 + 1 >= v46) {
              goto LABEL_57;
            }
            unint64_t v14 = *(void *)(v45 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v7 + 2;
              if (v7 + 2 >= v46) {
                goto LABEL_57;
              }
              unint64_t v14 = *(void *)(v45 + 8 * v15);
              if (!v14)
              {
                int64_t v15 = v7 + 3;
                if (v7 + 3 >= v46) {
                  goto LABEL_57;
                }
                unint64_t v14 = *(void *)(v45 + 8 * v15);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v7 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      goto LABEL_73;
                    }
                    if (v7 >= v46) {
                      goto LABEL_57;
                    }
                    unint64_t v14 = *(void *)(v45 + 8 * v7);
                    ++v15;
                    if (v14) {
                      goto LABEL_18;
                    }
                  }
                }
              }
            }
            int64_t v7 = v15;
          }
LABEL_18:
          unint64_t v10 = (v14 - 1) & v14;
          unint64_t v12 = __clz(__rbit64(v14)) + (v7 << 6);
        }
        uint64_t v16 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v12);
        uint64_t v18 = *v16;
        uint64_t v17 = v16[1];
        swift_bridgeObjectRetain();
        uint64_t v19 = (void *)FMFLocationAlert.emails.getter();
        if (v19) {
          break;
        }
        uint64_t result = swift_bridgeObjectRelease();
      }
      uint64_t v20 = v19;
      uint64_t v21 = v19[2];
      if (v21)
      {
        BOOL v22 = v19[4] == v18 && v19[5] == v17;
        if (v22 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
LABEL_53:
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_56;
        }
        if (v21 != 1)
        {
          if (v20[6] == v18 && v20[7] == v17) {
            goto LABEL_53;
          }
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if (result) {
            goto LABEL_53;
          }
          if (v21 != 2) {
            break;
          }
        }
      }
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    uint64_t v42 = a2;
    uint64_t v43 = v6;
    uint64_t v44 = v3;
    uint64_t v24 = v20 + 9;
    uint64_t v25 = 2;
    while (1)
    {
      uint64_t v26 = v25 + 1;
      if (__OFADD__(v25, 1)) {
        break;
      }
      BOOL v27 = *(v24 - 1) == v18 && *v24 == v17;
      if (v27 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      v24 += 2;
      ++v25;
      if (v26 == v21)
      {
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v6 = v43;
        uint64_t v3 = v44;
        a2 = v42;
        goto LABEL_6;
      }
    }
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
  }
  else
  {
    uint64_t result = FMFLocationAlert.followerIds.getter();
    if (result)
    {
      uint64_t v28 = result;
      uint64_t v29 = *(void *)(result + 16);
      if (v29)
      {
        uint64_t v31 = *(void *)(result + 32);
        uint64_t v30 = *(void *)(result + 40);
        swift_bridgeObjectRetain();
        if (FMFFriend.identifier.getter() == v31 && v32 == v30)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return 1;
        }
        else
        {
          char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if ((v33 & 1) == 0)
          {
            uint64_t v34 = 0;
            uint64_t v35 = (uint64_t *)(v28 + 56);
            uint64_t v36 = v29 - 1;
            while (1)
            {
              if (v36 == v34) {
                goto LABEL_54;
              }
              if ((unint64_t)++v34 >= *(void *)(v28 + 16)) {
                goto LABEL_74;
              }
              uint64_t v38 = *(v35 - 1);
              uint64_t v37 = *v35;
              swift_bridgeObjectRetain();
              if (FMFFriend.identifier.getter() == v38 && v39 == v37) {
                break;
              }
              v35 += 2;
              char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              uint64_t result = swift_bridgeObjectRelease();
              if (v41)
              {
                swift_bridgeObjectRelease();
                return 1;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            return 1;
          }
LABEL_56:
          swift_bridgeObjectRelease();
          return 1;
        }
      }
      else
      {
LABEL_54:
        swift_bridgeObjectRelease();
        return 0;
      }
    }
  }
  return result;
}

void sub_100493F04()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC6FindMy22FMMyLocationAlertsView_friendsRow);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (!v3) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v3) {
      goto LABEL_10;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = 0;
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentStackView);
  do
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v6 = *(id *)(v2 + 8 * v4 + 32);
    }
    int64_t v7 = v6;
    ++v4;
    [v5 addArrangedSubview:v6];
  }
  while (v3 != v4);
LABEL_10:
  swift_bridgeObjectRelease();
  unint64_t v8 = *v1;
  if (!(v8 >> 62))
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_12;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  if (!v9) {
    goto LABEL_19;
  }
LABEL_12:
  unint64_t v10 = v9 - 1;
  if (__OFSUB__(v9, 1))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if ((v8 & 0xC000000000000001) != 0)
  {
LABEL_23:
    unint64_t v11 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_17;
  }
  if ((v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v10 < *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    unint64_t v11 = *(id *)(v8 + 8 * v10 + 32);
LABEL_17:
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    v12[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separated] = 0;
    [*(id *)&v12[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separator] setHidden:1];

    return;
  }
  __break(1u);
}

uint64_t sub_1004940F4()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC6FindMy22FMMyLocationAlertsView_friendsRow);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v3) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease_n();
    uint64_t *v1 = (uint64_t)_swiftEmptyArrayStorage;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    id v6 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentStackView);
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v2 + 8 * v5 + 32);
      }
      unint64_t v8 = v7;
      ++v5;
      [v7 removeFromSuperview];
      [v6 removeArrangedSubview:v8];
    }
    while (v3 != v5);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_100494240(void *a1)
{
  id v2 = [a1 view];
  if (v2)
  {
    id v14 = v2;
    type metadata accessor for FMMultiSettingsRowView();
    uint64_t v3 = swift_dynamicCastClass();
    if (v3 && (uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_identifier + 8)) != 0)
    {
      uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_identifier);
      uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC6FindMy22FMMyLocationAlertsView_rowViewModel);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100491A44(v5, v4, v6, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100494844((uint64_t)v15, (uint64_t)v16);
      if (*((void *)&v16[0] + 1))
      {
        long long v17 = v16[0];
        long long v18 = v16[1];
        long long v19 = v16[2];
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          unint64_t v8 = (void *)Strong;
          uint64_t v9 = *(void *)(Strong + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator);
          long long v20 = v17;
          long long v21 = v18;
          uint64_t v22 = *((void *)&v19 + 1);
          id v10 = objc_allocWithZone((Class)type metadata accessor for FMFriendLocationAlertsViewController());
          swift_retain();
          sub_1001D8968((uint64_t)&v20);
          sub_1001D8968((uint64_t)&v21);
          sub_1004948AC((uint64_t)&v22);
          id v11 = sub_10015421C(v9, (uint64_t)&v17);
          objc_allocWithZone((Class)type metadata accessor for FMActivityIndicatingNavigationController());
          id v12 = v11;
          id v13 = sub_1000BE210(v12, 2);
          [v8 presentViewController:v13 animated:1 completion:0];
          swift_unknownObjectRelease();

          sub_1001D89C0((uint64_t)&v20);
          sub_1001D89C0((uint64_t)&v21);
        }
        else
        {
          long long v20 = v17;
          sub_1001D89C0((uint64_t)&v20);
          long long v21 = v18;
          sub_1001D89C0((uint64_t)&v21);
          uint64_t v22 = *((void *)&v19 + 1);
        }
        sub_1004948D8((uint64_t)&v22);
      }
    }
    else
    {
    }
  }
}

uint64_t sub_1004945E0()
{
  sub_100068760(v0 + OBJC_IVAR____TtC6FindMy22FMMyLocationAlertsView_delegate);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_100494630()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMMyLocationAlertsView();
  [super dealloc];
}

uint64_t type metadata accessor for FMMyLocationAlertsView()
{
  return self;
}

uint64_t initializeWithCopy for FMLocationAlertGroupViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMLocationAlertGroupViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FMLocationAlertGroupViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FMLocationAlertGroupViewModel()
{
  return &type metadata for FMLocationAlertGroupViewModel;
}

uint64_t sub_100494844(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034(qword_1006C0130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004948AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1004948D8(uint64_t a1)
{
  return a1;
}

Swift::Int sub_100494904(void **a1)
{
  objc_super v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    objc_super v2 = (void *)sub_1002688C0(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  Swift::Int result = sub_100494970(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_100494970(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_10049509C(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  Swift::Int v119 = result;
  uint64_t v116 = a1;
  if (v3 < 2)
  {
    unint64_t v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      id v11 = (char *)_swiftEmptyArrayStorage;
LABEL_118:
      uint64_t v107 = v11;
      uint64_t v118 = v8;
      if (v12 >= 2)
      {
        uint64_t v108 = *v116;
        do
        {
          unint64_t v109 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v108) {
            goto LABEL_159;
          }
          BOOL v110 = v107;
          uint64_t v111 = *(void *)&v107[16 * v109 + 32];
          uint64_t v112 = *(void *)&v107[16 * v12 + 24];
          sub_100495190((char *)(v108 + (v111 << 6)), (char *)(v108 + (*(void *)&v107[16 * v12 + 16] << 6)), v108 + (v112 << 6), __dst);
          if (v1) {
            break;
          }
          if (v112 < v111) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            BOOL v110 = sub_1002687F8((uint64_t)v110);
          }
          if (v109 >= *((void *)v110 + 2)) {
            goto LABEL_149;
          }
          uint64_t v113 = &v110[16 * v109 + 32];
          *(void *)uint64_t v113 = v111;
          *((void *)v113 + 1) = v112;
          unint64_t v114 = *((void *)v110 + 2);
          if (v12 > v114) {
            goto LABEL_150;
          }
          memmove(&v110[16 * v12 + 16], &v110[16 * v12 + 32], 16 * (v114 - v12));
          uint64_t v107 = v110;
          *((void *)v110 + 2) = v114 - 1;
          unint64_t v12 = v114 - 1;
        }
        while (v114 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v118[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v118 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_10005D034(&qword_1006B2B78);
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v7 + 16) = v6;
    uint64_t v118 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v117 = *a1 + 40;
  uint64_t v115 = *a1 + 56;
  id v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v120 = v3;
  uint64_t v121 = v10;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = v10 + (v9 << 6);
    uint64_t v15 = *(void *)(v14 + 32);
    uint64_t v16 = *(void *)(v14 + 40);
    uint64_t v17 = v10 + (v13 << 6);
    if (v15 == *(void *)(v17 + 32) && v16 == *(void *)(v17 + 40))
    {
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    long long v21 = (void *)(v117 + (v20 << 6));
    do
    {
      uint64_t v23 = v10 + (v9 << 6);
      if (*(v21 - 1) == *(void *)(v23 + 32) && *v21 == *(void *)(v23 + 40))
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ _stringCompareWithSmolCheck(_:_:expecting:)()))
      {
        goto LABEL_36;
      }
      Swift::Int v22 = v20 + 1;
      v21 += 8;
      Swift::Int v9 = v20;
      Swift::Int v20 = v22;
    }
    while (v22 < v3);
    Swift::Int v20 = v22;
LABEL_36:
    Swift::Int v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        Swift::Int v25 = v20 << 6;
        Swift::Int v26 = v13 << 6;
        Swift::Int v27 = v20;
        Swift::Int v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = (_OWORD *)(v10 + v26);
            uint64_t v30 = v10 + v25;
            long long v31 = *(_OWORD *)(v10 + v26);
            long long v32 = *(_OWORD *)(v10 + v26 + 16);
            uint64_t v33 = *(void *)(v10 + v26 + 32);
            uint64_t v34 = *(void *)(v10 + v26 + 40);
            char v35 = *(unsigned char *)(v10 + v26 + 48);
            uint64_t v36 = *(void *)(v10 + v26 + 56);
            long long v37 = *(_OWORD *)(v10 + v25 - 16);
            long long v39 = *(_OWORD *)(v10 + v25 - 64);
            long long v38 = *(_OWORD *)(v10 + v25 - 48);
            v29[2] = *(_OWORD *)(v10 + v25 - 32);
            v29[3] = v37;
            _OWORD *v29 = v39;
            v29[1] = v38;
            *(_OWORD *)(v30 - 64) = v31;
            *(_OWORD *)(v30 - 48) = v32;
            *(void *)(v30 - 32) = v33;
            *(void *)(v30 - 24) = v34;
            *(unsigned char *)(v30 - 16) = v35;
            *(void *)(v30 - 8) = v36;
          }
          ++v28;
          v25 -= 64;
          v26 += 64;
        }
        while (v28 < v27);
      }
LABEL_45:
      Swift::Int v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v119) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v11 = sub_100268068(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v58 = *((void *)v11 + 2);
    unint64_t v57 = *((void *)v11 + 3);
    unint64_t v12 = v58 + 1;
    if (v58 >= v57 >> 1) {
      id v11 = sub_100268068((char *)(v57 > 1), v58 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    BOOL v59 = v11 + 32;
    char v60 = &v11[16 * v58 + 32];
    *(void *)char v60 = v13;
    *((void *)v60 + 1) = v9;
    if (v58)
    {
      uint64_t v10 = v121;
      while (1)
      {
        unint64_t v61 = v12 - 1;
        if (v12 >= 4)
        {
          int v66 = &v59[16 * v12];
          uint64_t v67 = *((void *)v66 - 8);
          uint64_t v68 = *((void *)v66 - 7);
          BOOL v72 = __OFSUB__(v68, v67);
          uint64_t v69 = v68 - v67;
          if (v72) {
            goto LABEL_135;
          }
          uint64_t v71 = *((void *)v66 - 6);
          uint64_t v70 = *((void *)v66 - 5);
          BOOL v72 = __OFSUB__(v70, v71);
          uint64_t v64 = v70 - v71;
          char v65 = v72;
          if (v72) {
            goto LABEL_136;
          }
          unint64_t v73 = v12 - 2;
          uint64_t v74 = &v59[16 * v12 - 32];
          uint64_t v76 = *(void *)v74;
          uint64_t v75 = *((void *)v74 + 1);
          BOOL v72 = __OFSUB__(v75, v76);
          uint64_t v77 = v75 - v76;
          if (v72) {
            goto LABEL_138;
          }
          BOOL v72 = __OFADD__(v64, v77);
          uint64_t v78 = v64 + v77;
          if (v72) {
            goto LABEL_141;
          }
          if (v78 >= v69)
          {
            id v96 = &v59[16 * v61];
            uint64_t v98 = *(void *)v96;
            uint64_t v97 = *((void *)v96 + 1);
            BOOL v72 = __OFSUB__(v97, v98);
            uint64_t v99 = v97 - v98;
            if (v72) {
              goto LABEL_145;
            }
            BOOL v89 = v64 < v99;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v90 = *((void *)v11 + 4);
            uint64_t v91 = *((void *)v11 + 5);
            BOOL v72 = __OFSUB__(v91, v90);
            uint64_t v83 = v91 - v90;
            char v84 = v72;
            goto LABEL_99;
          }
          uint64_t v63 = *((void *)v11 + 4);
          uint64_t v62 = *((void *)v11 + 5);
          BOOL v72 = __OFSUB__(v62, v63);
          uint64_t v64 = v62 - v63;
          char v65 = v72;
        }
        if (v65) {
          goto LABEL_137;
        }
        unint64_t v73 = v12 - 2;
        char v79 = &v59[16 * v12 - 32];
        uint64_t v81 = *(void *)v79;
        uint64_t v80 = *((void *)v79 + 1);
        BOOL v82 = __OFSUB__(v80, v81);
        uint64_t v83 = v80 - v81;
        char v84 = v82;
        if (v82) {
          goto LABEL_140;
        }
        uint64_t v85 = &v59[16 * v61];
        uint64_t v87 = *(void *)v85;
        uint64_t v86 = *((void *)v85 + 1);
        BOOL v72 = __OFSUB__(v86, v87);
        uint64_t v88 = v86 - v87;
        if (v72) {
          goto LABEL_143;
        }
        if (__OFADD__(v83, v88)) {
          goto LABEL_144;
        }
        if (v83 + v88 >= v64)
        {
          BOOL v89 = v64 < v88;
LABEL_105:
          if (v89) {
            unint64_t v61 = v73;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v84) {
          goto LABEL_139;
        }
        uint64_t v92 = &v59[16 * v61];
        uint64_t v94 = *(void *)v92;
        uint64_t v93 = *((void *)v92 + 1);
        BOOL v72 = __OFSUB__(v93, v94);
        uint64_t v95 = v93 - v94;
        if (v72) {
          goto LABEL_142;
        }
        if (v95 < v83) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v100 = v61 - 1;
        if (v61 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v101 = v10;
        uint64_t v102 = &v59[16 * v100];
        uint64_t v103 = *(void *)v102;
        unint64_t v104 = &v59[16 * v61];
        uint64_t v105 = *((void *)v104 + 1);
        sub_100495190((char *)(v101 + (*(void *)v102 << 6)), (char *)(v101 + (*(void *)v104 << 6)), v101 + (v105 << 6), __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v105 < v103) {
          goto LABEL_132;
        }
        if (v61 > *((void *)v11 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v102 = v103;
        *(void *)&v59[16 * v100 + 8] = v105;
        unint64_t v106 = *((void *)v11 + 2);
        if (v61 >= v106) {
          goto LABEL_134;
        }
        unint64_t v12 = v106 - 1;
        memmove(&v59[16 * v61], v104 + 16, 16 * (v106 - 1 - v61));
        *((void *)v11 + 2) = v106 - 1;
        BOOL v89 = v106 > 2;
        uint64_t v10 = v121;
        if (!v89) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
    uint64_t v10 = v121;
LABEL_15:
    Swift::Int v3 = v120;
    if (v9 >= v120)
    {
      unint64_t v8 = v118;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v119)) {
    goto LABEL_153;
  }
  if (v13 + v119 >= v3) {
    Swift::Int v40 = v3;
  }
  else {
    Swift::Int v40 = v13 + v119;
  }
  if (v40 >= v13)
  {
    if (v9 != v40)
    {
      uint64_t v41 = v115 + (v9 << 6);
      do
      {
        uint64_t v42 = v10 + (v9 << 6);
        uint64_t v43 = *(void *)(v42 + 32);
        uint64_t v44 = *(void *)(v42 + 40);
        Swift::Int v45 = v13;
        uint64_t v46 = v41;
        do
        {
          BOOL v47 = v43 == *(void *)(v46 - 88) && v44 == *(void *)(v46 - 80);
          if (v47 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v48 = (_OWORD *)(v46 - 56);
          uint64_t v49 = (_OWORD *)(v46 - 120);
          long long v51 = *(_OWORD *)(v46 - 88);
          long long v50 = *(_OWORD *)(v46 - 72);
          *(void *)(v46 - 64) = *(void *)v46;
          v46 -= 64;
          uint64_t v52 = *(void *)(v46 + 8);
          uint64_t v53 = *(void *)(v46 + 16);
          uint64_t v54 = *(void *)(v46 + 24);
          uint64_t v55 = *(void *)(v46 + 32);
          long long v56 = v49[1];
          *uint64_t v48 = *v49;
          v48[1] = v56;
          uint64_t v43 = *(void *)(v46 + 40);
          uint64_t v44 = *(void *)(v46 + 48);
          LOBYTE(v49) = *(unsigned char *)(v46 + 56);
          v48[2] = v51;
          v48[3] = v50;
          *(void *)(v46 - 56) = v52;
          *(void *)(v46 - 48) = v53;
          *(void *)(v46 - 40) = v54;
          *(void *)(v46 - 32) = v55;
          *(void *)(v46 - 24) = v43;
          *(void *)(v46 - 16) = v44;
          ++v45;
          *(unsigned char *)(v46 - 8) = (_BYTE)v49;
        }
        while (v9 != v45);
        ++v9;
        v41 += 64;
      }
      while (v9 != v40);
      Swift::Int v9 = v40;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10049509C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + (a3 << 6) + 56;
LABEL_5:
    uint64_t v9 = v7 + (v4 << 6);
    Swift::Int result = *(void *)(v9 + 32);
    uint64_t v10 = *(void *)(v9 + 40);
    uint64_t v11 = v6;
    uint64_t v12 = v8;
    while (1)
    {
      BOOL v13 = result == *(void *)(v12 - 88) && v10 == *(void *)(v12 - 80);
      if (v13 || (Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 64;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t v14 = (_OWORD *)(v12 - 56);
      uint64_t v15 = (_OWORD *)(v12 - 120);
      long long v17 = *(_OWORD *)(v12 - 88);
      long long v16 = *(_OWORD *)(v12 - 72);
      *(void *)(v12 - 64) = *(void *)v12;
      v12 -= 64;
      uint64_t v18 = *(void *)(v12 + 8);
      uint64_t v19 = *(void *)(v12 + 16);
      uint64_t v20 = *(void *)(v12 + 24);
      uint64_t v21 = *(void *)(v12 + 32);
      long long v22 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v22;
      Swift::Int result = *(void *)(v12 + 40);
      uint64_t v10 = *(void *)(v12 + 48);
      LOBYTE(v15) = *(unsigned char *)(v12 + 56);
      v14[2] = v17;
      void v14[3] = v16;
      *(void *)(v12 - 56) = v18;
      *(void *)(v12 - 48) = v19;
      *(void *)(v12 - 40) = v20;
      *(void *)(v12 - 32) = v21;
      *(void *)(v12 - 24) = result;
      *(void *)(v12 - 16) = v10;
      ++v11;
      *(unsigned char *)(v12 - 8) = (_BYTE)v15;
      if (v4 == v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100495190(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 63;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 6;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 63;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 6;
  uint64_t v36 = __src;
  char v35 = __dst;
  if (v10 >= v12 >> 6)
  {
    if (v11 >= -63)
    {
      if (__dst != a2 || &a2[64 * v13] <= __dst) {
        memmove(__dst, a2, v13 << 6);
      }
      long long v22 = &v4[64 * v13];
      uint64_t v34 = v22;
      uint64_t v36 = v6;
      if (v7 < v6 && v11 >= 64)
      {
        uint64_t v23 = (char *)(a3 - 64);
        do
        {
          uint64_t v24 = v23 + 64;
          BOOL v25 = *((void *)v22 - 4) == *((void *)v6 - 4) && *((void *)v22 - 3) == *((void *)v6 - 3);
          if (v25 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
          {
            uint64_t v34 = v22 - 64;
            if (v24 < v22 || v23 >= v22 || v24 != v22)
            {
              long long v30 = *((_OWORD *)v22 - 4);
              long long v31 = *((_OWORD *)v22 - 3);
              long long v32 = *((_OWORD *)v22 - 1);
              *((_OWORD *)v23 + 2) = *((_OWORD *)v22 - 2);
              *((_OWORD *)v23 + 3) = v32;
              *(_OWORD *)uint64_t v23 = v30;
              *((_OWORD *)v23 + 1) = v31;
            }
            Swift::Int v26 = v6;
            v22 -= 64;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            Swift::Int v26 = v6 - 64;
            if (v24 != v6 || v23 >= v6)
            {
              long long v27 = *(_OWORD *)v26;
              long long v28 = *((_OWORD *)v6 - 3);
              long long v29 = *((_OWORD *)v6 - 1);
              *((_OWORD *)v23 + 2) = *((_OWORD *)v6 - 2);
              *((_OWORD *)v23 + 3) = v29;
              *(_OWORD *)uint64_t v23 = v27;
              *((_OWORD *)v23 + 1) = v28;
            }
            uint64_t v36 = v6 - 64;
            if (v26 <= v7) {
              break;
            }
          }
          v23 -= 64;
          uint64_t v6 = v26;
        }
        while (v22 > v4);
      }
LABEL_52:
      sub_100268438((void **)&v36, &v35, &v34);
      return 1;
    }
  }
  else if (v8 >= -63)
  {
    if (__dst != __src || &__src[64 * v10] <= __dst) {
      memmove(__dst, __src, v10 << 6);
    }
    uint64_t v14 = &v4[64 * v10];
    uint64_t v34 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 64)
    {
      uint64_t v15 = v4;
      while (1)
      {
        BOOL v16 = *((void *)v6 + 4) == *((void *)v15 + 4) && *((void *)v6 + 5) == *((void *)v15 + 5);
        if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          uint64_t v4 = v15 + 64;
          uint64_t v18 = v15;
          long long v17 = v6;
          if (v7 == v15)
          {
            v15 += 64;
            if (v7 < v4) {
              goto LABEL_26;
            }
          }
          else
          {
            v15 += 64;
          }
        }
        else
        {
          long long v17 = v6 + 64;
          uint64_t v18 = v6;
          if (v7 == v6 && v7 < v17) {
            goto LABEL_26;
          }
        }
        long long v19 = *(_OWORD *)v18;
        long long v20 = *((_OWORD *)v18 + 1);
        long long v21 = *((_OWORD *)v18 + 3);
        *((_OWORD *)v7 + 2) = *((_OWORD *)v18 + 2);
        *((_OWORD *)v7 + 3) = v21;
        *(_OWORD *)uint64_t v7 = v19;
        *((_OWORD *)v7 + 1) = v20;
LABEL_26:
        v7 += 64;
        if (v15 < v14)
        {
          uint64_t v6 = v17;
          if ((unint64_t)v17 < a3) {
            continue;
          }
        }
        char v35 = v4;
        uint64_t v36 = v7;
        goto LABEL_52;
      }
    }
    goto LABEL_52;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100495454(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006C2200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004954BC(uint64_t a1)
{
  return sub_100493ACC(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1004954DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FMObjectAssociation.__allocating_init(policy:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  FMObjectAssociation.init(policy:)(a1);
  return v2;
}

uint64_t FMObjectAssociation.init(policy:)(uint64_t a1)
{
  uint64_t v12 = a1;
  uint64_t v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v7 - 8);
  v11[1] = sub_10005EC68();
  static DispatchQoS.default.getter();
  uint64_t v13 = _swiftEmptyArrayStorage;
  sub_100046B28((unint64_t *)&unk_1006AE490, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10005D034((uint64_t *)&unk_1006B6C50);
  sub_100045050((unint64_t *)&unk_1006AE4A0, (uint64_t *)&unk_1006B6C50);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v2);
  uint64_t v8 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v9 = v12;
  *(void *)(v1 + 16) = v8;
  *(void *)(v1 + 24) = v9;
  return v1;
}

uint64_t FMObjectAssociation.subscript.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v11 = 0;
  uint64_t v4 = *(NSObject **)(v1 + 16);
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v5[2] = &v11;
  v5[3] = a1;
  v5[4] = v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_100495A5C;
  *(void *)(v6 + 24) = v5;
  aBlock[4] = sub_100024A68;
  aBlock[5] = v6;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100024A40;
  aBlock[3] = &unk_10063E688;
  uint64_t v7 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v4)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = v11;
    swift_release();
    return v9;
  }
  return result;
}

uint64_t sub_10049592C(void *a1, id object, void *key)
{
  if (objc_getAssociatedObject(object, key))
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_1000672A4((uint64_t)v7, (uint64_t)&v8);
  if (v9)
  {
    sub_100053C2C(&v8, &v10);
    swift_dynamicCast();
    uint64_t v4 = v6;
  }
  else
  {
    sub_100067244((uint64_t)&v8);
    uint64_t v4 = 0;
  }
  *a1 = v4;
  return swift_unknownObjectRelease();
}

uint64_t sub_100495A1C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100495A5C()
{
  return sub_10049592C(*(void **)(v0 + 16), *(id *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100495A68()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t FMObjectAssociation.subscript.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v17 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  long long v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v2 + 24);
  uint64_t v15 = *(void *)(v2 + 16);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a2;
  v12[3] = v2;
  v12[4] = a1;
  v12[5] = v11;
  aBlock[4] = sub_100495D98;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10063E6D8;
  uint64_t v13 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v18 = _swiftEmptyArrayStorage;
  sub_100046B28((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v16);
  return swift_release();
}

uint64_t sub_100495D50()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100495D98()
{
  objc_setAssociatedObject(*(id *)(v0 + 16), *(const void **)(v0 + 24), *(id *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t (*FMObjectAssociation.subscript.modify(uint64_t *a1, uint64_t a2))(uint64_t *a1, char a2)
{
  a1[1] = a2;
  a1[2] = v2;
  *a1 = FMObjectAssociation.subscript.getter(a2);
  return sub_100495DF0;
}

uint64_t sub_100495DF0(uint64_t *a1, char a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = *a1;
  if (a2)
  {
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    FMObjectAssociation.subscript.setter(v3, v2);
    return swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRetain();
    return FMObjectAssociation.subscript.setter(v3, v2);
  }
}

uint64_t FMObjectAssociation.deinit()
{
  return v0;
}

uint64_t FMObjectAssociation.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_100495ECC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FMObjectAssociation()
{
  return sub_100040E58();
}

BOOL sub_100495F40(uint64_t a1)
{
  return *(void *)(a1 + 16) == 0;
}

uint64_t sub_100495F50(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    uint64_t v18 = *(void *)(*(void *)(a3 + 48) + 8 * i);
    uint64_t v20 = v18;
    swift_bridgeObjectRetain();
    char v19 = a1(&v20);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v18;
    }
    if (v19)
    {
      swift_release();
      return v18;
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v12++, 1)) {
      break;
    }
    if (v12 >= v10) {
      goto LABEL_28;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    if (!v16)
    {
      int64_t v17 = v12 + 1;
      if (v12 + 1 >= v10) {
        goto LABEL_28;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v17);
      if (v16) {
        goto LABEL_16;
      }
      int64_t v17 = v12 + 2;
      if (v12 + 2 >= v10) {
        goto LABEL_28;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v17);
      if (v16) {
        goto LABEL_16;
      }
      int64_t v17 = v12 + 3;
      if (v12 + 3 >= v10) {
        goto LABEL_28;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v17);
      if (v16)
      {
LABEL_16:
        int64_t v12 = v17;
        goto LABEL_17;
      }
      int64_t v17 = v12 + 4;
      if (v12 + 4 < v10)
      {
        unint64_t v16 = *(void *)(v6 + 8 * v17);
        if (!v16)
        {
          while (1)
          {
            int64_t v12 = v17 + 1;
            if (__OFADD__(v17, 1)) {
              goto LABEL_31;
            }
            if (v12 >= v10) {
              goto LABEL_28;
            }
            unint64_t v16 = *(void *)(v6 + 8 * v12);
            ++v17;
            if (v16) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      swift_release();
      return 0;
    }
LABEL_17:
    unint64_t v9 = (v16 - 1) & v16;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_100496110@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for FMIPPartType();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v29 - v12;
  uint64_t v45 = type metadata accessor for FMIPItem();
  __chkstk_darwin(v45);
  Swift::Int v40 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16)
  {
    uint64_t v32 = a3;
    uint64_t v33 = v3;
    uint64_t v30 = v14;
    long long v38 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    uint64_t v39 = v14 + 16;
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    unsigned int v37 = *a2;
    uint64_t v18 = a1;
    char v19 = (void (**)(char *, uint64_t))(v8 + 8);
    char v35 = (void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v36 = (void (**)(char *, void, uint64_t))(v8 + 104);
    uint64_t v34 = *(void *)(v14 + 72);
    uint64_t v31 = v18;
    swift_bridgeObjectRetain();
    uint64_t v20 = v45;
    long long v21 = v40;
    while (1)
    {
      v38(v21, v17, v20);
      FMIPItem.partType.getter();
      (*v36)(v11, v37, v7);
      sub_1004B825C(&qword_1006B5E78, (void (*)(uint64_t))&type metadata accessor for FMIPPartType);
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      if (v43 == v41 && v44 == v42) {
        break;
      }
      char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v24 = *v19;
      (*v19)(v11, v7);
      v24(v13, v7);
      if (v23) {
        goto LABEL_12;
      }
      long long v21 = v40;
      uint64_t v20 = v45;
      (*v35)(v40, v45);
      v17 += v34;
      if (!--v16)
      {
        swift_bridgeObjectRelease();
        uint64_t v25 = 1;
        a3 = v32;
        uint64_t v14 = v30;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a3, v25, 1, v20);
      }
    }
    swift_bridgeObjectRelease_n();
    Swift::Int v26 = *v19;
    (*v19)(v11, v7);
    v26(v13, v7);
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v27 = v30;
    a3 = v32;
    uint64_t v20 = v45;
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v32, v40, v45);
    uint64_t v14 = v27;
    uint64_t v25 = 0;
  }
  else
  {
    uint64_t v25 = 1;
    uint64_t v20 = v45;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a3, v25, 1, v20);
}

uint64_t sub_1004964DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for FMIPAudioChannel();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    uint64_t v20 = a2;
    uint64_t v21 = v2;
    uint64_t v18 = a1;
    uint64_t v19 = v6;
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v10 = v6 + 16;
    long long v22 = v11;
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v10 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 64));
    uint64_t v13 = *(void *)(v10 + 56);
    swift_bridgeObjectRetain();
    while (1)
    {
      v22(v8, v12, v5);
      if (FMIPAudioChannel.name.getter() == 1952867692 && v14 == 0xE400000000000000) {
        break;
      }
      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v15) {
        goto LABEL_10;
      }
      (*(void (**)(char *, uint64_t))(v10 - 8))(v8, v5);
      v12 += v13;
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = 1;
        a2 = v20;
        uint64_t v6 = v19;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v16, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v6 = v19;
    a2 = v20;
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v20, v8, v5);
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v16 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v16, 1, v5);
}

uint64_t sub_1004966EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for FMIPAudioChannel();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    uint64_t v20 = a2;
    uint64_t v21 = v2;
    uint64_t v18 = a1;
    uint64_t v19 = v6;
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v10 = v6 + 16;
    long long v22 = v11;
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v10 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 64));
    uint64_t v13 = *(void *)(v10 + 56);
    swift_bridgeObjectRetain();
    while (1)
    {
      v22(v8, v12, v5);
      if (FMIPAudioChannel.name.getter() == 0x7468676972 && v14 == 0xE500000000000000) {
        break;
      }
      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v15) {
        goto LABEL_10;
      }
      (*(void (**)(char *, uint64_t))(v10 - 8))(v8, v5);
      v12 += v13;
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = 1;
        a2 = v20;
        uint64_t v6 = v19;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v16, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v6 = v19;
    a2 = v20;
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v20, v8, v5);
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v16 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v16, 1, v5);
}

void *sub_100496904(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a3 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v13 = v8;
      char v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100496A2C@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v33 = a1;
  long long v28 = a3;
  uint64_t v5 = type metadata accessor for FMIPBeaconShare();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  char v11 = (char *)&v27 - v10;
  uint64_t v12 = *(void *)(a2 + 56);
  uint64_t v29 = a2 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  uint64_t v32 = v6 + 16;
  uint64_t v34 = v6 + 32;
  int64_t v30 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v31 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v35 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  if (!v15) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v11, *(void *)(v35 + 48) + *(void *)(v6 + 72) * i, v5);
    char v23 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v23(v9, v11, v5);
    char v24 = v33(v9);
    if (v3)
    {
      (*v31)(v9, v5);
      return swift_release();
    }
    if (v24)
    {
      swift_release();
      uint64_t v25 = v28;
      v23(v28, v9, v5);
      uint64_t v26 = 0;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v25, v26, 1, v5);
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v31)(v9, v5);
    if (v15) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v17++, 1)) {
      break;
    }
    if (v17 >= v30) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v29 + 8 * v17);
    if (!v21)
    {
      int64_t v22 = v17 + 1;
      if (v17 + 1 >= v30) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v29 + 8 * v22);
      if (v21) {
        goto LABEL_16;
      }
      int64_t v22 = v17 + 2;
      if (v17 + 2 >= v30) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v29 + 8 * v22);
      if (v21) {
        goto LABEL_16;
      }
      int64_t v22 = v17 + 3;
      if (v17 + 3 >= v30) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v29 + 8 * v22);
      if (v21)
      {
LABEL_16:
        int64_t v17 = v22;
        goto LABEL_17;
      }
      int64_t v22 = v17 + 4;
      if (v17 + 4 < v30)
      {
        unint64_t v21 = *(void *)(v29 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            int64_t v17 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_31;
            }
            if (v17 >= v30) {
              goto LABEL_28;
            }
            unint64_t v21 = *(void *)(v29 + 8 * v17);
            ++v22;
            if (v21) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      uint64_t v25 = v28;
      swift_release();
      uint64_t v26 = 1;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v25, v26, 1, v5);
    }
LABEL_17:
    unint64_t v15 = (v21 - 1) & v21;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_100496D84(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  return sub_100496EC4(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for FMIPItem, (void (*)(BOOL, uint64_t, uint64_t))sub_10013E62C);
}

uint64_t sub_100496DC4(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  return sub_100496EC4(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for FMIPSafeLocation, (void (*)(BOOL, uint64_t, uint64_t))sub_10013E6A4);
}

uint64_t sub_100496E04(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  return sub_100496EC4(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for FMIPUnknownItem, (void (*)(BOOL, uint64_t, uint64_t))sub_10013E6E0);
}

uint64_t sub_100496E44(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  return sub_100496EC4(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for FMIPBeaconShare, (void (*)(BOOL, uint64_t, uint64_t))sub_10013E71C);
}

uint64_t sub_100496E84(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  return sub_100496EC4(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for FMFFriend, (void (*)(BOOL, uint64_t, uint64_t))sub_10013E778);
}

uint64_t sub_100496EC4(uint64_t (*a1)(void), uint64_t a2, uint64_t a3, uint64_t (*a4)(void), void (*a5)(BOOL, uint64_t, uint64_t))
{
  char v23 = a5;
  uint64_t v33 = a4(0);
  uint64_t v9 = *(void *)(v33 - 8);
  uint64_t v10 = __chkstk_darwin(v33);
  uint64_t v32 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v22 - v13;
  unint64_t v15 = _swiftEmptyArrayStorage;
  uint64_t v34 = _swiftEmptyArrayStorage;
  uint64_t v31 = *(void *)(a3 + 16);
  if (v31)
  {
    unint64_t v16 = 0;
    uint64_t v26 = a3;
    uint64_t v27 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v29 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v30 = v9 + 16;
    char v24 = a1;
    uint64_t v25 = a2;
    while (v16 < *(void *)(a3 + 16))
    {
      unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      unint64_t v15 = *(void **)(v9 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v14, a3 + v17 + (void)v15 * v16, v33);
      char v18 = a1(v14);
      if (v5)
      {
        (*v27)(v14, v33);
        swift_bridgeObjectRelease();
        swift_release();
        return (uint64_t)v15;
      }
      if (v18)
      {
        long long v28 = *v29;
        v28(v32, v14, v33);
        uint64_t v19 = v34;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v23(0, v19[2] + 1, 1);
          uint64_t v19 = v34;
        }
        unint64_t v21 = v19[2];
        unint64_t v20 = v19[3];
        if (v21 >= v20 >> 1)
        {
          v23(v20 > 1, v21 + 1, 1);
          uint64_t v19 = v34;
        }
        v19[2] = v21 + 1;
        uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v28)((char *)v19 + v17 + v21 * (void)v15, v32, v33);
        uint64_t v34 = v19;
        a3 = v26;
        a1 = v24;
      }
      else
      {
        uint64_t result = ((uint64_t (*)(char *, uint64_t))*v27)(v14, v33);
      }
      if (v31 == ++v16)
      {
        unint64_t v15 = v34;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t)v15;
  }
  return result;
}

uint64_t sub_100497180(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = HIBYTE(a4) & 0xF;
  void v13[2] = a3;
  v13[3] = a4;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v6 = a3 & 0xFFFFFFFFFFFFLL;
  }
  v13[4] = 0;
  v13[5] = v6;
  swift_bridgeObjectRetain();
  Swift::String_optional v8 = String.Iterator.next()();
  uint64_t countAndFlagsBits = v8.value._countAndFlagsBits;
  if (v8.value._object)
  {
    unint64_t object = v8.value._object;
    while (1)
    {
      v13[0] = countAndFlagsBits;
      v13[1] = object;
      char v10 = a1(v13);
      swift_bridgeObjectRelease();
      if (v4 || (v10 & 1) != 0) {
        break;
      }
      Swift::String_optional v11 = String.Iterator.next()();
      uint64_t countAndFlagsBits = v11.value._countAndFlagsBits;
      unint64_t object = v11.value._object;
      if (!v11.value._object) {
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_100497250(uint64_t (*a1)(char *), char a2, uint64_t a3)
{
  return sub_1004972B0(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for FMIPUnknownItem) & 1;
}

uint64_t sub_100497280(uint64_t (*a1)(char *), char a2, uint64_t a3)
{
  return sub_1004972B0(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for FMIPItem) & 1;
}

uint64_t sub_1004972B0(uint64_t (*a1)(char *), char a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v33 = a1;
  uint64_t v7 = a4(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  Swift::String_optional v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v32 = (char *)&v28 - v12;
  uint64_t v13 = *(void *)(a3 + 56);
  uint64_t v28 = a3 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  uint64_t v31 = v8 + 16;
  int64_t v29 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v30 = v8 + 32;
  unint64_t v17 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v34 = a3;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  while (1)
  {
    if (v16)
    {
      unint64_t v20 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v21 = v20 | (v19 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v19++, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v19 >= v29) {
      goto LABEL_27;
    }
    unint64_t v23 = *(void *)(v28 + 8 * v19);
    if (!v23) {
      break;
    }
LABEL_18:
    unint64_t v16 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_19:
    uint64_t v25 = v32;
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v32, *(void *)(v34 + 48) + *(void *)(v8 + 72) * v21, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v25, v7);
    char v26 = v33(v11);
    if (v4)
    {
      (*v17)(v11, v7);
      swift_release();
      return a2 & 1;
    }
    char v27 = v26;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v17)(v11, v7);
    if (v27)
    {
      a2 = 1;
      goto LABEL_28;
    }
  }
  int64_t v24 = v19 + 1;
  if (v19 + 1 >= v29) {
    goto LABEL_27;
  }
  unint64_t v23 = *(void *)(v28 + 8 * v24);
  if (v23) {
    goto LABEL_17;
  }
  int64_t v24 = v19 + 2;
  if (v19 + 2 >= v29) {
    goto LABEL_27;
  }
  unint64_t v23 = *(void *)(v28 + 8 * v24);
  if (v23) {
    goto LABEL_17;
  }
  int64_t v24 = v19 + 3;
  if (v19 + 3 >= v29) {
    goto LABEL_27;
  }
  unint64_t v23 = *(void *)(v28 + 8 * v24);
  if (v23) {
    goto LABEL_17;
  }
  int64_t v24 = v19 + 4;
  if (v19 + 4 >= v29)
  {
LABEL_27:
    a2 = 0;
LABEL_28:
    swift_release();
    return a2 & 1;
  }
  unint64_t v23 = *(void *)(v28 + 8 * v24);
  if (v23)
  {
LABEL_17:
    int64_t v19 = v24;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v19 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v19 >= v29) {
      goto LABEL_27;
    }
    unint64_t v23 = *(void *)(v28 + 8 * v19);
    ++v24;
    if (v23) {
      goto LABEL_18;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

void *FMDeviceState.markLostActive.unsafeMutableAddressor()
{
  return &static FMDeviceState.markLostActive;
}

void *FMDeviceState.markLostPending.unsafeMutableAddressor()
{
  return &static FMDeviceState.markLostPending;
}

void *FMDeviceCapabilities.canStopSound.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canStopSound;
}

void *FMDeviceCapabilities.canPlayMultiChannelAudio.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canPlayMultiChannelAudio;
}

void *FMDeviceCapabilities.canLockDevice.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canLockDevice;
}

void *FMDeviceCapabilities.supportsShowContactDetails.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.supportsShowContactDetails;
}

void *FMDeviceState.isDeviceWithYou.unsafeMutableAddressor()
{
  return &static FMDeviceState.isDeviceWithYou;
}

void *FMDeviceState.showContactDetailsActive.unsafeMutableAddressor()
{
  return &static FMDeviceState.showContactDetailsActive;
}

void *FMDeviceState.pairingIncomplete.unsafeMutableAddressor()
{
  return &static FMDeviceState.pairingIncomplete;
}

void *FMDeviceState.pairingLocked.unsafeMutableAddressor()
{
  return &static FMDeviceState.pairingLocked;
}

void *FMDeviceState.isInRepairMode.unsafeMutableAddressor()
{
  return &static FMDeviceState.isInRepairMode;
}

void *FMDeviceCapabilities.canPlaySound.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canPlaySound;
}

void *FMDeviceCapabilities.supportNotifyWhenFound.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.supportNotifyWhenFound;
}

void *FMDeviceCapabilities.canEnableLeashing.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canEnableLeashing;
}

void *FMDeviceCapabilities.supportsNotifyWhenDetached.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.supportsNotifyWhenDetached;
}

void *FMDeviceCapabilities.canEnableLostMode.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canEnableLostMode;
}

void *FMDeviceState.isWipePending.unsafeMutableAddressor()
{
  return &static FMDeviceState.isWipePending;
}

void *FMDeviceCapabilities.canRemoveOrRepair.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canRemoveOrRepair;
}

void *FMDeviceCapabilities.canEraseDevice.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canEraseDevice;
}

void *FMDeviceCapabilities.canGetDirections.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canGetDirections;
}

void *FMDeviceCapabilities.canBTFind.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canBTFind;
}

void *FMDeviceCapabilities.requiresBluetooth.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.requiresBluetooth;
}

void *FMDeviceState.lockActive.unsafeMutableAddressor()
{
  return &static FMDeviceState.lockActive;
}

void *FMDeviceState.lockPending.unsafeMutableAddressor()
{
  return &static FMDeviceState.lockPending;
}

void *FMDeviceState.stopLostPending.unsafeMutableAddressor()
{
  return &static FMDeviceState.stopLostPending;
}

void *FMDeviceState.deviceSeparationActive.unsafeMutableAddressor()
{
  return &static FMDeviceState.deviceSeparationActive;
}

void *FMDeviceState.notifyWhenDetachedActive.unsafeMutableAddressor()
{
  return &static FMDeviceState.notifyWhenDetachedActive;
}

void *FMDeviceState.notifyMeActive.unsafeMutableAddressor()
{
  return &static FMDeviceState.notifyMeActive;
}

void *FMDeviceCapabilities.canNotifyWhenFound.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canNotifyWhenFound;
}

void *FMDeviceCapabilities.canRepair.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canRepair;
}

void *FMDeviceCapabilities.canRemoveDevice.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canRemoveDevice;
}

uint64_t sub_100497730(char *a1, uint64_t a2)
{
  uint64_t v764 = a2;
  uint64_t v3 = type metadata accessor for FMIPItemState();
  uint64_t v740 = *(void *)(v3 - 8);
  uint64_t v741 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  v739 = (char *)&v711 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v738 = (char *)&v711 - v6;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v717 = *(void *)(v7 - 8);
  uint64_t v718 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  v716 = (char *)&v711 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v715 = (char *)&v711 - v10;
  uint64_t v11 = type metadata accessor for FMIPPartType();
  uint64_t v735 = *(void *)(v11 - 8);
  uint64_t v736 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  v733 = (char *)&v711 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v714 = (char *)&v711 - v14;
  uint64_t v781 = type metadata accessor for FMIPItem();
  uint64_t v795 = *(void *)(v781 - 8);
  uint64_t v15 = __chkstk_darwin(v781);
  v748 = (char *)&v711 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v723 = (char *)&v711 - v17;
  uint64_t v18 = sub_10005D034(&qword_1006C03C8);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v727 = (uint64_t)&v711 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v726 = (uint64_t)&v711 - v21;
  uint64_t v22 = type metadata accessor for FMIPActionStatus();
  uint64_t v754 = *(void *)(v22 - 8);
  uint64_t v755 = v22;
  uint64_t v23 = __chkstk_darwin(v22);
  v729 = (char *)&v711 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  v730 = (char *)&v711 - v26;
  __chkstk_darwin(v25);
  v752 = (char *)&v711 - v27;
  uint64_t v28 = sub_10005D034(&qword_1006C03D0);
  __chkstk_darwin(v28 - 8);
  v763 = (char *)&v711 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v779 = type metadata accessor for FMIPPlaySoundMetadata();
  uint64_t v778 = *(void *)(v779 - 8);
  uint64_t v30 = __chkstk_darwin(v779);
  v725 = (char *)&v711 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v780 = (char *)&v711 - v32;
  uint64_t v761 = sub_10005D034((uint64_t *)&unk_1006C0380);
  uint64_t v33 = __chkstk_darwin(v761);
  uint64_t v762 = (uint64_t)&v711 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v791 = (uint64_t)&v711 - v35;
  uint64_t v831 = type metadata accessor for FMIPDevice();
  v834 = *(NSObject **)(v831 - 8);
  __chkstk_darwin(v831);
  uint64_t v829 = v36;
  v830 = ((char *)&v711 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v836 = type metadata accessor for Logger();
  uint64_t v835 = *(void *)(v836 - 8);
  uint64_t v37 = __chkstk_darwin(v836);
  v790 = (char *)&v711 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v37);
  v750 = (char *)&v711 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  v731 = (char *)&v711 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  v743 = (char *)&v711 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  v744 = (char *)&v711 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  v768 = (char *)&v711 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  v753 = (char *)&v711 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  v737 = (char *)&v711 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  v713 = (char *)&v711 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  v732 = (char *)&v711 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  v721 = (char *)&v711 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  v728 = (char *)&v711 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  v722 = (char *)&v711 - v62;
  uint64_t v63 = __chkstk_darwin(v61);
  v720 = (char *)&v711 - v64;
  uint64_t v65 = __chkstk_darwin(v63);
  v719 = (char *)&v711 - v66;
  uint64_t v67 = __chkstk_darwin(v65);
  v749 = (char *)&v711 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  v765 = (char *)&v711 - v70;
  __chkstk_darwin(v69);
  v788 = ((char *)&v711 - v71);
  uint64_t v72 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  uint64_t v73 = __chkstk_darwin(v72 - 8);
  uint64_t v751 = (uint64_t)&v711 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __chkstk_darwin(v73);
  uint64_t v724 = (uint64_t)&v711 - v76;
  uint64_t v77 = __chkstk_darwin(v75);
  uint64_t v793 = (uint64_t)&v711 - v78;
  uint64_t v79 = __chkstk_darwin(v77);
  v828 = ((char *)&v711 - v80);
  uint64_t v81 = __chkstk_darwin(v79);
  os_log_t v827 = (os_log_t)((char *)&v711 - v82);
  uint64_t v83 = __chkstk_darwin(v81);
  *(void *)&long long v826 = (char *)&v711 - v84;
  uint64_t v85 = __chkstk_darwin(v83);
  v833 = ((char *)&v711 - v86);
  uint64_t v87 = __chkstk_darwin(v85);
  os_log_t v825 = (os_log_t)((char *)&v711 - v88);
  __chkstk_darwin(v87);
  v824 = ((char *)&v711 - v89);
  uint64_t v823 = type metadata accessor for FMIPFeatures();
  v822 = *(NSObject **)(v823 - 8);
  uint64_t v90 = __chkstk_darwin(v823);
  uint64_t v92 = (char *)&v711 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v90);
  uint64_t v94 = (char *)&v711 - v93;
  uint64_t v95 = sub_10005D034(&qword_1006B36B0);
  uint64_t v96 = __chkstk_darwin(v95 - 8);
  v746 = (char *)&v711 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = __chkstk_darwin(v96);
  v747 = (char *)&v711 - v99;
  uint64_t v100 = __chkstk_darwin(v98);
  uint64_t v742 = (uint64_t)&v711 - v101;
  uint64_t v102 = __chkstk_darwin(v100);
  uint64_t v745 = (uint64_t)&v711 - v103;
  uint64_t v104 = __chkstk_darwin(v102);
  unint64_t v106 = (char *)&v711 - v105;
  uint64_t v107 = __chkstk_darwin(v104);
  unint64_t v109 = (char *)&v711 - v108;
  __chkstk_darwin(v107);
  uint64_t v111 = (char *)&v711 - v110;
  v832 = a1;
  FMIPDevice.itemGroup.getter();
  v814 = v111;
  sub_100006AB0((uint64_t)v111, (uint64_t)v109, &qword_1006B36B0);
  uint64_t v112 = type metadata accessor for FMIPItemGroup();
  uint64_t v113 = *(void *)(v112 - 8);
  v773 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48);
  unsigned int v114 = v773(v109, 1, v112);
  uint64_t v756 = v113;
  uint64_t v757 = v112;
  if (v114 == 1)
  {
    sub_100003F10((uint64_t)v109, &qword_1006B36B0);
    uint64_t v789 = 0;
  }
  else
  {
    uint64_t v115 = FMIPItemGroup.items.getter();
    (*(void (**)(char *, uint64_t))(v113 + 8))(v109, v112);
    uint64_t v789 = (uint64_t)sub_1004B506C(v115);
    uint64_t v112 = v757;
    swift_bridgeObjectRelease();
  }
  sub_100006AB0((uint64_t)v814, (uint64_t)v106, &qword_1006B36B0);
  uint64_t v766 = v113 + 48;
  unsigned int v116 = v773(v106, 1, v112);
  uint64_t v117 = v832;
  if (v116 == 1)
  {
    sub_100003F10((uint64_t)v106, &qword_1006B36B0);
    uint64_t v794 = 0;
  }
  else
  {
    uint64_t v118 = FMIPItemGroup.items.getter();
    (*(void (**)(char *, uint64_t))(v756 + 8))(v106, v112);
    uint64_t v794 = (uint64_t)sub_1004B5414(v118);
    swift_bridgeObjectRelease();
  }
  FMIPDevice.features.getter();
  static FMIPFeatures.isMultiChannelSoundEnabled.getter();
  int v774 = sub_10015BBCC((uint64_t)v92);
  Class isa = (void (*)(char *, uint64_t))v822[1].isa;
  uint64_t v120 = v823;
  isa(v92, v823);
  isa(v94, v120);
  FMIPDevice.features.getter();
  static FMIPFeatures.isStopSoundSupported.getter();
  int v769 = sub_10015BBCC((uint64_t)v92);
  isa(v92, v120);
  isa(v94, v120);
  uint64_t v121 = FMIPDevice.audioChannels.getter();
  v792 = sub_1004B588C(v121);
  swift_bridgeObjectRelease();
  uint64_t v122 = v789;
  if (!v789)
  {
    uint64_t v125 = v795;
    uint64_t v131 = *(void (**)(NSObject *, uint64_t, uint64_t, uint64_t))(v795 + 56);
    uint64_t v132 = (uint8_t *)v824;
    uint64_t v127 = v781;
    v131(v824, 1, 1, v781);
    sub_100003F10((uint64_t)v132, (uint64_t *)&unk_1006AFE30);
    os_log_t v133 = v825;
    v131(v825, 1, 1, v127);
    sub_100003F10((uint64_t)v133, (uint64_t *)&unk_1006AFE30);
    uint64_t v130 = (uint64_t)v833;
    v131(v833, 1, 1, v127);
    BOOL v771 = 0;
    BOOL v767 = 0;
    goto LABEL_11;
  }
  uint64_t v123 = swift_bridgeObjectRetain();
  unint64_t v124 = (uint8_t *)v824;
  sub_100496110(v123, (unsigned int *)&enum case for FMIPPartType.leftBud(_:), (uint64_t)v824);
  swift_bridgeObjectRelease();
  uint64_t v125 = v795;
  unint64_t v126 = *(uint64_t (**)(uint8_t *, uint64_t, uint64_t))(v795 + 48);
  int v772 = 1;
  uint64_t v127 = v781;
  BOOL v767 = v126(v124, 1, v781) != 1;
  sub_100003F10((uint64_t)v124, (uint64_t *)&unk_1006AFE30);
  swift_bridgeObjectRetain();
  os_log_t v128 = v825;
  sub_100496110(v122, (unsigned int *)&enum case for FMIPPartType.rightBud(_:), (uint64_t)v825);
  swift_bridgeObjectRelease();
  BOOL v771 = v126((uint8_t *)v128, 1, v127) != 1;
  sub_100003F10((uint64_t)v128, (uint64_t *)&unk_1006AFE30);
  uint64_t v129 = swift_bridgeObjectRetain();
  uint64_t v130 = (uint64_t)v833;
  sub_100496110(v129, (unsigned int *)&enum case for FMIPPartType.case(_:), (uint64_t)v833);
  swift_bridgeObjectRelease();
  if (v126((uint8_t *)v130, 1, v127) == 1) {
LABEL_11:
  }
    int v772 = 0;
  sub_100003F10(v130, (uint64_t *)&unk_1006AFE30);
  uint64_t v134 = v794;
  if (!v794)
  {
    v833 = 0;
    uint64_t v142 = *(void (**)(os_log_t, uint64_t, uint64_t, uint64_t))(v125 + 56);
    uint64_t v143 = v826;
    v142((os_log_t)v826, 1, 1, v127);
    sub_100003F10(v143, (uint64_t *)&unk_1006AFE30);
    os_log_t v144 = v827;
    v142(v827, 1, 1, v127);
    sub_100003F10((uint64_t)v144, (uint64_t *)&unk_1006AFE30);
    uint64_t v141 = (uint64_t)v828;
    v142(v828, 1, 1, v127);
    uint64_t v770 = 0;
    goto LABEL_16;
  }
  uint64_t v135 = swift_bridgeObjectRetain();
  uint64_t v136 = v826;
  sub_100496110(v135, (unsigned int *)&enum case for FMIPPartType.leftBud(_:), v826);
  swift_bridgeObjectRelease();
  uint64_t v137 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v125 + 48);
  int v138 = 1;
  LODWORD(v770) = v137(v136, 1, v127) != 1;
  sub_100003F10(v136, (uint64_t *)&unk_1006AFE30);
  swift_bridgeObjectRetain();
  os_log_t v139 = v827;
  sub_100496110(v134, (unsigned int *)&enum case for FMIPPartType.rightBud(_:), (uint64_t)v827);
  swift_bridgeObjectRelease();
  HIDWORD(v770) = v137((uint64_t)v139, 1, v127) != 1;
  sub_100003F10((uint64_t)v139, (uint64_t *)&unk_1006AFE30);
  uint64_t v140 = swift_bridgeObjectRetain();
  uint64_t v141 = (uint64_t)v828;
  sub_100496110(v140, (unsigned int *)&enum case for FMIPPartType.case(_:), (uint64_t)v828);
  v833 = 0;
  swift_bridgeObjectRelease();
  if (v137(v141, 1, v127) == 1) {
LABEL_16:
  }
    int v138 = 0;
  sub_100003F10(v141, (uint64_t *)&unk_1006AFE30);
  uint64_t v145 = sub_1001DAB74();
  id v146 = *(void (**)(char *, uint64_t, uint64_t))(v835 + 16);
  uint64_t v812 = v145;
  uint64_t v813 = v835 + 16;
  v811 = v146;
  ((void (*))v146)(v788);
  uint64_t v147 = v834;
  double v148 = (void (*)(NSObject *, char *, uint64_t))v834[2].isa;
  id v149 = v830;
  uint64_t v150 = v831;
  v810 = v834 + 2;
  v809 = v148;
  v148(v830, v117, v831);
  uint64_t isa_low = LOBYTE(v147[10].isa);
  uint64_t v152 = (isa_low + 16) & ~isa_low;
  uint64_t v807 = v152 + v829;
  uint64_t v806 = isa_low | 7;
  uint64_t v153 = swift_allocObject();
  uint64_t v808 = v152;
  id v154 = (void (*)(uint64_t, NSObject *, uint64_t))v147[4].isa;
  v834 = v147 + 4;
  v805 = v154;
  v154(v153 + v152, v149, v150);
  uint64_t v155 = swift_allocObject();
  *(unsigned char *)(v155 + 16) = v774 & 1;
  uint64_t v156 = swift_allocObject();
  *(unsigned char *)(v156 + 16) = v769 & 1;
  uint64_t v157 = swift_allocObject();
  *(void *)(v157 + 16) = v792;
  uint64_t v158 = swift_allocObject();
  *(unsigned char *)(v158 + 16) = v767;
  uint64_t v829 = swift_allocObject();
  *(unsigned char *)(v829 + 16) = v771;
  os_log_t v827 = (os_log_t)swift_allocObject();
  LOBYTE(v827[2].isa) = v772;
  uint64_t v802 = swift_allocObject();
  *(unsigned char *)(v802 + 16) = v770;
  uint64_t v804 = swift_allocObject();
  *(unsigned char *)(v804 + 16) = BYTE4(v770);
  uint64_t v775 = swift_allocObject();
  int v734 = v138;
  *(unsigned char *)(v775 + 16) = v138;
  swift_bridgeObjectRetain();
  os_log_t v777 = (os_log_t)Logger.logObject.getter();
  int v776 = static os_log_type_t.default.getter();
  uint64_t v796 = swift_allocObject();
  *(unsigned char *)(v796 + 16) = 112;
  uint64_t v782 = swift_allocObject();
  *(unsigned char *)(v782 + 16) = 8;
  uint64_t v159 = swift_allocObject();
  *(void *)(v159 + 16) = 1752392040;
  uint64_t v160 = swift_allocObject();
  v784 = v160;
  *(void *)(v160 + 16) = sub_1004B77E0;
  *(void *)(v160 + 24) = v159;
  uint64_t v817 = swift_allocObject();
  *(unsigned char *)(v817 + 16) = 33;
  uint64_t v816 = swift_allocObject();
  *(unsigned char *)(v816 + 16) = 8;
  uint64_t v161 = swift_allocObject();
  *(void *)(v161 + 16) = sub_1004B76E0;
  *(void *)(v161 + 24) = v153;
  uint64_t v162 = swift_allocObject();
  uint64_t v821 = v162;
  *(void *)(v162 + 16) = sub_100225618;
  *(void *)(v162 + 24) = v161;
  os_log_t v825 = (os_log_t)swift_allocObject();
  LOBYTE(v825[2].isa) = 0;
  uint64_t v783 = swift_allocObject();
  *(unsigned char *)(v783 + 16) = 4;
  uint64_t v163 = swift_allocObject();
  *(void *)(v163 + 16) = sub_1004B76F4;
  *(void *)(v163 + 24) = v155;
  uint64_t v164 = swift_allocObject();
  *(void *)(v164 + 16) = sub_1004B782C;
  *(void *)(v164 + 24) = v163;
  uint64_t v165 = swift_allocObject();
  *(void *)(v165 + 16) = sub_1004B7834;
  *(void *)(v165 + 24) = v164;
  uint64_t v166 = swift_allocObject();
  v820 = v166;
  *(void *)(v166 + 16) = sub_1004B783C;
  *(void *)(v166 + 24) = v165;
  v824 = swift_allocObject();
  LOBYTE(v824[2].isa) = 0;
  uint64_t v815 = swift_allocObject();
  *(unsigned char *)(v815 + 16) = 4;
  uint64_t v167 = swift_allocObject();
  *(void *)(v167 + 16) = sub_1004B8304;
  *(void *)(v167 + 24) = v156;
  uint64_t v168 = swift_allocObject();
  *(void *)(v168 + 16) = sub_1004B82F4;
  *(void *)(v168 + 24) = v167;
  uint64_t v169 = swift_allocObject();
  *(void *)(v169 + 16) = sub_1004B82F8;
  *(void *)(v169 + 24) = v168;
  uint64_t v170 = swift_allocObject();
  uint64_t v819 = v170;
  *(void *)(v170 + 16) = sub_1004B84F0;
  *(void *)(v170 + 24) = v169;
  v822 = swift_allocObject();
  LOBYTE(v822[2].isa) = 0;
  uint64_t v171 = swift_allocObject();
  *(unsigned char *)(v171 + 16) = 8;
  uint64_t v172 = swift_allocObject();
  *(void *)(v172 + 16) = sub_1004B7744;
  *(void *)(v172 + 24) = v157;
  uint64_t v173 = swift_allocObject();
  *(void *)(v173 + 16) = sub_1004B788C;
  *(void *)(v173 + 24) = v172;
  uint64_t v174 = swift_allocObject();
  *(unsigned char *)(v174 + 16) = 0;
  uint64_t v175 = swift_allocObject();
  *(unsigned char *)(v175 + 16) = 4;
  uint64_t v176 = swift_allocObject();
  *(void *)(v176 + 16) = sub_1004B8304;
  *(void *)(v176 + 24) = v158;
  uint64_t v177 = swift_allocObject();
  *(void *)(v177 + 16) = sub_1004B82F4;
  *(void *)(v177 + 24) = v176;
  uint64_t v178 = swift_allocObject();
  *(void *)(v178 + 16) = sub_1004B82F8;
  *(void *)(v178 + 24) = v177;
  uint64_t v179 = swift_allocObject();
  v785 = v179;
  *(void *)(v179 + 16) = sub_1004B84F0;
  *(void *)(v179 + 24) = v178;
  uint64_t v787 = swift_allocObject();
  *(unsigned char *)(v787 + 16) = 0;
  *(void *)&long long v826 = swift_allocObject();
  *(unsigned char *)(v826 + 16) = 4;
  uint64_t v180 = swift_allocObject();
  uint64_t v181 = v829;
  *(void *)(v180 + 16) = sub_1004B8304;
  *(void *)(v180 + 24) = v181;
  uint64_t v182 = swift_allocObject();
  *(void *)(v182 + 16) = sub_1004B82F4;
  *(void *)(v182 + 24) = v180;
  uint64_t v183 = swift_allocObject();
  *(void *)(v183 + 16) = sub_1004B82F8;
  *(void *)(v183 + 24) = v182;
  uint64_t v184 = swift_allocObject();
  v818 = v184;
  *(void *)(v184 + 16) = sub_1004B84F0;
  *(void *)(v184 + 24) = v183;
  uint64_t v829 = swift_allocObject();
  *(unsigned char *)(v829 + 16) = 0;
  v828 = swift_allocObject();
  LOBYTE(v828[2].isa) = 4;
  uint64_t v185 = swift_allocObject();
  os_log_t v186 = v827;
  *(void *)(v185 + 16) = sub_1004B8304;
  *(void *)(v185 + 24) = v186;
  uint64_t v187 = swift_allocObject();
  *(void *)(v187 + 16) = sub_1004B82F4;
  *(void *)(v187 + 24) = v185;
  uint64_t v188 = swift_allocObject();
  *(void *)(v188 + 16) = sub_1004B82F8;
  *(void *)(v188 + 24) = v187;
  uint64_t v189 = swift_allocObject();
  uint64_t v823 = v189;
  *(void *)(v189 + 16) = sub_1004B84F0;
  *(void *)(v189 + 24) = v188;
  os_log_t v827 = (os_log_t)swift_allocObject();
  LOBYTE(v827[2].isa) = 0;
  uint64_t v803 = swift_allocObject();
  *(unsigned char *)(v803 + 16) = 4;
  uint64_t v190 = swift_allocObject();
  uint64_t v191 = v802;
  *(void *)(v190 + 16) = sub_1004B8304;
  *(void *)(v190 + 24) = v191;
  uint64_t v192 = swift_allocObject();
  *(void *)(v192 + 16) = sub_1004B82F4;
  *(void *)(v192 + 24) = v190;
  uint64_t v193 = swift_allocObject();
  *(void *)(v193 + 16) = sub_1004B82F8;
  *(void *)(v193 + 24) = v192;
  uint64_t v194 = swift_allocObject();
  v798 = v194;
  *(void *)(v194 + 16) = sub_1004B84F0;
  *(void *)(v194 + 24) = v193;
  uint64_t v800 = swift_allocObject();
  *(unsigned char *)(v800 + 16) = 0;
  uint64_t v802 = swift_allocObject();
  *(unsigned char *)(v802 + 16) = 4;
  uint64_t v195 = swift_allocObject();
  uint64_t v196 = v804;
  *(void *)(v195 + 16) = sub_1004B8304;
  *(void *)(v195 + 24) = v196;
  uint64_t v197 = swift_allocObject();
  *(void *)(v197 + 16) = sub_1004B82F4;
  *(void *)(v197 + 24) = v195;
  uint64_t v198 = swift_allocObject();
  *(void *)(v198 + 16) = sub_1004B82F8;
  *(void *)(v198 + 24) = v197;
  uint64_t v199 = swift_allocObject();
  v797 = v199;
  *(void *)(v199 + 16) = sub_1004B84F0;
  *(void *)(v199 + 24) = v198;
  uint64_t v799 = swift_allocObject();
  *(unsigned char *)(v799 + 16) = 0;
  v801 = swift_allocObject();
  LOBYTE(v801[2].isa) = 4;
  uint64_t v200 = swift_allocObject();
  uint64_t v201 = v775;
  *(void *)(v200 + 16) = sub_1004B8304;
  *(void *)(v200 + 24) = v201;
  uint64_t v202 = swift_allocObject();
  *(void *)(v202 + 16) = sub_1004B82F4;
  *(void *)(v202 + 24) = v200;
  uint64_t v203 = swift_allocObject();
  *(void *)(v203 + 16) = sub_1004B82F8;
  *(void *)(v203 + 24) = v202;
  uint64_t v786 = v171;
  uint64_t v204 = swift_allocObject();
  *(void *)(v204 + 16) = sub_1004B84F0;
  *(void *)(v204 + 24) = v203;
  uint64_t v775 = v204;
  uint64_t v804 = sub_10005D034(&qword_1006B5E80);
  uint64_t v205 = swift_allocObject();
  *(_OWORD *)(v205 + 16) = xmmword_1005698F0;
  *(void *)(v205 + 32) = sub_100225600;
  *(void *)(v205 + 40) = v796;
  *(void *)(v205 + 48) = sub_1002267FC;
  *(void *)(v205 + 56) = v782;
  *(void *)(v205 + 64) = sub_100225660;
  *(void *)(v205 + 72) = v784;
  *(void *)(v205 + 80) = sub_1002267FC;
  *(void *)(v205 + 88) = v817;
  *(void *)(v205 + 96) = sub_1002267FC;
  *(void *)(v205 + 104) = v816;
  *(void *)(v205 + 112) = sub_100225620;
  *(void *)(v205 + 120) = v821;
  *(void *)(v205 + 128) = sub_1002267FC;
  *(void *)(v205 + 136) = v825;
  *(void *)(v205 + 144) = sub_1002267FC;
  *(void *)(v205 + 152) = v783;
  *(void *)(v205 + 160) = sub_1004B7844;
  *(void *)(v205 + 168) = v820;
  *(void *)(v205 + 176) = sub_1002267FC;
  *(void *)(v205 + 184) = v824;
  *(void *)(v205 + 192) = sub_1002267FC;
  *(void *)(v205 + 200) = v815;
  *(void *)(v205 + 208) = sub_1004B82FC;
  *(void *)(v205 + 216) = v819;
  *(void *)(v205 + 224) = sub_1002267FC;
  *(void *)(v205 + 232) = v822;
  *(void *)(v205 + 240) = sub_1002267FC;
  *(void *)(v205 + 248) = v171;
  *(void *)(v205 + 256) = sub_100225660;
  *(void *)(v205 + 264) = v173;
  *(void *)(v205 + 272) = sub_1002267FC;
  *(void *)(v205 + 280) = v174;
  *(void *)(v205 + 288) = sub_1002267FC;
  *(void *)(v205 + 296) = v175;
  *(void *)(v205 + 304) = sub_1004B82FC;
  *(void *)(v205 + 312) = v785;
  *(void *)(v205 + 320) = sub_1002267FC;
  *(void *)(v205 + 328) = v787;
  *(void *)(v205 + 336) = sub_1002267FC;
  *(void *)(v205 + 344) = v826;
  *(void *)(v205 + 352) = sub_1004B82FC;
  *(void *)(v205 + 360) = v818;
  *(void *)(v205 + 368) = sub_1002267FC;
  *(void *)(v205 + 376) = v829;
  *(void *)(v205 + 384) = sub_1002267FC;
  *(void *)(v205 + 392) = v828;
  *(void *)(v205 + 400) = sub_1004B82FC;
  *(void *)(v205 + 408) = v823;
  *(void *)(v205 + 416) = sub_1002267FC;
  *(void *)(v205 + 424) = v827;
  *(void *)(v205 + 432) = sub_1002267FC;
  *(void *)(v205 + 440) = v803;
  *(void *)(v205 + 448) = sub_1004B82FC;
  *(void *)(v205 + 456) = v798;
  *(void *)(v205 + 464) = sub_1002267FC;
  *(void *)(v205 + 472) = v800;
  *(void *)(v205 + 480) = sub_1002267FC;
  *(void *)(v205 + 488) = v802;
  *(void *)(v205 + 496) = sub_1004B82FC;
  *(void *)(v205 + 504) = v797;
  *(void *)(v205 + 512) = sub_1002267FC;
  *(void *)(v205 + 520) = v799;
  *(void *)(v205 + 528) = sub_1002267FC;
  *(void *)(v205 + 536) = v801;
  *(void *)(v205 + 544) = sub_1004B82FC;
  *(void *)(v205 + 552) = v204;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v760 = v173;
  swift_retain();
  uint64_t v759 = v174;
  swift_retain();
  uint64_t v758 = v175;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  os_log_t v206 = v777;
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v206, (os_log_type_t)v776))
  {
    uint64_t v207 = v815;
    uint64_t v208 = v783;
    uint64_t v209 = v758;
    BOOL v210 = (uint8_t *)sub_10007D1C4();
    uint64_t v211 = swift_slowAlloc();
    uint64_t v840 = 0;
    uint64_t v711 = v211;
    v712 = v210;
    uint64_t v839 = v211;
    *(_WORD *)BOOL v210 = 2819;
    v841[0] = v210 + 2;
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100225600;
    v838 = v796;
    uint64_t v212 = (uint64_t)v833;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    uint64_t v213 = v779;
    if (v212) {
      goto LABEL_244;
    }
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v782;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    uint64_t v214 = v795;
    uint64_t v215 = v816;
    swift_release();
    v837 = sub_100225660;
    v838 = v784;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v817;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v215;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100225620;
    v838 = v821;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    uint64_t v216 = v214;
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v825;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v208;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1004B7844;
    v838 = v820;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    uint64_t v217 = v824;
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v217;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v207;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    uint64_t v218 = v786;
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1004B82FC;
    v838 = v819;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v822;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v218;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = sub_100225660;
    v838 = v760;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    uint64_t v219 = v759;
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v219;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v209;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1004B82FC;
    v838 = v785;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v787;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    uint64_t v220 = v826;
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v220;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1004B82FC;
    v838 = v818;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    uint64_t v221 = v829;
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v221;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    uint64_t v222 = v828;
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v222;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1004B82FC;
    v838 = v823;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    os_log_t v223 = v827;
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v223;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    v224 = v803;
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v224;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    uint64_t v225 = v768;
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1004B82FC;
    v838 = v798;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    uint64_t v226 = v800;
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v226;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    uint64_t v227 = v802;
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v227;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    uint64_t v228 = v832;
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1004B82FC;
    v838 = v797;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v799;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v801;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1004B82FC;
    v838 = v775;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    v833 = 0;
    swift_release();
    os_log_t v229 = v777;
    _os_log_impl((void *)&_mh_execute_header, v777, (os_log_type_t)v776, "soundViewLayout id: %{private,mask.hash}s has multiChannel: %{BOOL}d, canStopSound: %{BOOL}d, playingChannels: %ld, leftPlaying: %{BOOL}d, rightPlaying: %{BOOL}d, casePlaying: %{BOOL}d, leftQueued: %{BOOL}d, rightQueued: %{BOOL}d, caseQueued: %{BOOL}d.", v712, 0x50u);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_10007D1CC();

    uint64_t v829 = *(void *)(v835 + 8);
    ((void (*)(NSObject *, uint64_t))v829)(v788, v836);
  }
  else
  {

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v829 = *(void *)(v835 + 8);
    ((void (*)(NSObject *, uint64_t))v829)(v788, v836);
    uint64_t v228 = v832;
    uint64_t v213 = v779;
    uint64_t v216 = v795;
    uint64_t v225 = v768;
  }
  uint64_t v230 = *(int *)(v761 + 48);
  uint64_t v231 = v791;
  *(void *)(v231 + v230) = sub_1004AC2E8(v791, v228, v764);
  uint64_t v232 = v231;
  uint64_t v233 = v762;
  sub_100006AB0(v232, v762, (uint64_t *)&unk_1006AFE30);
  uint64_t v234 = v233;
  uint64_t v235 = v793;
  sub_100067E48(v234, v793, (uint64_t *)&unk_1006AFE30);
  uint64_t v236 = (uint64_t)v763;
  FMIPDevice.soundMetadata.getter();
  uint64_t v237 = v778;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v778 + 48))(v236, 1, v213) == 1)
  {
    swift_bridgeObjectRelease();
    sub_100003F10(v236, &qword_1006C03D0);
    uint64_t v238 = v751;
    sub_100006AB0(v235, v751, (uint64_t *)&unk_1006AFE30);
    uint64_t v239 = v781;
    int v240 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v216 + 48))(v238, 1, v781);
    uint64_t v241 = v794;
    if (v240 == 1)
    {
      sub_100003F10(v238, (uint64_t *)&unk_1006AFE30);
      goto LABEL_39;
    }
    v262 = v748;
    (*(void (**)(char *, uint64_t, uint64_t))(v216 + 32))(v748, v238, v239);
    if ((v774 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v216 + 8))(v262, v239);
LABEL_39:
      uint64_t v308 = (uint64_t)v814;
      uint64_t v309 = v757;
      v310 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v773;
      unsigned int v311 = v773(v814, 1, v757);
      uint64_t v312 = v745;
      sub_100006AB0(v308, v745, &qword_1006B36B0);
      uint64_t v313 = (uint64_t)v747;
      if (v311 == 1)
      {
        uint64_t v314 = v312;
        uint64_t v315 = v309;
        uint64_t v316 = (uint64_t)v746;
      }
      else
      {
        uint64_t v317 = v742;
        sub_100006AB0(v312, v742, &qword_1006B36B0);
        uint64_t v315 = v309;
        if (v310(v317, 1, v309) != 1)
        {
          uint64_t v383 = FMIPItemGroup.items.getter();
          (*(void (**)(uint64_t, uint64_t))(v756 + 8))(v317, v315);
          uint64_t v384 = sub_1000D8704(v383);
          swift_bridgeObjectRelease();
          sub_100003F10(v312, &qword_1006B36B0);
          sub_100006AB0((uint64_t)v814, v313, &qword_1006B36B0);
          BOOL v385 = v384 < 2;
          uint64_t v315 = v757;
          uint64_t v316 = (uint64_t)v746;
          if (!v385)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_100003F10(v313, &qword_1006B36B0);
            goto LABEL_64;
          }
LABEL_44:
          sub_100006AB0(v313, v316, &qword_1006B36B0);
          if (v310(v316, 1, v315) == 1)
          {
            sub_100003F10(v313, &qword_1006B36B0);
            sub_100003F10(v316, &qword_1006B36B0);
            v318 = v750;
            goto LABEL_48;
          }
          v319 = v738;
          FMIPItemGroup.state.getter();
          (*(void (**)(uint64_t, uint64_t))(v756 + 8))(v316, v315);
          uint64_t v320 = (uint64_t)v739;
          static FMIPItemState.isInCase.getter();
          char v321 = sub_10015BC14(v320);
          v322 = *(void (**)(uint64_t, uint64_t))(v740 + 8);
          uint64_t v323 = v320;
          uint64_t v324 = v741;
          v322(v323, v741);
          v322((uint64_t)v319, v324);
          sub_100003F10(v313, &qword_1006B36B0);
          v318 = v750;
          if ((v321 & 1) == 0)
          {
LABEL_48:
            if (v789)
            {
              uint64_t v325 = *(void *)(v789 + 16);
              swift_bridgeObjectRelease();
              if (v325)
              {
                swift_bridgeObjectRelease();
                v811(v743, v812, v836);
                v326 = v830;
                uint64_t v327 = v831;
                v809(v830, v228, v831);
                uint64_t v328 = swift_allocObject();
                v805(v328 + v808, v326, v327);
                v828 = Logger.logObject.getter();
                LODWORD(v827) = static os_log_type_t.default.getter();
                uint64_t v329 = swift_allocObject();
                *(unsigned char *)(v329 + 16) = 112;
                uint64_t v330 = swift_allocObject();
                *(unsigned char *)(v330 + 16) = 8;
                uint64_t v331 = swift_allocObject();
                *(void *)(v331 + 16) = 1752392040;
                uint64_t v332 = swift_allocObject();
                *(void *)(v332 + 16) = sub_1004B84E8;
                *(void *)(v332 + 24) = v331;
                uint64_t v333 = swift_allocObject();
                *(unsigned char *)(v333 + 16) = 33;
                uint64_t v334 = swift_allocObject();
                *(unsigned char *)(v334 + 16) = 8;
                uint64_t v335 = swift_allocObject();
                *(void *)(v335 + 16) = sub_1004B76E0;
                *(void *)(v335 + 24) = v328;
                uint64_t v336 = swift_allocObject();
                *(void *)(v336 + 16) = sub_1002267F4;
                *(void *)(v336 + 24) = v335;
                uint64_t v337 = swift_allocObject();
                *(_OWORD *)(v337 + 16) = xmmword_100564170;
                *(void *)(v337 + 32) = sub_1002267FC;
                *(void *)(v337 + 40) = v329;
                *(void *)(v337 + 48) = sub_1002267FC;
                *(void *)(v337 + 56) = v330;
                *(void *)(v337 + 64) = sub_1004B8300;
                *(void *)(v337 + 72) = v332;
                *(void *)(v337 + 80) = sub_1002267FC;
                *(void *)(v337 + 88) = v333;
                *(void *)(v337 + 96) = sub_1002267FC;
                *(void *)(v337 + 104) = v334;
                *(void *)(v337 + 112) = sub_1002267F8;
                *(void *)(v337 + 120) = v336;
                swift_retain();
                swift_retain();
                swift_retain();
                swift_retain();
                swift_retain();
                swift_retain();
                v338 = v828;
                swift_bridgeObjectRelease();
                if (os_log_type_enabled(v338, (os_log_type_t)v827))
                {
                  v339 = (uint8_t *)sub_10007D1C4();
                  uint64_t v340 = swift_slowAlloc();
                  uint64_t v840 = 0;
                  uint64_t v839 = v340;
                  *(_WORD *)v339 = 515;
                  v841[0] = v339 + 2;
                  v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
                  v838 = v329;
                  uint64_t v341 = (uint64_t)v833;
                  sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
                  if (v341) {
                    goto LABEL_244;
                  }
                  swift_release();
                  v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
                  v838 = v330;
                  sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
                  swift_release();
                  v837 = sub_1004B8300;
                  v838 = v332;
                  sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
                  swift_release();
                  v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
                  v838 = v333;
                  sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
                  v280 = v832;
                  swift_release();
                  v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
                  v838 = v334;
                  sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
                  uint64_t v281 = v836;
                  swift_release();
                  v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267F8;
                  v838 = v336;
                  sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
                  v833 = 0;
                  v342 = v743;
                  swift_release();
                  v343 = v828;
                  _os_log_impl((void *)&_mh_execute_header, v828, (os_log_type_t)v827, "soundViewLayout id: %{private,mask.hash}s is monaural device playing sound.", v339, 0x16u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  sub_10007D1CC();

                  ((void (*)(char *, uint64_t))v829)(v342, v281);
                  uint64_t v344 = 3;
                  goto LABEL_138;
                }

                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                uint64_t v281 = v836;
                ((void (*)(char *, uint64_t))v829)(v743, v836);
LABEL_109:
                uint64_t v344 = 3;
LABEL_137:
                v280 = v832;
                goto LABEL_138;
              }
            }
            if (v241)
            {
              uint64_t v345 = *(void *)(v241 + 16);
              swift_bridgeObjectRelease();
              if (v345)
              {
                v811(v731, v812, v836);
                v346 = v830;
                uint64_t v347 = v831;
                v809(v830, v228, v831);
                uint64_t v348 = swift_allocObject();
                v805(v348 + v808, v346, v347);
                v828 = Logger.logObject.getter();
                LODWORD(v827) = static os_log_type_t.default.getter();
                uint64_t v349 = swift_allocObject();
                *(unsigned char *)(v349 + 16) = 112;
                uint64_t v350 = swift_allocObject();
                *(unsigned char *)(v350 + 16) = 8;
                uint64_t v351 = swift_allocObject();
                *(void *)(v351 + 16) = 1752392040;
                uint64_t v352 = swift_allocObject();
                *(void *)(v352 + 16) = sub_1004B84E8;
                *(void *)(v352 + 24) = v351;
                uint64_t v353 = swift_allocObject();
                *(unsigned char *)(v353 + 16) = 33;
                uint64_t v354 = swift_allocObject();
                *(unsigned char *)(v354 + 16) = 8;
                uint64_t v355 = swift_allocObject();
                *(void *)(v355 + 16) = sub_1004B76E0;
                *(void *)(v355 + 24) = v348;
                uint64_t v356 = swift_allocObject();
                *(void *)(v356 + 16) = sub_1002267F4;
                *(void *)(v356 + 24) = v355;
                uint64_t v357 = swift_allocObject();
                *(_OWORD *)(v357 + 16) = xmmword_100564170;
                *(void *)(v357 + 32) = sub_1002267FC;
                *(void *)(v357 + 40) = v349;
                *(void *)(v357 + 48) = sub_1002267FC;
                *(void *)(v357 + 56) = v350;
                *(void *)(v357 + 64) = sub_1004B8300;
                *(void *)(v357 + 72) = v352;
                *(void *)(v357 + 80) = sub_1002267FC;
                *(void *)(v357 + 88) = v353;
                *(void *)(v357 + 96) = sub_1002267FC;
                *(void *)(v357 + 104) = v354;
                *(void *)(v357 + 112) = sub_1002267F8;
                *(void *)(v357 + 120) = v356;
                swift_retain();
                swift_retain();
                swift_retain();
                swift_retain();
                swift_retain();
                swift_retain();
                v358 = v828;
                swift_bridgeObjectRelease();
                if (os_log_type_enabled(v358, (os_log_type_t)v827))
                {
                  v359 = (uint8_t *)sub_10007D1C4();
                  uint64_t v360 = swift_slowAlloc();
                  uint64_t v840 = 0;
                  uint64_t v839 = v360;
                  *(_WORD *)v359 = 515;
                  v841[0] = v359 + 2;
                  v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
                  v838 = v349;
                  uint64_t v361 = (uint64_t)v833;
                  sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
                  if (v361) {
                    goto LABEL_244;
                  }
                  swift_release();
                  v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
                  v838 = v350;
                  sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
                  swift_release();
                  v837 = sub_1004B8300;
                  v838 = v352;
                  sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
                  swift_release();
                  v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
                  v838 = v353;
                  sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
                  v280 = v832;
                  swift_release();
                  v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
                  v838 = v354;
                  sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
                  uint64_t v281 = v836;
                  swift_release();
                  v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267F8;
                  v838 = v356;
                  sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
                  v833 = 0;
                  v362 = v731;
                  swift_release();
                  v363 = v828;
                  _os_log_impl((void *)&_mh_execute_header, v828, (os_log_type_t)v827, "soundViewLayout id: %{private,mask.hash}s is queueing sound.", v359, 0x16u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  sub_10007D1CC();

                  ((void (*)(char *, uint64_t))v829)(v362, v281);
                  uint64_t v344 = 2;
                  goto LABEL_138;
                }

                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                uint64_t v281 = v836;
                ((void (*)(char *, uint64_t))v829)(v731, v836);
                uint64_t v344 = 2;
                goto LABEL_137;
              }
            }
            v811(v318, v812, v836);
            v405 = v830;
            uint64_t v406 = v831;
            v809(v830, v228, v831);
            uint64_t v407 = swift_allocObject();
            v805(v407 + v808, v405, v406);
            v828 = Logger.logObject.getter();
            LODWORD(v827) = static os_log_type_t.default.getter();
            uint64_t v408 = swift_allocObject();
            *(unsigned char *)(v408 + 16) = 112;
            uint64_t v409 = swift_allocObject();
            *(unsigned char *)(v409 + 16) = 8;
            uint64_t v410 = swift_allocObject();
            *(void *)(v410 + 16) = 1752392040;
            uint64_t v411 = swift_allocObject();
            *(void *)(v411 + 16) = sub_1004B84E8;
            *(void *)(v411 + 24) = v410;
            uint64_t v412 = swift_allocObject();
            *(unsigned char *)(v412 + 16) = 33;
            uint64_t v413 = swift_allocObject();
            *(unsigned char *)(v413 + 16) = 8;
            uint64_t v414 = swift_allocObject();
            *(void *)(v414 + 16) = sub_1004B76E0;
            *(void *)(v414 + 24) = v407;
            uint64_t v415 = swift_allocObject();
            *(void *)(v415 + 16) = sub_1002267F4;
            *(void *)(v415 + 24) = v414;
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_100564170;
            *(void *)(inited + 32) = sub_1002267FC;
            *(void *)(inited + 40) = v408;
            *(void *)(inited + 48) = sub_1002267FC;
            *(void *)(inited + 56) = v409;
            *(void *)(inited + 64) = sub_1004B8300;
            *(void *)(inited + 72) = v411;
            *(void *)(inited + 80) = sub_1002267FC;
            *(void *)(inited + 88) = v412;
            *(void *)(inited + 96) = sub_1002267FC;
            *(void *)(inited + 104) = v413;
            *(void *)(inited + 112) = sub_1002267F8;
            *(void *)(inited + 120) = v415;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            v417 = v828;
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v417, (os_log_type_t)v827))
            {
              v418 = (uint8_t *)sub_10007D1C4();
              uint64_t v419 = swift_slowAlloc();
              uint64_t v840 = 0;
              uint64_t v839 = v419;
              *(_WORD *)v418 = 515;
              v841[0] = v418 + 2;
              v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
              v838 = v408;
              uint64_t v420 = (uint64_t)v833;
              sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
              if (v420) {
                goto LABEL_244;
              }
              swift_release();
              v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
              v838 = v409;
              sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
              swift_release();
              v837 = sub_1004B8300;
              v838 = v411;
              sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
              swift_release();
              v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
              v838 = v412;
              sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
              v280 = v832;
              swift_release();
              v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
              v838 = v413;
              sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
              uint64_t v281 = v836;
              swift_release();
              v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267F8;
              v838 = v415;
              sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
              v833 = 0;
              swift_release();
              v421 = v828;
              _os_log_impl((void *)&_mh_execute_header, v828, (os_log_type_t)v827, "soundViewLayout id: %{private,mask.hash}s is not playing any sound.", v418, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              sub_10007D1CC();

              ((void (*)(char *, uint64_t))v829)(v750, v281);
              goto LABEL_119;
            }

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v281 = v836;
            ((void (*)(char *, uint64_t))v829)(v750, v836);
LABEL_136:
            uint64_t v344 = 0;
            goto LABEL_137;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_64:
          v811(v744, v812, v836);
          v386 = v830;
          uint64_t v387 = v831;
          v809(v830, v228, v831);
          uint64_t v388 = swift_allocObject();
          v805(v388 + v808, v386, v387);
          v828 = Logger.logObject.getter();
          LODWORD(v827) = static os_log_type_t.default.getter();
          uint64_t v389 = swift_allocObject();
          *(unsigned char *)(v389 + 16) = 112;
          uint64_t v390 = swift_allocObject();
          *(unsigned char *)(v390 + 16) = 8;
          uint64_t v391 = swift_allocObject();
          *(void *)(v391 + 16) = 1752392040;
          uint64_t v392 = swift_allocObject();
          *(void *)(v392 + 16) = sub_1004B84E8;
          *(void *)(v392 + 24) = v391;
          uint64_t v393 = swift_allocObject();
          *(unsigned char *)(v393 + 16) = 33;
          uint64_t v394 = swift_allocObject();
          *(unsigned char *)(v394 + 16) = 8;
          uint64_t v395 = swift_allocObject();
          *(void *)(v395 + 16) = sub_1004B76E0;
          *(void *)(v395 + 24) = v388;
          uint64_t v396 = swift_allocObject();
          *(void *)(v396 + 16) = sub_1002267F4;
          *(void *)(v396 + 24) = v395;
          uint64_t v397 = swift_allocObject();
          *(_OWORD *)(v397 + 16) = xmmword_100564170;
          *(void *)(v397 + 32) = sub_1002267FC;
          *(void *)(v397 + 40) = v389;
          *(void *)(v397 + 48) = sub_1002267FC;
          *(void *)(v397 + 56) = v390;
          *(void *)(v397 + 64) = sub_1004B8300;
          *(void *)(v397 + 72) = v392;
          *(void *)(v397 + 80) = sub_1002267FC;
          *(void *)(v397 + 88) = v393;
          *(void *)(v397 + 96) = sub_1002267FC;
          *(void *)(v397 + 104) = v394;
          *(void *)(v397 + 112) = sub_1002267F8;
          *(void *)(v397 + 120) = v396;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          v398 = v828;
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v398, (os_log_type_t)v827))
          {
            v399 = (uint8_t *)sub_10007D1C4();
            uint64_t v400 = swift_slowAlloc();
            uint64_t v840 = 0;
            uint64_t v839 = v400;
            *(_WORD *)v399 = 515;
            v841[0] = v399 + 2;
            v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
            v838 = v389;
            uint64_t v401 = (uint64_t)v833;
            sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
            if (v401) {
              goto LABEL_244;
            }
            swift_release();
            v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
            v838 = v390;
            sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
            swift_release();
            v837 = sub_1004B8300;
            v838 = v392;
            sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
            BOOL v402 = v771;
            swift_release();
            v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
            v838 = v393;
            sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
            v280 = v832;
            swift_release();
            v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
            v838 = v394;
            sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
            uint64_t v281 = v836;
            swift_release();
            v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267F8;
            v838 = v396;
            sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
            v403 = v744;
            swift_release();
            v404 = v828;
            _os_log_impl((void *)&_mh_execute_header, v828, (os_log_type_t)v827, "soundViewLayout id: %{private,mask.hash}s is checking LE sound state.", v399, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_10007D1CC();

            ((void (*)(char *, uint64_t))v829)(v403, v281);
          }
          else
          {

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v281 = v836;
            ((void (*)(char *, uint64_t))v829)(v744, v836);
            v280 = v832;
            uint64_t v401 = (uint64_t)v833;
            BOOL v402 = v771;
          }
          v833 = v401;
          if (v770)
          {
            if (v402) {
              unsigned int v488 = 10;
            }
            else {
              unsigned int v488 = 7;
            }
            if (HIDWORD(v770)) {
              uint64_t v344 = 2;
            }
            else {
              uint64_t v344 = v488;
            }
          }
          else if (v767)
          {
            if (v402) {
              unsigned int v489 = 4;
            }
            else {
              unsigned int v489 = 6;
            }
            if (HIDWORD(v770)) {
              uint64_t v344 = 9;
            }
            else {
              uint64_t v344 = v489;
            }
          }
          else if (v402)
          {
            if (HIDWORD(v770)) {
              uint64_t v344 = 8;
            }
            else {
              uint64_t v344 = 5;
            }
          }
          else if (HIDWORD(v770))
          {
            uint64_t v344 = 8;
          }
          else
          {
            uint64_t v344 = 0;
          }
          goto LABEL_138;
        }
        sub_100003F10(v312, &qword_1006B36B0);
        uint64_t v316 = (uint64_t)v746;
        uint64_t v314 = v317;
      }
      sub_100003F10(v314, &qword_1006B36B0);
      sub_100006AB0((uint64_t)v814, v313, &qword_1006B36B0);
      goto LABEL_44;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v811(v225, v812, v836);
    uint64_t v263 = v830;
    uint64_t v264 = v831;
    v809(v830, v228, v831);
    uint64_t v265 = swift_allocObject();
    v805(v265 + v808, v263, v264);
    v828 = Logger.logObject.getter();
    LODWORD(v827) = static os_log_type_t.default.getter();
    uint64_t v266 = swift_allocObject();
    *(unsigned char *)(v266 + 16) = 112;
    uint64_t v267 = swift_allocObject();
    *(unsigned char *)(v267 + 16) = 8;
    uint64_t v268 = swift_allocObject();
    *(void *)(v268 + 16) = 1752392040;
    uint64_t v269 = swift_allocObject();
    *(void *)(v269 + 16) = sub_1004B84E8;
    *(void *)(v269 + 24) = v268;
    uint64_t v270 = swift_allocObject();
    *(unsigned char *)(v270 + 16) = 33;
    uint64_t v271 = swift_allocObject();
    *(unsigned char *)(v271 + 16) = 8;
    uint64_t v272 = swift_allocObject();
    *(void *)(v272 + 16) = sub_1004B76E0;
    *(void *)(v272 + 24) = v265;
    uint64_t v273 = swift_allocObject();
    *(void *)(v273 + 16) = sub_1002267F4;
    *(void *)(v273 + 24) = v272;
    uint64_t v274 = swift_allocObject();
    *(_OWORD *)(v274 + 16) = xmmword_100564170;
    *(void *)(v274 + 32) = sub_1002267FC;
    *(void *)(v274 + 40) = v266;
    *(void *)(v274 + 48) = sub_1002267FC;
    *(void *)(v274 + 56) = v267;
    *(void *)(v274 + 64) = sub_1004B8300;
    *(void *)(v274 + 72) = v269;
    *(void *)(v274 + 80) = sub_1002267FC;
    *(void *)(v274 + 88) = v270;
    *(void *)(v274 + 96) = sub_1002267FC;
    *(void *)(v274 + 104) = v271;
    *(void *)(v274 + 112) = sub_1002267F8;
    *(void *)(v274 + 120) = v273;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    Swift::String v275 = v828;
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v275, (os_log_type_t)v827))
    {
      Swift::String v276 = (uint8_t *)sub_10007D1C4();
      uint64_t v277 = swift_slowAlloc();
      uint64_t v840 = 0;
      uint64_t v839 = v277;
      *(_WORD *)Swift::String v276 = 515;
      v841[0] = v276 + 2;
      v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
      v838 = v266;
      uint64_t v278 = (uint64_t)v833;
      sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
      if (v278) {
        goto LABEL_244;
      }
      swift_release();
      v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
      v838 = v267;
      sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
      swift_release();
      v837 = sub_1004B8300;
      v838 = v269;
      sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
      BOOL v279 = v771;
      swift_release();
      v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
      v838 = v270;
      sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
      v280 = v832;
      swift_release();
      v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
      v838 = v271;
      sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
      uint64_t v281 = v836;
      swift_release();
      v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267F8;
      v838 = v273;
      sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
      uint64_t v282 = v795;
      int v283 = v734;
      v833 = 0;
      swift_release();
      uint64_t v284 = v828;
      _os_log_impl((void *)&_mh_execute_header, v828, (os_log_type_t)v827, "soundViewLayout id: %{private,mask.hash}s is checking LE sound state for primary part", v276, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      sub_10007D1CC();

      ((void (*)(char *, uint64_t))v829)(v768, v281);
      uint64_t v285 = v781;
    }
    else
    {

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v281 = v836;
      ((void (*)(char *, uint64_t))v829)(v768, v836);
      v280 = v832;
      BOOL v279 = v771;
      uint64_t v285 = v781;
      uint64_t v282 = v795;
      int v283 = v734;
    }
    v490 = v733;
    v491 = v748;
    FMIPItem.partType.getter();
    (*(void (**)(char *, uint64_t))(v282 + 8))(v491, v285);
    uint64_t v493 = v735;
    uint64_t v492 = v736;
    int v494 = (*(uint64_t (**)(char *, uint64_t))(v735 + 88))(v490, v736);
    if (v494 == enum case for FMIPPartType.standalone(_:)) {
      goto LABEL_119;
    }
    if (v494 == enum case for FMIPPartType.case(_:))
    {
      BOOL v495 = v283 == 0;
LABEL_97:
      if (v495) {
        unsigned int v496 = 0;
      }
      else {
        unsigned int v496 = 2;
      }
      int v497 = v772;
LABEL_131:
      BOOL v554 = v497 == 0;
LABEL_132:
      if (v554) {
        uint64_t v344 = v496;
      }
      else {
        uint64_t v344 = 3;
      }
      goto LABEL_138;
    }
    if (v494 == enum case for FMIPPartType.leftBud(_:))
    {
      if (v770) {
        unsigned int v496 = 2;
      }
      else {
        unsigned int v496 = 0;
      }
      int v497 = v767;
      goto LABEL_131;
    }
    if (v494 == enum case for FMIPPartType.rightBud(_:))
    {
      if (HIDWORD(v770)) {
        unsigned int v496 = 2;
      }
      else {
        unsigned int v496 = 0;
      }
      BOOL v554 = !v279;
      goto LABEL_132;
    }
    goto LABEL_212;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v237 + 32))(v780, v236, v213);
  v811(v765, v812, v836);
  uint64_t v242 = v830;
  uint64_t v243 = v831;
  v809(v830, v228, v831);
  uint64_t v244 = swift_allocObject();
  v805(v244 + v808, v242, v243);
  v828 = Logger.logObject.getter();
  LODWORD(v827) = static os_log_type_t.default.getter();
  uint64_t v245 = swift_allocObject();
  *(unsigned char *)(v245 + 16) = 112;
  uint64_t v246 = swift_allocObject();
  *(unsigned char *)(v246 + 16) = 8;
  uint64_t v247 = swift_allocObject();
  *(void *)(v247 + 16) = 1752392040;
  uint64_t v248 = swift_allocObject();
  *(void *)(v248 + 16) = sub_1004B84E8;
  *(void *)(v248 + 24) = v247;
  uint64_t v249 = swift_allocObject();
  *(unsigned char *)(v249 + 16) = 33;
  uint64_t v250 = swift_allocObject();
  *(unsigned char *)(v250 + 16) = 8;
  uint64_t v251 = swift_allocObject();
  *(void *)(v251 + 16) = sub_1004B76E0;
  *(void *)(v251 + 24) = v244;
  uint64_t v252 = swift_allocObject();
  *(void *)(v252 + 16) = sub_1002267F4;
  *(void *)(v252 + 24) = v251;
  uint64_t v253 = swift_allocObject();
  long long v826 = xmmword_100564170;
  *(_OWORD *)(v253 + 16) = xmmword_100564170;
  *(void *)(v253 + 32) = sub_1002267FC;
  *(void *)(v253 + 40) = v245;
  *(void *)(v253 + 48) = sub_1002267FC;
  *(void *)(v253 + 56) = v246;
  *(void *)(v253 + 64) = sub_1004B8300;
  *(void *)(v253 + 72) = v248;
  *(void *)(v253 + 80) = sub_1002267FC;
  *(void *)(v253 + 88) = v249;
  *(void *)(v253 + 96) = sub_1002267FC;
  *(void *)(v253 + 104) = v250;
  *(void *)(v253 + 112) = sub_1002267F8;
  *(void *)(v253 + 120) = v252;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v254 = v828;
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v254, (os_log_type_t)v827))
  {
    BOOL v255 = (uint8_t *)sub_10007D1C4();
    uint64_t v256 = swift_slowAlloc();
    uint64_t v840 = 0;
    uint64_t v839 = v256;
    *(_WORD *)BOOL v255 = 515;
    v841[0] = v255 + 2;
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v245;
    uint64_t v257 = (uint64_t)v833;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    if (v257) {
      goto LABEL_244;
    }
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v246;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = sub_1004B8300;
    v838 = v248;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    unint64_t v258 = v765;
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v249;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    v259 = v832;
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v250;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    uint64_t v260 = v836;
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267F8;
    v838 = v252;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    uint64_t v261 = v828;
    _os_log_impl((void *)&_mh_execute_header, v828, (os_log_type_t)v827, "soundViewLayout id: %{private,mask.hash}s has sound metadata.", v255, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_10007D1CC();

    ((void (*)(char *, uint64_t))v829)(v258, v260);
  }
  else
  {

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v260 = v836;
    ((void (*)(char *, uint64_t))v829)(v765, v836);
    v259 = v832;
    uint64_t v257 = (uint64_t)v833;
  }
  uint64_t v286 = v752;
  FMIPPlaySoundMetadata.status.getter();
  int v287 = (*(uint64_t (**)(char *, uint64_t))(v754 + 88))(v286, v755);
  v833 = v257;
  if (v287 == enum case for FMIPActionStatus.error(_:) || v287 == enum case for FMIPActionStatus.unknown(_:)) {
    goto LABEL_103;
  }
  int v288 = (int)v749;
  if (v287 != enum case for FMIPActionStatus.success(_:))
  {
    if (v287 == enum case for FMIPActionStatus.inEarSafetyWarning(_:))
    {
LABEL_59:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      NSLog(_:_:)();
      swift_bridgeObjectRelease();
      v811(v737, v812, v260);
      v364 = v830;
      uint64_t v365 = v831;
      v809(v830, v259, v831);
      uint64_t v366 = swift_allocObject();
      v805(v366 + v808, v364, v365);
      v828 = Logger.logObject.getter();
      LODWORD(v827) = static os_log_type_t.default.getter();
      uint64_t v367 = swift_allocObject();
      *(unsigned char *)(v367 + 16) = 112;
      uint64_t v368 = swift_allocObject();
      *(unsigned char *)(v368 + 16) = 8;
      uint64_t v369 = swift_allocObject();
      *(void *)(v369 + 16) = 1752392040;
      uint64_t v370 = swift_allocObject();
      *(void *)(v370 + 16) = sub_1004B84E8;
      *(void *)(v370 + 24) = v369;
      uint64_t v371 = swift_allocObject();
      *(unsigned char *)(v371 + 16) = 33;
      uint64_t v372 = swift_allocObject();
      *(unsigned char *)(v372 + 16) = 8;
      uint64_t v373 = swift_allocObject();
      *(void *)(v373 + 16) = sub_1004B76E0;
      *(void *)(v373 + 24) = v366;
      uint64_t v374 = swift_allocObject();
      *(void *)(v374 + 16) = sub_1002267F4;
      *(void *)(v374 + 24) = v373;
      uint64_t v375 = swift_allocObject();
      *(_OWORD *)(v375 + 16) = v826;
      *(void *)(v375 + 32) = sub_1002267FC;
      *(void *)(v375 + 40) = v367;
      *(void *)(v375 + 48) = sub_1002267FC;
      *(void *)(v375 + 56) = v368;
      *(void *)(v375 + 64) = sub_1004B8300;
      *(void *)(v375 + 72) = v370;
      *(void *)(v375 + 80) = sub_1002267FC;
      *(void *)(v375 + 88) = v371;
      *(void *)(v375 + 96) = sub_1002267FC;
      *(void *)(v375 + 104) = v372;
      *(void *)(v375 + 112) = sub_1002267F8;
      *(void *)(v375 + 120) = v374;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v376 = v828;
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v376, (os_log_type_t)v827))
      {
        v377 = (uint8_t *)sub_10007D1C4();
        uint64_t v378 = swift_slowAlloc();
        uint64_t v840 = 0;
        uint64_t v839 = v378;
        *(_WORD *)v377 = 515;
        v841[0] = v377 + 2;
        v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
        v838 = v367;
        uint64_t v379 = (uint64_t)v833;
        sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
        if (v379) {
          goto LABEL_244;
        }
        swift_release();
        v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
        v838 = v368;
        sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
        swift_release();
        v837 = sub_1004B8300;
        v838 = v370;
        sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
        swift_release();
        v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
        v838 = v371;
        sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
        uint64_t v281 = v836;
        swift_release();
        v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
        v838 = v372;
        sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
        v280 = v832;
        swift_release();
        v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267F8;
        v838 = v374;
        sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
        v833 = 0;
        v380 = v737;
        swift_release();
        os_log_type_t v381 = v827;
        v382 = "soundViewLayout id: %{private,mask.hash}s is asking for safety warning.";
        goto LABEL_106;
      }
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      v514 = v737;
      goto LABEL_121;
    }
    if (v287 == enum case for FMIPActionStatus.pending(_:)) {
      goto LABEL_35;
    }
    if (v287 != enum case for FMIPActionStatus.notify(_:))
    {
      if (v287 == enum case for FMIPActionStatus.onNeckSafetyWarning(_:)
        || v287 == enum case for FMIPActionStatus.onHeadSafetyWarning(_:)
        || v287 == enum case for FMIPActionStatus.onTableTopSafetyWarning(_:)
        || v287 == enum case for FMIPActionStatus.carryingCaseClosedWarning(_:))
      {
        goto LABEL_59;
      }
      if (v287 == enum case for FMIPActionStatus.queueingSound(_:))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v811(v713, v812, v260);
        v590 = v830;
        uint64_t v591 = v831;
        v809(v830, v259, v831);
        uint64_t v592 = swift_allocObject();
        v805(v592 + v808, v590, v591);
        v828 = Logger.logObject.getter();
        LODWORD(v827) = static os_log_type_t.default.getter();
        uint64_t v593 = swift_allocObject();
        *(unsigned char *)(v593 + 16) = 112;
        uint64_t v594 = swift_allocObject();
        *(unsigned char *)(v594 + 16) = 8;
        uint64_t v595 = swift_allocObject();
        *(void *)(v595 + 16) = 1752392040;
        uint64_t v596 = swift_allocObject();
        *(void *)(v596 + 16) = sub_1004B84E8;
        *(void *)(v596 + 24) = v595;
        uint64_t v597 = swift_allocObject();
        *(unsigned char *)(v597 + 16) = 33;
        uint64_t v598 = swift_allocObject();
        *(unsigned char *)(v598 + 16) = 8;
        uint64_t v599 = swift_allocObject();
        *(void *)(v599 + 16) = sub_1004B76E0;
        *(void *)(v599 + 24) = v592;
        uint64_t v600 = swift_allocObject();
        *(void *)(v600 + 16) = sub_1002267F4;
        *(void *)(v600 + 24) = v599;
        uint64_t v601 = swift_allocObject();
        *(_OWORD *)(v601 + 16) = v826;
        *(void *)(v601 + 32) = sub_1002267FC;
        *(void *)(v601 + 40) = v593;
        *(void *)(v601 + 48) = sub_1002267FC;
        *(void *)(v601 + 56) = v594;
        *(void *)(v601 + 64) = sub_1004B8300;
        *(void *)(v601 + 72) = v596;
        *(void *)(v601 + 80) = sub_1002267FC;
        *(void *)(v601 + 88) = v597;
        *(void *)(v601 + 96) = sub_1002267FC;
        *(void *)(v601 + 104) = v598;
        *(void *)(v601 + 112) = sub_1002267F8;
        *(void *)(v601 + 120) = v600;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v602 = v828;
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v602, (os_log_type_t)v827))
        {
          v603 = (uint8_t *)sub_10007D1C4();
          uint64_t v604 = swift_slowAlloc();
          uint64_t v840 = 0;
          uint64_t v839 = v604;
          *(_WORD *)v603 = 515;
          v841[0] = v603 + 2;
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v593;
          uint64_t v605 = (uint64_t)v833;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          if (v605) {
            goto LABEL_244;
          }
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v594;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          swift_release();
          v837 = sub_1004B8300;
          v838 = v596;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v597;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          uint64_t v281 = v836;
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v598;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          v280 = v832;
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267F8;
          v838 = v600;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          v833 = 0;
          v606 = v713;
          swift_release();
          v607 = v828;
          _os_log_impl((void *)&_mh_execute_header, v828, (os_log_type_t)v827, "soundViewLayout id: %{private,mask.hash}s is queueing sound.", v603, 0x16u);
          uint64_t v344 = 1;
          swift_arrayDestroy();
          swift_slowDealloc();
          sub_10007D1CC();

          ((void (*)(char *, uint64_t))v829)(v606, v281);
          (*(void (**)(char *, uint64_t))(v778 + 8))(v780, v779);
          goto LABEL_138;
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        uint64_t v281 = v836;
        ((void (*)(char *, uint64_t))v829)(v713, v836);
        (*(void (**)(char *, uint64_t))(v778 + 8))(v780, v779);
        uint64_t v344 = 1;
        goto LABEL_137;
      }
      if (v287 != enum case for FMIPActionStatus.serverSafetyWarning(_:)
        && v287 != enum case for FMIPActionStatus.eraseCancelled(_:)
        && v287 != enum case for FMIPActionStatus.successPasscodeSet(_:)
        && v287 != enum case for FMIPActionStatus.successPasscodeAlreadySet(_:)
        && v287 != enum case for FMIPActionStatus.successPasscodeSetV2(_:)
        && v287 != enum case for FMIPActionStatus.successFailedToSetPasscode(_:)
        && v287 != enum case for FMIPActionStatus.succeedFailedToSetPasscodeV2(_:))
      {
        _diagnoseUnexpectedEnumCase<A>(type:)();
        __break(1u);
        goto LABEL_232;
      }
    }
LABEL_103:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    NSLog(_:_:)();
    swift_bridgeObjectRelease();
    v811(v753, v812, v260);
    v498 = v830;
    uint64_t v499 = v831;
    v809(v830, v259, v831);
    uint64_t v500 = swift_allocObject();
    v805(v500 + v808, v498, v499);
    v828 = Logger.logObject.getter();
    LODWORD(v827) = static os_log_type_t.default.getter();
    uint64_t v501 = swift_allocObject();
    *(unsigned char *)(v501 + 16) = 112;
    uint64_t v502 = swift_allocObject();
    *(unsigned char *)(v502 + 16) = 8;
    uint64_t v503 = swift_allocObject();
    *(void *)(v503 + 16) = 1752392040;
    uint64_t v504 = swift_allocObject();
    *(void *)(v504 + 16) = sub_1004B84E8;
    *(void *)(v504 + 24) = v503;
    uint64_t v505 = swift_allocObject();
    *(unsigned char *)(v505 + 16) = 33;
    uint64_t v506 = swift_allocObject();
    *(unsigned char *)(v506 + 16) = 8;
    uint64_t v507 = swift_allocObject();
    *(void *)(v507 + 16) = sub_1004B76E0;
    *(void *)(v507 + 24) = v500;
    uint64_t v508 = swift_allocObject();
    *(void *)(v508 + 16) = sub_1002267F4;
    *(void *)(v508 + 24) = v507;
    uint64_t v509 = swift_allocObject();
    *(_OWORD *)(v509 + 16) = v826;
    *(void *)(v509 + 32) = sub_1002267FC;
    *(void *)(v509 + 40) = v501;
    *(void *)(v509 + 48) = sub_1002267FC;
    *(void *)(v509 + 56) = v502;
    *(void *)(v509 + 64) = sub_1004B8300;
    *(void *)(v509 + 72) = v504;
    *(void *)(v509 + 80) = sub_1002267FC;
    *(void *)(v509 + 88) = v505;
    *(void *)(v509 + 96) = sub_1002267FC;
    *(void *)(v509 + 104) = v506;
    *(void *)(v509 + 112) = sub_1002267F8;
    *(void *)(v509 + 120) = v508;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v510 = v828;
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v510, (os_log_type_t)v827))
    {
      v377 = (uint8_t *)sub_10007D1C4();
      uint64_t v511 = swift_slowAlloc();
      uint64_t v840 = 0;
      uint64_t v839 = v511;
      *(_WORD *)v377 = 515;
      v841[0] = v377 + 2;
      v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
      v838 = v501;
      uint64_t v512 = (uint64_t)v833;
      sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
      if (v512) {
        goto LABEL_244;
      }
      swift_release();
      v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
      v838 = v502;
      sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
      swift_release();
      v837 = sub_1004B8300;
      v838 = v504;
      sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
      swift_release();
      v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
      v838 = v505;
      sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
      uint64_t v281 = v836;
      swift_release();
      v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
      v838 = v506;
      sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
      v280 = v832;
      swift_release();
      v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267F8;
      v838 = v508;
      sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
      v833 = 0;
      v380 = v753;
      swift_release();
      os_log_type_t v381 = v827;
      v382 = "soundViewLayout id: %{private,mask.hash}s is in error state.";
LABEL_106:
      v513 = v828;
      _os_log_impl((void *)&_mh_execute_header, v828, v381, v382, v377, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      sub_10007D1CC();

      ((void (*)(char *, uint64_t))v829)(v380, v281);
      (*(void (**)(char *, uint64_t))(v778 + 8))(v780, v779);
      goto LABEL_119;
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    v514 = v753;
LABEL_121:
    uint64_t v281 = v836;
    ((void (*)(char *, uint64_t))v829)(v514, v836);
    (*(void (**)(char *, uint64_t))(v778 + 8))(v780, v779);
    goto LABEL_136;
  }
LABEL_35:
  LODWORD(v825) = enum case for FMIPActionStatus.success(_:);
  v811(v749, v812, v260);
  uint64_t v289 = v830;
  uint64_t v290 = v831;
  v809(v830, v259, v831);
  uint64_t v291 = swift_allocObject();
  v805(v291 + v808, v289, v290);
  v828 = Logger.logObject.getter();
  LODWORD(v827) = static os_log_type_t.default.getter();
  uint64_t v292 = swift_allocObject();
  *(unsigned char *)(v292 + 16) = 112;
  uint64_t v293 = swift_allocObject();
  *(unsigned char *)(v293 + 16) = 8;
  uint64_t v294 = swift_allocObject();
  *(void *)(v294 + 16) = 1752392040;
  uint64_t v295 = swift_allocObject();
  *(void *)(v295 + 16) = sub_1004B84E8;
  *(void *)(v295 + 24) = v294;
  uint64_t v296 = swift_allocObject();
  *(unsigned char *)(v296 + 16) = 33;
  uint64_t v297 = swift_allocObject();
  *(unsigned char *)(v297 + 16) = 8;
  uint64_t v298 = swift_allocObject();
  *(void *)(v298 + 16) = sub_1004B76E0;
  *(void *)(v298 + 24) = v291;
  uint64_t v299 = swift_allocObject();
  *(void *)(v299 + 16) = sub_1002267F4;
  *(void *)(v299 + 24) = v298;
  uint64_t v300 = swift_allocObject();
  *(_OWORD *)(v300 + 16) = v826;
  *(void *)(v300 + 32) = sub_1002267FC;
  *(void *)(v300 + 40) = v292;
  *(void *)(v300 + 48) = sub_1002267FC;
  *(void *)(v300 + 56) = v293;
  *(void *)(v300 + 64) = sub_1004B8300;
  *(void *)(v300 + 72) = v295;
  *(void *)(v300 + 80) = sub_1002267FC;
  *(void *)(v300 + 88) = v296;
  *(void *)(v300 + 96) = sub_1002267FC;
  *(void *)(v300 + 104) = v297;
  *(void *)(v300 + 112) = sub_1002267F8;
  *(void *)(v300 + 120) = v299;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v301 = v828;
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v301, (os_log_type_t)v827))
  {
    v302 = (uint8_t *)sub_10007D1C4();
    uint64_t v303 = swift_slowAlloc();
    uint64_t v840 = 0;
    uint64_t v839 = v303;
    *(_WORD *)v302 = 515;
    v841[0] = v302 + 2;
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v292;
    uint64_t v304 = (uint64_t)v833;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    if (v304) {
      goto LABEL_244;
    }
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v293;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = sub_1004B8300;
    v838 = v295;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v296;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    uint64_t v305 = v836;
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v297;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267F8;
    v838 = v299;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    v306 = v832;
    v833 = 0;
    swift_release();
    v307 = v828;
    _os_log_impl((void *)&_mh_execute_header, v828, (os_log_type_t)v827, "soundViewLayout id: %{private,mask.hash}s sound succeeded.", v302, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_10007D1CC();

    ((void (*)(char *, uint64_t))v829)(v749, v305);
  }
  else
  {

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v305 = v836;
    ((void (*)(char *, uint64_t))v829)(v749, v836);
    v306 = v832;
  }
  uint64_t v422 = (uint64_t)v833;
  if ((v774 | v769))
  {
    v423 = v306;
    v424 = (char *)v305;
    uint64_t v425 = v726;
    v426 = v792;
    sub_1004964DC((uint64_t)v792, v726);
    uint64_t v427 = type metadata accessor for FMIPAudioChannel();
    v428 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v427 - 8) + 48);
    LODWORD(v828) = v428(v425, 1, v427);
    sub_100003F10(v425, &qword_1006C03C8);
    uint64_t v429 = v727;
    sub_1004966EC((uint64_t)v426, v727);
    v833 = v422;
    int v430 = v428(v429, 1, v427);
    sub_100003F10(v429, &qword_1006C03C8);
    uint64_t v431 = v724;
    sub_100006AB0(v793, v724, (uint64_t *)&unk_1006AFE30);
    uint64_t v432 = v795;
    uint64_t v433 = v781;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v795 + 48))(v431, 1, v781) == 1)
    {
      sub_100003F10(v431, (uint64_t *)&unk_1006AFE30);
      if (v774)
      {
        LODWORD(v827) = v430;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v811(v720, v812, (uint64_t)v424);
        v434 = v830;
        uint64_t v435 = v831;
        v809(v830, v423, v831);
        uint64_t v436 = swift_allocObject();
        v805(v436 + v808, v434, v435);
        v824 = Logger.logObject.getter();
        LODWORD(v823) = static os_log_type_t.default.getter();
        uint64_t v437 = swift_allocObject();
        *(unsigned char *)(v437 + 16) = 112;
        uint64_t v250 = swift_allocObject();
        *(unsigned char *)(v250 + 16) = 8;
        uint64_t v438 = swift_allocObject();
        *(void *)(v438 + 16) = 1752392040;
        uint64_t v439 = swift_allocObject();
        *(void *)(v439 + 16) = sub_1004B84E8;
        *(void *)(v439 + 24) = v438;
        uint64_t v440 = swift_allocObject();
        *(unsigned char *)(v440 + 16) = 33;
        uint64_t v441 = swift_allocObject();
        *(unsigned char *)(v441 + 16) = 8;
        uint64_t v442 = swift_allocObject();
        *(void *)(v442 + 16) = sub_1004B76E0;
        *(void *)(v442 + 24) = v436;
        uint64_t v443 = swift_allocObject();
        *(void *)(v443 + 16) = sub_1002267F4;
        *(void *)(v443 + 24) = v442;
        uint64_t v444 = swift_allocObject();
        *(_OWORD *)(v444 + 16) = v826;
        *(void *)(v444 + 32) = sub_1002267FC;
        *(void *)(v444 + 40) = v437;
        *(void *)(v444 + 48) = sub_1002267FC;
        *(void *)(v444 + 56) = v250;
        *(void *)(v444 + 64) = sub_1004B8300;
        *(void *)(v444 + 72) = v439;
        *(void *)(v444 + 80) = sub_1002267FC;
        *(void *)(v444 + 88) = v440;
        *(void *)(v444 + 96) = sub_1002267FC;
        *(void *)(v444 + 104) = v441;
        *(void *)(v444 + 112) = sub_1002267F8;
        *(void *)(v444 + 120) = v443;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v445 = v824;
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v445, (os_log_type_t)v823))
        {
          v446 = (uint8_t *)sub_10007D1C4();
          uint64_t v447 = swift_slowAlloc();
          uint64_t v840 = 0;
          uint64_t v839 = v447;
          *(_WORD *)v446 = 515;
          v841[0] = v446 + 2;
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v437;
          uint64_t v448 = (uint64_t)v833;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          if (v448) {
            goto LABEL_244;
          }
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v250;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          swift_release();
          v837 = sub_1004B8300;
          v838 = v439;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v440;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          LODWORD(v250) = v827;
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v441;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          v449 = v720;
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267F8;
          v838 = v443;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          BOOL v450 = v771;
          swift_release();
          v451 = (uint8_t *)v824;
          _os_log_impl((void *)&_mh_execute_header, v824, (os_log_type_t)v823, "soundViewLayout id: %{private,mask.hash}s is a multichannel device.", v446, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          sub_10007D1CC();

          v452 = v449;
          uint64_t v286 = (char *)v836;
          ((void (*)(char *, uint64_t))v829)(v452, v836);
        }
        else
        {

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          ((void (*)(char *, char *))v829)(v720, v424);
          uint64_t v286 = v424;
          uint64_t v448 = (uint64_t)v833;
          BOOL v450 = v771;
          LODWORD(v250) = v827;
        }
        int v288 = (int)v828;
        uint64_t v260 = (uint64_t)v832;
        v608 = v773;
        v833 = v448;
        BOOL v771 = v450;
        if (v828 != 1)
        {
          if (v250 == 1) {
            goto LABEL_197;
          }
          goto LABEL_181;
        }
        if (v250 != 1)
        {
          if (v767)
          {
LABEL_181:
            uint64_t v610 = 4;
            goto LABEL_218;
          }
LABEL_215:
          if (v770) {
            uint64_t v610 = 10;
          }
          else {
            uint64_t v610 = 5;
          }
          goto LABEL_218;
        }
        if (v767)
        {
LABEL_197:
          char v642 = BYTE4(v770);
          if (HIDWORD(v770)) {
            unsigned int v643 = 9;
          }
          else {
            unsigned int v643 = 6;
          }
          if (v450) {
            uint64_t v610 = 4;
          }
          else {
            uint64_t v610 = v643;
          }
          goto LABEL_219;
        }
        if (v450) {
          goto LABEL_215;
        }
LABEL_232:
        if (v608(v814, 1, v757) != 1)
        {
          if (v770)
          {
            char v642 = BYTE4(v770);
            if (HIDWORD(v770)) {
              uint64_t v610 = 2;
            }
            else {
              uint64_t v610 = 7;
            }
          }
          else
          {
            char v642 = BYTE4(v770);
            if (HIDWORD(v770)) {
              uint64_t v610 = 8;
            }
            else {
              uint64_t v610 = 0;
            }
          }
          goto LABEL_219;
        }
        v705 = v730;
        FMIPPlaySoundMetadata.status.getter();
        uint64_t v706 = v754;
        uint64_t v250 = v755;
        v707 = v729;
        (*(void (**)(char *, void, uint64_t))(v754 + 104))(v729, v825, v755);
        BOOL v708 = sub_1001DAA48();
        v709 = *(void (**)(char *, uint64_t))(v706 + 8);
        v709(v707, v250);
        uint64_t v710 = v250;
        LODWORD(v250) = v827;
        v709(v705, v710);
        BOOL v495 = !v708;
        int v288 = (int)v828;
        if (v495) {
          uint64_t v610 = 2;
        }
        else {
          uint64_t v610 = 0;
        }
LABEL_218:
        char v642 = BYTE4(v770);
LABEL_219:
        BOOL v644 = v288 != 1;
        v811(v722, v812, (uint64_t)v286);
        v645 = v830;
        uint64_t v646 = v831;
        v809(v830, (char *)v260, v831);
        uint64_t v647 = swift_allocObject();
        v805(v647 + v808, v645, v646);
        uint64_t v648 = swift_allocObject();
        uint64_t v829 = v610;
        *(unsigned char *)(v648 + 16) = v610;
        uint64_t v649 = swift_allocObject();
        *(void *)(v649 + 16) = sub_100225574;
        *(void *)(v649 + 24) = v648;
        uint64_t v650 = swift_allocObject();
        *(unsigned char *)(v650 + 16) = v644;
        uint64_t v651 = swift_allocObject();
        *(unsigned char *)(v651 + 16) = v767;
        uint64_t v652 = swift_allocObject();
        *(unsigned char *)(v652 + 16) = v770;
        os_log_t v827 = (os_log_t)swift_allocObject();
        LOBYTE(v827[2].isa) = v250 != 1;
        v828 = swift_allocObject();
        LOBYTE(v828[2].isa) = v771;
        uint64_t v786 = swift_allocObject();
        *(unsigned char *)(v786 + 16) = v642;
        v801 = Logger.logObject.getter();
        LODWORD(v797) = static os_log_type_t.default.getter();
        uint64_t v799 = swift_allocObject();
        *(unsigned char *)(v799 + 16) = 112;
        uint64_t v653 = swift_allocObject();
        *(unsigned char *)(v653 + 16) = 8;
        uint64_t v654 = swift_allocObject();
        *(void *)(v654 + 16) = 1752392040;
        uint64_t v655 = swift_allocObject();
        uint64_t v787 = v655;
        *(void *)(v655 + 16) = sub_1004B84E8;
        *(void *)(v655 + 24) = v654;
        v788 = swift_allocObject();
        LOBYTE(v788[2].isa) = 33;
        uint64_t v789 = swift_allocObject();
        *(unsigned char *)(v789 + 16) = 8;
        uint64_t v656 = swift_allocObject();
        *(void *)(v656 + 16) = sub_1004B76E0;
        *(void *)(v656 + 24) = v647;
        v657 = (char *)swift_allocObject();
        v792 = v657;
        *((void *)v657 + 2) = sub_1002267F4;
        *((void *)v657 + 3) = v656;
        uint64_t v794 = swift_allocObject();
        *(unsigned char *)(v794 + 16) = 34;
        uint64_t v816 = swift_allocObject();
        *(unsigned char *)(v816 + 16) = 8;
        uint64_t v658 = swift_allocObject();
        *(void *)(v658 + 16) = sub_1004B79BC;
        *(void *)(v658 + 24) = v649;
        uint64_t v659 = swift_allocObject();
        v818 = v659;
        *(void *)(v659 + 16) = sub_1002267F4;
        *(void *)(v659 + 24) = v658;
        uint64_t v819 = swift_allocObject();
        *(unsigned char *)(v819 + 16) = 0;
        v822 = swift_allocObject();
        LOBYTE(v822[2].isa) = 4;
        uint64_t v660 = swift_allocObject();
        *(void *)(v660 + 16) = sub_1004B8304;
        *(void *)(v660 + 24) = v650;
        uint64_t v661 = swift_allocObject();
        *(void *)(v661 + 16) = sub_1004B82F4;
        *(void *)(v661 + 24) = v660;
        uint64_t v662 = swift_allocObject();
        *(void *)(v662 + 16) = sub_1004B82F8;
        *(void *)(v662 + 24) = v661;
        uint64_t v663 = v653;
        v798 = v653;
        uint64_t v664 = swift_allocObject();
        v820 = v664;
        *(void *)(v664 + 16) = sub_1004B84F0;
        *(void *)(v664 + 24) = v662;
        uint64_t v821 = swift_allocObject();
        *(unsigned char *)(v821 + 16) = 0;
        v824 = swift_allocObject();
        LOBYTE(v824[2].isa) = 4;
        uint64_t v665 = swift_allocObject();
        *(void *)(v665 + 16) = sub_1004B8304;
        *(void *)(v665 + 24) = v651;
        uint64_t v666 = swift_allocObject();
        *(void *)(v666 + 16) = sub_1004B82F4;
        *(void *)(v666 + 24) = v665;
        uint64_t v667 = swift_allocObject();
        *(void *)(v667 + 16) = sub_1004B82F8;
        *(void *)(v667 + 24) = v666;
        uint64_t v668 = swift_allocObject();
        uint64_t v823 = v668;
        *(void *)(v668 + 16) = sub_1004B84F0;
        *(void *)(v668 + 24) = v667;
        os_log_t v825 = (os_log_t)swift_allocObject();
        LOBYTE(v825[2].isa) = 0;
        uint64_t v669 = swift_allocObject();
        *(unsigned char *)(v669 + 16) = 4;
        uint64_t v670 = swift_allocObject();
        *(void *)(v670 + 16) = sub_1004B8304;
        *(void *)(v670 + 24) = v652;
        uint64_t v671 = swift_allocObject();
        *(void *)(v671 + 16) = sub_1004B82F4;
        *(void *)(v671 + 24) = v670;
        uint64_t v672 = swift_allocObject();
        *(void *)(v672 + 16) = sub_1004B82F8;
        *(void *)(v672 + 24) = v671;
        uint64_t v673 = swift_allocObject();
        uint64_t v796 = v673;
        *(void *)(v673 + 16) = sub_1004B84F0;
        *(void *)(v673 + 24) = v672;
        uint64_t v795 = swift_allocObject();
        *(unsigned char *)(v795 + 16) = 0;
        uint64_t v817 = swift_allocObject();
        *(unsigned char *)(v817 + 16) = 4;
        uint64_t v674 = swift_allocObject();
        os_log_t v675 = v827;
        *(void *)(v674 + 16) = sub_1004B8304;
        *(void *)(v674 + 24) = v675;
        uint64_t v676 = swift_allocObject();
        *(void *)(v676 + 16) = sub_1004B82F4;
        *(void *)(v676 + 24) = v674;
        uint64_t v677 = swift_allocObject();
        *(void *)(v677 + 16) = sub_1004B82F8;
        *(void *)(v677 + 24) = v676;
        uint64_t v678 = swift_allocObject();
        *(void *)&long long v826 = v678;
        *(void *)(v678 + 16) = sub_1004B84F0;
        *(void *)(v678 + 24) = v677;
        os_log_t v827 = (os_log_t)swift_allocObject();
        LOBYTE(v827[2].isa) = 0;
        uint64_t v802 = swift_allocObject();
        *(unsigned char *)(v802 + 16) = 4;
        uint64_t v679 = swift_allocObject();
        v680 = v828;
        *(void *)(v679 + 16) = sub_1004B8304;
        *(void *)(v679 + 24) = v680;
        uint64_t v681 = swift_allocObject();
        *(void *)(v681 + 16) = sub_1004B82F4;
        *(void *)(v681 + 24) = v679;
        uint64_t v682 = swift_allocObject();
        *(void *)(v682 + 16) = sub_1004B82F8;
        *(void *)(v682 + 24) = v681;
        v683 = swift_allocObject();
        v828 = v683;
        v683[2].Class isa = (Class)sub_1004B84F0;
        v683[3].Class isa = (Class)v682;
        uint64_t v815 = swift_allocObject();
        *(unsigned char *)(v815 + 16) = 0;
        uint64_t v803 = swift_allocObject();
        *(unsigned char *)(v803 + 16) = 4;
        uint64_t v684 = swift_allocObject();
        uint64_t v685 = v786;
        *(void *)(v684 + 16) = sub_1004B8304;
        *(void *)(v684 + 24) = v685;
        uint64_t v686 = swift_allocObject();
        *(void *)(v686 + 16) = sub_1004B82F4;
        *(void *)(v686 + 24) = v684;
        uint64_t v687 = swift_allocObject();
        *(void *)(v687 + 16) = sub_1004B82F8;
        *(void *)(v687 + 24) = v686;
        uint64_t v800 = v669;
        uint64_t v688 = swift_allocObject();
        *(void *)(v688 + 16) = sub_1004B84F0;
        *(void *)(v688 + 24) = v687;
        uint64_t v689 = swift_allocObject();
        *(_OWORD *)(v689 + 16) = xmmword_100569910;
        *(void *)(v689 + 32) = sub_1002267FC;
        *(void *)(v689 + 40) = v799;
        *(void *)(v689 + 48) = sub_1002267FC;
        *(void *)(v689 + 56) = v663;
        *(void *)(v689 + 64) = sub_1004B8300;
        *(void *)(v689 + 72) = v787;
        *(void *)(v689 + 80) = sub_1002267FC;
        *(void *)(v689 + 88) = v788;
        *(void *)(v689 + 96) = sub_1002267FC;
        *(void *)(v689 + 104) = v789;
        *(void *)(v689 + 112) = sub_1002267F8;
        *(void *)(v689 + 120) = v792;
        *(void *)(v689 + 128) = sub_1002267FC;
        *(void *)(v689 + 136) = v794;
        *(void *)(v689 + 144) = sub_1002267FC;
        *(void *)(v689 + 152) = v816;
        *(void *)(v689 + 160) = sub_1002267F8;
        *(void *)(v689 + 168) = v818;
        *(void *)(v689 + 176) = sub_1002267FC;
        *(void *)(v689 + 184) = v819;
        *(void *)(v689 + 192) = sub_1002267FC;
        *(void *)(v689 + 200) = v822;
        *(void *)(v689 + 208) = sub_1004B82FC;
        *(void *)(v689 + 216) = v820;
        *(void *)(v689 + 224) = sub_1002267FC;
        *(void *)(v689 + 232) = v821;
        *(void *)(v689 + 240) = sub_1002267FC;
        *(void *)(v689 + 248) = v824;
        *(void *)(v689 + 256) = sub_1004B82FC;
        *(void *)(v689 + 264) = v823;
        *(void *)(v689 + 272) = sub_1002267FC;
        *(void *)(v689 + 280) = v825;
        *(void *)(v689 + 288) = sub_1002267FC;
        *(void *)(v689 + 296) = v669;
        *(void *)(v689 + 304) = sub_1004B82FC;
        *(void *)(v689 + 312) = v796;
        *(void *)(v689 + 320) = sub_1002267FC;
        *(void *)(v689 + 328) = v795;
        *(void *)(v689 + 336) = sub_1002267FC;
        *(void *)(v689 + 344) = v817;
        *(void *)(v689 + 352) = sub_1004B82FC;
        *(void *)(v689 + 360) = v826;
        *(void *)(v689 + 368) = sub_1002267FC;
        *(void *)(v689 + 376) = v827;
        *(void *)(v689 + 384) = sub_1002267FC;
        *(void *)(v689 + 392) = v802;
        *(void *)(v689 + 400) = sub_1004B82FC;
        *(void *)(v689 + 408) = v828;
        *(void *)(v689 + 416) = sub_1002267FC;
        *(void *)(v689 + 424) = v815;
        *(void *)(v689 + 432) = sub_1002267FC;
        *(void *)(v689 + 440) = v803;
        *(void *)(v689 + 448) = sub_1004B82FC;
        *(void *)(v689 + 456) = v688;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v786 = v688;
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v801, (os_log_type_t)v797))
        {
          v690 = v802;
          v691 = (uint8_t *)sub_10007D1C4();
          uint64_t v692 = swift_slowAlloc();
          uint64_t v840 = 0;
          v784 = v692;
          uint64_t v839 = v692;
          v785 = v691;
          *(_WORD *)v691 = 2307;
          v841[0] = v691 + 2;
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v799;
          uint64_t v693 = (uint64_t)v833;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          if (v693) {
            goto LABEL_244;
          }
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v798;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          v280 = v832;
          v694 = (uint8_t *)v822;
          v695 = v818;
          v696 = v794;
          v697 = v789;
          v698 = v787;
          swift_release();
          v837 = sub_1004B8300;
          v838 = v698;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v788;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v697;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267F8;
          v838 = v792;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v696;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v816;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          v699 = v803;
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267F8;
          v838 = v695;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v819;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          v700 = v795;
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v694;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          v701 = v800;
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1004B82FC;
          v838 = v820;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v821;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v824;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          uint64_t v702 = v778;
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1004B82FC;
          v838 = v823;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v825;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v701;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          uint64_t v281 = v836;
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1004B82FC;
          v838 = v796;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v700;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v817;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          v703 = v722;
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1004B82FC;
          v838 = v826;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v827;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v690;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1004B82FC;
          v838 = v828;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v815;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v699;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1004B82FC;
          v838 = v786;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          v833 = 0;
          swift_release();
          v704 = v801;
          _os_log_impl((void *)&_mh_execute_header, v801, (os_log_type_t)v797, "soundViewLayout id: %{private,mask.hash}s multichannel result %{public}s. Left: [Playing_Classic: %{BOOL}d, PLaying_LE: %{BOOL}d, Queued: %{BOOL}d] Right: [Playing_Classic: %{BOOL}d, Playing_LE: %{BOOL}d, Queued: %{BOOL}d].", (uint8_t *)v785, 0x44u);
          swift_arrayDestroy();
          swift_slowDealloc();
          sub_10007D1CC();

          (*(void (**)(char *, uint64_t))(v835 + 8))(v703, v281);
          (*(void (**)(char *, uint64_t))(v702 + 8))(v780, v779);
          uint64_t v344 = v829;
          goto LABEL_138;
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        v638 = *(void (**)(char *, uint64_t))(v835 + 8);
        v639 = v722;
        goto LABEL_223;
      }
    }
    else
    {
      v515 = v723;
      (*(void (**)(char *, uint64_t, uint64_t))(v432 + 32))(v723, v431, v433);
      if (v774)
      {
        LODWORD(v827) = v430;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v811(v719, v812, (uint64_t)v424);
        v516 = v830;
        uint64_t v517 = v831;
        v809(v830, v423, v831);
        uint64_t v518 = swift_allocObject();
        v805(v518 + v808, v516, v517);
        os_log_t v825 = (os_log_t)Logger.logObject.getter();
        LODWORD(v824) = static os_log_type_t.default.getter();
        uint64_t v519 = swift_allocObject();
        *(unsigned char *)(v519 + 16) = 112;
        uint64_t v520 = swift_allocObject();
        *(unsigned char *)(v520 + 16) = 8;
        uint64_t v521 = swift_allocObject();
        *(void *)(v521 + 16) = 1752392040;
        uint64_t v522 = swift_allocObject();
        *(void *)(v522 + 16) = sub_1004B84E8;
        *(void *)(v522 + 24) = v521;
        uint64_t v523 = swift_allocObject();
        *(unsigned char *)(v523 + 16) = 33;
        uint64_t v524 = swift_allocObject();
        *(unsigned char *)(v524 + 16) = 8;
        uint64_t v525 = swift_allocObject();
        *(void *)(v525 + 16) = sub_1004B76E0;
        *(void *)(v525 + 24) = v518;
        uint64_t v526 = swift_allocObject();
        *(void *)(v526 + 16) = sub_1002267F4;
        *(void *)(v526 + 24) = v525;
        uint64_t v527 = swift_allocObject();
        *(_OWORD *)(v527 + 16) = v826;
        *(void *)(v527 + 32) = sub_1002267FC;
        *(void *)(v527 + 40) = v519;
        *(void *)(v527 + 48) = sub_1002267FC;
        *(void *)(v527 + 56) = v520;
        *(void *)(v527 + 64) = sub_1004B8300;
        *(void *)(v527 + 72) = v522;
        *(void *)(v527 + 80) = sub_1002267FC;
        *(void *)(v527 + 88) = v523;
        *(void *)(v527 + 96) = sub_1002267FC;
        *(void *)(v527 + 104) = v524;
        *(void *)(v527 + 112) = sub_1002267F8;
        *(void *)(v527 + 120) = v526;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        os_log_t v528 = v825;
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v528, (os_log_type_t)v824))
        {
          v529 = (uint8_t *)sub_10007D1C4();
          uint64_t v530 = swift_slowAlloc();
          uint64_t v840 = 0;
          uint64_t v839 = v530;
          *(_WORD *)v529 = 515;
          v841[0] = v529 + 2;
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v519;
          uint64_t v531 = (uint64_t)v833;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          if (v531) {
            goto LABEL_244;
          }
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v520;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          swift_release();
          v837 = sub_1004B8300;
          v838 = v522;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v523;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          BOOL v532 = v771;
          int v533 = HIDWORD(v770);
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
          v838 = v524;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          uint64_t v534 = v779;
          swift_release();
          v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267F8;
          v838 = v526;
          sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
          uint64_t v281 = v836;
          v833 = 0;
          swift_release();
          os_log_t v535 = v825;
          _os_log_impl((void *)&_mh_execute_header, v825, (os_log_type_t)v824, "soundViewLayout id: %{private,mask.hash}s is a multichannel device and has primary selected part.", v529, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          sub_10007D1CC();

          ((void (*)(char *, uint64_t))v829)(v719, v281);
          v280 = v832;
        }
        else
        {

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v281 = v836;
          ((void (*)(char *, uint64_t))v829)(v719, v836);
          v280 = v832;
          uint64_t v534 = v779;
          BOOL v532 = v771;
          int v533 = HIDWORD(v770);
        }
        v490 = v714;
        v609 = v723;
        FMIPItem.partType.getter();
        (*(void (**)(char *, uint64_t))(v795 + 8))(v609, v781);
        (*(void (**)(char *, uint64_t))(v778 + 8))(v780, v534);
        uint64_t v493 = v735;
        uint64_t v492 = v736;
        int v494 = (*(uint64_t (**)(char *, uint64_t))(v735 + 88))(v490, v736);
        if (v494 == enum case for FMIPPartType.standalone(_:)) {
          goto LABEL_119;
        }
        if (v494 == enum case for FMIPPartType.case(_:))
        {
          BOOL v495 = v734 == 0;
          goto LABEL_97;
        }
        if (v494 == enum case for FMIPPartType.leftBud(_:))
        {
          uint64_t v344 = 3;
          if (v767) {
            goto LABEL_138;
          }
          if (v770) {
            unsigned int v640 = 2;
          }
          else {
            unsigned int v640 = 0;
          }
          int v641 = (int)v828;
        }
        else
        {
          if (v494 != enum case for FMIPPartType.rightBud(_:))
          {
LABEL_212:
            if (v494 != enum case for FMIPPartType.generic(_:)) {
              (*(void (**)(char *, uint64_t))(v493 + 8))(v490, v492);
            }
            goto LABEL_119;
          }
          uint64_t v344 = 3;
          if (v532) {
            goto LABEL_138;
          }
          if (v533) {
            unsigned int v640 = 2;
          }
          else {
            unsigned int v640 = 0;
          }
          int v641 = (int)v827;
        }
        if (v641 == 1) {
          uint64_t v344 = v640;
        }
        else {
          uint64_t v344 = 3;
        }
        goto LABEL_138;
      }
      (*(void (**)(char *, uint64_t))(v432 + 8))(v515, v433);
    }
    if (v794 && (uint64_t v586 = *(void *)(v794 + 16), swift_bridgeObjectRelease(), v586))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v587 = 2;
      v588 = v728;
    }
    else
    {
      uint64_t v589 = *((void *)v792 + 2);
      swift_bridgeObjectRelease();
      v588 = v728;
      if (v589)
      {
        swift_bridgeObjectRelease();
        uint64_t v587 = 3;
      }
      else if (v789 && (uint64_t v611 = *(void *)(v789 + 16), swift_bridgeObjectRelease(), v611))
      {
        uint64_t v587 = 3;
      }
      else
      {
        uint64_t v587 = 0;
      }
    }
    v811(v588, v812, (uint64_t)v424);
    v612 = v830;
    uint64_t v613 = v831;
    v809(v830, v423, v831);
    uint64_t v614 = swift_allocObject();
    v805(v614 + v808, v612, v613);
    uint64_t v615 = swift_allocObject();
    uint64_t v829 = v587;
    *(unsigned char *)(v615 + 16) = v587;
    uint64_t v616 = swift_allocObject();
    *(void *)(v616 + 16) = sub_1004B84EC;
    *(void *)(v616 + 24) = v615;
    v828 = Logger.logObject.getter();
    LODWORD(v826) = static os_log_type_t.default.getter();
    os_log_t v827 = (os_log_t)swift_allocObject();
    LOBYTE(v827[2].isa) = 112;
    os_log_t v825 = (os_log_t)swift_allocObject();
    LOBYTE(v825[2].isa) = 8;
    uint64_t v617 = swift_allocObject();
    *(void *)(v617 + 16) = 1752392040;
    uint64_t v618 = swift_allocObject();
    *(void *)(v618 + 16) = sub_1004B84E8;
    *(void *)(v618 + 24) = v617;
    uint64_t v619 = swift_allocObject();
    *(unsigned char *)(v619 + 16) = 33;
    uint64_t v620 = swift_allocObject();
    *(unsigned char *)(v620 + 16) = 8;
    uint64_t v621 = swift_allocObject();
    *(void *)(v621 + 16) = sub_1004B76E0;
    *(void *)(v621 + 24) = v614;
    uint64_t v622 = swift_allocObject();
    *(void *)(v622 + 16) = sub_1002267F4;
    *(void *)(v622 + 24) = v621;
    uint64_t v623 = swift_allocObject();
    *(unsigned char *)(v623 + 16) = 34;
    uint64_t v624 = swift_allocObject();
    *(unsigned char *)(v624 + 16) = 8;
    uint64_t v625 = swift_allocObject();
    *(void *)(v625 + 16) = sub_1004B79BC;
    *(void *)(v625 + 24) = v616;
    uint64_t v626 = swift_allocObject();
    *(void *)(v626 + 16) = sub_1002267F4;
    *(void *)(v626 + 24) = v625;
    os_log_t v627 = v825;
    uint64_t v628 = swift_allocObject();
    *(_OWORD *)(v628 + 16) = xmmword_100569900;
    *(void *)(v628 + 32) = sub_1002267FC;
    *(void *)(v628 + 40) = v827;
    *(void *)(v628 + 48) = sub_1002267FC;
    *(void *)(v628 + 56) = v627;
    *(void *)(v628 + 64) = sub_1004B8300;
    *(void *)(v628 + 72) = v618;
    *(void *)(v628 + 80) = sub_1002267FC;
    *(void *)(v628 + 88) = v619;
    *(void *)(v628 + 96) = sub_1002267FC;
    *(void *)(v628 + 104) = v620;
    *(void *)(v628 + 112) = sub_1002267F8;
    *(void *)(v628 + 120) = v622;
    *(void *)(v628 + 128) = sub_1002267FC;
    *(void *)(v628 + 136) = v623;
    *(void *)(v628 + 144) = sub_1002267FC;
    *(void *)(v628 + 152) = v624;
    *(void *)(v628 + 160) = sub_1002267F8;
    *(void *)(v628 + 168) = v626;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v828, (os_log_type_t)v826))
    {
      uint64_t v821 = v619;
      uint64_t v819 = v622;
      uint64_t v629 = v620;
      uint64_t v823 = v623;
      v824 = v626;
      v630 = (uint8_t *)sub_10007D1C4();
      uint64_t v631 = swift_slowAlloc();
      uint64_t v840 = 0;
      uint64_t v839 = v631;
      *(_WORD *)v630 = 771;
      v841[0] = v630 + 2;
      v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
      v838 = v827;
      uint64_t v632 = (uint64_t)v833;
      sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
      if (v632) {
        goto LABEL_244;
      }
      v820 = v631;
      v822 = v630;
      swift_release();
      v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
      v838 = v627;
      sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
      v280 = v832;
      swift_release();
      v837 = sub_1004B8300;
      v838 = v618;
      sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
      v633 = v629;
      swift_release();
      v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
      v838 = v821;
      sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
      uint64_t v634 = v778;
      v635 = v819;
      swift_release();
      v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
      v838 = v633;
      sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
      v636 = v728;
      swift_release();
      v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267F8;
      v838 = v635;
      sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
      uint64_t v344 = v829;
      swift_release();
      v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
      v838 = v823;
      sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
      swift_release();
      v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
      v838 = v624;
      sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
      uint64_t v281 = v836;
      swift_release();
      v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267F8;
      v838 = v824;
      sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
      v833 = 0;
      swift_release();
      v637 = v828;
      _os_log_impl((void *)&_mh_execute_header, v828, (os_log_type_t)v826, "soundViewLayout id: %{private,mask.hash}s [Monaural / Can Stop Sound] is %{public}s.", (uint8_t *)v822, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      sub_10007D1CC();

      (*(void (**)(char *, uint64_t))(v835 + 8))(v636, v281);
      (*(void (**)(char *, uint64_t))(v634 + 8))(v780, v779);
      goto LABEL_138;
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    v638 = *(void (**)(char *, uint64_t))(v835 + 8);
    v639 = v728;
LABEL_223:
    uint64_t v281 = v836;
    v638(v639, v836);
    (*(void (**)(char *, uint64_t))(v778 + 8))(v780, v779);
    v280 = v832;
    uint64_t v344 = v829;
    goto LABEL_138;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v453 = v730;
  v454 = v780;
  FMIPPlaySoundMetadata.status.getter();
  uint64_t v456 = v754;
  uint64_t v455 = v755;
  v457 = v729;
  (*(void (**)(char *, void, uint64_t))(v754 + 104))(v729, v825, v755);
  BOOL v458 = sub_1001DAA48();
  v459 = *(void (**)(char *, uint64_t))(v456 + 8);
  v459(v457, v455);
  v459(v453, v455);
  uint64_t v460 = v778;
  v461 = v725;
  uint64_t v462 = v779;
  (*(void (**)(char *, char *, uint64_t))(v778 + 16))(v725, v454, v779);
  if (v458)
  {
    v463 = v715;
    Date.init()();
    v464 = v716;
    FMIPPlaySoundMetadata.timestamp.getter();
    Date.timeIntervalSince(_:)();
    double v466 = v465;
    v467 = *(void (**)(char *, uint64_t))(v717 + 8);
    v468 = v464;
    uint64_t v469 = v718;
    v467(v468, v718);
    v467(v463, v469);
    v828 = *(NSObject **)(v460 + 8);
    ((void (*)(char *, uint64_t))v828)(v461, v462);
    if (v466 < 15.0)
    {
      v811(v721, v812, v305);
      v470 = v830;
      uint64_t v471 = v831;
      v809(v830, v306, v831);
      uint64_t v472 = swift_allocObject();
      v805(v472 + v808, v470, v471);
      os_log_t v827 = (os_log_t)Logger.logObject.getter();
      LODWORD(v825) = static os_log_type_t.default.getter();
      uint64_t v473 = swift_allocObject();
      *(unsigned char *)(v473 + 16) = 112;
      uint64_t v474 = swift_allocObject();
      *(unsigned char *)(v474 + 16) = 8;
      uint64_t v475 = swift_allocObject();
      *(void *)(v475 + 16) = 1752392040;
      uint64_t v476 = swift_allocObject();
      *(void *)(v476 + 16) = sub_1004B84E8;
      *(void *)(v476 + 24) = v475;
      uint64_t v477 = swift_allocObject();
      *(unsigned char *)(v477 + 16) = 33;
      uint64_t v478 = swift_allocObject();
      *(unsigned char *)(v478 + 16) = 8;
      uint64_t v479 = swift_allocObject();
      *(void *)(v479 + 16) = sub_1004B76E0;
      *(void *)(v479 + 24) = v472;
      uint64_t v480 = swift_allocObject();
      *(void *)(v480 + 16) = sub_1002267F4;
      *(void *)(v480 + 24) = v479;
      uint64_t v481 = swift_allocObject();
      *(_OWORD *)(v481 + 16) = v826;
      *(void *)(v481 + 32) = sub_1002267FC;
      *(void *)(v481 + 40) = v473;
      *(void *)(v481 + 48) = sub_1002267FC;
      *(void *)(v481 + 56) = v474;
      *(void *)(v481 + 64) = sub_1004B8300;
      *(void *)(v481 + 72) = v476;
      *(void *)(v481 + 80) = sub_1002267FC;
      *(void *)(v481 + 88) = v477;
      *(void *)(v481 + 96) = sub_1002267FC;
      *(void *)(v481 + 104) = v478;
      *(void *)(v481 + 112) = sub_1002267F8;
      *(void *)(v481 + 120) = v480;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v482 = v827;
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v482, (os_log_type_t)v825))
      {
        v483 = (_WORD *)sub_10007D1C4();
        uint64_t v484 = swift_slowAlloc();
        uint64_t v840 = 0;
        uint64_t v839 = v484;
        *(void *)&long long v826 = v483;
        _WORD *v483 = 515;
        v841[0] = v483 + 1;
        v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
        v838 = v473;
        uint64_t v485 = (uint64_t)v833;
        sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
        if (v485) {
          goto LABEL_244;
        }
        swift_release();
        v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
        v838 = v474;
        sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
        swift_release();
        v837 = sub_1004B8300;
        v838 = v476;
        sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
        swift_release();
        v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
        v838 = v477;
        sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
        uint64_t v281 = v836;
        swift_release();
        v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
        v838 = v478;
        sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
        v280 = v832;
        swift_release();
        v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267F8;
        v838 = v480;
        sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
        v833 = 0;
        v486 = v721;
        swift_release();
        os_log_t v487 = v827;
        _os_log_impl((void *)&_mh_execute_header, v827, (os_log_type_t)v825, "soundViewLayout id: %{private,mask.hash}s is playing sound - for 15 seconds.", (uint8_t *)v826, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        sub_10007D1CC();

        ((void (*)(char *, uint64_t))v829)(v486, v281);
        ((void (*)(char *, uint64_t))v828)(v780, v779);
        uint64_t v344 = 3;
        goto LABEL_138;
      }
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      uint64_t v281 = v836;
      ((void (*)(char *, uint64_t))v829)(v721, v836);
      ((void (*)(char *, uint64_t))v828)(v780, v779);
      goto LABEL_109;
    }
  }
  else
  {
    v828 = *(NSObject **)(v460 + 8);
    ((void (*)(char *, uint64_t))v828)(v461, v462);
  }
  v811(v732, v812, v305);
  v536 = v830;
  uint64_t v537 = v831;
  v809(v830, v306, v831);
  uint64_t v538 = swift_allocObject();
  v805(v538 + v808, v536, v537);
  os_log_t v827 = (os_log_t)Logger.logObject.getter();
  LODWORD(v825) = static os_log_type_t.default.getter();
  uint64_t v539 = swift_allocObject();
  *(unsigned char *)(v539 + 16) = 112;
  uint64_t v540 = swift_allocObject();
  *(unsigned char *)(v540 + 16) = 8;
  uint64_t v541 = swift_allocObject();
  *(void *)(v541 + 16) = 1752392040;
  uint64_t v542 = swift_allocObject();
  *(void *)(v542 + 16) = sub_1004B84E8;
  *(void *)(v542 + 24) = v541;
  uint64_t v543 = swift_allocObject();
  *(unsigned char *)(v543 + 16) = 33;
  uint64_t v544 = swift_allocObject();
  *(unsigned char *)(v544 + 16) = 8;
  uint64_t v545 = swift_allocObject();
  *(void *)(v545 + 16) = sub_1004B76E0;
  *(void *)(v545 + 24) = v538;
  uint64_t v546 = swift_allocObject();
  *(void *)(v546 + 16) = sub_1002267F4;
  *(void *)(v546 + 24) = v545;
  uint64_t v547 = swift_allocObject();
  *(_OWORD *)(v547 + 16) = v826;
  *(void *)(v547 + 32) = sub_1002267FC;
  *(void *)(v547 + 40) = v539;
  *(void *)(v547 + 48) = sub_1002267FC;
  *(void *)(v547 + 56) = v540;
  *(void *)(v547 + 64) = sub_1004B8300;
  *(void *)(v547 + 72) = v542;
  *(void *)(v547 + 80) = sub_1002267FC;
  *(void *)(v547 + 88) = v543;
  *(void *)(v547 + 96) = sub_1002267FC;
  *(void *)(v547 + 104) = v544;
  *(void *)(v547 + 112) = sub_1002267F8;
  *(void *)(v547 + 120) = v546;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  os_log_t v548 = v827;
  swift_bridgeObjectRelease();
  if (!os_log_type_enabled(v548, (os_log_type_t)v825))
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v281 = v836;
    ((void (*)(char *, uint64_t))v829)(v732, v836);
    ((void (*)(char *, uint64_t))v828)(v780, v779);
    goto LABEL_136;
  }
  v549 = (uint8_t *)sub_10007D1C4();
  uint64_t v550 = swift_slowAlloc();
  uint64_t v840 = 0;
  uint64_t v839 = v550;
  *(_WORD *)v549 = 515;
  v841[0] = v549 + 2;
  v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
  v838 = v539;
  uint64_t v551 = (uint64_t)v833;
  sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
  if (v551) {
    goto LABEL_244;
  }
  swift_release();
  v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
  v838 = v540;
  sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
  swift_release();
  v837 = sub_1004B8300;
  v838 = v542;
  sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
  swift_release();
  v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
  v838 = v543;
  sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
  uint64_t v281 = v836;
  swift_release();
  v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
  v838 = v544;
  sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
  v280 = v832;
  swift_release();
  v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267F8;
  v838 = v546;
  sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
  v833 = 0;
  v552 = v732;
  swift_release();
  os_log_t v553 = v827;
  _os_log_impl((void *)&_mh_execute_header, v827, (os_log_type_t)v825, "soundViewLayout id: %{private,mask.hash}s is no longer playing sound - 15 seconds elapsed.", v549, 0x16u);
  swift_arrayDestroy();
  swift_slowDealloc();
  sub_10007D1CC();

  ((void (*)(char *, uint64_t))v829)(v552, v281);
  ((void (*)(char *, uint64_t))v828)(v780, v779);
LABEL_119:
  uint64_t v344 = 0;
LABEL_138:
  v811(v790, v812, v281);
  v555 = v830;
  uint64_t v556 = v831;
  v809(v830, v280, v831);
  uint64_t v557 = swift_allocObject();
  v805(v557 + v808, v555, v556);
  uint64_t v558 = swift_allocObject();
  uint64_t v829 = v344;
  *(unsigned char *)(v558 + 16) = v344;
  uint64_t v559 = swift_allocObject();
  *(void *)(v559 + 16) = sub_1004B84EC;
  *(void *)(v559 + 24) = v558;
  v834 = Logger.logObject.getter();
  LODWORD(v832) = static os_log_type_t.default.getter();
  uint64_t v560 = swift_allocObject();
  *(unsigned char *)(v560 + 16) = 112;
  v828 = swift_allocObject();
  LOBYTE(v828[2].isa) = 8;
  uint64_t v561 = swift_allocObject();
  *(void *)(v561 + 16) = 1752392040;
  uint64_t v562 = swift_allocObject();
  *(void *)(v562 + 16) = sub_1004B84E8;
  *(void *)(v562 + 24) = v561;
  uint64_t v563 = swift_allocObject();
  *(unsigned char *)(v563 + 16) = 33;
  os_log_t v827 = (os_log_t)swift_allocObject();
  LOBYTE(v827[2].isa) = 8;
  uint64_t v564 = swift_allocObject();
  *(void *)(v564 + 16) = sub_1004B76E0;
  *(void *)(v564 + 24) = v557;
  v565 = swift_allocObject();
  v565[2].Class isa = (Class)sub_1002267F4;
  v565[3].Class isa = (Class)v564;
  uint64_t v566 = swift_allocObject();
  *(unsigned char *)(v566 + 16) = 34;
  uint64_t v567 = swift_allocObject();
  *(unsigned char *)(v567 + 16) = 8;
  uint64_t v568 = swift_allocObject();
  *(void *)(v568 + 16) = sub_1004B79BC;
  *(void *)(v568 + 24) = v559;
  uint64_t v569 = swift_allocObject();
  *(void *)(v569 + 16) = sub_1002267F4;
  *(void *)(v569 + 24) = v568;
  uint64_t v570 = swift_initStackObject();
  *(_OWORD *)(v570 + 16) = xmmword_100569900;
  *(void *)(v570 + 32) = sub_1002267FC;
  *(void *)(v570 + 40) = v560;
  v571 = v828;
  *(void *)(v570 + 48) = sub_1002267FC;
  *(void *)(v570 + 56) = v571;
  *(void *)(v570 + 64) = sub_1004B8300;
  *(void *)(v570 + 72) = v562;
  *(void *)(v570 + 80) = sub_1002267FC;
  *(void *)(v570 + 88) = v563;
  os_log_t v572 = v827;
  *(void *)(v570 + 96) = sub_1002267FC;
  *(void *)(v570 + 104) = v572;
  *(void *)(v570 + 112) = sub_1002267F8;
  *(void *)(v570 + 120) = v565;
  *(void *)(v570 + 128) = sub_1002267FC;
  *(void *)(v570 + 136) = v566;
  *(void *)(v570 + 144) = sub_1002267FC;
  *(void *)(v570 + 152) = v567;
  *(void *)(v570 + 160) = sub_1002267F8;
  *(void *)(v570 + 168) = v569;
  uint64_t v831 = v560;
  v573 = v571;
  swift_retain();
  swift_retain();
  swift_retain();
  v830 = v563;
  v574 = v572;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (!os_log_type_enabled(v834, (os_log_type_t)v832))
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v835 + 8))(v790, v836);
    uint64_t v584 = v793;
    goto LABEL_142;
  }
  v575 = v573;
  v576 = v830;
  os_log_t v825 = v565;
  *(void *)&long long v826 = v569;
  v577 = (uint8_t *)sub_10007D1C4();
  uint64_t v578 = swift_slowAlloc();
  uint64_t v840 = 0;
  uint64_t v823 = v578;
  uint64_t v839 = v578;
  v824 = v577;
  *(_WORD *)v577 = 771;
  v841[0] = v577 + 2;
  v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
  v838 = v831;
  uint64_t v579 = (uint64_t)v833;
  sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
  if (!v579)
  {
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v575;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = sub_1004B8300;
    v838 = v562;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v576;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v574;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267F8;
    v838 = v825;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v566;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267FC;
    v838 = v567;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    uint64_t v580 = v836;
    v581 = v790;
    uint64_t v582 = v793;
    swift_release();
    v837 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002267F8;
    v838 = v826;
    sub_10007D1E8(&v837, (uint64_t)v841, (uint64_t)&v840, (uint64_t)&v839);
    swift_release();
    v583 = v834;
    _os_log_impl((void *)&_mh_execute_header, v834, (os_log_type_t)v832, "soundViewLayout Result id: %{private,mask.hash}s is %{public}s.", (uint8_t *)v824, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_10007D1CC();

    (*(void (**)(char *, uint64_t))(v835 + 8))(v581, v580);
    uint64_t v584 = v582;
LABEL_142:
    sub_100003F10(v584, (uint64_t *)&unk_1006AFE30);
    sub_100003F10(v791, (uint64_t *)&unk_1006C0380);
    sub_100003F10((uint64_t)v814, &qword_1006B36B0);
    return v829;
  }
LABEL_244:
  swift_errorRelease();
  __break(1u);
  uint64_t result = swift_errorRelease();
  __break(1u);
  return result;
}

uint64_t sub_1004A1C84(uint64_t result)
{
  uint64_t v3 = *(void *)(result + 16);
  uint64_t v4 = *(void **)v1;
  int64_t v5 = *(void *)(*(void *)v1 + 16);
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = result;
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6) {
      int64_t v10 = v5 + v3;
    }
    else {
      int64_t v10 = v5;
    }
    uint64_t v4 = sub_10007D258(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    int64_t v9 = v4[3] >> 1;
  }
  uint64_t v11 = v4[2];
  uint64_t v12 = v9 - v11;
  uint64_t result = sub_100062DAC((uint64_t)v38, &v4[2 * v11 + 4], v9 - v11, v7);
  if (result < v3) {
    goto LABEL_15;
  }
  if (result)
  {
    uint64_t v14 = v4[2];
    BOOL v15 = __OFADD__(v14, result);
    uint64_t v16 = v14 + result;
    if (v15)
    {
      __break(1u);
      goto LABEL_48;
    }
    v4[2] = v16;
  }
  if (result != v12)
  {
LABEL_13:
    uint64_t result = sub_1000814B8();
    *(void *)uint64_t v1 = v4;
    return result;
  }
LABEL_16:
  int64_t v2 = v4[2];
  uint64_t v3 = v38[0];
  uint64_t v37 = v38[1];
  uint64_t v13 = v39;
  int64_t v6 = v40;
  if (v41)
  {
    unint64_t v17 = (v41 - 1) & v41;
    unint64_t v18 = __clz(__rbit64(v41)) | (v40 << 6);
    int64_t v36 = (unint64_t)(v39 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_48:
  int64_t v32 = v6 + 1;
  if (__OFADD__(v6, 1)) {
    goto LABEL_66;
  }
  int64_t v36 = (unint64_t)(v13 + 64) >> 6;
  if (v32 >= v36) {
    goto LABEL_13;
  }
  unint64_t v33 = *(void *)(v37 + 8 * v32);
  int64_t v34 = v6 + 1;
  if (!v33)
  {
    int64_t v34 = v6 + 2;
    if (v6 + 2 >= v36) {
      goto LABEL_13;
    }
    unint64_t v33 = *(void *)(v37 + 8 * v34);
    if (!v33)
    {
      int64_t v34 = v6 + 3;
      if (v6 + 3 >= v36) {
        goto LABEL_13;
      }
      unint64_t v33 = *(void *)(v37 + 8 * v34);
      if (!v33)
      {
        int64_t v34 = v6 + 4;
        if (v6 + 4 >= v36) {
          goto LABEL_13;
        }
        unint64_t v33 = *(void *)(v37 + 8 * v34);
        if (!v33)
        {
          int64_t v34 = v6 + 5;
          if (v6 + 5 >= v36) {
            goto LABEL_13;
          }
          unint64_t v33 = *(void *)(v37 + 8 * v34);
          if (!v33)
          {
            int64_t v35 = v6 + 6;
            do
            {
              if (v36 == v35) {
                goto LABEL_13;
              }
              unint64_t v33 = *(void *)(v37 + 8 * v35++);
            }
            while (!v33);
            int64_t v34 = v35 - 1;
          }
        }
      }
    }
  }
  unint64_t v17 = (v33 - 1) & v33;
  unint64_t v18 = __clz(__rbit64(v33)) + (v34 << 6);
  int64_t v6 = v34;
LABEL_18:
  uint64_t v19 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v18);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  uint64_t result = swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v22 = v4[3];
    int64_t v23 = v22 >> 1;
    if ((uint64_t)(v22 >> 1) < v2 + 1) {
      break;
    }
    if (v2 < v23) {
      goto LABEL_23;
    }
LABEL_20:
    v4[2] = v2;
  }
  uint64_t result = (uint64_t)sub_10007D258((void *)(v22 > 1), v2 + 1, 1, v4);
  uint64_t v4 = (void *)result;
  int64_t v23 = *(void *)(result + 24) >> 1;
  if (v2 >= v23) {
    goto LABEL_20;
  }
  while (1)
  {
LABEL_23:
    uint64_t v24 = &v4[2 * v2 + 4];
    *uint64_t v24 = v21;
    v24[1] = v20;
    ++v2;
    if (v17)
    {
      unint64_t v25 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v26 = v25 | (v6 << 6);
      goto LABEL_41;
    }
    int64_t v27 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v27 >= v36) {
      goto LABEL_45;
    }
    unint64_t v28 = *(void *)(v37 + 8 * v27);
    int64_t v29 = v6 + 1;
    if (!v28)
    {
      int64_t v29 = v6 + 2;
      if (v6 + 2 >= v36) {
        goto LABEL_45;
      }
      unint64_t v28 = *(void *)(v37 + 8 * v29);
      if (!v28)
      {
        int64_t v29 = v6 + 3;
        if (v6 + 3 >= v36) {
          goto LABEL_45;
        }
        unint64_t v28 = *(void *)(v37 + 8 * v29);
        if (!v28)
        {
          int64_t v29 = v6 + 4;
          if (v6 + 4 >= v36) {
            goto LABEL_45;
          }
          unint64_t v28 = *(void *)(v37 + 8 * v29);
          if (!v28)
          {
            int64_t v29 = v6 + 5;
            if (v6 + 5 >= v36) {
              goto LABEL_45;
            }
            unint64_t v28 = *(void *)(v37 + 8 * v29);
            if (!v28)
            {
              int64_t v30 = v6 + 6;
              while (v36 != v30)
              {
                unint64_t v28 = *(void *)(v37 + 8 * v30++);
                if (v28)
                {
                  int64_t v29 = v30 - 1;
                  goto LABEL_40;
                }
              }
LABEL_45:
              v4[2] = v2;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_40:
    unint64_t v17 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v29 << 6);
    int64_t v6 = v29;
LABEL_41:
    uint64_t v31 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v26);
    uint64_t v21 = *v31;
    uint64_t v20 = v31[1];
    if (v2 >= v23)
    {
      uint64_t result = swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    uint64_t result = swift_bridgeObjectRetain();
  }
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_1004A2050(uint64_t a1)
{
  return sub_100035710(a1, (uint64_t (*)(void))sub_10007D404, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
}

uint64_t sub_1004A207C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_10007D258(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004A21D0(uint64_t a1)
{
  return sub_100035710(a1, (uint64_t (*)(void))sub_10007D39C, (uint64_t (*)(void))&type metadata accessor for FMIPPlaySoundChannels);
}

uint64_t sub_1004A21FC(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for FMIPPlaySoundChannels();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v86 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10005D034(&qword_1006B5E68);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v87 = (uint64_t)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  __chkstk_darwin(v10);
  uint64_t v16 = (char *)&v70 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  int64_t v18 = *v1;
  int64_t v19 = *(void *)(*v1 + 16);
  int64_t v20 = v19 + v17;
  if (__OFADD__(v19, v17))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v85 = v11;
  uint64_t v2 = v5;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t *v1 = v18;
  if (!isUniquelyReferenced_nonNull_native || (int64_t v22 = *(void *)(v18 + 24) >> 1, v22 < v20))
  {
    if (v19 <= v20) {
      int64_t v23 = v19 + v17;
    }
    else {
      int64_t v23 = v19;
    }
    int64_t v18 = sub_10007D39C(isUniquelyReferenced_nonNull_native, v23, 1, v18);
    unint64_t *v1 = v18;
    int64_t v22 = *(void *)(v18 + 24) >> 1;
  }
  uint64_t v24 = *(void *)(v18 + 16);
  int64_t v19 = *(void *)(v5 + 72);
  int64_t v25 = v22 - v24;
  unint64_t v84 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v26 = sub_1004B10CC(&v88, v18 + v84 + v19 * v24, v22 - v24, a1, (uint64_t (*)(void))&type metadata accessor for FMIPPlaySoundChannels);
  if (v26 < v17) {
    goto LABEL_17;
  }
  if (v26)
  {
    uint64_t v29 = *(void *)(v18 + 16);
    BOOL v30 = __OFADD__(v29, v26);
    uint64_t v31 = v29 + v26;
    if (v30)
    {
      __break(1u);
      goto LABEL_22;
    }
    *(void *)(v18 + 16) = v31;
  }
  if (v26 == v25)
  {
LABEL_18:
    int64_t v18 = *(void *)(v18 + 16);
    uint64_t v17 = v88;
    uint64_t v28 = v89;
    int64_t v27 = v90;
    int64_t v25 = v91;
    int64_t v79 = v90;
    int64_t v83 = v89;
    if (v92)
    {
      unint64_t v33 = (v92 - 1) & v92;
      unint64_t v34 = __clz(__rbit64(v92)) | (v91 << 6);
LABEL_20:
      (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v16, *(void *)(v17 + 48) + v34 * v19, v4);
      uint64_t v74 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
      v74(v16, 0, 1, v4);
      unint64_t v35 = v33;
LABEL_43:
      unint64_t v81 = v35;
      int64_t v82 = v25;
      unint64_t v88 = v17;
      int64_t v89 = v83;
      int64_t v90 = v79;
      int64_t v91 = v25;
      unint64_t v92 = v35;
      uint64_t v41 = v85;
      sub_100006AB0((uint64_t)v16, v85, &qword_1006B5E68);
      uint64_t v80 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
      int v42 = v80(v41, 1, v4);
      uint64_t v43 = v87;
      if (v42 == 1)
      {
LABEL_81:
        sub_100003F10((uint64_t)v16, &qword_1006B5E68);
        sub_1000814B8();
        return sub_100003F10(v85, &qword_1006B5E68);
      }
      uint64_t v78 = (void (**)(void, void, void))(v5 + 32);
      uint64_t v72 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v73 = v5 + 56;
      uint64_t v71 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v44 = v85;
      uint64_t v45 = v86;
      uint64_t v75 = v16;
      while (1)
      {
        sub_100003F10(v44, &qword_1006B5E68);
        uint64_t v47 = *v1;
        unint64_t v48 = *(void *)(*v1 + 24);
        int64_t v49 = v48 >> 1;
        if ((uint64_t)(v48 >> 1) < v18 + 1)
        {
          uint64_t v47 = sub_10007D39C(v48 > 1, v18 + 1, 1, *v1);
          unint64_t *v1 = v47;
          int64_t v49 = *(void *)(v47 + 24) >> 1;
        }
        sub_100006AB0((uint64_t)v16, v43, &qword_1006B5E68);
        if (v80(v43, 1, v4) != 1) {
          break;
        }
LABEL_50:
        sub_100003F10(v43, &qword_1006B5E68);
        int64_t v46 = v18;
LABEL_46:
        *(void *)(*v1 + 16) = v46;
        uint64_t v44 = v85;
        sub_100006AB0((uint64_t)v16, v85, &qword_1006B5E68);
        if (v80(v44, 1, v4) == 1)
        {
          int64_t v82 = v91;
          int64_t v83 = v89;
          unint64_t v81 = v92;
          goto LABEL_81;
        }
      }
      unint64_t v77 = v47 + v84;
      uint64_t v50 = *v78;
      if (v18 <= v49) {
        int64_t v51 = v49;
      }
      else {
        int64_t v51 = v18;
      }
      int64_t v79 = v51;
      uint64_t v76 = v50;
      while (1)
      {
        uint64_t v55 = v45;
        uint64_t v56 = v43;
        uint64_t v57 = v43;
        uint64_t v58 = v45;
        uint64_t v59 = (uint64_t (*)(unint64_t, char *, uint64_t))v50;
        v50(v55, v56, v4);
        if (v18 == v79)
        {
          (*v71)(v58, v4);
          int64_t v46 = v79;
          int64_t v18 = v79;
          uint64_t v45 = v58;
          uint64_t v43 = v57;
          uint64_t v16 = v75;
          goto LABEL_46;
        }
        uint64_t v16 = v75;
        sub_100003F10((uint64_t)v75, &qword_1006B5E68);
        int64_t v60 = v18;
        uint64_t result = v59(v77 + v18 * v19, v58, v4);
        uint64_t v61 = v89;
        int64_t v62 = v91;
        int64_t v83 = v60;
        unint64_t v81 = v88;
        int64_t v82 = v90;
        if (v92) {
          break;
        }
        int64_t v65 = v91 + 1;
        if (__OFADD__(v91, 1))
        {
          __break(1u);
          return result;
        }
        int64_t v66 = (unint64_t)(v90 + 64) >> 6;
        int64_t v64 = v91;
        if (v65 < v66)
        {
          unint64_t v67 = *(void *)(v89 + 8 * v65);
          if (v67) {
            goto LABEL_65;
          }
          int64_t v68 = v91 + 2;
          int64_t v64 = v91 + 1;
          if (v91 + 2 < v66)
          {
            unint64_t v67 = *(void *)(v89 + 8 * v68);
            if (v67) {
              goto LABEL_68;
            }
            int64_t v64 = v91 + 2;
            if (v91 + 3 < v66)
            {
              unint64_t v67 = *(void *)(v89 + 8 * (v91 + 3));
              if (v67)
              {
                int64_t v65 = v91 + 3;
                goto LABEL_65;
              }
              int64_t v68 = v91 + 4;
              int64_t v64 = v91 + 3;
              if (v91 + 4 < v66)
              {
                unint64_t v67 = *(void *)(v89 + 8 * v68);
                if (v67)
                {
LABEL_68:
                  int64_t v65 = v68;
                  goto LABEL_65;
                }
                int64_t v65 = v91 + 5;
                int64_t v64 = v91 + 4;
                if (v91 + 5 < v66)
                {
                  unint64_t v67 = *(void *)(v89 + 8 * v65);
                  if (!v67)
                  {
                    int64_t v64 = v66 - 1;
                    int64_t v69 = v91 + 6;
                    do
                    {
                      if (v66 == v69)
                      {
                        uint64_t v16 = v75;
                        goto LABEL_56;
                      }
                      unint64_t v67 = *(void *)(v89 + 8 * v69++);
                    }
                    while (!v67);
                    int64_t v65 = v69 - 1;
                    uint64_t v16 = v75;
                  }
LABEL_65:
                  unint64_t v52 = (v67 - 1) & v67;
                  unint64_t v63 = __clz(__rbit64(v67)) + (v65 << 6);
                  int64_t v62 = v65;
LABEL_61:
                  unint64_t v53 = v81;
                  (*v72)(v16, *(void *)(v81 + 48) + v63 * v19, v4);
                  v74(v16, 0, 1, v4);
                  int64_t v64 = v62;
                  goto LABEL_57;
                }
              }
            }
          }
        }
LABEL_56:
        v74(v16, 1, 1, v4);
        unint64_t v52 = 0;
        unint64_t v53 = v81;
LABEL_57:
        unint64_t v88 = v53;
        int64_t v89 = v61;
        int64_t v18 = v83 + 1;
        int64_t v90 = v82;
        int64_t v91 = v64;
        unint64_t v92 = v52;
        uint64_t v43 = v87;
        sub_100006AB0((uint64_t)v16, v87, &qword_1006B5E68);
        int v54 = v80(v43, 1, v4);
        uint64_t v45 = v86;
        uint64_t v50 = v76;
        if (v54 == 1) {
          goto LABEL_50;
        }
      }
      unint64_t v52 = (v92 - 1) & v92;
      unint64_t v63 = __clz(__rbit64(v92)) | (v91 << 6);
      goto LABEL_61;
    }
LABEL_22:
    int64_t v36 = v25 + 1;
    if (__OFADD__(v25, 1))
    {
      __break(1u);
LABEL_41:
      uint64_t v17 = v11;
      int64_t v18 = v12;
      uint64_t v4 = v13;
      uint64_t v16 = v14;
    }
    else
    {
      int64_t v37 = (unint64_t)(v27 + 64) >> 6;
      int64_t v82 = v25;
      if (v36 < v37)
      {
        unint64_t v38 = *(void *)(v28 + 8 * v36);
        if (v38)
        {
LABEL_25:
          unint64_t v33 = (v38 - 1) & v38;
          unint64_t v34 = __clz(__rbit64(v38)) + (v36 << 6);
          int64_t v25 = v36;
          goto LABEL_20;
        }
        int64_t v39 = v25 + 2;
        int64_t v82 = v25 + 1;
        if (v25 + 2 < v37)
        {
          int64_t v14 = v16;
          uint64_t v13 = v4;
          int64_t v12 = v18;
          uint64_t v11 = v17;
          unint64_t v38 = *(void *)(v28 + 8 * v39);
          if (v38)
          {
LABEL_28:
            int64_t v36 = v39;
            goto LABEL_25;
          }
          int64_t v82 = v25 + 2;
          if (v25 + 3 < v37)
          {
            unint64_t v38 = *(void *)(v83 + 8 * (v25 + 3));
            if (v38)
            {
              int64_t v36 = v25 + 3;
              goto LABEL_25;
            }
            int64_t v39 = v25 + 4;
            int64_t v82 = v25 + 3;
            if (v25 + 4 < v37)
            {
              unint64_t v38 = *(void *)(v83 + 8 * v39);
              if (v38) {
                goto LABEL_28;
              }
              int64_t v36 = v25 + 5;
              int64_t v82 = v25 + 4;
              if (v25 + 5 < v37)
              {
                unint64_t v38 = *(void *)(v83 + 8 * v36);
                if (!v38)
                {
                  int64_t v82 = v37 - 1;
                  int64_t v40 = v25 + 6;
                  do
                  {
                    if (v37 == v40) {
                      goto LABEL_41;
                    }
                    unint64_t v38 = *(void *)(v83 + 8 * v40++);
                  }
                  while (!v38);
                  int64_t v36 = v40 - 1;
                }
                goto LABEL_25;
              }
            }
          }
        }
      }
    }
    uint64_t v74 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    v74(v16, 1, 1, v4);
    unint64_t v35 = 0;
    int64_t v25 = v82;
    goto LABEL_43;
  }

  return sub_1000814B8();
}

uint64_t sub_1004A2AD0(unint64_t a1)
{
  return sub_100006BD8(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1004AFA7C);
}

uint64_t sub_1004A2AE8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v8 = a4 >> 1;
  uint64_t v9 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_11;
  }
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  unint64_t v7 = *v4;
  if (*v4 >> 62) {
    goto LABEL_12;
  }
  uint64_t v10 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v11 = v10 + v9;
  if (!__OFADD__(v10, v9)) {
    goto LABEL_4;
  }
LABEL_14:
  __break(1u);
LABEL_15:
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  swift_bridgeObjectRelease();
  *uint64_t v4 = v7;
  uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
  if (v8 == v5)
  {
    while (v9 > 0)
    {
      __break(1u);
LABEL_11:
      __break(1u);
LABEL_12:
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v11 = v14 + v9;
      if (__OFADD__(v14, v9)) {
        goto LABEL_14;
      }
LABEL_4:
      unint64_t v7 = *v4;
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *uint64_t v4 = v7;
      if (!isUniquelyReferenced_nonNull_bridgeObject) {
        goto LABEL_15;
      }
      if ((v7 & 0x8000000000000000) != 0) {
        goto LABEL_15;
      }
      if ((v7 & 0x4000000000000000) != 0) {
        goto LABEL_15;
      }
      uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
      if (v11 > *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_15;
      }
      if (v8 != v5) {
        goto LABEL_18;
      }
    }
    goto LABEL_25;
  }
LABEL_18:
  uint64_t v15 = *(void *)(v13 + 16);
  if ((*(void *)(v13 + 24) >> 1) - v15 < v9)
  {
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v9 < 0) {
    goto LABEL_30;
  }
  unint64_t v16 = v13 + 8 * v15 + 32;
  unint64_t v17 = v6 + 8 * v5;
  if (v17 < v16 + 8 * v9 && v16 < v17 + 8 * v9) {
    goto LABEL_30;
  }
  sub_10005D034(&qword_1006BD9C0);
  swift_arrayInitWithCopy();
  if (v9)
  {
    uint64_t v18 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v19 = __OFADD__(v18, v9);
    uint64_t v20 = v18 + v9;
    if (!v19)
    {
      *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v20;
      goto LABEL_25;
    }
    goto LABEL_29;
  }
LABEL_25:
  swift_unknownObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_1004A2D7C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    uint64_t *v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_1004AF858(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1, (void (*)(void))type metadata accessor for FMFenceMapTransientRecord, (unint64_t *)&unk_1006C04C0, &qword_1006C04B8, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_10025807C);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

void *FMDeviceCapabilities.noActions.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.noActions;
}

void *FMDeviceCapabilities.canRange.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canRange;
}

uint64_t static FMDeviceCapabilities.canEnableLeashing.getter()
{
  return 0x4000;
}

uint64_t static FMDeviceCapabilities.supportNotifyWhenFound.getter()
{
  return 0x8000;
}

uint64_t static FMDeviceCapabilities.supportsNotifyWhenDetached.getter()
{
  return 0x10000;
}

uint64_t static FMDeviceCapabilities.supportsShowContactDetails.getter()
{
  return 0x20000;
}

void *FMDeviceCapabilities.supportsRemoveUIv2.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.supportsRemoveUIv2;
}

uint64_t static FMDeviceCapabilities.supportsRemoveUIv2.getter()
{
  return 0x40000;
}

uint64_t static FMDeviceCapabilities.canBTFind.getter()
{
  return 0x80000;
}

uint64_t static FMDeviceCapabilities.canRepair.getter()
{
  return 0x100000;
}

uint64_t static FMDeviceCapabilities.canRemoveOrRepair.getter()
{
  return 0x200000;
}

uint64_t FMSoundPlatterViewLayout.description.getter(char a1)
{
  uint64_t result = 0x79616C50746F6E2ELL;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 0x69646E65702ELL;
      goto LABEL_5;
    case 2:
      uint64_t result = 0x536465756575712ELL;
      break;
    case 3:
      uint64_t v3 = 0x6979616C702ELL;
LABEL_5:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x676E000000000000;
      break;
    case 4:
      uint64_t result = 0xD000000000000018;
      break;
    case 5:
      uint64_t result = 0xD000000000000018;
      break;
    case 6:
      uint64_t result = 0xD000000000000018;
      break;
    case 7:
    case 8:
    case 9:
    case 10:
      uint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1004A3138()
{
  return FMSoundPlatterViewLayout.description.getter(*v0);
}

void *FMDeviceState.normal.unsafeMutableAddressor()
{
  return &static FMDeviceState.normal;
}

void *FMDeviceState.canEnableLeashing.unsafeMutableAddressor()
{
  return &static FMDeviceState.canEnableLeashing;
}

unint64_t sub_1004A315C()
{
  unint64_t result = qword_1006C01C0;
  if (!qword_1006C01C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C01C0);
  }
  return result;
}

unint64_t sub_1004A31B4()
{
  unint64_t result = qword_1006C01C8;
  if (!qword_1006C01C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C01C8);
  }
  return result;
}

unint64_t sub_1004A320C()
{
  unint64_t result = qword_1006C01D0;
  if (!qword_1006C01D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C01D0);
  }
  return result;
}

unint64_t sub_1004A3264()
{
  unint64_t result = qword_1006C01D8;
  if (!qword_1006C01D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C01D8);
  }
  return result;
}

unint64_t sub_1004A32BC()
{
  unint64_t result = qword_1006C01E0;
  if (!qword_1006C01E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C01E0);
  }
  return result;
}

unint64_t sub_1004A3314()
{
  unint64_t result = qword_1006C01E8;
  if (!qword_1006C01E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C01E8);
  }
  return result;
}

unint64_t sub_1004A336C()
{
  unint64_t result = qword_1006C01F0;
  if (!qword_1006C01F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C01F0);
  }
  return result;
}

unint64_t sub_1004A33C4()
{
  unint64_t result = qword_1006C01F8;
  if (!qword_1006C01F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C01F8);
  }
  return result;
}

unint64_t sub_1004A341C()
{
  unint64_t result = qword_1006C0200;
  if (!qword_1006C0200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C0200);
  }
  return result;
}

ValueMetadata *type metadata accessor for FMDeviceCapabilities()
{
  return &type metadata for FMDeviceCapabilities;
}

unsigned char *storeEnumTagSinglePayload for FMSoundPlatterViewLayout(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004A354CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMSoundPlatterViewLayout()
{
  return &type metadata for FMSoundPlatterViewLayout;
}

ValueMetadata *type metadata accessor for FMDeviceState()
{
  return &type metadata for FMDeviceState;
}

void *sub_1004A3594(uint64_t a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v9 = a3[9];
    __dst = (void *)(a1 + v9);
    uint64_t v10 = (char *)a2 + v9;
    *(void *)(a1 + 48) = a2[6];
    uint64_t v11 = type metadata accessor for FMIPItem();
    uint64_t v61 = *(void *)(v11 - 8);
    unint64_t v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v63(v10, 1, v11))
    {
      uint64_t v12 = sub_10005D034((uint64_t *)&unk_1006AFE30);
      memcpy(__dst, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v61 + 16))(__dst, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v14 = a3[10];
    uint64_t v15 = a3[11];
    unint64_t v16 = (char *)v4 + v14;
    uint64_t v17 = (uint64_t)a2 + v14;
    *(void *)unint64_t v16 = *(void *)v17;
    v16[8] = *(unsigned char *)(v17 + 8);
    uint64_t v18 = (char *)v4 + v15;
    uint64_t v19 = (uint64_t)a2 + v15;
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = *(unsigned char *)(v19 + 8);
    uint64_t v20 = a3[13];
    *(void *)((char *)v4 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    *((unsigned char *)v4 + v20) = *((unsigned char *)a2 + v20);
    uint64_t v21 = a3[14];
    uint64_t v22 = a3[15];
    int64_t v23 = (void *)((char *)v4 + v21);
    uint64_t v24 = (uint64_t *)((char *)a2 + v21);
    uint64_t v64 = v24[1];
    void *v23 = *v24;
    v23[1] = v64;
    *((unsigned char *)v4 + v22) = *((unsigned char *)a2 + v22);
    uint64_t v25 = a3[16];
    uint64_t v26 = a3[17];
    int64_t v27 = (void *)((char *)v4 + v25);
    uint64_t v28 = (uint64_t *)((char *)a2 + v25);
    uint64_t v29 = v28[1];
    *int64_t v27 = *v28;
    v27[1] = v29;
    BOOL v30 = (void *)((char *)v4 + v26);
    uint64_t v31 = (uint64_t *)((char *)a2 + v26);
    uint64_t v32 = v31[1];
    *BOOL v30 = *v31;
    v30[1] = v32;
    uint64_t v33 = a3[18];
    uint64_t v34 = a3[19];
    unint64_t v35 = (void *)((char *)v4 + v33);
    int64_t v36 = (uint64_t *)((char *)a2 + v33);
    uint64_t v37 = v36[1];
    *unint64_t v35 = *v36;
    v35[1] = v37;
    int64_t v60 = (char *)v4 + v34;
    int64_t v62 = (char *)a2 + v34;
    uint64_t v38 = type metadata accessor for Date();
    __dsta = *(void **)(v38 - 8);
    int64_t v39 = (void (*)(char *, char *, uint64_t))__dsta[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int64_t v40 = v39;
    swift_bridgeObjectRetain();
    v39(v60, v62, v38);
    uint64_t v41 = a3[21];
    *(void *)((char *)v4 + a3[20]) = *(uint64_t *)((char *)a2 + a3[20]);
    int v42 = (char *)v4 + v41;
    uint64_t v43 = (uint64_t)a2 + v41;
    uint64_t v44 = type metadata accessor for FMIPBatteryStatus();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
    uint64_t v45 = a3[23];
    *(void *)((char *)v4 + a3[22]) = *(uint64_t *)((char *)a2 + a3[22]);
    *(void *)((char *)v4 + v45) = *(uint64_t *)((char *)a2 + v45);
    uint64_t v46 = a3[25];
    *((unsigned char *)v4 + a3[24]) = *((unsigned char *)a2 + a3[24]);
    *((unsigned char *)v4 + v46) = *((unsigned char *)a2 + v46);
    uint64_t v47 = a3[27];
    *((unsigned char *)v4 + a3[26]) = *((unsigned char *)a2 + a3[26]);
    *((unsigned char *)v4 + v47) = *((unsigned char *)a2 + v47);
    uint64_t v48 = a3[29];
    *((unsigned char *)v4 + a3[28]) = *((unsigned char *)a2 + a3[28]);
    *((unsigned char *)v4 + v48) = *((unsigned char *)a2 + v48);
    uint64_t v49 = a3[31];
    *((unsigned char *)v4 + a3[30]) = *((unsigned char *)a2 + a3[30]);
    *((unsigned char *)v4 + v49) = *((unsigned char *)a2 + v49);
    uint64_t v50 = a3[33];
    int64_t v51 = (char *)v4 + v50;
    *((unsigned char *)v4 + a3[32]) = *((unsigned char *)a2 + a3[32]);
    unint64_t v52 = (char *)a2 + v50;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))__dsta[6])((char *)a2 + v50, 1, v38))
    {
      uint64_t v53 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      v40(v51, v52, v38);
      ((void (*)(char *, void, uint64_t, uint64_t))__dsta[7])(v51, 0, 1, v38);
    }
    uint64_t v54 = a3[35];
    *((unsigned char *)v4 + a3[34]) = *((unsigned char *)a2 + a3[34]);
    *((unsigned char *)v4 + v54) = *((unsigned char *)a2 + v54);
    uint64_t v55 = a3[37];
    *((unsigned char *)v4 + a3[36]) = *((unsigned char *)a2 + a3[36]);
    *((unsigned char *)v4 + v55) = *((unsigned char *)a2 + v55);
    uint64_t v56 = a3[39];
    *(void *)((char *)v4 + a3[38]) = *(uint64_t *)((char *)a2 + a3[38]);
    *((unsigned char *)v4 + v56) = *((unsigned char *)a2 + v56);
    uint64_t v57 = a3[41];
    *((unsigned char *)v4 + a3[40]) = *((unsigned char *)a2 + a3[40]);
    *((unsigned char *)v4 + v57) = *((unsigned char *)a2 + v57);
    uint64_t v58 = a3[43];
    *((unsigned char *)v4 + a3[42]) = *((unsigned char *)a2 + a3[42]);
    *((unsigned char *)v4 + v58) = *((unsigned char *)a2 + v58);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1004A3A5C(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[9];
  uint64_t v5 = type metadata accessor for FMIPItem();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[19];
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  uint64_t v11 = a1 + a2[21];
  uint64_t v12 = type metadata accessor for FMIPBatteryStatus();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[33];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8)) {
    v10(v13, v8);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1004A3C70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v8 = a3[9];
  __dst = (void *)(a1 + v8);
  uint64_t v9 = (const void *)(a2 + v8);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v10 = type metadata accessor for FMIPItem();
  uint64_t v59 = *(void *)(v10 - 8);
  uint64_t v61 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v59 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v61(v9, 1, v10))
  {
    uint64_t v11 = sub_10005D034((uint64_t *)&unk_1006AFE30);
    memcpy(__dst, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v59 + 16))(__dst, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v59 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v12 = a3[10];
  uint64_t v13 = a3[11];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  uint64_t v16 = a1 + v13;
  uint64_t v17 = a2 + v13;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v18 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  uint64_t v19 = a3[14];
  uint64_t v20 = a3[15];
  uint64_t v21 = (void *)(a1 + v19);
  uint64_t v22 = (void *)(a2 + v19);
  uint64_t v62 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v62;
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  uint64_t v23 = a3[16];
  uint64_t v24 = a3[17];
  uint64_t v25 = (void *)(a1 + v23);
  uint64_t v26 = (void *)(a2 + v23);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = (void *)(a1 + v24);
  uint64_t v29 = (void *)(a2 + v24);
  uint64_t v30 = v29[1];
  void *v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = a3[18];
  uint64_t v32 = a3[19];
  uint64_t v33 = (void *)(a1 + v31);
  uint64_t v34 = (void *)(a2 + v31);
  uint64_t v35 = v34[1];
  void *v33 = *v34;
  v33[1] = v35;
  uint64_t v58 = (void *)(a1 + v32);
  int64_t v60 = (const void *)(a2 + v32);
  uint64_t v36 = type metadata accessor for Date();
  __dsta = *(void **)(v36 - 8);
  uint64_t v37 = (void (*)(void *, const void *, uint64_t))__dsta[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v38 = v37;
  swift_bridgeObjectRetain();
  v37(v58, v60, v36);
  uint64_t v39 = a3[21];
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = type metadata accessor for FMIPBatteryStatus();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[23];
  *(void *)(a1 + a3[22]) = *(void *)(a2 + a3[22]);
  *(void *)(a1 + v43) = *(void *)(a2 + v43);
  uint64_t v44 = a3[25];
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(unsigned char *)(a1 + v44) = *(unsigned char *)(a2 + v44);
  uint64_t v45 = a3[27];
  *(unsigned char *)(a1 + a3[26]) = *(unsigned char *)(a2 + a3[26]);
  *(unsigned char *)(a1 + v45) = *(unsigned char *)(a2 + v45);
  uint64_t v46 = a3[29];
  *(unsigned char *)(a1 + a3[28]) = *(unsigned char *)(a2 + a3[28]);
  *(unsigned char *)(a1 + v46) = *(unsigned char *)(a2 + v46);
  uint64_t v47 = a3[31];
  *(unsigned char *)(a1 + a3[30]) = *(unsigned char *)(a2 + a3[30]);
  *(unsigned char *)(a1 + v47) = *(unsigned char *)(a2 + v47);
  uint64_t v48 = a3[33];
  uint64_t v49 = (void *)(a1 + v48);
  *(unsigned char *)(a1 + a3[32]) = *(unsigned char *)(a2 + a3[32]);
  uint64_t v50 = (const void *)(a2 + v48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))__dsta[6])(a2 + v48, 1, v36))
  {
    uint64_t v51 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    v38(v49, v50, v36);
    ((void (*)(void *, void, uint64_t, uint64_t))__dsta[7])(v49, 0, 1, v36);
  }
  uint64_t v52 = a3[35];
  *(unsigned char *)(a1 + a3[34]) = *(unsigned char *)(a2 + a3[34]);
  *(unsigned char *)(a1 + v52) = *(unsigned char *)(a2 + v52);
  uint64_t v53 = a3[37];
  *(unsigned char *)(a1 + a3[36]) = *(unsigned char *)(a2 + a3[36]);
  *(unsigned char *)(a1 + v53) = *(unsigned char *)(a2 + v53);
  uint64_t v54 = a3[39];
  *(void *)(a1 + a3[38]) = *(void *)(a2 + a3[38]);
  *(unsigned char *)(a1 + v54) = *(unsigned char *)(a2 + v54);
  uint64_t v55 = a3[41];
  *(unsigned char *)(a1 + a3[40]) = *(unsigned char *)(a2 + a3[40]);
  *(unsigned char *)(a1 + v55) = *(unsigned char *)(a2 + v55);
  uint64_t v56 = a3[43];
  *(unsigned char *)(a1 + a3[42]) = *(unsigned char *)(a2 + a3[42]);
  *(unsigned char *)(a1 + v56) = *(unsigned char *)(a2 + v56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1004A40E8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for FMIPItem();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10005D034((uint64_t *)&unk_1006AFE30);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[10];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v18 = *v17;
  *(unsigned char *)(v16 + 8) = *((unsigned char *)v17 + 8);
  *(void *)uint64_t v16 = v18;
  uint64_t v19 = a3[11];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v22 = *v21;
  *(unsigned char *)(v20 + 8) = *((unsigned char *)v21 + 8);
  *(void *)uint64_t v20 = v22;
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v23 = a3[14];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  uint64_t v26 = a3[16];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[17];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  *uint64_t v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[18];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (void *)(a2 + v32);
  void *v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[19];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = type metadata accessor for Date();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 24);
  v52(v36, v37, v38);
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  uint64_t v40 = a3[21];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  uint64_t v43 = type metadata accessor for FMIPBatteryStatus();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 24))(v41, v42, v43);
  *(void *)(a1 + a3[22]) = *(void *)(a2 + a3[22]);
  *(void *)(a1 + a3[23]) = *(void *)(a2 + a3[23]);
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  *(unsigned char *)(a1 + a3[26]) = *(unsigned char *)(a2 + a3[26]);
  *(unsigned char *)(a1 + a3[27]) = *(unsigned char *)(a2 + a3[27]);
  *(unsigned char *)(a1 + a3[28]) = *(unsigned char *)(a2 + a3[28]);
  *(unsigned char *)(a1 + a3[29]) = *(unsigned char *)(a2 + a3[29]);
  *(unsigned char *)(a1 + a3[30]) = *(unsigned char *)(a2 + a3[30]);
  *(unsigned char *)(a1 + a3[31]) = *(unsigned char *)(a2 + a3[31]);
  *(unsigned char *)(a1 + a3[32]) = *(unsigned char *)(a2 + a3[32]);
  uint64_t v44 = a3[33];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (const void *)(a2 + v44);
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
  int v48 = v47(a1 + v44, 1, v38);
  int v49 = v47((uint64_t)v46, 1, v38);
  if (!v48)
  {
    if (!v49)
    {
      v52((uint64_t)v45, (uint64_t)v46, v38);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v39 + 8))(v45, v38);
    goto LABEL_12;
  }
  if (v49)
  {
LABEL_12:
    uint64_t v50 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
    memcpy(v45, v46, *(void *)(*(void *)(v50 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v39 + 16))(v45, v46, v38);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v45, 0, 1, v38);
LABEL_13:
  *(unsigned char *)(a1 + a3[34]) = *(unsigned char *)(a2 + a3[34]);
  *(unsigned char *)(a1 + a3[35]) = *(unsigned char *)(a2 + a3[35]);
  *(unsigned char *)(a1 + a3[36]) = *(unsigned char *)(a2 + a3[36]);
  *(unsigned char *)(a1 + a3[37]) = *(unsigned char *)(a2 + a3[37]);
  *(void *)(a1 + a3[38]) = *(void *)(a2 + a3[38]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[39]) = *(unsigned char *)(a2 + a3[39]);
  *(unsigned char *)(a1 + a3[40]) = *(unsigned char *)(a2 + a3[40]);
  *(unsigned char *)(a1 + a3[41]) = *(unsigned char *)(a2 + a3[41]);
  *(unsigned char *)(a1 + a3[42]) = *(unsigned char *)(a2 + a3[42]);
  *(unsigned char *)(a1 + a3[43]) = *(unsigned char *)(a2 + a3[43]);
  return a1;
}

uint64_t sub_1004A46D0(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = a3[9];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for FMIPItem();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10005D034((uint64_t *)&unk_1006AFE30);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[10];
  uint64_t v14 = a3[11];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  uint64_t v19 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  uint64_t v20 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  uint64_t v21 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  uint64_t v22 = a3[19];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (const void *)(a2 + v22);
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  uint64_t v25 = type metadata accessor for Date();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void (**)(void *, const void *, uint64_t))(v26 + 32);
  v27(v23, v24, v25);
  uint64_t v28 = a3[21];
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = type metadata accessor for FMIPBatteryStatus();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
  uint64_t v32 = a3[23];
  *(void *)(a1 + a3[22]) = *(void *)(a2 + a3[22]);
  *(void *)(a1 + v32) = *(void *)(a2 + v32);
  uint64_t v33 = a3[25];
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(unsigned char *)(a1 + v33) = *(unsigned char *)(a2 + v33);
  uint64_t v34 = a3[27];
  *(unsigned char *)(a1 + a3[26]) = *(unsigned char *)(a2 + a3[26]);
  *(unsigned char *)(a1 + v34) = *(unsigned char *)(a2 + v34);
  uint64_t v35 = a3[29];
  *(unsigned char *)(a1 + a3[28]) = *(unsigned char *)(a2 + a3[28]);
  *(unsigned char *)(a1 + v35) = *(unsigned char *)(a2 + v35);
  uint64_t v36 = a3[31];
  *(unsigned char *)(a1 + a3[30]) = *(unsigned char *)(a2 + a3[30]);
  *(unsigned char *)(a1 + v36) = *(unsigned char *)(a2 + v36);
  uint64_t v37 = a3[33];
  uint64_t v38 = (void *)(a1 + v37);
  *(unsigned char *)(a1 + a3[32]) = *(unsigned char *)(a2 + a3[32]);
  uint64_t v39 = (const void *)(a2 + v37);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(a2 + v37, 1, v25))
  {
    uint64_t v40 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    v27(v38, v39, v25);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v38, 0, 1, v25);
  }
  uint64_t v41 = a3[35];
  *(unsigned char *)(a1 + a3[34]) = *(unsigned char *)(a2 + a3[34]);
  *(unsigned char *)(a1 + v41) = *(unsigned char *)(a2 + v41);
  uint64_t v42 = a3[37];
  *(unsigned char *)(a1 + a3[36]) = *(unsigned char *)(a2 + a3[36]);
  *(unsigned char *)(a1 + v42) = *(unsigned char *)(a2 + v42);
  uint64_t v43 = a3[39];
  *(void *)(a1 + a3[38]) = *(void *)(a2 + a3[38]);
  *(unsigned char *)(a1 + v43) = *(unsigned char *)(a2 + v43);
  uint64_t v44 = a3[41];
  *(unsigned char *)(a1 + a3[40]) = *(unsigned char *)(a2 + a3[40]);
  *(unsigned char *)(a1 + v44) = *(unsigned char *)(a2 + v44);
  uint64_t v45 = a3[43];
  *(unsigned char *)(a1 + a3[42]) = *(unsigned char *)(a2 + a3[42]);
  *(unsigned char *)(a1 + v45) = *(unsigned char *)(a2 + v45);
  return a1;
}

uint64_t sub_1004A4AA8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[9];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for FMIPItem();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = sub_10005D034((uint64_t *)&unk_1006AFE30);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = a3[10];
  uint64_t v18 = a3[11];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  uint64_t v21 = a1 + v18;
  uint64_t v22 = a2 + v18;
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *uint64_t v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (uint64_t *)(a2 + v28);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  void *v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[17];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (uint64_t *)(a2 + v33);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  void *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[18];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (uint64_t *)(a2 + v38);
  uint64_t v42 = *v40;
  uint64_t v41 = v40[1];
  void *v39 = v42;
  v39[1] = v41;
  swift_bridgeObjectRelease();
  uint64_t v43 = a3[19];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = type metadata accessor for Date();
  uint64_t v47 = *(void *)(v46 - 8);
  int64_t v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 40);
  v69(v44, v45, v46);
  uint64_t v48 = a3[21];
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  uint64_t v51 = type metadata accessor for FMIPBatteryStatus();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 40))(v49, v50, v51);
  uint64_t v52 = a3[23];
  *(void *)(a1 + a3[22]) = *(void *)(a2 + a3[22]);
  *(void *)(a1 + v52) = *(void *)(a2 + v52);
  uint64_t v53 = a3[25];
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(unsigned char *)(a1 + v53) = *(unsigned char *)(a2 + v53);
  uint64_t v54 = a3[27];
  *(unsigned char *)(a1 + a3[26]) = *(unsigned char *)(a2 + a3[26]);
  *(unsigned char *)(a1 + v54) = *(unsigned char *)(a2 + v54);
  uint64_t v55 = a3[29];
  *(unsigned char *)(a1 + a3[28]) = *(unsigned char *)(a2 + a3[28]);
  *(unsigned char *)(a1 + v55) = *(unsigned char *)(a2 + v55);
  uint64_t v56 = a3[31];
  *(unsigned char *)(a1 + a3[30]) = *(unsigned char *)(a2 + a3[30]);
  *(unsigned char *)(a1 + v56) = *(unsigned char *)(a2 + v56);
  uint64_t v57 = a3[33];
  uint64_t v58 = (void *)(a1 + v57);
  *(unsigned char *)(a1 + a3[32]) = *(unsigned char *)(a2 + a3[32]);
  uint64_t v59 = (const void *)(a2 + v57);
  int64_t v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
  int v61 = v60(a1 + v57, 1, v46);
  int v62 = v60((uint64_t)v59, 1, v46);
  if (!v61)
  {
    if (!v62)
    {
      v69((uint64_t)v58, (uint64_t)v59, v46);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v47 + 8))(v58, v46);
    goto LABEL_12;
  }
  if (v62)
  {
LABEL_12:
    uint64_t v63 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
    memcpy(v58, v59, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v47 + 32))(v58, v59, v46);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v58, 0, 1, v46);
LABEL_13:
  uint64_t v64 = a3[35];
  *(unsigned char *)(a1 + a3[34]) = *(unsigned char *)(a2 + a3[34]);
  *(unsigned char *)(a1 + v64) = *(unsigned char *)(a2 + v64);
  uint64_t v65 = a3[37];
  *(unsigned char *)(a1 + a3[36]) = *(unsigned char *)(a2 + a3[36]);
  *(unsigned char *)(a1 + v65) = *(unsigned char *)(a2 + v65);
  *(void *)(a1 + a3[38]) = *(void *)(a2 + a3[38]);
  swift_bridgeObjectRelease();
  uint64_t v66 = a3[40];
  *(unsigned char *)(a1 + a3[39]) = *(unsigned char *)(a2 + a3[39]);
  *(unsigned char *)(a1 + v66) = *(unsigned char *)(a2 + v66);
  uint64_t v67 = a3[42];
  *(unsigned char *)(a1 + a3[41]) = *(unsigned char *)(a2 + a3[41]);
  *(unsigned char *)(a1 + v67) = *(unsigned char *)(a2 + v67);
  *(unsigned char *)(a1 + a3[43]) = *(unsigned char *)(a2 + a3[43]);
  return a1;
}

uint64_t sub_1004A4FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004A4FEC);
}

uint64_t sub_1004A4FEC(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[9];
LABEL_11:
    int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v14(a1 + v11, a2, v9);
  }
  uint64_t v12 = type metadata accessor for Date();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[19];
    goto LABEL_11;
  }
  uint64_t v13 = type metadata accessor for FMIPBatteryStatus();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[21];
    goto LABEL_11;
  }
  uint64_t v15 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[33];

  return v16(v18, a2, v17);
}

uint64_t sub_1004A51B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004A51CC);
}

uint64_t sub_1004A51CC(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[9];
LABEL_9:
    int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = type metadata accessor for Date();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[19];
    goto LABEL_9;
  }
  uint64_t v13 = type metadata accessor for FMIPBatteryStatus();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[21];
    goto LABEL_9;
  }
  uint64_t v15 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = v5 + a4[33];

  return v16(v18, a2, a2, v17);
}

uint64_t type metadata accessor for FMDeviceDetailViewModel()
{
  uint64_t result = qword_1006C0260;
  if (!qword_1006C0260) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1004A53E4()
{
  sub_1004A55F8(319, (unint64_t *)&qword_1006B97C0, (void (*)(uint64_t))&type metadata accessor for FMIPItem);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Date();
    if (v1 <= 0x3F)
    {
      type metadata accessor for FMIPBatteryStatus();
      if (v2 <= 0x3F)
      {
        sub_1004A55F8(319, (unint64_t *)&qword_1006B35F0, (void (*)(uint64_t))&type metadata accessor for Date);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_1004A55F8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1004A564C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void *a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, double a6@<X6>, void *a7@<X8>)
{
  double v762 = a6;
  uint64_t v779 = a5;
  uint64_t v849 = a4;
  v882 = a3;
  uint64_t v813 = type metadata accessor for FMIPFeatures();
  uint64_t v812 = *(void *)(v813 - 8);
  uint64_t v10 = __chkstk_darwin(v813);
  v811 = (char *)&v755 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v810 = (char *)&v755 - v12;
  uint64_t v824 = type metadata accessor for FMIPConfigValue();
  uint64_t v823 = *(void *)(v824 - 8);
  __chkstk_darwin(v824);
  v822 = (char *)&v755 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10005D034(&qword_1006B04D8);
  __chkstk_darwin(v14 - 8);
  int v776 = (char *)&v755 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10005D034((uint64_t *)&unk_1006C0370);
  __chkstk_darwin(v16 - 8);
  uint64_t v806 = (char *)&v755 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10005D034(&qword_1006BAA88);
  __chkstk_darwin(v18 - 8);
  v844 = (char *)&v755 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v853 = type metadata accessor for FMIPRangingParameters();
  uint64_t v854 = *(void *)(v853 - 8);
  __chkstk_darwin(v853);
  v805 = (char *)&v755 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v883 = type metadata accessor for Date();
  uint64_t v880 = *(void *)(v883 - 8);
  uint64_t v21 = __chkstk_darwin(v883);
  uint64_t v835 = (char *)&v755 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v759 = (char *)&v755 - v24;
  __chkstk_darwin(v23);
  v763 = (char *)&v755 - v25;
  uint64_t v26 = sub_10005D034((uint64_t *)&unk_1006BB9C0);
  __chkstk_darwin(v26 - 8);
  uint64_t v871 = (uint64_t)&v755 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v863 = (void *)type metadata accessor for FMIPDeviceStatus();
  uint64_t v851 = *(v863 - 1);
  uint64_t v28 = __chkstk_darwin(v863);
  v862 = (char *)&v755 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v861 = (char *)&v755 - v30;
  uint64_t v884 = type metadata accessor for FMIPItemGroup();
  uint64_t v868 = *(void *)(v884 - 8);
  __chkstk_darwin(v884);
  v832 = (char *)&v755 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10005D034((uint64_t *)&unk_1006C0B20);
  uint64_t v33 = __chkstk_darwin(v32 - 8);
  uint64_t v804 = (char *)&v755 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v33);
  v848 = (char *)&v755 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  v847 = (char *)&v755 - v38;
  __chkstk_darwin(v37);
  os_log_t v825 = (char *)&v755 - v39;
  uint64_t v40 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
  uint64_t v41 = __chkstk_darwin(v40 - 8);
  uint64_t v850 = (uint64_t)&v755 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v852 = (uint64_t)&v755 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  v846 = (char *)&v755 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v842 = (uint64_t)&v755 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v761 = (uint64_t)&v755 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v775 = (uint64_t)&v755 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v787 = (uint64_t)&v755 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v788 = (uint64_t)&v755 - v56;
  __chkstk_darwin(v55);
  uint64_t v874 = (uint64_t)&v755 - v57;
  uint64_t v829 = type metadata accessor for FMIPBatteryStatus();
  uint64_t v840 = *(void *)(v829 - 8);
  uint64_t v58 = __chkstk_darwin(v829);
  uint64_t v839 = (char *)&v755 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v58);
  v838 = (char *)&v755 - v60;
  uint64_t v860 = type metadata accessor for FMIPDeviceConnectedStateType();
  uint64_t v878 = *(void *)(v860 - 8);
  uint64_t v61 = __chkstk_darwin(v860);
  v857 = (char *)&v755 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v61);
  v858 = (char *)&v755 - v63;
  uint64_t v64 = sub_10005D034(&qword_1006B2AF0);
  uint64_t v65 = __chkstk_darwin(v64 - 8);
  uint64_t v798 = (uint64_t)&v755 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __chkstk_darwin(v65);
  v828 = (char *)&v755 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  os_log_t v827 = (char *)&v755 - v70;
  uint64_t v71 = __chkstk_darwin(v69);
  uint64_t v875 = (uint64_t)&v755 - v72;
  __chkstk_darwin(v71);
  uint64_t v870 = (uint64_t)&v755 - v73;
  uint64_t v74 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  uint64_t v75 = __chkstk_darwin(v74 - 8);
  uint64_t v845 = (uint64_t)&v755 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __chkstk_darwin(v75);
  BOOL v767 = (char *)&v755 - v78;
  uint64_t v79 = __chkstk_darwin(v77);
  v760 = (char *)&v755 - v80;
  uint64_t v81 = __chkstk_darwin(v79);
  uint64_t v766 = (char *)&v755 - v82;
  uint64_t v83 = __chkstk_darwin(v81);
  int v774 = (char *)&v755 - v84;
  uint64_t v85 = __chkstk_darwin(v83);
  v830 = (char *)&v755 - v86;
  uint64_t v87 = __chkstk_darwin(v85);
  uint64_t v888 = (uint64_t)&v755 - v88;
  uint64_t v89 = __chkstk_darwin(v87);
  uint64_t v799 = (char *)&v755 - v90;
  uint64_t v91 = __chkstk_darwin(v89);
  uint64_t v783 = (char *)&v755 - v92;
  uint64_t v93 = __chkstk_darwin(v91);
  uint64_t v782 = (char *)&v755 - v94;
  __chkstk_darwin(v93);
  v784 = (char *)&v755 - v95;
  uint64_t v866 = type metadata accessor for FMIPDeviceState();
  uint64_t v881 = *(void *)(v866 - 8);
  uint64_t v96 = __chkstk_darwin(v866);
  v865 = (char *)&v755 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v96);
  v864 = (char *)&v755 - v98;
  uint64_t v817 = type metadata accessor for FMIPItemState();
  uint64_t v816 = *(void *)(v817 - 8);
  uint64_t v99 = __chkstk_darwin(v817);
  uint64_t v815 = (char *)&v755 - ((v100 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v99);
  v814 = (char *)&v755 - v101;
  v905 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FMIPPlaySoundChannels();
  v895 = (void *)*((void *)v905 - 1);
  uint64_t v102 = __chkstk_darwin(v905);
  uint64_t v897 = (uint64_t)&v755 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = __chkstk_darwin(v102);
  v855 = (char *)&v755 - v105;
  __chkstk_darwin(v104);
  v879 = (char *)&v755 - v106;
  v910 = (void *)type metadata accessor for FMIPPartType();
  uint64_t v791 = *(v910 - 1);
  uint64_t v107 = __chkstk_darwin(v910);
  v790 = (char *)&v755 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = __chkstk_darwin(v107);
  uint64_t v758 = (char *)&v755 - v110;
  uint64_t v111 = __chkstk_darwin(v109);
  uint64_t v789 = (char *)&v755 - v112;
  uint64_t v113 = __chkstk_darwin(v111);
  uint64_t v757 = (char *)&v755 - v114;
  __chkstk_darwin(v113);
  unint64_t v909 = (unint64_t)&v755 - v115;
  uint64_t v913 = type metadata accessor for FMIPItem();
  uint64_t v891 = *(void *)(v913 - 8);
  uint64_t v116 = __chkstk_darwin(v913);
  uint64_t v834 = (uint64_t)&v755 - ((v117 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = __chkstk_darwin(v116);
  uint64_t v793 = (char *)&v755 - v119;
  uint64_t v120 = __chkstk_darwin(v118);
  v792 = (char *)&v755 - v121;
  uint64_t v122 = __chkstk_darwin(v120);
  v904 = (char *)&v755 - v123;
  __chkstk_darwin(v122);
  uint64_t v125 = (char *)&v755 - v124;
  v887 = (void (*)(char *, uint64_t))type metadata accessor for FMIPProductType();
  uint64_t v886 = *((void *)v887 - 1);
  __chkstk_darwin(v887);
  v873 = (char *)&v755 - ((v126 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_10005D034(&qword_1006B36B0);
  uint64_t v128 = __chkstk_darwin(v127 - 8);
  uint64_t v821 = (char *)&v755 - ((v129 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = __chkstk_darwin(v128);
  uint64_t v802 = (char *)&v755 - v131;
  uint64_t v132 = __chkstk_darwin(v130);
  int v769 = (char *)&v755 - v133;
  uint64_t v134 = __chkstk_darwin(v132);
  v768 = (char *)&v755 - v135;
  uint64_t v136 = __chkstk_darwin(v134);
  v841 = (char *)&v755 - v137;
  uint64_t v138 = __chkstk_darwin(v136);
  uint64_t v808 = (char *)&v755 - v139;
  __chkstk_darwin(v138);
  *(void *)&long long v908 = (char *)&v755 - v140;
  uint64_t v141 = sub_10005D034(&qword_1006B3700);
  uint64_t v142 = __chkstk_darwin(v141 - 8);
  v894 = (uint64_t *)((char *)&v755 - ((v143 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v142);
  uint64_t v859 = (uint64_t)&v755 - v144;
  uint64_t v903 = type metadata accessor for FMIPDevice();
  uint64_t v885 = *(void *)(v903 - 8);
  uint64_t v145 = __chkstk_darwin(v903);
  v809 = (char *)&v755 - ((v146 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = __chkstk_darwin(v145);
  uint64_t v794 = (char *)&v755 - v148;
  uint64_t v149 = __chkstk_darwin(v147);
  uint64_t v836 = (char *)&v755 - v150;
  uint64_t v151 = __chkstk_darwin(v149);
  v820 = (char *)&v755 - v152;
  uint64_t v153 = __chkstk_darwin(v151);
  v843 = (char *)&v755 - v154;
  uint64_t v155 = __chkstk_darwin(v153);
  v801 = (char *)&v755 - v156;
  uint64_t v157 = __chkstk_darwin(v155);
  v856 = (char *)&v755 - v158;
  uint64_t v159 = __chkstk_darwin(v157);
  uint64_t v831 = (char *)&v755 - v160;
  uint64_t v161 = __chkstk_darwin(v159);
  v837 = (char *)&v755 - v162;
  __chkstk_darwin(v161);
  v906 = (char *)&v755 - v163;
  uint64_t v164 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  uint64_t v165 = __chkstk_darwin(v164 - 8);
  uint64_t v780 = (uint64_t)&v755 - ((v166 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = __chkstk_darwin(v165);
  uint64_t v807 = (uint64_t)&v755 - v168;
  uint64_t v169 = __chkstk_darwin(v167);
  uint64_t v803 = (uint64_t)&v755 - v170;
  uint64_t v171 = __chkstk_darwin(v169);
  uint64_t v867 = (uint64_t)&v755 - v172;
  uint64_t v173 = __chkstk_darwin(v171);
  v833 = (char *)&v755 - v174;
  uint64_t v175 = __chkstk_darwin(v173);
  v765 = (char *)&v755 - v176;
  uint64_t v177 = __chkstk_darwin(v175);
  uint64_t v773 = (uint64_t)&v755 - v178;
  uint64_t v179 = __chkstk_darwin(v177);
  uint64_t v772 = (uint64_t)&v755 - v180;
  uint64_t v181 = __chkstk_darwin(v179);
  uint64_t v770 = (uint64_t)&v755 - v182;
  uint64_t v183 = __chkstk_darwin(v181);
  uint64_t v786 = (uint64_t)&v755 - v184;
  uint64_t v185 = __chkstk_darwin(v183);
  uint64_t v785 = (uint64_t)&v755 - v186;
  uint64_t v187 = __chkstk_darwin(v185);
  uint64_t v800 = (uint64_t)&v755 - v188;
  uint64_t v189 = __chkstk_darwin(v187);
  uint64_t v797 = (uint64_t)&v755 - v190;
  uint64_t v191 = __chkstk_darwin(v189);
  uint64_t v796 = (uint64_t)&v755 - v192;
  uint64_t v193 = __chkstk_darwin(v191);
  uint64_t v781 = (uint64_t)&v755 - v194;
  uint64_t v195 = __chkstk_darwin(v193);
  uint64_t v795 = (uint64_t)&v755 - v196;
  uint64_t v197 = __chkstk_darwin(v195);
  uint64_t v199 = (char *)&v755 - v198;
  __chkstk_darwin(v197);
  uint64_t v201 = (char *)&v755 - v200;
  uint64_t v202 = sub_10005D034((uint64_t *)&unk_1006C0380);
  uint64_t v203 = v202 - 8;
  uint64_t v204 = __chkstk_darwin(v202);
  os_log_t v206 = (char *)&v755 - ((v205 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v204);
  uint64_t v208 = (char *)&v755 - v207;
  uint64_t v209 = (int *)type metadata accessor for FMDeviceDetailViewModel();
  uint64_t v907 = v209[13];
  *((unsigned char *)a7 + v907) = 0;
  uint64_t v771 = v209[26];
  *((unsigned char *)a7 + v771) = 0;
  v911 = v209;
  uint64_t v210 = v209[27];
  v902 = a7;
  uint64_t v764 = v210;
  *((unsigned char *)a7 + v210) = 0;
  uint64_t v211 = *(int *)(v203 + 56);
  uint64_t v892 = a1;
  uint64_t v212 = sub_1004AC2E8((uint64_t)v208, a2, a1);
  *(void *)&v208[v211] = v212;
  sub_100006AB0((uint64_t)v208, (uint64_t)v206, (uint64_t *)&unk_1006AFE30);
  sub_100067E48((uint64_t)v206, (uint64_t)v201, (uint64_t *)&unk_1006AFE30);
  uint64_t v213 = *(int *)(v203 + 56);
  uint64_t v214 = v891;
  v818 = v208;
  sub_100006AB0((uint64_t)v208, (uint64_t)v206, (uint64_t *)&unk_1006AFE30);
  *(void *)&v206[v213] = v212;
  v869 = (void *)v212;
  swift_bridgeObjectRetain();
  uint64_t v215 = v913;
  sub_100003F10((uint64_t)v206, (uint64_t *)&unk_1006AFE30);
  uint64_t v216 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v214 + 48);
  v898 = v201;
  uint64_t v890 = v214 + 48;
  v889 = v216;
  LODWORD(v206) = v216(v201, 1, v215);
  uint64_t v217 = *(void (**)(void))(v885 + 16);
  uint64_t v218 = v906;
  v912 = a2;
  uint64_t v893 = v885 + 16;
  v896 = v217;
  v217();
  int v899 = 0;
  if (v206 != 1) {
    int v899 = FMIPDevice.pairingIncomplete.getter() ^ 1;
  }
  v901 = *(void (**)(char *, uint64_t))(v885 + 8);
  uint64_t v900 = v885 + 8;
  v901(v218, v903);
  uint64_t v219 = v908;
  FMIPDevice.itemGroup.getter();
  uint64_t v220 = v868;
  uint64_t v221 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v868 + 48);
  uint64_t v222 = v884;
  uint64_t v877 = v868 + 48;
  v876 = v221;
  if (v221((char *)v219, 1, v884) == 1)
  {
    sub_100003F10(v219, &qword_1006B36B0);
    os_log_t v223 = v902;
    uint64_t v224 = v859;
LABEL_10:
    uint64_t v918 = 0;
    long long v916 = 0u;
    long long v917 = 0u;
    uint64_t v227 = v869;
LABEL_11:
    sub_100003F10((uint64_t)&v916, &qword_1006B20E0);
    uint64_t v228 = type metadata accessor for FMIPHawkeyeProductInformation();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v228 - 8) + 56))(v224, 1, 1, v228);
    goto LABEL_12;
  }
  uint64_t v225 = FMIPItemGroup.items.getter();
  (*(void (**)(uint64_t, uint64_t))(v220 + 8))(v219, v222);
  if (*(void *)(v225 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v214 + 16))(v199, v225 + ((*(unsigned __int8 *)(v214 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v214 + 80)), v215);
    uint64_t v226 = 0;
  }
  else
  {
    uint64_t v226 = 1;
  }
  os_log_t v223 = v902;
  uint64_t v224 = v859;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v214 + 56))(v199, v226, 1, v215);
  swift_bridgeObjectRelease();
  if (v889(v199, 1, v215) == 1)
  {
    sub_100003F10((uint64_t)v199, (uint64_t *)&unk_1006AFE30);
    goto LABEL_10;
  }
  unint64_t v258 = v873;
  FMIPItem.productType.getter();
  (*(void (**)(char *, uint64_t))(v214 + 8))(v199, v215);
  FMIPProductType.productInformation.getter();
  (*(void (**)(char *, void *))(v886 + 8))(v258, v887);
  uint64_t v227 = v869;
  if (!*((void *)&v917 + 1)) {
    goto LABEL_11;
  }
  sub_10005D034((uint64_t *)&unk_1006C03B0);
  uint64_t v228 = type metadata accessor for FMIPHawkeyeProductInformation();
  int v259 = swift_dynamicCast();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v228 - 8) + 56))(v224, v259 ^ 1u, 1, v228);
LABEL_12:
  os_log_t v229 = (void (*)(void, void, void, void))v894;
  sub_100006AB0(v224, (uint64_t)v894, &qword_1006B3700);
  type metadata accessor for FMIPHawkeyeProductInformation();
  uint64_t v230 = *(void *)(v228 - 8);
  if ((*(unsigned int (**)(void (*)(void, void, void, void), uint64_t, uint64_t))(v230 + 48))(v229, 1, v228) == 1)
  {
    sub_100003F10((uint64_t)v229, &qword_1006B3700);
    char v231 = 0;
  }
  else
  {
    char v231 = FMIPHawkeyeProductInformation.requiresAdditionalConnectionTime.getter();
    (*(void (**)(void (*)(void, void, void, void), uint64_t))(v230 + 8))(v229, v228);
  }
  uint64_t v232 = v903;
  *((unsigned char *)v223 + v907) = v231 & 1;
  if (v227)
  {
    uint64_t v233 = v227[2];
    if (v233)
    {
      uint64_t v234 = *(void *)(v891 + 16);
      uint64_t v235 = (uint64_t)v227
           + ((*(unsigned __int8 *)(v891 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v891 + 80));
      uint64_t v907 = *(void *)(v891 + 72);
      *(void *)&long long v908 = v234;
      uint64_t v236 = (uint64_t (**)(unint64_t, void *))(v791 + 88);
      LODWORD(v906) = enum case for FMIPPartType.standalone(_:);
      LODWORD(v894) = enum case for FMIPPartType.case(_:);
      LODWORD(v873) = enum case for FMIPPartType.leftBud(_:);
      int v826 = enum case for FMIPPartType.rightBud(_:);
      int v778 = enum case for FMIPPartType.generic(_:);
      uint64_t v237 = (void (**)(char *, uint64_t))(v891 + 8);
      uint64_t v756 = (void (**)(const char *, void *))(v791 + 8);
      unsigned int v777 = enum case for FMIPPlaySoundChannels.right(_:);
      v887 = (void (*)(char *, uint64_t))(v895 + 13);
      uint64_t v886 = (uint64_t)(v895 + 4);
      LODWORD(v819) = enum case for FMIPPlaySoundChannels.left(_:);
      LODWORD(v872) = enum case for FMIPPlaySoundChannels.case(_:);
      swift_bridgeObjectRetain();
      uint64_t v238 = _swiftEmptyArrayStorage;
      unint64_t v239 = v909;
      while (1)
      {
        ((void (*)(char *, uint64_t, uint64_t))v908)(v125, v235, v215);
        FMIPItem.partType.getter();
        int v240 = (*v236)(v239, v910);
        if (v240 == v906)
        {
          (*v237)(v125, v215);
        }
        else
        {
          int v241 = v240;
          if (v240 == v894)
          {
            (*(void (**)(uint64_t, void, unsigned int (*)(uint64_t, uint64_t, uint64_t)))v887)(v897, v872, v905);
            if (swift_isUniquelyReferenced_nonNull_native()) {
              unint64_t v242 = (unint64_t)v238;
            }
            else {
              unint64_t v242 = sub_10007D39C(0, v238[2] + 1, 1, (unint64_t)v238);
            }
            unint64_t v244 = *(void *)(v242 + 16);
            unint64_t v243 = *(void *)(v242 + 24);
            if (v244 >= v243 >> 1) {
              unint64_t v242 = sub_10007D39C(v243 > 1, v244 + 1, 1, v242);
            }
            *(void *)(v242 + 16) = v244 + 1;
            uint64_t v238 = (void *)v242;
            ((void (*)(unint64_t, uint64_t, unsigned int (*)(uint64_t, uint64_t, uint64_t)))v895[4])(v242+ ((*((unsigned __int8 *)v895 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v895 + 80))+ v895[9] * v244, v897, v905);
          }
          else if (v240 == v873)
          {
            (*(void (**)(char *, void, unsigned int (*)(uint64_t, uint64_t, uint64_t)))v887)(v879, v819, v905);
            if (swift_isUniquelyReferenced_nonNull_native()) {
              unint64_t v245 = (unint64_t)v238;
            }
            else {
              unint64_t v245 = sub_10007D39C(0, v238[2] + 1, 1, (unint64_t)v238);
            }
            unint64_t v247 = *(void *)(v245 + 16);
            unint64_t v246 = *(void *)(v245 + 24);
            if (v247 >= v246 >> 1) {
              unint64_t v245 = sub_10007D39C(v246 > 1, v247 + 1, 1, v245);
            }
            *(void *)(v245 + 16) = v247 + 1;
            uint64_t v238 = (void *)v245;
            ((void (*)(unint64_t, char *, unsigned int (*)(uint64_t, uint64_t, uint64_t)))v895[4])(v245+ ((*((unsigned __int8 *)v895 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v895 + 80))+ v895[9] * v247, v879, v905);
          }
          else
          {
            if (v240 != v826)
            {
              (*v237)(v125, v215);
              if (v241 != v778) {
                (*v756)((const char *)v909, v910);
              }
              goto LABEL_39;
            }
            (*(void (**)(char *, void, unsigned int (*)(uint64_t, uint64_t, uint64_t)))v887)(v855, v777, v905);
            if (swift_isUniquelyReferenced_nonNull_native()) {
              unint64_t v248 = (unint64_t)v238;
            }
            else {
              unint64_t v248 = sub_10007D39C(0, v238[2] + 1, 1, (unint64_t)v238);
            }
            unint64_t v250 = *(void *)(v248 + 16);
            unint64_t v249 = *(void *)(v248 + 24);
            if (v250 >= v249 >> 1) {
              unint64_t v248 = sub_10007D39C(v249 > 1, v250 + 1, 1, v248);
            }
            *(void *)(v248 + 16) = v250 + 1;
            uint64_t v238 = (void *)v248;
            ((void (*)(unint64_t, char *, unsigned int (*)(uint64_t, uint64_t, uint64_t)))v895[4])(v248+ ((*((unsigned __int8 *)v895 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v895 + 80))+ v895[9] * v250, v855, v905);
          }
          uint64_t v215 = v913;
          (*v237)(v125, v913);
        }
LABEL_39:
        v235 += v907;
        if (!--v233)
        {
          swift_bridgeObjectRelease();
          os_log_t v223 = v902;
          uint64_t v232 = v903;
          uint64_t v222 = v884;
          uint64_t v251 = v238;
          goto LABEL_47;
        }
      }
    }
  }
  uint64_t v251 = _swiftEmptyArrayStorage;
LABEL_47:
  uint64_t v252 = (void *)v251[2];
  v895 = v251;
  if (v252)
  {
    swift_bridgeObjectRetain();
    uint64_t v252 = v895;
  }
  *(uint64_t *)((char *)v223 + v911[12]) = (uint64_t)v252;
  char v253 = v899;
  *((unsigned char *)v223 + 40) = v899 & 1;
  if (v253)
  {
    uint64_t v254 = v795;
    sub_100006AB0((uint64_t)v898, v795, (uint64_t *)&unk_1006AFE30);
    if (v889((char *)v254, 1, v215) == 1)
    {
      BOOL v255 = (uint64_t *)&unk_1006AFE30;
      uint64_t v256 = v254;
LABEL_54:
      sub_100003F10(v256, v255);
      int v826 = 0;
      goto LABEL_59;
    }
    uint64_t v260 = v814;
    FMIPItem.state.getter();
    (*(void (**)(uint64_t, uint64_t))(v891 + 8))(v254, v215);
    uint64_t v261 = v815;
    static FMIPItemState.isBTConnected.getter();
    sub_1004B825C((unint64_t *)&qword_1006BEB30, (void (*)(uint64_t))&type metadata accessor for FMIPItemState);
    uint64_t v262 = v817;
    int v826 = dispatch thunk of SetAlgebra.isSuperset(of:)();
    uint64_t v263 = *(void (**)(char *, uint64_t))(v816 + 8);
    v263(v261, v262);
    v263(v260, v262);
  }
  else
  {
    uint64_t v257 = v808;
    FMIPDevice.itemGroup.getter();
    if (v876(v257, 1, v222) == 1)
    {
      BOOL v255 = &qword_1006B36B0;
      uint64_t v256 = (uint64_t)v257;
      goto LABEL_54;
    }
    uint64_t v264 = v814;
    FMIPItemGroup.state.getter();
    (*(void (**)(char *, uint64_t))(v868 + 8))(v257, v222);
    uint64_t v265 = v815;
    static FMIPItemState.isBTConnected.getter();
    sub_1004B825C((unint64_t *)&qword_1006BEB30, (void (*)(uint64_t))&type metadata accessor for FMIPItemState);
    uint64_t v266 = v817;
    int v826 = dispatch thunk of SetAlgebra.isSuperset(of:)();
    uint64_t v267 = *(void (**)(char *, uint64_t))(v816 + 8);
    v267(v265, v266);
    uint64_t v268 = v264;
    uint64_t v215 = v913;
    v267(v268, v266);
  }
LABEL_59:
  uint64_t v269 = v864;
  FMIPDevice.state.getter();
  uint64_t v270 = v865;
  static FMIPDeviceState.isThisDevice.getter();
  uint64_t v271 = sub_1004B825C((unint64_t *)&qword_1006C0390, (void (*)(uint64_t))&type metadata accessor for FMIPDeviceState);
  uint64_t v272 = v866;
  LODWORD(v873) = dispatch thunk of SetAlgebra.isSuperset(of:)();
  uint64_t v273 = v881 + 8;
  uint64_t v274 = *(void (**)(char *, uint64_t))(v881 + 8);
  v274(v270, v272);
  v274(v269, v272);
  FMIPDevice.state.getter();
  static FMIPDeviceState.isDeviceWithYou.getter();
  uint64_t v886 = v271;
  LODWORD(v872) = dispatch thunk of SetAlgebra.isSuperset(of:)();
  v274(v270, v272);
  uint64_t v881 = v273;
  v887 = v274;
  v274(v269, v272);
  if (FMIPDevice.pairingIncomplete.getter())
  {
    LODWORD(v855) = 0;
    uint64_t v275 = (uint64_t)v828;
    uint64_t v276 = (uint64_t)v827;
    uint64_t v277 = v885;
    goto LABEL_68;
  }
  uint64_t v275 = (uint64_t)v828;
  uint64_t v276 = (uint64_t)v827;
  if ((v899 & 1) == 0)
  {
    uint64_t v280 = (uint64_t)v782;
    FMIPDevice.bestLocation.getter();
LABEL_66:
    uint64_t v282 = type metadata accessor for FMIPLocation();
    BOOL v281 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v282 - 8) + 48))(v280, 1, v282) != 1;
    goto LABEL_67;
  }
  uint64_t v278 = v781;
  sub_100006AB0((uint64_t)v898, v781, (uint64_t *)&unk_1006AFE30);
  if (v889((char *)v278, 1, v215) != 1)
  {
    uint64_t v280 = (uint64_t)v784;
    FMIPItem.location.getter();
    (*(void (**)(uint64_t, uint64_t))(v891 + 8))(v278, v215);
    goto LABEL_66;
  }
  sub_100003F10(v278, (uint64_t *)&unk_1006AFE30);
  uint64_t v279 = type metadata accessor for FMIPLocation();
  uint64_t v280 = (uint64_t)v784;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v279 - 8) + 56))(v784, 1, 1, v279);
  BOOL v281 = 0;
LABEL_67:
  uint64_t v277 = v885;
  LODWORD(v855) = v281;
  sub_100003F10(v280, (uint64_t *)&unk_1006B2AE0);
LABEL_68:
  uint64_t v283 = FMIPDevice.deviceConnectedWithBeacon.getter();
  if (v284) {
    uint64_t v285 = v283;
  }
  else {
    uint64_t v285 = 0;
  }
  if (v284) {
    uint64_t v286 = v284;
  }
  else {
    uint64_t v286 = 0xE000000000000000;
  }
  uint64_t v287 = FMIPManager.devices.getter();
  swift_bridgeObjectRetain();
  int v288 = sub_1004B2348(v287, v285, v286);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)v288 + 2))
  {
    uint64_t v289 = v870;
    ((void (*)(uint64_t, char *, uint64_t))v896)(v870, &v288[(*(unsigned __int8 *)(v277 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v277 + 80)], v232);
    uint64_t v290 = 0;
  }
  else
  {
    uint64_t v290 = 1;
    uint64_t v289 = v870;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v277 + 56))(v289, v290, 1, v232);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1000D90AC(v875);
  swift_release();
  sub_100006AB0(v289, v276, &qword_1006B2AF0);
  uint64_t v293 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v277 + 48);
  uint64_t v291 = v277 + 48;
  uint64_t v292 = v293;
  if (v293(v276, 1, v232) == 1)
  {
    sub_100003F10(v276, &qword_1006B2AF0);
    uint64_t v294 = 0;
    uint64_t v295 = 0;
  }
  else
  {
    uint64_t v294 = FMIPDevice.baIdentifier.getter();
    uint64_t v295 = v296;
    v901((char *)v276, v232);
  }
  sub_100006AB0(v875, v275, &qword_1006B2AF0);
  *(void *)&long long v908 = v292;
  int v297 = v292(v275, 1, v232);
  uint64_t v808 = 0;
  uint64_t v885 = v291;
  if (v297 == 1)
  {
    sub_100003F10(v275, &qword_1006B2AF0);
    uint64_t v298 = v858;
    uint64_t v299 = (uint64_t)v912;
    if (!v295)
    {
      LODWORD(v909) = 1;
      uint64_t v300 = v857;
      goto LABEL_91;
    }
    goto LABEL_88;
  }
  uint64_t v301 = v232;
  uint64_t v302 = FMIPDevice.baIdentifier.getter();
  uint64_t v304 = v303;
  v901((char *)v275, v301);
  if (v295)
  {
    uint64_t v298 = v858;
    uint64_t v299 = (uint64_t)v912;
    if (v304)
    {
      if (v294 == v302 && v295 == v304)
      {
        swift_bridgeObjectRelease();
        LODWORD(v909) = 1;
      }
      else
      {
        LODWORD(v909) = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
      }
      goto LABEL_89;
    }
LABEL_88:
    LODWORD(v909) = 0;
LABEL_89:
    uint64_t v300 = v857;
LABEL_90:
    swift_bridgeObjectRelease();
    goto LABEL_91;
  }
  uint64_t v298 = v858;
  uint64_t v299 = (uint64_t)v912;
  uint64_t v300 = v857;
  if (v304)
  {
    LODWORD(v909) = 0;
    goto LABEL_90;
  }
  LODWORD(v909) = 1;
LABEL_91:
  FMIPDevice.deviceConnectedState.getter();
  uint64_t v305 = v299;
  uint64_t v306 = v878;
  v307 = (char *)(v878 + 104);
  uint64_t v308 = *(char **)(v878 + 104);
  uint64_t v309 = v300;
  uint64_t v310 = v860;
  ((void (*)(char *, void, uint64_t))v308)(v300, enum case for FMIPDeviceConnectedStateType.connected(_:), v860);
  char v311 = static FMIPDeviceConnectedStateType.== infix(_:_:)();
  uint64_t v312 = *(void (**)(char *, uint64_t))(v306 + 8);
  v312(v309, v310);
  v312(v298, v310);
  uint64_t v313 = v837;
  uint64_t v314 = v305;
  uint64_t v315 = v903;
  ((void (*)(char *, uint64_t, uint64_t))v896)(v837, v314, v903);
  uint64_t v878 = v306 + 8;
  v828 = v307;
  os_log_t v827 = v308;
  if (v311)
  {
    v901(v313, v315);
    uint64_t v316 = v851;
    uint64_t v317 = v829;
    uint64_t v318 = v315;
    if ((v909 & 1) == 0) {
      goto LABEL_93;
    }
LABEL_96:
    uint64_t v323 = 0;
    uint64_t v324 = 0;
    char v321 = v882;
    uint64_t v322 = (uint64_t)v830;
    goto LABEL_98;
  }
  FMIPDevice.deviceConnectedState.getter();
  ((void (*)(char *, void, uint64_t))v308)(v309, enum case for FMIPDeviceConnectedStateType.attached(_:), v310);
  char v325 = static FMIPDeviceConnectedStateType.== infix(_:_:)();
  v312(v309, v310);
  v312(v298, v310);
  v901(v313, v315);
  uint64_t v316 = v851;
  uint64_t v317 = v829;
  uint64_t v318 = v315;
  if (v909 & 1 | ((v325 & 1) == 0)) {
    goto LABEL_96;
  }
LABEL_93:
  uint64_t v319 = v798;
  sub_100006AB0(v870, v798, &qword_1006B2AF0);
  int v320 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v908)(v319, 1, v318);
  char v321 = v882;
  uint64_t v322 = (uint64_t)v830;
  if (v320 == 1)
  {
    sub_100003F10(v319, &qword_1006B2AF0);
    uint64_t v323 = 0;
    uint64_t v324 = 0;
  }
  else
  {
    uint64_t v323 = FMIPDevice.name.getter();
    uint64_t v324 = v326;
    v901((char *)v319, v318);
  }
LABEL_98:
  uint64_t v327 = (uint64_t)v898;
  uint64_t v829 = sub_100269CBC((uint64_t)v912, (uint64_t)v898, v321 != 0, 0, 0, 1, 0, v323, v324);
  v830 = v328;
  swift_bridgeObjectRelease();
  uint64_t v329 = v838;
  FMIPDevice.batteryStatus.getter();
  uint64_t v330 = v840;
  uint64_t v331 = v839;
  (*(void (**)(char *, void, uint64_t))(v840 + 104))(v839, enum case for FMIPBatteryStatus.unknown(_:), v317);
  sub_1004B825C(&qword_1006C0398, (void (*)(uint64_t))&type metadata accessor for FMIPBatteryStatus);
  LODWORD(v837) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v332 = *(void (**)(char *, uint64_t))(v330 + 8);
  v332(v331, v317);
  v332(v329, v317);
  if (v899)
  {
    uint64_t v333 = v796;
    sub_100006AB0(v327, v796, (uint64_t *)&unk_1006AFE30);
    uint64_t v334 = v913;
    if (v889((char *)v333, 1, v913) == 1)
    {
      sub_100003F10(v333, (uint64_t *)&unk_1006AFE30);
      uint64_t v335 = v884;
    }
    else
    {
      uint64_t v342 = (uint64_t)v783;
      FMIPItem.location.getter();
      (*(void (**)(uint64_t, uint64_t))(v891 + 8))(v333, v334);
      uint64_t v343 = type metadata accessor for FMIPLocation();
      uint64_t v344 = *(void *)(v343 - 8);
      int v345 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v344 + 48))(v342, 1, v343);
      uint64_t v335 = v884;
      if (v345 != 1)
      {
        uint64_t v353 = (void *)FMIPLocation.location.getter();
        (*(void (**)(uint64_t, uint64_t))(v344 + 8))(v342, v343);
        id v354 = [v353 timestamp];

        uint64_t v355 = v874;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        v346 = *(void **)(v880 + 56);
        uint64_t v347 = v355;
        uint64_t v348 = 0;
LABEL_111:
        v894 = v346;
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v346)(v347, v348, 1, v883);
        uint64_t v352 = v888;
        uint64_t v356 = v797;
        sub_100006AB0((uint64_t)v898, v797, (uint64_t *)&unk_1006AFE30);
        if (v889((char *)v356, 1, v334) == 1)
        {
          sub_100003F10(v356, (uint64_t *)&unk_1006AFE30);
          uint64_t v357 = type metadata accessor for FMIPLocation();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v357 - 8) + 56))(v352, 1, 1, v357);
        }
        else
        {
          FMIPItem.location.getter();
          (*(void (**)(uint64_t, uint64_t))(v891 + 8))(v356, v334);
        }
        goto LABEL_114;
      }
      sub_100003F10(v342, (uint64_t *)&unk_1006B2AE0);
    }
    v346 = *(void **)(v880 + 56);
    uint64_t v347 = v874;
    uint64_t v348 = 1;
    goto LABEL_111;
  }
  uint64_t v336 = (uint64_t)v799;
  FMIPDevice.bestLocation.getter();
  uint64_t v337 = type metadata accessor for FMIPLocation();
  uint64_t v338 = *(void *)(v337 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v338 + 48))(v336, 1, v337) == 1)
  {
    sub_100003F10(v336, (uint64_t *)&unk_1006B2AE0);
    v339 = *(void **)(v880 + 56);
    uint64_t v340 = v874;
    uint64_t v341 = 1;
  }
  else
  {
    uint64_t v349 = (void *)FMIPLocation.location.getter();
    (*(void (**)(uint64_t, uint64_t))(v338 + 8))(v336, v337);
    id v350 = [v349 timestamp];

    uint64_t v351 = v874;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    v339 = *(void **)(v880 + 56);
    uint64_t v340 = v351;
    uint64_t v341 = 0;
  }
  v894 = v339;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v339)(v340, v341, 1, v883);
  uint64_t v334 = v913;
  uint64_t v335 = v884;
  uint64_t v352 = v888;
  FMIPDevice.bestLocation.getter();
LABEL_114:
  sub_100006AB0(v352, v322, (uint64_t *)&unk_1006B2AE0);
  uint64_t v358 = type metadata accessor for FMIPLocation();
  uint64_t v359 = *(void *)(v358 - 8);
  uint64_t v360 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v359 + 48);
  v906 = (char *)(v359 + 48);
  v905 = v360;
  unsigned int v361 = v360(v322, 1, v358);
  uint64_t v840 = v359;
  uint64_t v819 = v312;
  uint64_t v907 = v358;
  if (v361 == 1)
  {
    swift_bridgeObjectRelease();
    sub_100003F10(v322, (uint64_t *)&unk_1006B2AE0);
LABEL_128:
    uint64_t v839 = 0;
    uint64_t v885 = 0;
    uint64_t v387 = (uint64_t)v825;
    uint64_t v365 = (uint64_t)v847;
    goto LABEL_134;
  }
  v362 = (void *)FMIPLocation.location.getter();
  (*(void (**)(uint64_t, uint64_t))(v359 + 8))(v322, v358);
  if (!v882)
  {

    swift_bridgeObjectRelease();
    goto LABEL_128;
  }
  uint64_t v363 = qword_1006AE278;
  v364 = v882;
  uint64_t v365 = (uint64_t)v847;
  if (v363 != -1) {
    swift_once();
  }
  id v366 = [(id)qword_1006D2238 localizedDistanceFromLocation:v362 toLocation:v364];
  uint64_t v839 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v885 = v367;

  if (v849)
  {
    uint64_t v368 = sub_1000F90A8();
    if (v369)
    {
      uint64_t v370 = v368;
      uint64_t v371 = v369;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v372 = v762;
      id v373 = [objc_allocWithZone((Class)MKDistanceFormatter) init];
      id v374 = [(id)qword_1006D2238 measurementSystem];
      if (v374 != (id)1)
      {
        if (v374 == (id)2) {
          uint64_t v375 = 1;
        }
        else {
          uint64_t v375 = 2;
        }
        [v373 setUnits:v375];
      }
      v376 = v373;
      id v377 = [v373 stringFromDistance:v372];
      uint64_t v378 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)&long long v908 = v379;

      *(void *)&long long v916 = 0;
      *((void *)&v916 + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      id v380 = [self mainBundle];
      v919._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
      v919._unint64_t object = (void *)0x8000000100583340;
      v381._uint64_t countAndFlagsBits = 0x415045535F415445;
      v381._unint64_t object = (void *)0xED0000524F544152;
      v382._uint64_t countAndFlagsBits = 0;
      v382._unint64_t object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v381, (Swift::String_optional)0, (NSBundle)v380, v382, v919);

      sub_10005D034((uint64_t *)&unk_1006AF790);
      uint64_t v383 = swift_allocObject();
      *(_OWORD *)(v383 + 16) = xmmword_10055B960;
      *(void *)(v383 + 56) = &type metadata for String;
      unint64_t v384 = sub_10007F2C8();
      uint64_t v385 = v908;
      *(void *)(v383 + 32) = v378;
      *(void *)(v383 + 40) = v385;
      *(void *)(v383 + 96) = &type metadata for String;
      *(void *)(v383 + 104) = v384;
      *(void *)(v383 + 64) = v384;
      *(void *)(v383 + 72) = v370;
      *(void *)(v383 + 80) = v371;
      uint64_t v839 = (char *)String.init(format:_:)();
      uint64_t v885 = v386;
      swift_bridgeObjectRelease();

      uint64_t v335 = v884;
      uint64_t v316 = v851;
      uint64_t v387 = (uint64_t)v825;
      uint64_t v365 = (uint64_t)v847;
      goto LABEL_133;
    }

    swift_bridgeObjectRelease();
  }
  else
  {
  }
  uint64_t v387 = (uint64_t)v825;
LABEL_133:
  uint64_t v334 = v913;
LABEL_134:
  FMIPManager.rangingParameters.getter();
  uint64_t v388 = v854;
  uint64_t v390 = (char *)(v854 + 48);
  uint64_t v389 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v854 + 48);
  uint64_t v391 = v853;
  int v392 = v389(v365, 1, v853);
  v838 = (char *)v389;
  if (v392 == 1)
  {
    FMIPRangingParameters.init()();
    sub_100003F10(v365, (uint64_t *)&unk_1006C0B20);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v388 + 32))(v387, v365, v391);
  }
  uint64_t v393 = (uint64_t)v912;
  uint64_t v394 = *(char **)(v388 + 56);
  uint64_t v849 = v388 + 56;
  v847 = v394;
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v394)(v387, 0, 1, v391);
  uint64_t v897 = sub_1004B25D4(v393, (uint64_t)v882, v387, v909 & 1);
  sub_100003F10(v387, (uint64_t *)&unk_1006C0B20);
  uint64_t v395 = FMIPDevice.safeLocations.getter();
  uint64_t v915 = v395;
  uint64_t v396 = (uint64_t)v841;
  FMIPDevice.itemGroup.getter();
  unsigned int v397 = v876((char *)v396, 1, v335);
  v879 = v390;
  if (v397 == 1)
  {
    sub_100003F10(v396, &qword_1006B36B0);
    v398 = (const char *)_swiftEmptyArrayStorage;
    v399 = v902;
    int v400 = v826;
    int v401 = (int)v873;
    int v402 = (int)v872;
  }
  else
  {
    uint64_t v403 = v868;
    (*(void (**)(char *, uint64_t, uint64_t))(v868 + 32))(v832, v396, v335);
    uint64_t v404 = FMIPItemGroup.items.getter();
    uint64_t v405 = *(void *)(v404 + 16);
    if (v405)
    {
      uint64_t v406 = v334;
      unint64_t v909 = *(void *)(v891 + 16);
      unint64_t v407 = (*(unsigned __int8 *)(v891 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v891 + 80);
      v841 = (char *)v404;
      unint64_t v408 = v404 + v407;
      *(void *)&long long v908 = *(void *)(v891 + 72);
      uint64_t v409 = (void (**)(char *, uint64_t))(v891 + 8);
      uint64_t v410 = (char *)_swiftEmptyArrayStorage;
      uint64_t v411 = v904;
      uint64_t v412 = v808;
      do
      {
        ((void (*)(char *, unint64_t, uint64_t))v909)(v411, v408, v406);
        uint64_t v413 = FMIPItem.safeLocations.getter();
        uint64_t v414 = sub_1004B47A4(v413, &v915);
        swift_bridgeObjectRelease();
        sub_100035710(v414, (uint64_t (*)(void))sub_10007D368, (uint64_t (*)(void))&type metadata accessor for FMIPSafeLocation);
        uint64_t v415 = FMIPItem.identifier.getter();
        uint64_t v417 = v416;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v410 = (char *)sub_10007D258(0, *((void *)v410 + 2) + 1, 1, v410);
        }
        unint64_t v419 = *((void *)v410 + 2);
        unint64_t v418 = *((void *)v410 + 3);
        if (v419 >= v418 >> 1) {
          uint64_t v410 = (char *)sub_10007D258((void *)(v418 > 1), v419 + 1, 1, v410);
        }
        *((void *)v410 + 2) = v419 + 1;
        uint64_t v420 = &v410[16 * v419];
        *((void *)v420 + 4) = v415;
        *((void *)v420 + 5) = v417;
        uint64_t v411 = v904;
        uint64_t v406 = v913;
        (*v409)(v904, v913);
        v408 += v908;
        --v405;
      }
      while (v405);
      v421 = v410;
      uint64_t v808 = v412;
      swift_bridgeObjectRelease();
      uint64_t v393 = (uint64_t)v912;
      uint64_t v335 = v884;
      uint64_t v334 = v406;
      uint64_t v403 = v868;
      uint64_t v316 = v851;
    }
    else
    {
      swift_bridgeObjectRelease();
      v421 = (const char *)_swiftEmptyArrayStorage;
    }
    (*(void (**)(char *, uint64_t))(v403 + 8))(v832, v335);
    uint64_t v395 = v915;
    v399 = v902;
    int v400 = v826;
    int v401 = (int)v873;
    int v402 = (int)v872;
    v398 = v421;
  }
  unint64_t object = (void *)v885;
  v399[4] = (uint64_t)v398;
  *(uint64_t *)((char *)v399 + v911[38]) = v395;
  unint64_t v909 = (unint64_t)v398;
  if ((v401 | v400 | v402))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&long long v916 = 0;
    *((void *)&v916 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v423 = [self mainBundle];
    v424._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
    v920._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
    v920._unint64_t object = (void *)0x8000000100595470;
    v424._unint64_t object = (void *)0x8000000100595450;
    v425._uint64_t countAndFlagsBits = 0;
    v425._unint64_t object = (void *)0xE000000000000000;
    Swift::String v426 = NSLocalizedString(_:tableName:bundle:value:comment:)(v424, (Swift::String_optional)0, (NSBundle)v423, v425, v920);
    uint64_t countAndFlagsBits = v426._countAndFlagsBits;
    unint64_t object = v426._object;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t countAndFlagsBits = (uint64_t)v839;
  }
  v428 = (uint64_t *)((char *)v399 + v911[14]);
  uint64_t *v428 = countAndFlagsBits;
  v428[1] = (uint64_t)object;
  uint64_t *v399 = FMIPDevice.identifier.getter();
  v399[1] = v429;
  v399[2] = FMIPDevice.baIdentifier.getter();
  v399[3] = v430;
  FMIPDevice.status.getter();
  (*(void (**)(char *, void, void *))(v316 + 104))(v862, enum case for FMIPDeviceStatus.online(_:), v863);
  sub_1004B825C((unint64_t *)&unk_1006C03A0, (void (*)(uint64_t))&type metadata accessor for FMIPDeviceStatus);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  uint64_t v431 = v903;
  if (v916 == v914) {
    char v432 = 1;
  }
  else {
    char v432 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  uint64_t v433 = v335;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v434 = *(void (**)(char *, void *))(v316 + 8);
  uint64_t v435 = v863;
  v434(v862, v863);
  v434(v861, v435);
  char v436 = v432 & 1;
  uint64_t v437 = v902;
  *((unsigned char *)v902 + v911[15]) = v436;
  if (v899)
  {
    uint64_t v438 = (uint64_t)v898;
    uint64_t v439 = v800;
    sub_100006AB0((uint64_t)v898, v800, (uint64_t *)&unk_1006AFE30);
    unsigned int v440 = v889((char *)v439, 1, v334);
    uint64_t v441 = v901;
    uint64_t v442 = v831;
    int v443 = (int)v855;
    if (v440 == 1)
    {
      sub_100003F10(v439, (uint64_t *)&unk_1006AFE30);
      uint64_t v444 = type metadata accessor for FMIPAddress();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v444 - 8) + 56))(v871, 1, 1, v444);
    }
    else
    {
      FMIPItem.address.getter();
      (*(void (**)(uint64_t, uint64_t))(v891 + 8))(v439, v334);
    }
  }
  else
  {
    FMIPDevice.address.getter();
    uint64_t v441 = v901;
    uint64_t v442 = v831;
    uint64_t v438 = (uint64_t)v898;
    int v443 = (int)v855;
  }
  uint64_t My = type metadata accessor for Feature.FindMy();
  *((void *)&v917 + 1) = My;
  uint64_t v918 = sub_1004B825C((unint64_t *)&qword_1006B5A60, (void (*)(uint64_t))&type metadata accessor for Feature.FindMy);
  v446 = sub_100042804((uint64_t *)&v916);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(My - 8) + 104))(v446, enum case for Feature.FindMy.baAirpodsMultipartUI(_:), My);
  char v447 = isFeatureEnabled(_:)();
  sub_10002CEFC((uint64_t)&v916);
  if (v443)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v448 = sub_100268F40(v871, v888, 1, 0);
    v449 = v911;
    BOOL v450 = (uint64_t *)((char *)v437 + v911[16]);
    *BOOL v450 = v448;
    v450[1] = v451;
    v452 = (uint64_t *)((char *)v437 + v449[17]);
    uint64_t *v452 = v829;
    uint64_t v453 = v880;
    uint64_t v454 = (uint64_t)v848;
    char v455 = (char)v837;
    unint64_t v456 = (unint64_t)v830;
    goto LABEL_219;
  }
  ((void (*)(char *, uint64_t, uint64_t))v896)(v442, v393, v431);
  if ((v447 & 1) == 0)
  {
    v441(v442, v431);
    uint64_t v454 = (uint64_t)v848;
    goto LABEL_167;
  }
  uint64_t v457 = v334;
  char v458 = FMIPDevice.shouldDisplaySeparatedLocation.getter();
  v441(v442, v431);
  uint64_t v454 = (uint64_t)v848;
  if ((v458 & 1) == 0)
  {
LABEL_167:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v449 = v911;
    v464 = (uint64_t *)((char *)v437 + v911[16]);
    double v465 = v830;
    uint64_t *v464 = v829;
    v464[1] = (uint64_t)v465;
    v452 = (uint64_t *)((char *)v437 + v449[17]);
    uint64_t *v452 = 0;
    unint64_t v456 = 0xE000000000000000;
    uint64_t v453 = v880;
LABEL_218:
    char v455 = (char)v837;
    goto LABEL_219;
  }
  uint64_t v459 = (uint64_t)v768;
  FMIPDevice.itemGroup.getter();
  uint64_t v460 = v433;
  unsigned int v461 = v876((char *)v459, 1, v433);
  uint64_t v462 = v868;
  if (v461 == 1)
  {
    sub_100003F10(v459, &qword_1006B36B0);
    uint64_t v463 = v785;
    v863 = *(void **)(v891 + 56);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v863)(v785, 1, 1, v457);
  }
  else
  {
    uint64_t v466 = FMIPItemGroup.items.getter();
    (*(void (**)(uint64_t, uint64_t))(v462 + 8))(v459, v433);
    uint64_t v467 = *(void *)(v466 + 16);
    if (v467)
    {
      *(void *)&long long v908 = *(void *)(v891 + 16);
      unint64_t v468 = v466 + ((*(unsigned __int8 *)(v891 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v891 + 80));
      LODWORD(v885) = enum case for FMIPPartType.leftBud(_:);
      uint64_t v469 = (void (**)(char *, void, void *))(v791 + 104);
      v470 = (void (**)(char *, void *))(v791 + 8);
      v872 = (void (**)(char *, uint64_t))(v891 + 8);
      v904 = (char *)(v891 + 16);
      v873 = *(char **)(v891 + 72);
      v862 = (char *)v466;
      swift_bridgeObjectRetain();
      uint64_t v471 = v913;
      uint64_t v472 = v757;
      uint64_t v473 = v792;
      uint64_t v474 = v789;
      while (1)
      {
        ((void (*)(char *, unint64_t, uint64_t))v908)(v473, v468, v471);
        FMIPItem.partType.getter();
        uint64_t v475 = v910;
        (*v469)(v474, v885, v910);
        sub_1004B825C(&qword_1006B5E78, (void (*)(uint64_t))&type metadata accessor for FMIPPartType);
        dispatch thunk of RawRepresentable.rawValue.getter();
        dispatch thunk of RawRepresentable.rawValue.getter();
        if ((void)v916 == (void)v914 && *((void *)&v916 + 1) == *((void *)&v914 + 1)) {
          break;
        }
        char v477 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v478 = *v470;
        (*v470)(v474, v475);
        v478(v472, v475);
        if (v477) {
          goto LABEL_180;
        }
        uint64_t v473 = v792;
        uint64_t v471 = v913;
        (*v872)(v792, v913);
        v468 += (unint64_t)v873;
        if (!--v467)
        {
          swift_bridgeObjectRelease();
          uint64_t v437 = v902;
          uint64_t v460 = v884;
          uint64_t v438 = (uint64_t)v898;
          uint64_t v462 = v868;
          uint64_t v454 = (uint64_t)v848;
          goto LABEL_178;
        }
      }
      swift_bridgeObjectRelease_n();
      uint64_t v479 = *v470;
      (*v470)(v474, v475);
      v479(v472, v475);
LABEL_180:
      swift_bridgeObjectRelease();
      uint64_t v480 = v891;
      uint64_t v463 = v785;
      uint64_t v481 = v913;
      (*(void (**)(uint64_t, char *, uint64_t))(v891 + 32))(v785, v792, v913);
      uint64_t v457 = v481;
      v863 = *(void **)(v480 + 56);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v863)(v463, 0, 1, v481);
      swift_bridgeObjectRelease();
      uint64_t v437 = v902;
      uint64_t v433 = v884;
      uint64_t v438 = (uint64_t)v898;
      uint64_t v462 = v868;
      uint64_t v454 = (uint64_t)v848;
    }
    else
    {
LABEL_178:
      uint64_t v433 = v460;
      uint64_t v463 = v785;
      uint64_t v457 = v913;
      v863 = *(void **)(v891 + 56);
      ((void (*)(uint64_t, uint64_t, uint64_t))v863)(v785, 1, 1);
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v482 = (uint64_t)v769;
  FMIPDevice.itemGroup.getter();
  uint64_t v483 = v433;
  unsigned int v484 = v876((char *)v482, 1, v433);
  uint64_t v485 = v786;
  if (v484 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100003F10(v482, &qword_1006B36B0);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v863)(v485, 1, 1, v457);
    uint64_t v486 = v485;
  }
  else
  {
    uint64_t v487 = FMIPItemGroup.items.getter();
    (*(void (**)(uint64_t, uint64_t))(v462 + 8))(v482, v483);
    uint64_t v488 = *(void *)(v487 + 16);
    if (v488)
    {
      *(void *)&long long v908 = *(void *)(v891 + 16);
      unint64_t v489 = v487 + ((*(unsigned __int8 *)(v891 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v891 + 80));
      LODWORD(v885) = enum case for FMIPPartType.rightBud(_:);
      v490 = (void (**)(char *, void, void *))(v791 + 104);
      v491 = (char *)v487;
      uint64_t v492 = v457;
      uint64_t v493 = (void (**)(char *, void *))(v791 + 8);
      v872 = (void (**)(char *, uint64_t))(v891 + 8);
      v904 = (char *)(v891 + 16);
      v873 = *(char **)(v891 + 72);
      v862 = v491;
      swift_bridgeObjectRetain();
      int v494 = v758;
      BOOL v495 = v793;
      unsigned int v496 = v790;
      int v497 = v910;
      while (1)
      {
        ((void (*)(char *, unint64_t, uint64_t))v908)(v495, v489, v492);
        FMIPItem.partType.getter();
        (*v490)(v496, v885, v497);
        sub_1004B825C(&qword_1006B5E78, (void (*)(uint64_t))&type metadata accessor for FMIPPartType);
        dispatch thunk of RawRepresentable.rawValue.getter();
        dispatch thunk of RawRepresentable.rawValue.getter();
        if ((void)v916 == (void)v914 && *((void *)&v916 + 1) == *((void *)&v914 + 1)) {
          break;
        }
        char v499 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v500 = *v493;
        (*v493)(v496, v497);
        v500(v494, v497);
        if (v499) {
          goto LABEL_194;
        }
        BOOL v495 = v793;
        uint64_t v492 = v913;
        (*v872)(v793, v913);
        v489 += (unint64_t)v873;
        if (!--v488)
        {
          swift_bridgeObjectRelease();
          uint64_t v437 = v902;
          uint64_t v438 = (uint64_t)v898;
          uint64_t v457 = v492;
          uint64_t v463 = v785;
          uint64_t v485 = v786;
          goto LABEL_192;
        }
      }
      swift_bridgeObjectRelease_n();
      uint64_t v501 = *v493;
      (*v493)(v496, v497);
      v501(v494, v497);
LABEL_194:
      swift_bridgeObjectRelease();
      uint64_t v486 = v786;
      uint64_t v457 = v913;
      (*(void (**)(uint64_t, char *, uint64_t))(v891 + 32))(v786, v793, v913);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v863)(v486, 0, 1, v457);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v437 = v902;
      uint64_t v438 = (uint64_t)v898;
      uint64_t v454 = (uint64_t)v848;
      uint64_t v463 = v785;
    }
    else
    {
LABEL_192:
      uint64_t v486 = v485;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v863)(v485, 1, 1, v457);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v454 = (uint64_t)v848;
    }
  }
  uint64_t v502 = v770;
  sub_100006AB0(v463, v770, (uint64_t *)&unk_1006AFE30);
  unsigned int v503 = v889((char *)v502, 1, v457);
  uint64_t v504 = (uint64_t)v774;
  if (v503 == 1)
  {
    sub_100003F10(v502, (uint64_t *)&unk_1006AFE30);
    uint64_t v505 = 1;
    uint64_t v506 = v883;
  }
  else
  {
    FMIPItem.location.getter();
    (*(void (**)(uint64_t, uint64_t))(v891 + 8))(v502, v457);
    uint64_t v507 = v907;
    if (v905(v504, 1, v907) == 1)
    {
      sub_100003F10(v504, (uint64_t *)&unk_1006B2AE0);
      uint64_t v505 = 1;
    }
    else
    {
      uint64_t v508 = FMIPLocation.location.getter();
      uint64_t v509 = v504;
      v510 = (void *)v508;
      (*(void (**)(uint64_t, uint64_t))(v840 + 8))(v509, v507);
      id v511 = [v510 timestamp];

      static Date._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v505 = 0;
    }
    uint64_t v506 = v883;
    uint64_t v438 = (uint64_t)v898;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v894)(v788, v505, 1, v506);
  uint64_t v512 = v772;
  sub_100006AB0(v463, v772, (uint64_t *)&unk_1006AFE30);
  uint64_t v513 = v913;
  if (v889((char *)v512, 1, v913) == 1)
  {
    sub_100003F10(v512, (uint64_t *)&unk_1006AFE30);
    uint64_t v514 = (uint64_t)v766;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v840 + 56))(v766, 1, 1, v907);
  }
  else
  {
    uint64_t v514 = (uint64_t)v766;
    FMIPItem.location.getter();
    uint64_t v506 = v883;
    (*(void (**)(uint64_t, uint64_t))(v891 + 8))(v512, v513);
  }
  char v515 = sub_1004B4C04(v514);
  sub_100003F10(v514, (uint64_t *)&unk_1006B2AE0);
  *((unsigned char *)v437 + v771) = v515 & 1;
  uint64_t v516 = v773;
  sub_100006AB0(v486, v773, (uint64_t *)&unk_1006AFE30);
  if (v889((char *)v516, 1, v513) == 1)
  {
    sub_100003F10(v516, (uint64_t *)&unk_1006AFE30);
    uint64_t v517 = 1;
    uint64_t v518 = (uint64_t)v765;
  }
  else
  {
    uint64_t v519 = (uint64_t)v760;
    FMIPItem.location.getter();
    (*(void (**)(uint64_t, uint64_t))(v891 + 8))(v516, v513);
    uint64_t v520 = v907;
    unsigned int v521 = v905(v519, 1, v907);
    uint64_t v518 = (uint64_t)v765;
    if (v521 == 1)
    {
      sub_100003F10(v519, (uint64_t *)&unk_1006B2AE0);
      uint64_t v517 = 1;
    }
    else
    {
      uint64_t v522 = FMIPLocation.location.getter();
      uint64_t v523 = v519;
      uint64_t v524 = (void *)v522;
      (*(void (**)(uint64_t, uint64_t))(v840 + 8))(v523, v520);
      id v525 = [v524 timestamp];

      static Date._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v517 = 0;
    }
    uint64_t v506 = v883;
    uint64_t v438 = (uint64_t)v898;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v894)(v787, v517, 1, v506);
  sub_100006AB0(v486, v518, (uint64_t *)&unk_1006AFE30);
  uint64_t v526 = v913;
  if (v889((char *)v518, 1, v913) == 1)
  {
    sub_100003F10(v518, (uint64_t *)&unk_1006AFE30);
    uint64_t v527 = (uint64_t)v767;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v840 + 56))(v767, 1, 1, v907);
  }
  else
  {
    uint64_t v527 = (uint64_t)v767;
    FMIPItem.location.getter();
    uint64_t v506 = v883;
    (*(void (**)(uint64_t, uint64_t))(v891 + 8))(v518, v526);
  }
  uint64_t v528 = v880;
  uint64_t v529 = v764;
  char v530 = sub_1004B4C04(v527);
  sub_100003F10(v527, (uint64_t *)&unk_1006B2AE0);
  *((unsigned char *)v437 + v529) = v530 & 1;
  uint64_t v531 = v775;
  sub_100006AB0(v788, v775, (uint64_t *)&unk_1006AF6E0);
  BOOL v532 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v528 + 48);
  if (v532(v531, 1, v506) == 1)
  {
    uint64_t v533 = v531;
    uint64_t v453 = v528;
LABEL_217:
    sub_100003F10(v533, (uint64_t *)&unk_1006AF6E0);
    v449 = v911;
    uint64_t v538 = (uint64_t *)((char *)v437 + v911[16]);
    uint64_t v539 = v830;
    *uint64_t v538 = v829;
    v538[1] = (uint64_t)v539;
    sub_100003F10(v787, (uint64_t *)&unk_1006AF6E0);
    sub_100003F10(v788, (uint64_t *)&unk_1006AF6E0);
    sub_100003F10(v786, (uint64_t *)&unk_1006AFE30);
    sub_100003F10(v785, (uint64_t *)&unk_1006AFE30);
    v452 = (uint64_t *)((char *)v437 + v449[17]);
    uint64_t *v452 = 0;
    unint64_t v456 = 0xE000000000000000;
    goto LABEL_218;
  }
  uint64_t v534 = v506;
  os_log_t v535 = v763;
  v536 = *(void (**)(char *, uint64_t, uint64_t))(v528 + 32);
  v536(v763, v531, v506);
  uint64_t v537 = v761;
  sub_100006AB0(v787, v761, (uint64_t *)&unk_1006AF6E0);
  if (v532(v537, 1, v534) == 1)
  {
    (*(void (**)(char *, uint64_t))(v528 + 8))(v535, v534);
    uint64_t v453 = v528;
    uint64_t v533 = v537;
    uint64_t v438 = (uint64_t)v898;
    goto LABEL_217;
  }
  swift_bridgeObjectRelease();
  v536(v759, v537, v534);
  v910 = self;
  id v713 = [v910 mainBundle];
  v921._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v714._uint64_t countAndFlagsBits = 0xD000000000000024;
  unint64_t v909 = (unint64_t)"Localizable-MOONDRAGON";
  v921._unint64_t object = (void *)0x8000000100582B40;
  v714._unint64_t object = (void *)0x800000010059F6D0;
  v715.value._unint64_t object = (void *)0x8000000100582B20;
  v715.value._uint64_t countAndFlagsBits = 0xD000000000000016;
  v716._uint64_t countAndFlagsBits = 0;
  v716._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v714, v715, (NSBundle)v713, v716, v921);

  sub_10005D034((uint64_t *)&unk_1006AF790);
  uint64_t v717 = swift_allocObject();
  long long v908 = xmmword_10055B970;
  *(_OWORD *)(v717 + 16) = xmmword_10055B970;
  uint64_t v718 = (void *)qword_1006D2650;
  if (qword_1006D2650)
  {
    id v719 = (id)qword_1006D2650;
  }
  else
  {
    id v720 = [objc_allocWithZone((Class)FMRelativeDateFormatter) init];
    [v720 setFormattingContext:2];
    v721 = (void *)qword_1006D2650;
    qword_1006D2650 = (uint64_t)v720;
    id v719 = v720;

    uint64_t v718 = 0;
  }
  id v722 = v718;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v724 = [v719 stringFromDate:isa];

  uint64_t v725 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v727 = v726;

  *(void *)(v717 + 56) = &type metadata for String;
  unint64_t v728 = sub_10007F2C8();
  *(void *)(v717 + 64) = v728;
  *(void *)(v717 + 32) = v725;
  *(void *)(v717 + 40) = v727;
  uint64_t v729 = String.init(format:_:)();
  uint64_t v731 = v730;
  swift_bridgeObjectRelease();
  id v732 = v910;
  v733 = (uint64_t *)((char *)v902 + v911[16]);
  uint64_t *v733 = v729;
  v733[1] = v731;
  id v734 = [v732 mainBundle];
  v922._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v735._uint64_t countAndFlagsBits = 0xD000000000000025;
  v922._unint64_t object = (void *)(v909 | 0x8000000000000000);
  v735._unint64_t object = (void *)0x800000010059F700;
  v736.value._unint64_t object = (void *)0x8000000100582B20;
  v736.value._uint64_t countAndFlagsBits = 0xD000000000000016;
  v737._uint64_t countAndFlagsBits = 0;
  v737._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v735, v736, (NSBundle)v734, v737, v922);

  uint64_t v738 = swift_allocObject();
  *(_OWORD *)(v738 + 16) = v908;
  v739 = (void *)qword_1006D2650;
  if (qword_1006D2650)
  {
    id v740 = (id)qword_1006D2650;
  }
  else
  {
    id v741 = [objc_allocWithZone((Class)FMRelativeDateFormatter) init];
    [v741 setFormattingContext:2];
    uint64_t v742 = (void *)qword_1006D2650;
    qword_1006D2650 = (uint64_t)v741;
    id v740 = v741;

    v739 = 0;
  }
  uint64_t v454 = (uint64_t)v848;
  id v743 = v739;
  v744 = v759;
  Class v745 = Date._bridgeToObjectiveC()().super.isa;
  id v746 = [v740 stringFromDate:v745];

  uint64_t v747 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v749 = v748;

  *(void *)(v738 + 56) = &type metadata for String;
  *(void *)(v738 + 64) = v728;
  *(void *)(v738 + 32) = v747;
  *(void *)(v738 + 40) = v749;
  uint64_t v750 = String.init(format:_:)();
  unint64_t v752 = v751;
  swift_bridgeObjectRelease();
  uint64_t v453 = v880;
  v753 = *(void (**)(char *, uint64_t))(v880 + 8);
  uint64_t v754 = v883;
  v753(v744, v883);
  v753(v763, v754);
  sub_100003F10(v787, (uint64_t *)&unk_1006AF6E0);
  sub_100003F10(v788, (uint64_t *)&unk_1006AF6E0);
  sub_100003F10(v786, (uint64_t *)&unk_1006AFE30);
  sub_100003F10(v785, (uint64_t *)&unk_1006AFE30);
  unint64_t v456 = v752;
  v449 = v911;
  uint64_t v437 = v902;
  v452 = (uint64_t *)((char *)v902 + v911[17]);
  uint64_t *v452 = v750;
  char v455 = (char)v837;
  uint64_t v438 = (uint64_t)v898;
LABEL_219:
  v452[1] = v456;
  sub_100006AB0(v438, (uint64_t)v437 + v449[9], (uint64_t *)&unk_1006AFE30);
  uint64_t v540 = v869;
  v437[6] = (uint64_t)v869;
  swift_bridgeObjectRetain();
  uint64_t v541 = (uint64_t)v912;
  char v542 = FMIPDevice.shouldDisplaySeparatedLocation.getter();
  uint64_t v543 = sub_10026E628(v541, v438, v540, v542 & 1);
  uint64_t v545 = v544;
  swift_bridgeObjectRelease();
  uint64_t v546 = (uint64_t *)((char *)v437 + v449[18]);
  *uint64_t v546 = v543;
  v546[1] = v545;
  uint64_t v547 = v842;
  sub_100006AB0(v874, v842, (uint64_t *)&unk_1006AF6E0);
  os_log_t v548 = *(void **)(v453 + 48);
  uint64_t v549 = v883;
  unint64_t v909 = v453 + 48;
  v910 = v548;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v548)(v547, 1, v883) == 1)
  {
    uint64_t v550 = v835;
    static Date.distantFuture.getter();
    sub_100003F10(v547, (uint64_t *)&unk_1006AF6E0);
    uint64_t v551 = *(void (**)(char *, uint64_t, uint64_t))(v453 + 32);
  }
  else
  {
    uint64_t v551 = *(void (**)(char *, uint64_t, uint64_t))(v453 + 32);
    uint64_t v550 = v835;
    v551(v835, v547, v549);
  }
  uint64_t v552 = (uint64_t)v833;
  v551((char *)v902 + v911[19], (uint64_t)v550, v549);
  sub_100006AB0(v438, v552, (uint64_t *)&unk_1006AFE30);
  uint64_t v553 = v913;
  unsigned int v554 = v889((char *)v552, 1, v913);
  *(void *)&long long v908 = v551;
  if (v554 == 1)
  {
    sub_100003F10(v552, (uint64_t *)&unk_1006AFE30);
    uint64_t v555 = 0;
    uint64_t v556 = 0;
  }
  else
  {
    uint64_t v557 = v834;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v891 + 32))(v834, v552, v553);
    uint64_t v556 = sub_1000EB22C(v557);
    swift_retain();
    FMIPManager.rangingParameters.getter();
    uint64_t v558 = v853;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v838)(v454, 1, v853) == 1)
    {
      uint64_t v559 = v805;
      FMIPRangingParameters.init()();
      sub_100003F10(v454, (uint64_t *)&unk_1006C0B20);
      uint64_t v560 = v854;
    }
    else
    {
      uint64_t v560 = v854;
      uint64_t v559 = v805;
      (*(void (**)(char *, uint64_t, uint64_t))(v854 + 32))(v805, v454, v558);
    }
    swift_release();
    uint64_t v561 = (uint64_t)v804;
    (*(void (**)(char *, char *, uint64_t))(v560 + 16))(v804, v559, v558);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v847)(v561, 0, 1, v558);
    uint64_t v562 = v834;
    uint64_t v555 = sub_1000EBAD8(v834, v882, v561);
    sub_100003F10(v561, (uint64_t *)&unk_1006C0B20);
    (*(void (**)(char *, uint64_t))(v560 + 8))(v559, v558);
    (*(void (**)(uint64_t, uint64_t))(v891 + 8))(v562, v913);
  }
  BOOL v563 = v554 == 1;
  uint64_t v564 = v912;
  FMIPDevice.batteryLevel.getter();
  v565 = v911;
  uint64_t v566 = v902;
  *(uint64_t *)((char *)v902 + v911[20]) = v567;
  uint64_t v568 = (uint64_t)v566 + v565[10];
  *(void *)uint64_t v568 = v556;
  *(unsigned char *)(v568 + 8) = v563;
  uint64_t v569 = (uint64_t)v566 + v565[11];
  *(void *)uint64_t v569 = v555;
  *(unsigned char *)(v569 + 8) = v563;
  FMIPDevice.batteryStatus.getter();
  *(uint64_t *)((char *)v566 + v565[22]) = v897;
  *((unsigned char *)v566 + v565[24]) = sub_100497730(v564, v892);
  *(uint64_t *)((char *)v566 + v565[23]) = sub_1004B5AD8((uint64_t)v564);
  if (v899) {
    char v570 = sub_1004B4C04(v888);
  }
  else {
    char v570 = sub_1004B7168();
  }
  v571 = v911;
  os_log_t v572 = v902;
  *((unsigned char *)v902 + v911[25]) = v570 & 1;
  *((unsigned char *)v572 + v571[29]) = (v455 ^ 1) & 1;
  v573 = v864;
  FMIPDevice.state.getter();
  v574 = v865;
  static FMIPDeviceState.isLowPowerModeEnabled.getter();
  uint64_t v575 = v866;
  char v576 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  v577 = v574;
  uint64_t v578 = v887;
  v887(v577, v575);
  v578(v573, v575);
  *((unsigned char *)v572 + v571[31]) = v576 & 1;
  if (FMIPDevice.category.getter() == 0x6863746157 && v579 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v580 = 1;
  }
  else
  {
    char v580 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
  }
  uint64_t v581 = (uint64_t)v898;
  uint64_t v582 = v901;
  uint64_t v583 = v852;
  uint64_t v584 = v850;
  v585 = v911;
  uint64_t v586 = v902;
  *((unsigned char *)v902 + v911[30]) = v580 & 1;
  *((unsigned char *)v586 + v585[32]) = v905(v888, 1, v907) != 1;
  uint64_t v587 = v844;
  FMIPDevice.lockMetadata.getter();
  uint64_t v588 = (uint64_t)v587;
  uint64_t v589 = type metadata accessor for FMIPLockMetadata();
  uint64_t v590 = *(void *)(v589 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v590 + 48))(v588, 1, v589) == 1)
  {
    sub_100003F10(v588, &qword_1006BAA88);
    uint64_t v591 = 1;
  }
  else
  {
    FMIPLockMetadata.timestamp.getter();
    (*(void (**)(uint64_t, uint64_t))(v590 + 8))(v588, v589);
    uint64_t v591 = 0;
  }
  uint64_t v592 = v883;
  uint64_t v593 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v894;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v894)(v583, v591, 1, v883);
  uint64_t v594 = v856;
  uint64_t v595 = v903;
  ((void (*)(char *, char *, uint64_t))v896)(v856, v912, v903);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v910)(v583, 1, v592) == 1)
  {
    uint64_t v596 = (uint64_t)v806;
    FMIPDevice.lostMetadata.getter();
    uint64_t v597 = type metadata accessor for FMIPDeviceLostModeMetadata();
    uint64_t v598 = *(void *)(v597 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v598 + 48))(v596, 1, v597) == 1)
    {
      sub_100003F10(v596, (uint64_t *)&unk_1006C0370);
      uint64_t v599 = 1;
    }
    else
    {
      FMIPDeviceLostModeMetadata.timestamp.getter();
      (*(void (**)(uint64_t, uint64_t))(v598 + 8))(v596, v597);
      uint64_t v599 = 0;
    }
    v606 = v801;
    uint64_t v607 = v883;
    v593(v584, v599, 1, v883);
    v608 = v856;
    uint64_t v609 = v903;
    ((void (*)(char *, char *, uint64_t))v896)(v606, v856, v903);
    int v610 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v910)(v584, 1, v607);
    uint64_t v611 = (uint64_t)v802;
    if (v610 == 1)
    {
      FMIPDevice.itemGroup.getter();
      uint64_t v612 = v884;
      if (v876((char *)v611, 1, v884) == 1)
      {
        uint64_t v603 = v903;
        uint64_t v582 = v901;
        v901(v606, v903);
        v582(v856, v603);
        sub_100003F10(v611, &qword_1006B36B0);
        uint64_t v613 = 1;
        uint64_t v601 = v888;
        v602 = v902;
      }
      else
      {
        uint64_t v617 = (uint64_t)v776;
        FMIPItemGroup.lostMetadata.getter();
        (*(void (**)(uint64_t, uint64_t))(v868 + 8))(v611, v612);
        uint64_t v618 = type metadata accessor for FMIPItemLostModeMetadata();
        uint64_t v619 = *(void *)(v618 - 8);
        int v620 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v619 + 48))(v617, 1, v618);
        v602 = v902;
        uint64_t v603 = v903;
        if (v620 == 1)
        {
          uint64_t v582 = v901;
          v901(v606, v903);
          v582(v856, v603);
          sub_100003F10(v617, &qword_1006B04D8);
          uint64_t v613 = 1;
        }
        else
        {
          FMIPItemLostModeMetadata.timestamp.getter();
          uint64_t v621 = v901;
          v901(v606, v603);
          v621(v856, v603);
          (*(void (**)(uint64_t, uint64_t))(v619 + 8))(v617, v618);
          uint64_t v582 = v621;
          uint64_t v613 = 0;
        }
        uint64_t v601 = v888;
      }
      uint64_t v604 = v913;
      uint64_t v581 = (uint64_t)v898;
      uint64_t v600 = (uint64_t)v846;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v894)(v846, v613, 1, v883);
      sub_100003F10(v850, (uint64_t *)&unk_1006AF6E0);
      uint64_t v605 = (uint64_t)v912;
    }
    else
    {
      uint64_t v614 = v901;
      v901(v606, v609);
      v614(v608, v609);
      uint64_t v582 = v614;
      uint64_t v615 = v846;
      ((void (*)(char *, uint64_t, uint64_t))v908)(v846, v584, v607);
      uint64_t v616 = v607;
      uint64_t v600 = (uint64_t)v615;
      v593((uint64_t)v615, 0, 1, v616);
      uint64_t v601 = v888;
      v602 = v902;
      uint64_t v603 = v609;
      uint64_t v605 = (uint64_t)v912;
      uint64_t v604 = v913;
      uint64_t v581 = (uint64_t)v898;
    }
    sub_100003F10(v852, (uint64_t *)&unk_1006AF6E0);
  }
  else
  {
    v582(v594, v595);
    uint64_t v600 = (uint64_t)v846;
    ((void (*)(char *, uint64_t, uint64_t))v908)(v846, v583, v592);
    v593(v600, 0, 1, v592);
    uint64_t v601 = v888;
    v602 = v902;
    uint64_t v603 = v595;
    uint64_t v605 = (uint64_t)v912;
    uint64_t v604 = v913;
  }
  uint64_t v622 = v896;
  uint64_t v623 = v911;
  sub_100067E48(v600, (uint64_t)v602 + v911[33], (uint64_t *)&unk_1006AF6E0);
  *((unsigned char *)v602 + v623[36]) = FMIPDevice.shouldDisplaySeparatedLocation.getter() & 1;
  uint64_t v624 = v867;
  sub_100006AB0(v581, v867, (uint64_t *)&unk_1006AFE30);
  uint64_t v625 = v843;
  ((void (*)(char *, uint64_t, uint64_t))v622)(v843, v605, v603);
  if (v899)
  {
    uint64_t v626 = v803;
    sub_100006AB0(v624, v803, (uint64_t *)&unk_1006AFE30);
    if (v889((char *)v626, 1, v604) == 1)
    {
      v582(v625, v603);
      sub_100003F10(v624, (uint64_t *)&unk_1006AFE30);
      char v627 = 0;
      uint64_t v867 = v626;
    }
    else
    {
      uint64_t v628 = v814;
      FMIPItem.state.getter();
      (*(void (**)(uint64_t, uint64_t))(v891 + 8))(v626, v604);
      uint64_t v629 = v815;
      static FMIPItemState.isLocating.getter();
      sub_1004B825C((unint64_t *)&qword_1006BEB30, (void (*)(uint64_t))&type metadata accessor for FMIPItemState);
      uint64_t v630 = v817;
      char v627 = dispatch thunk of SetAlgebra.isSuperset(of:)();
      uint64_t v631 = *(void (**)(char *, uint64_t))(v816 + 8);
      v631(v629, v630);
      v631(v628, v630);
      v901(v625, v603);
    }
  }
  else
  {
    char v627 = FMIPDevice.isLocating.getter();
    v582(v625, v603);
  }
  uint64_t v632 = (uint64_t)v836;
  sub_100003F10(v867, (uint64_t *)&unk_1006AFE30);
  *((unsigned char *)v602 + v911[28]) = v627 & 1;
  uint64_t v633 = v845;
  sub_100006AB0(v601, v845, (uint64_t *)&unk_1006B2AE0);
  uint64_t v634 = v907;
  if (v905(v633, 1, v907) != 1)
  {
    v636 = (void *)FMIPLocation.location.getter();
    (*(void (**)(uint64_t, uint64_t))(v840 + 8))(v633, v634);
    [v636 horizontalAccuracy];
    double v635 = v637;

    if ((~*(void *)&v635 & 0x7FF0000000000000) != 0)
    {
      if (v635 <= -9.22337204e18)
      {
        __break(1u);
      }
      else if (v635 < 9.22337204e18)
      {
        goto LABEL_263;
      }
      __break(1u);
    }
    __break(1u);
LABEL_298:
    swift_once();
    goto LABEL_274;
  }
  sub_100003F10(v633, (uint64_t *)&unk_1006B2AE0);
  double v635 = 0.0;
LABEL_263:
  uint64_t v638 = v823;
  v639 = v822;
  uint64_t v640 = v824;
  (*(void (**)(char *, void, uint64_t))(v823 + 104))(v822, enum case for FMIPConfigValue.inaccuracyRadiusThreshold(_:), v824);
  *(void *)&long long v914 = 0x7FFFFFFFFFFFFFFFLL;
  FMIPGlobalConfig<A>(_:fallback:)();
  (*(void (**)(char *, uint64_t))(v638 + 8))(v639, v640);
  *((unsigned char *)v602 + v911[34]) = (uint64_t)v916 < (uint64_t)v635;
  uint64_t v641 = FMIPDevice.ownerIdentifier.getter();
  uint64_t v643 = v642;
  if (v641 == FMIPDefaultOwnerIdentifier.getter() && v643 == v644)
  {
    swift_bridgeObjectRelease_n();
    char v645 = 0;
  }
  else
  {
    char v646 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v645 = v646 ^ 1;
  }
  uint64_t v647 = v901;
  uint64_t v649 = v911;
  uint64_t v648 = (uint64_t)v912;
  *((unsigned char *)v602 + v911[35]) = v645 & 1;
  uint64_t v650 = (uint64_t)v821;
  FMIPDevice.itemGroup.getter();
  BOOL v651 = v876((char *)v650, 1, v884) != 1;
  sub_100003F10(v650, &qword_1006B36B0);
  *((unsigned char *)v602 + v649[37]) = v651;
  uint64_t v652 = v820;
  uint64_t v653 = v896;
  ((void (*)(char *, uint64_t, uint64_t))v896)(v820, v648, v603);
  if ((v897 & 0x2000) == 0)
  {
    v647(v652, v603);
    ((void (*)(uint64_t, uint64_t, uint64_t))v653)(v632, v648, v603);
LABEL_270:
    uint64_t v655 = v810;
    FMIPDevice.features.getter();
    uint64_t v656 = v811;
    static FMIPFeatures.isBTFindingSupported.getter();
    sub_1004B825C((unint64_t *)&qword_1006B36D0, (void (*)(uint64_t))&type metadata accessor for FMIPFeatures);
    uint64_t v657 = v813;
    char v658 = dispatch thunk of SetAlgebra.isSuperset(of:)();
    uint64_t v659 = *(void (**)(char *, uint64_t))(v812 + 8);
    uint64_t v660 = v656;
    uint64_t v661 = v903;
    v659(v660, v657);
    v659(v655, v657);
    uint64_t v647 = v901;
    v901((char *)v632, v661);
    goto LABEL_272;
  }
  char v654 = FMIPDevice.pairingIncomplete.getter();
  v647(v652, v603);
  ((void (*)(uint64_t, uint64_t, uint64_t))v653)(v632, v648, v603);
  if (v654) {
    goto LABEL_270;
  }
  char v658 = 1;
  v647((char *)v632, v603);
LABEL_272:
  uint64_t v662 = v911;
  *((unsigned char *)v602 + v911[39]) = v658 & 1;
  uint64_t v663 = v858;
  FMIPDevice.deviceConnectedState.getter();
  uint64_t v664 = v857;
  uint64_t v665 = v860;
  ((void (*)(char *, void, uint64_t))v827)(v857, enum case for FMIPDeviceConnectedStateType.attached(_:), v860);
  char v666 = static FMIPDeviceConnectedStateType.== infix(_:_:)();
  uint64_t v667 = v664;
  uint64_t v668 = v819;
  v819(v667, v665);
  v668(v663, v665);
  *((unsigned char *)v602 + v662[40]) = v666 & 1;
  *((unsigned char *)v602 + v662[41]) = FMIPDevice.removePairingLockLocally.getter() & 1;
  *((unsigned char *)v602 + v662[42]) = FMIPDevice.skipPasswordOnRemove.getter() & 1;
  *((unsigned char *)v602 + v662[43]) = FMIPDevice.warnLockOnUnattachedRemove.getter() & 1;
  if ((v899 & 1) == 0)
  {
    uint64_t v632 = (uint64_t)v898;
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v681 = type metadata accessor for Logger();
    sub_1000606BC(v681, (uint64_t)qword_1006D1E98);
    uint64_t v682 = v794;
    uint64_t v683 = (uint64_t)v912;
    uint64_t v684 = v903;
    uint64_t v685 = v896;
    ((void (*)(char *, char *, uint64_t))v896)(v794, v912, v903);
    uint64_t v686 = v809;
    ((void (*)(char *, uint64_t, uint64_t))v685)(v809, v683, v684);
    uint64_t v687 = Logger.logObject.getter();
    os_log_type_t v688 = static os_log_type_t.default.getter();
    int v689 = v688;
    if (os_log_type_enabled(v687, v688))
    {
      uint64_t v690 = swift_slowAlloc();
      *(_DWORD *)uint64_t v690 = 67109376;
      v691 = v864;
      FMIPDevice.state.getter();
      uint64_t v692 = v865;
      static FMIPDeviceState.isLocating.getter();
      uint64_t v693 = v866;
      LODWORD(v911) = v689;
      char v694 = dispatch thunk of SetAlgebra.isSuperset(of:)();
      uint64_t v913 = (uint64_t)v687;
      v695 = v887;
      v887(v692, v693);
      v695(v691, v693);
      v901(v682, v684);
      LODWORD(v916) = v694 & 1;
      v910 = (void *)((char *)&v916 + 4);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v690 + 8) = 1024;
      v696 = v809;
      FMIPDevice.state.getter();
      static FMIPDeviceState.isCrowdsourcedLocating.getter();
      char v697 = dispatch thunk of SetAlgebra.isSuperset(of:)();
      v695(v692, v693);
      v695(v691, v693);
      uint64_t v687 = v913;
      uint64_t v632 = (uint64_t)v898;
      v901(v696, v903);
      LODWORD(v916) = v697 & 1;
      uint64_t v684 = v903;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v687, (os_log_type_t)v911, "FMDeviceDetailViewModel: Locating states - device: %{BOOL}d ba: %{BOOL}d", (uint8_t *)v690, 0xEu);
      uint64_t v647 = v901;
      swift_slowDealloc();
    }
    else
    {
      v647(v686, v684);
      v647(v682, v684);
    }
    uint64_t v699 = v870;
    uint64_t v700 = (uint64_t)v818;
    v701 = v882;
    uint64_t v698 = v888;

    swift_release();
    v647(v912, v684);
    sub_100003F10(v871, (uint64_t *)&unk_1006BB9C0);
    sub_100003F10(v874, (uint64_t *)&unk_1006AF6E0);
    sub_100003F10(v875, &qword_1006B2AF0);
    sub_100003F10(v699, &qword_1006B2AF0);
    uint64_t v702 = v700;
    goto LABEL_286;
  }
  uint64_t v632 = (uint64_t)v898;
  if (qword_1006AE190 != -1) {
    goto LABEL_298;
  }
LABEL_274:
  uint64_t v669 = type metadata accessor for Logger();
  sub_1000606BC(v669, (uint64_t)qword_1006D1E98);
  uint64_t v670 = v807;
  sub_100006AB0(v632, v807, (uint64_t *)&unk_1006AFE30);
  uint64_t v671 = Logger.logObject.getter();
  os_log_type_t v672 = static os_log_type_t.default.getter();
  BOOL v673 = os_log_type_enabled(v671, v672);
  uint64_t v674 = v891;
  uint64_t v676 = (uint64_t)v912;
  uint64_t v675 = v913;
  uint64_t v677 = v903;
  if (v673)
  {
    uint64_t v678 = (uint8_t *)swift_slowAlloc();
    v911 = (int *)swift_slowAlloc();
    *(void *)&long long v916 = v911;
    *(_DWORD *)uint64_t v678 = 136315138;
    uint64_t v679 = v780;
    sub_100006AB0(v670, v780, (uint64_t *)&unk_1006AFE30);
    if (v889((char *)v679, 1, v675) == 1)
    {
      sub_100003F10(v679, (uint64_t *)&unk_1006AFE30);
      char v680 = 2;
    }
    else
    {
      v703 = v814;
      FMIPItem.state.getter();
      (*(void (**)(uint64_t, uint64_t))(v674 + 8))(v679, v675);
      v704 = v815;
      static FMIPItemState.isLocating.getter();
      sub_1004B825C((unint64_t *)&qword_1006BEB30, (void (*)(uint64_t))&type metadata accessor for FMIPItemState);
      uint64_t v705 = v817;
      char v706 = dispatch thunk of SetAlgebra.isSuperset(of:)();
      v707 = *(void (**)(char *, uint64_t))(v816 + 8);
      BOOL v708 = v704;
      uint64_t v632 = (uint64_t)v898;
      v707(v708, v705);
      v709 = v703;
      uint64_t v670 = v807;
      v707(v709, v705);
      char v680 = v706 & 1;
    }
    uint64_t v698 = v888;
    LOBYTE(v914) = v680;
    sub_10005D034(&qword_1006B0BC8);
    uint64_t v710 = String.init<A>(describing:)();
    *(void *)&long long v914 = sub_1000606F4(v710, v711, (uint64_t *)&v916);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100003F10(v670, (uint64_t *)&unk_1006AFE30);
    _os_log_impl((void *)&_mh_execute_header, v671, v672, "FMDeviceDetailViewModel: Locating states - device: %s", v678, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    v901((char *)v676, v903);
    sub_100003F10(v871, (uint64_t *)&unk_1006BB9C0);
    sub_100003F10(v874, (uint64_t *)&unk_1006AF6E0);
    sub_100003F10(v875, &qword_1006B2AF0);
    sub_100003F10(v870, &qword_1006B2AF0);
    uint64_t v702 = (uint64_t)v818;
LABEL_286:
    sub_100003F10(v702, (uint64_t *)&unk_1006C0380);
    goto LABEL_287;
  }

  swift_release();
  sub_100003F10(v670, (uint64_t *)&unk_1006AFE30);
  v901((char *)v676, v677);
  sub_100003F10(v871, (uint64_t *)&unk_1006BB9C0);
  sub_100003F10(v874, (uint64_t *)&unk_1006AF6E0);
  sub_100003F10(v875, &qword_1006B2AF0);
  sub_100003F10(v870, &qword_1006B2AF0);
  sub_100003F10((uint64_t)v818, (uint64_t *)&unk_1006C0380);
  uint64_t v698 = v888;
LABEL_287:
  sub_100003F10(v698, (uint64_t *)&unk_1006B2AE0);
  sub_100003F10(v632, (uint64_t *)&unk_1006AFE30);
  swift_bridgeObjectRelease();
  return sub_100003F10(v859, &qword_1006B3700);
}

uint64_t sub_1004AC2E8(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v268 = a3;
  uint64_t v272 = type metadata accessor for FMIPPartType();
  int v259 = *(char **)(v272 - 8);
  uint64_t v5 = __chkstk_darwin(v272);
  uint64_t v271 = (char *)&v234 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v256 = (char *)&v234 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v257 = (char *)&v234 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v238 = (char *)&v234 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v263 = (char *)&v234 - v14;
  __chkstk_darwin(v13);
  int v240 = (char *)&v234 - v15;
  uint64_t v261 = (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FMIPDevice();
  uint64_t v262 = (unsigned int (*)(char *, uint64_t, uint64_t))*((void *)v261 - 1);
  uint64_t v16 = __chkstk_darwin(v261);
  uint64_t v252 = (char *)&v234 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  int v241 = (char *)&v234 - v18;
  uint64_t v19 = sub_10005D034(&qword_1006B36B0);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  char v253 = (void (**)(uint64_t, char *))((char *)&v234 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v234 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  unint64_t v244 = (char *)&v234 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  unint64_t v243 = (char *)&v234 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  unint64_t v250 = (char *)&v234 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v237 = (char *)&v234 - v32;
  __chkstk_darwin(v31);
  unint64_t v249 = (char *)&v234 - v33;
  uint64_t v34 = type metadata accessor for FMIPItem();
  uint64_t v35 = *(char **)(v34 - 8);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v273 = (char *)&v234 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v260 = (char *)&v234 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  unint64_t v248 = (char *)&v234 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  unint64_t v258 = (char *)&v234 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  int64_t v265 = (int64_t)&v234 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  unint64_t v245 = (char *)&v234 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  uint64_t v251 = (char *)&v234 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  uint64_t v270 = (char *)&v234 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v269 = (char *)&v234 - v53;
  __chkstk_darwin(v52);
  BOOL v255 = (char *)&v234 - v54;
  uint64_t v55 = type metadata accessor for FMSelectedSection();
  __chkstk_darwin(v55);
  uint64_t v57 = (char *)&v234 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  uint64_t v59 = __chkstk_darwin(v58 - 8);
  uint64_t v264 = (char *)&v234 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __chkstk_darwin(v59);
  unint64_t v246 = (char *)&v234 - v62;
  uint64_t v63 = __chkstk_darwin(v61);
  uint64_t v254 = (char *)&v234 - v64;
  uint64_t v65 = __chkstk_darwin(v63);
  unint64_t v247 = (char *)&v234 - v66;
  uint64_t v67 = __chkstk_darwin(v65);
  unint64_t v242 = (unsigned int (*)(char *, uint64_t, char *))((char *)&v234 - v68);
  uint64_t v69 = __chkstk_darwin(v67);
  unint64_t v239 = (char *)&v234 - v70;
  uint64_t v71 = __chkstk_darwin(v69);
  uint64_t v73 = (char *)&v234 - v72;
  __chkstk_darwin(v71);
  uint64_t v266 = (void (**)(char *, uint64_t))((char *)&v234 - v74);
  uint64_t v76 = v35 + 56;
  uint64_t v75 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((void *)v35 + 7);
  uint64_t v77 = a1;
  uint64_t v274 = v34;
  uint64_t v267 = v75;
  v75((char *)a1, 1, 1, v34);
  if ((FMIPDevice.shouldDisplaySeparatedLocation.getter() & 1) == 0)
  {
    FMIPDevice.itemGroup.getter();
    uint64_t v80 = type metadata accessor for FMIPItemGroup();
    uint64_t v81 = *(void *)(v80 - 8);
    uint64_t v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48);
    if (v82(v24, 1, v80) == 1)
    {
      sub_100003F10((uint64_t)v24, &qword_1006B36B0);
      uint64_t v83 = v264;
      v267(v264, 1, 1, v274);
LABEL_25:
      uint64_t v128 = (uint64_t)v83;
LABEL_26:
      sub_100003F10(v128, (uint64_t *)&unk_1006AFE30);
      return 0;
    }
    uint64_t v262 = v82;
    uint64_t v263 = (char *)(v81 + 48);
    unint64_t v250 = a2;
    uint64_t v84 = FMIPItemGroup.items.getter();
    uint64_t v86 = *(uint64_t (**)(uint64_t, uint64_t))(v81 + 8);
    uint64_t v85 = (char *)(v81 + 8);
    uint64_t v261 = v86;
    v86((uint64_t)v24, v80);
    uint64_t v87 = *(void *)(v84 + 16);
    if (v87)
    {
      uint64_t v257 = v85;
      unint64_t v258 = (char *)v80;
      uint64_t v251 = v35 + 56;
      uint64_t v236 = v77;
      BOOL v255 = v35;
      uint64_t v89 = (char *)*((void *)v35 + 2);
      uint64_t v88 = v35 + 16;
      uint64_t v269 = v89;
      unint64_t v90 = v84 + ((v88[64] + 32) & ~(unint64_t)v88[64]);
      LODWORD(v268) = enum case for FMIPPartType.case(_:);
      uint64_t v91 = (void (**)(char *, void, uint64_t))(v259 + 104);
      uint64_t v92 = (void (**)(char *, uint64_t))(v259 + 8);
      uint64_t v270 = v88;
      int64_t v265 = *((void *)v88 + 7);
      uint64_t v266 = (void (**)(char *, uint64_t))(v88 - 8);
      int v259 = (char *)v84;
      swift_bridgeObjectRetain();
      uint64_t v94 = v273;
      uint64_t v93 = v274;
      uint64_t v95 = v256;
      uint64_t v96 = v271;
      uint64_t v97 = v272;
      while (1)
      {
        ((void (*)(char *, unint64_t, uint64_t))v269)(v94, v90, v93);
        FMIPItem.partType.getter();
        (*v91)(v96, v268, v97);
        sub_1004B825C(&qword_1006B5E78, (void (*)(uint64_t))&type metadata accessor for FMIPPartType);
        dispatch thunk of RawRepresentable.rawValue.getter();
        dispatch thunk of RawRepresentable.rawValue.getter();
        if (v277 == v279 && v278 == v280) {
          break;
        }
        char v99 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v100 = *v92;
        (*v92)(v96, v97);
        v100(v95, v97);
        if (v99) {
          goto LABEL_22;
        }
        uint64_t v94 = v273;
        uint64_t v93 = v274;
        (*v266)(v273, v274);
        v90 += v265;
        if (!--v87)
        {
          swift_bridgeObjectRelease();
          uint64_t v101 = 1;
          uint64_t v35 = v255;
          uint64_t v77 = v236;
          uint64_t v83 = v264;
          goto LABEL_23;
        }
      }
      swift_bridgeObjectRelease_n();
      uint64_t v124 = *v92;
      (*v92)(v96, v97);
      v124(v95, v97);
LABEL_22:
      swift_bridgeObjectRelease();
      uint64_t v35 = v255;
      uint64_t v83 = v264;
      uint64_t v93 = v274;
      (*((void (**)(char *, char *, uint64_t))v255 + 4))(v264, v273, v274);
      uint64_t v101 = 0;
      uint64_t v77 = v236;
LABEL_23:
      uint64_t v80 = (uint64_t)v258;
    }
    else
    {
      uint64_t v101 = 1;
      uint64_t v93 = v274;
      uint64_t v83 = v264;
    }
    uint64_t v125 = v267;
    v267(v83, v101, 1, v93);
    swift_bridgeObjectRelease();
    int v126 = (*((uint64_t (**)(char *, uint64_t, uint64_t))v35 + 6))(v83, 1, v93);
    uint64_t v127 = v260;
    if (v126 == 1) {
      goto LABEL_25;
    }
    sub_100003F10(v77, (uint64_t *)&unk_1006AFE30);
    (*((void (**)(char *, char *, uint64_t))v35 + 4))(v127, v83, v93);
    (*((void (**)(uint64_t, char *, uint64_t))v35 + 2))(v77, v127, v93);
    v125((char *)v77, 0, 1, v93);
    uint64_t v129 = (uint64_t)v253;
    FMIPDevice.itemGroup.getter();
    if (v262((char *)v129, 1, v80) == 1)
    {
      sub_100003F10(v129, &qword_1006B36B0);
    }
    else
    {
      uint64_t v130 = FMIPItemGroup.groupedItems.getter();
      uint64_t v131 = v261(v129, v80);
      __chkstk_darwin(v131);
      *(&v234 - 2) = (uint64_t)v127;
      uint64_t v132 = sub_100495F50(sub_1004B81AC, (uint64_t)(&v234 - 4), v130);
      swift_bridgeObjectRelease();
      if (v132)
      {
        uint64_t v79 = sub_1004AE964(v132, &qword_1006AF030, (uint64_t (*)(void))&type metadata accessor for FMIPItem, (uint64_t (*)(void))&type metadata accessor for FMIPItem);
        swift_bridgeObjectRelease();
LABEL_32:
        (*((void (**)(char *, uint64_t))v35 + 1))(v127, v274);
        return (uint64_t)v79;
      }
    }
    uint64_t v79 = 0;
    goto LABEL_32;
  }
  uint64_t v78 = *(void *)(v268 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100028164(v78, (uint64_t)v57);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_100028108((uint64_t)v57);
    return 0;
  }
  uint64_t v102 = sub_10005D034(&qword_1006BAF00);
  uint64_t v103 = v266;
  sub_100067E48((uint64_t)&v57[*(int *)(v102 + 48)], (uint64_t)v266, (uint64_t *)&unk_1006AFE30);
  uint64_t v104 = (char *)v262 + 8;
  uint64_t v105 = v261;
  uint64_t v256 = (char *)*((void *)v262 + 1);
  ((void (*)(char *, uint64_t (*)(uint64_t, uint64_t)))v256)(v57, v261);
  sub_100006AB0((uint64_t)v103, (uint64_t)v73, (uint64_t *)&unk_1006AFE30);
  uint64_t v106 = (char *)*((void *)v35 + 6);
  uint64_t v107 = v274;
  uint64_t v268 = (uint64_t)(v35 + 48);
  uint64_t v264 = v106;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v106)(v73, 1, v274) == 1)
  {
    sub_100003F10((uint64_t)v73, (uint64_t *)&unk_1006AFE30);
    uint64_t v108 = v250;
    FMIPDevice.itemGroup.getter();
    uint64_t v109 = (uint64_t)v108;
    uint64_t v110 = type metadata accessor for FMIPItemGroup();
    uint64_t v111 = *(char **)(v110 - 8);
    uint64_t v112 = (unsigned int (*)(char *, uint64_t, char *))*((void *)v111 + 6);
    unint64_t v245 = v111 + 48;
    unint64_t v242 = v112;
    unsigned int v113 = v112((char *)v109, 1, (char *)v110);
    unint64_t v249 = (char *)v110;
    char v253 = (void (**)(uint64_t, char *))v111;
    if (v113 == 1)
    {
      sub_100003F10(v109, &qword_1006B36B0);
      uint64_t v114 = v254;
      uint64_t v115 = v274;
      v267(v254, 1, 1, v274);
      uint64_t v116 = v272;
    }
    else
    {
      BOOL v255 = v35;
      uint64_t v133 = FMIPItemGroup.items.getter();
      (*((void (**)(uint64_t, uint64_t))v111 + 1))(v109, v110);
      uint64_t v134 = (char *)v133;
      uint64_t v135 = *(void *)(v133 + 16);
      uint64_t v115 = v274;
      uint64_t v116 = v272;
      if (v135)
      {
        uint64_t v235 = v104;
        uint64_t v251 = v76;
        unint64_t v250 = a2;
        uint64_t v236 = v77;
        uint64_t v271 = (char *)*((void *)v255 + 2);
        uint64_t v136 = &v134[(v255[80] + 32) & ~(unint64_t)v255[80]];
        LODWORD(v270) = enum case for FMIPPartType.case(_:);
        uint64_t v137 = (void (**)(char *, void, uint64_t))(v259 + 104);
        uint64_t v138 = (void (**)(char *, uint64_t))(v259 + 8);
        uint64_t v269 = v255 + 8;
        uint64_t v273 = v255 + 16;
        uint64_t v260 = (char *)*((void *)v255 + 9);
        int v241 = v134;
        swift_bridgeObjectRetain();
        uint64_t v139 = v240;
        int64_t v140 = v265;
        uint64_t v141 = v263;
        while (1)
        {
          ((void (*)(int64_t, char *, uint64_t))v271)(v140, v136, v115);
          FMIPItem.partType.getter();
          (*v137)(v141, v270, v116);
          sub_1004B825C(&qword_1006B5E78, (void (*)(uint64_t))&type metadata accessor for FMIPPartType);
          dispatch thunk of RawRepresentable.rawValue.getter();
          dispatch thunk of RawRepresentable.rawValue.getter();
          if (v279 == v275 && v280 == v276) {
            break;
          }
          char v143 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v144 = *v138;
          (*v138)(v141, v116);
          v144(v139, v116);
          if (v143) {
            goto LABEL_80;
          }
          int64_t v140 = v265;
          uint64_t v115 = v274;
          (*(void (**)(int64_t, uint64_t))v269)(v265, v274);
          uint64_t v136 = &v260[(void)v136];
          if (!--v135)
          {
            swift_bridgeObjectRelease();
            uint64_t v77 = v236;
            a2 = v250;
            uint64_t v76 = v251;
            uint64_t v105 = v261;
            uint64_t v104 = v235;
            goto LABEL_42;
          }
        }
        swift_bridgeObjectRelease_n();
        uint64_t v190 = *v138;
        (*v138)(v141, v116);
        v190(v139, v116);
LABEL_80:
        swift_bridgeObjectRelease();
        uint64_t v35 = v255;
        uint64_t v114 = v254;
        uint64_t v115 = v274;
        (*((void (**)(char *, int64_t, uint64_t))v255 + 4))(v254, v265, v274);
        uint64_t v76 = v251;
        v267(v114, 0, 1, v115);
        swift_bridgeObjectRelease();
        uint64_t v77 = v236;
        a2 = v250;
        uint64_t v105 = v261;
        uint64_t v104 = v235;
      }
      else
      {
LABEL_42:
        uint64_t v114 = v254;
        v267(v254, 1, 1, v115);
        swift_bridgeObjectRelease();
        uint64_t v35 = v255;
      }
    }
    uint64_t v191 = v252;
    (*((void (**)(char *, char *, uint64_t (*)(uint64_t, uint64_t)))v262 + 2))(v252, a2, v105);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v264)(v114, 1, v115) == 1)
    {
      uint64_t v192 = v243;
      FMIPDevice.itemGroup.getter();
      uint64_t v193 = (uint64_t)v192;
      uint64_t v194 = v192;
      uint64_t v195 = v249;
      if (v242(v194, 1, v249) == 1)
      {
        ((void (*)(char *, uint64_t (*)(uint64_t, uint64_t)))v256)(v191, v105);
        sub_100003F10(v193, &qword_1006B36B0);
        uint64_t v196 = (uint64_t)v247;
        uint64_t v115 = v274;
        v267(v247, 1, 1, v274);
        uint64_t v197 = v248;
        uint64_t v198 = (uint64_t)v246;
        uint64_t v199 = (uint64_t)v254;
        uint64_t v200 = v253;
      }
      else
      {
        uint64_t v236 = v77;
        uint64_t v201 = FMIPItemGroup.items.getter();
        v253[1](v193, v195);
        uint64_t v202 = *(void *)(v201 + 16);
        if (v202)
        {
          uint64_t v235 = v104;
          uint64_t v251 = v76;
          unint64_t v250 = a2;
          BOOL v255 = v35;
          uint64_t v203 = (uint64_t)(v35 + 16);
          uint64_t v273 = (char *)*((void *)v35 + 2);
          unint64_t v204 = v201 + ((v35[80] + 32) & ~(unint64_t)v35[80]);
          LODWORD(v271) = enum case for FMIPPartType.leftBud(_:);
          uint64_t v205 = (void (**)(char *, void, uint64_t))(v259 + 104);
          os_log_t v206 = (void (**)(char *, uint64_t))(v259 + 8);
          uint64_t v272 = v203;
          uint64_t v269 = *(char **)(v203 + 56);
          uint64_t v270 = (char *)(v203 - 8);
          int64_t v265 = v201;
          swift_bridgeObjectRetain();
          uint64_t v115 = v274;
          uint64_t v207 = v238;
          uint64_t v208 = v258;
          uint64_t v209 = v257;
          while (1)
          {
            ((void (*)(char *, unint64_t, uint64_t))v273)(v208, v204, v115);
            FMIPItem.partType.getter();
            (*v205)(v209, v271, v116);
            sub_1004B825C(&qword_1006B5E78, (void (*)(uint64_t))&type metadata accessor for FMIPPartType);
            dispatch thunk of RawRepresentable.rawValue.getter();
            dispatch thunk of RawRepresentable.rawValue.getter();
            if (v279 == v275 && v280 == v276) {
              break;
            }
            char v211 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v212 = *v206;
            (*v206)(v209, v116);
            v212(v207, v116);
            if (v211) {
              goto LABEL_103;
            }
            uint64_t v208 = v258;
            uint64_t v115 = v274;
            (*(void (**)(char *, uint64_t))v270)(v258, v274);
            v204 += (unint64_t)v269;
            if (!--v202)
            {
              swift_bridgeObjectRelease();
              uint64_t v213 = 1;
              uint64_t v35 = v255;
              uint64_t v214 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v267;
              uint64_t v105 = v261;
              uint64_t v196 = (uint64_t)v247;
              goto LABEL_104;
            }
          }
          swift_bridgeObjectRelease_n();
          uint64_t v226 = *v206;
          (*v206)(v209, v116);
          v226(v207, v116);
LABEL_103:
          swift_bridgeObjectRelease();
          uint64_t v35 = v255;
          uint64_t v196 = (uint64_t)v247;
          uint64_t v115 = v274;
          (*((void (**)(char *, char *, uint64_t))v255 + 4))(v247, v258, v274);
          uint64_t v213 = 0;
          uint64_t v214 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v267;
          uint64_t v105 = v261;
LABEL_104:
          uint64_t v195 = v249;
          v214(v196, v213, 1, v115);
        }
        else
        {
          uint64_t v115 = v274;
          uint64_t v196 = (uint64_t)v247;
          v267(v247, 1, 1, v274);
        }
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t (*)(uint64_t, uint64_t)))v256)(v252, v105);
        uint64_t v197 = v248;
        uint64_t v198 = (uint64_t)v246;
        uint64_t v199 = (uint64_t)v254;
        uint64_t v200 = v253;
        uint64_t v77 = v236;
      }
      sub_100003F10(v199, (uint64_t *)&unk_1006AFE30);
    }
    else
    {
      ((void (*)(char *, uint64_t (*)(uint64_t, uint64_t)))v256)(v191, v105);
      uint64_t v196 = (uint64_t)v247;
      (*((void (**)(char *, char *, uint64_t))v35 + 4))(v247, v114, v115);
      v267((char *)v196, 0, 1, v115);
      uint64_t v197 = v248;
      uint64_t v198 = (uint64_t)v246;
      uint64_t v195 = v249;
      uint64_t v200 = v253;
    }
    sub_100006AB0(v196, v198, (uint64_t *)&unk_1006AFE30);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v264)(v198, 1, v115) == 1)
    {
      sub_100003F10(v196, (uint64_t *)&unk_1006AFE30);
      sub_100003F10((uint64_t)v266, (uint64_t *)&unk_1006AFE30);
      uint64_t v128 = v198;
      goto LABEL_26;
    }
    sub_100003F10(v77, (uint64_t *)&unk_1006AFE30);
    (*((void (**)(char *, uint64_t, uint64_t))v35 + 4))(v197, v198, v115);
    (*((void (**)(uint64_t, char *, uint64_t))v35 + 2))(v77, v197, v115);
    v267((char *)v77, 0, 1, v115);
    uint64_t v227 = (uint64_t)v244;
    FMIPDevice.itemGroup.getter();
    if (v242((char *)v227, 1, v195) == 1)
    {
      sub_100003F10(v227, &qword_1006B36B0);
    }
    else
    {
      uint64_t v228 = FMIPItemGroup.groupedItems.getter();
      os_log_t v229 = v195;
      uint64_t v230 = v228;
      uint64_t v231 = ((uint64_t (*)(uint64_t, char *))v200[1])(v227, v229);
      __chkstk_darwin(v231);
      *(&v234 - 2) = (uint64_t)v197;
      uint64_t v232 = sub_100495F50(sub_1004B81DC, (uint64_t)(&v234 - 4), v230);
      swift_bridgeObjectRelease();
      if (v232)
      {
        uint64_t v79 = sub_1004AE964(v232, &qword_1006AF030, (uint64_t (*)(void))&type metadata accessor for FMIPItem, (uint64_t (*)(void))&type metadata accessor for FMIPItem);
        swift_bridgeObjectRelease();
LABEL_114:
        sub_100003F10(v196, (uint64_t *)&unk_1006AFE30);
        sub_100003F10((uint64_t)v266, (uint64_t *)&unk_1006AFE30);
        (*((void (**)(char *, uint64_t))v35 + 1))(v197, v274);
        return (uint64_t)v79;
      }
    }
    uint64_t v79 = 0;
    goto LABEL_114;
  }
  uint64_t v235 = v104;
  uint64_t v117 = (char *)*((void *)v35 + 4);
  uint64_t v118 = v255;
  uint64_t v272 = (uint64_t)(v35 + 32);
  uint64_t v273 = v117;
  ((void (*)(char *, char *, uint64_t))v117)(v255, v73, v107);
  uint64_t v119 = (uint64_t)v249;
  FMIPDevice.itemGroup.getter();
  uint64_t v120 = type metadata accessor for FMIPItemGroup();
  uint64_t v121 = *(void *)(v120 - 8);
  uint64_t v122 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v121 + 48);
  if (v122(v119, 1, v120) == 1)
  {
    sub_100003F10(v119, &qword_1006B36B0);
    unint64_t v123 = (unint64_t)v118;
    goto LABEL_69;
  }
  uint64_t v260 = (char *)v122;
  uint64_t v263 = (char *)(v121 + 48);
  uint64_t v236 = v77;
  uint64_t v145 = FMIPItemGroup.groupedItems.getter();
  uint64_t v147 = *(char **)(v121 + 8);
  uint64_t v146 = (char *)(v121 + 8);
  int v259 = v147;
  uint64_t v148 = ((uint64_t (*)(uint64_t, uint64_t))v147)(v119, v120);
  __chkstk_darwin(v148);
  *(&v234 - 2) = (uint64_t)v118;
  uint64_t v149 = sub_100495F50(sub_1004B81AC, (uint64_t)(&v234 - 4), v145);
  swift_bridgeObjectRelease();
  unint64_t v123 = (unint64_t)v118;
  if (!v149)
  {
LABEL_69:
    if (qword_1006AE190 != -1) {
LABEL_125:
    }
      swift_once();
    uint64_t v157 = v35;
    uint64_t v172 = type metadata accessor for Logger();
    sub_1000606BC(v172, (uint64_t)qword_1006D1E98);
    uint64_t v173 = Logger.logObject.getter();
    os_log_type_t v174 = static os_log_type_t.error.getter();
    BOOL v175 = os_log_type_enabled(v173, v174);
    uint64_t v176 = v266;
    if (v175)
    {
      uint64_t v177 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v177 = 0;
      _os_log_impl((void *)&_mh_execute_header, v173, v174, "FMDeviceDetailViewModel: We shouldn't be here. No group for this item", v177, 2u);
      swift_slowDealloc();
    }

    uint64_t v79 = 0;
    uint64_t v35 = (char *)v274;
LABEL_122:
    sub_100003F10((uint64_t)v176, (uint64_t *)&unk_1006AFE30);
    (*((void (**)(unint64_t, char *))v157 + 1))(v123, v35);
    return (uint64_t)v79;
  }
  uint64_t v257 = v146;
  unint64_t v258 = (char *)v120;
  unint64_t v250 = a2;
  uint64_t v150 = (char *)v149;
  uint64_t v153 = *(void *)(v149 + 56);
  uint64_t v152 = v149 + 56;
  uint64_t v151 = v153;
  uint64_t v154 = 1 << v150[32];
  uint64_t v155 = -1;
  if (v154 < 64) {
    uint64_t v155 = ~(-1 << v154);
  }
  unint64_t v123 = v155 & v151;
  int64_t v265 = (unint64_t)(v154 + 63) >> 6;
  uint64_t v156 = (char **)(v35 + 16);
  uint64_t v157 = v35;
  uint64_t v158 = (void (**)(char *, uint64_t))(v35 + 8);
  uint64_t v271 = v150;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v160 = 0;
  uint64_t v35 = (char *)v274;
  uint64_t v161 = v270;
  if (!v123) {
    goto LABEL_48;
  }
LABEL_47:
  uint64_t v162 = v76;
  unint64_t v163 = __clz(__rbit64(v123));
  v123 &= v123 - 1;
  for (unint64_t i = v163 | (v160 << 6); ; unint64_t i = __clz(__rbit64(v166)) + (v160 << 6))
  {
    unint64_t v168 = *((void *)v271 + 6) + *((void *)v157 + 9) * i;
    uint64_t v169 = v157;
    uint64_t v170 = (void (*)(char *, unint64_t, char *))*((void *)v157 + 2);
    uint64_t v171 = v269;
    v170(v269, v168, v35);
    ((void (*)(char *, char *, char *))v273)(v161, v171, v35);
    if (FMIPItem.primaryItemPart.getter())
    {
      swift_release();
      uint64_t v178 = (char *)v242;
      ((void (*)(unsigned int (*)(char *, uint64_t, char *), char *, char *))v273)(v242, v161, v35);
      uint64_t v179 = 0;
      uint64_t v157 = v169;
LABEL_75:
      uint64_t v180 = v267;
      v267(v178, v179, 1, (uint64_t)v35);
      uint64_t v181 = v241;
      uint64_t v182 = v261;
      (*((void (**)(char *, char *, uint64_t (*)(uint64_t, uint64_t)))v262 + 2))(v241, v250, v261);
      uint64_t v270 = *v156;
      ((void (*)(char *, char *, char *))v270)(v251, v255, v35);
      int v183 = ((uint64_t (*)(char *, uint64_t, char *))v264)(v178, 1, v35);
      uint64_t v184 = v236;
      if (v183 == 1)
      {
        uint64_t v185 = v236;
        uint64_t v186 = (uint64_t)v237;
        FMIPDevice.itemGroup.getter();
        uint64_t v187 = v258;
        if (((unsigned int (*)(uint64_t, uint64_t, char *))v260)(v186, 1, v258) == 1)
        {
          ((void (*)(char *, uint64_t (*)(uint64_t, uint64_t)))v256)(v181, v261);
          uint64_t v184 = v185;
          sub_100003F10(v185, (uint64_t *)&unk_1006AFE30);
          sub_100003F10(v186, &qword_1006B36B0);
          uint64_t v188 = (uint64_t)v239;
          uint64_t v35 = (char *)v274;
          v267(v239, 1, 1, v274);
          unint64_t v123 = (unint64_t)v255;
          uint64_t v189 = (uint64_t)v271;
        }
        else
        {
          uint64_t v215 = FMIPItemGroup.items.getter();
          ((void (*)(uint64_t, char *))v259)(v186, v187);
          uint64_t v216 = *(void *)(v215 + 16);
          if (v216)
          {
            unint64_t v217 = v215 + ((v157[80] + 32) & ~(unint64_t)v157[80]);
            uint64_t v268 = v215;
            swift_bridgeObjectRetain();
            uint64_t v269 = (char *)*((void *)v157 + 9);
            uint64_t v35 = (char *)v274;
            uint64_t v218 = v245;
            while (1)
            {
              ((void (*)(char *, unint64_t, char *))v270)(v218, v217, v35);
              uint64_t v219 = FMIPItem.identifier.getter();
              uint64_t v221 = v220;
              if (v219 == FMIPItem.identifier.getter() && v221 == v222) {
                break;
              }
              char v223 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v223) {
                goto LABEL_118;
              }
              uint64_t v218 = v245;
              uint64_t v35 = (char *)v274;
              (*v158)(v245, v274);
              v217 += (unint64_t)v269;
              if (!--v216)
              {
                swift_bridgeObjectRelease();
                uint64_t v224 = 1;
                uint64_t v225 = (void (*)(char *, uint64_t (*)(uint64_t, uint64_t)))v256;
                unint64_t v123 = (unint64_t)v255;
                uint64_t v181 = v241;
                goto LABEL_116;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_118:
            uint64_t v35 = (char *)v274;
            uint64_t v225 = (void (*)(char *, uint64_t (*)(uint64_t, uint64_t)))v256;
            uint64_t v189 = (uint64_t)v271;
            swift_bridgeObjectRelease();
            uint64_t v233 = v239;
            ((void (*)(char *, char *, char *))v273)(v239, v245, v35);
            uint64_t v224 = 0;
            unint64_t v123 = (unint64_t)v255;
            uint64_t v181 = v241;
          }
          else
          {
            uint64_t v224 = 1;
            uint64_t v35 = (char *)v274;
            uint64_t v225 = (void (*)(char *, uint64_t (*)(uint64_t, uint64_t)))v256;
            unint64_t v123 = (unint64_t)v255;
LABEL_116:
            uint64_t v233 = v239;
            uint64_t v189 = (uint64_t)v271;
          }
          v267(v233, v224, 1, (uint64_t)v35);
          swift_bridgeObjectRelease();
          v225(v181, v261);
          uint64_t v184 = v236;
          sub_100003F10(v236, (uint64_t *)&unk_1006AFE30);
          uint64_t v188 = (uint64_t)v233;
        }
        sub_100003F10((uint64_t)v242, (uint64_t *)&unk_1006AFE30);
        uint64_t v176 = v266;
      }
      else
      {
        ((void (*)(char *, uint64_t (*)(uint64_t, uint64_t)))v256)(v181, v182);
        sub_100003F10(v184, (uint64_t *)&unk_1006AFE30);
        uint64_t v188 = (uint64_t)v239;
        ((void (*)(char *, char *, char *))v273)(v239, v178, v35);
        v180((char *)v188, 0, 1, (uint64_t)v35);
        unint64_t v123 = (unint64_t)v255;
        uint64_t v176 = v266;
        uint64_t v189 = (uint64_t)v271;
      }
      (*v158)(v251, (uint64_t)v35);
      sub_100067E48(v188, v184, (uint64_t *)&unk_1006AFE30);
      uint64_t v79 = sub_1004AE964(v189, &qword_1006AF030, (uint64_t (*)(void))&type metadata accessor for FMIPItem, (uint64_t (*)(void))&type metadata accessor for FMIPItem);
      swift_bridgeObjectRelease();
      goto LABEL_122;
    }
    uint64_t result = ((uint64_t (*)(char *, char *))*v158)(v161, v35);
    uint64_t v157 = v169;
    uint64_t v76 = v162;
    if (v123) {
      goto LABEL_47;
    }
LABEL_48:
    int64_t v165 = v160 + 1;
    if (__OFADD__(v160, 1))
    {
      __break(1u);
      goto LABEL_125;
    }
    if (v165 >= v265)
    {
LABEL_74:
      swift_release();
      uint64_t v179 = 1;
      uint64_t v178 = (char *)v242;
      goto LABEL_75;
    }
    unint64_t v166 = *(void *)(v152 + 8 * v165);
    ++v160;
    if (!v166)
    {
      int64_t v160 = v165 + 1;
      if (v165 + 1 >= v265) {
        goto LABEL_74;
      }
      unint64_t v166 = *(void *)(v152 + 8 * v160);
      if (!v166)
      {
        int64_t v160 = v165 + 2;
        if (v165 + 2 >= v265) {
          goto LABEL_74;
        }
        unint64_t v166 = *(void *)(v152 + 8 * v160);
        if (!v166)
        {
          int64_t v160 = v165 + 3;
          if (v165 + 3 >= v265) {
            goto LABEL_74;
          }
          unint64_t v166 = *(void *)(v152 + 8 * v160);
          if (!v166)
          {
            int64_t v160 = v165 + 4;
            if (v165 + 4 >= v265) {
              goto LABEL_74;
            }
            unint64_t v166 = *(void *)(v152 + 8 * v160);
            if (!v166) {
              break;
            }
          }
        }
      }
    }
LABEL_65:
    uint64_t v162 = v76;
    unint64_t v123 = (v166 - 1) & v166;
  }
  int64_t v167 = v165 + 5;
  if (v167 >= v265) {
    goto LABEL_74;
  }
  unint64_t v166 = *(void *)(v152 + 8 * v167);
  if (v166)
  {
    int64_t v160 = v167;
    goto LABEL_65;
  }
  while (1)
  {
    int64_t v160 = v167 + 1;
    if (__OFADD__(v167, 1)) {
      break;
    }
    if (v160 >= v265) {
      goto LABEL_74;
    }
    unint64_t v166 = *(void *)(v152 + 8 * v160);
    ++v167;
    if (v166) {
      goto LABEL_65;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1004AE5C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 76);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

Swift::Int sub_1004AE638()
{
  return Hasher._finalize()();
}

uint64_t sub_1004AE694()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1004AE6EC()
{
  return Hasher._finalize()();
}

uint64_t sub_1004AE748()
{
  return sub_1004B825C(&qword_1006C0330, (void (*)(uint64_t))type metadata accessor for FMDeviceDetailViewModel);
}

uint64_t sub_1004AE790(uint64_t a1)
{
  uint64_t result = sub_1004B825C((unint64_t *)&unk_1006C0360, (void (*)(uint64_t))type metadata accessor for FMDeviceDetailViewModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1004AE7E8(void (*a1)(uint64_t *__return_ptr))
{
  a1(&v3);
  char v1 = v3;

  return FMSoundPlatterViewLayout.description.getter(v1);
}

void *sub_1004AE830(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (a1)
  {
    sub_10005D034(&qword_1006B2C40);
    uint64_t result = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
    result[2] = a1;
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_1004AE8D4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = 2 * a2;
  return result;
}

void *sub_1004AE8E4(unint64_t a1)
{
  return sub_1004AF530(a1, (void (*)(void *, uint64_t, unint64_t))sub_1004AF638);
}

void *sub_1004AE8FC(uint64_t a1)
{
  return sub_1004AE964(a1, &qword_1006AF030, (uint64_t (*)(void))&type metadata accessor for FMIPItem, (uint64_t (*)(void))&type metadata accessor for FMIPItem);
}

void *sub_1004AE930(uint64_t a1)
{
  return sub_1004AE964(a1, (uint64_t *)&unk_1006C0400, (uint64_t (*)(void))&type metadata accessor for FMFFriend, (uint64_t (*)(void))&type metadata accessor for FMFFriend);
}

void *sub_1004AE964(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  sub_10005D034(a2);
  uint64_t v8 = *(void *)(a3(0) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t result = (void *)j__malloc_size(v11);
  if (v9)
  {
    if ((void *)((char *)result - v10) != (void *)0x8000000000000000 || v9 != -1)
    {
      void v11[2] = v4;
      v11[3] = 2 * ((uint64_t)((uint64_t)result - v10) / v9);
      uint64_t v14 = sub_1004B10CC(&v15, (uint64_t)v11 + v10, v4, a1, a4);
      swift_bridgeObjectRetain();
      sub_1000814B8();
      if (v14 == v4) {
        return v11;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1004AEAC4(uint64_t a1)
{
  return sub_100062CB4(a1, &qword_1006B2BA8, (uint64_t (*)(void *, void *, uint64_t, uint64_t))sub_1004B00F4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000814B8);
}

void *sub_1004AEAF8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10005D034((uint64_t *)&unk_1006C0430);
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t result = (void *)j__malloc_size(v6);
  if (v4)
  {
    if ((void *)((char *)result - v5) != (void *)0x8000000000000000 || v4 != -1)
    {
      uint64_t v6[2] = v1;
      v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1004B02F8(&v10, (char *)v6 + v5, v1, a1);
      sub_1000814B8();
      if (v9 == v1) {
        return v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1004AEC2C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10005D034(&qword_1006B2B70);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 + 31;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 6);
  uint64_t v6 = sub_1004B06EC(&v8, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1000814B8();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_1004AED14(unint64_t a1)
{
  return sub_1004AF3F0(a1, (void (*)(void))type metadata accessor for FMMultiSettingsRowView, &qword_1006C0548, &qword_1006C0540, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_10025807C);
}

void *sub_1004AED50(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10005D034(&qword_1006B2C28);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  uint64_t v6 = sub_1004B0964((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1000814B8();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_1004AEE38(unint64_t a1)
{
  return sub_1004AF3F0(a1, (void (*)(void))type metadata accessor for FMMultiSettingsStatusRowView, (unint64_t *)&unk_1006C0508, &qword_1006C0500, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_10025807C);
}

void *sub_1004AEE74(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  int64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    if (v5 <= 0)
    {
      uint64_t v8 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        uint64_t v10 = v8 + 4;
        if (a2 + a3 < (unint64_t)v8 + v5 + 32 && (unint64_t)v10 < a2 + a3 + v5) {
          goto LABEL_17;
        }
        memcpy(v10, (const void *)(a2 + a3), v5);
        return v8;
      }
    }
    else
    {
      sub_10005D034(&qword_1006C0550);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = j__malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * v9 - 64;
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_1004AEFD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10005D034((uint64_t *)&unk_1006AEE90);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1004B0B60((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1000814B8();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_1004AF0B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10005D034(&qword_1006B2C18);
  uint64_t v3 = *(void *)(sub_10005D034(&qword_1006B2C20) - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t result = (void *)j__malloc_size(v6);
  if (v4)
  {
    if ((void *)((char *)result - v5) != (void *)0x8000000000000000 || v4 != -1)
    {
      uint64_t v6[2] = v1;
      v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      uint64_t v9 = *(void *)(sub_10005D034(&qword_1006B2C20) - 8);
      uint64_t v10 = sub_1004B0D60(&v11, (uint64_t)v6 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v1, a1);
      swift_bridgeObjectRetain();
      sub_1000814B8();
      if (v10 == v1) {
        return v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1004AF24C(uint64_t a1)
{
  return sub_1004AE964(a1, (uint64_t *)&unk_1006C0530, (uint64_t (*)(void))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t (*)(void))&type metadata accessor for FMIPPlaySoundChannels);
}

void *sub_1004AF280(unint64_t a1)
{
  return sub_1004AF3F0(a1, (void (*)(void))type metadata accessor for FMDeletableRowView, &qword_1006C0448, &qword_1006C0440, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_10025807C);
}

void *sub_1004AF2BC(uint64_t a1)
{
  return sub_1004AE964(a1, (uint64_t *)&unk_1006AEE80, (uint64_t (*)(void))&type metadata accessor for FMIPUnknownItem, (uint64_t (*)(void))&type metadata accessor for FMIPUnknownItem);
}

void *sub_1004AF2F0(uint64_t a1)
{
  return sub_1004AE964(a1, &qword_1006C04B0, (uint64_t (*)(void))&type metadata accessor for FMIPDiscoveredAccessory, (uint64_t (*)(void))&type metadata accessor for FMIPDiscoveredAccessory);
}

void *sub_1004AF324(unint64_t a1)
{
  return sub_1004AF3F0(a1, (void (*)(void))type metadata accessor for FMTrackAnnotation, &qword_1006C04D8, &qword_1006C04D0, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_10025807C);
}

void *sub_1004AF360(unint64_t a1)
{
  return sub_1004AF530(a1, (void (*)(void *, uint64_t, unint64_t))sub_1004AFC9C);
}

void *sub_1004AF378(unint64_t a1)
{
  return sub_1004AF3F0(a1, (void (*)(void))type metadata accessor for FMAnnotation, (unint64_t *)&unk_1006C0470, (uint64_t *)&unk_1006AF190, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1002580E8);
}

void *sub_1004AF3B4(unint64_t a1)
{
  return sub_1004AF3F0(a1, (void (*)(void))type metadata accessor for FMUnknownItemAnnotation, (unint64_t *)&unk_1006C0460, &qword_1006C0458, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_10025807C);
}

void *sub_1004AF3F0(unint64_t a1, void (*a2)(void), unint64_t *a3, uint64_t *a4, uint64_t (*a5)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v10 <= 0)
    {
      uint64_t v11 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_10005D034(&qword_1006AF2D0);
      uint64_t v11 = (void *)swift_allocObject();
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      void v11[2] = v10;
      v11[3] = (2 * (v13 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1004AF858((unint64_t)(v11 + 4), v10, a1, a2, a3, a4, a5);
    a5 = v14;
    swift_bridgeObjectRelease();
    if (a5 == (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))v10) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v10) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v11;
}

void *sub_1004AF518(unint64_t a1)
{
  return sub_1004AF530(a1, (void (*)(void *, uint64_t, unint64_t))sub_1004AFEBC);
}

void *sub_1004AF530(unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v4 <= 0)
    {
      unint64_t v5 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_10005D034(&qword_1006AF2D0);
      unint64_t v5 = (void *)swift_allocObject();
      int64_t v6 = j__malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      uint64_t v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(void *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v4) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v5;
}

uint64_t sub_1004AF638(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1004B82A4(&qword_1006C03F8, &qword_1006C03F0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10005D034(&qword_1006C03F0);
          int64_t v12 = sub_10025807C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100006060(0, (unint64_t *)&qword_1006B7C80);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004AF858(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = sub_1004B82A4(a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = sub_10005D034(a6);
          uint64_t v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          id v24 = *v23;
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004AFA7C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1004B82A4((unint64_t *)&unk_1006C0520, &qword_1006C0518);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10005D034(&qword_1006C0518);
          int64_t v12 = sub_10025807C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100006060(0, (unint64_t *)&qword_1006B79A0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004AFC9C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1004B82A4((unint64_t *)&unk_1006C0488, &qword_1006C0480);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10005D034(&qword_1006C0480);
          int64_t v12 = sub_10025807C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100006060(0, &qword_1006BD9B8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004AFEBC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1004B82A4(&qword_1006C0450, &qword_1006AEF28);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10005D034(&qword_1006AEF28);
          int64_t v12 = sub_10025807C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100006060(0, (unint64_t *)&unk_1006BEAA0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004B00DC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1004B10CC(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for FMIPItem);
}

uint64_t sub_1004B00F4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *unint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    *(unsigned char *)uint64_t v11 = *(unsigned char *)(*(void *)(a4 + 48) + v16);
    *(void *)(v11 + 8) = v20;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 16;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1004B02F8(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10005D034((uint64_t *)&unk_1006B1760);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t result = __chkstk_darwin(v11);
  uint64_t v40 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a4;
  uint64_t v15 = a4 + 64;
  uint64_t v14 = *(void *)(a4 + 64);
  uint64_t v32 = -1 << *(unsigned char *)(a4 + 32);
  if (-v32 < 64) {
    uint64_t v16 = ~(-1 << -(char)v32);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  if (!a2)
  {
    int64_t v18 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v28 = ~v32;
    *a1 = v42;
    a1[1] = v15;
    a1[2] = v28;
    a1[3] = v18;
    a1[4] = v17;
    return a3;
  }
  if (!a3)
  {
    int64_t v18 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v36 = a3;
  int64_t v18 = 0;
  a3 = 0;
  int64_t v19 = v40;
  uint64_t v38 = v41 + 16;
  uint64_t v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
  uint64_t v37 = v41 + 48;
  uint64_t v35 = (uint64_t (**)(char *, char *, uint64_t))(v41 + 32);
  uint64_t v33 = v15;
  int64_t v34 = (unint64_t)(63 - v32) >> 6;
  int64_t v30 = v34 - 1;
  uint64_t v31 = a1;
  if (!v17) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v21 = v20 | (v18 << 6);
  while (1)
  {
    uint64_t v25 = v41;
    uint64_t v26 = *(void *)(v41 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v10, *(void *)(v42 + 48) + v26 * v21, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v10, 1, v11) == 1)
    {
      uint64_t v15 = v33;
      goto LABEL_38;
    }
    ++a3;
    uint64_t v27 = *v35;
    (*v35)(v19, v10, v11);
    uint64_t result = v27(a2, v19, v11);
    if (a3 == v36)
    {
      a3 = v36;
      a1 = v31;
      uint64_t v15 = v33;
      goto LABEL_39;
    }
    a2 += v26;
    if (v17) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    uint64_t v15 = v33;
    if (v22 >= v34) {
      goto LABEL_37;
    }
    unint64_t v23 = *(void *)(v33 + 8 * v22);
    if (!v23)
    {
      int64_t v24 = v18 + 2;
      ++v18;
      if (v22 + 1 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * v24);
      if (v23) {
        goto LABEL_14;
      }
      int64_t v18 = v22 + 1;
      if (v22 + 2 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * (v22 + 2));
      if (v23)
      {
        v22 += 2;
      }
      else
      {
        int64_t v18 = v22 + 2;
        if (v22 + 3 >= v34) {
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v33 + 8 * (v22 + 3));
        if (!v23)
        {
          int64_t v24 = v22 + 4;
          int64_t v18 = v22 + 3;
          if (v22 + 4 < v34)
          {
            unint64_t v23 = *(void *)(v33 + 8 * v24);
            if (!v23)
            {
              while (1)
              {
                int64_t v22 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v22 >= v34)
                {
                  int64_t v18 = v30;
                  goto LABEL_37;
                }
                unint64_t v23 = *(void *)(v33 + 8 * v22);
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v22 = v24;
            goto LABEL_21;
          }
LABEL_37:
          (*v39)(v10, 1, 1, v11);
          unint64_t v17 = 0;
LABEL_38:
          sub_100003F10((uint64_t)v10, (uint64_t *)&unk_1006B1760);
          a1 = v31;
          goto LABEL_39;
        }
        v22 += 3;
      }
    }
LABEL_21:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    int64_t v18 = v22;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_1004B06EC(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v28 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v29 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v30 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v14 = v13 | (v11 << 6);
  while (1)
  {
    ++v12;
    int64_t v18 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = *(void *)(a4 + 56) + 48 * v14;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    uint64_t v25 = *(void *)(v21 + 24);
    char v26 = *(unsigned char *)(v21 + 32);
    uint64_t v27 = *(void *)(v21 + 40);
    *(void *)uint64_t v10 = v20;
    *(void *)(v10 + 8) = v19;
    *(void *)(v10 + 16) = v22;
    *(void *)(v10 + 24) = v23;
    *(void *)(v10 + 32) = v24;
    *(void *)(v10 + 40) = v25;
    *(unsigned char *)(v10 + 48) = v26;
    *(void *)(v10 + 56) = v27;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 64;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v15 >= v30) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    if (!v16)
    {
      v11 += 2;
      if (v15 + 1 >= v30)
      {
        unint64_t v8 = 0;
        int64_t v11 = v15;
      }
      else
      {
        unint64_t v16 = *(void *)(v5 + 8 * v11);
        if (v16) {
          goto LABEL_14;
        }
        int64_t v17 = v15 + 2;
        if (v15 + 2 >= v30) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v5 + 8 * v17);
        if (v16)
        {
LABEL_17:
          int64_t v15 = v17;
          goto LABEL_18;
        }
        int64_t v11 = v15 + 3;
        if (v15 + 3 < v30)
        {
          unint64_t v16 = *(void *)(v5 + 8 * v11);
          if (v16)
          {
LABEL_14:
            int64_t v15 = v11;
            goto LABEL_18;
          }
          int64_t v17 = v15 + 4;
          if (v15 + 4 >= v30)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v16 = *(void *)(v5 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              int64_t v15 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_42;
              }
              if (v15 >= v30)
              {
                unint64_t v8 = 0;
                int64_t v11 = v30 - 1;
                goto LABEL_37;
              }
              unint64_t v16 = *(void *)(v5 + 8 * v15);
              ++v17;
              if (v16) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v15 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v28;
      uint64_t result = v29;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v11 = v15;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1004B0964(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *int64_t v11 = *(void *)(*(void *)(a4 + 48) + 8 * v16);
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1004B0B60(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *int64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1004B0D60(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10005D034(&qword_1006B2C20);
  uint64_t v39 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  int64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v9);
  int64_t v14 = (char *)&v32 - v13;
  uint64_t v41 = a4;
  uint64_t v15 = *(void *)(a4 + 64);
  uint64_t v37 = a4 + 64;
  uint64_t v16 = -1 << *(unsigned char *)(a4 + 32);
  if (-v16 < 64) {
    uint64_t v17 = ~(-1 << -(char)v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  if (!a2)
  {
    int64_t v19 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v31 = v37;
    *a1 = v41;
    a1[1] = v31;
    a1[2] = ~v16;
    a1[3] = v19;
    a1[4] = v18;
    return a3;
  }
  if (!a3)
  {
    int64_t v19 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v34 = v16;
  uint64_t v35 = a1;
  int64_t v19 = 0;
  uint64_t v20 = 0;
  int64_t v36 = (unint64_t)(63 - v16) >> 6;
  int64_t v33 = v36 - 1;
  uint64_t v38 = a3;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v21 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  unint64_t v22 = v21 | (v19 << 6);
  while (1)
  {
    ++v20;
    uint64_t v26 = *(void *)(v41 + 56);
    uint64_t v27 = (uint64_t *)(*(void *)(v41 + 48) + 16 * v22);
    uint64_t v28 = *v27;
    uint64_t v29 = v27[1];
    uint64_t v30 = type metadata accessor for FMIPItemPairingState();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(&v11[*(int *)(v40 + 48)], v26 + *(void *)(*(void *)(v30 - 8) + 72) * v22, v30);
    *(void *)int64_t v11 = v28;
    *((void *)v11 + 1) = v29;
    sub_100067E48((uint64_t)v11, (uint64_t)v14, &qword_1006B2C20);
    sub_100067E48((uint64_t)v14, a2, &qword_1006B2C20);
    a3 = v38;
    if (v20 == v38)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    a2 += *(void *)(v39 + 72);
    uint64_t result = swift_bridgeObjectRetain();
    if (v18) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v23 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v23 >= v36) {
      goto LABEL_33;
    }
    unint64_t v24 = *(void *)(v37 + 8 * v23);
    if (!v24)
    {
      v19 += 2;
      if (v23 + 1 >= v36)
      {
        unint64_t v18 = 0;
        int64_t v19 = v23;
      }
      else
      {
        unint64_t v24 = *(void *)(v37 + 8 * v19);
        if (v24) {
          goto LABEL_14;
        }
        int64_t v25 = v23 + 2;
        if (v23 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (v24)
        {
LABEL_17:
          int64_t v23 = v25;
          goto LABEL_18;
        }
        int64_t v19 = v23 + 3;
        if (v23 + 3 < v36)
        {
          unint64_t v24 = *(void *)(v37 + 8 * v19);
          if (v24)
          {
LABEL_14:
            int64_t v23 = v19;
            goto LABEL_18;
          }
          int64_t v25 = v23 + 4;
          if (v23 + 4 >= v36)
          {
LABEL_33:
            unint64_t v18 = 0;
            goto LABEL_37;
          }
          unint64_t v24 = *(void *)(v37 + 8 * v25);
          if (!v24)
          {
            while (1)
            {
              int64_t v23 = v25 + 1;
              if (__OFADD__(v25, 1)) {
                goto LABEL_42;
              }
              if (v23 >= v36)
              {
                unint64_t v18 = 0;
                int64_t v19 = v33;
                goto LABEL_37;
              }
              unint64_t v24 = *(void *)(v37 + 8 * v23);
              ++v25;
              if (v24) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v18 = 0;
        int64_t v19 = v23 + 2;
      }
LABEL_37:
      a3 = v20;
LABEL_38:
      uint64_t v16 = v34;
      a1 = v35;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v18 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    int64_t v19 = v23;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1004B10CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v9 = a5(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v43 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v11);
  uint64_t v42 = (char *)&v33 - v14;
  uint64_t v44 = a4;
  uint64_t v17 = *(void *)(a4 + 56);
  uint64_t v16 = a4 + 56;
  uint64_t v15 = v17;
  uint64_t v38 = v16;
  uint64_t v18 = -1 << *(unsigned char *)(v16 - 24);
  if (-v18 < 64) {
    uint64_t v19 = ~(-1 << -(char)v18);
  }
  else {
    uint64_t v19 = -1;
  }
  unint64_t v20 = v19 & v15;
  if (!a2)
  {
    int64_t v21 = 0;
    a3 = 0;
LABEL_38:
    uint64_t v32 = v38;
    *a1 = v44;
    a1[1] = v32;
    a1[2] = ~v18;
    a1[3] = v21;
    a1[4] = v20;
    return a3;
  }
  if (!a3)
  {
    int64_t v21 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v35 = -1 << *(unsigned char *)(v16 - 24);
  int64_t v36 = a1;
  int64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v39 = v10 + 32;
  uint64_t v40 = v10 + 16;
  int64_t v37 = (unint64_t)(63 - v18) >> 6;
  int64_t v34 = v37 - 1;
  uint64_t v41 = a3;
  int64_t v23 = v42;
  if (!v20) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v24 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  unint64_t v25 = v24 | (v21 << 6);
  while (1)
  {
    ++v22;
    uint64_t v29 = v43;
    uint64_t v30 = *(void *)(v10 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v43, *(void *)(v44 + 48) + v30 * v25, v9);
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v31(v23, v29, v9);
    uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v31)(a2, v23, v9);
    a3 = v41;
    if (v22 == v41) {
      goto LABEL_37;
    }
    a2 += v30;
    if (v20) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v26 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v37) {
      goto LABEL_32;
    }
    unint64_t v27 = *(void *)(v38 + 8 * v26);
    if (!v27) {
      break;
    }
LABEL_18:
    unint64_t v20 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v21 = v26;
  }
  v21 += 2;
  if (v26 + 1 >= v37)
  {
    unint64_t v20 = 0;
    int64_t v21 = v26;
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v38 + 8 * v21);
  if (v27) {
    goto LABEL_14;
  }
  int64_t v28 = v26 + 2;
  if (v26 + 2 >= v37) {
    goto LABEL_32;
  }
  unint64_t v27 = *(void *)(v38 + 8 * v28);
  if (v27) {
    goto LABEL_17;
  }
  int64_t v21 = v26 + 3;
  if (v26 + 3 >= v37)
  {
    unint64_t v20 = 0;
    int64_t v21 = v26 + 2;
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v38 + 8 * v21);
  if (v27)
  {
LABEL_14:
    int64_t v26 = v21;
    goto LABEL_18;
  }
  int64_t v28 = v26 + 4;
  if (v26 + 4 >= v37)
  {
LABEL_32:
    unint64_t v20 = 0;
LABEL_36:
    a3 = v22;
LABEL_37:
    uint64_t v18 = v35;
    a1 = v36;
    goto LABEL_38;
  }
  unint64_t v27 = *(void *)(v38 + 8 * v28);
  if (v27)
  {
LABEL_17:
    int64_t v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v37)
    {
      unint64_t v20 = 0;
      int64_t v21 = v34;
      goto LABEL_36;
    }
    unint64_t v27 = *(void *)(v38 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1004B1418(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unint64_t v20 = *(void **)(*(void *)(a4 + 56) + 8 * v16);
    *uint64_t v11 = v20;
    if (v13 == v10)
    {
      id v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = v20;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1004B1614(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v99 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v98 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_10005D034((uint64_t *)&unk_1006AF7E0);
  __chkstk_darwin(v94);
  uint64_t v100 = (uint64_t)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v97 = (uint64_t)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v95 = (uint64_t)&v90 - v11;
  __chkstk_darwin(v10);
  uint64_t v96 = (uint64_t)&v90 - v12;
  uint64_t v13 = type metadata accessor for FMIPItem();
  uint64_t v101 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v15 = (char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10005D034((uint64_t *)&unk_1006C0410);
  __chkstk_darwin(v16);
  unint64_t v18 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v22 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20);
  unint64_t v25 = (char *)&v90 - v24;
  __chkstk_darwin(v23);
  unint64_t v27 = (char *)&v90 - v26;
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8))
  {
    char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
    LOBYTE(v29) = 0;
    if ((v28 & 1) == 0) {
      return v29 & 1;
    }
  }
  uint64_t v30 = *(void *)(a1 + 24);
  uint64_t v31 = *(void *)(a2 + 24);
  if (v30)
  {
    if (!v31) {
      goto LABEL_17;
    }
    if (*(void *)(a1 + 16) != *(void *)(a2 + 16) || v30 != v31)
    {
      char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
      LOBYTE(v29) = 0;
      if ((v32 & 1) == 0) {
        return v29 & 1;
      }
    }
  }
  else if (v31)
  {
    goto LABEL_17;
  }
  uint64_t v33 = *(void **)(a1 + 32);
  int64_t v34 = *(void **)(a2 + 32);
  if (!v33)
  {
    if (!v34) {
      goto LABEL_16;
    }
LABEL_17:
    LOBYTE(v29) = 0;
    return v29 & 1;
  }
  if (!v34 || (sub_10024A320(v33, v34) & 1) == 0) {
    goto LABEL_17;
  }
LABEL_16:
  if (*(unsigned __int8 *)(a1 + 40) != *(unsigned __int8 *)(a2 + 40)) {
    goto LABEL_17;
  }
  uint64_t v92 = v4;
  uint64_t v29 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48))
  {
    if (!v29) {
      return v29 & 1;
    }
    uint64_t v93 = *(void *)(a2 + 48);
    swift_bridgeObjectRetain();
    uint64_t v36 = swift_bridgeObjectRetain();
    LODWORD(v91) = sub_10024A3E8(v36, v93);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v91 & 1) == 0) {
      goto LABEL_17;
    }
  }
  else if (v29)
  {
    goto LABEL_17;
  }
  uint64_t v37 = type metadata accessor for FMDeviceDetailViewModel();
  sub_100006AB0(a1 + *(int *)(v37 + 36), (uint64_t)v27, (uint64_t *)&unk_1006AFE30);
  uint64_t v91 = (int *)v37;
  sub_100006AB0(a2 + *(int *)(v37 + 36), (uint64_t)v25, (uint64_t *)&unk_1006AFE30);
  uint64_t v38 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_100006AB0((uint64_t)v27, (uint64_t)v18, (uint64_t *)&unk_1006AFE30);
  uint64_t v93 = v38;
  sub_100006AB0((uint64_t)v25, v38, (uint64_t *)&unk_1006AFE30);
  uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48);
  if (v39((uint64_t)v18, 1, v13) == 1)
  {
    sub_100003F10((uint64_t)v25, (uint64_t *)&unk_1006AFE30);
    sub_100003F10((uint64_t)v27, (uint64_t *)&unk_1006AFE30);
    if (v39(v93, 1, v13) == 1)
    {
      sub_100003F10((uint64_t)v18, (uint64_t *)&unk_1006AFE30);
      goto LABEL_32;
    }
LABEL_29:
    uint64_t v40 = (uint64_t *)&unk_1006C0410;
    uint64_t v41 = (uint64_t)v18;
    goto LABEL_30;
  }
  sub_100006AB0((uint64_t)v18, (uint64_t)v22, (uint64_t *)&unk_1006AFE30);
  if (v39(v93, 1, v13) == 1)
  {
    sub_100003F10((uint64_t)v25, (uint64_t *)&unk_1006AFE30);
    sub_100003F10((uint64_t)v27, (uint64_t *)&unk_1006AFE30);
    (*(void (**)(char *, uint64_t))(v101 + 8))(v22, v13);
    goto LABEL_29;
  }
  uint64_t v42 = v101;
  (*(void (**)(char *, uint64_t, uint64_t))(v101 + 32))(v15, v93, v13);
  sub_1004B825C(&qword_1006B7010, (void (*)(uint64_t))&type metadata accessor for FMIPItem);
  LODWORD(v93) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v42 + 8);
  v43(v15, v13);
  sub_100003F10((uint64_t)v25, (uint64_t *)&unk_1006AFE30);
  sub_100003F10((uint64_t)v27, (uint64_t *)&unk_1006AFE30);
  v43(v22, v13);
  sub_100003F10((uint64_t)v18, (uint64_t *)&unk_1006AFE30);
  if ((v93 & 1) == 0) {
    goto LABEL_17;
  }
LABEL_32:
  uint64_t v44 = v91;
  uint64_t v29 = v91[10];
  uint64_t v45 = (void *)(a1 + v29);
  char v46 = *(unsigned char *)(a1 + v29 + 8);
  uint64_t v47 = (void *)(a2 + v29);
  LODWORD(v29) = *(unsigned __int8 *)(a2 + v29 + 8);
  if (v46)
  {
    if (!v29) {
      return v29 & 1;
    }
  }
  else
  {
    if (*v45 != *v47) {
      LOBYTE(v29) = 1;
    }
    if (v29) {
      goto LABEL_17;
    }
  }
  uint64_t v29 = v91[11];
  uint64_t v48 = (void *)(a1 + v29);
  char v49 = *(unsigned char *)(a1 + v29 + 8);
  uint64_t v50 = (void *)(a2 + v29);
  LODWORD(v29) = *(unsigned __int8 *)(a2 + v29 + 8);
  if (v49)
  {
    if (!v29) {
      return v29 & 1;
    }
  }
  else
  {
    if (*v48 != *v50) {
      LOBYTE(v29) = 1;
    }
    if (v29) {
      goto LABEL_17;
    }
  }
  uint64_t v51 = v91[12];
  uint64_t v52 = *(void *)(a2 + v51);
  if (*(void *)(a1 + v51))
  {
    if (!v52) {
      goto LABEL_17;
    }
    swift_bridgeObjectRetain();
    uint64_t v53 = swift_bridgeObjectRetain();
    char v54 = sub_10024A430(v53, v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v54 & 1) == 0) {
      goto LABEL_17;
    }
  }
  else if (v52)
  {
    goto LABEL_17;
  }
  if (*(unsigned __int8 *)(a1 + v44[13]) != *(unsigned __int8 *)(a2 + v44[13])) {
    goto LABEL_17;
  }
  uint64_t v55 = v44[14];
  uint64_t v56 = (void *)(a1 + v55);
  uint64_t v57 = *(void *)(a1 + v55 + 8);
  uint64_t v58 = (void *)(a2 + v55);
  uint64_t v59 = v58[1];
  if (v57)
  {
    if (!v59) {
      goto LABEL_17;
    }
    if (*v56 != *v58 || v57 != v59)
    {
      char v60 = _stringCompareWithSmolCheck(_:_:expecting:)();
      LOBYTE(v29) = 0;
      if ((v60 & 1) == 0) {
        return v29 & 1;
      }
    }
  }
  else if (v59)
  {
    goto LABEL_17;
  }
  if (*(unsigned __int8 *)(a1 + v44[15]) != *(unsigned __int8 *)(a2 + v44[15])) {
    goto LABEL_17;
  }
  uint64_t v61 = v44[16];
  uint64_t v62 = *(void *)(a1 + v61);
  uint64_t v63 = *(void *)(a1 + v61 + 8);
  uint64_t v64 = (void *)(a2 + v61);
  if (v62 == *v64 && v63 == v64[1]
    || (char v65 = _stringCompareWithSmolCheck(_:_:expecting:)(), LOBYTE(v29) = 0, (v65 & 1) != 0))
  {
    if ((uint64_t v66 = v44[17],
          uint64_t v67 = *(void *)(a1 + v66),
          uint64_t v68 = *(void *)(a1 + v66 + 8),
          uint64_t v69 = (void *)(a2 + v66),
          v67 == *v69)
      && v68 == v69[1]
      || (char v70 = _stringCompareWithSmolCheck(_:_:expecting:)(), LOBYTE(v29) = 0, (v70 & 1) != 0))
    {
      if ((uint64_t v71 = v44[18],
            uint64_t v72 = *(void *)(a1 + v71),
            uint64_t v73 = *(void *)(a1 + v71 + 8),
            uint64_t v74 = (void *)(a2 + v71),
            v72 == *v74)
        && v73 == v74[1]
        || (char v75 = _stringCompareWithSmolCheck(_:_:expecting:)(), LOBYTE(v29) = 0, (v75 & 1) != 0))
      {
        if ((static Date.== infix(_:_:)() & 1) == 0 || *(double *)(a1 + v91[20]) != *(double *)(a2 + v91[20])) {
          goto LABEL_17;
        }
        type metadata accessor for FMIPBatteryStatus();
        sub_1004B825C(&qword_1006B5E98, (void (*)(uint64_t))&type metadata accessor for FMIPBatteryStatus);
        dispatch thunk of RawRepresentable.rawValue.getter();
        dispatch thunk of RawRepresentable.rawValue.getter();
        if (v104 == v102 && v105 == v103)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v76 = v91;
        }
        else
        {
          char v77 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          LOBYTE(v29) = 0;
          uint64_t v76 = v91;
          if ((v77 & 1) == 0) {
            return v29 & 1;
          }
        }
        if (*(void *)(a1 + v76[22]) != *(void *)(a2 + v76[22])
          || *(void *)(a1 + v91[23]) != *(void *)(a2 + v91[23])
          || *(unsigned __int8 *)(a1 + v91[24]) != *(unsigned __int8 *)(a2 + v91[24])
          || *(unsigned __int8 *)(a1 + v91[25]) != *(unsigned __int8 *)(a2 + v91[25])
          || *(unsigned __int8 *)(a1 + v91[26]) != *(unsigned __int8 *)(a2 + v91[26])
          || *(unsigned __int8 *)(a1 + v91[27]) != *(unsigned __int8 *)(a2 + v91[27])
          || *(unsigned __int8 *)(a1 + v91[28]) != *(unsigned __int8 *)(a2 + v91[28])
          || *(unsigned __int8 *)(a1 + v91[29]) != *(unsigned __int8 *)(a2 + v91[29])
          || *(unsigned __int8 *)(a1 + v91[30]) != *(unsigned __int8 *)(a2 + v91[30])
          || *(unsigned __int8 *)(a1 + v91[31]) != *(unsigned __int8 *)(a2 + v91[31])
          || *(unsigned __int8 *)(a1 + v91[32]) != *(unsigned __int8 *)(a2 + v91[32]))
        {
          goto LABEL_17;
        }
        uint64_t v78 = v91;
        uint64_t v79 = v96;
        sub_100006AB0(a1 + v91[33], v96, (uint64_t *)&unk_1006AF6E0);
        uint64_t v80 = v95;
        sub_100006AB0(a2 + v78[33], v95, (uint64_t *)&unk_1006AF6E0);
        uint64_t v81 = v100;
        uint64_t v82 = v100 + *(int *)(v94 + 48);
        sub_100006AB0(v79, v100, (uint64_t *)&unk_1006AF6E0);
        sub_100006AB0(v80, v82, (uint64_t *)&unk_1006AF6E0);
        uint64_t v83 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48);
        if (v83(v81, 1, v92) == 1)
        {
          sub_100003F10(v95, (uint64_t *)&unk_1006AF6E0);
          sub_100003F10(v96, (uint64_t *)&unk_1006AF6E0);
          if (v83(v82, 1, v92) == 1)
          {
            sub_100003F10(v100, (uint64_t *)&unk_1006AF6E0);
            goto LABEL_91;
          }
        }
        else
        {
          sub_100006AB0(v100, v97, (uint64_t *)&unk_1006AF6E0);
          if (v83(v82, 1, v92) != 1)
          {
            uint64_t v84 = v98;
            uint64_t v85 = v99;
            uint64_t v86 = v92;
            (*(void (**)(char *, uint64_t, uint64_t))(v99 + 32))(v98, v82, v92);
            sub_1004B825C((unint64_t *)&qword_1006C0420, (void (*)(uint64_t))&type metadata accessor for Date);
            uint64_t v87 = v97;
            char v88 = dispatch thunk of static Equatable.== infix(_:_:)();
            uint64_t v89 = *(void (**)(char *, uint64_t))(v85 + 8);
            v89(v84, v86);
            sub_100003F10(v95, (uint64_t *)&unk_1006AF6E0);
            sub_100003F10(v96, (uint64_t *)&unk_1006AF6E0);
            v89((char *)v87, v86);
            sub_100003F10(v100, (uint64_t *)&unk_1006AF6E0);
            if ((v88 & 1) == 0) {
              goto LABEL_17;
            }
LABEL_91:
            if (*(unsigned __int8 *)(a1 + v91[34]) == *(unsigned __int8 *)(a2 + v91[34])
              && *(unsigned __int8 *)(a1 + v91[35]) == *(unsigned __int8 *)(a2 + v91[35])
              && *(unsigned __int8 *)(a1 + v91[36]) == *(unsigned __int8 *)(a2 + v91[36])
              && *(unsigned __int8 *)(a1 + v91[37]) == *(unsigned __int8 *)(a2 + v91[37])
              && (sub_10024A690(*(void *)(a1 + v91[38]), *(void *)(a2 + v91[38])) & 1) != 0
              && *(unsigned __int8 *)(a1 + v91[39]) == *(unsigned __int8 *)(a2 + v91[39])
              && *(unsigned __int8 *)(a1 + v91[40]) == *(unsigned __int8 *)(a2 + v91[40])
              && *(unsigned __int8 *)(a1 + v91[41]) == *(unsigned __int8 *)(a2 + v91[41])
              && *(unsigned __int8 *)(a1 + v91[42]) == *(unsigned __int8 *)(a2 + v91[42]))
            {
              LOBYTE(v29) = *(unsigned char *)(a1 + v91[43]) ^ *(unsigned char *)(a2 + v91[43]) ^ 1;
              return v29 & 1;
            }
            goto LABEL_17;
          }
          sub_100003F10(v95, (uint64_t *)&unk_1006AF6E0);
          sub_100003F10(v96, (uint64_t *)&unk_1006AF6E0);
          (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v97, v92);
        }
        uint64_t v40 = (uint64_t *)&unk_1006AF7E0;
        uint64_t v41 = v100;
LABEL_30:
        sub_100003F10(v41, v40);
        goto LABEL_17;
      }
    }
  }
  return v29 & 1;
}

char *sub_1004B2348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a3;
  uint64_t v36 = type metadata accessor for FMIPDevice();
  uint64_t v6 = __chkstk_darwin(v36);
  uint64_t v35 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v28 - v9;
  uint64_t result = (char *)_swiftEmptyArrayStorage;
  uint64_t v37 = (char *)_swiftEmptyArrayStorage;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    unint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v13 = v8 + 16;
    uint64_t v14 = v15;
    uint64_t v16 = *(unsigned __int8 *)(v13 + 64);
    uint64_t v17 = *(void *)(v13 + 56);
    v28[1] = v3;
    uint64_t v29 = (v16 + 32) & ~v16;
    uint64_t v18 = a1 + v29;
    int64_t v34 = (void (**)(char *, char *, uint64_t))(v13 + 16);
    uint64_t v31 = a2;
    char v32 = (void (**)(char *, uint64_t))(v13 - 8);
    uint64_t v19 = v13;
    uint64_t v30 = v15;
    v15(v10, a1 + v29, v36);
    while (1)
    {
      uint64_t v20 = FMIPDevice.baIdentifier.getter();
      if (!v21) {
        break;
      }
      if (v20 == a2 && v21 == v33)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v22 & 1) == 0) {
          break;
        }
      }
      uint64_t v23 = v19;
      uint64_t v24 = *v34;
      (*v34)(v35, v10, v36);
      unint64_t v25 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10013E5F0(0, *((void *)v25 + 2) + 1, 1);
        unint64_t v25 = v37;
      }
      unint64_t v27 = *((void *)v25 + 2);
      unint64_t v26 = *((void *)v25 + 3);
      if (v27 >= v26 >> 1)
      {
        sub_10013E5F0(v26 > 1, v27 + 1, 1);
        unint64_t v25 = v37;
      }
      *((void *)v25 + 2) = v27 + 1;
      v24(&v25[v29 + v27 * v17], v35, v36);
      uint64_t v37 = v25;
      uint64_t v19 = v23;
      uint64_t v14 = v30;
      a2 = v31;
LABEL_4:
      v18 += v17;
      if (!--v12) {
        return v37;
      }
      v14(v10, v18, v36);
    }
    (*v32)(v10, v36);
    goto LABEL_4;
  }
  return result;
}

uint64_t sub_1004B25D4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v226 = a4;
  uint64_t v223 = a3;
  uint64_t v224 = a2;
  uint64_t v248 = type metadata accessor for FMIPDeviceStatus();
  uint64_t v247 = *(void *)(v248 - 8);
  uint64_t v5 = __chkstk_darwin(v248);
  unint64_t v246 = (char *)&v222 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v245 = (char *)&v222 - v7;
  uint64_t v8 = type metadata accessor for FMIPDevice();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v265 = v8;
  uint64_t v266 = v9;
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v243 = (char *)&v222 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  unint64_t v249 = (char *)&v222 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v231 = (char *)&v222 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v227 = (char *)&v222 - v17;
  __chkstk_darwin(v16);
  unint64_t v242 = (char *)&v222 - v18;
  uint64_t v230 = type metadata accessor for FMIPDeviceConnectedStateType();
  uint64_t v229 = *(void *)(v230 - 8);
  uint64_t v19 = __chkstk_darwin(v230);
  uint64_t v270 = (char *)&v222 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v228 = (char *)&v222 - v21;
  uint64_t v253 = type metadata accessor for FMIPItem();
  uint64_t v269 = *(char **)(v253 - 8);
  uint64_t v22 = __chkstk_darwin(v253);
  uint64_t v268 = (void (*)(char *, uint64_t, uint64_t))((char *)&v222 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  uint64_t v252 = (char *)&v222 - v24;
  uint64_t v257 = type metadata accessor for FMIPFeatures();
  uint64_t v258 = *(void *)(v257 - 8);
  uint64_t v25 = __chkstk_darwin(v257);
  BOOL v255 = (char *)&v222 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v251 = (char *)&v222 - v27;
  uint64_t v28 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
  __chkstk_darwin(v28 - 8);
  uint64_t v264 = (char *)&v222 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v241 = type metadata accessor for FMIPActionStatus();
  uint64_t v240 = *(void *)(v241 - 8);
  uint64_t v30 = __chkstk_darwin(v241);
  uint64_t v235 = (char *)&v222 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v234 = (char *)&v222 - v32;
  uint64_t v33 = sub_10005D034(&qword_1006B7B40);
  __chkstk_darwin(v33 - 8);
  uint64_t v262 = (char *)&v222 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v272 = type metadata accessor for FMIPEraseMetadata();
  uint64_t v263 = *(void *)(v272 - 8);
  __chkstk_darwin(v272);
  uint64_t v233 = (char *)&v222 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  __chkstk_darwin(v36 - 8);
  uint64_t v261 = (char *)&v222 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v250 = (void (**)(void, void))type metadata accessor for FMIPDeviceState();
  uint64_t v260 = (void (**)(char *, char *, uint64_t))*(v250 - 1);
  uint64_t v38 = __chkstk_darwin(v250);
  uint64_t v40 = (char *)&v222 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  uint64_t v42 = (char *)&v222 - v41;
  uint64_t v43 = sub_10005D034(&qword_1006B36B0);
  uint64_t v44 = __chkstk_darwin(v43 - 8);
  unint64_t v239 = (char *)&v222 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  uint64_t v47 = (char *)&v222 - v46;
  uint64_t v48 = type metadata accessor for FMItemCapabilities();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = __chkstk_darwin(v48);
  unint64_t v244 = (char *)&v222 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v232 = (char *)&v222 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  uint64_t v267 = (char *)&v222 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  uint64_t v271 = (char *)&v222 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  char v60 = (char *)&v222 - v59;
  __chkstk_darwin(v58);
  uint64_t v62 = (char *)&v222 - v61;
  uint64_t v259 = a1;
  FMIPDevice.itemGroup.getter();
  uint64_t v63 = type metadata accessor for FMIPItemGroup();
  uint64_t v64 = *(void *)(v63 - 8);
  uint64_t v236 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
  int v65 = v236(v47, 1, v63);
  uint64_t v273 = v48;
  uint64_t v256 = v49;
  uint64_t v254 = v62;
  uint64_t v238 = v63;
  uint64_t v225 = v64;
  uint64_t v237 = v64 + 48;
  if (v65 == 1)
  {
    sub_100003F10((uint64_t)v47, &qword_1006B36B0);
    v276._uint64_t countAndFlagsBits = 0;
    sub_1004B825C(&qword_1006C03D8, (void (*)(uint64_t))&type metadata accessor for FMItemCapabilities);
    dispatch thunk of OptionSet.init(rawValue:)();
  }
  else
  {
    FMIPItemGroup.capabilities.getter();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v47, v63);
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v62, v60, v273);
  }
  uint64_t v67 = v260;
  uint64_t v66 = (uint64_t)v261;
  uint64_t v68 = v250;
  uint64_t v69 = v259;
  FMIPDevice.state.getter();
  static FMIPDeviceState.isThisDevice.getter();
  sub_1004B825C((unint64_t *)&qword_1006C0390, (void (*)(uint64_t))&type metadata accessor for FMIPDeviceState);
  int v70 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  uint64_t v71 = v67[1];
  ((void (*)(char *, void))v71)(v40, v68);
  ((void (*)(char *, void))v71)(v42, v68);
  FMIPDevice.state.getter();
  static FMIPDeviceState.isDeviceWithYou.getter();
  int v72 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  ((void (*)(char *, void))v71)(v40, v68);
  ((void (*)(char *, void))v71)(v42, v68);
  FMIPDevice.bestLocation.getter();
  uint64_t v73 = type metadata accessor for FMIPLocation();
  uint64_t v74 = *(void *)(v73 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v66, 1, v73) == 1)
  {
    sub_100003F10(v66, (uint64_t *)&unk_1006B2AE0);
    LODWORD(v261) = 0;
  }
  else
  {
    char v75 = (void *)FMIPLocation.location.getter();
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v66, v73);

    LODWORD(v261) = (v70 | v72) ^ 1;
  }
  uint64_t v76 = v265;
  char v77 = v251;
  uint64_t v79 = (uint64_t)v262;
  uint64_t v78 = v263;
  unint64_t v80 = v272;
  FMIPDevice.eraseMetadata.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, unint64_t))(v78 + 48))(v79, 1, v80) == 1)
  {
    sub_100003F10(v79, &qword_1006B7B40);
    char v81 = 1;
  }
  else
  {
    uint64_t v82 = v233;
    (*(void (**)(char *, uint64_t, unint64_t))(v78 + 32))(v233, v79, v80);
    uint64_t v83 = v234;
    FMIPEraseMetadata.status.getter();
    uint64_t v84 = v240;
    uint64_t v85 = v235;
    uint64_t v86 = v241;
    (*(void (**)(char *, void, uint64_t))(v240 + 104))(v235, enum case for FMIPActionStatus.eraseCancelled(_:), v241);
    sub_1004B825C(&qword_1006B7B50, (void (*)(uint64_t))&type metadata accessor for FMIPActionStatus);
    char v87 = dispatch thunk of static Equatable.== infix(_:_:)();
    char v88 = *(void (**)(char *, uint64_t))(v84 + 8);
    uint64_t v89 = v85;
    char v81 = v87;
    v88(v89, v86);
    v88(v83, v86);
    (*(void (**)(char *, unint64_t))(v78 + 8))(v82, v272);
  }
  uint64_t v90 = (uint64_t)v264;
  FMIPDevice.wipedTimestamp.getter();
  uint64_t v91 = type metadata accessor for Date();
  uint64_t v92 = 1;
  int v93 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 48))(v90, 1, v91);
  sub_100003F10(v90, (uint64_t *)&unk_1006AF6E0);
  if ((FMIPDevice.pairingIncomplete.getter() & 1) != 0 || v93 != 1 || (v81 & 1) == 0) {
    goto LABEL_82;
  }
  FMIPDevice.features.getter();
  uint64_t v94 = v69;
  uint64_t v95 = v255;
  static FMIPFeatures.isWipeEnabled.getter();
  uint64_t v96 = sub_1004B825C((unint64_t *)&qword_1006B36D0, (void (*)(uint64_t))&type metadata accessor for FMIPFeatures);
  uint64_t v97 = v257;
  char v98 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  uint64_t v99 = v258 + 8;
  uint64_t v100 = *(void (**)(char *, uint64_t))(v258 + 8);
  v100(v95, v97);
  v100(v77, v97);
  if (v98) {
    uint64_t v101 = 3;
  }
  else {
    uint64_t v101 = 1;
  }
  FMIPDevice.features.getter();
  static FMIPFeatures.isLockAndMessageEnabled.getter();
  char v102 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  v100(v95, v97);
  v100(v77, v97);
  if (v102) {
    v101 |= 4uLL;
  }
  FMIPDevice.features.getter();
  static FMIPFeatures.isLostModeEnabled.getter();
  char v103 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  v100(v95, v97);
  v100(v77, v97);
  if (v103) {
    v101 |= 8uLL;
  }
  FMIPDevice.features.getter();
  static FMIPFeatures.isPlaySoundEnabled.getter();
  char v104 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  v100(v95, v97);
  v100(v77, v97);
  if (v104) {
    v101 |= 0x20uLL;
  }
  FMIPDevice.features.getter();
  static FMIPFeatures.isMultiChannelSoundEnabled.getter();
  char v105 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  v100(v95, v97);
  v100(v77, v97);
  if (v105) {
    v101 |= 0x400uLL;
  }
  FMIPDevice.features.getter();
  static FMIPFeatures.isBluetoothRequired.getter();
  char v106 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  v100(v95, v97);
  v100(v77, v97);
  if (v106) {
    v101 |= 0x800uLL;
  }
  FMIPDevice.features.getter();
  static FMIPFeatures.isStopSoundSupported.getter();
  uint64_t v241 = v96;
  char v107 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  v100(v95, v97);
  uint64_t v240 = v99;
  uint64_t v235 = (char *)v100;
  v100(v77, v97);
  uint64_t v108 = v101 | 0x1000;
  if ((v107 & 1) == 0) {
    uint64_t v108 = v101;
  }
  if ((v261 & ((v108 & 0x80) == 0)) != 0) {
    uint64_t v109 = v108 | 0x80;
  }
  else {
    uint64_t v109 = v108;
  }
  if (FMIPDevice.canEnableNotifyWhenFound()() && (v109 & 0x40) == 0) {
    uint64_t v110 = v109 | 0x40;
  }
  else {
    uint64_t v110 = v109;
  }
  uint64_t v111 = (uint64_t)v239;
  FMIPDevice.itemGroup.getter();
  uint64_t v112 = v238;
  if (v236((char *)v111, 1, v238) == 1)
  {
    sub_100003F10(v111, &qword_1006B36B0);
    unsigned int v113 = _swiftEmptyArrayStorage;
    uint64_t v114 = v230;
    uint64_t v115 = v229;
    uint64_t v116 = v270;
    uint64_t v117 = v228;
    goto LABEL_49;
  }
  uint64_t v118 = FMIPItemGroup.items.getter();
  (*(void (**)(uint64_t, uint64_t))(v225 + 8))(v111, v112);
  uint64_t result = v118;
  uint64_t v120 = _swiftEmptyArrayStorage;
  v276._uint64_t countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v116 = v270;
  uint64_t v264 = *(char **)(result + 16);
  uint64_t v234 = (char *)v110;
  if (!v264)
  {
LABEL_48:
    uint64_t v114 = v230;
    uint64_t v115 = v229;
    uint64_t v117 = v228;
    uint64_t v136 = v223;
    uint64_t v137 = swift_bridgeObjectRelease();
    __chkstk_darwin(v137);
    *(&v222 - 2) = v224;
    *(&v222 - 1) = v136;
    unsigned int v113 = (void *)sub_100496EC4((uint64_t (*)(void))sub_1004B8178, (uint64_t)(&v222 - 4), (uint64_t)v120, (uint64_t (*)(void))&type metadata accessor for FMIPItem, (void (*)(BOOL, uint64_t, uint64_t))sub_10013E62C);
    uint64_t v110 = (uint64_t)v234;
LABEL_49:
    uint64_t v138 = v113[2];
    swift_bridgeObjectRelease();
    uint64_t v139 = v110 | 0x82000;
    if (!v138) {
      uint64_t v139 = v110;
    }
    unint64_t v272 = v139;
    FMIPDevice.deviceConnectedState.getter();
    uint64_t v269 = *(char **)(v115 + 104);
    ((void (*)(char *, void, uint64_t))v269)(v116, enum case for FMIPDeviceConnectedStateType.connected(_:), v114);
    char v140 = static FMIPDeviceConnectedStateType.== infix(_:_:)();
    uint64_t v141 = v94;
    uint64_t v142 = v116;
    char v143 = *(void (**)(char *, uint64_t))(v115 + 8);
    v143(v142, v114);
    v143(v117, v114);
    uint64_t v144 = v266;
    uint64_t v145 = *(void (**)(char *, uint64_t, uint64_t))(v266 + 16);
    uint64_t v146 = v141;
    uint64_t v147 = v265;
    uint64_t v270 = (char *)(v266 + 16);
    uint64_t v268 = v145;
    v145(v242, v146, v265);
    if (v140)
    {
      uint64_t v269 = *(char **)(v144 + 8);
      ((void (*)(char *, uint64_t))v269)(v242, v147);
    }
    else
    {
      uint64_t v148 = v242;
      FMIPDevice.deviceConnectedState.getter();
      ((void (*)(char *, void, uint64_t))v269)(v142, enum case for FMIPDeviceConnectedStateType.detectedNearby(_:), v114);
      char v149 = static FMIPDeviceConnectedStateType.== infix(_:_:)();
      v143(v142, v114);
      v143(v117, v114);
      uint64_t v150 = *(void (**)(char *, uint64_t))(v266 + 8);
      v150(v148, v147);
      uint64_t v269 = (char *)v150;
      if ((v149 & 1) == 0)
      {
        uint64_t v151 = v257;
        uint64_t v152 = v227;
        uint64_t v153 = v235;
        goto LABEL_57;
      }
    }
    uint64_t v151 = v257;
    uint64_t v152 = v227;
    uint64_t v153 = v235;
    if (v226) {
      v272 |= 0x80000uLL;
    }
LABEL_57:
    uint64_t v154 = v259;
    FMIPDevice.features.getter();
    uint64_t v155 = v255;
    static FMIPFeatures.isNotifyWhenFoundSupported.getter();
    char v156 = dispatch thunk of SetAlgebra.isSuperset(of:)();
    ((void (*)(char *, uint64_t))v153)(v155, v151);
    ((void (*)(char *, uint64_t))v153)(v77, v151);
    uint64_t v157 = v265;
    uint64_t v158 = v268;
    v268(v152, v154, v265);
    if (v156)
    {
      FMIPDevice.features.getter();
      static FMIPFeatures.isMultiChannelSoundEnabled.getter();
      LODWORD(v267) = dispatch thunk of SetAlgebra.isSuperset(of:)();
      ((void (*)(char *, uint64_t))v153)(v155, v151);
      ((void (*)(char *, uint64_t))v153)(v77, v151);
      uint64_t v159 = (void (*)(char *, uint64_t))v269;
      ((void (*)(char *, uint64_t))v269)(v152, v157);
      int64_t v160 = v231;
      v158(v231, v154, v157);
      if ((v267 & 1) == 0)
      {
        uint64_t v169 = v160;
        FMIPDevice.features.getter();
        static FMIPFeatures.isStopSoundSupported.getter();
        char v170 = dispatch thunk of SetAlgebra.isSuperset(of:)();
        ((void (*)(char *, uint64_t))v153)(v155, v151);
        ((void (*)(char *, uint64_t))v153)(v77, v151);
        v159(v169, v157);
        uint64_t v162 = v256;
        unint64_t v163 = v232;
        uint64_t v164 = v273;
        (*(void (**)(char *, char *, uint64_t))(v256 + 16))(v232, v254, v273);
        uint64_t v161 = v155;
        if ((v170 & 1) == 0)
        {
          uint64_t v270 = *(char **)(v162 + 8);
          ((void (*)(char *, uint64_t))v270)(v163, v164);
          goto LABEL_63;
        }
LABEL_62:
        int64_t v165 = v271;
        static FMItemCapabilities.canEnableNotifyWhenFound.getter();
        sub_1004B825C((unint64_t *)&qword_1006B1128, (void (*)(uint64_t))&type metadata accessor for FMItemCapabilities);
        char v166 = dispatch thunk of SetAlgebra.isSuperset(of:)();
        int64_t v167 = *(void (**)(char *, uint64_t))(v162 + 8);
        v167(v165, v164);
        uint64_t v270 = (char *)v167;
        v167(v163, v164);
        if ((v166 & 1) == 0)
        {
          uint64_t v168 = v257;
          uint64_t v92 = v272;
LABEL_69:
          FMIPDevice.features.getter();
          static FMIPFeatures.isNotifyWhenDetachedSupported.getter();
          unsigned __int8 v171 = dispatch thunk of SetAlgebra.isSuperset(of:)();
          uint64_t v172 = v235;
          ((void (*)(char *, uint64_t))v235)(v161, v168);
          ((void (*)(char *, uint64_t))v172)(v77, v168);
          if ((v171 & ((v92 & 0x10000) == 0)) != 0) {
            v92 |= 0x10000uLL;
          }
          FMIPDevice.features.getter();
          static FMIPFeatures.isShowContactDetailsSupported.getter();
          unsigned __int8 v173 = dispatch thunk of SetAlgebra.isSuperset(of:)();
          ((void (*)(char *, uint64_t))v172)(v161, v168);
          ((void (*)(char *, uint64_t))v172)(v77, v168);
          if ((v173 & ((v92 & 0x20000) == 0)) != 0) {
            v92 |= 0x20000uLL;
          }
          FMIPDevice.features.getter();
          static FMIPFeatures.isRemoveUIv2Supported.getter();
          unsigned __int8 v174 = dispatch thunk of SetAlgebra.isSuperset(of:)();
          ((void (*)(char *, uint64_t))v172)(v161, v168);
          ((void (*)(char *, uint64_t))v172)(v77, v168);
          if ((v174 & ((v92 & 0x40000) == 0)) != 0) {
            v92 |= 0x40000uLL;
          }
          FMIPDevice.features.getter();
          static FMIPFeatures.isLeashingSupported.getter();
          unsigned __int8 v175 = dispatch thunk of SetAlgebra.isSuperset(of:)();
          ((void (*)(char *, uint64_t))v172)(v161, v168);
          ((void (*)(char *, uint64_t))v172)(v77, v168);
          uint64_t v176 = v92 | 0x4000;
          if ((v175 & ((v92 & 0x4000) == 0)) != 0) {
            v92 |= 0x4000uLL;
          }
          uint64_t v177 = v271;
          static FMItemCapabilities.canEnableLeashing.getter();
          sub_1004B825C((unint64_t *)&qword_1006B1128, (void (*)(uint64_t))&type metadata accessor for FMItemCapabilities);
          uint64_t v178 = v273;
          unsigned __int8 v179 = dispatch thunk of SetAlgebra.isSuperset(of:)();
          uint64_t v180 = (void (*)(char *, uint64_t))v270;
          ((void (*)(char *, uint64_t))v270)(v177, v178);
          if ((v179 & ((v92 & 0x4000) == 0)) != 0) {
            uint64_t v92 = v176;
          }
          static FMItemCapabilities.canEnableLostMode.getter();
          unsigned __int8 v181 = dispatch thunk of SetAlgebra.isSuperset(of:)();
          v180(v177, v178);
          uint64_t v69 = v259;
          if ((v181 & ((v92 & 8) == 0)) != 0) {
            v92 |= 8uLL;
          }
          uint64_t v76 = v265;
LABEL_82:
          unint64_t v272 = v92;
          uint64_t v182 = v245;
          FMIPDevice.status.getter();
          uint64_t v183 = v69;
          uint64_t v184 = v247;
          uint64_t v185 = v246;
          uint64_t v186 = v248;
          (*(void (**)(char *, void, uint64_t))(v247 + 104))(v246, enum case for FMIPDeviceStatus.online(_:), v248);
          sub_1004B825C((unint64_t *)&unk_1006C03E0, (void (*)(uint64_t))&type metadata accessor for FMIPDeviceStatus);
          char v187 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v188 = *(void (**)(char *, uint64_t))(v184 + 8);
          v188(v185, v186);
          v188(v182, v186);
          uint64_t v189 = v266;
          uint64_t v190 = *(void (**)(char *, uint64_t, uint64_t))(v266 + 16);
          uint64_t v191 = v249;
          uint64_t v192 = v183;
          v190(v249, v183, v76);
          uint64_t v270 = (char *)v190;
          if (v187)
          {
            FMIPDevice.features.getter();
            uint64_t v193 = v77;
            uint64_t v194 = v255;
            static FMIPFeatures.isRemoveUIv2Supported.getter();
            sub_1004B825C((unint64_t *)&qword_1006B36D0, (void (*)(uint64_t))&type metadata accessor for FMIPFeatures);
            uint64_t v195 = v257;
            uint64_t v196 = v191;
            char v197 = dispatch thunk of SetAlgebra.isSuperset(of:)();
            uint64_t v198 = v258;
            uint64_t v199 = *(void (**)(char *, uint64_t))(v258 + 8);
            v199(v194, v195);
            v199(v193, v195);
            uint64_t v189 = v266;
          }
          else
          {
            uint64_t v196 = v191;
            char v197 = 1;
            uint64_t v195 = v257;
            uint64_t v198 = v258;
            uint64_t v193 = v77;
            uint64_t v194 = v255;
          }
          uint64_t v200 = *(char **)(v189 + 8);
          uint64_t v266 = v189 + 8;
          uint64_t v269 = v200;
          ((void (*)(char *, uint64_t))v200)(v196, v265);
          FMIPDevice.features.getter();
          static FMIPFeatures.isRemoveEnabled.getter();
          uint64_t v201 = sub_1004B825C((unint64_t *)&qword_1006B36D0, (void (*)(uint64_t))&type metadata accessor for FMIPFeatures);
          char v202 = dispatch thunk of SetAlgebra.isSuperset(of:)();
          uint64_t v203 = *(void (**)(char *, uint64_t))(v198 + 8);
          v203(v194, v195);
          uint64_t v258 = v198 + 8;
          v203(v193, v195);
          uint64_t v204 = v256;
          uint64_t v205 = v244;
          uint64_t v206 = v273;
          (*(void (**)(char *, char *, uint64_t))(v256 + 16))(v244, v254, v273);
          if (v202 & 1) != 0 && (v197)
          {
            uint64_t v207 = *(void (**)(char *, uint64_t))(v204 + 8);
            v207(v205, v206);
            uint64_t v208 = v243;
            uint64_t v209 = v192;
            uint64_t v210 = v265;
            ((void (*)(char *, uint64_t, uint64_t))v270)(v243, v209, v265);
            char v211 = v255;
          }
          else
          {
            uint64_t v268 = (void (*)(char *, uint64_t, uint64_t))v201;
            uint64_t v212 = v271;
            static FMItemCapabilities.canRemove.getter();
            sub_1004B825C((unint64_t *)&qword_1006B1128, (void (*)(uint64_t))&type metadata accessor for FMItemCapabilities);
            char v213 = dispatch thunk of SetAlgebra.isSuperset(of:)();
            uint64_t v207 = *(void (**)(char *, uint64_t))(v204 + 8);
            v207(v212, v206);
            v207(v205, v206);
            uint64_t v208 = v243;
            uint64_t v214 = v192;
            uint64_t v210 = v265;
            ((void (*)(char *, uint64_t, uint64_t))v270)(v243, v214, v265);
            if ((v213 & 1) == 0)
            {
              FMIPDevice.rawModel.getter();
              Swift::String v220 = String.uppercased()();
              swift_bridgeObjectRelease();
              Swift::String v276 = v220;
              uint64_t v274 = 0x53444F50524941;
              unint64_t v275 = 0xE700000000000000;
              sub_100059EB8();
              char v221 = StringProtocol.contains<A>(_:)();
              swift_bridgeObjectRelease();
              ((void (*)(char *, uint64_t))v269)(v208, v210);
              char v211 = v255;
              uint64_t v206 = v273;
              if ((v221 & 1) == 0)
              {
                uint64_t v215 = v272;
                goto LABEL_92;
              }
LABEL_91:
              uint64_t v215 = v272 | 0x200200;
LABEL_92:
              uint64_t v216 = v251;
              FMIPDevice.features.getter();
              static FMIPFeatures.isRepairSupported.getter();
              uint64_t v217 = v257;
              char v218 = dispatch thunk of SetAlgebra.isSuperset(of:)();
              v203(v211, v217);
              v203(v216, v217);
              if (v218) {
                uint64_t v219 = v215 | 0x300000;
              }
              else {
                uint64_t v219 = v215;
              }
              v207(v254, v206);
              return v219;
            }
            char v211 = v255;
            uint64_t v206 = v273;
          }
          ((void (*)(char *, uint64_t))v269)(v208, v210);
          goto LABEL_91;
        }
LABEL_63:
        uint64_t v168 = v257;
        uint64_t v92 = v272;
        if ((v272 & 0x8000) == 0) {
          uint64_t v92 = v272 | 0x8000;
        }
        goto LABEL_69;
      }
    }
    else
    {
      uint64_t v159 = (void (*)(char *, uint64_t))v269;
      ((void (*)(char *, uint64_t))v269)(v152, v157);
      int64_t v160 = v231;
      v158(v231, v154, v157);
    }
    uint64_t v161 = v155;
    v159(v160, v157);
    uint64_t v162 = v256;
    unint64_t v163 = v232;
    uint64_t v164 = v273;
    (*(void (**)(char *, char *, uint64_t))(v256 + 16))(v232, v254, v273);
    goto LABEL_62;
  }
  uint64_t v121 = 0;
  uint64_t v262 = v269 + 16;
  uint64_t v261 = (char *)(v256 + 8);
  unint64_t v250 = (void (**)(void, void))(v269 + 8);
  uint64_t v260 = (void (**)(char *, char *, uint64_t))(v269 + 32);
  uint64_t v122 = v253;
  unint64_t v123 = v252;
  uint64_t v263 = result;
  uint64_t v124 = v267;
  uint64_t v125 = v273;
  int v126 = (void (**)(char *, uint64_t))(v256 + 8);
  while ((unint64_t)v121 < *(void *)(result + 16))
  {
    uint64_t v127 = *((void *)v269 + 9);
    unint64_t v272 = (v269[80] + 32) & ~(unint64_t)v269[80];
    (*((void (**)(char *, unint64_t, uint64_t))v269 + 2))(v123, result + v272 + v127 * (void)v121, v122);
    uint64_t v128 = v271;
    FMIPItem.capabilities.getter();
    static FMItemCapabilities.canBTFinding.getter();
    sub_1004B825C((unint64_t *)&qword_1006B1128, (void (*)(uint64_t))&type metadata accessor for FMItemCapabilities);
    char v129 = dispatch thunk of SetAlgebra.isSuperset(of:)();
    uint64_t v130 = *v126;
    (*v126)(v124, v125);
    v130(v128, v125);
    if (v129)
    {
      uint64_t v131 = *v260;
      (*v260)((char *)v268, v123, v122);
      uint64_t countAndFlagsBits = v276._countAndFlagsBits;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10013E62C(0, *(void *)(countAndFlagsBits + 16) + 1, 1);
        uint64_t countAndFlagsBits = v276._countAndFlagsBits;
      }
      unint64_t v134 = *(void *)(countAndFlagsBits + 16);
      unint64_t v133 = *(void *)(countAndFlagsBits + 24);
      if (v134 >= v133 >> 1)
      {
        sub_10013E62C(v133 > 1, v134 + 1, 1);
        uint64_t countAndFlagsBits = v276._countAndFlagsBits;
      }
      *(void *)(countAndFlagsBits + 16) = v134 + 1;
      unint64_t v135 = countAndFlagsBits + v272 + v134 * v127;
      uint64_t v122 = v253;
      v131((char *)v135, (char *)v268, v253);
      v276._uint64_t countAndFlagsBits = countAndFlagsBits;
      unint64_t v123 = v252;
    }
    else
    {
      (*v250)(v123, v122);
    }
    ++v121;
    uint64_t result = v263;
    uint64_t v116 = v270;
    if (v264 == v121)
    {
      uint64_t v120 = (void *)v276._countAndFlagsBits;
      uint64_t v94 = v259;
      char v77 = v251;
      goto LABEL_48;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1004B47A4(uint64_t a1, uint64_t *a2)
{
  uint64_t v48 = a2;
  uint64_t v57 = type metadata accessor for FMIPSafeLocation();
  uint64_t v4 = *(void *)(v57 - 8);
  uint64_t v5 = __chkstk_darwin(v57);
  uint64_t v45 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v43 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v43 - v10;
  uint64_t v12 = _swiftEmptyArrayStorage;
  uint64_t v59 = (char *)_swiftEmptyArrayStorage;
  uint64_t v47 = *(void *)(a1 + 16);
  if (!v47) {
    return (uint64_t)v12;
  }
  uint64_t v43 = v2;
  uint64_t v13 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v14 = v4 + 16;
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64);
  uint64_t v17 = *(void *)(v14 + 56);
  uint64_t v55 = v15;
  uint64_t v56 = v17;
  unint64_t v49 = v16;
  uint64_t v46 = a1 + v16;
  uint64_t v53 = v14;
  uint64_t v54 = (void (**)(char *, uint64_t))(v14 - 8);
  uint64_t v44 = (void (**)(char *, char *, uint64_t))(v14 + 16);
  uint64_t v51 = (char *)&v43 - v10;
  v15(v11, a1 + v16, v57);
  while (1)
  {
    uint64_t v18 = *v48;
    int64_t v19 = *(void *)(*v48 + 16);
    uint64_t v52 = v13;
    if (v19)
    {
      uint64_t v58 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_10013E758(0, v19, 0);
      uint64_t v50 = v18;
      uint64_t v20 = v18 + v49;
      do
      {
        uint64_t v21 = v57;
        v55(v9, v20, v57);
        uint64_t v22 = FMIPSafeLocation.identifier.getter();
        uint64_t v24 = v23;
        (*v54)(v9, v21);
        uint64_t v12 = v58;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10013E758(0, v12[2] + 1, 1);
          uint64_t v12 = v58;
        }
        unint64_t v26 = v12[2];
        unint64_t v25 = v12[3];
        if (v26 >= v25 >> 1)
        {
          sub_10013E758(v25 > 1, v26 + 1, 1);
          uint64_t v12 = v58;
        }
        v12[2] = v26 + 1;
        uint64_t v27 = &v12[2 * v26];
        v27[4] = v22;
        v27[5] = v24;
        v20 += v56;
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease();
      uint64_t v11 = v51;
    }
    uint64_t v28 = FMIPSafeLocation.identifier.getter();
    uint64_t v30 = v29;
    uint64_t v31 = v12[2];
    if (!v31)
    {
      swift_bridgeObjectRelease();
      uint64_t v12 = _swiftEmptyArrayStorage;
      goto LABEL_31;
    }
    uint64_t v32 = v28;
    BOOL v33 = v12[4] == v28 && v12[5] == v29;
    if (v33 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = v51;
      (*v54)(v51, v57);
      uint64_t v12 = _swiftEmptyArrayStorage;
      goto LABEL_4;
    }
    if (v31 != 1) {
      break;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    uint64_t v12 = _swiftEmptyArrayStorage;
    uint64_t v11 = v51;
LABEL_31:
    swift_bridgeObjectRelease();
    uint64_t v39 = *v44;
    (*v44)(v45, v11, v57);
    uint64_t v40 = v59;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10013E6A4(0, *((void *)v40 + 2) + 1, 1);
      uint64_t v40 = v59;
    }
    unint64_t v42 = *((void *)v40 + 2);
    unint64_t v41 = *((void *)v40 + 3);
    if (v42 >= v41 >> 1)
    {
      sub_10013E6A4(v41 > 1, v42 + 1, 1);
      uint64_t v40 = v59;
    }
    *((void *)v40 + 2) = v42 + 1;
    v39(&v40[v49 + v42 * v56], v45, v57);
    uint64_t v59 = v40;
LABEL_4:
    uint64_t v13 = v52 + 1;
    if (v52 + 1 == v47) {
      return (uint64_t)v59;
    }
    v55(v11, v46 + v56 * v13, v57);
  }
  uint64_t v35 = v12 + 7;
  uint64_t v36 = 1;
  while (1)
  {
    uint64_t v37 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (*(v35 - 1) == v32 && *v35 == v30) {
      goto LABEL_3;
    }
    uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
    if (result) {
      goto LABEL_3;
    }
    v35 += 2;
    ++v36;
    if (v37 == v31) {
      goto LABEL_29;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1004B4C04(uint64_t a1)
{
  uint64_t v45 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v45 - 8);
  uint64_t v3 = __chkstk_darwin(v45);
  uint64_t v43 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v41 - v5;
  uint64_t v7 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t v13 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  unint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v41 - v17;
  sub_100006AB0(a1, (uint64_t)v12, (uint64_t *)&unk_1006B2AE0);
  uint64_t v19 = type metadata accessor for FMIPLocation();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v21 = v44(v12, 1, v19);
  uint64_t v46 = v20;
  if (v21 == 1)
  {
    sub_100003F10((uint64_t)v12, (uint64_t *)&unk_1006B2AE0);
    uint64_t v22 = 1;
  }
  else
  {
    uint64_t v23 = FMIPLocation.location.getter();
    unint64_t v42 = v6;
    uint64_t v24 = v10;
    uint64_t v25 = a1;
    unint64_t v26 = (void *)v23;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v19);
    id v27 = [v26 timestamp];

    a1 = v25;
    uint64_t v10 = v24;
    uint64_t v6 = v42;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v22 = 0;
  }
  uint64_t v28 = v19;
  uint64_t v29 = v45;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v18, v22, 1, v45);
  sub_100006AB0((uint64_t)v18, (uint64_t)v16, (uint64_t *)&unk_1006AF6E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v16, 1, v29) == 1)
  {
    sub_100003F10((uint64_t)v16, (uint64_t *)&unk_1006AF6E0);
    uint64_t v30 = v46;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v6, v16, v29);
    uint64_t v31 = v43;
    Date.init()();
    Date.timeIntervalSince1970.getter();
    double v33 = v32;
    uint64_t v34 = *(void (**)(char *, uint64_t))(v2 + 8);
    v34(v31, v29);
    Date.timeIntervalSince1970.getter();
    double v36 = v33 - v35;
    FMIPOldLocationAgeThresholdInSeconds.getter();
    double v38 = v37;
    v34(v6, v29);
    uint64_t v30 = v46;
    if (v38 < v36)
    {
      sub_100003F10((uint64_t)v18, (uint64_t *)&unk_1006AF6E0);
      char v39 = 1;
      return v39 & 1;
    }
  }
  sub_100006AB0(a1, (uint64_t)v10, (uint64_t *)&unk_1006B2AE0);
  if (v44(v10, 1, v28) == 1)
  {
    sub_100003F10((uint64_t)v18, (uint64_t *)&unk_1006AF6E0);
    sub_100003F10((uint64_t)v10, (uint64_t *)&unk_1006B2AE0);
    char v39 = 0;
  }
  else
  {
    char v39 = FMIPLocation.isOld.getter();
    sub_100003F10((uint64_t)v18, (uint64_t *)&unk_1006AF6E0);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v28);
  }
  return v39 & 1;
}

char *sub_1004B506C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FMIPItemState();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  unint64_t v42 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v41 = (char *)&v30 - v7;
  uint64_t v34 = type metadata accessor for FMIPItem();
  uint64_t v8 = __chkstk_darwin(v34);
  uint64_t v40 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t result = (char *)_swiftEmptyArrayStorage;
  uint64_t v44 = (char *)_swiftEmptyArrayStorage;
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    double v38 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v39 = v10 + 16;
    uint64_t v15 = *(void *)(v10 + 72);
    unint64_t v32 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v33 = v3;
    uint64_t v16 = a1 + v32;
    uint64_t v30 = v1;
    uint64_t v31 = (void (**)(char *, uint64_t))(v10 + 8);
    double v35 = (void (**)(char *, char *, uint64_t))(v10 + 32);
    uint64_t v36 = v4 + 8;
    uint64_t v17 = v34;
    uint64_t v37 = v15;
    uint64_t v18 = v41;
    uint64_t v19 = (void (**)(char *, uint64_t))(v4 + 8);
    do
    {
      uint64_t v43 = v14;
      v38(v12, v16, v17);
      int v21 = v12;
      FMIPItem.state.getter();
      uint64_t v22 = v42;
      static FMIPItemState.soundPlaying.getter();
      sub_1004B825C((unint64_t *)&qword_1006BEB30, (void (*)(uint64_t))&type metadata accessor for FMIPItemState);
      uint64_t v23 = v17;
      char v24 = dispatch thunk of SetAlgebra.isSuperset(of:)();
      uint64_t v25 = *v19;
      (*v19)(v22, v3);
      v25(v18, v3);
      if (v24)
      {
        unint64_t v26 = *v35;
        (*v35)(v40, v21, v23);
        id v27 = v44;
        uint64_t v12 = v21;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10013E62C(0, *((void *)v27 + 2) + 1, 1);
          id v27 = v44;
        }
        uint64_t v20 = v37;
        unint64_t v29 = *((void *)v27 + 2);
        unint64_t v28 = *((void *)v27 + 3);
        if (v29 >= v28 >> 1)
        {
          sub_10013E62C(v28 > 1, v29 + 1, 1);
          id v27 = v44;
        }
        *((void *)v27 + 2) = v29 + 1;
        uint64_t v17 = v34;
        v26(&v27[v32 + v29 * v20], v40, v34);
        uint64_t v44 = v27;
        uint64_t v3 = v33;
      }
      else
      {
        (*v31)(v21, v23);
        uint64_t v17 = v23;
        uint64_t v12 = v21;
        uint64_t v20 = v37;
      }
      v16 += v20;
      uint64_t v14 = v43 - 1;
    }
    while (v43 != 1);
    return v44;
  }
  return result;
}

char *sub_1004B5414(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FMIPItemState();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v37 - v8;
  uint64_t v10 = type metadata accessor for FMIPItem();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v48 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  __chkstk_darwin(v13);
  uint64_t v53 = (char *)v37 - v16;
  uint64_t result = (char *)_swiftEmptyArrayStorage;
  uint64_t v54 = (char *)_swiftEmptyArrayStorage;
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18)
  {
    uint64_t v42 = v15;
    uint64_t v43 = v7;
    v37[1] = v1;
    uint64_t v51 = *(void (**)(char *))(v14 + 16);
    uint64_t v52 = v14 + 16;
    uint64_t v19 = *(void *)(v14 + 72);
    unint64_t v39 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v40 = v10;
    uint64_t v20 = a1 + v39;
    int v21 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v44 = v3;
    uint64_t v45 = (void (**)(uint64_t, uint64_t))(v14 + 8);
    uint64_t v47 = (void (**)(char *, char *, uint64_t))(v14 + 32);
    double v38 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v41 = v19;
    while (1)
    {
      uint64_t v49 = v20;
      uint64_t v50 = v18;
      uint64_t v23 = v53;
      v51(v53);
      FMIPItem.state.getter();
      static FMIPItemState.soundPending.getter();
      uint64_t v46 = sub_1004B825C((unint64_t *)&qword_1006BEB30, (void (*)(uint64_t))&type metadata accessor for FMIPItemState);
      char v24 = dispatch thunk of SetAlgebra.isSuperset(of:)();
      uint64_t v25 = v9;
      unint64_t v26 = v7;
      id v27 = *v21;
      (*v21)(v26, v3);
      v27(v25, v3);
      uint64_t v28 = v3;
      uint64_t v29 = v42;
      ((void (*)(uint64_t, char *, uint64_t))v51)(v42, v23, v10);
      if (v24) {
        break;
      }
      FMIPItem.state.getter();
      static FMIPItemState.soundQueued.getter();
      char v30 = dispatch thunk of SetAlgebra.isSuperset(of:)();
      v27(v26, v28);
      v27(v25, v28);
      uint64_t v31 = *v45;
      (*v45)(v29, v10);
      uint64_t v9 = v25;
      if (v30) {
        goto LABEL_8;
      }
      v31((uint64_t)v53, v10);
      uint64_t v3 = v44;
      uint64_t v22 = v41;
LABEL_4:
      uint64_t v20 = v49 + v22;
      uint64_t v18 = v50 - 1;
      uint64_t v7 = v43;
      if (v50 == 1) {
        return v54;
      }
    }
    (*v45)(v29, v10);
    uint64_t v9 = v25;
LABEL_8:
    unint64_t v32 = *v47;
    (*v47)(v48, v53, v10);
    uint64_t v33 = v54;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = v41;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10013E62C(0, *((void *)v33 + 2) + 1, 1);
      uint64_t v33 = v54;
    }
    unint64_t v36 = *((void *)v33 + 2);
    unint64_t v35 = *((void *)v33 + 3);
    if (v36 >= v35 >> 1)
    {
      sub_10013E62C(v35 > 1, v36 + 1, 1);
      uint64_t v33 = v54;
    }
    *((void *)v33 + 2) = v36 + 1;
    uint64_t v10 = v40;
    v32(&v33[v39 + v36 * v22], v48, v40);
    uint64_t v54 = v33;
    uint64_t v3 = v44;
    int v21 = v38;
    goto LABEL_4;
  }
  return result;
}

char *sub_1004B588C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FMIPAudioChannel();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v22 - v8;
  uint64_t result = (char *)_swiftEmptyArrayStorage;
  uint64_t v29 = (char *)_swiftEmptyArrayStorage;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    v22[1] = v1;
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v12 = v4 + 16;
    uint64_t v13 = v14;
    uint64_t v15 = *(void *)(v12 + 56);
    unint64_t v24 = (*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64);
    uint64_t v25 = v14;
    uint64_t v16 = a1 + v24;
    uint64_t v23 = (void (**)(char *, uint64_t))(v12 - 8);
    uint64_t v27 = v12;
    uint64_t v28 = (void (**)(char *, char *, uint64_t))(v12 + 16);
    unint64_t v26 = v7;
    v14(v9, a1 + v24, v3);
    while (1)
    {
      if (FMIPAudioChannel.isPlaying.getter())
      {
        uint64_t v17 = *v28;
        (*v28)(v7, v9, v3);
        uint64_t v18 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10013E668(0, *((void *)v18 + 2) + 1, 1);
          uint64_t v18 = v29;
        }
        uint64_t v19 = v15;
        unint64_t v21 = *((void *)v18 + 2);
        unint64_t v20 = *((void *)v18 + 3);
        if (v21 >= v20 >> 1)
        {
          sub_10013E668(v20 > 1, v21 + 1, 1);
          uint64_t v19 = v15;
          uint64_t v18 = v29;
        }
        *((void *)v18 + 2) = v21 + 1;
        uint64_t v7 = v26;
        uint64_t v15 = v19;
        v17(&v18[v24 + v21 * v19], v26, v3);
        uint64_t v29 = v18;
        uint64_t v13 = v25;
      }
      else
      {
        (*v23)(v9, v3);
      }
      v16 += v15;
      if (!--v11) {
        break;
      }
      v13(v9, v16, v3);
    }
    return v29;
  }
  return result;
}

uint64_t sub_1004B5AD8(uint64_t a1)
{
  uint64_t v205 = type metadata accessor for FMIPItemState();
  uint64_t v179 = *(void *)(v205 - 8);
  uint64_t v2 = __chkstk_darwin(v205);
  uint64_t v204 = (char *)&v170 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v206 = (char *)&v170 - v4;
  uint64_t v5 = type metadata accessor for FMIPItem();
  uint64_t v174 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v208 = (char *)&v170 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10005D034(&qword_1006B36B0);
  __chkstk_darwin(v7 - 8);
  uint64_t v184 = (char *)&v170 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMIPItemGroup();
  uint64_t v193 = *(void *)(v9 - 8);
  uint64_t v194 = v9;
  __chkstk_darwin(v9);
  uint64_t v185 = (char *)&v170 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10005D034(&qword_1006B7B40);
  __chkstk_darwin(v11 - 8);
  uint64_t v188 = (char *)&v170 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = type metadata accessor for FMIPEraseMetadata();
  uint64_t v200 = *(void *)(v189 - 8);
  __chkstk_darwin(v189);
  uint64_t v183 = (char *)&v170 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FMIPDeviceState();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v197 = v14;
  uint64_t v198 = v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v196 = (char *)&v170 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v195 = (char *)&v170 - v18;
  uint64_t v177 = type metadata accessor for FMIPDevice();
  uint64_t v176 = *(void *)(v177 - 8);
  __chkstk_darwin(v177);
  uint64_t v178 = (char *)&v170 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10005D034((uint64_t *)&unk_1006C0370);
  __chkstk_darwin(v20 - 8);
  char v187 = (void (*)(char *, uint64_t))((char *)&v170 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = type metadata accessor for FMIPDeviceLostModeMetadata();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v201 = v22;
  uint64_t v202 = v23;
  uint64_t v24 = __chkstk_darwin(v22);
  unsigned __int8 v173 = (char *)&v170 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v191 = (char *)&v170 - v26;
  uint64_t v27 = type metadata accessor for FMIPActionStatus();
  unint64_t v207 = *(void *)(v27 - 8);
  uint64_t v28 = __chkstk_darwin(v27);
  unsigned __int8 v175 = (char *)&v170 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v190 = (char *)&v170 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v203 = (char *)&v170 - v33;
  __chkstk_darwin(v32);
  uint64_t v180 = (uint64_t)&v170 - v34;
  uint64_t v35 = sub_10005D034(&qword_1006BAA88);
  __chkstk_darwin(v35 - 8);
  uint64_t v37 = (char *)&v170 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for FMIPLockMetadata();
  uint64_t v39 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v41 = (char *)&v170 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
  uint64_t v43 = __chkstk_darwin(v42 - 8);
  uint64_t v45 = (char *)&v170 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  uint64_t v47 = (char *)&v170 - v46;
  FMIPDevice.lockedTimestamp.getter();
  uint64_t v48 = type metadata accessor for Date();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = *(uint64_t (**)(char *, uint64_t, void))(v49 + 48);
  uint64_t v182 = (void (*)(void, void, void))v48;
  unsigned __int8 v181 = v50;
  uint64_t v186 = v49 + 48;
  int v51 = ((uint64_t (*)(char *, uint64_t))v50)(v47, 1);
  uint64_t v52 = (uint64_t)v47;
  uint64_t v53 = a1;
  sub_100003F10(v52, (uint64_t *)&unk_1006AF6E0);
  FMIPDevice.lockMetadata.getter();
  uint64_t v54 = v39;
  uint64_t v55 = v27;
  int v56 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48))(v37, 1, v38);
  uint64_t v192 = v27;
  unint64_t v57 = v207;
  uint64_t v199 = v53;
  if (v56 == 1)
  {
    sub_100003F10((uint64_t)v37, &qword_1006BAA88);
    uint64_t v58 = 17;
    if (v51 == 1) {
      uint64_t v58 = 1;
    }
    uint64_t v180 = v58;
    uint64_t v59 = v198;
    uint64_t v60 = v201;
    uint64_t v61 = v202;
    unint64_t v62 = v57;
    uint64_t v63 = v182;
    uint64_t v64 = v181;
  }
  else
  {
    uint64_t v171 = v54;
    int v65 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
    uint64_t v172 = v38;
    v65(v41, v37, v38);
    uint64_t v66 = v180;
    FMIPLockMetadata.status.getter();
    char v67 = FMIPActionStatus.isActionSuccessful.getter();
    uint64_t v180 = *(void *)(v57 + 8);
    ((void (*)(uint64_t, uint64_t))v180)(v66, v55);
    int v68 = v51;
    if ((v67 & 1) == 0 || v51 == 1)
    {
      int v70 = v203;
      FMIPLockMetadata.status.getter();
      uint64_t v71 = v190;
      uint64_t v72 = v192;
      (*(void (**)(char *, void, uint64_t))(v207 + 104))(v190, enum case for FMIPActionStatus.pending(_:), v192);
      sub_1004B825C(&qword_1006C03C0, (void (*)(uint64_t))&type metadata accessor for FMIPActionStatus);
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      uint64_t v74 = v209;
      uint64_t v73 = v210;
      char v75 = v71;
      uint64_t v76 = (void (*)(char *, uint64_t))v180;
      ((void (*)(char *, uint64_t))v180)(v75, v72);
      v76(v70, v72);
      uint64_t v69 = v41;
      uint64_t v77 = 17;
      if (v68 == 1) {
        uint64_t v77 = 1;
      }
      if (v73 == v74) {
        uint64_t v77 = 33;
      }
      uint64_t v180 = v77;
      uint64_t v59 = v198;
    }
    else
    {
      uint64_t v180 = 17;
      uint64_t v59 = v198;
      uint64_t v69 = v41;
    }
    uint64_t v60 = v201;
    uint64_t v61 = v202;
    uint64_t v63 = v182;
    uint64_t v64 = v181;
    (*(void (**)(char *, uint64_t))(v171 + 8))(v69, v172);
    unint64_t v62 = v207;
  }
  FMIPDevice.lostTimestamp.getter();
  int v78 = v64(v45, 1, v63);
  sub_100003F10((uint64_t)v45, (uint64_t *)&unk_1006AF6E0);
  uint64_t v79 = (uint64_t)v187;
  FMIPDevice.lostMetadata.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v79, 1, v60) != 1)
  {
    uint64_t v186 = v5;
    char v81 = v191;
    (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(v191, v79, v60);
    uint64_t v82 = v203;
    FMIPDeviceLostModeMetadata.status.getter();
    char v83 = FMIPActionStatus.isActionSuccessful.getter();
    uint64_t v84 = *(void (**)(char *, uint64_t))(v62 + 8);
    uint64_t v85 = v192;
    v84(v82, v192);
    if (v83 & 1) != 0 && (FMIPDevice.isLocalFindable.getter()) {
      goto LABEL_22;
    }
    uint64_t v86 = v175;
    FMIPDeviceLostModeMetadata.status.getter();
    char v87 = FMIPActionStatus.isActionSuccessful.getter();
    char v187 = v84;
    v84(v86, v85);
    uint64_t v88 = v176;
    uint64_t v89 = v178;
    uint64_t v90 = v177;
    (*(void (**)(char *, uint64_t, uint64_t))(v176 + 16))(v178, v199, v177);
    if (v87)
    {
      uint64_t v91 = v195;
      FMIPDevice.state.getter();
      uint64_t v92 = v91;
      int v93 = v196;
      static FMIPDeviceState.isLostModeEnabled.getter();
      sub_1004B825C((unint64_t *)&qword_1006C0390, (void (*)(uint64_t))&type metadata accessor for FMIPDeviceState);
      uint64_t v94 = v197;
      LODWORD(v182) = dispatch thunk of SetAlgebra.isSuperset(of:)();
      uint64_t v95 = *(void (**)(char *, uint64_t))(v59 + 8);
      uint64_t v85 = v192;
      v95(v93, v94);
      uint64_t v96 = v94;
      char v81 = v191;
      v95(v92, v96);
      unint64_t v62 = v207;
      (*(void (**)(char *, uint64_t))(v88 + 8))(v178, v90);
      if (v182)
      {
LABEL_22:
        unint64_t v80 = v180 | 0x40;
        (*(void (**)(char *, uint64_t))(v202 + 8))(v81, v201);
LABEL_33:
        uint64_t v5 = v186;
        goto LABEL_34;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v88 + 8))(v89, v90);
    }
    uint64_t v97 = v203;
    FMIPDeviceLostModeMetadata.status.getter();
    uint64_t v98 = enum case for FMIPActionStatus.pending(_:);
    uint64_t v99 = v190;
    uint64_t v182 = *(void (**)(void, void, void))(v62 + 104);
    v182(v190, enum case for FMIPActionStatus.pending(_:), v85);
    sub_1004B825C(&qword_1006C03C0, (void (*)(uint64_t))&type metadata accessor for FMIPActionStatus);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v100 = v209;
    uint64_t v101 = v210;
    char v102 = v187;
    v187(v99, v85);
    v102(v97, v85);
    uint64_t v103 = v201;
    uint64_t v104 = v202;
    char v105 = v173;
    (*(void (**)(char *, char *, uint64_t))(v202 + 16))(v173, v191, v201);
    if (v101 == v100)
    {
      char v106 = FMIPDeviceLostModeMetadata.canStopLostMode.getter();
      char v107 = *(void (**)(char *, uint64_t))(v104 + 8);
      v107(v105, v103);
      if (v106)
      {
        unint64_t v80 = v180 | 0x200;
        uint64_t v108 = v191;
LABEL_32:
        v107(v108, v103);
        uint64_t v59 = v198;
        goto LABEL_33;
      }
    }
    else
    {
      char v107 = *(void (**)(char *, uint64_t))(v104 + 8);
      v107(v105, v103);
    }
    uint64_t v109 = v203;
    uint64_t v108 = v191;
    FMIPDeviceLostModeMetadata.status.getter();
    uint64_t v110 = v190;
    v182(v190, v98, v85);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v112 = v209;
    uint64_t v111 = v210;
    unsigned int v113 = v110;
    uint64_t v114 = v187;
    v187(v113, v85);
    v114(v109, v85);
    if (v111 == v112) {
      unint64_t v80 = v180 | 0x80;
    }
    else {
      unint64_t v80 = v180;
    }
    uint64_t v103 = v201;
    goto LABEL_32;
  }
  sub_100003F10(v79, (uint64_t *)&unk_1006C0370);
  if (v78 == 1) {
    unint64_t v80 = v180;
  }
  else {
    unint64_t v80 = v180 | 0x40;
  }
LABEL_34:
  uint64_t v115 = v195;
  FMIPDevice.state.getter();
  uint64_t v116 = v196;
  static FMIPDeviceState.isNotifyWhenFoundEnabled.getter();
  uint64_t v117 = sub_1004B825C((unint64_t *)&qword_1006C0390, (void (*)(uint64_t))&type metadata accessor for FMIPDeviceState);
  uint64_t v118 = v197;
  unsigned __int8 v119 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  uint64_t v122 = *(char **)(v59 + 8);
  uint64_t v120 = v59 + 8;
  uint64_t v121 = v122;
  ((void (*)(char *, uint64_t))v122)(v116, v118);
  ((void (*)(char *, uint64_t))v122)(v115, v118);
  if ((v119 & ((v80 & 8) == 0)) != 0) {
    v80 |= 8uLL;
  }
  FMIPDevice.state.getter();
  static FMIPDeviceState.isNotifyWhenDetachedEnabled.getter();
  char v123 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  ((void (*)(char *, uint64_t))v121)(v116, v118);
  ((void (*)(char *, uint64_t))v121)(v115, v118);
  if (v123) {
    v80 |= 0x8000uLL;
  }
  FMIPDevice.state.getter();
  static FMIPDeviceState.isShowContactDetailsEnabled.getter();
  char v124 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  ((void (*)(char *, uint64_t))v121)(v116, v118);
  ((void (*)(char *, uint64_t))v121)(v115, v118);
  if (v124) {
    v80 |= 0x10000uLL;
  }
  FMIPDevice.state.getter();
  static FMIPDeviceState.isDeviceWithYou.getter();
  uint64_t v191 = (char *)v117;
  char v125 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  ((void (*)(char *, uint64_t))v121)(v116, v118);
  ((void (*)(char *, uint64_t))v121)(v115, v118);
  if (v125) {
    v80 |= 0x20000uLL;
  }
  uint64_t v126 = (uint64_t)v188;
  FMIPDevice.eraseMetadata.getter();
  uint64_t v127 = v200;
  uint64_t v128 = v189;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v200 + 48))(v126, 1, v189) == 1)
  {
    unint64_t v207 = v80;
    sub_100003F10(v126, &qword_1006B7B40);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v127 + 32))(v183, v126, v128);
    FMIPEraseMetadata.status.getter();
    uint64_t v188 = v121;
    unint64_t v129 = v207;
    uint64_t v130 = v190;
    uint64_t v131 = v192;
    (*(void (**)(char *, void, uint64_t))(v207 + 104))(v190, enum case for FMIPActionStatus.pending(_:), v192);
    sub_1004B825C(&qword_1006C03C0, (void (*)(uint64_t))&type metadata accessor for FMIPActionStatus);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v133 = v209;
    uint64_t v132 = v210;
    uint64_t v134 = v128;
    unint64_t v135 = *(void (**)(char *, uint64_t))(v129 + 8);
    v135(v130, v131);
    v135(v203, v131);
    uint64_t v121 = v188;
    uint64_t v136 = (v80 >> 8) & 1;
    if (v132 != v133) {
      LODWORD(v136) = 1;
    }
    if (!v136) {
      v80 |= 0x100uLL;
    }
    unint64_t v207 = v80;
    (*(void (**)(char *, uint64_t))(v200 + 8))(v183, v134);
  }
  uint64_t v138 = v193;
  uint64_t v137 = v194;
  uint64_t v139 = (uint64_t)v184;
  FMIPDevice.itemGroup.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v138 + 48))(v139, 1, v137) == 1)
  {
    sub_100003F10(v139, &qword_1006B36B0);
    uint64_t v140 = v207;
  }
  else
  {
    uint64_t v198 = v120;
    (*(void (**)(char *, uint64_t, uint64_t))(v138 + 32))(v185, v139, v137);
    uint64_t v141 = FMIPItemGroup.items.getter();
    unint64_t v142 = *(void *)(v141 + 16);
    if (v142)
    {
      uint64_t v188 = v121;
      char v143 = *(char **)(v174 + 16);
      unint64_t v144 = (*(unsigned __int8 *)(v174 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v174 + 80);
      uint64_t v192 = v141;
      unint64_t v145 = v141 + v144;
      uint64_t v202 = *(void *)(v174 + 72);
      uint64_t v203 = v143;
      uint64_t v200 = v174 + 8;
      uint64_t v201 = v179 + 8;
      unint64_t v147 = v207;
      uint64_t v146 = v208;
      uint64_t v148 = v205;
      char v149 = v206;
      uint64_t v150 = v204;
      uint64_t v151 = (void (**)(char *, uint64_t))(v179 + 8);
      do
      {
        unint64_t v207 = v142;
        ((void (*)(char *, unint64_t, uint64_t))v203)(v146, v145, v5);
        FMIPItem.state.getter();
        static FMIPItemState.separationWarningActive.getter();
        sub_1004B825C((unint64_t *)&qword_1006BEB30, (void (*)(uint64_t))&type metadata accessor for FMIPItemState);
        unsigned __int8 v152 = dispatch thunk of SetAlgebra.isSuperset(of:)();
        uint64_t v153 = v5;
        uint64_t v154 = *v151;
        (*v151)(v150, v148);
        v154(v149, v148);
        uint64_t v5 = v153;
        BOOL v155 = (v152 & ((v147 & 0x1000) == 0)) == 0;
        uint64_t v146 = v208;
        if (!v155) {
          v147 |= 0x1000uLL;
        }
        (*(void (**)(char *, uint64_t))v200)(v208, v153);
        v145 += v202;
        unint64_t v142 = v207 - 1;
      }
      while (v207 != 1);
      unint64_t v207 = v147;
      swift_bridgeObjectRelease();
      uint64_t v156 = v205;
      uint64_t v157 = v206;
      uint64_t v121 = v188;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v156 = v205;
      uint64_t v157 = v206;
    }
    uint64_t v158 = v185;
    FMIPItemGroup.state.getter();
    uint64_t v159 = v204;
    static FMIPItemState.pairingLocked.getter();
    sub_1004B825C((unint64_t *)&qword_1006BEB30, (void (*)(uint64_t))&type metadata accessor for FMIPItemState);
    char v160 = dispatch thunk of SetAlgebra.isSuperset(of:)();
    uint64_t v161 = *(void (**)(char *, uint64_t))(v179 + 8);
    v161(v159, v156);
    v161(v157, v156);
    if (v160) {
      uint64_t v162 = v207 | 0x80000;
    }
    else {
      uint64_t v162 = v207;
    }
    FMIPItemGroup.state.getter();
    static FMIPItemState.pairingIncomplete.getter();
    unsigned __int8 v163 = dispatch thunk of SetAlgebra.isSuperset(of:)();
    v161(v159, v156);
    v161(v157, v156);
    if ((v163 & ((v162 & 0x40000) == 0)) != 0) {
      uint64_t v140 = v162 | 0x40000;
    }
    else {
      uint64_t v140 = v162;
    }
    (*(void (**)(char *, uint64_t))(v193 + 8))(v158, v194);
  }
  uint64_t v164 = v195;
  FMIPDevice.state.getter();
  int64_t v165 = v196;
  static FMIPDeviceState.separationWarningActive.getter();
  uint64_t v166 = v197;
  unsigned __int8 v167 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  ((void (*)(char *, uint64_t))v121)(v165, v166);
  ((void (*)(char *, uint64_t))v121)(v164, v166);
  if ((v167 & ((v140 & 0x1000) == 0)) != 0) {
    v140 |= 0x1000uLL;
  }
  FMIPDevice.state.getter();
  static FMIPDeviceState.isInRepairMode.getter();
  char v168 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  ((void (*)(char *, uint64_t))v121)(v165, v166);
  ((void (*)(char *, uint64_t))v121)(v164, v166);
  if (v168) {
    return v140 | 0x100000;
  }
  else {
    return v140;
  }
}

uint64_t sub_1004B7168()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v50 = *(void *)(v0 - 8);
  uint64_t v51 = v0;
  uint64_t v1 = __chkstk_darwin(v0);
  uint64_t v47 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v48 = (char *)&v44 - v3;
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v49 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v44 - v7;
  uint64_t v9 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v44 - v13;
  uint64_t v15 = type metadata accessor for FMIPDeviceState();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v44 - v20;
  FMIPDevice.state.getter();
  static FMIPDeviceState.isLocating.getter();
  sub_1004B825C((unint64_t *)&qword_1006C0390, (void (*)(uint64_t))&type metadata accessor for FMIPDeviceState);
  char v22 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v16 + 8);
  v23(v19, v15);
  v23(v21, v15);
  if (v22)
  {
LABEL_11:
    char v41 = 0;
    return v41 & 1;
  }
  FMIPDevice.bestLocation.getter();
  uint64_t v24 = type metadata accessor for FMIPLocation();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v26 = v46(v8, 1, v24);
  uint64_t v45 = v25;
  if (v26 == 1)
  {
    sub_100003F10((uint64_t)v8, (uint64_t *)&unk_1006B2AE0);
    uint64_t v27 = 1;
  }
  else
  {
    uint64_t v28 = (void *)FMIPLocation.location.getter();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v24);
    id v29 = [v28 timestamp];

    static Date._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v27 = 0;
  }
  uint64_t v31 = v50;
  uint64_t v30 = v51;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v14, v27, 1, v51);
  sub_100006AB0((uint64_t)v14, (uint64_t)v12, (uint64_t *)&unk_1006AF6E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v12, 1, v30) == 1)
  {
    sub_100003F10((uint64_t)v12, (uint64_t *)&unk_1006AF6E0);
LABEL_9:
    uint64_t v42 = (uint64_t)v49;
    FMIPDevice.bestLocation.getter();
    if (v46((char *)v42, 1, v24) != 1)
    {
      char v41 = FMIPLocation.isOld.getter();
      sub_100003F10((uint64_t)v14, (uint64_t *)&unk_1006AF6E0);
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v42, v24);
      return v41 & 1;
    }
    sub_100003F10((uint64_t)v14, (uint64_t *)&unk_1006AF6E0);
    sub_100003F10(v42, (uint64_t *)&unk_1006B2AE0);
    goto LABEL_11;
  }
  uint64_t v32 = v48;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v48, v12, v30);
  uint64_t v33 = v47;
  Date.init()();
  Date.timeIntervalSince1970.getter();
  double v35 = v34;
  uint64_t v36 = *(void (**)(char *, uint64_t))(v31 + 8);
  v36(v33, v30);
  Date.timeIntervalSince1970.getter();
  double v38 = v35 - v37;
  FMIPOldLocationAgeThresholdInSeconds.getter();
  double v40 = v39;
  v36(v32, v30);
  if (v40 >= v38) {
    goto LABEL_9;
  }
  sub_100003F10((uint64_t)v14, (uint64_t *)&unk_1006AF6E0);
  char v41 = 1;
  return v41 & 1;
}

uint64_t sub_1004B76E4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B76F4()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1004B76FC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B770C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004B7744()
{
  return *(void *)(*(void *)(v0 + 16) + 16);
}

uint64_t sub_1004B7750()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7760()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7770()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7780()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7790()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B77A0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B77B0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B77C0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B77D0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1004B77E0(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
}

uint64_t sub_1004B77EC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B77FC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B780C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B781C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B782C()
{
  return sub_10007E5B0(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1004B7834()
{
  return sub_10007E5DC(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1004B783C@<X0>(_DWORD *a1@<X8>)
{
  return sub_10007E604(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1004B7844(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_10007E44C(a1, a2, a3, *(void (**)(uint64_t *__return_ptr))(v3 + 16));
}

uint64_t sub_1004B784C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B785C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B786C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B787C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B788C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000B13AC(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1004B7894()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B78A4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B78B4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B78C4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B78D4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B78E4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B78F4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7904()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7914()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7924()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7934()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7944()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7958()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7968()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7978()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004B7988()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7998()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B79AC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B79C0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B79D0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B79E0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004B79F0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7A00()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7A10()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7A20()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7A34()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7A44()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7A54()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004B7A64()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7A74()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7A88()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7A98()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7AA8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004B7AB8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7AC8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7ADC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7AEC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7AFC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004B7B0C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7B1C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7B30()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7B40()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7B50()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004B7B60()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7B70()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7B84()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7B94()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7BA4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004B7BB4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7BC4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7BD8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7BE8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7BF8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004B7C08()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7C18()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7C2C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7C3C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7C4C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004B7C5C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7C6C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7C80()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7C90()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7CA0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004B7CB0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7CC0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7CD4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7CE4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7CF4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004B7D04()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7D14()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7D28()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7D38()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7D48()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004B7D58()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7D68()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7D7C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7D8C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7D9C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004B7DAC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7DBC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7DD0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7DE0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7DF0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7E00()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004B7E10()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7E20()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7E30()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7E40()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7E54()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7E64()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7E74()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004B7E84()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7E94()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7EA8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7EB8()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v3);
  char v1 = v3;

  return FMSoundPlatterViewLayout.description.getter(v1);
}

uint64_t sub_1004B7F00()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7F10()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7F20()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7F30()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7F40()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7F50()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7F60()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7F70()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7F80()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004B7F90()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7FA0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7FB0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7FC0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7FD0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7FE0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B7FF0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B8000()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B8010()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B8020()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B8030()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B8040()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B8050()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004B8088()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B8098()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B80A8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B80B8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B80CC()
{
  return FMIPDevice.identifier.getter();
}

uint64_t sub_1004B8128()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B8138()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B8148()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004B8158()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004B8168()
{
  return _swift_deallocObject(v0, 17, 7);
}

BOOL sub_1004B8178(uint64_t a1)
{
  return (sub_1000EBAD8(a1, *(void **)(v1 + 16), *(void *)(v1 + 24)) & 0x60) != 0;
}

uint64_t sub_1004B81AC(uint64_t *a1)
{
  return sub_1004B820C(a1, (uint64_t (*)(char *))sub_1003EA650) & 1;
}

uint64_t sub_1004B81DC(uint64_t *a1)
{
  return sub_1004B820C(a1, (uint64_t (*)(char *))sub_1003EA5DC) & 1;
}

uint64_t sub_1004B820C(uint64_t *a1, uint64_t (*a2)(char *))
{
  uint64_t v3 = *a1;
  uint64_t v5[2] = *(void *)(v2 + 16);
  return sub_1004972B0(a2, (char)v5, v3, (uint64_t (*)(void))&type metadata accessor for FMIPItem) & 1;
}

uint64_t sub_1004B825C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004B82A4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100046C48(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004B84F4()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMDeviceImageLoader()
{
  return self;
}

double sub_1004B8558()
{
  double result = 6.0;
  xmmword_1006D27F0 = xmmword_10056A050;
  return result;
}

void sub_1004B8594()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10005D034(&qword_1006B2AF0);
  __chkstk_darwin(v2 - 8);
  uint64_t v130 = (char *)&v127 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = type metadata accessor for FMFDevice();
  uint64_t v133 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  char v143 = (char *)&v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10005D034(&qword_1006AEFE8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v131 = (uint64_t)&v127 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v132 = (char *)&v127 - v8;
  uint64_t v9 = sub_10005D034((uint64_t *)&unk_1006AEE40);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  unint64_t v142 = (char *)&v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v141 = (void (*)(char *, unint64_t, uint64_t))((char *)&v127 - v13);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v127 - v14;
  uint64_t v16 = (objc_class *)type metadata accessor for FMTrustedLocationDetailViewController();
  v148.receiver = v0;
  v148.super_class = v16;
  [super viewDidLoad];
  id v17 = [v0 view];
  if (!v17)
  {
    __break(1u);
LABEL_55:
    __break(1u);
    return;
  }
  uint64_t v18 = v17;
  uint64_t v19 = self;
  id v20 = [v19 secondarySystemBackgroundColor];
  [v18 setBackgroundColor:v20];

  uint64_t v21 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_scrollView;
  id v22 = *(id *)&v1[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_scrollView];
  id v23 = [v19 secondarySystemBackgroundColor];
  [v22 setBackgroundColor:v23];

  uint64_t v24 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_contentStackView;
  id v25 = *(id *)&v1[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_contentStackView];
  id v138 = v19;
  id v26 = [v19 secondarySystemBackgroundColor];
  [v25 setBackgroundColor:v26];

  [*(id *)&v1[v21] setPreservesSuperviewLayoutMargins:1];
  [*(id *)&v1[v21] setContentInsetAdjustmentBehavior:3];
  [*(id *)&v1[v24] setPreservesSuperviewLayoutMargins:1];
  [*(id *)&v1[v24] setAxis:1];
  sub_1004B9A0C();
  id v27 = [objc_allocWithZone((Class)UIView) init];
  [*(id *)&v1[v24] addArrangedSubview:v27];
  uint64_t v28 = *(void **)&v1[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindImageView];
  [*(id *)&v1[v24] addArrangedSubview:v28];
  uint64_t v29 = *(void *)&v1[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindSwitchSection];
  uint64_t v30 = *(void **)(v29 + OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentStackView);
  uint64_t v137 = *(char **)&v1[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindSwitch];
  [v30 addArrangedSubview:];
  [*(id *)&v1[v24] addArrangedSubview:v29];
  uint64_t v31 = *(void **)&v1[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindDescription];
  [*(id *)&v1[v24] addArrangedSubview:v31];
  uint64_t v32 = *(void **)&v1[v24];
  id v129 = *(id *)&v1[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_trustedLocationsDescription];
  [v32 addArrangedSubview:];
  uint64_t v33 = *(void *)&v1[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_nonMeDescriptionPadView];
  [*(id *)&v1[v24] addArrangedSubview:v33];
  uint64_t v34 = *(void *)&v1[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_trustedLocationsSection];
  [*(id *)&v1[v24] addArrangedSubview:v34];
  double v35 = *(void **)&v1[v24];
  uint64_t v136 = *(void *)&v1[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestionsSection];
  [v35 addArrangedSubview:];
  [v28 setContentMode:1];
  if (qword_1006AE430 != -1) {
    swift_once();
  }
  long long v36 = xmmword_1006D27F0;
  [*(id *)&v1[v24] setCustomSpacing:v27 afterView:*(double *)&xmmword_1006D27F0];
  [*(id *)&v1[v24] setCustomSpacing:v28 afterView:*(double *)&v36];
  double v37 = *(void **)&v1[v24];
  unint64_t v135 = v31;
  [v37 setCustomSpacing:v31 afterView:*(double *)&v36 + *(double *)&v36];
  [*(id *)&v1[v24] setCustomSpacing:v33 afterView:*((double *)&v36 + 1)];
  [*(id *)&v1[v24] setCustomSpacing:v34 afterView:*((double *)&v36 + 1)];
  [*(id *)&v1[v21] addSubview:*(void *)&v1[v24]];
  id v38 = [v1 view];
  if (!v38) {
    goto LABEL_55;
  }
  double v39 = v38;
  [v38 addSubview:*(void *)&v1[v21]];

  id v147 = *(id *)&v1[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator];
  swift_retain();
  dispatch thunk of FMFManager.myInfo.getter();
  swift_release();
  uint64_t v40 = type metadata accessor for FMFMyInfo();
  uint64_t v41 = *(void *)(v40 - 8);
  unint64_t v145 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
  uint64_t v146 = v41 + 48;
  int v42 = v145(v15, 1, v40);
  uint64_t v43 = (uint64_t)v141;
  if (v42 == 1)
  {
    sub_100003F10((uint64_t)v15, (uint64_t *)&unk_1006AEE40);
    uint64_t v44 = 0;
    uint64_t v45 = 0;
  }
  else
  {
    uint64_t v44 = FMFMyInfo.meDeviceId.getter();
    uint64_t v45 = v46;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v40);
  }
  swift_retain();
  dispatch thunk of FMFManager.myInfo.getter();
  swift_release();
  int v47 = v145((char *)v43, 1, v40);
  id v134 = v27;
  if (v47 == 1)
  {
    sub_100003F10(v43, (uint64_t *)&unk_1006AEE40);
    if (!v45) {
      goto LABEL_50;
    }
    goto LABEL_18;
  }
  uint64_t v48 = FMFMyInfo.deviceId.getter();
  uint64_t v50 = v49;
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v43, v40);
  if (!v45)
  {
    if (!v50) {
      goto LABEL_50;
    }
    goto LABEL_18;
  }
  if (!v50)
  {
LABEL_18:
    swift_bridgeObjectRelease();
LABEL_19:
    swift_retain();
    uint64_t v51 = dispatch thunk of FMFManager.devices.getter();
    swift_release();
    if (!v51)
    {
      uint64_t v66 = v133;
      uint64_t v67 = (uint64_t)v132;
      uint64_t v53 = v144;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v133 + 56))(v132, 1, 1, v144);
      goto LABEL_38;
    }
    uint64_t v128 = v1;
    uint64_t v52 = *(void *)(v51 + 16);
    uint64_t v53 = v144;
    if (!v52)
    {
LABEL_33:
      uint64_t v66 = v133;
      uint64_t v67 = (uint64_t)v132;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v133 + 56))(v132, 1, 1, v53);
      goto LABEL_37;
    }
    uint64_t v54 = *(void (**)(char *, unint64_t, uint64_t))(v133 + 16);
    unint64_t v55 = v51 + ((*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80));
    uint64_t v139 = (void (**)(uint64_t, uint64_t))(v41 + 8);
    int v56 = (void (**)(char *, uint64_t))(v133 + 8);
    uint64_t v140 = *(void *)(v133 + 72);
    uint64_t v141 = v54;
    uint64_t v127 = v51;
    swift_bridgeObjectRetain();
    uint64_t v58 = (uint64_t)v142;
    unint64_t v57 = v143;
    while (1)
    {
      v141(v57, v55, v53);
      uint64_t v60 = FMFDevice.identifier.getter();
      uint64_t v62 = v61;
      swift_retain();
      dispatch thunk of FMFManager.myInfo.getter();
      swift_release();
      if (v145((char *)v58, 1, v40) == 1) {
        break;
      }
      uint64_t v63 = FMFMyInfo.meDeviceId.getter();
      uint64_t v65 = v64;
      (*v139)(v58, v40);
      if (!v65) {
        goto LABEL_30;
      }
      if (v60 == v63 && v65 == v62)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_36:
        uint64_t v53 = v144;
        swift_bridgeObjectRelease();
        uint64_t v66 = v133;
        uint64_t v67 = (uint64_t)v132;
        (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v132, v143, v53);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v66 + 56))(v67, 0, 1, v53);
LABEL_37:
        swift_bridgeObjectRelease();
        uint64_t v1 = v128;
LABEL_38:
        uint64_t v69 = v131;
        sub_100006AB0(v67, v131, &qword_1006AEFE8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v69, 1, v53) == 1)
        {
          sub_100003F10(v69, &qword_1006AEFE8);
          uint64_t v70 = v67;
          goto LABEL_49;
        }
        uint64_t v71 = FMFDevice.name.getter();
        uint64_t v73 = v72;
        (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v69, v53);
        uint64_t v74 = *(void *)&v1[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_beaconUUID + 8];
        if (v74)
        {
          uint64_t v75 = *(void *)&v1[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_beaconUUID];
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v76 = FMIPManager.devices.getter();
          swift_bridgeObjectRetain();
          uint64_t v77 = sub_1004B2348(v76, v75, v74);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v78 = *((void *)v77 + 2);
          uint64_t v79 = type metadata accessor for FMIPDevice();
          uint64_t v80 = *(void *)(v79 - 8);
          if (v78)
          {
            uint64_t v81 = (uint64_t)v130;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v130, &v77[(*(unsigned __int8 *)(*(void *)(v79 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v79 - 8) + 80)], v79);
            uint64_t v82 = 0;
          }
          else
          {
            uint64_t v82 = 1;
            uint64_t v81 = (uint64_t)v130;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v80 + 56))(v81, v82, 1, v79);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          int v83 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v81, 1, v79);
          sub_100003F10(v81, &qword_1006B2AF0);
          id v84 = [self mainBundle];
          uint64_t v85 = v132;
          unint64_t v86 = 0xD00000000000001BLL;
          if (v83 == 1)
          {
            unint64_t v87 = 0xD00000000000003BLL;
            unint64_t v126 = 0x8000000100582B40;
            uint64_t v88 = "ITEM_NOTIFICATIONS_LEFT_BEHIND_TRUSTED_LOCATION_DESCRIPTION";
          }
          else
          {
            unint64_t v87 = 0xD00000000000003DLL;
            unint64_t v126 = 0x8000000100582B40;
            uint64_t v88 = "DEVICE_NOTIFICATIONS_LEFT_BEHIND_TRUSTED_LOCATION_DESCRIPTION";
          }
          unint64_t v89 = (unint64_t)(v88 - 32) | 0x8000000000000000;
          v90.value._unint64_t object = (void *)0x8000000100582B20;
          v90.value._uint64_t countAndFlagsBits = 0xD000000000000016;
          v91._uint64_t countAndFlagsBits = 0;
          v91._unint64_t object = (void *)0xE000000000000000;
          NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v87, v90, (NSBundle)v84, v91, *(Swift::String *)&v86);

          sub_10005D034((uint64_t *)&unk_1006AF790);
          uint64_t v92 = swift_allocObject();
          *(_OWORD *)(v92 + 16) = xmmword_10055B970;
          *(void *)(v92 + 56) = &type metadata for String;
          *(void *)(v92 + 64) = sub_10007F2C8();
          *(void *)(v92 + 32) = v71;
          *(void *)(v92 + 40) = v73;
          String.init(format:_:)();
          swift_bridgeObjectRelease();
          NSString v93 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v94 = v129;
          [v129 setText:v93];

          [v94 setNumberOfLines:0];
          id v95 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
          [v94 setFont:v95];

          id v96 = [v138 secondaryLabelColor];
          [v94 setTextColor:v96];

          [v94 setLineBreakMode:0];
          [v94 sizeToFit];
          uint64_t v70 = (uint64_t)v85;
LABEL_49:
          sub_100003F10(v70, &qword_1006AEFE8);
        }
        else
        {
          sub_100003F10(v67, &qword_1006AEFE8);
          swift_bridgeObjectRelease();
        }
        goto LABEL_50;
      }
      char v59 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v59) {
        goto LABEL_36;
      }
LABEL_23:
      unint64_t v57 = v143;
      uint64_t v53 = v144;
      (*v56)(v143, v144);
      v55 += v140;
      if (!--v52)
      {
        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
    }
    sub_100003F10(v58, (uint64_t *)&unk_1006AEE40);
LABEL_30:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  if (v44 == v48 && v45 == v50)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_50;
  }
  char v68 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v68 & 1) == 0) {
    goto LABEL_19;
  }
LABEL_50:
  sub_1004B98EC();
  sub_1004BFCF8();
  uint64_t v97 = *(void **)(v136 + OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_sectionLabel);
  uint64_t v98 = &v1[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestedSafeLocations];
  swift_beginAccess();
  if (*(void *)(*(void *)v98 + 16))
  {
    uint64_t v99 = self;
    id v100 = v97;
    id v101 = [v99 mainBundle];
    v149._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
    v102._uint64_t countAndFlagsBits = 0xD000000000000024;
    v149._unint64_t object = (void *)0x8000000100582B40;
    v102._unint64_t object = (void *)0x800000010059F960;
    v103.value._unint64_t object = (void *)0x8000000100582B20;
    v103.value._uint64_t countAndFlagsBits = 0xD000000000000016;
    v104._uint64_t countAndFlagsBits = 0;
    v104._unint64_t object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v102, v103, (NSBundle)v101, v104, v149);

    NSString v105 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v107 = v97;
    NSString v105 = 0;
  }
  char v106 = v135;
  [v97 setText:v105];

  sub_1004BB20C();
  NSString v108 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v106 setText:v108];

  [v106 setNumberOfLines:0];
  id v109 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
  [v106 setFont:v109];

  id v110 = [v138 secondaryLabelColor];
  [v106 setTextColor:v110];

  [v106 setLineBreakMode:0];
  [v106 sizeToFit];
  id v147 = self;
  id v111 = [v147 mainBundle];
  v150._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  uint64_t v146 = 0xD00000000000001BLL;
  v150._unint64_t object = (void *)0x8000000100582B40;
  v112._uint64_t countAndFlagsBits = 0xD000000000000023;
  v112._unint64_t object = (void *)0x800000010058D9F0;
  v113.value._uint64_t countAndFlagsBits = 0xD000000000000016;
  v113.value._unint64_t object = (void *)0x8000000100582B20;
  v114._uint64_t countAndFlagsBits = 0;
  v114._unint64_t object = (void *)0xE000000000000000;
  Swift::String v115 = NSLocalizedString(_:tableName:bundle:value:comment:)(v112, v113, (NSBundle)v111, v114, v150);

  uint64_t v116 = v137;
  *(Swift::String *)&v137[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_title] = v115;
  swift_bridgeObjectRelease();
  id v117 = *(id *)&v116[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_titleLabel];
  swift_bridgeObjectRetain();
  NSString v118 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v117 setText:v118];

  *(void *)&v116[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_delegate + 8] = &off_100641558;
  swift_unknownObjectWeakAssign();
  NSString v119 = String._bridgeToObjectiveC()();
  [v116 setAccessibilityIdentifier:v119];

  v116[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_separated] = 0;
  [*(id *)&v116[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_separator] setHidden:1];
  id v120 = [v1 navigationItem];
  id v121 = [v147 mainBundle];
  v151._unint64_t object = (void *)0x8000000100582B40;
  v122._uint64_t countAndFlagsBits = 0xD000000000000023;
  v122._unint64_t object = (void *)0x800000010058D9F0;
  v123.value._uint64_t countAndFlagsBits = 0xD000000000000016;
  v123.value._unint64_t object = (void *)0x8000000100582B20;
  v124._uint64_t countAndFlagsBits = 0;
  v124._unint64_t object = (void *)0xE000000000000000;
  v151._uint64_t countAndFlagsBits = v146;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v122, v123, (NSBundle)v121, v124, v151);

  NSString v125 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v120 setTitle:v125];
}

void sub_1004B98EC()
{
  id v1 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:0 target:v0 action:"doneAction"];
  id v2 = [v0 navigationItem];
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10055BD30;
  *(void *)(v3 + 32) = v1;
  specialized Array._endMutation()();
  sub_100006060(0, &qword_1006AF860);
  id v4 = v1;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 setRightBarButtonItems:isa animated:0];
}

uint64_t sub_1004B9A0C()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1004B9DFC();
  if (!v8) {
    uint64_t v8 = [objc_allocWithZone((Class)MKAnnotationView) init];
  }
  uint64_t v9 = v8;
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v9;
  *(void *)(v11 + 24) = v0;
  aBlock[4] = sub_1004C0890;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_1006417A0;
  uint64_t v12 = _Block_copy(aBlock);
  id v13 = v9;
  id v14 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100045CC4((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_10005ECA8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v17);
}

id sub_1004B9CF8(id a1, uint64_t a2)
{
  if (qword_1006AE1C0 != -1) {
    swift_once();
  }
  [a1 frame];
  [a1 setFrame:];
  id v4 = *(void **)(a2 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindImageView);
  [v4 addSubview:a1];
  [v4 bounds];
  double v6 = v5 * 0.5 - *((double *)&xmmword_1006D1F40 + 1);
  [v4 bounds];

  return [a1 setCenter:v6, v7 * 0.5];
}

unsigned char *sub_1004B9DFC()
{
  uint64_t v1 = type metadata accessor for FMIPItem();
  uint64_t v81 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FMIPDevice();
  uint64_t v83 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v80 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v75 - v10;
  uint64_t v12 = sub_10005D034(&qword_1006B2AF0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v75 - v16;
  id v18 = [objc_allocWithZone((Class)CLLocation) init];
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_beaconUUID + 8);
  if (!v20)
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_1000606BC(v26, (uint64_t)qword_1006D1E98);
    id v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "FMTrustedLocationDetailViewController: no beacon UUID", v29, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  uint64_t v75 = v3;
  uint64_t v76 = v9;
  uint64_t v82 = v1;
  id v84 = v17;
  uint64_t v78 = v11;
  id v79 = v18;
  uint64_t v21 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_beaconUUID);
  uint64_t v77 = v0;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v22 = FMIPManager.devices.getter();
  swift_bridgeObjectRetain();
  id v23 = sub_1004B2348(v22, v21, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)v23 + 2))
  {
    uint64_t v24 = v83;
    uint64_t v25 = (uint64_t)v84;
    (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v84, &v23[(*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80)], v4);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v25, 0, 1, v4);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v83 + 56))(v84, 1, 1, v4);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v30 = FMIPManager.items.getter();
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_100140C38(v30, v21, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)v31 + 2))
  {
    uint64_t v33 = v81;
    uint64_t v32 = v82;
    uint64_t v34 = (uint64_t)v78;
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v78, &v31[(*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80)], v82);
    uint64_t v35 = 0;
    long long v36 = v79;
    uint64_t v37 = (uint64_t)v84;
  }
  else
  {
    uint64_t v35 = 1;
    uint64_t v34 = (uint64_t)v78;
    long long v36 = v79;
    uint64_t v37 = (uint64_t)v84;
    uint64_t v33 = v81;
    uint64_t v32 = v82;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v34, v35, 1, v32);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v38 = v83;
  double v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v83 + 48);
  int v40 = v39(v37, 1, v4);
  sub_100006AB0(v37, (uint64_t)v15, &qword_1006B2AF0);
  if (v39((uint64_t)v15, 1, v4) == 1)
  {
    sub_100003F10((uint64_t)v15, &qword_1006B2AF0);
  }
  else
  {
    uint64_t v41 = v80;
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v80, v15, v4);
    if (v40 != 1)
    {
      uint64_t v64 = (void *)sub_1004BA74C(v41, v36);
      sub_10005D034(&qword_1006AF2D0);
      uint64_t v65 = swift_allocObject();
      *(_OWORD *)(v65 + 16) = xmmword_10055BD30;
      *(void *)(v65 + 32) = v64;
      unint64_t v85 = v65;
      specialized Array._endMutation()();
      unint64_t v66 = v85;
      id v67 = objc_allocWithZone((Class)type metadata accessor for FMClusterAnnotation());
      char v68 = v41;
      id v69 = v64;
      sub_1003FA2A0(v66);
      uint64_t v71 = v70;
      id v72 = objc_allocWithZone((Class)type metadata accessor for FMClusteredAnnotationView());
      NSString v73 = String._bridgeToObjectiveC()();
      uint64_t v49 = [v72 initWithAnnotation:v71 reuseIdentifier:v73];

      (*(void (**)(char *, uint64_t))(v38 + 8))(v68, v4);
      if (v49) {
        goto LABEL_25;
      }
      goto LABEL_27;
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v4);
  }
  uint64_t v42 = (uint64_t)v76;
  sub_100006AB0(v34, (uint64_t)v76, (uint64_t *)&unk_1006AFE30);
  uint64_t v43 = v82;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v42, 1, v82) != 1)
  {
    uint64_t v50 = (uint64_t)v75;
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v75, v42, v43);
    uint64_t v51 = (void *)sub_1004BAD80(v50, v36);
    sub_10005D034(&qword_1006AF2D0);
    uint64_t v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_10055BD30;
    *(void *)(v52 + 32) = v51;
    unint64_t v85 = v52;
    specialized Array._endMutation()();
    unint64_t v53 = v85;
    id v54 = objc_allocWithZone((Class)type metadata accessor for FMClusterAnnotation());
    uint64_t v55 = v43;
    id v56 = v51;
    sub_1003FA2A0(v53);
    uint64_t v58 = v57;
    id v59 = objc_allocWithZone((Class)type metadata accessor for FMClusteredAnnotationView());
    NSString v60 = String._bridgeToObjectiveC()();
    uint64_t v49 = [v59 initWithAnnotation:v58 reuseIdentifier:v60];

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v50, v55);
    if (v49)
    {
LABEL_25:
      uint64_t v61 = OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_puckHidden;
      v49[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_puckHidden] = 1;
      uint64_t v62 = *(void **)&v49[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_puckIcon];
      uint64_t v63 = v49;
      [v62 setHidden:1];
      [*(id *)&v63[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_puckBackgroundLayer] setHidden:v49[v61]];

      sub_100003F10(v34, (uint64_t *)&unk_1006AFE30);
LABEL_28:
      sub_100003F10((uint64_t)v84, &qword_1006B2AF0);
      return v49;
    }
LABEL_27:
    sub_100003F10(v34, (uint64_t *)&unk_1006AFE30);

    goto LABEL_28;
  }
  uint64_t v44 = v37;
  sub_100003F10(v42, (uint64_t *)&unk_1006AFE30);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v45 = type metadata accessor for Logger();
  sub_1000606BC(v45, (uint64_t)qword_1006D1E98);
  uint64_t v46 = Logger.logObject.getter();
  os_log_type_t v47 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v48 = 0;
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "FMTrustedLocationDetailViewController: no item or device", v48, 2u);
    swift_slowDealloc();
  }

  sub_100003F10(v34, (uint64_t *)&unk_1006AFE30);
  sub_100003F10(v44, &qword_1006B2AF0);
  return 0;
}

uint64_t sub_1004BA74C(char *a1, void *a2)
{
  id v48 = a2;
  uint64_t v3 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  __chkstk_darwin(v3 - 8);
  uint64_t v49 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for FMIPDevice();
  uint64_t v50 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v46 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMIPDeviceImageCacheRequest();
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMIPDeviceImageSize();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v44 - v14;
  uint64_t v16 = sub_10005D034(&qword_1006B36B0);
  __chkstk_darwin(v16 - 8);
  id v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for FMIPItemGroup();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = a1;
  FMIPDevice.itemGroup.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_100003F10((uint64_t)v18, &qword_1006B36B0);
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v15, enum case for FMIPDeviceImageSize.list(_:), v9);
    uint64_t v23 = (uint64_t)v46;
    uint64_t v24 = v47;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v46, v51, v47);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    uint64_t v25 = self;
    swift_retain();
    id v26 = [v25 mainScreen];
    [v26 scale];

    FMIPDeviceImageCacheRequest.init(device:size:scale:)();
    dispatch thunk of FMImageCache.cachedImage(for:completion:)();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v45);
    swift_release();
    id v27 = v52;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
    swift_retain();
    uint64_t v28 = FMIPItemGroup.items.getter();
    uint64_t v29 = v9;
    uint64_t v30 = sub_1000EE574(v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v15, enum case for FMIPDeviceImageSize.list(_:), v29);
    id v27 = (void *)sub_1001C2C24(v30, v51, (uint64_t)v15, 0, 0);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v29);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    uint64_t v23 = (uint64_t)v46;
    uint64_t v24 = v47;
  }
  uint64_t v31 = v50;
  id v32 = v48;
  [v48 coordinate];
  double v34 = v33;
  double v36 = v35;
  [v32 horizontalAccuracy];
  double v38 = v37;
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v23, v51, v24);
  uint64_t v39 = type metadata accessor for FMIPItem();
  uint64_t v40 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v49, 1, 1, v39);
  id v41 = objc_allocWithZone((Class)type metadata accessor for FMDeviceAnnotation());
  uint64_t v42 = sub_1003E930C(v23, v40, v27, 0, 0, 2, v34, v36, v38);

  return v42;
}

uint64_t sub_1004BAD80(uint64_t a1, void *a2)
{
  id v41 = a2;
  uint64_t v44 = a1;
  uint64_t v2 = type metadata accessor for FMIPItem();
  uint64_t v42 = *(void *)(v2 - 8);
  uint64_t v43 = v2;
  __chkstk_darwin(v2);
  uint64_t v40 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for FMIPItemRole();
  uint64_t v4 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMIPItemImageCacheRequest();
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v39 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMIPItemImageSize();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v36 - v15;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))((char *)v36 - v15, enum case for FMIPItemImageSize.list(_:), v10);
  uint64_t v17 = self;
  swift_retain();
  id v18 = [v17 systemBackgroundColor];
  FMIPItem.role.getter();
  uint64_t v19 = FMIPItemRole.emoji.getter();
  v36[1] = v20;
  v36[2] = v19;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v37);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
  id v21 = [self mainScreen];
  [v21 scale];

  id v22 = [v18 CGColor];
  swift_bridgeObjectRetain();
  FMIPItemImageCacheRequest.init(emoji:size:scale:backgroundColor:osVersion:)();

  dispatch thunk of FMImageCache.cachedImage(for:completion:)();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v39);
  swift_release();
  uint64_t v23 = v45;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  id v24 = v41;
  [v41 coordinate];
  double v26 = v25;
  double v28 = v27;
  [v24 horizontalAccuracy];
  double v30 = v29;
  uint64_t v31 = (uint64_t)v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v40, v44, v43);
  id v32 = objc_allocWithZone((Class)type metadata accessor for FMItemAnnotation());
  sub_1001893DC(v31, v23, 0, 2, v26, v28, v30);
  uint64_t v34 = v33;

  return v34;
}

uint64_t sub_1004BB20C()
{
  uint64_t v1 = type metadata accessor for FMIPItem();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FMIPDevice();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v62 = (uint64_t)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v57 - v12;
  uint64_t v14 = sub_10005D034(&qword_1006B2AF0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_beaconUUID + 8);
  if (!v19)
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_1000606BC(v24, (uint64_t)qword_1006D1E98);
    double v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      double v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "FMTrustedLocationDetailViewController: no beacon UUID", v27, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  unint64_t v57 = v4;
  uint64_t v58 = v8;
  uint64_t v59 = v2;
  uint64_t v60 = v1;
  uint64_t v63 = (char *)&v57 - v18;
  uint64_t v61 = v13;
  uint64_t v20 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_beaconUUID);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v21 = FMIPManager.devices.getter();
  swift_bridgeObjectRetain();
  id v22 = sub_1004B2348(v21, v20, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)v22 + 2))
  {
    uint64_t v23 = v63;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v63, &v22[(*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)], v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v23, 0, 1, v5);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v63, 1, 1, v5);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v28 = FMIPManager.items.getter();
  swift_bridgeObjectRetain();
  double v29 = sub_100140C38(v28, v20, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)v29 + 2))
  {
    uint64_t v31 = v59;
    uint64_t v30 = v60;
    uint64_t v32 = (uint64_t)v61;
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v61, &v29[(*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80)], v60);
    uint64_t v33 = 0;
    uint64_t v34 = (uint64_t)v63;
  }
  else
  {
    uint64_t v33 = 1;
    uint64_t v30 = v60;
    uint64_t v32 = (uint64_t)v61;
    uint64_t v34 = (uint64_t)v63;
    uint64_t v31 = v59;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(v32, v33, 1, v30);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100006AB0(v34, (uint64_t)v17, &qword_1006B2AF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v17, 1, v5) != 1)
  {
    uint64_t v37 = v58;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v58, v17, v5);
    id v38 = [self mainBundle];
    v64._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
    v39._uint64_t countAndFlagsBits = 0xD000000000000034;
    v64._unint64_t object = (void *)0x8000000100582B40;
    v39._unint64_t object = (void *)0x800000010059F920;
    v40.value._unint64_t object = (void *)0x8000000100582B20;
    v40.value._uint64_t countAndFlagsBits = 0xD000000000000016;
    v41._uint64_t countAndFlagsBits = 0;
    v41._unint64_t object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v39, v40, (NSBundle)v38, v41, v64);

    sub_10005D034((uint64_t *)&unk_1006AF790);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_10055B970;
    uint64_t v43 = FMIPDevice.name.getter();
    uint64_t v45 = v44;
    *(void *)(v42 + 56) = &type metadata for String;
    *(void *)(v42 + 64) = sub_10007F2C8();
    *(void *)(v42 + 32) = v43;
    *(void *)(v42 + 40) = v45;
    uint64_t v36 = String.init(format:_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v37, v5);
    sub_100003F10(v32, (uint64_t *)&unk_1006AFE30);
    uint64_t v46 = (uint64_t)v63;
LABEL_19:
    sub_100003F10(v46, &qword_1006B2AF0);
    return v36;
  }
  sub_100003F10((uint64_t)v17, &qword_1006B2AF0);
  uint64_t v35 = v62;
  sub_100006AB0(v32, v62, (uint64_t *)&unk_1006AFE30);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v35, 1, v30) != 1)
  {
    uint64_t v47 = v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v57, v35, v30);
    id v48 = [self mainBundle];
    v65._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
    v49._uint64_t countAndFlagsBits = 0xD000000000000032;
    v65._unint64_t object = (void *)0x8000000100582B40;
    v49._unint64_t object = (void *)0x800000010059F8E0;
    v50.value._unint64_t object = (void *)0x8000000100582B20;
    v50.value._uint64_t countAndFlagsBits = 0xD000000000000016;
    v51._uint64_t countAndFlagsBits = 0;
    v51._unint64_t object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v49, v50, (NSBundle)v48, v51, v65);

    sub_10005D034((uint64_t *)&unk_1006AF790);
    uint64_t v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_10055B970;
    uint64_t v53 = FMIPItem.name.getter();
    uint64_t v55 = v54;
    *(void *)(v52 + 56) = &type metadata for String;
    *(void *)(v52 + 64) = sub_10007F2C8();
    *(void *)(v52 + 32) = v53;
    *(void *)(v52 + 40) = v55;
    uint64_t v36 = String.init(format:_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v47, v30);
    sub_100003F10(v32, (uint64_t *)&unk_1006AFE30);
    uint64_t v46 = v34;
    goto LABEL_19;
  }
  sub_100003F10(v35, (uint64_t *)&unk_1006AFE30);
  sub_100003F10(v32, (uint64_t *)&unk_1006AFE30);
  sub_100003F10(v34, &qword_1006B2AF0);
  return 0;
}

id sub_1004BBA38(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v103 = a6;
  uint64_t v102 = a5;
  uint64_t v101 = a4;
  int v98 = a3;
  int v99 = a2;
  uint64_t v97 = a1;
  uint64_t v108 = type metadata accessor for FMFDevice();
  uint64_t v105 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  id v107 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10005D034(&qword_1006AEFE8);
  __chkstk_darwin(v8 - 8);
  id v96 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v122 = (void *)type metadata accessor for FMIPSafeLocationApprovalState();
  uint64_t v10 = *(v122 - 1);
  uint64_t v11 = __chkstk_darwin(v122);
  uint64_t v13 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  Swift::String_optional v123 = (char *)&v94 - v14;
  uint64_t v15 = sub_10005D034((uint64_t *)&unk_1006AEE40);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  char v106 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  id v95 = (char *)&v94 - v19;
  __chkstk_darwin(v18);
  id v100 = (char *)&v94 - v20;
  uint64_t v21 = type metadata accessor for FMIPSafeLocation();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  id v120 = (char *)&v94 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  os_log_type_t v26 = (char *)&v94 - v25;
  Swift::String v104 = v6;
  uint64_t v112 = *(void *)&v6[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator];
  swift_retain();
  uint64_t v27 = FMIPManager.safeLocations.getter();
  swift_release();
  uint64_t v28 = (char *)_swiftEmptyArrayStorage;
  uint64_t v127 = (char *)_swiftEmptyArrayStorage;
  id v121 = *(void (***)(uint64_t, unint64_t))(v27 + 16);
  if (!v121) {
    goto LABEL_13;
  }
  unint64_t v29 = 0;
  uint64_t v119 = v22 + 16;
  LODWORD(v118) = enum case for FMIPSafeLocationApprovalState.accepted(_:);
  uint64_t v116 = v10 + 8;
  id v117 = (void (**)(char *, void, void *))(v10 + 104);
  id v109 = (void (**)(char *, uint64_t))(v22 + 8);
  Swift::String_optional v113 = (void (**)(char *, char *, uint64_t))(v22 + 32);
  id v111 = v13;
  id v110 = v26;
  uint64_t v115 = v22;
  uint64_t v114 = v27;
  uint64_t v30 = (void (**)(void))(v10 + 8);
  do
  {
    if (v29 >= *(void *)(v27 + 16))
    {
      __break(1u);
      goto LABEL_57;
    }
    unint64_t v31 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v124 = *(void *)(v22 + 72);
    unint64_t v125 = v31;
    (*(void (**)(char *, unint64_t, uint64_t))(v22 + 16))(v26, v27 + v31 + v124 * v29, v21);
    uint64_t v32 = v21;
    uint64_t v33 = v123;
    FMIPSafeLocation.approvalState.getter();
    uint64_t v34 = v122;
    (*v117)(v13, v118, v122);
    sub_100045CC4(&qword_1006C06A8, (void (*)(uint64_t))&type metadata accessor for FMIPSafeLocationApprovalState);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v35 = v13;
    uint64_t v36 = v126;
    uint64_t v37 = v128;
    id v38 = *v30;
    Swift::String v39 = v35;
    (*v30)();
    ((void (*)(char *, void *))v38)(v33, v34);
    if (v36 == v37)
    {
      Swift::String_optional v40 = *v113;
      (*v113)(v120, v26, v32);
      Swift::String v41 = v127;
      uint64_t v21 = v32;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10013E6A4(0, *((void *)v41 + 2) + 1, 1);
        Swift::String v41 = v127;
      }
      uint64_t v22 = v115;
      uint64_t v27 = v114;
      unint64_t v43 = *((void *)v41 + 2);
      unint64_t v42 = *((void *)v41 + 3);
      if (v43 >= v42 >> 1)
      {
        sub_10013E6A4(v42 > 1, v43 + 1, 1);
        Swift::String v41 = v127;
      }
      *((void *)v41 + 2) = v43 + 1;
      v40(&v41[v125 + v43 * v124], v120, v21);
      uint64_t v127 = v41;
      uint64_t v13 = v111;
      os_log_type_t v26 = v110;
    }
    else
    {
      (*v109)(v26, v32);
      uint64_t v21 = v32;
      uint64_t v22 = v115;
      uint64_t v13 = v39;
      uint64_t v27 = v114;
    }
    ++v29;
  }
  while (v121 != (void (**)(uint64_t, unint64_t))v29);
  uint64_t v28 = v127;
LABEL_13:
  swift_bridgeObjectRelease();
  uint64_t v44 = v97;
  swift_bridgeObjectRetain();
  uint64_t v45 = sub_1004BF7D0((uint64_t)v28, v44);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v46 = v104;
  uint64_t v47 = (uint64_t *)&v104[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_assignedSafeLocations];
  swift_beginAccess();
  uint64_t *v47 = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v48 = (char **)&v46[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestedSafeLocations];
  swift_beginAccess();
  *id v48 = v45;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v49 = *(void *)&v46[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_trustedLocationsSection];
  sub_1003405C4(v44);
  uint64_t v50 = *(void *)&v46[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestionsSection];
  sub_1004F34B0((uint64_t)v45);
  uint64_t v13 = v46;
  swift_bridgeObjectRelease();
  uint64_t v51 = *(void *)&v46[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindSwitch];
  *(unsigned char *)(v51 + OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_isOn) = v98 & 1;
  [*(id *)(v51 + OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_settingSwitch) setOn:];
  *(unsigned char *)(v51 + OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_isEnabled) = v99 & 1;
  sub_1001431C0();
  uint64_t v52 = &v46[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_beaconUUID];
  uint64_t v53 = v101;
  uint64_t v54 = v102;
  *(void *)uint64_t v52 = v101;
  *((void *)v52 + 1) = v54;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v55 = (void *)(v50 + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_beaconUUID);
  *uint64_t v55 = v53;
  v55[1] = v54;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = v103;
  *(void *)(v50 + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_groupBeaconUUIDs) = v103;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v57 = (void *)(v49 + OBJC_IVAR____TtC6FindMy27FMTrustedLocationDetailView_beaconUUID);
  *unint64_t v57 = v53;
  v57[1] = v54;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v49 + OBJC_IVAR____TtC6FindMy27FMTrustedLocationDetailView_groupBeaconUUIDs) = v56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v58 = (uint64_t)v100;
  dispatch thunk of FMFManager.myInfo.getter();
  swift_release();
  uint64_t v59 = type metadata accessor for FMFMyInfo();
  uint64_t v60 = *(void *)(v59 - 8);
  uint64_t v61 = *(char **)(v60 + 48);
  uint64_t v124 = v60 + 48;
  unint64_t v125 = v59;
  Swift::String_optional v123 = v61;
  if (((unsigned int (*)(uint64_t, uint64_t))v61)(v58, 1) == 1)
  {
    sub_100003F10(v58, (uint64_t *)&unk_1006AEE40);
    uint64_t v62 = 0;
    uint64_t v63 = 0;
  }
  else
  {
    uint64_t v62 = FMFMyInfo.meDeviceId.getter();
    uint64_t v63 = v64;
    (*(void (**)(uint64_t, unint64_t))(v60 + 8))(v58, v125);
  }
  uint64_t v65 = (uint64_t)v95;
  swift_retain();
  dispatch thunk of FMFManager.myInfo.getter();
  swift_release();
  if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))v123)(v65, 1, v125) == 1)
  {
    sub_100003F10(v65, (uint64_t *)&unk_1006AEE40);
    if (!v63)
    {
LABEL_27:
      int v69 = 1;
      goto LABEL_30;
    }
LABEL_24:
    int v69 = 0;
  }
  else
  {
    uint64_t v66 = FMFMyInfo.deviceId.getter();
    uint64_t v68 = v67;
    (*(void (**)(uint64_t, unint64_t))(v60 + 8))(v65, v125);
    if (v63)
    {
      if (!v68) {
        goto LABEL_24;
      }
      if (v62 == v66 && v63 == v68)
      {
        swift_bridgeObjectRelease();
        int v69 = 1;
      }
      else
      {
        int v69 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      if (!v68) {
        goto LABEL_27;
      }
      int v69 = 0;
    }
  }
  swift_bridgeObjectRelease();
LABEL_30:
  swift_retain();
  uint64_t v70 = dispatch thunk of FMFManager.devices.getter();
  swift_release();
  if (!v70)
  {
    uint64_t v86 = (uint64_t)v96;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v105 + 56))(v96, 1, 1, v108);
    goto LABEL_48;
  }
  uint64_t v71 = *(void *)(v70 + 16);
  if (!v71)
  {
    uint64_t v87 = 1;
    uint64_t v76 = v108;
    uint64_t v86 = (uint64_t)v96;
    goto LABEL_47;
  }
  LODWORD(v119) = v69;
  id v120 = v52;
  id v72 = *(void **)(v105 + 16);
  unint64_t v73 = v70 + ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80));
  id v121 = (void (**)(uint64_t, unint64_t))(v60 + 8);
  Swift::String v122 = v72;
  uint64_t v74 = (void (**)(char *, uint64_t))(v105 + 8);
  uint64_t v75 = *(void *)(v105 + 72);
  uint64_t v118 = v70;
  swift_bridgeObjectRetain();
  uint64_t v76 = v108;
  uint64_t v77 = v107;
  uint64_t v78 = (uint64_t)v106;
  while (2)
  {
    ((void (*)(char *, unint64_t, uint64_t))v122)(v77, v73, v76);
    uint64_t v80 = FMFDevice.identifier.getter();
    uint64_t v82 = v81;
    swift_retain();
    dispatch thunk of FMFManager.myInfo.getter();
    swift_release();
    if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))v123)(v78, 1, v125) == 1)
    {
      sub_100003F10(v78, (uint64_t *)&unk_1006AEE40);
      goto LABEL_41;
    }
    uint64_t v83 = FMFMyInfo.meDeviceId.getter();
    uint64_t v85 = v84;
    (*v121)(v78, v125);
    if (!v85)
    {
LABEL_41:
      swift_bridgeObjectRelease();
LABEL_34:
      uint64_t v77 = v107;
      uint64_t v76 = v108;
      (*v74)(v107, v108);
      v73 += v75;
      if (!--v71)
      {
        swift_bridgeObjectRelease();
        uint64_t v87 = 1;
        uint64_t v13 = v104;
        uint64_t v86 = (uint64_t)v96;
        goto LABEL_46;
      }
      continue;
    }
    break;
  }
  if (v80 != v83 || v85 != v82)
  {
    char v79 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v79) {
      goto LABEL_45;
    }
    goto LABEL_34;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_45:
  uint64_t v76 = v108;
  swift_bridgeObjectRelease();
  uint64_t v86 = (uint64_t)v96;
  (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v96, v107, v76);
  uint64_t v87 = 0;
  uint64_t v13 = v104;
LABEL_46:
  uint64_t v52 = v120;
  LOBYTE(v69) = v119;
LABEL_47:
  uint64_t v88 = v105;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56))(v86, v87, 1, v76);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v86, 1, v76) == 1)
  {
LABEL_48:
    sub_100003F10(v86, &qword_1006AEFE8);
    goto LABEL_49;
  }
  sub_100003F10(v86, &qword_1006AEFE8);
  if ((v69 & 1) != 0 || !*((void *)v52 + 1))
  {
LABEL_49:
    if (qword_1006AE430 == -1)
    {
LABEL_50:
      double v89 = *((double *)&xmmword_1006D27F0 + 1);
      [*(id *)&v13[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_nonMeDescriptionPadView] setHidden:1];
      return [*(id *)&v13[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_contentStackView] setCustomSpacing:*(void *)&v13[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindDescription] afterView:v89];
    }
LABEL_57:
    swift_once();
    goto LABEL_50;
  }
  [*(id *)&v13[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_nonMeDescriptionPadView] setHidden:0];
  if (qword_1006AE430 != -1) {
    swift_once();
  }
  double v91 = *(double *)&xmmword_1006D27F0;
  uint64_t v92 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_contentStackView;
  uint64_t v93 = *(void *)&v13[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindDescription];
  [*(id *)&v13[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_contentStackView] setCustomSpacing:v93 afterView:*(double *)&xmmword_1006D27F0];
  return [*(id *)&v13[v92] setCustomSpacing:v93 afterView:v91 + v91];
}

void sub_1004BC8B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (char *)Strong;
    sub_100006060(0, (unint64_t *)&qword_1006B3E40);
    id v7 = *(id *)&v6[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindSwitch];
    char v8 = static NSObject.== infix(_:_:)();

    if (v8)
    {
      uint64_t v9 = *(void **)(*(void *)&v6[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] + 16);
      uint64_t v10 = self;
      id v11 = v9;
      id v12 = [v10 standardUserDefaults];
      NSString v13 = String._bridgeToObjectiveC()();
      unsigned int v14 = [v12 BOOLForKey:v13];

      if (v14)
      {
        if (qword_1006AE190 != -1) {
          swift_once();
        }
        uint64_t v15 = type metadata accessor for Logger();
        sub_1000606BC(v15, (uint64_t)qword_1006D1E98);
        uint64_t v16 = Logger.logObject.getter();
        os_log_type_t v17 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v16, v17))
        {
          uint64_t v18 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v18 = 0;
          _os_log_impl((void *)&_mh_execute_header, v16, v17, "FMItemNotificationsView:  User toggled notify when left behind switch", v18, 2u);
          swift_slowDealloc();
        }

        uint64_t v19 = &v6[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_delegate];
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v20 = *((void *)v19 + 1);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 8))(v6, a4 & 1, ObjectType, v20);

          swift_unknownObjectRelease();
          return;
        }
      }
      else
      {
        sub_1004BE864();
      }
    }
  }
}

void sub_1004BCB0C(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    uint64_t v6 = *(void *)(Strong + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindSwitch);
    *(unsigned char *)(v6 + OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_isOn) = (a3 & 1) == 0;
    [*(id *)(v6 + OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_settingSwitch) setOn:];
  }
}

uint64_t sub_1004BCBA0(uint64_t a1)
{
  return sub_1004BD9D0(a1, (uint64_t)&unk_100641738, (uint64_t)sub_1004C07C0, (uint64_t)&unk_100641750);
}

uint64_t sub_1004BCBC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPSeparationEvent();
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMIPSafeLocationType();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  id v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v57 = (char *)&v47 - v12;
  uint64_t v13 = type metadata accessor for FMIPSafeLocation();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v58 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (unint64_t *)((char *)&v47 - v17);
  uint64_t v59 = a1;
  uint64_t v19 = (uint64_t *)(a1 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_assignedSafeLocations);
  uint64_t result = swift_beginAccess();
  uint64_t v21 = *v19;
  uint64_t v62 = *(void *)(*v19 + 16);
  if (v62)
  {
    uint64_t v51 = v11;
    uint64_t v52 = v8;
    uint64_t v53 = v7;
    unint64_t v54 = (unint64_t)v19;
    id v48 = v6;
    unint64_t v22 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v61 = *(void (**)(unint64_t *, unint64_t, uint64_t))(v14 + 16);
    v61(v18, v21 + v22, v13);
    uint64_t v23 = sub_100045CC4(&qword_1006B7018, (void (*)(uint64_t))&type metadata accessor for FMIPSafeLocation);
    swift_bridgeObjectRetain();
    uint64_t v63 = a2;
    uint64_t v60 = v23;
    char v24 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v25 = *(void (**)(unint64_t *, uint64_t))(v14 + 8);
    v25(v18, v13);
    if (v24)
    {
      unint64_t v49 = v22;
      uint64_t v50 = v14;
LABEL_10:
      swift_bridgeObjectRelease();
      uint64_t i = (uint64_t)v58;
      v61((unint64_t *)v58, v63, v13);
      uint64_t v18 = (unint64_t *)(v59
                               + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestedSafeLocations);
      swift_beginAccess();
      unint64_t v29 = *v18;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v18 = v29;
      unint64_t v27 = v54;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v47 = v21;
      if (v62 == 1) {
        return swift_bridgeObjectRelease();
      }
      uint64_t v50 = v14;
      uint64_t v26 = *(void *)(v14 + 72);
      unint64_t v49 = v22;
      unint64_t v27 = v47 + v26 + v22;
      for (uint64_t i = 1; ; ++i)
      {
        v61(v18, v27, v13);
        unint64_t v29 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        char v30 = dispatch thunk of static Equatable.== infix(_:_:)();
        v25(v18, v13);
        if (v30) {
          goto LABEL_10;
        }
        v27 += v26;
        if (v29 == v62) {
          return swift_bridgeObjectRelease();
        }
      }
      __break(1u);
    }
    unint64_t v29 = sub_10007D368(0, *(void *)(v29 + 16) + 1, 1, v29);
    *uint64_t v18 = v29;
LABEL_11:
    unint64_t v33 = *(void *)(v29 + 16);
    unint64_t v32 = *(void *)(v29 + 24);
    uint64_t v34 = v63;
    if (v33 >= v32 >> 1)
    {
      unint64_t v29 = sub_10007D368(v32 > 1, v33 + 1, 1, v29);
      *uint64_t v18 = v29;
    }
    *(void *)(v29 + 16) = v33 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v50 + 32))(v29 + v49 + *(void *)(v50 + 72) * v33, i, v13);
    uint64_t v35 = swift_endAccess();
    __chkstk_darwin(v35);
    *(&v47 - 2) = v34;
    swift_beginAccess();
    uint64_t result = sub_1004BEFCC((uint64_t (*)(unint64_t))sub_1004C0898, (uint64_t)(&v47 - 4));
    int64_t v36 = *(void *)(*(void *)v27 + 16);
    if (v36 < result)
    {
      __break(1u);
      return result;
    }
    sub_10025A2A4(result, v36);
    swift_endAccess();
    uint64_t v37 = v57;
    FMIPSafeLocation.type.getter();
    Swift::String v39 = v51;
    uint64_t v38 = v52;
    uint64_t v40 = v53;
    (*(void (**)(char *, void, uint64_t))(v52 + 104))(v51, enum case for FMIPSafeLocationType.home(_:), v53);
    sub_100045CC4(&qword_1006B0988, (void (*)(uint64_t))&type metadata accessor for FMIPSafeLocationType);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v41 = v65;
    uint64_t v42 = v64;
    unint64_t v43 = *(void (**)(char *, uint64_t))(v38 + 8);
    v43(v39, v40);
    v43(v37, v40);
    if (v41 == v42)
    {
      uint64_t v44 = v48;
      FMIPSeparationEvent.init(itemOrDeviceCount:addSafeLocationTapped:addToAllTapped:homeRemoved:)();
      swift_retain();
      FMIPManager.enqueue(separationEvent:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v44, v56);
    }
    uint64_t v45 = swift_bridgeObjectRetain();
    sub_1003405C4(v45);
    swift_bridgeObjectRelease();
    uint64_t v46 = swift_bridgeObjectRetain();
    sub_1004F34B0(v46);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1004BD2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  id v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = v2;
  v13[3] = a1;
  v13[4] = a2;
  aBlock[4] = sub_1004C038C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_100641700;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = v2;
  swift_bridgeObjectRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100045CC4((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_10005ECA8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v18);
}

uint64_t sub_1004BD570(uint64_t a1, void (*a2)(char *, char *, uint64_t), uint64_t a3)
{
  uint64_t v6 = sub_10005D034((uint64_t *)&unk_1006BEB20);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMIPSafeLocation();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v29 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  char v30 = (char *)&v28 - v13;
  uint64_t v14 = (unint64_t *)(a1 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestedSafeLocations);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v15 = 0;
  uint64_t v16 = (unint64_t *)sub_1004C0398(v14, (uint64_t)a2, a3);
  swift_bridgeObjectRelease();
  int64_t v17 = *(void *)(*v14 + 16);
  if (v17 < (uint64_t)v16)
  {
    __break(1u);
LABEL_13:
    unint64_t v15 = sub_10007D368(0, *(void *)(v15 + 16) + 1, 1, v15);
    unint64_t *v16 = v15;
    goto LABEL_8;
  }
  sub_10025A2A4((uint64_t)v16, v17);
  swift_endAccess();
  uint64_t v31 = a1;
  swift_retain();
  uint64_t v18 = FMIPManager.safeLocations.getter();
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1004E7A8C(v18, (uint64_t)a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)v19 + 2))
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, &v19[(*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)], v9);
    uint64_t v20 = 0;
  }
  else
  {
    uint64_t v20 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v20, 1, v9);
  swift_release();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100003F10((uint64_t)v8, (uint64_t *)&unk_1006BEB20);
    goto LABEL_11;
  }
  a2 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v21 = v30;
  a2(v30, v8, v9);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v29, v21, v9);
  uint64_t v16 = (unint64_t *)(v31 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_assignedSafeLocations);
  swift_beginAccess();
  unint64_t v15 = *v16;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t *v16 = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  unint64_t v24 = *(void *)(v15 + 16);
  unint64_t v23 = *(void *)(v15 + 24);
  if (v24 >= v23 >> 1)
  {
    unint64_t v15 = sub_10007D368(v23 > 1, v24 + 1, 1, v15);
    unint64_t *v16 = v15;
  }
  *(void *)(v15 + 16) = v24 + 1;
  a2((char *)(v15+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v24), v29, v9);
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v30, v9);
LABEL_11:
  swift_beginAccess();
  uint64_t v25 = swift_bridgeObjectRetain();
  sub_1003405C4(v25);
  swift_bridgeObjectRelease();
  uint64_t v26 = swift_bridgeObjectRetain();
  sub_1004F34B0(v26);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004BD9A8(uint64_t a1)
{
  return sub_1004BD9D0(a1, (uint64_t)&unk_100641698, (uint64_t)sub_1004C0334, (uint64_t)&unk_1006416B0);
}

uint64_t sub_1004BD9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  v22[1] = a2;
  uint64_t v5 = v4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v28 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v26 = *(void *)(v10 - 8);
  uint64_t v27 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMIPSafeLocation();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13);
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v23 = static OS_dispatch_queue.main.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v5;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v17 + v16, (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  aBlock[4] = v24;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = v25;
  uint64_t v18 = _Block_copy(aBlock);
  id v19 = v5;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100045CC4((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_10005ECA8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v20 = (void *)v23;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v12, v27);
}

uint64_t sub_1004BDD48(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPSafeLocation();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = (unint64_t *)(a1 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_assignedSafeLocations);
  swift_beginAccess();
  unint64_t v12 = *v11;
  uint64_t v35 = *(char **)(*v11 + 16);
  if (v35)
  {
    char v30 = v11;
    uint64_t v31 = a1;
    unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v34 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v34(v10, v12 + v13, v4);
    uint64_t v14 = sub_100045CC4(&qword_1006B7018, (void (*)(uint64_t))&type metadata accessor for FMIPSafeLocation);
    swift_bridgeObjectRetain();
    uint64_t v32 = v14;
    unint64_t v33 = a2;
    unint64_t v15 = v12;
    char v16 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v11 = (unint64_t *)(v5 + 8);
    unint64_t v17 = *(void *)(v5 + 8);
    ((void (*)(char *, uint64_t))v17)(v10, v4);
    if (v16) {
      return swift_bridgeObjectRelease();
    }
    unint64_t v29 = v15;
    if (v35 != (char *)1)
    {
      unint64_t v26 = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v27 = v8;
      uint64_t v28 = v5;
      uint64_t v5 = *(void *)(v5 + 72);
      unint64_t v18 = v29 + v5 + v13;
      uint64_t v19 = 1;
      while (1)
      {
        v34(v10, v18, v4);
        uint64_t v8 = (char *)(v19 + 1);
        if (__OFADD__(v19, 1)) {
          break;
        }
        char v20 = dispatch thunk of static Equatable.== infix(_:_:)();
        ((void (*)(char *, uint64_t))v17)(v10, v4);
        if (v20) {
          return swift_bridgeObjectRelease();
        }
        ++v19;
        v18 += v5;
        if (v8 == v35)
        {
          swift_bridgeObjectRelease();
          uint64_t v11 = v30;
          uint64_t v8 = v27;
          uint64_t v5 = v28;
          v34(v27, v33, v4);
          goto LABEL_12;
        }
      }
      __break(1u);
      goto LABEL_19;
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = v30;
    v34(v8, v33, v4);
  }
  else
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  }
LABEL_12:
  swift_beginAccess();
  unint64_t v17 = *v11;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v11 = v17;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_19:
    unint64_t v17 = sub_10007D368(0, *(void *)(v17 + 16) + 1, 1, v17);
    *uint64_t v11 = v17;
  }
  unint64_t v23 = *(void *)(v17 + 16);
  unint64_t v22 = *(void *)(v17 + 24);
  if (v23 >= v22 >> 1)
  {
    unint64_t v17 = sub_10007D368(v22 > 1, v23 + 1, 1, v17);
    *uint64_t v11 = v17;
  }
  *(void *)(v17 + 16) = v23 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v17+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v23, v8, v4);
  swift_endAccess();
  uint64_t v24 = swift_bridgeObjectRetain();
  sub_1003405C4(v24);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004BE0E8(uint64_t a1)
{
  return sub_1004BD9D0(a1, (uint64_t)&unk_100641648, (uint64_t)sub_1004C02F8, (uint64_t)&unk_100641660);
}

uint64_t sub_1004BE110(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPSafeLocation();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = a2;
  uint64_t v8 = (unint64_t *)(a1 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_assignedSafeLocations);
  swift_beginAccess();
  unint64_t v9 = 0;
  uint64_t v10 = sub_1004BEFCC((uint64_t (*)(unint64_t))sub_1004C0310, (uint64_t)v17);
  int64_t v11 = *(void *)(*v8 + 16);
  if (v11 < v10)
  {
    __break(1u);
  }
  else
  {
    sub_10025A2A4(v10, v11);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    unint64_t v9 = *v8;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v8 = v9;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_3;
    }
  }
  unint64_t v9 = sub_10007D368(0, *(void *)(v9 + 16) + 1, 1, v9);
  *uint64_t v8 = v9;
LABEL_3:
  unint64_t v14 = *(void *)(v9 + 16);
  unint64_t v13 = *(void *)(v9 + 24);
  if (v14 >= v13 >> 1)
  {
    unint64_t v9 = sub_10007D368(v13 > 1, v14 + 1, 1, v9);
    *uint64_t v8 = v9;
  }
  *(void *)(v9 + 16) = v14 + 1;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v14, v7, v4);
  swift_endAccess();
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_1003405C4(v15);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004BE314(uint64_t a1)
{
  return sub_1004BD9D0(a1, (uint64_t)&unk_1006415F8, (uint64_t)sub_1004BF7B8, (uint64_t)&unk_100641610);
}

uint64_t sub_1004BE33C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPSafeLocation();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v26 - v9;
  int64_t v11 = (char **)(a1 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_assignedSafeLocations);
  swift_beginAccess();
  unint64_t v12 = *v11;
  int64_t v36 = (char **)*((void *)*v11 + 2);
  if (!v36)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
    goto LABEL_12;
  }
  char v30 = v8;
  uint64_t v31 = a1;
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = v5 + 16;
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v35(v10, &v12[v13], v4);
  uint64_t v15 = sub_100045CC4(&qword_1006B7018, (void (*)(uint64_t))&type metadata accessor for FMIPSafeLocation);
  swift_bridgeObjectRetain();
  uint64_t v34 = v15;
  LOBYTE(v15) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v32 = v5;
  uint64_t v5 = *(void *)(v5 + 8);
  ((void (*)(char *, uint64_t))v5)(v10, v4);
  if (v15) {
    return swift_bridgeObjectRelease();
  }
  unint64_t v28 = v14 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  unint64_t v29 = v12;
  if (v36 == (char **)1)
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = v30;
    a1 = v31;
    uint64_t v5 = v32;
    v35(v30, (char *)a2, v4);
LABEL_12:
    swift_beginAccess();
    uint64_t v10 = *v11;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *int64_t v11 = v10;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_13;
    }
    goto LABEL_20;
  }
  unint64_t v33 = (char *)a2;
  uint64_t v27 = v11;
  a2 = *(void *)(v32 + 72);
  uint64_t v8 = (char *)v29 + a2 + v13;
  a1 = 1;
  while (1)
  {
    v35(v10, v8, v4);
    int64_t v11 = (char **)(a1 + 1);
    if (__OFADD__(a1, 1)) {
      break;
    }
    char v16 = dispatch thunk of static Equatable.== infix(_:_:)();
    ((void (*)(char *, uint64_t))v5)(v10, v4);
    if (v16) {
      return swift_bridgeObjectRelease();
    }
    ++a1;
    v8 += a2;
    if (v11 == v36)
    {
      swift_bridgeObjectRelease();
      a1 = v31;
      uint64_t v5 = v32;
      int64_t v11 = v27;
      a2 = (uint64_t)v33;
      uint64_t v8 = v30;
      v35(v30, v33, v4);
      goto LABEL_12;
    }
  }
  __break(1u);
LABEL_20:
  uint64_t v10 = (char *)sub_10007D368(0, *((void *)v10 + 2) + 1, 1, (unint64_t)v10);
  *int64_t v11 = v10;
LABEL_13:
  unint64_t v19 = *((void *)v10 + 2);
  unint64_t v18 = *((void *)v10 + 3);
  if (v19 >= v18 >> 1)
  {
    uint64_t v10 = (char *)sub_10007D368(v18 > 1, v19 + 1, 1, (unint64_t)v10);
    *int64_t v11 = v10;
  }
  *((void *)v10 + 2) = v19 + 1;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v10[((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v19], v8, v4);
  uint64_t v20 = swift_endAccess();
  __chkstk_darwin(v20);
  *(&v26 - 2) = a2;
  uint64_t v21 = a1 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestedSafeLocations;
  swift_beginAccess();
  uint64_t result = sub_1004BEFCC((uint64_t (*)(unint64_t))sub_1004C0898, (uint64_t)(&v26 - 4));
  int64_t v23 = *(void *)(*(void *)v21 + 16);
  if (v23 >= result)
  {
    sub_10025A2A4(result, v23);
    swift_endAccess();
    uint64_t v24 = swift_bridgeObjectRetain();
    sub_1003405C4(v24);
    swift_bridgeObjectRelease();
    uint64_t v25 = swift_bridgeObjectRetain();
    sub_1004F34B0(v25);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1004BE7B0()
{
  uint64_t v0 = FMIPSafeLocation.identifier.getter();
  uint64_t v2 = v1;
  if (v0 == FMIPSafeLocation.identifier.getter() && v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

void sub_1004BE864()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator];
  uint64_t v3 = (objc_class *)type metadata accessor for FMSeparationWelcomeScreenViewController();
  id v4 = objc_allocWithZone(v3);
  uint64_t v5 = swift_retain();
  uint64_t v6 = sub_1004E9E74(v5, 0);
  id v7 = objc_allocWithZone(v3);
  uint64_t v8 = swift_retain();
  uint64_t v9 = sub_1004E9E74(v8, 1);
  *(void *)&v9[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_delegate + 8] = &off_100641548;
  swift_unknownObjectWeakAssign();
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10055C1E0;
  *(void *)(v10 + 32) = v6;
  *(void *)(v10 + 40) = v9;
  uint64_t v27 = v10;
  specialized Array._endMutation()();
  uint64_t v11 = v27;
  unint64_t v12 = (objc_class *)type metadata accessor for FMPageViewController();
  unint64_t v13 = (char *)objc_allocWithZone(v12);
  *(void *)&v13[OBJC_IVAR____TtC6FindMy20FMPageViewController_pages] = _swiftEmptyArrayStorage;
  id v14 = objc_allocWithZone((Class)UIPageViewController);
  swift_retain();
  uint64_t v15 = v6;
  char v16 = v9;
  unint64_t v17 = v13;
  id v18 = [v14 initWithTransitionStyle:1 navigationOrientation:0 options:0];
  *(void *)&v17[OBJC_IVAR____TtC6FindMy20FMPageViewController_pageViewController] = v18;

  v26.receiver = v17;
  v26.super_class = v12;
  unint64_t v19 = (char *)[super initWithNibName:0 bundle:0];
  swift_release();
  *(void *)&v19[OBJC_IVAR____TtC6FindMy20FMPageViewController_pages] = v11;
  swift_bridgeObjectRelease();
  id v20 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v19];
  [v1 presentViewController:v20 animated:1 completion:0];
  uint64_t v21 = *(void **)(v2 + 16);
  unint64_t v22 = self;
  id v23 = v21;
  id v24 = [v22 standardUserDefaults];
  NSString v25 = String._bridgeToObjectiveC()();
  [v24 setBool:1 forKey:v25];
}

uint64_t sub_1004BEAE4()
{
  uint64_t v1 = v0;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000606BC(v2, (uint64_t)qword_1006D1E98);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMItemNotificationsView:  User toggled notify when left behind switch", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = v1 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v8 = *(void *)(v6 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(v1, 1, ObjectType, v8);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1004BEC2C()
{
  sub_100068760(v0 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_delegate);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindDescription));

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindSwitchSection));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_1004BED40()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMTrustedLocationDetailViewController();
  [super dealloc];
}

uint64_t type metadata accessor for FMTrustedLocationDetailViewController()
{
  return self;
}

uint64_t sub_1004BEEB8(void *a1, char a2)
{
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = a1;
  *(unsigned char *)(v5 + 32) = a2;
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(unsigned char *)(v7 + 24) = a2;
  id v8 = a1;
  sub_1000B6D08((uint64_t)sub_1004BF764, v5, (uint64_t)sub_1004BF7A8, v7);
  swift_release();

  return swift_release();
}

uint64_t sub_1004BEFCC(uint64_t (*a1)(unint64_t), uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = type metadata accessor for FMIPSafeLocation();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v42 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v41 = (char *)&v33 - v11;
  __chkstk_darwin(v10);
  id v14 = (char *)&v33 - v13;
  uint64_t v44 = v4;
  unint64_t v15 = *v4;
  uint64_t v16 = *(void *)(*v4 + 16);
  if (!v16) {
    return 0;
  }
  unint64_t v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v35 = v12;
  uint64_t v45 = *(void *)(v12 + 72);
  swift_bridgeObjectRetain();
  unint64_t v18 = 0;
  unint64_t v36 = v17;
  while (1)
  {
    char v19 = a1(v15 + v17);
    if (v3)
    {
      swift_bridgeObjectRelease();
      return v18;
    }
    if (v19) {
      break;
    }
    ++v18;
    v17 += v45;
    if (v16 == v18)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v15 + 16);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v18, 1))
  {
    unint64_t v21 = *(void *)(v15 + 16);
    if (v18 + 1 == v21) {
      return v18;
    }
    uint64_t v22 = v45 + v17;
    unint64_t v23 = v18 + 1;
    id v24 = (void (**)(char *, uint64_t, uint64_t))(v35 + 16);
    Swift::String v39 = a1;
    uint64_t v40 = (uint64_t (**)(char *, uint64_t))(v35 + 8);
    unint64_t v33 = (uint64_t (**)(uint64_t, char *, uint64_t))(v35 + 40);
    uint64_t v37 = v14;
    uint64_t v38 = a2;
    unint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v35 + 16);
    while (v23 < v21)
    {
      uint64_t v25 = v15 + v22;
      objc_super v26 = (uint64_t (*)(char *))a1;
      uint64_t v27 = *v24;
      (*v24)(v14, v25, v7);
      LOBYTE(v26) = v26(v14);
      uint64_t result = (*v40)(v14, v7);
      if (v26)
      {
        a1 = v39;
        id v24 = v43;
      }
      else
      {
        id v24 = v43;
        if (v23 != v18)
        {
          if ((v18 & 0x8000000000000000) != 0) {
            goto LABEL_32;
          }
          unint64_t v28 = *v44;
          if (v18 >= *(void *)(*v44 + 16)) {
            goto LABEL_33;
          }
          unint64_t v35 = *(void *)(*v44 + 16);
          uint64_t v34 = v18 * v45;
          uint64_t result = ((uint64_t (*)(char *, unint64_t, uint64_t))v27)(v41, v28 + v36 + v18 * v45, v7);
          if (v23 >= v35) {
            goto LABEL_34;
          }
          v27(v42, v28 + v22, v7);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v44 = v28;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_100257FD8(v28);
            unint64_t v28 = result;
            *uint64_t v44 = result;
          }
          if (v18 >= *(void *)(v28 + 16)) {
            goto LABEL_35;
          }
          unint64_t v29 = v28 + v36 + v34;
          char v30 = *v33;
          uint64_t result = (*v33)(v29, v42, v7);
          if (v23 >= *(void *)(*v44 + 16)) {
            goto LABEL_36;
          }
          uint64_t result = v30(*v44 + v22, v41, v7);
          id v24 = v43;
        }
        BOOL v31 = __OFADD__(v18++, 1);
        a1 = v39;
        if (v31) {
          goto LABEL_31;
        }
      }
      unint64_t v32 = v23 + 1;
      id v14 = v37;
      if (__OFADD__(v23, 1)) {
        goto LABEL_30;
      }
      unint64_t v15 = *v44;
      unint64_t v21 = *(void *)(*v44 + 16);
      ++v23;
      v22 += v45;
      if (v32 == v21) {
        return v18;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

char *sub_1004BF3CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_scrollView;
  id v8 = objc_allocWithZone((Class)UIScrollView);
  uint64_t v9 = v3;
  *(void *)&v3[v7] = [v8 init];
  uint64_t v10 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_contentStackView;
  *(void *)&v9[v10] = [objc_allocWithZone((Class)UIStackView) init];
  *(void *)&v9[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_heightConstraint] = 0;
  *(void *)&v9[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v11 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindImageView;
  sub_100006060(0, (unint64_t *)&qword_1006BA4D0);
  id v12 = sub_1003E7408(0xD00000000000001ALL, 0x8000000100594290, 6778480, 0xE300000000000000);
  id v13 = [objc_allocWithZone((Class)UIImageView) initWithImage:v12];

  *(void *)&v9[v11] = v13;
  uint64_t v14 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindDescription;
  *(void *)&v9[v14] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v15 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_trustedLocationsDescription;
  *(void *)&v9[v15] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v16 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindSwitchSection;
  *(void *)&v9[v16] = [objc_allocWithZone((Class)type metadata accessor for FMSectionPlatterGroupView()) init];
  uint64_t v17 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindSwitch;
  *(void *)&v9[v17] = [objc_allocWithZone((Class)type metadata accessor for FMSettingSwitchView()) init];
  uint64_t v18 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_nonMeDescriptionPadView;
  *(void *)&v9[v18] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v9[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_assignedSafeLocations] = _swiftEmptyArrayStorage;
  *(void *)&v9[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestedSafeLocations] = _swiftEmptyArrayStorage;
  char v19 = &v9[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_beaconUUID];
  id v20 = (objc_class *)type metadata accessor for FMTrustedLocationDetailView();
  *(void *)char v19 = 0;
  *((void *)v19 + 1) = 0;
  id v21 = objc_allocWithZone(v20);
  uint64_t v22 = swift_retain();
  unint64_t v23 = sub_100347EAC(v22);
  swift_release();
  *(void *)&v9[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_trustedLocationsSection] = v23;
  id v24 = objc_allocWithZone((Class)type metadata accessor for FMSafeLocationSuggestionsView());
  uint64_t v25 = swift_retain();
  id v26 = sub_1004F642C(v25);
  swift_release();
  *(void *)&v9[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestionsSection] = v26;
  *(void *)char v19 = a2;
  *((void *)v19 + 1) = a3;

  swift_bridgeObjectRelease();
  *(void *)&v9[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] = a1;
  v29.receiver = v9;
  v29.super_class = (Class)type metadata accessor for FMMediatedViewController();
  swift_retain();
  uint64_t v27 = (char *)[super initWithNibName:0 bundle:0];
  *(void *)(*(void *)&v27[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestionsSection]
            + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_delegate
            + 8) = &off_100641538;
  swift_unknownObjectWeakAssign();
  *(void *)(*(void *)&v27[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_trustedLocationsSection]
            + OBJC_IVAR____TtC6FindMy27FMTrustedLocationDetailView_delegate
            + 8) = &off_100641510;
  swift_unknownObjectWeakAssign();
  return v27;
}

uint64_t sub_1004BF6EC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004BF724()
{
  swift_release();

  return _swift_deallocObject(v0, 33, 7);
}

void sub_1004BF764(uint64_t a1)
{
  sub_1004BC8B4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_1004BF770()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

void sub_1004BF7A8(uint64_t a1)
{
  sub_1004BCB0C(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_1004BF7B8()
{
  return sub_1004C07D8(sub_1004BE33C);
}

char *sub_1004BF7D0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FMIPSafeLocation();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  Swift::String v39 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v29 - v9;
  uint64_t result = (char *)_swiftEmptyArrayStorage;
  uint64_t v40 = (char *)_swiftEmptyArrayStorage;
  uint64_t v37 = *(void *)(a1 + 16);
  if (v37)
  {
    v29[1] = v2;
    uint64_t v12 = 0;
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v13 = v6 + 16;
    unint64_t v15 = (*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64);
    uint64_t v16 = *(void *)(v13 + 56);
    uint64_t v35 = a1 + v15;
    unint64_t v36 = v14;
    unint64_t v31 = v15;
    uint64_t v32 = v5;
    uint64_t v33 = a2 + v15;
    uint64_t v34 = v13;
    char v30 = (void (**)(char *, uint64_t))(v13 - 8);
    uint64_t v38 = (void (**)(char *, char *, uint64_t))(v13 + 16);
    v14(v10, a1 + v15, v5);
    while (1)
    {
      uint64_t v17 = *(void *)(a2 + 16);
      if (v17)
      {
        uint64_t v18 = a2;
        swift_bridgeObjectRetain();
        uint64_t v19 = v33;
        while (1)
        {
          uint64_t v20 = FMIPSafeLocation.identifier.getter();
          uint64_t v22 = v21;
          if (v20 == FMIPSafeLocation.identifier.getter() && v22 == v23) {
            break;
          }
          char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v24)
          {
            a2 = v18;
            goto LABEL_4;
          }
          v19 += v16;
          if (!--v17)
          {
            a2 = v18;
            swift_bridgeObjectRelease();
            uint64_t v5 = v32;
            goto LABEL_14;
          }
        }
        a2 = v18;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_4:
        uint64_t v5 = v32;
        swift_bridgeObjectRelease();
        (*v30)(v10, v5);
        goto LABEL_5;
      }
LABEL_14:
      uint64_t v25 = *v38;
      (*v38)(v39, v10, v5);
      id v26 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10013E6A4(0, *((void *)v26 + 2) + 1, 1);
        id v26 = v40;
      }
      unint64_t v28 = *((void *)v26 + 2);
      unint64_t v27 = *((void *)v26 + 3);
      if (v28 >= v27 >> 1)
      {
        sub_10013E6A4(v27 > 1, v28 + 1, 1);
        id v26 = v40;
      }
      *((void *)v26 + 2) = v28 + 1;
      v25(&v26[v31 + v28 * v16], v39, v5);
      uint64_t v40 = v26;
LABEL_5:
      if (++v12 == v37) {
        return v40;
      }
      v36(v10, v35 + v16 * v12, v5);
    }
  }
  return result;
}

void sub_1004BFAD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_scrollView;
  *(void *)&v1[v2] = [objc_allocWithZone((Class)UIScrollView) init];
  uint64_t v3 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_contentStackView;
  *(void *)&v1[v3] = [objc_allocWithZone((Class)UIStackView) init];
  *(void *)&v1[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_heightConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v4 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindImageView;
  sub_100006060(0, (unint64_t *)&qword_1006BA4D0);
  id v5 = sub_1003E7408(0xD00000000000001ALL, 0x8000000100594290, 6778480, 0xE300000000000000);
  id v6 = [objc_allocWithZone((Class)UIImageView) initWithImage:v5];

  *(void *)&v1[v4] = v6;
  uint64_t v7 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindDescription;
  *(void *)&v1[v7] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v8 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_trustedLocationsDescription;
  *(void *)&v1[v8] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v9 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindSwitchSection;
  *(void *)&v1[v9] = [objc_allocWithZone((Class)type metadata accessor for FMSectionPlatterGroupView()) init];
  uint64_t v10 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindSwitch;
  *(void *)&v1[v10] = [objc_allocWithZone((Class)type metadata accessor for FMSettingSwitchView()) init];
  uint64_t v11 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_nonMeDescriptionPadView;
  *(void *)&v1[v11] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v1[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_assignedSafeLocations] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestedSafeLocations] = _swiftEmptyArrayStorage;
  uint64_t v12 = &v1[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_beaconUUID];
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1004BFCF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_scrollView;
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_scrollView] setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v3 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_contentStackView;
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_contentStackView] setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindImageView] setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindDescription] setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindSwitchSection] setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_trustedLocationsSection] setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestionsSection] setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_trustedLocationsDescription] setTranslatesAutoresizingMaskIntoConstraints:0];
  id v4 = [v0 view];
  if (!v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v5 = v4;
  id v6 = [v4 bottomAnchor];

  sub_10005D034(&qword_1006AF2D0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10055B950;
  uint64_t v8 = *(void **)&v1[v2];
  id v45 = v6;
  id v9 = [v8 leadingAnchor];
  id v10 = [v1 view];
  if (!v10)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v11 = v10;
  id v12 = [v10 leadingAnchor];

  id v13 = [v9 constraintEqualToAnchor:v12];
  *(void *)(v7 + 32) = v13;
  id v14 = [*(id *)&v1[v2] trailingAnchor];
  id v15 = [v1 view];
  if (!v15)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v16 = v15;
  id v17 = [v15 trailingAnchor];

  id v18 = [v14 constraintEqualToAnchor:v17];
  *(void *)(v7 + 40) = v18;
  id v19 = [*(id *)&v1[v2] topAnchor];
  id v20 = [v1 view];
  if (!v20)
  {
LABEL_11:
    __break(1u);
    return;
  }
  uint64_t v21 = v20;
  id v44 = self;
  id v22 = [v21 safeAreaLayoutGuide];

  id v23 = [v22 topAnchor];
  id v24 = [v19 constraintEqualToAnchor:v23];

  *(void *)(v7 + 48) = v24;
  id v25 = [*(id *)&v1[v2] bottomAnchor];
  id v26 = [v25 constraintEqualToAnchor:v45 constant:0.0];

  *(void *)(v7 + 56) = v26;
  specialized Array._endMutation()();
  sub_100006060(0, (unint64_t *)&qword_1006AEE60);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v44 activateConstraints:isa];

  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_10055B950;
  id v29 = [*(id *)&v1[v3] topAnchor];
  id v30 = [*(id *)&v1[v2] topAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30];

  *(void *)(v28 + 32) = v31;
  id v32 = [*(id *)&v1[v3] bottomAnchor];
  id v33 = [*(id *)&v1[v2] bottomAnchor];
  id v34 = [v32 constraintEqualToAnchor:v33];

  *(void *)(v28 + 40) = v34;
  id v35 = [*(id *)&v1[v3] leadingAnchor];
  id v36 = [*(id *)&v1[v2] layoutMarginsGuide];
  id v37 = [v36 leadingAnchor];

  id v38 = [v35 constraintEqualToAnchor:v37];
  *(void *)(v28 + 48) = v38;
  id v39 = [*(id *)&v1[v3] trailingAnchor];
  id v40 = [*(id *)&v1[v2] layoutMarginsGuide];
  id v41 = [v40 trailingAnchor];

  id v42 = [v39 constraintEqualToAnchor:v41];
  *(void *)(v28 + 56) = v42;
  specialized Array._endMutation()();
  Class v43 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v44 activateConstraints:v43];
}

uint64_t sub_1004C02F8()
{
  return sub_1004C07D8(sub_1004BE110);
}

uint64_t sub_1004C0310()
{
  return sub_1004BE7B0() & 1;
}

uint64_t sub_1004C0334()
{
  return sub_1004C07D8((uint64_t (*)(uint64_t, uint64_t))sub_1004BDD48);
}

uint64_t sub_1004C034C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004C038C()
{
  return sub_1004BD570(*(void *)(v0 + 16), *(void (**)(char *, char *, uint64_t))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1004C0398(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FMIPSafeLocation();
  uint64_t v7 = __chkstk_darwin(v6);
  id v45 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v40 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  unint64_t v49 = a1;
  uint64_t v50 = (char *)&v40 - v14;
  unint64_t v15 = *a1;
  uint64_t v16 = *(void *)(*a1 + 16);
  if (!v16) {
    return 0;
  }
  uint64_t v48 = v12;
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v43 = v13;
  uint64_t v51 = *(void *)(v13 + 72);
  swift_bridgeObjectRetain();
  unint64_t v18 = 0;
  unint64_t v44 = v17;
  while (1)
  {
    BOOL v20 = FMIPSafeLocation.identifier.getter() == a2 && v19 == a3;
    if (v20) {
      break;
    }
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v21) {
      goto LABEL_12;
    }
    ++v18;
    v17 += v51;
    if (v16 == v18)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v15 + 16);
    }
  }
  swift_bridgeObjectRelease();
LABEL_12:
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v23 = v48;
  if (!__OFADD__(v18, 1))
  {
    unint64_t v24 = *(void *)(v15 + 16);
    if (v18 + 1 == v24) {
      return v18;
    }
    uint64_t v25 = v51 + v17;
    unint64_t v26 = v18 + 1;
    unint64_t v27 = (void (**)(char *, unint64_t, uint64_t))(v43 + 16);
    uint64_t v46 = (uint64_t (**)(char *, uint64_t))(v43 + 8);
    uint64_t v47 = (void (**)(char *, unint64_t, uint64_t))(v43 + 16);
    id v40 = (uint64_t (**)(uint64_t, char *, uint64_t))(v43 + 40);
    uint64_t v41 = a2;
    id v42 = v11;
    while (v26 < v24)
    {
      uint64_t v28 = *v27;
      (*v27)(v50, v15 + v25, v23);
      if (FMIPSafeLocation.identifier.getter() == a2 && v29 == a3)
      {
        swift_bridgeObjectRelease();
        uint64_t v23 = v48;
        uint64_t result = (*v46)(v50, v48);
      }
      else
      {
        char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        uint64_t v23 = v48;
        uint64_t result = (*v46)(v50, v48);
        if ((v30 & 1) == 0)
        {
          if (v26 != v18)
          {
            if ((v18 & 0x8000000000000000) != 0) {
              goto LABEL_38;
            }
            unint64_t v31 = *v49;
            unint64_t v32 = *(void *)(*v49 + 16);
            if (v18 >= v32) {
              goto LABEL_39;
            }
            uint64_t v43 = v18 * v51;
            id v33 = v11;
            uint64_t v34 = v48;
            uint64_t result = ((uint64_t (*)(char *, unint64_t, uint64_t))v28)(v33, v31 + v44 + v18 * v51, v48);
            if (v26 >= v32) {
              goto LABEL_40;
            }
            v28(v45, v31 + v25, v34);
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            unint64_t *v49 = v31;
            if ((result & 1) == 0)
            {
              uint64_t result = sub_100257FD8(v31);
              unint64_t v31 = result;
              unint64_t *v49 = result;
            }
            a2 = v41;
            uint64_t v11 = v42;
            if (v18 >= *(void *)(v31 + 16)) {
              goto LABEL_41;
            }
            unint64_t v35 = v31 + v44 + v43;
            id v36 = *v40;
            uint64_t v37 = v48;
            uint64_t result = (*v40)(v35, v45, v48);
            if (v26 >= *(void *)(*v49 + 16)) {
              goto LABEL_42;
            }
            uint64_t result = v36(*v49 + v25, v11, v37);
            uint64_t v23 = v37;
          }
          if (__OFADD__(v18++, 1)) {
            goto LABEL_37;
          }
        }
      }
      unint64_t v39 = v26 + 1;
      if (__OFADD__(v26, 1)) {
        goto LABEL_36;
      }
      unint64_t v15 = *v49;
      unint64_t v24 = *(void *)(*v49 + 16);
      ++v26;
      v25 += v51;
      BOOL v20 = v39 == v24;
      unint64_t v27 = v47;
      if (v20) {
        return v18;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1004C07C0()
{
  return sub_1004C07D8(sub_1004BCBC8);
}

uint64_t sub_1004C07D8(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for FMIPSafeLocation() - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3, v4);
}

uint64_t sub_1004C0850()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1004C0890()
{
  return sub_1004B9CF8(*(id *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1004C0898()
{
  return sub_1004C0310() & 1;
}

void sub_1004C09A4()
{
  [v0 setDismissalType:3];
  uint64_t v1 = self;
  id v2 = [v1 mainBundle];
  v3._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v27._unint64_t object = (void *)0x800000010058CEE0;
  v3._unint64_t object = (void *)0x800000010059FA80;
  v4.value._uint64_t countAndFlagsBits = 0xD000000000000010;
  v4.value._unint64_t object = (void *)0x800000010058CEC0;
  v5._uint64_t countAndFlagsBits = 0;
  v5._unint64_t object = (void *)0xE000000000000000;
  v27._uint64_t countAndFlagsBits = 0xD000000000000015;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v27);

  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setTitle:v6];

  id v7 = [v1 mainBundle];
  v8._uint64_t countAndFlagsBits = 0xD000000000000022;
  v28._unint64_t object = (void *)0x800000010058CEE0;
  v8._unint64_t object = (void *)0x800000010059FAA0;
  v9.value._uint64_t countAndFlagsBits = 0xD000000000000010;
  v9.value._unint64_t object = (void *)0x800000010058CEC0;
  v10._uint64_t countAndFlagsBits = 0;
  v10._unint64_t object = (void *)0xE000000000000000;
  v28._uint64_t countAndFlagsBits = 0xD000000000000015;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v28);

  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setSubtitle:v11];

  id v12 = [self configurationWithPointSize:80.0];
  uint64_t v13 = *(void **)&v0[OBJC_IVAR____TtC6FindMy30FMAccessoryDiscoveryAttachCard_imageView];
  id v14 = v12;
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [self systemImageNamed:v15 withConfiguration:v14];

  [v13 setImage:v16];
  [v13 setContentMode:4];
  id v17 = [v1 mainBundle];
  v18._uint64_t countAndFlagsBits = 0xD000000000000020;
  v29._unint64_t object = (void *)0x800000010058CEE0;
  v18._unint64_t object = (void *)0x800000010059FAD0;
  v19.value._uint64_t countAndFlagsBits = 0xD000000000000010;
  v19.value._unint64_t object = (void *)0x800000010058CEC0;
  v20._uint64_t countAndFlagsBits = 0;
  v20._unint64_t object = (void *)0xE000000000000000;
  v29._uint64_t countAndFlagsBits = 0xD000000000000015;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v29);

  uint64_t v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain_n();
  swift_bridgeObjectRetain();
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1004C12FC;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000841C;
  aBlock[3] = &unk_1006417F0;
  uint64_t v23 = _Block_copy(aBlock);
  id v24 = [self actionWithTitle:v22 style:0 handler:v23];

  _Block_release(v23);
  swift_release();
  id v25 = [v0 addAction:v24];

  swift_bridgeObjectRelease();
  swift_release_n();
}

void sub_1004C0DB4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = 0;
    *(void *)(v2 + 24) = 0;
    aBlock[4] = sub_10007245C;
    aBlock[5] = v2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003C410;
    aBlock[3] = &unk_100641840;
    Swift::String v3 = _Block_copy(aBlock);
    swift_release();
    [v1 dismissViewControllerAnimated:1 completion:v3];
    _Block_release(v3);
  }
}

void sub_1004C0EA8()
{
  uint64_t v1 = v0;
  id v24 = self;
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10055B950;
  Swift::String v3 = *(void **)&v1[OBJC_IVAR____TtC6FindMy30FMAccessoryDiscoveryAttachCard_imageView];
  id v4 = [v3 centerXAnchor];
  id v5 = [v1 contentView];
  id v6 = [v5 mainContentGuide];

  id v7 = [v6 centerXAnchor];
  id v8 = [v4 constraintEqualToAnchor:v7];

  *(void *)(v2 + 32) = v8;
  id v9 = [v3 topAnchor];
  id v10 = [v1 contentView];
  id v11 = [v10 mainContentGuide];

  id v12 = [v11 topAnchor];
  id v13 = [v9 constraintGreaterThanOrEqualToAnchor:v12];

  *(void *)(v2 + 40) = v13;
  id v14 = [v3 bottomAnchor];
  id v15 = [v1 contentView];
  id v16 = [v15 mainContentGuide];

  id v17 = [v16 bottomAnchor];
  id v18 = [v14 constraintLessThanOrEqualToAnchor:v17];

  *(void *)(v2 + 48) = v18;
  id v19 = [v3 centerYAnchor];
  id v20 = [v1 contentView];
  id v21 = [v20 mainContentGuide];

  id v22 = [v21 centerYAnchor];
  id v23 = [v19 constraintEqualToAnchor:v22];

  *(void *)(v2 + 56) = v23;
  specialized Array._endMutation()();
  sub_10004FCE4();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v24 activateConstraints:isa];
}

id sub_1004C1210()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAccessoryDiscoveryAttachCard();
  return [super dealloc];
}

uint64_t type metadata accessor for FMAccessoryDiscoveryAttachCard()
{
  return self;
}

uint64_t sub_1004C12C4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1004C12FC()
{
}

uint64_t sub_1004C1304()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 32, 7);
}

void *sub_1004C134C(uint64_t a1)
{
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  id v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  id v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    v13[1] = v1;
    id v16 = _swiftEmptyArrayStorage;
    sub_10013E9DC(0, v6, 0);
    id v7 = v16;
    uint64_t v8 = *(void *)(type metadata accessor for FMIPUnknownItem() - 8);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v14 = *(void *)(v8 + 72);
    do
    {
      FMIPUnknownItem.identifier.getter();
      id v16 = v7;
      unint64_t v11 = v7[2];
      unint64_t v10 = v7[3];
      if (v11 >= v10 >> 1)
      {
        sub_10013E9DC(v10 > 1, v11 + 1, 1);
        id v7 = v16;
      }
      _OWORD v7[2] = v11 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v11, v5, v15);
      v9 += v14;
      --v6;
    }
    while (v6);
  }
  return v7;
}

void *sub_1004C1534(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t result = (void *)sub_10013EBA4(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(a1 + 8 * v4 + 32);
      }
      int64_t v6 = v5;
      [v5 coordinate];
      uint64_t v8 = v7;
      uint64_t v10 = v9;

      unint64_t v12 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = _swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1) {
        sub_10013EBA4(v11 > 1, v12 + 1, 1);
      }
      ++v4;
      _swiftEmptyArrayStorage[2] = v12 + 1;
      id v13 = &_swiftEmptyArrayStorage[2 * v12];
      v13[4] = v8;
      v13[5] = v10;
      if (v2 == v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void *sub_1004C1694(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t result = (void *)sub_10013EB84(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(a1 + 8 * v4 + 32);
      }
      int64_t v6 = v5;
      [v5 altitude];
      uint64_t v8 = v7;

      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_10013EB84(v9 > 1, v10 + 1, 1);
      }
      ++v4;
      _swiftEmptyArrayStorage[2] = v10 + 1;
      _swiftEmptyArrayStorage[v10 + 4] = v8;
      if (v2 == v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1004C17F8(void *a1, unsigned __int8 a2))()
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_1004DAEE4(v4, a2);
  return sub_1004C1858;
}

void (*sub_1004C185C(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  int64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_1004DAF78(v6, a2, a3);
  return sub_1004C18DC;
}

void sub_1004C18DC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();

  free(v1);
}

uint64_t (*sub_1004C1930(void *a1, unsigned __int8 a2))()
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_1004DB098(v4, a2);
  return sub_1004C1858;
}

void sub_1004C1990(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

void (*sub_1004C19DC(void *a1, uint64_t a2, unint64_t a3))(void *a1)
{
  int64_t v6 = malloc(0x38uLL);
  *a1 = v6;
  v6[4] = a2;
  v6[5] = a3;
  sub_100083344(a2, a3);
  v6[6] = sub_1004DB188(v6, a2, a3);
  return sub_1004C1A60;
}

void sub_1004C1A60(void *a1)
{
  uint64_t v1 = (void *)*a1;
  unint64_t v2 = *(void *)(*a1 + 40);
  uint64_t v3 = *(void *)(*a1 + 32);
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  sub_100083358(v3, v2);

  free(v1);
}

uint64_t sub_1004C1AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v20 = a2;
  uint64_t v5 = sub_10005D034((uint64_t *)&unk_1006C0AF0);
  uint64_t v6 = v5 - 8;
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v19 - v10;
  uint64_t v12 = type metadata accessor for Date();
  id v13 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  v13(v11, a1, v12);
  uint64_t v14 = &v11[*(int *)(v6 + 56)];
  uint64_t v15 = type metadata accessor for UUID();
  id v16 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  id v19 = v14;
  v16(v14, v20, v15);
  v13(v9, v21, v12);
  v16(&v9[*(int *)(v6 + 56)], v22, v15);
  sub_100045D0C((unint64_t *)&qword_1006C0420, (void (*)(uint64_t))&type metadata accessor for Date);
  if (dispatch thunk of static Equatable.== infix(_:_:)()) {
    sub_100045D0C(&qword_1006C0B08, (void (*)(uint64_t))&type metadata accessor for UUID);
  }
  else {
    sub_100045D0C(&qword_1006C0B00, (void (*)(uint64_t))&type metadata accessor for Date);
  }
  char v17 = dispatch thunk of static Comparable.< infix(_:_:)();
  sub_100003F10((uint64_t)v9, (uint64_t *)&unk_1006C0AF0);
  sub_100003F10((uint64_t)v11, (uint64_t *)&unk_1006C0AF0);
  return v17 & 1;
}

uint64_t sub_1004C1DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034(&qword_1006B2AF0);
  __chkstk_darwin(v4 - 8);
  id v40 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMIPDevice();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  unint64_t v39 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v42 = (char *)&v37 - v9;
  uint64_t v10 = type metadata accessor for FMSelectedSection();
  uint64_t v11 = __chkstk_darwin(v10);
  id v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  id v16 = (char *)&v37 - v15;
  __chkstk_darwin(v14);
  id v18 = (char *)&v37 - v17;
  uint64_t v19 = *(void *)(*(void *)(a1 + 16) + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100057A34(v19, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_100057A34((uint64_t)v18, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v20 = sub_10005D034(&qword_1006BAF00);
      sub_100003F10((uint64_t)&v16[*(int *)(v20 + 48)], (uint64_t *)&unk_1006AFE30);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v6);
      goto LABEL_6;
    case 6u:
      uint64_t v22 = *((void *)v16 + 1);
      unint64_t v23 = *((void *)v16 + 2);
      swift_bridgeObjectRelease();
      sub_100083358(v22, v23);
      goto LABEL_6;
    case 7u:
      sub_100057E74((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
      goto LABEL_6;
    case 0xBu:
LABEL_6:
      switch(*(unsigned char *)(a1 + 56))
      {
        case 1:
        case 2:
          sub_1004C7CA4(a2);
          break;
        case 4:
          sub_1004C6134(a2);
          break;
        default:
          sub_1004C4138(a2);
          break;
      }
      sub_100057A34((uint64_t)v18, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_100057E74((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
        uint64_t v21 = (uint64_t)v13;
        return sub_100057E74(v21, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
      }
      else
      {
        uint64_t v37 = a1;
        uint64_t v25 = (uint64_t)&v13[*(int *)(sub_10005D034(&qword_1006BAF00) + 48)];
        uint64_t v26 = v41;
        id v38 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
        v38(v42, v13, v6);
        sub_100003F10(v25, (uint64_t *)&unk_1006AFE30);
        swift_retain();
        uint64_t v27 = FMIPDevice.identifier.getter();
        uint64_t v29 = v28;
        uint64_t v30 = FMIPManager.devices.getter();
        swift_bridgeObjectRetain();
        unint64_t v31 = sub_1004DC53C(v30, v27, v29);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((void *)v31 + 2))
        {
          uint64_t v32 = (uint64_t)v40;
          (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v40, &v31[(*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80)], v6);
          uint64_t v33 = 0;
        }
        else
        {
          uint64_t v33 = 1;
          uint64_t v32 = (uint64_t)v40;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v32, v33, 1, v6);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v32, 1, v6) == 1)
        {
          (*(void (**)(char *, uint64_t))(v26 + 8))(v42, v6);
          sub_100057E74((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
          return sub_100003F10(v32, &qword_1006B2AF0);
        }
        else
        {
          uint64_t v34 = v39;
          v38(v39, (char *)v32, v6);
          uint64_t v35 = FMIPDevice.historicalLocations.getter();
          id v36 = *(void (**)(char *, uint64_t))(v26 + 8);
          v36(v34, v6);
          v36(v42, v6);
          sub_100057E74((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
          uint64_t result = swift_bridgeObjectRelease();
          if (v35) {
            *(unsigned char *)(v37 + 56) = 2;
          }
        }
      }
      return result;
    default:
      sub_100057E74((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
      uint64_t v21 = (uint64_t)v16;
      return sub_100057E74(v21, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  }
}

uint64_t sub_1004C23F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMSelectedSection();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v15 - v8;
  uint64_t v10 = *(void *)(*(void *)(a1 + 16) + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100057A34(v10, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_100057A34((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 16) >= 2)
  {
    if (EnumCaseMultiPayload == 5)
    {
      uint64_t v12 = *((void *)v7 + 1);
      unint64_t v13 = *((void *)v7 + 2);
      swift_bridgeObjectRelease();
      sub_100083358(v12, v13);
    }
    else
    {
      if (EnumCaseMultiPayload != 3)
      {
        sub_100057E74((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
        uint64_t v9 = v7;
        return sub_100057E74((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
      }
      sub_100057E74((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    }
  }
  if (*(unsigned __int8 *)(a1 + 56) - 1 >= 2) {
    sub_1004CD44C(a2);
  }
  else {
    sub_1004CE81C(a2);
  }
  return sub_100057E74((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
}

uint64_t sub_1004C25C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMSelectedSection();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v13 - v8;
  uint64_t v10 = *(void *)(*(void *)(a1 + 16) + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100057A34(v10, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_100057A34((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 9)
  {
    if (EnumCaseMultiPayload != 8)
    {
      sub_100057E74((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
      uint64_t v9 = v7;
      return sub_100057E74((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    }
    sub_100057E74((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  }
  if (*(unsigned __int8 *)(a1 + 56) - 1 >= 2) {
    sub_1004D1B64(a2);
  }
  else {
    sub_1004D3274(a2);
  }
  return sub_100057E74((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
}

uint64_t sub_1004C2770(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v42 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v40 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  id v38 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FMIPItem();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_1000606BC(v15, (uint64_t)qword_1006D1E98);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a3, v11);
  id v16 = a2;
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v32 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v43 = (uint64_t)v16;
    aBlock[0] = v36;
    *(_DWORD *)uint64_t v20 = 138412546;
    int v35 = v19;
    uint64_t v34 = v11;
    uint64_t v37 = v8;
    id v21 = v16;
    os_log_t v33 = v17;
    id v22 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v32 = v16;

    *(_WORD *)(v20 + 12) = 2080;
    uint64_t v23 = FMIPItem.debugDescription.getter();
    uint64_t v43 = sub_1000606F4(v23, v24, aBlock);
    uint64_t v8 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v34);
    os_log_t v25 = v33;
    _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v35, "FMMapViewDataSource: didUpdate image %@ item %s", (uint8_t *)v20, 0x16u);
    sub_10005D034((uint64_t *)&unk_1006B5A50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v26 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v4;
  *(void *)(v27 + 24) = a1;
  aBlock[4] = (uint64_t)sub_1004DE748;
  aBlock[5] = v27;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10003C410;
  aBlock[3] = (uint64_t)&unk_100642340;
  uint64_t v28 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v29 = v38;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100045D0C((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  uint64_t v30 = v40;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v28);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v30, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v29, v41);
}

uint64_t sub_1004C2D48(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMSelectedSection();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v14 - v6;
  uint64_t v8 = *(void *)(*(void *)(a1 + 16) + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100057A34(v8, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_100057A34((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 16) >= 2)
  {
    if (EnumCaseMultiPayload == 5)
    {
      uint64_t v10 = *((void *)v5 + 1);
      unint64_t v11 = *((void *)v5 + 2);
      swift_bridgeObjectRelease();
      sub_100083358(v10, v11);
    }
    else
    {
      if (EnumCaseMultiPayload != 3)
      {
        sub_100057E74((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
        uint64_t v7 = v5;
        return sub_100057E74((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
      }
      sub_100057E74((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    }
  }
  uint64_t v12 = FMIPManager.items.getter();
  if (*(unsigned __int8 *)(a1 + 56) - 1 >= 2) {
    sub_1004CD44C(v12);
  }
  else {
    sub_1004CE81C(v12);
  }
  swift_bridgeObjectRelease();
  return sub_100057E74((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
}

uint64_t sub_1004C2F2C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v42 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v40 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  id v38 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FMIPDevice();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_1000606BC(v15, (uint64_t)qword_1006D1E98);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a3, v11);
  id v16 = a2;
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v32 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v43 = (uint64_t)v16;
    aBlock[0] = v36;
    *(_DWORD *)uint64_t v20 = 138412546;
    int v35 = v19;
    uint64_t v34 = v11;
    uint64_t v37 = v8;
    id v21 = v16;
    os_log_t v33 = v17;
    id v22 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v32 = v16;

    *(_WORD *)(v20 + 12) = 2080;
    uint64_t v23 = FMIPDevice.debugDescription.getter();
    uint64_t v43 = sub_1000606F4(v23, v24, aBlock);
    uint64_t v8 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v34);
    os_log_t v25 = v33;
    _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v35, "FMMapViewDataSource: didUpdate image %@ device %s", (uint8_t *)v20, 0x16u);
    sub_10005D034((uint64_t *)&unk_1006B5A50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v26 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v4;
  *(void *)(v27 + 24) = a1;
  aBlock[4] = (uint64_t)sub_1004DE728;
  aBlock[5] = v27;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10003C410;
  aBlock[3] = (uint64_t)&unk_1006422F0;
  uint64_t v28 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v29 = v38;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100045D0C((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  uint64_t v30 = v40;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v28);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v30, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v29, v41);
}

uint64_t sub_1004C3504(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMSelectedSection();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v15 - v6;
  uint64_t v8 = *(void *)(*(void *)(a1 + 16) + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100057A34(v8, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_100057A34((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v9 = sub_10005D034(&qword_1006BAF00);
      sub_100003F10((uint64_t)&v5[*(int *)(v9 + 48)], (uint64_t *)&unk_1006AFE30);
      uint64_t v10 = type metadata accessor for FMIPDevice();
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v5, v10);
      goto LABEL_6;
    case 6u:
      uint64_t v11 = *((void *)v5 + 1);
      unint64_t v12 = *((void *)v5 + 2);
      swift_bridgeObjectRelease();
      sub_100083358(v11, v12);
      goto LABEL_6;
    case 7u:
      sub_100057E74((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
      goto LABEL_6;
    case 0xBu:
LABEL_6:
      uint64_t v13 = FMIPManager.devices.getter();
      switch(*(unsigned char *)(a1 + 56))
      {
        case 1:
        case 2:
          sub_1004C7CA4(v13);
          break;
        case 4:
          sub_1004C6134(v13);
          break;
        default:
          sub_1004C4138(v13);
          break;
      }
      swift_bridgeObjectRelease();
      break;
    default:
      sub_100057E74((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
      uint64_t v7 = v5;
      break;
  }
  return sub_100057E74((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
}

uint64_t sub_1004C37C8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v26 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  __chkstk_darwin(v7);
  uint64_t v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_1000606BC(v9, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain_n();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v25 = v4;
    uint64_t v13 = (uint8_t *)v12;
    aBlock[0] = swift_slowAlloc();
    unint64_t v24 = v6;
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v23 = v13 + 4;
    type metadata accessor for FMIPSafeLocation();
    swift_bridgeObjectRetain();
    uint64_t v14 = Array.description.getter();
    uint64_t v15 = a1;
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    uint64_t v30 = sub_1000606F4(v14, v17, aBlock);
    uint64_t v6 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    a1 = v15;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMMapViewDataSource: didUpdate safeLocations %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v4 = v25;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  os_log_type_t v18 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v2;
  *(void *)(v19 + 24) = a1;
  aBlock[4] = (uint64_t)sub_1004DE708;
  aBlock[5] = v19;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10003C410;
  aBlock[3] = (uint64_t)&unk_1006422A0;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id v21 = v27;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100045D0C((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v21, v29);
}

uint64_t sub_1004C3C6C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMSelectedSection();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v8 = *(void *)(*(void *)(a1 + 16) + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100057A34(v8, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_100057A34((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 5u:
      uint64_t v9 = *((void *)v5 + 1);
      unint64_t v10 = *((void *)v5 + 2);
      swift_bridgeObjectRelease();
      sub_100083358(v9, v10);
      goto LABEL_3;
    case 6u:
      uint64_t v12 = *((void *)v5 + 1);
      unint64_t v13 = *((void *)v5 + 2);
      swift_bridgeObjectRelease();
      sub_100083358(v12, v13);
      goto LABEL_6;
    case 0xBu:
LABEL_6:
      uint64_t v14 = FMIPManager.devices.getter();
      switch(*(unsigned char *)(a1 + 56))
      {
        case 1:
        case 2:
          sub_1004C7CA4(v14);
          break;
        case 4:
          sub_1004C6134(v14);
          break;
        default:
          sub_1004C4138(v14);
          break;
      }
      goto LABEL_12;
    case 0x10u:
LABEL_3:
      uint64_t v11 = FMIPManager.items.getter();
      if (*(unsigned __int8 *)(a1 + 56) - 1 >= 2) {
        sub_1004CD44C(v11);
      }
      else {
        sub_1004CE81C(v11);
      }
LABEL_12:
      swift_bridgeObjectRelease();
      break;
    default:
      sub_100057E74((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
      uint64_t v7 = v5;
      break;
  }
  return sub_100057E74((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
}

uint64_t sub_1004C3EFC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMSelectedSection();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = *(void *)(*(void *)(a1 + 16) + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100057A34(v8, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_100057A34((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload() == 9)
  {
    swift_retain();
    uint64_t v9 = FMIPManager.unknownItems.getter();
    swift_release();
    if (*(unsigned __int8 *)(a1 + 56) - 1 >= 2) {
      sub_1004D1B64(v9);
    }
    else {
      sub_1004D3274(v9);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100057E74((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    uint64_t v7 = v5;
  }
  return sub_100057E74((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
}

uint64_t sub_1004C40A8(uint64_t a1)
{
  swift_retain();
  uint64_t v2 = dispatch thunk of FMFManager.friends.getter();
  swift_release();
  if (*(unsigned __int8 *)(a1 + 56) - 1 >= 2)
  {
    *(unsigned char *)(a1 + 57) = 0;
    sub_100044D4C(v2);
  }
  else
  {
    sub_1004CB878(v2);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1004C4138(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v16 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = &_swiftEmptyDictionarySingleton;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = &_swiftEmptyDictionarySingleton;
  uint64_t v14 = *(void *)(v1 + 88);
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = a1;
  v11[3] = v1;
  v11[4] = v9;
  v11[5] = v10;
  aBlock[4] = sub_1004DE62C;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_1006421B0;
  uint64_t v12 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  unint64_t v17 = _swiftEmptyArrayStorage;
  sub_100045D0C((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1004C446C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v233 = (char *)a4;
  uint64_t v218 = a2;
  uint64_t v205 = 0;
  uint64_t v188 = type metadata accessor for DispatchQoS();
  uint64_t v184 = *(void *)(v188 - 8);
  __chkstk_darwin(v188);
  char v187 = (char *)&v182 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v183 = *(void *)(v186 - 8);
  __chkstk_darwin(v186);
  uint64_t v185 = (char *)&v182 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FMAnnotationIdentifier();
  uint64_t v191 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v206 = (char *)&v182 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v207 = (uint64_t *)((char *)&v182 - v12);
  __chkstk_darwin(v11);
  uint64_t v212 = (uint64_t)&v182 - v13;
  uint64_t v14 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v193 = (char *)&v182 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  os_log_type_t v18 = (char *)&v182 - v17;
  uint64_t v19 = type metadata accessor for FMIPLocation();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v192 = (char *)&v182 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v225 = (char *)&v182 - v23;
  uint64_t v219 = type metadata accessor for FMIPItem();
  uint64_t v24 = *(void *)(v219 - 8);
  __chkstk_darwin(v219);
  char v211 = (char *)&v182 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v216 = (char *)&v182 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  unint64_t v31 = (char *)&v182 - v30;
  __chkstk_darwin(v29);
  os_log_t v33 = (char *)&v182 - v32;
  uint64_t v34 = sub_10005D034(&qword_1006B36B0);
  __chkstk_darwin(v34 - 8);
  uint64_t v204 = (char *)&v182 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v221 = type metadata accessor for FMIPItemGroup();
  uint64_t v36 = *(void *)(v221 - 8);
  __chkstk_darwin(v221);
  uint64_t v231 = (char *)&v182 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v203 = type metadata accessor for FMIPDevice();
  __chkstk_darwin(v203);
  id v40 = (char *)&v182 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v220 = (void *)(a3 + 16);
  uint64_t v217 = v233 + 16;
  uint64_t v41 = *(void *)(a1 + 16);
  uint64_t v226 = v8;
  uint64_t v200 = v41;
  if (!v41) {
    goto LABEL_84;
  }
  uint64_t v222 = v40;
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
  uint64_t v42 = v38 + 16;
  uint64_t v198 = v43;
  uint64_t v197 = a1 + ((*(unsigned __int8 *)(v42 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 64));
  uint64_t v196 = (unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
  uint64_t v190 = (void (**)(char *, uint64_t, uint64_t))(v36 + 32);
  uint64_t v195 = *(void *)(v42 + 56);
  uint64_t v189 = (void (**)(char *, uint64_t))(v36 + 8);
  uint64_t v230 = (unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  uint64_t v224 = (void (**)(char *, char *, uint64_t))(v24 + 32);
  uint64_t v227 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  uint64_t v215 = (void (**)(char *, uint64_t, uint64_t))(v20 + 32);
  uint64_t v209 = (void (**)(char *, char *, uint64_t))(v24 + 16);
  uint64_t v214 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  char v213 = (void (**)(char *, uint64_t))(v20 + 8);
  uint64_t v223 = (void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v199 = v42;
  uint64_t v194 = (void (**)(char *, uint64_t))(v42 - 8);
  uint64_t v182 = a1;
  swift_bridgeObjectRetain();
  uint64_t v44 = 0;
  uint64_t v45 = (uint64_t)v193;
  uint64_t v202 = v18;
  uint64_t v208 = v19;
  uint64_t v46 = v219;
  uint64_t v210 = v31;
  uint64_t v233 = v33;
  uint64_t v47 = v221;
  uint64_t v48 = v231;
  while (2)
  {
    uint64_t v201 = v44;
    v198(v222, v197 + v195 * v44, v203);
    FMIPDevice.itemGroup.getter();
    uint64_t v49 = (uint64_t)v204;
    if ((*v196)(v204, 1, v47) == 1)
    {
      sub_100003F10(v49, &qword_1006B36B0);
      goto LABEL_69;
    }
    (*v190)(v48, v49, v47);
    if ((FMIPDevice.shouldDisplaySeparatedLocation.getter() & 1) == 0)
    {
      (*v189)(v48, v47);
LABEL_69:
      uint64_t v116 = v222;
      FMIPDevice.bestLocation.getter();
      if ((*v227)(v45, 1, v19) == 1)
      {
        (*v194)(v116, v203);
        sub_100003F10(v45, (uint64_t *)&unk_1006B2AE0);
      }
      else
      {
        uint64_t v117 = (uint64_t)v192;
        (*v215)(v192, v45, v19);
        uint64_t v118 = (uint64_t)v216;
        (*v214)(v216, 1, 1, v46);
        uint64_t v119 = *(void *)(v218 + 48);
        swift_bridgeObjectRetain();
        uint64_t v120 = v19;
        id v121 = (char *)sub_1004CAC90(v116, v118, 0, v117, v119);
        swift_bridgeObjectRelease();
        sub_100003F10(v118, (uint64_t *)&unk_1006AFE30);
        unint64_t v122 = *(void *)&v121[OBJC_IVAR____TtC6FindMy12FMAnnotation_fmClusterIdentifier + 8];
        if (v122)
        {
          uint64_t v123 = *(void *)&v121[OBJC_IVAR____TtC6FindMy12FMAnnotation_fmClusterIdentifier];
          uint64_t v124 = v217;
          swift_beginAccess();
          uint64_t v125 = *(void *)(*v124 + 16);
          sub_100083344(v123, v122);
          if (!v125 || (sub_1001B00AC(v123, v122), (v126 & 1) == 0))
          {
            swift_endAccess();
            swift_beginAccess();
            sub_100083344(v123, v122);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v237 = (void *)*v124;
            void *v124 = 0x8000000000000000;
            sub_1001B970C((uint64_t)_swiftEmptyArrayStorage, v123, v122, isUniquelyReferenced_nonNull_native);
            void *v124 = v237;
            swift_bridgeObjectRelease();
            sub_100083358(v123, v122);
          }
          swift_endAccess();
          uint64_t v47 = v221;
          swift_beginAccess();
          sub_100083344(v123, v122);
          id v129 = sub_1004C19DC(aBlock, v123, v122);
          uint64_t v45 = (uint64_t)v193;
          if (*v128)
          {
            uint64_t v130 = v128;
            uint64_t v131 = v121;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((*v130 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v130 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            ((void (*)(uint64_t *, void))v129)(aBlock, 0);
            swift_endAccess();
            sub_100083358(v123, v122);

            sub_100083358(v123, v122);
            uint64_t v19 = v208;
            (*v213)(v192, v208);
            (*v194)(v222, v203);
            os_log_type_t v18 = v202;
            uint64_t v46 = v219;
            unint64_t v31 = v210;
          }
          else
          {
            ((void (*)(uint64_t *, void))v129)(aBlock, 0);
            swift_endAccess();
            sub_100083358(v123, v122);
            sub_100083358(v123, v122);

            uint64_t v19 = v120;
            (*v213)(v192, v120);
            (*v194)(v222, v203);
            os_log_type_t v18 = v202;
            uint64_t v46 = v219;
          }
        }
        else
        {
          uint64_t v132 = FMIPDevice.identifier.getter();
          uint64_t v133 = (uint64_t)v207;
          uint64_t *v207 = v132;
          *(void *)(v133 + 8) = v134;
          swift_storeEnumTagMultiPayload();
          unint64_t v135 = v220;
          swift_beginAccess();
          uint64_t v136 = v121;
          char v137 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v237 = (void *)*v135;
          *unint64_t v135 = 0x8000000000000000;
          sub_1001B9880((uint64_t)v136, v133, v137);
          *unint64_t v135 = v237;
          swift_bridgeObjectRelease();
          sub_100057E74(v133, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
          swift_endAccess();

          uint64_t v19 = v208;
          (*v213)((char *)v117, v208);
          (*v194)(v116, v203);
          uint64_t v45 = (uint64_t)v193;
          uint64_t v46 = v219;
          uint64_t v47 = v221;
        }
      }
      goto LABEL_4;
    }
    uint64_t v50 = FMIPItemGroup.groupedItems.getter();
    uint64_t v51 = 0;
    uint64_t v52 = *(void *)(v50 + 56);
    uint64_t v228 = (void (**)(char *, uint64_t))(v50 + 56);
    uint64_t v232 = v50;
    uint64_t v53 = 1 << *(unsigned char *)(v50 + 32);
    if (v53 < 64) {
      uint64_t v54 = ~(-1 << v53);
    }
    else {
      uint64_t v54 = -1;
    }
    unint64_t v55 = v54 & v52;
    uint64_t v229 = (void *)((unint64_t)(v53 + 63) >> 6);
    uint64_t v56 = v211;
    while (v55)
    {
      unint64_t v59 = __clz(__rbit64(v55));
      v55 &= v55 - 1;
      unint64_t v60 = v59 | (v51 << 6);
LABEL_27:
      uint64_t v64 = *(void *)(*(void *)(v232 + 48) + 8 * v60);
      swift_bridgeObjectRetain();
      uint64_t v65 = (uint64_t)v233;
      static FMIPItemGroup.primaryPart(group:)();
      sub_100006AB0(v65, (uint64_t)v31, (uint64_t *)&unk_1006AFE30);
      if ((*v230)(v31, 1, v46) == 1)
      {
        sub_100003F10(v65, (uint64_t *)&unk_1006AFE30);
        swift_bridgeObjectRelease();
        uint64_t v57 = (uint64_t)v31;
        uint64_t v58 = (uint64_t *)&unk_1006AFE30;
        goto LABEL_13;
      }
      (*v224)(v56, v31, v46);
      FMIPItem.location.getter();
      if ((*v227)((uint64_t)v18, 1, v19) == 1)
      {
        swift_bridgeObjectRelease();
        (*v223)(v56, v46);
        sub_100003F10((uint64_t)v233, (uint64_t *)&unk_1006AFE30);
        uint64_t v57 = (uint64_t)v18;
        uint64_t v58 = (uint64_t *)&unk_1006B2AE0;
LABEL_13:
        sub_100003F10(v57, v58);
        uint64_t v48 = v231;
      }
      else
      {
        uint64_t v66 = (uint64_t)v225;
        (*v215)(v225, (uint64_t)v18, v19);
        uint64_t v67 = v218;
        uint64_t v68 = (uint64_t)v216;
        (*v209)(v216, v56, v46);
        (*v214)((char *)v68, 0, 1, v46);
        uint64_t v69 = *(void *)(v67 + 48);
        swift_bridgeObjectRetain();
        uint64_t v70 = (char *)sub_1004CAC90(v222, v68, v64, v66, v69);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v71 = sub_100003F10(v68, (uint64_t *)&unk_1006AFE30);
        unint64_t v72 = *(void *)&v70[OBJC_IVAR____TtC6FindMy12FMAnnotation_fmClusterIdentifier + 8];
        if (v72)
        {
          uint64_t v73 = *(void *)&v70[OBJC_IVAR____TtC6FindMy12FMAnnotation_fmClusterIdentifier];
          uint64_t v74 = v217;
          swift_beginAccess();
          uint64_t v75 = *(void *)(*v74 + 16);
          sub_100083344(v73, v72);
          if (v75)
          {
            sub_1001B00AC(v73, v72);
            if (v76)
            {
              swift_endAccess();
              goto LABEL_53;
            }
          }
          swift_endAccess();
          swift_beginAccess();
          sub_100083344(v73, v72);
          char v77 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v237 = (void *)*v74;
          uint64_t v78 = v237;
          *uint64_t v74 = 0x8000000000000000;
          unint64_t v80 = sub_1001B00AC(v73, v72);
          uint64_t v81 = v78[2];
          BOOL v82 = (v79 & 1) == 0;
          uint64_t v83 = v81 + v82;
          if (__OFADD__(v81, v82)) {
            goto LABEL_119;
          }
          char v84 = v79;
          if (v78[3] >= v83)
          {
            if (v77)
            {
              uint64_t v87 = v237;
              if ((v79 & 1) == 0) {
                goto LABEL_42;
              }
            }
            else
            {
              sub_1001BCD18();
              uint64_t v87 = v237;
              if ((v84 & 1) == 0) {
                goto LABEL_42;
              }
            }
          }
          else
          {
            sub_1001B6084(v83, v77);
            unint64_t v85 = sub_1001B00AC(v73, v72);
            if ((v84 & 1) != (v86 & 1)) {
              goto LABEL_126;
            }
            unint64_t v80 = v85;
            uint64_t v87 = v237;
            if ((v84 & 1) == 0)
            {
LABEL_42:
              v87[(v80 >> 6) + 8] |= 1 << v80;
              uint64_t v88 = (uint64_t *)(v87[6] + 16 * v80);
              *uint64_t v88 = v73;
              v88[1] = v72;
              *(void *)(v87[7] + 8 * v80) = _swiftEmptyArrayStorage;
              uint64_t v89 = v87[2];
              BOOL v61 = __OFADD__(v89, 1);
              uint64_t v90 = v89 + 1;
              if (v61) {
                goto LABEL_122;
              }
              v87[2] = v90;
              sub_100083344(v73, v72);
              goto LABEL_52;
            }
          }
          uint64_t v106 = v87[7];
          swift_bridgeObjectRelease();
          *(void *)(v106 + 8 * v80) = _swiftEmptyArrayStorage;
LABEL_52:
          *uint64_t v217 = v87;
          swift_bridgeObjectRelease();
          sub_100083358(v73, v72);
          swift_endAccess();
          uint64_t v19 = v208;
LABEL_53:
          uint64_t v46 = v219;
          unint64_t v31 = v210;
          swift_beginAccess();
          sub_100083344(v73, v72);
          uint64_t v108 = sub_1004C19DC(aBlock, v73, v72);
          if (*v107)
          {
            id v109 = v107;
            id v110 = v70;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((*v109 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v109 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            ((void (*)(uint64_t *, void))v108)(aBlock, 0);
            swift_endAccess();
            sub_100083358(v73, v72);

            sub_100083358(v73, v72);
            (*v213)(v225, v19);
            uint64_t v56 = v211;
            uint64_t v46 = v219;
            (*v223)(v211, v219);
          }
          else
          {
            ((void (*)(uint64_t *, void))v108)(aBlock, 0);
            swift_endAccess();
            sub_100083358(v73, v72);
            sub_100083358(v73, v72);

            (*v213)(v225, v19);
            uint64_t v56 = v211;
            (*v223)(v211, v46);
          }
          sub_100003F10((uint64_t)v233, (uint64_t *)&unk_1006AFE30);
          os_log_type_t v18 = v202;
          uint64_t v48 = v231;
        }
        else
        {
          __chkstk_darwin(v71);
          *(&v182 - 2) = (uint64_t)v70;
          uint64_t v91 = v212;
          uint64_t v92 = v205;
          OS_dispatch_queue.sync<A>(execute:)();
          uint64_t v93 = v220;
          swift_beginAccess();
          uint64_t v94 = v70;
          int v95 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v237 = (void *)*v93;
          id v96 = v237;
          *uint64_t v93 = 0x8000000000000000;
          unint64_t v98 = sub_1001B0040(v91);
          uint64_t v99 = v96[2];
          BOOL v100 = (v97 & 1) == 0;
          uint64_t v101 = v99 + v100;
          if (__OFADD__(v99, v100)) {
            goto LABEL_120;
          }
          char v102 = v97;
          BOOL v103 = v96[3] < v101;
          uint64_t v205 = v92;
          if (v103)
          {
            sub_1001B6400(v101, v95);
            unint64_t v104 = sub_1001B0040(v212);
            if ((v102 & 1) != (v105 & 1)) {
              goto LABEL_127;
            }
            unint64_t v98 = v104;
          }
          else if ((v95 & 1) == 0)
          {
            sub_1001BCED0();
          }
          uint64_t v19 = v208;
          unint64_t v31 = v210;
          uint64_t v48 = v231;
          id v111 = v237;
          if (v102)
          {
            uint64_t v112 = v237[7];
            uint64_t v113 = 8 * v98;

            *(void *)(v112 + v113) = v94;
          }
          else
          {
            v237[(v98 >> 6) + 8] |= 1 << v98;
            sub_100057A34(v212, v111[6] + *(void *)(v191 + 72) * v98, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
            *(void *)(v111[7] + 8 * v98) = v94;
            uint64_t v114 = v111[2];
            BOOL v61 = __OFADD__(v114, 1);
            uint64_t v115 = v114 + 1;
            if (v61) {
              goto LABEL_123;
            }
            v111[2] = v115;
          }
          void *v220 = v111;
          swift_bridgeObjectRelease();
          sub_100057E74(v212, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
          swift_endAccess();

          (*v213)(v225, v19);
          uint64_t v56 = v211;
          uint64_t v46 = v219;
          (*v223)(v211, v219);
          sub_100003F10((uint64_t)v233, (uint64_t *)&unk_1006AFE30);
        }
      }
    }
    BOOL v61 = __OFADD__(v51++, 1);
    if (!v61)
    {
      if (v51 >= (uint64_t)v229)
      {
        uint64_t v45 = (uint64_t)v193;
        uint64_t v47 = v221;
        goto LABEL_81;
      }
      unint64_t v62 = (unint64_t)v228[v51];
      uint64_t v47 = v221;
      if (!v62)
      {
        uint64_t v63 = v51 + 1;
        if (v51 + 1 >= (uint64_t)v229) {
          goto LABEL_80;
        }
        unint64_t v62 = (unint64_t)v228[v63];
        if (!v62)
        {
          uint64_t v63 = v51 + 2;
          if (v51 + 2 >= (uint64_t)v229) {
            goto LABEL_80;
          }
          unint64_t v62 = (unint64_t)v228[v63];
          if (!v62)
          {
            uint64_t v63 = v51 + 3;
            if (v51 + 3 >= (uint64_t)v229)
            {
LABEL_80:
              uint64_t v45 = (uint64_t)v193;
LABEL_81:
              swift_release();
              (*v189)(v48, v47);
              (*v194)(v222, v203);
LABEL_4:
              uint64_t v44 = v201 + 1;
              if (v201 + 1 == v200)
              {
                swift_bridgeObjectRelease();
LABEL_84:
                uint64_t v138 = v218;
                uint64_t v139 = v217;
                swift_beginAccess();
                uint64_t v140 = *v139;
                uint64_t v141 = *(void *)(*v139 + 64);
                uint64_t v230 = (unsigned int (**)(char *, uint64_t, uint64_t))(*v139 + 64);
                uint64_t v142 = 1 << *(unsigned char *)(v140 + 32);
                uint64_t v143 = -1;
                if (v142 < 64) {
                  uint64_t v143 = ~(-1 << v142);
                }
                unint64_t v144 = v143 & v141;
                uint64_t v231 = (char *)((unint64_t)(v142 + 63) >> 6);
                uint64_t v229 = v235;
                uint64_t v228 = (void (**)(char *, uint64_t))(v184 + 8);
                uint64_t v227 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v183 + 8);
                uint64_t v232 = v140;
                swift_bridgeObjectRetain();
                uint64_t v145 = 0;
                uint64_t v146 = v205;
                while (1)
                {
                  if (v144)
                  {
                    uint64_t v233 = (char *)((v144 - 1) & v144);
                    unint64_t v152 = __clz(__rbit64(v144)) | (v145 << 6);
                  }
                  else
                  {
                    BOOL v61 = __OFADD__(v145++, 1);
                    if (v61) {
                      goto LABEL_121;
                    }
                    if (v145 >= (uint64_t)v231)
                    {
LABEL_116:
                      swift_release();
                      swift_beginAccess();
                      uint64_t v180 = swift_bridgeObjectRetain();
                      sub_10003C81C(v180, (uint64_t)_swiftEmptyArrayStorage);
                      return swift_bridgeObjectRelease();
                    }
                    unint64_t v153 = (unint64_t)v230[v145];
                    if (!v153)
                    {
                      uint64_t v154 = v145 + 1;
                      if (v145 + 1 >= (uint64_t)v231) {
                        goto LABEL_116;
                      }
                      unint64_t v153 = (unint64_t)v230[v154];
                      if (!v153)
                      {
                        uint64_t v154 = v145 + 2;
                        if (v145 + 2 >= (uint64_t)v231) {
                          goto LABEL_116;
                        }
                        unint64_t v153 = (unint64_t)v230[v154];
                        if (!v153)
                        {
                          uint64_t v154 = v145 + 3;
                          if (v145 + 3 >= (uint64_t)v231) {
                            goto LABEL_116;
                          }
                          unint64_t v153 = (unint64_t)v230[v154];
                          if (!v153)
                          {
                            while (1)
                            {
                              uint64_t v145 = v154 + 1;
                              if (__OFADD__(v154, 1)) {
                                goto LABEL_124;
                              }
                              if (v145 >= (uint64_t)v231) {
                                goto LABEL_116;
                              }
                              unint64_t v153 = (unint64_t)v230[v145];
                              ++v154;
                              if (v153) {
                                goto LABEL_101;
                              }
                            }
                          }
                        }
                      }
                      uint64_t v145 = v154;
                    }
LABEL_101:
                    uint64_t v233 = (char *)((v153 - 1) & v153);
                    unint64_t v152 = __clz(__rbit64(v153)) + (v145 << 6);
                  }
                  BOOL v155 = (uint64_t *)(*(void *)(v232 + 48) + 16 * v152);
                  uint64_t v157 = *v155;
                  unint64_t v156 = v155[1];
                  unint64_t v158 = *(void *)(*(void *)(v232 + 56) + 8 * v152);
                  if ((v158 & 0x8000000000000000) != 0 || (v158 & 0x4000000000000000) != 0)
                  {
                    swift_bridgeObjectRetain_n();
                    sub_100083344(v157, v156);
                    uint64_t v159 = (uint64_t)sub_1004AF378(v158);
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    uint64_t v159 = v158 & 0xFFFFFFFFFFFFFF8;
                    swift_bridgeObjectRetain_n();
                    sub_100083344(v157, v156);
                  }
                  aBlock[0] = v159;
                  sub_1004D6A3C(aBlock);
                  if (v146) {
                    goto LABEL_125;
                  }
                  sub_100083358(v157, v156);
                  swift_bridgeObjectRelease();
                  uint64_t v160 = aBlock[0];
                  uint64_t v161 = *(void *)(v138 + 48);
                  id v162 = objc_allocWithZone((Class)type metadata accessor for FMClusterAnnotation());
                  swift_bridgeObjectRetain();
                  unint64_t v163 = swift_retain();
                  sub_1003FA2A0(v163);
                  int64_t v165 = v164;
                  *(&v182 - 2) = __chkstk_darwin(v164);
                  uint64_t v166 = (uint64_t)v206;
                  OS_dispatch_queue.sync<A>(execute:)();
                  if (*(void *)(v161 + 16) && (unint64_t v167 = sub_1001B0040(v166), (v168 & 1) != 0))
                  {
                    id v169 = *(id *)(*(void *)(v161 + 56) + 8 * v167);
                    uint64_t v170 = v166;
                    id v171 = v169;
                    sub_100057E74(v170, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
                    uint64_t v172 = swift_dynamicCastClass();
                    if (v172)
                    {
                      unsigned __int8 v173 = (void *)v172;
                      uint64_t v174 = v185;
                      static DispatchWorkItemFlags.barrier.getter();
                      uint64_t v175 = swift_allocObject();
                      *(void *)(v175 + 16) = v160;
                      *(void *)(v175 + 24) = v173;
                      v235[2] = sub_1004DE750;
                      v235[3] = v175;
                      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
                      aBlock[1] = 1107296256;
                      v235[0] = sub_10003C410;
                      v235[1] = &unk_100642200;
                      uint64_t v176 = _Block_copy(aBlock);
                      swift_retain();
                      id v177 = v171;
                      uint64_t v178 = v187;
                      static DispatchQoS.unspecified.getter();
                      OS_dispatch_queue.async(group:qos:flags:execute:)();
                      uint64_t v179 = v176;
                      uint64_t v138 = v218;
                      _Block_release(v179);
                      (*v228)(v178, v188);
                      ((void (*)(char *, uint64_t))*v227)(v174, v186);
                      swift_bridgeObjectRelease();
                      swift_release();

                      uint64_t v147 = swift_release();
                      int64_t v165 = v173;
                    }
                    else
                    {
                      swift_bridgeObjectRelease();
                      swift_release();
                    }
                  }
                  else
                  {
                    sub_100057E74(v166, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
                    swift_bridgeObjectRelease();
                    uint64_t v147 = swift_release();
                  }
                  __chkstk_darwin(v147);
                  *(&v182 - 2) = (uint64_t)v165;
                  uint64_t v148 = (uint64_t)v207;
                  OS_dispatch_queue.sync<A>(execute:)();
                  Swift::String v149 = v220;
                  swift_beginAccess();
                  id v150 = v165;
                  char v151 = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v236 = *v149;
                  *Swift::String v149 = 0x8000000000000000;
                  sub_1001B9880((uint64_t)v150, v148, v151);
                  *Swift::String v149 = v236;
                  swift_bridgeObjectRelease();
                  sub_100057E74(v148, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
                  swift_endAccess();

                  unint64_t v144 = (unint64_t)v233;
                }
              }
              continue;
            }
            unint64_t v62 = (unint64_t)v228[v63];
            if (!v62)
            {
              while (1)
              {
                uint64_t v51 = v63 + 1;
                if (__OFADD__(v63, 1)) {
                  goto LABEL_118;
                }
                if (v51 >= (uint64_t)v229) {
                  goto LABEL_80;
                }
                unint64_t v62 = (unint64_t)v228[v51];
                ++v63;
                if (v62) {
                  goto LABEL_26;
                }
              }
            }
          }
        }
        uint64_t v51 = v63;
      }
LABEL_26:
      unint64_t v55 = (v62 - 1) & v62;
      unint64_t v60 = __clz(__rbit64(v62)) + (v51 << 6);
      goto LABEL_27;
    }
    break;
  }
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  swift_release();
  __break(1u);
LABEL_126:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
LABEL_127:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1004C6134(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v82 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v79 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v77 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for DispatchQoS();
  uint64_t v76 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v75 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10005D034(&qword_1006B2AF0);
  __chkstk_darwin(v6 - 8);
  unint64_t v80 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for FMIPDevice();
  uint64_t v83 = *(void *)(v85 - 8);
  uint64_t v8 = __chkstk_darwin(v85);
  uint64_t v74 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v73 = (char *)&v65 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v65 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v81 = (char *)&v65 - v16;
  uint64_t v72 = v17;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v65 - v18;
  uint64_t v20 = type metadata accessor for FMSelectedSection();
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v65 - v24;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  sub_1000606BC(v26, (uint64_t)qword_1006D1E98);
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "FMMapViewDataSource: updateSelectedDevice", v29, 2u);
    swift_slowDealloc();
  }

  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = &_swiftEmptyDictionarySingleton;
  uint64_t v31 = *(void *)(*(void *)(v2 + 16) + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100057A34(v31, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_100057A34((uint64_t)v25, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload() == 7)
  {
    uint64_t v32 = v83;
    os_log_t v33 = v23;
    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v83 + 32);
    uint64_t v35 = v85;
    uint64_t v71 = v83 + 32;
    v34(v19, v33, v85);
    if ((FMIPDevice.shouldDisplaySeparatedLocation.getter() & 1) == 0)
    {
      sub_1004C7CA4(v82);
LABEL_26:
      sub_100057E74((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v35);
      return swift_release();
    }
    uint64_t v69 = v34;
    uint64_t v70 = v30;
    uint64_t v36 = v82;
    uint64_t v37 = *(void *)(v82 + 16);
    uint64_t v67 = v3;
    if (v37)
    {
      uint64_t v66 = v25;
      uint64_t v68 = v2;
      char v84 = v19;
      uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
      uint64_t v39 = v82 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
      id v40 = (void (**)(char *, uint64_t))(v32 + 8);
      uint64_t v41 = *(void *)(v32 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        v38(v14, v39, v35);
        uint64_t v42 = FMIPDevice.identifier.getter();
        uint64_t v44 = v43;
        if (v42 == FMIPDevice.identifier.getter() && v44 == v45) {
          break;
        }
        char v46 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v46) {
          goto LABEL_19;
        }
        uint64_t v35 = v85;
        (*v40)(v14, v85);
        v39 += v41;
        if (!--v37)
        {
          uint64_t v47 = 1;
          uint64_t v32 = v83;
          uint64_t v19 = v84;
          uint64_t v2 = v68;
          uint64_t v25 = v66;
          uint64_t v48 = v81;
          uint64_t v36 = v82;
          goto LABEL_17;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_19:
      uint64_t v49 = (uint64_t)v80;
      uint64_t v35 = v85;
      v69(v80, v14, v85);
      uint64_t v47 = 0;
      uint64_t v32 = v83;
      uint64_t v19 = v84;
      uint64_t v2 = v68;
      uint64_t v25 = v66;
      uint64_t v48 = v81;
      uint64_t v36 = v82;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v47 = 1;
      uint64_t v48 = v81;
LABEL_17:
      uint64_t v49 = (uint64_t)v80;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v49, v47, 1, v35);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v49, 1, v35) == 1)
    {
      sub_100003F10(v49, &qword_1006B2AF0);
LABEL_25:
      *(unsigned char *)(v2 + 58) = 0;
      sub_1004C4138(v36);
      goto LABEL_26;
    }
    uint64_t v50 = (void (*)(uint64_t, char *, uint64_t))v69;
    v69(v48, (char *)v49, v35);
    if ((FMIPDevice.hasLocation.getter() & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v32 + 8))(v48, v35);
      goto LABEL_25;
    }
    *(unsigned char *)(v2 + 58) = 1;
    uint64_t v85 = *(void *)(v2 + 88);
    uint64_t v68 = v2;
    uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
    uint64_t v52 = v73;
    v51(v73, v48, v35);
    uint64_t v53 = v74;
    v51(v74, v19, v35);
    uint64_t v54 = *(unsigned __int8 *)(v32 + 80);
    uint64_t v55 = (v54 + 16) & ~v54;
    uint64_t v56 = (v72 + v54 + v55) & ~v54;
    char v84 = v19;
    unint64_t v57 = (v72 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v58 = swift_allocObject();
    v50(v58 + v55, v52, v35);
    v50(v58 + v56, v53, v35);
    *(void *)(v58 + v57) = v70;
    *(void *)(v58 + ((v57 + 15) & 0xFFFFFFFFFFFFFFF8)) = v68;
    aBlock[4] = sub_1004DE534;
    aBlock[5] = v58;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_10003C410;
    aBlock[3] = &unk_100642160;
    unint64_t v59 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    unint64_t v60 = v75;
    static DispatchQoS.unspecified.getter();
    char v86 = _swiftEmptyArrayStorage;
    sub_100045D0C((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10005D034((uint64_t *)&unk_1006AE4B0);
    sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
    BOOL v61 = v77;
    uint64_t v62 = v67;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v59);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v61, v62);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v60, v78);
    uint64_t v63 = *(void (**)(char *, uint64_t))(v83 + 8);
    v63(v81, v35);
    sub_100057E74((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    v63(v84, v35);
    swift_release();
  }
  else
  {
    sub_100057E74((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    sub_100057E74((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  }
  return swift_release();
}

uint64_t sub_1004C6BB4(char *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v150 = a4;
  id v162 = a2;
  uint64_t v140 = type metadata accessor for FMAnnotationIdentifier();
  uint64_t v6 = __chkstk_darwin(v140);
  uint64_t v134 = (uint64_t)v119 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v141 = (void *)((char *)v119 - v8);
  uint64_t v9 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v119 - v13;
  uint64_t v157 = type metadata accessor for FMIPLocation();
  uint64_t v15 = *(void *)(v157 - 8);
  uint64_t v16 = __chkstk_darwin(v157);
  uint64_t v160 = (char *)v119 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v133 = (char *)v119 - v19;
  __chkstk_darwin(v18);
  uint64_t v138 = (uint64_t)v119 - v20;
  uint64_t v142 = type metadata accessor for FMIPItem();
  uint64_t v161 = *(void *)(v142 - 8);
  uint64_t v21 = __chkstk_darwin(v142);
  uint64_t v132 = (char *)v119 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  char v137 = (char *)v119 - v23;
  uint64_t v24 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v139 = (char *)v119 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v136 = (char *)v119 - v28;
  __chkstk_darwin(v27);
  uint64_t v135 = (uint64_t)v119 - v29;
  uint64_t v30 = sub_10005D034(&qword_1006B36B0);
  uint64_t v31 = __chkstk_darwin(v30 - 8);
  os_log_t v33 = (char *)v119 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v35 = (char *)v119 - v34;
  unint64_t v144 = a1;
  uint64_t v36 = FMIPDevice.identifier.getter();
  uint64_t v38 = v37;
  if (v36 == FMIPDevice.identifier.getter() && v38 == v39)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v40 & 1) == 0) {
      goto LABEL_47;
    }
  }
  id v162 = v12;
  uint64_t v41 = v15;
  uint64_t v143 = (uint64_t *)(a3 + 16);
  uint64_t v122 = a3;
  uint64_t v42 = v144;
  uint64_t v123 = FMIPDevice.identifier.getter();
  unint64_t v44 = v43;
  FMIPDevice.itemGroup.getter();
  uint64_t v45 = type metadata accessor for FMIPItemGroup();
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
  if (v47(v35, 1, v45) == 1)
  {
    swift_bridgeObjectRelease();
    sub_100003F10((uint64_t)v35, &qword_1006B36B0);
    goto LABEL_11;
  }
  unint64_t v131 = v44;
  sub_100003F10((uint64_t)v35, &qword_1006B36B0);
  if ((FMIPDevice.shouldDisplaySeparatedLocation.getter() & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    uint64_t v50 = v41;
    uint64_t v51 = (uint64_t)v162;
    FMIPDevice.bestLocation.getter();
    uint64_t v52 = v157;
    int v53 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v51, 1, v157);
    a3 = v122;
    uint64_t v54 = v143;
    if (v53 == 1)
    {
      sub_100003F10(v51, (uint64_t *)&unk_1006B2AE0);
    }
    else
    {
      uint64_t v55 = (uint64_t)v160;
      (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v160, v51, v52);
      uint64_t v56 = FMIPDevice.identifier.getter();
      uint64_t v57 = (uint64_t)v141;
      *uint64_t v141 = v56;
      *(void *)(v57 + 8) = v58;
      swift_storeEnumTagMultiPayload();
      uint64_t v59 = (uint64_t)v139;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v161 + 56))(v139, 1, 1, v142);
      uint64_t v60 = *(void *)(v150 + 48);
      swift_bridgeObjectRetain();
      uint64_t v61 = sub_1004CAC90(v42, v59, 0, v55, v60);
      swift_bridgeObjectRelease();
      sub_100003F10(v59, (uint64_t *)&unk_1006AFE30);
      swift_beginAccess();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v163 = *v54;
      *uint64_t v54 = 0x8000000000000000;
      sub_1001B9880(v61, v57, isUniquelyReferenced_nonNull_native);
      *uint64_t v54 = v163;
      swift_bridgeObjectRelease();
      sub_100057E74(v57, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
      swift_endAccess();
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v55, v52);
    }
LABEL_47:
    if (qword_1006AE190 != -1) {
      goto LABEL_54;
    }
    goto LABEL_48;
  }
  FMIPDevice.itemGroup.getter();
  if (v47(v33, 1, v45) == 1)
  {
    sub_100003F10((uint64_t)v33, &qword_1006B36B0);
    uint64_t v49 = &_swiftEmptySetSingleton;
  }
  else
  {
    uint64_t v49 = (void *)FMIPItemGroup.groupedItems.getter();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v45);
  }
  uint64_t v63 = v157;
  uint64_t v64 = v138;
  uint64_t v65 = v137;
  a3 = (uint64_t)v136;
  uint64_t v66 = v135;
  uint64_t v67 = 0;
  uint64_t v68 = v49[7];
  unint64_t v158 = (char *)(v49 + 7);
  uint64_t v69 = 1 << *((unsigned char *)v49 + 32);
  uint64_t v70 = -1;
  if (v69 < 64) {
    uint64_t v70 = ~(-1 << v69);
  }
  unint64_t v71 = v70 & v68;
  int64_t v159 = (unint64_t)(v69 + 63) >> 6;
  uint64_t v160 = (char *)(v161 + 48);
  BOOL v155 = (unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
  unint64_t v156 = (void (**)(char *, uint64_t, uint64_t))(v161 + 32);
  id v129 = (void (**)(uint64_t, char *, uint64_t))(v41 + 32);
  unint64_t v153 = (uint64_t (**)())(v161 + 16);
  uint64_t v128 = (void (**)(char *, uint64_t, uint64_t))(v41 + 16);
  char v151 = (void (**)(char *, uint64_t))(v41 + 8);
  uint64_t v152 = v161 + 8;
  id v121 = &v164;
  uint64_t v127 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v161 + 56);
  *(void *)&long long v48 = 136315651;
  long long v120 = v48;
  v119[1] = (char *)&type metadata for Any + 8;
  uint64_t v72 = v142;
  uint64_t v130 = v14;
  uint64_t v154 = v49;
  while (1)
  {
    if (v71)
    {
      uint64_t v161 = (v71 - 1) & v71;
      id v162 = v67;
      unint64_t v73 = __clz(__rbit64(v71)) | ((void)v67 << 6);
      goto LABEL_36;
    }
    int64_t v74 = (int64_t)(v67 + 1);
    if (__OFADD__(v67, 1))
    {
      __break(1u);
      goto LABEL_53;
    }
    if (v74 >= v159) {
      goto LABEL_46;
    }
    unint64_t v75 = *(void *)&v158[8 * v74];
    int64_t v76 = (int64_t)(v67 + 1);
    if (!v75)
    {
      int64_t v76 = (int64_t)(v67 + 2);
      if ((uint64_t)(v67 + 2) >= v159) {
        goto LABEL_46;
      }
      unint64_t v75 = *(void *)&v158[8 * v76];
      if (!v75)
      {
        int64_t v76 = (int64_t)(v67 + 3);
        if ((uint64_t)(v67 + 3) >= v159) {
          goto LABEL_46;
        }
        unint64_t v75 = *(void *)&v158[8 * v76];
        if (!v75) {
          break;
        }
      }
    }
LABEL_35:
    uint64_t v161 = (v75 - 1) & v75;
    id v162 = (char *)v76;
    unint64_t v73 = __clz(__rbit64(v75)) + (v76 << 6);
LABEL_36:
    uint64_t v78 = *(void *)(v49[6] + 8 * v73);
    swift_bridgeObjectRetain();
    static FMIPItemGroup.primaryPart(group:)();
    sub_100006AB0(v66, a3, (uint64_t *)&unk_1006AFE30);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v160)(a3, 1, v72) == 1)
    {
      sub_100003F10(v66, (uint64_t *)&unk_1006AFE30);
      swift_bridgeObjectRelease();
      sub_100003F10(a3, (uint64_t *)&unk_1006AFE30);
    }
    else
    {
      (*v156)(v65, a3, v72);
      FMIPItem.location.getter();
      if ((*v155)(v14, 1, v63) == 1)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))v152)(v65, v72);
        sub_100003F10(v66, (uint64_t *)&unk_1006AFE30);
        sub_100003F10((uint64_t)v14, (uint64_t *)&unk_1006B2AE0);
      }
      else
      {
        (*v129)(v64, v14, v63);
        if (qword_1006AE190 != -1) {
          swift_once();
        }
        uint64_t v79 = type metadata accessor for Logger();
        sub_1000606BC(v79, (uint64_t)qword_1006D1E98);
        unint64_t v80 = *v153;
        uint64_t v81 = v132;
        ((void (*)(char *, char *, uint64_t))*v153)(v132, v65, v72);
        uint64_t v82 = v133;
        (*v128)(v133, v64, v63);
        unint64_t v83 = v131;
        swift_bridgeObjectRetain_n();
        char v84 = Logger.logObject.getter();
        os_log_type_t v85 = static os_log_type_t.default.getter();
        int v86 = v85;
        BOOL v87 = os_log_type_enabled(v84, v85);
        uint64_t v149 = v152 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        uint64_t v148 = (unint64_t)v151 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        if (v87)
        {
          uint64_t v145 = v80;
          uint64_t v88 = (void (**)(char *, uint64_t))v152;
          uint64_t v89 = v81;
          uint64_t v90 = swift_slowAlloc();
          uint64_t v126 = swift_slowAlloc();
          uint64_t v165 = v126;
          *(_DWORD *)uint64_t v90 = v120;
          int v125 = v86;
          os_log_t v124 = v84;
          uint64_t v91 = FMIPItem.debugDescription.getter();
          uint64_t v163 = sub_1000606F4(v91, v92, &v165);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v147 = *v88;
          v147(v89, v72);
          unint64_t v80 = v145;
          *(_WORD *)(v90 + 12) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v163 = sub_1000606F4(v123, v83, &v165);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v90 + 22) = 2081;
          uint64_t v93 = FMIPLocation.debugDescription.getter();
          uint64_t v163 = sub_1000606F4(v93, v94, &v165);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v146 = *v151;
          v146(v82, v157);
          os_log_t v95 = v124;
          _os_log_impl((void *)&_mh_execute_header, v124, (os_log_type_t)v125, "FMMapViewDataSource: Creating annotation for item %s, groupIdentifier: %s - %{private}s", (uint8_t *)v90, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          uint64_t v147 = *(void (**)(char *, uint64_t))v152;
          v147(v81, v72);
          swift_bridgeObjectRelease_n();
          uint64_t v146 = *v151;
          v146(v82, v63);
        }
        id v96 = v144;
        uint64_t v97 = FMIPDevice.identifier.getter();
        uint64_t v99 = v98;
        BOOL v100 = v137;
        uint64_t v101 = FMIPItem.identifier.getter();
        char v102 = v141;
        *uint64_t v141 = v97;
        v102[1] = v99;
        v102[2] = v101;
        v102[3] = v103;
        swift_storeEnumTagMultiPayload();
        uint64_t v145 = type metadata accessor for FMAnnotationIdentifier;
        uint64_t v104 = v134;
        sub_100057A34((uint64_t)v102, v134, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
        uint64_t v105 = (uint64_t)v139;
        uint64_t v72 = v142;
        ((void (*)(char *, char *, uint64_t))v80)(v139, v100, v142);
        (*v127)(v105, 0, 1, v72);
        uint64_t v106 = *(void *)(v150 + 48);
        swift_bridgeObjectRetain();
        uint64_t v107 = v138;
        uint64_t v108 = sub_1004CAC90(v96, v105, v78, v138, v106);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100003F10(v105, (uint64_t *)&unk_1006AFE30);
        id v109 = v143;
        swift_beginAccess();
        char v110 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v163 = *v109;
        *id v109 = 0x8000000000000000;
        uint64_t v111 = v108;
        uint64_t v65 = v100;
        sub_1001B9880(v111, v104, v110);
        *id v109 = v163;
        uint64_t v64 = v107;
        swift_bridgeObjectRelease();
        uint64_t v112 = v145;
        sub_100057E74(v104, (uint64_t (*)(void))v145);
        swift_endAccess();
        sub_100057E74((uint64_t)v102, (uint64_t (*)(void))v112);
        uint64_t v63 = v157;
        v146((char *)v107, v157);
        v147(v100, v72);
        uint64_t v66 = v135;
        sub_100003F10(v135, (uint64_t *)&unk_1006AFE30);
        uint64_t v14 = v130;
        a3 = (uint64_t)v136;
      }
      uint64_t v49 = v154;
    }
    unint64_t v71 = v161;
    uint64_t v67 = v162;
  }
  char v77 = v67 + 4;
  if ((uint64_t)(v67 + 4) >= v159)
  {
LABEL_46:
    swift_bridgeObjectRelease();
    swift_release();
    a3 = v122;
    goto LABEL_47;
  }
  unint64_t v75 = *(void *)&v158[8 * (void)v77];
  if (v75)
  {
    int64_t v76 = (int64_t)(v67 + 4);
    goto LABEL_35;
  }
  while (1)
  {
    int64_t v76 = (int64_t)(v77 + 1);
    if (__OFADD__(v77, 1)) {
      break;
    }
    if (v76 >= v159) {
      goto LABEL_46;
    }
    unint64_t v75 = *(void *)&v158[8 * v76];
    ++v77;
    if (v75) {
      goto LABEL_35;
    }
  }
LABEL_53:
  __break(1u);
LABEL_54:
  swift_once();
LABEL_48:
  uint64_t v113 = type metadata accessor for Logger();
  sub_1000606BC(v113, (uint64_t)qword_1006D1E98);
  swift_retain();
  uint64_t v114 = Logger.logObject.getter();
  os_log_type_t v115 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v114, v115))
  {
    uint64_t v116 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v116 = 134217984;
    swift_beginAccess();
    uint64_t v165 = *(void *)(*(void *)(a3 + 16) + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v114, v115, "FMMapViewDataSource: result %ld", v116, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
  swift_beginAccess();
  uint64_t v117 = swift_bridgeObjectRetain();
  sub_10003C81C(v117, (uint64_t)_swiftEmptyArrayStorage);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004C7CA4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v70 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v69 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v67 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for DispatchQoS();
  uint64_t v66 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v65 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10005D034(&qword_1006B2AF0);
  __chkstk_darwin(v6 - 8);
  int64_t v76 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for FMIPDevice();
  uint64_t v8 = *(void *)(v79 - 8);
  uint64_t v9 = __chkstk_darwin(v79);
  uint64_t v64 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v62 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  char v77 = (char *)&v62 - v15;
  uint64_t v63 = v16;
  __chkstk_darwin(v14);
  unint64_t v80 = (char *)&v62 - v17;
  uint64_t v18 = type metadata accessor for FMSelectedSection();
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v62 - v22;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  sub_1000606BC(v24, (uint64_t)qword_1006D1E98);
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v27 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "FMMapViewDataSource: updateSelectedDevice", v27, 2u);
    swift_slowDealloc();
  }

  uint64_t v78 = swift_allocObject();
  *(void *)(v78 + 16) = _swiftEmptyArrayStorage;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = &_swiftEmptyDictionarySingleton;
  uint64_t v29 = *(void *)(*(void *)(v2 + 16) + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100057A34(v29, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_100057A34((uint64_t)v23, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 7)
  {
    uint64_t v74 = v28;
    os_log_t v33 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    uint64_t v31 = v79;
    v33(v80, v21, v79);
  }
  else
  {
    uint64_t v31 = v79;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v74 = v28;
      os_log_t v33 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v33(v80, v21, v79);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        sub_100057E74((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
        sub_100057E74((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
        swift_release();
        return swift_release();
      }
      uint64_t v74 = v28;
      uint64_t v32 = (uint64_t)&v21[*(int *)(sub_10005D034(&qword_1006BAF00) + 48)];
      os_log_t v33 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v33(v80, v21, v31);
      sub_100003F10(v32, (uint64_t *)&unk_1006AFE30);
    }
  }
  uint64_t v34 = *(void *)(a1 + 16);
  unint64_t v75 = v23;
  if (v34)
  {
    unint64_t v71 = v33;
    uint64_t v72 = v2;
    uint64_t v73 = v8;
    uint64_t v37 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
    uint64_t v35 = v8 + 16;
    uint64_t v36 = v37;
    unint64_t v38 = a1 + ((*(unsigned __int8 *)(v35 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 64));
    uint64_t v39 = *(void *)(v35 + 56);
    uint64_t v62 = a1;
    swift_bridgeObjectRetain();
    while (1)
    {
      v36(v13, v38, v31);
      uint64_t v40 = FMIPDevice.identifier.getter();
      uint64_t v42 = v41;
      if (v40 == FMIPDevice.identifier.getter() && v42 == v43) {
        break;
      }
      char v44 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v44) {
        goto LABEL_21;
      }
      uint64_t v31 = v79;
      (*(void (**)(char *, uint64_t))(v35 - 8))(v13, v79);
      v38 += v39;
      if (!--v34)
      {
        uint64_t v45 = 1;
        uint64_t v2 = v72;
        uint64_t v8 = v73;
        a1 = v62;
        uint64_t v23 = v75;
        uint64_t v46 = (uint64_t)v76;
        os_log_t v33 = v71;
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_21:
    uint64_t v8 = v73;
    uint64_t v46 = (uint64_t)v76;
    uint64_t v31 = v79;
    os_log_t v33 = v71;
    v71(v76, v13, v79);
    uint64_t v45 = 0;
    uint64_t v2 = v72;
    a1 = v62;
    uint64_t v23 = v75;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v45 = 1;
    uint64_t v46 = (uint64_t)v76;
  }
LABEL_22:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v46, v45, 1, v31);
  swift_bridgeObjectRelease();
  int v47 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v46, 1, v31);
  long long v48 = v77;
  uint64_t v49 = v74;
  if (v47 == 1)
  {
    sub_100003F10(v46, &qword_1006B2AF0);
LABEL_27:
    *(unsigned char *)(v2 + 58) = 0;
    sub_1004C4138(a1);
    sub_100057E74((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v80, v31);
    swift_release();
    return swift_release();
  }
  v33(v77, (char *)v46, v31);
  if ((FMIPDevice.hasLocation.getter() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v48, v31);
    uint64_t v23 = v75;
    goto LABEL_27;
  }
  *(unsigned char *)(v2 + 58) = 1;
  uint64_t v79 = *(void *)(v2 + 88);
  uint64_t v50 = v64;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v64, v80, v31);
  uint64_t v51 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v73 = v8;
  uint64_t v52 = (v51 + 24) & ~v51;
  unint64_t v71 = v33;
  uint64_t v72 = v2;
  unint64_t v53 = (v63 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v54 = (v53 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = a1;
  v71((char *)(v55 + v52), v50, v31);
  *(void *)(v55 + v53) = v72;
  *(void *)(v55 + v54) = v49;
  *(void *)(v55 + ((v54 + 15) & 0xFFFFFFFFFFFFFFF8)) = v78;
  aBlock[4] = sub_1004DE39C;
  aBlock[5] = v55;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_100642110;
  uint64_t v56 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v57 = v65;
  static DispatchQoS.unspecified.getter();
  uint64_t v81 = _swiftEmptyArrayStorage;
  sub_100045D0C((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  uint64_t v58 = v67;
  uint64_t v59 = v70;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v56);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v58, v59);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v57, v68);
  uint64_t v60 = *(void (**)(char *, uint64_t))(v73 + 8);
  v60(v77, v31);
  sub_100057E74((uint64_t)v75, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  v60(v80, v31);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1004C8708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int64_t a5)
{
  int64_t v350 = a5;
  uint64_t v348 = a3;
  uint64_t v299 = a2;
  uint64_t v7 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)v278 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v284 = (char *)v278 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v289 = (char *)v278 - v14;
  __chkstk_darwin(v13);
  uint64_t v314 = (char *)v278 - v15;
  uint64_t v16 = type metadata accessor for FMIPLocation();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  v307 = (char *)v278 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  BOOL v281 = (char *)v278 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v285 = (char *)v278 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  int v320 = (char *)v278 - v25;
  __chkstk_darwin(v24);
  uint64_t v313 = (uint64_t)v278 - v26;
  uint64_t v325 = type metadata accessor for FMIPItem();
  uint64_t v27 = *(void *)(v325 - 8);
  uint64_t v28 = __chkstk_darwin(v325);
  uint64_t v290 = (char *)v278 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v303 = (char *)v278 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v34 = (char *)v278 - v33;
  __chkstk_darwin(v32);
  uint64_t v338 = (char *)v278 - v35;
  uint64_t v36 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  uint64_t v37 = __chkstk_darwin(v36 - 8);
  uint64_t v291 = (char *)v278 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v302 = (uint64_t)v278 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v317 = (char *)v278 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v323 = (char *)v278 - v44;
  __chkstk_darwin(v43);
  uint64_t v322 = (uint64_t)v278 - v45;
  uint64_t v46 = sub_10005D034(&qword_1006B36B0);
  uint64_t v47 = __chkstk_darwin(v46 - 8);
  uint64_t v280 = (char *)v278 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v51 = (char *)v278 - v50;
  uint64_t v52 = __chkstk_darwin(v49);
  unint64_t v54 = (char *)v278 - v53;
  __chkstk_darwin(v52);
  uint64_t v292 = (char *)v278 - v55;
  uint64_t v351 = type metadata accessor for FMAnnotationIdentifier();
  uint64_t v56 = __chkstk_darwin(v351);
  uint64_t v315 = (uint64_t)v278 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __chkstk_darwin(v56);
  v346 = (void *)((char *)v278 - v59);
  __chkstk_darwin(v58);
  uint64_t v326 = (void *)((char *)v278 - v60);
  uint64_t v344 = type metadata accessor for FMIPHistoricalLocation();
  uint64_t v61 = *(void *)(v344 - 8);
  __chkstk_darwin(v344);
  uint64_t v343 = (char *)v278 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v309 = type metadata accessor for FMIPDevice();
  __chkstk_darwin(v309);
  uint64_t v340 = (char *)v278 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v279 = a4;
  uint64_t v347 = (uint64_t *)(a4 + 16);
  uint64_t v286 = (void *)(v350 + 16);
  uint64_t v298 = *(void *)(a1 + 16);
  if (!v298)
  {
LABEL_124:
    if (qword_1006AE190 != -1) {
      goto LABEL_133;
    }
    goto LABEL_125;
  }
  uint64_t v282 = v54;
  uint64_t v283 = v51;
  uint64_t v66 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 16);
  uint64_t v65 = v63 + 16;
  uint64_t v296 = v66;
  uint64_t v295 = a1 + ((*(unsigned __int8 *)(v65 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 64));
  uint64_t v336 = (unint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  uint64_t v319 = (void (**)(char *, uint64_t, uint64_t))(v17 + 32);
  uint64_t v294 = *(void *)(v65 + 56);
  unint64_t v318 = v17 + 8;
  uint64_t v316 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
  uint64_t v297 = v65;
  uint64_t v293 = (void (**)(char *, uint64_t))(v65 - 8);
  int v345 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  uint64_t v333 = (void (**)(char *, uint64_t, uint64_t))(v27 + 32);
  uint64_t v332 = (void (**)(char *, char *, uint64_t))(v27 + 16);
  uint64_t v337 = (void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v304 = &v353;
  uint64_t v342 = v61 + 16;
  uint64_t v288 = v61;
  uint64_t v341 = (void (**)(char *, uint64_t))(v61 + 8);
  char v311 = (void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v278[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v67 = 0;
  *(void *)&long long v68 = 136315651;
  long long v301 = v68;
  uint64_t v300 = (char *)&type metadata for Any + 8;
  *(void *)&long long v68 = 136315138;
  long long v287 = v68;
  uint64_t v305 = v10;
  uint64_t v312 = v34;
  uint64_t v69 = (uint64_t)v323;
  uint64_t v70 = v322;
  unint64_t v71 = v326;
  uint64_t v72 = v340;
  uint64_t v331 = v16;
LABEL_5:
  uint64_t v308 = v67;
  v296(v72, v295 + v294 * v67, v309);
  uint64_t v73 = FMIPDevice.identifier.getter();
  uint64_t v75 = v74;
  uint64_t v76 = FMIPDevice.identifier.getter();
  uint64_t v324 = (unint64_t)v337 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  if (v73 != v76 || v75 != v77)
  {
    char v78 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v78) {
      goto LABEL_9;
    }
    uint64_t v128 = (uint64_t)v284;
    FMIPDevice.bestLocation.getter();
    uint64_t v129 = v331;
    uint64_t v334 = *v336;
    if (v334(v128, 1, v331) == 1)
    {
      sub_100003F10(v128, (uint64_t *)&unk_1006B2AE0);
    }
    else
    {
      uint64_t v144 = (uint64_t)v281;
      (*v319)(v281, v128, v129);
      uint64_t v155 = FMIPDevice.historicalLocations.getter();
      swift_bridgeObjectRelease();
      if (!v155 && (FMIPDevice.pairingIncomplete.getter() & 1) == 0)
      {
        uint64_t v257 = (uint64_t)v317;
        (*v316)(v317, 1, 1, v325);
        uint64_t v258 = *(void *)(v348 + 48);
        swift_bridgeObjectRetain();
        uint64_t v259 = (void *)sub_1004CAC90(v72, v257, 0, v144, v258);
        swift_bridgeObjectRelease();
        uint64_t v260 = v257;
        uint64_t v261 = v347;
        sub_100003F10(v260, (uint64_t *)&unk_1006AFE30);
        uint64_t v262 = FMIPDevice.identifier.getter();
        uint64_t v263 = (uint64_t)v346;
        uint64_t *v346 = v262;
        *(void *)(v263 + 8) = v264;
        swift_storeEnumTagMultiPayload();
        swift_beginAccess();
        id v265 = v259;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v352 = *v261;
        *uint64_t v261 = 0x8000000000000000;
        sub_1001B9880((uint64_t)v265, v263, isUniquelyReferenced_nonNull_native);
        *uint64_t v261 = v352;
        swift_bridgeObjectRelease();
        uint64_t v267 = v263;
        unint64_t v71 = v326;
        sub_100057E74(v267, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
        swift_endAccess();

LABEL_43:
        (*(void (**)(uint64_t, uint64_t))v318)(v144, v129);
        (*v293)(v72, v309);
        goto LABEL_4;
      }
      (*(void (**)(uint64_t, uint64_t))v318)(v144, v129);
    }
    uint64_t v156 = (uint64_t)v283;
    FMIPDevice.itemGroup.getter();
    uint64_t v157 = type metadata accessor for FMIPItemGroup();
    uint64_t v158 = *(void *)(v157 - 8);
    int64_t v159 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v158 + 48);
    if (v159(v156, 1, v157) == 1)
    {
      (*v293)(v72, v309);
      sub_100003F10(v156, &qword_1006B36B0);
      goto LABEL_121;
    }
    sub_100003F10(v156, &qword_1006B36B0);
    if ((FMIPDevice.shouldDisplaySeparatedLocation.getter() & 1) == 0) {
      goto LABEL_120;
    }
    uint64_t v160 = (uint64_t)v280;
    FMIPDevice.itemGroup.getter();
    if (v159(v160, 1, v157) == 1)
    {
      sub_100003F10(v160, &qword_1006B36B0);
      uint64_t v161 = &_swiftEmptySetSingleton;
    }
    else
    {
      uint64_t v161 = (void *)FMIPItemGroup.groupedItems.getter();
      (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v160, v157);
    }
    uint64_t v211 = v331;
    uint64_t v212 = v325;
    char v213 = v303;
    uint64_t v214 = (uint64_t)v291;
    uint64_t v215 = v302;
    uint64_t v216 = (uint64_t)v305;
    int64_t v217 = 0;
    uint64_t v218 = v161[7];
    int64_t v335 = (int64_t)(v161 + 7);
    uint64_t v219 = 1 << *((unsigned char *)v161 + 32);
    if (v219 < 64) {
      uint64_t v220 = ~(-1 << v219);
    }
    else {
      uint64_t v220 = -1;
    }
    unint64_t v221 = v220 & v218;
    int64_t v339 = (unint64_t)(v219 + 63) >> 6;
    uint64_t v349 = v161;
    while (1)
    {
      if (v221)
      {
        unint64_t v224 = __clz(__rbit64(v221));
        v221 &= v221 - 1;
        int64_t v350 = v217;
        unint64_t v225 = v224 | (v217 << 6);
      }
      else
      {
        int64_t v226 = v217 + 1;
        if (__OFADD__(v217, 1))
        {
LABEL_130:
          __break(1u);
          goto LABEL_131;
        }
        uint64_t v69 = (uint64_t)v323;
        uint64_t v70 = v322;
        if (v226 >= v339) {
          goto LABEL_119;
        }
        unint64_t v227 = *(void *)(v335 + 8 * v226);
        int64_t v228 = v217 + 1;
        if (!v227)
        {
          int64_t v228 = v217 + 2;
          if (v217 + 2 >= v339) {
            goto LABEL_119;
          }
          unint64_t v227 = *(void *)(v335 + 8 * v228);
          if (!v227)
          {
            int64_t v228 = v217 + 3;
            if (v217 + 3 >= v339) {
              goto LABEL_119;
            }
            unint64_t v227 = *(void *)(v335 + 8 * v228);
            if (!v227)
            {
              uint64_t v229 = v217 + 4;
              if (v217 + 4 >= v339) {
                goto LABEL_119;
              }
              unint64_t v227 = *(void *)(v335 + 8 * v229);
              if (!v227)
              {
                while (1)
                {
                  int64_t v228 = v229 + 1;
                  if (__OFADD__(v229, 1)) {
                    goto LABEL_132;
                  }
                  if (v228 >= v339) {
                    break;
                  }
                  unint64_t v227 = *(void *)(v335 + 8 * v228);
                  ++v229;
                  if (v227) {
                    goto LABEL_109;
                  }
                }
LABEL_119:
                swift_release();
LABEL_120:
                (*v293)(v72, v309);
LABEL_121:
                unint64_t v71 = v326;
LABEL_4:
                uint64_t v67 = v308 + 1;
                if (v308 + 1 == v298)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_124;
                }
                goto LABEL_5;
              }
              int64_t v228 = v217 + 4;
            }
          }
        }
LABEL_109:
        unint64_t v221 = (v227 - 1) & v227;
        int64_t v350 = v228;
        unint64_t v225 = __clz(__rbit64(v227)) + (v228 << 6);
        uint64_t v216 = (uint64_t)v305;
      }
      uint64_t v230 = *(void *)(v161[6] + 8 * v225);
      swift_bridgeObjectRetain();
      static FMIPItemGroup.primaryPart(group:)();
      sub_100006AB0(v215, v214, (uint64_t *)&unk_1006AFE30);
      if ((*v345)(v214, 1, v212) == 1) {
        break;
      }
      (*v333)(v213, v214, v212);
      FMIPItem.location.getter();
      if (v334(v216, 1, v211) == 1)
      {
        swift_bridgeObjectRelease();
        (*v337)(v213, v212);
        uint64_t v215 = v302;
        sub_100003F10(v302, (uint64_t *)&unk_1006AFE30);
        uint64_t v222 = v216;
        uint64_t v223 = (uint64_t *)&unk_1006B2AE0;
        goto LABEL_92;
      }
      (*v319)(v307, v216, v211);
      if (qword_1006AE190 != -1) {
        swift_once();
      }
      uint64_t v231 = type metadata accessor for Logger();
      sub_1000606BC(v231, (uint64_t)qword_1006D1E98);
      uint64_t v232 = (void (*)(char *, uint64_t))*v332;
      uint64_t v233 = v290;
      uint64_t v234 = v325;
      (*v332)(v290, v213, v325);
      uint64_t v235 = Logger.logObject.getter();
      os_log_type_t v236 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v235, v236))
      {
        uint64_t v237 = swift_slowAlloc();
        uint64_t v329 = v232;
        uint64_t v238 = (uint8_t *)v237;
        uint64_t v354 = swift_slowAlloc();
        *(_DWORD *)uint64_t v238 = v287;
        uint64_t v330 = (void (*)(char *, uint64_t))(v238 + 4);
        uint64_t v239 = FMIPItem.debugDescription.getter();
        uint64_t v352 = sub_1000606F4(v239, v240, &v354);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v330 = *v337;
        v330(v233, v234);
        _os_log_impl((void *)&_mh_execute_header, v235, v236, "FMMapViewDataSource: Creating annotation for item %s", v238, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v232 = v329;
        swift_slowDealloc();
      }
      else
      {
        uint64_t v330 = *v337;
        v330(v233, v234);
      }

      uint64_t v241 = FMIPDevice.identifier.getter();
      uint64_t v243 = v242;
      unint64_t v244 = v303;
      uint64_t v245 = FMIPItem.identifier.getter();
      unint64_t v246 = v346;
      uint64_t *v346 = v241;
      v246[1] = v243;
      v246[2] = v245;
      v246[3] = v247;
      swift_storeEnumTagMultiPayload();
      uint64_t v248 = v315;
      sub_100057A34((uint64_t)v246, v315, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
      uint64_t v249 = (uint64_t)v317;
      unint64_t v250 = v244;
      uint64_t v251 = v325;
      ((void (*)(char *, char *, uint64_t))v232)(v317, v250, v325);
      (*v316)((char *)v249, 0, 1, v251);
      uint64_t v252 = *(void *)(v348 + 48);
      swift_bridgeObjectRetain();
      uint64_t v253 = sub_1004CAC90(v340, v249, v230, (uint64_t)v307, v252);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100003F10(v249, (uint64_t *)&unk_1006AFE30);
      uint64_t v254 = v347;
      swift_beginAccess();
      char v255 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v352 = *v254;
      *uint64_t v254 = 0x8000000000000000;
      sub_1001B9880(v253, v248, v255);
      *uint64_t v254 = v352;
      swift_bridgeObjectRelease();
      uint64_t v256 = v248;
      uint64_t v72 = v340;
      sub_100057E74(v256, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
      swift_endAccess();
      char v213 = v303;
      sub_100057E74((uint64_t)v246, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
      uint64_t v211 = v331;
      (*(void (**)(char *, uint64_t))v318)(v307, v331);
      v330(v213, v251);
      uint64_t v215 = v302;
      sub_100003F10(v302, (uint64_t *)&unk_1006AFE30);
      uint64_t v216 = (uint64_t)v305;
      uint64_t v212 = v251;
      uint64_t v214 = (uint64_t)v291;
LABEL_93:
      uint64_t v161 = v349;
      int64_t v217 = v350;
    }
    sub_100003F10(v215, (uint64_t *)&unk_1006AFE30);
    swift_bridgeObjectRelease();
    uint64_t v222 = v214;
    uint64_t v223 = (uint64_t *)&unk_1006AFE30;
LABEL_92:
    sub_100003F10(v222, v223);
    goto LABEL_93;
  }
  swift_bridgeObjectRelease_n();
LABEL_9:
  uint64_t v306 = FMIPDevice.identifier.getter();
  unint64_t v321 = v79;
  uint64_t v80 = FMIPDevice.historicalLocations.getter();
  if (v80)
  {
    uint64_t v81 = *(void *)(v80 + 16);
    int64_t v339 = v80;
    if (v81)
    {
      unint64_t v82 = v80 + ((*(unsigned __int8 *)(v288 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v288 + 80));
      int64_t v83 = *(void *)(v288 + 72);
      uint64_t v349 = *(void **)(v288 + 16);
      int64_t v350 = v83;
      char v84 = _swiftEmptyArrayStorage;
      ((void (*)(char *, unint64_t, uint64_t))v349)(v343, v82, v344);
      while (1)
      {
        uint64_t v88 = (void *)FMIPHistoricalLocation.location.getter();
        id v89 = objc_allocWithZone((Class)type metadata accessor for FMTrackAnnotation());
        uint64_t v90 = (char *)sub_100429384(v88);

        uint64_t v91 = OBJC_IVAR____TtC6FindMy17FMTrackAnnotation_location;
        id v92 = *(id *)&v90[OBJC_IVAR____TtC6FindMy17FMTrackAnnotation_location];
        uint64_t v93 = sub_1002E40CC();
        uint64_t v95 = v94;

        *unint64_t v71 = v93;
        v71[1] = v95;
        swift_storeEnumTagMultiPayload();
        uint64_t v96 = *(void *)(v348 + 48);
        if (*(void *)(v96 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v97 = sub_1001B0040((uint64_t)v71);
          if (v98)
          {
            id v99 = *(id *)(*(void *)(v96 + 56) + 8 * v97);
            swift_bridgeObjectRelease();
            sub_100057E74((uint64_t)v71, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
            id v100 = *(id *)&v90[v91];
            uint64_t v101 = sub_1002E40CC();
            uint64_t v103 = v102;

            uint64_t v104 = (uint64_t)v346;
            uint64_t *v346 = v101;
            *(void *)(v104 + 8) = v103;
            swift_storeEnumTagMultiPayload();
            uint64_t v105 = v347;
            swift_beginAccess();
            uint64_t v106 = (char *)v99;
            char v107 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v352 = *v105;
            *uint64_t v105 = 0x8000000000000000;
            sub_1001B9880((uint64_t)v106, v104, v107);
            *uint64_t v105 = v352;
            swift_bridgeObjectRelease();
            sub_100057E74(v104, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
            swift_endAccess();
            [v106 coordinate];
            uint64_t v109 = v108;
            uint64_t v111 = v110;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              char v84 = sub_10007DF8C(0, v84[2] + 1, 1, v84);
            }
            unint64_t v113 = v84[2];
            unint64_t v112 = v84[3];
            unint64_t v71 = v326;
            if (v113 >= v112 >> 1) {
              char v84 = sub_10007DF8C((void *)(v112 > 1), v113 + 1, 1, v84);
            }
            v84[2] = v113 + 1;
            uint64_t v114 = &v84[2 * v113];
            v114[4] = v109;
            v114[5] = v111;

            goto LABEL_13;
          }
          swift_bridgeObjectRelease();
        }
        sub_100057E74((uint64_t)v71, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
        id v115 = *(id *)&v90[v91];
        uint64_t v116 = sub_1002E40CC();
        uint64_t v118 = v117;

        uint64_t v119 = (uint64_t)v346;
        uint64_t *v346 = v116;
        *(void *)(v119 + 8) = v118;
        swift_storeEnumTagMultiPayload();
        long long v120 = v347;
        swift_beginAccess();
        uint64_t v106 = v90;
        char v121 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v352 = *v120;
        *long long v120 = 0x8000000000000000;
        sub_1001B9880((uint64_t)v106, v119, v121);
        *long long v120 = v352;
        swift_bridgeObjectRelease();
        sub_100057E74(v119, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
        swift_endAccess();
        [v106 coordinate];
        uint64_t v123 = v122;
        uint64_t v125 = v124;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v84 = sub_10007DF8C(0, v84[2] + 1, 1, v84);
        }
        unint64_t v127 = v84[2];
        unint64_t v126 = v84[3];
        if (v127 >= v126 >> 1) {
          char v84 = sub_10007DF8C((void *)(v126 > 1), v127 + 1, 1, v84);
        }
        v84[2] = v127 + 1;
        os_log_type_t v85 = &v84[2 * v127];
        v85[4] = v123;
        v85[5] = v125;
LABEL_13:

        BOOL v87 = v343;
        uint64_t v86 = v344;
        (*v341)(v343, v344);
        v82 += v350;
        if (!--v81) {
          goto LABEL_30;
        }
        ((void (*)(char *, unint64_t, uint64_t))v349)(v87, v82, v86);
      }
    }
    char v84 = _swiftEmptyArrayStorage;
LABEL_30:
    swift_bridgeObjectRelease();
    unint64_t v130 = v84[2];
    if (v130 <= 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v69 = (uint64_t)v323;
      uint64_t v70 = v322;
      uint64_t v72 = v340;
    }
    else
    {
      id v131 = [self polylineWithCoordinates:v84 + 4 count:v130];
      swift_bridgeObjectRelease();
      uint64_t v132 = v286;
      swift_beginAccess();
      id v133 = v131;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      uint64_t v72 = v340;
      if (*(void *)((*v132 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v132 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();

      uint64_t v69 = (uint64_t)v323;
      uint64_t v70 = v322;
    }
  }
  uint64_t v134 = v292;
  FMIPDevice.itemGroup.getter();
  uint64_t v135 = (uint64_t)v134;
  uint64_t v136 = type metadata accessor for FMIPItemGroup();
  uint64_t v137 = *(void *)(v136 - 8);
  uint64_t v138 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v137 + 48);
  if (v138(v135, 1, v136) == 1)
  {
    swift_bridgeObjectRelease();
    sub_100003F10(v135, &qword_1006B36B0);
LABEL_41:
    uint64_t v141 = (uint64_t)v289;
    FMIPDevice.bestLocation.getter();
    uint64_t v129 = v331;
    unsigned int v142 = (*v336)(v141, 1, v331);
    uint64_t v143 = v348;
    unint64_t v71 = v326;
    if (v142 == 1)
    {
      (*v293)(v72, v309);
      sub_100003F10(v141, (uint64_t *)&unk_1006B2AE0);
      goto LABEL_4;
    }
    uint64_t v144 = (uint64_t)v285;
    (*v319)(v285, v141, v129);
    uint64_t v145 = FMIPDevice.identifier.getter();
    uint64_t v146 = (uint64_t)v346;
    uint64_t *v346 = v145;
    *(void *)(v146 + 8) = v147;
    swift_storeEnumTagMultiPayload();
    uint64_t v148 = (uint64_t)v317;
    (*v316)(v317, 1, 1, v325);
    uint64_t v149 = *(void *)(v143 + 48);
    swift_bridgeObjectRetain();
    uint64_t v150 = sub_1004CAC90(v340, v148, 0, v144, v149);
    swift_bridgeObjectRelease();
    uint64_t v151 = v148;
    uint64_t v152 = v347;
    sub_100003F10(v151, (uint64_t *)&unk_1006AFE30);
    swift_beginAccess();
    char v153 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v352 = *v152;
    *uint64_t v152 = 0x8000000000000000;
    sub_1001B9880(v150, v146, v153);
    *uint64_t v152 = v352;
    swift_bridgeObjectRelease();
    uint64_t v154 = v146;
    uint64_t v72 = v340;
    sub_100057E74(v154, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
    swift_endAccess();
    goto LABEL_43;
  }
  sub_100003F10(v135, &qword_1006B36B0);
  if ((FMIPDevice.shouldDisplaySeparatedLocation.getter() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_41;
  }
  uint64_t v139 = (uint64_t)v282;
  FMIPDevice.itemGroup.getter();
  if (v138(v139, 1, v136) == 1)
  {
    sub_100003F10(v139, &qword_1006B36B0);
    uint64_t v140 = (char *)&_swiftEmptySetSingleton;
  }
  else
  {
    uint64_t v140 = (char *)FMIPItemGroup.groupedItems.getter();
    (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v139, v136);
  }
  id v162 = v314;
  uint64_t v163 = v331;
  uint64_t v164 = v313;
  uint64_t v165 = v325;
  uint64_t v166 = v338;
  int64_t v167 = 0;
  uint64_t v168 = *((void *)v140 + 7);
  uint64_t v334 = (unint64_t (*)(uint64_t, uint64_t, uint64_t))(v140 + 56);
  uint64_t v169 = 1 << v140[32];
  if (v169 < 64) {
    uint64_t v170 = ~(-1 << v169);
  }
  else {
    uint64_t v170 = -1;
  }
  unint64_t v171 = v170 & v168;
  int64_t v335 = (unint64_t)(v169 + 63) >> 6;
  int64_t v339 = (int64_t)v140;
  while (1)
  {
    if (v171)
    {
      uint64_t v349 = (void *)((v171 - 1) & v171);
      int64_t v350 = v167;
      unint64_t v174 = __clz(__rbit64(v171)) | (v167 << 6);
      goto LABEL_76;
    }
    int64_t v175 = v167 + 1;
    if (__OFADD__(v167, 1))
    {
      __break(1u);
      goto LABEL_130;
    }
    if (v175 >= v335) {
      goto LABEL_85;
    }
    unint64_t v176 = *((void *)v334 + v175);
    int64_t v177 = v167 + 1;
    if (!v176)
    {
      int64_t v177 = v167 + 2;
      if (v167 + 2 >= v335) {
        goto LABEL_85;
      }
      unint64_t v176 = *((void *)v334 + v177);
      if (!v176)
      {
        int64_t v177 = v167 + 3;
        if (v167 + 3 >= v335) {
          goto LABEL_85;
        }
        unint64_t v176 = *((void *)v334 + v177);
        if (!v176) {
          break;
        }
      }
    }
LABEL_75:
    uint64_t v349 = (void *)((v176 - 1) & v176);
    int64_t v350 = v177;
    unint64_t v174 = __clz(__rbit64(v176)) + (v177 << 6);
LABEL_76:
    uint64_t v179 = *(void *)(*((void *)v140 + 6) + 8 * v174);
    swift_bridgeObjectRetain();
    static FMIPItemGroup.primaryPart(group:)();
    sub_100006AB0(v70, v69, (uint64_t *)&unk_1006AFE30);
    if ((*v345)(v69, 1, v165) == 1)
    {
      sub_100003F10(v70, (uint64_t *)&unk_1006AFE30);
      swift_bridgeObjectRelease();
      uint64_t v172 = v69;
      unsigned __int8 v173 = (uint64_t *)&unk_1006AFE30;
LABEL_58:
      sub_100003F10(v172, v173);
      goto LABEL_59;
    }
    (*v333)(v166, v69, v165);
    FMIPItem.location.getter();
    if ((*v336)((uint64_t)v162, 1, v163) == 1)
    {
      swift_bridgeObjectRelease();
      (*v337)(v166, v165);
      sub_100003F10(v70, (uint64_t *)&unk_1006AFE30);
      uint64_t v172 = (uint64_t)v162;
      unsigned __int8 v173 = (uint64_t *)&unk_1006B2AE0;
      goto LABEL_58;
    }
    (*v319)((char *)v164, (uint64_t)v162, v163);
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v180 = type metadata accessor for Logger();
    sub_1000606BC(v180, (uint64_t)qword_1006D1E98);
    unsigned __int8 v181 = v312;
    uint64_t v165 = v325;
    uint64_t v330 = (void (*)(char *, uint64_t))*v332;
    v330(v312, (uint64_t)v338);
    uint64_t v182 = v320;
    (*v311)(v320, v164, v163);
    unint64_t v183 = v321;
    swift_bridgeObjectRetain_n();
    uint64_t v184 = Logger.logObject.getter();
    uint64_t v185 = v163;
    os_log_type_t v186 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v184, v186))
    {
      uint64_t v187 = swift_slowAlloc();
      uint64_t v310 = swift_slowAlloc();
      uint64_t v354 = v310;
      *(_DWORD *)uint64_t v187 = v301;
      uint64_t v188 = FMIPItem.debugDescription.getter();
      uint64_t v352 = sub_1000606F4(v188, v189, &v354);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v190 = v181;
      uint64_t v191 = v165;
      uint64_t v329 = *v337;
      v329(v190, v165);
      *(_WORD *)(v187 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v352 = sub_1000606F4(v306, v183, &v354);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v187 + 22) = 2081;
      uint64_t v192 = v320;
      uint64_t v193 = FMIPLocation.debugDescription.getter();
      uint64_t v352 = sub_1000606F4(v193, v194, &v354);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v195 = *(void (**)(uint64_t, uint64_t))v318;
      uint64_t v327 = v318 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v328 = v195;
      v195((uint64_t)v192, v331);
      uint64_t v165 = v191;
      _os_log_impl((void *)&_mh_execute_header, v184, v186, "FMMapViewDataSource: Creating annotation for item %s, groupIdentifier: %s - %{private}s", (uint8_t *)v187, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v329 = *v337;
      v329(v181, v165);
      swift_bridgeObjectRelease_n();
      uint64_t v196 = *(void (**)(uint64_t, uint64_t))v318;
      uint64_t v327 = v318 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v328 = v196;
      v196((uint64_t)v182, v185);
    }

    uint64_t v197 = FMIPDevice.identifier.getter();
    uint64_t v199 = v198;
    uint64_t v200 = v338;
    uint64_t v201 = FMIPItem.identifier.getter();
    uint64_t v202 = v346;
    uint64_t *v346 = v197;
    v202[1] = v199;
    v202[2] = v201;
    v202[3] = v203;
    swift_storeEnumTagMultiPayload();
    uint64_t v204 = v315;
    sub_100057A34((uint64_t)v202, v315, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
    uint64_t v205 = (uint64_t)v317;
    ((void (*)(char *, char *, uint64_t))v330)(v317, v200, v165);
    (*v316)((char *)v205, 0, 1, v165);
    uint64_t v206 = *(void *)(v348 + 48);
    swift_bridgeObjectRetain();
    uint64_t v164 = v313;
    uint64_t v207 = sub_1004CAC90(v340, v205, v179, v313, v206);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100003F10(v205, (uint64_t *)&unk_1006AFE30);
    uint64_t v208 = v347;
    swift_beginAccess();
    char v209 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v352 = *v208;
    *uint64_t v208 = 0x8000000000000000;
    sub_1001B9880(v207, v204, v209);
    *uint64_t v208 = v352;
    swift_bridgeObjectRelease();
    uint64_t v210 = v204;
    uint64_t v72 = v340;
    sub_100057E74(v210, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
    swift_endAccess();
    sub_100057E74((uint64_t)v202, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
    uint64_t v163 = v331;
    v328(v164, v331);
    uint64_t v166 = v338;
    v329(v338, v165);
    uint64_t v70 = v322;
    sub_100003F10(v322, (uint64_t *)&unk_1006AFE30);
    id v162 = v314;
    uint64_t v69 = (uint64_t)v323;
LABEL_59:
    uint64_t v140 = (char *)v339;
    unint64_t v171 = (unint64_t)v349;
    int64_t v167 = v350;
  }
  uint64_t v178 = v167 + 4;
  if (v167 + 4 >= v335)
  {
LABEL_85:
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_120;
  }
  unint64_t v176 = *((void *)v334 + v178);
  if (v176)
  {
    int64_t v177 = v167 + 4;
    goto LABEL_75;
  }
  while (1)
  {
    int64_t v177 = v178 + 1;
    if (__OFADD__(v178, 1)) {
      break;
    }
    if (v177 >= v335) {
      goto LABEL_85;
    }
    unint64_t v176 = *((void *)v334 + v177);
    ++v178;
    if (v176) {
      goto LABEL_75;
    }
  }
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  swift_once();
LABEL_125:
  uint64_t v268 = type metadata accessor for Logger();
  sub_1000606BC(v268, (uint64_t)qword_1006D1E98);
  uint64_t v269 = v279;
  swift_retain();
  uint64_t v270 = Logger.logObject.getter();
  os_log_type_t v271 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v270, v271))
  {
    unint64_t v272 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v272 = 134217984;
    uint64_t v273 = v347;
    swift_beginAccess();
    uint64_t v354 = *(void *)(*(void *)(v269 + 16) + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v270, v271, "FMMapViewDataSource: result %ld", v272, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_release();
    uint64_t v273 = v347;
  }
  swift_beginAccess();
  uint64_t v274 = *v273;
  unint64_t v275 = v286;
  swift_beginAccess();
  uint64_t v276 = *v275;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10003C81C(v274, v276);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004CAC90(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v118 = a2;
  uint64_t v115 = a5;
  uint64_t v116 = a4;
  uint64_t v119 = a1;
  uint64_t v117 = type metadata accessor for FMIPItem();
  uint64_t v120 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v105 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = type metadata accessor for FMAnnotationIdentifier();
  __chkstk_darwin(v114);
  unint64_t v113 = (uint64_t *)((char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v106 = (uint64_t)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v109 = (char *)&v102 - v12;
  __chkstk_darwin(v11);
  uint64_t v108 = (uint64_t)&v102 - v13;
  uint64_t v14 = sub_10005D034(&qword_1006B7B28);
  __chkstk_darwin(v14 - 8);
  uint64_t v104 = (char *)&v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for FMIPDevice();
  uint64_t v110 = *(void *)(v16 - 8);
  uint64_t v111 = v16;
  __chkstk_darwin(v16);
  unint64_t v112 = (char *)&v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for FMIPDeviceImageCacheRequest();
  uint64_t v107 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10005D034(&qword_1006B36B0);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for FMIPItemGroup();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v102 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for FMIPDeviceImageSize();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v102 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v35 = (char *)&v102 - v33;
  if (a3)
  {
    uint64_t v36 = v34;
    (*(void (**)(char *, void, uint64_t))(v29 + 104))((char *)&v102 - v33, enum case for FMIPDeviceImageSize.list(_:), v34);
    swift_retain();
    uint64_t v37 = v119;
    uint64_t v107 = sub_1001C2C24(a3, v119, (uint64_t)v35, 0, 0);
    swift_release();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v35, v36);
    uint64_t v38 = v113;
    uint64_t v39 = v118;
    uint64_t v40 = v37;
  }
  else
  {
    uint64_t v41 = v34;
    uint64_t v102 = v20;
    uint64_t v103 = v18;
    FMIPDevice.itemGroup.getter();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
    {
      sub_100003F10((uint64_t)v23, &qword_1006B36B0);
      (*(void (**)(char *, void, uint64_t))(v29 + 104))(v35, enum case for FMIPDeviceImageSize.list(_:), v41);
      uint64_t v42 = v119;
      (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v112, v119, v111);
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v32, v35, v41);
      uint64_t v43 = self;
      swift_retain();
      id v44 = [v43 mainScreen];
      [v44 scale];

      uint64_t v45 = v102;
      FMIPDeviceImageCacheRequest.init(device:size:scale:)();
      dispatch thunk of FMImageCache.cachedImage(for:completion:)();
      (*(void (**)(char *, uint64_t))(v107 + 8))(v45, v103);
      swift_release();
      uint64_t v107 = v121;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v35, v41);
      uint64_t v38 = v113;
      uint64_t v39 = v118;
      uint64_t v40 = v42;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v27, v23, v24);
      swift_retain();
      uint64_t v46 = FMIPItemGroup.items.getter();
      uint64_t v47 = sub_1000EE574(v46);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t))(v29 + 104))(v35, enum case for FMIPDeviceImageSize.list(_:), v41);
      uint64_t v107 = sub_1001C2C24(v47, v119, (uint64_t)v35, 0, 0);
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v35, v41);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
      uint64_t v38 = v113;
      uint64_t v39 = v118;
      uint64_t v40 = v119;
    }
  }
  uint64_t v48 = v117;
  uint64_t v49 = v120;
  uint64_t v50 = v108;
  uint64_t v51 = (uint64_t)v109;
  sub_100006AB0(v39, v108, (uint64_t *)&unk_1006AFE30);
  uint64_t v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
  if (v52(v50, 1, v48) == 1)
  {
    sub_100003F10(v50, (uint64_t *)&unk_1006AFE30);
    uint64_t v119 = 0;
  }
  else
  {
    uint64_t v53 = (uint64_t)v104;
    FMIPItem.partInfo.getter();
    uint64_t v49 = v120;
    (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v50, v48);
    uint64_t v54 = type metadata accessor for FMIPPartInfo();
    uint64_t v55 = *(void *)(v54 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54) == 1)
    {
      sub_100003F10(v53, &qword_1006B7B28);
      uint64_t v119 = 0;
    }
    else
    {
      FMIPPartInfo.symbol.getter();
      uint64_t v57 = v56;
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53, v54);
      if (v57)
      {
        swift_bridgeObjectRetain();
        NSString v58 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        uint64_t v119 = (char *)[self systemImageNamed:v58];
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v119 = 0;
      }
      uint64_t v48 = v117;
      uint64_t v49 = v120;
    }
    uint64_t v39 = v118;
  }
  sub_100006AB0(v39, v51, (uint64_t *)&unk_1006AFE30);
  if (v52(v51, 1, v48) == 1)
  {
    sub_100003F10(v51, (uint64_t *)&unk_1006AFE30);
    *uint64_t v38 = FMIPDevice.identifier.getter();
    v38[1] = v59;
    swift_storeEnumTagMultiPayload();
    uint64_t v60 = sub_1004D15A0((uint64_t)v40);
    unint64_t v62 = v61;
  }
  else
  {
    uint64_t v63 = (uint64_t)v105;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v105, v51, v48);
    uint64_t v64 = v48;
    uint64_t v65 = FMIPDevice.identifier.getter();
    uint64_t v67 = v66;
    uint64_t v68 = FMIPItem.identifier.getter();
    *uint64_t v38 = v65;
    v38[1] = v67;
    void v38[2] = v68;
    uint64_t v38[3] = v69;
    swift_storeEnumTagMultiPayload();
    uint64_t v60 = sub_1004D0E74(v63, (uint64_t)v40);
    unint64_t v62 = v70;
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v63, v64);
  }
  uint64_t v71 = v115;
  uint64_t v72 = (void *)v107;
  if (*(void *)(v115 + 16)
    && (unint64_t v73 = sub_1001B0040((uint64_t)v38), (v74 & 1) != 0)
    && (uint64_t v75 = *(void **)(*(void *)(v71 + 56) + 8 * v73),
        type metadata accessor for FMDeviceAnnotation(),
        (uint64_t v76 = swift_dynamicCastClass()) != 0))
  {
    uint64_t v77 = v76;
    id v78 = v75;
    unint64_t v79 = (void *)FMIPLocation.location.getter();
    [v79 coordinate];
    double v81 = v80;
    double v83 = v82;

    char v84 = (void *)FMIPLocation.location.getter();
    [v84 horizontalAccuracy];
    double v86 = v85;

    BOOL v87 = v119;
    sub_1003E9B34((uint64_t)v40, v39, v72, v119, v60, v62, v81, v83, v86);

    sub_100083358(v60, v62);
  }
  else
  {
    uint64_t v88 = (void *)FMIPLocation.location.getter();
    [v88 coordinate];
    double v90 = v89;
    double v92 = v91;

    uint64_t v93 = (void *)FMIPLocation.location.getter();
    [v93 horizontalAccuracy];
    double v95 = v94;

    uint64_t v96 = v112;
    (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v112, v40, v111);
    uint64_t v97 = v106;
    sub_100006AB0(v39, v106, (uint64_t *)&unk_1006AFE30);
    id v98 = objc_allocWithZone((Class)type metadata accessor for FMDeviceAnnotation());
    uint64_t v99 = (uint64_t)v96;
    id v100 = v119;
    uint64_t v77 = sub_1003E930C(v99, v97, v72, v119, v60, v62, v90, v92, v95);
  }
  sub_100057E74((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
  return v77;
}

uint64_t sub_1004CB878(uint64_t a1)
{
  uint64_t v95 = a1;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v89 = *(void *)(v2 - 8);
  uint64_t v90 = v2;
  __chkstk_darwin(v2);
  BOOL v87 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for DispatchQoS();
  uint64_t v86 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  double v85 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10005D034((uint64_t *)&unk_1006AF710);
  __chkstk_darwin(v5 - 8);
  double v92 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10005D034(&qword_1006AF740);
  __chkstk_darwin(v7 - 8);
  double v91 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMFFriend();
  uint64_t v96 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  char v84 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  double v83 = (char *)&v79 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v79 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v93 = (char *)&v79 - v18;
  uint64_t v82 = v19;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v79 - v20;
  uint64_t v22 = type metadata accessor for FMSelectedSection();
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = (char *)&v79 - v27;
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v79 - v29;
  uint64_t v97 = swift_allocObject();
  *(void *)(v97 + 16) = &_swiftEmptyDictionarySingleton;
  uint64_t v94 = v1;
  uint64_t v31 = *(void *)(*(void *)(v1 + 16) + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100057A34(v31, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_100057A34((uint64_t)v30, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v32 = v96;
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v96 + 32);
    uint64_t v81 = v96 + 32;
    double v80 = v33;
    v33(v21, v28, v9);
    uint64_t v34 = v95;
    uint64_t v35 = *(void *)(v95 + 16);
    if (v35)
    {
      uint64_t v99 = v21;
      unint64_t v79 = v30;
      uint64_t v36 = v32 + 16;
      id v98 = *(void (**)(char *, unint64_t, uint64_t))(v32 + 16);
      unint64_t v37 = v95 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
      uint64_t v38 = (void (**)(char *, uint64_t))(v32 + 8);
      uint64_t v39 = *(void *)(v36 + 56);
      swift_bridgeObjectRetain();
      while (1)
      {
        uint64_t v40 = v9;
        v98(v16, v37, v9);
        uint64_t v41 = FMFFriend.identifier.getter();
        uint64_t v43 = v42;
        if (v41 == FMFFriend.identifier.getter() && v43 == v44) {
          break;
        }
        char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v45) {
          goto LABEL_18;
        }
        uint64_t v9 = v40;
        (*v38)(v16, v40);
        v37 += v39;
        if (!--v35)
        {
          uint64_t v46 = 1;
          uint64_t v32 = v96;
          uint64_t v30 = v79;
          uint64_t v34 = v95;
          uint64_t v21 = v99;
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_18:
      uint64_t v52 = (uint64_t)v91;
      uint64_t v9 = v40;
      v80(v91, v16, v40);
      uint64_t v46 = 0;
      uint64_t v32 = v96;
      uint64_t v30 = v79;
      uint64_t v34 = v95;
      uint64_t v21 = v99;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v46 = 1;
LABEL_16:
      uint64_t v52 = (uint64_t)v91;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v52, v46, 1, v9);
    swift_bridgeObjectRelease();
    int v53 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v52, 1, v9);
    uint64_t v54 = (uint64_t)v92;
    if (v53 == 1)
    {
      sub_100003F10(v52, &qword_1006AF740);
LABEL_26:
      *(unsigned char *)(v94 + 58) = 0;
      sub_100044D4C(v34);
      sub_100057E74((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v21, v9);
      return swift_release();
    }
    v80(v93, (char *)v52, v9);
    FMFFriend.location.getter();
    uint64_t v55 = type metadata accessor for FMFLocation();
    uint64_t v56 = *(void *)(v55 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55) == 1)
    {
      sub_100003F10(v54, (uint64_t *)&unk_1006AF710);
LABEL_25:
      (*(void (**)(char *, uint64_t))(v32 + 8))(v93, v9);
      goto LABEL_26;
    }
    uint64_t v57 = FMFLocation.location.getter();
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v54, v55);
    id v98 = (void (*)(char *, unint64_t, uint64_t))v57;
    if (!v57) {
      goto LABEL_25;
    }
    uint64_t v58 = v94;
    double v92 = *(char **)(v94 + 88);
    uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
    uint64_t v60 = v83;
    v59(v83, v93, v9);
    unint64_t v61 = v84;
    v59(v84, v21, v9);
    uint64_t v62 = *(unsigned __int8 *)(v32 + 80);
    uint64_t v63 = (v62 + 24) & ~v62;
    unint64_t v79 = v30;
    unint64_t v64 = (v82 + 7 + v63) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v65 = (v64 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v66 = (v62 + v65 + 8) & ~v62;
    uint64_t v99 = v21;
    unint64_t v67 = (v82 + 7 + v66) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v68 = swift_allocObject();
    *(void *)(v68 + 16) = v58;
    uint64_t v69 = v68 + v63;
    unint64_t v70 = (void (*)(uint64_t, char *, uint64_t))v80;
    v80((char *)v69, v60, v9);
    uint64_t v71 = v98;
    *(void *)(v68 + v64) = v98;
    *(void *)(v68 + v65) = v95;
    v70(v68 + v66, v61, v9);
    *(void *)(v68 + v67) = v97;
    uint64_t v104 = sub_1004DE1BC;
    uint64_t v105 = v68;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    unint64_t v101 = 1107296256;
    uint64_t v102 = sub_10003C410;
    uint64_t v103 = &unk_100642070;
    uint64_t v72 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t v73 = v71;
    swift_retain();
    char v74 = v85;
    static DispatchQoS.unspecified.getter();
    uint64_t v106 = _swiftEmptyArrayStorage;
    sub_100045D0C((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10005D034((uint64_t *)&unk_1006AE4B0);
    sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
    uint64_t v75 = v87;
    uint64_t v76 = v90;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v72);

    (*(void (**)(char *, uint64_t))(v89 + 8))(v75, v76);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v74, v88);
    uint64_t v77 = *(void (**)(char *, uint64_t))(v96 + 8);
    v77(v93, v9);
    sub_100057E74((uint64_t)v79, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    v77(v99, v9);
    swift_release();
  }
  else
  {
    sub_100057E74((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v47 = type metadata accessor for Logger();
    sub_1000606BC(v47, (uint64_t)qword_1006D1E98);
    sub_100057A34((uint64_t)v30, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v50 = 136315138;
      uint64_t v106 = v51;
      uint64_t aBlock = 0;
      unint64_t v101 = 0xE000000000000000;
      _print_unlocked<A, B>(_:_:)();
      uint64_t aBlock = sub_1000606F4(aBlock, v101, (uint64_t *)&v106);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100057E74((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "FMMapViewDataSource: cannot fetch person value from selected section %s", v50, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_100057E74((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    }
    sub_100057E74((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  }
  return swift_release();
}

uint64_t sub_1004CC4F4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v108 = a5;
  uint64_t v104 = a3;
  uint64_t v9 = type metadata accessor for FMFFriend();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v109 = v9;
  uint64_t v110 = v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = type metadata accessor for FMFLocationSource();
  uint64_t v13 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v97 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_10005D034((uint64_t *)&unk_1006C0B30);
  __chkstk_darwin(v99);
  uint64_t v107 = (uint64_t *)((char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_10005D034((uint64_t *)&unk_1006AF710);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v102 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v92 - v19;
  uint64_t v21 = sub_10005D034(&qword_1006B0B58);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v98 = (uint64_t)&v92 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v105 = (void (**)(char *, uint64_t))((char *)&v92 - v25);
  __chkstk_darwin(v24);
  uint64_t v106 = (uint64_t)&v92 - v26;
  uint64_t v27 = type metadata accessor for FMAnnotationIdentifier();
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v103 = (uint64_t *)((char *)&v92 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v28);
  uint64_t v31 = (uint64_t *)((char *)&v92 - v30);
  *uint64_t v31 = FMFFriend.identifier.getter();
  v31[1] = v32;
  swift_storeEnumTagMultiPayload();
  uint64_t v33 = *(void *)(a1 + 48);
  if (!*(void *)(v33 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v34 = sub_1001B0040((uint64_t)v31);
  if ((v35 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    sub_100057E74((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
LABEL_8:
    char v52 = 0;
    uint64_t v53 = v109;
    goto LABEL_9;
  }
  uint64_t v96 = v13;
  id v36 = *(id *)(*(void *)(v33 + 56) + 8 * v34);
  swift_bridgeObjectRelease();
  sub_100057E74((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
  type metadata accessor for FMPersonAnnotation();
  unint64_t v37 = (void *)swift_dynamicCastClass();
  if (!v37)
  {

    goto LABEL_8;
  }
  uint64_t v38 = v37;
  id v94 = v36;
  uint64_t v95 = a6;
  [v37 coordinate];
  double v40 = v39;
  [v38 coordinate];
  id v93 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v40 longitude:v41];
  [v93 distanceFromLocation:v104];
  double v43 = v42;
  FMFFriend.location.getter();
  uint64_t v44 = type metadata accessor for FMFLocation();
  uint64_t v45 = *(void *)(v44 - 8);
  int v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48))(v20, 1, v44);
  uint64_t v100 = a4;
  if (v46 == 1)
  {
    sub_100003F10((uint64_t)v20, (uint64_t *)&unk_1006AF710);
    uint64_t v47 = v96;
    uint64_t v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v96 + 56);
    uint64_t v49 = v106;
    uint64_t v50 = v106;
    uint64_t v51 = 1;
  }
  else
  {
    uint64_t v49 = v106;
    FMFLocation.locationSource.getter();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v20, v44);
    uint64_t v47 = v96;
    uint64_t v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v96 + 56);
    uint64_t v50 = v49;
    uint64_t v51 = 0;
  }
  uint64_t v79 = v101;
  v48(v50, v51, 1, v101);
  double v80 = v105;
  (*(void (**)(void (**)(char *, uint64_t), void, uint64_t))(v47 + 104))(v105, enum case for FMFLocationSource.secureLive(_:), v79);
  v48((uint64_t)v80, 0, 1, v79);
  uint64_t v81 = (void (*)(void, void, void))v107;
  uint64_t v82 = (uint64_t)v107 + *(int *)(v99 + 48);
  sub_100006AB0(v49, (uint64_t)v107, &qword_1006B0B58);
  double v83 = v81;
  sub_100006AB0((uint64_t)v80, v82, &qword_1006B0B58);
  char v84 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
  if (v84((uint64_t)v81, 1, v79) == 1)
  {
    sub_100003F10((uint64_t)v80, &qword_1006B0B58);
    double v83 = (void (*)(void, void, void))v107;
    sub_100003F10(v49, &qword_1006B0B58);
    int v85 = v84(v82, 1, v79);
    a6 = v95;
    a4 = v100;
    if (v85 == 1)
    {
      sub_100003F10((uint64_t)v83, &qword_1006B0B58);
      goto LABEL_32;
    }
    goto LABEL_30;
  }
  uint64_t v86 = v98;
  sub_100006AB0((uint64_t)v81, v98, &qword_1006B0B58);
  int v87 = v84(v82, 1, v79);
  a4 = v100;
  if (v87 == 1)
  {
    sub_100003F10((uint64_t)v105, &qword_1006B0B58);
    sub_100003F10(v106, &qword_1006B0B58);
    (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v86, v79);
    a6 = v95;
LABEL_30:
    sub_100003F10((uint64_t)v83, (uint64_t *)&unk_1006C0B30);
LABEL_36:

    uint64_t v53 = v109;
    goto LABEL_37;
  }
  uint64_t v88 = v96;
  uint64_t v89 = v97;
  (*(void (**)(char *, uint64_t, uint64_t))(v96 + 32))(v97, v82, v79);
  sub_100045D0C((unint64_t *)&unk_1006C0B40, (void (*)(uint64_t))&type metadata accessor for FMFLocationSource);
  LODWORD(v101) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v90 = *(void (**)(char *, uint64_t))(v88 + 8);
  v90(v89, v79);
  sub_100003F10((uint64_t)v105, &qword_1006B0B58);
  sub_100003F10(v106, &qword_1006B0B58);
  v90((char *)v86, v79);
  sub_100003F10((uint64_t)v83, &qword_1006B0B58);
  a6 = v95;
  if ((v101 & 1) == 0) {
    goto LABEL_36;
  }
LABEL_32:
  id v91 = v94;
  if (qword_1006AE2D8 != -1) {
    swift_once();
  }

  uint64_t v53 = v109;
  if (v43 < 50000.0)
  {
    char v52 = 1;
    goto LABEL_9;
  }
LABEL_37:
  char v52 = 0;
LABEL_9:
  uint64_t v54 = (uint64_t *)(a6 + 16);
  *(unsigned char *)(a1 + 57) = v52;
  *(unsigned char *)(a1 + 58) = 1;
  uint64_t v55 = *(void *)(a4 + 16);
  if (v55)
  {
    uint64_t v56 = *(void **)(v110 + 16);
    uint64_t v57 = a4 + ((*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80));
    uint64_t v106 = *(void *)(v110 + 72);
    uint64_t v107 = v56;
    v110 += 16;
    uint64_t v105 = (void (**)(char *, uint64_t))(v110 - 8);
    uint64_t v100 = a4;
    swift_bridgeObjectRetain();
    uint64_t v58 = v103;
    while (1)
    {
      ((void (*)(char *, uint64_t, uint64_t))v107)(v12, v57, v53);
      uint64_t v63 = FMFFriend.identifier.getter();
      uint64_t v65 = v64;
      if (v63 == FMFFriend.identifier.getter() && v65 == v66)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v67 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v67 & 1) == 0)
        {
          uint64_t v68 = v27;
          uint64_t v69 = a1;
          uint64_t v70 = (uint64_t)v102;
          FMFFriend.location.getter();
          uint64_t v71 = type metadata accessor for FMFLocation();
          uint64_t v72 = *(void *)(v71 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71) == 1)
          {
            sub_100003F10(v70, (uint64_t *)&unk_1006AF710);
            a1 = v69;
            uint64_t v27 = v68;
            uint64_t v58 = v103;
          }
          else
          {
            unint64_t v73 = (void *)FMFLocation.location.getter();
            (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v70, v71);
            a1 = v69;
            uint64_t v27 = v68;
            uint64_t v58 = v103;
            if (v73)
            {
              uint64_t *v58 = FMFFriend.identifier.getter();
              v58[1] = v74;
              swift_storeEnumTagMultiPayload();
              uint64_t v75 = *(void *)(v69 + 48);
              swift_bridgeObjectRetain();
              uint64_t v101 = sub_1004CD0E4((uint64_t)v12, v73, v75);
              swift_bridgeObjectRelease();
              swift_beginAccess();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v111 = *v54;
              *uint64_t v54 = 0x8000000000000000;
              sub_1001B9880(v101, (uint64_t)v58, isUniquelyReferenced_nonNull_native);
              *uint64_t v54 = v111;
              swift_bridgeObjectRelease();
              sub_100057E74((uint64_t)v58, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
              swift_endAccess();
            }
          }
          goto LABEL_13;
        }
      }
      uint64_t *v58 = FMFFriend.identifier.getter();
      v58[1] = v59;
      swift_storeEnumTagMultiPayload();
      uint64_t v60 = *(void *)(a1 + 48);
      swift_bridgeObjectRetain();
      uint64_t v61 = sub_1004CD0E4((uint64_t)v12, v104, v60);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      char v62 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v111 = *v54;
      *uint64_t v54 = 0x8000000000000000;
      sub_1001B9880(v61, (uint64_t)v58, v62);
      *uint64_t v54 = v111;
      swift_bridgeObjectRelease();
      sub_100057E74((uint64_t)v58, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
      swift_endAccess();
LABEL_13:
      uint64_t v53 = v109;
      (*v105)(v12, v109);
      v57 += v106;
      if (!--v55)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_beginAccess();
  uint64_t v77 = swift_bridgeObjectRetain();
  sub_10003C81C(v77, (uint64_t)_swiftEmptyArrayStorage);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004CD0E4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10005D034(&qword_1006AF740);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMAnnotationIdentifier();
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_retain();
  uint64_t v12 = sub_100062058(a1, 0);
  swift_release();
  *uint64_t v11 = FMFFriend.identifier.getter();
  v11[1] = v13;
  swift_storeEnumTagMultiPayload();
  if (!*(void *)(a3 + 16) || (unint64_t v14 = sub_1001B0040((uint64_t)v11), (v15 & 1) == 0))
  {
    sub_100057E74((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
LABEL_6:
    [a2 coordinate];
    double v28 = v27;
    double v30 = v29;
    [a2 horizontalAccuracy];
    double v32 = v31;
    uint64_t v33 = type metadata accessor for FMFFriend();
    uint64_t v34 = *(void *)(v33 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v8, a1, v33);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v8, 0, 1, v33);
    id v35 = objc_allocWithZone((Class)type metadata accessor for FMPersonAnnotation());
    uint64_t v18 = sub_10034A4C0((uint64_t)v8, v12, 0, v28, v30, v32);

    return v18;
  }
  id v16 = *(id *)(*(void *)(a3 + 56) + 8 * v14);
  sub_100057E74((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
  type metadata accessor for FMPersonAnnotation();
  uint64_t v17 = swift_dynamicCastClass();
  if (!v17)
  {

    goto LABEL_6;
  }
  uint64_t v18 = v17;
  [a2 coordinate];
  double v20 = v19;
  double v22 = v21;
  [a2 horizontalAccuracy];
  double v24 = v23;
  uint64_t v25 = type metadata accessor for FMFFriend();
  uint64_t v26 = *(void *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v8, a1, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v8, 0, 1, v25);
  sub_100348D00((uint64_t)v8, v12, 0, v20, v22, v24);

  sub_100003F10((uint64_t)v8, &qword_1006AF740);
  return v18;
}

uint64_t sub_1004CD44C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for DispatchQoS();
  uint64_t v26 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = &_swiftEmptyDictionarySingleton;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = &_swiftEmptyDictionarySingleton;
  id v11 = [*(id *)(v1 + 40) traitCollection];
  id v12 = [v11 userInterfaceStyle];

  swift_retain();
  LOBYTE(v11) = FMIPManager.isInitialized.getter();
  swift_release();
  if (v11)
  {
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a1;
    *(void *)(v13 + 24) = v2;
    *(unsigned char *)(v13 + 32) = v12 == (id)2;
    *(void *)(v13 + 40) = v9;
    *(void *)(v13 + 48) = v10;
    uint64_t v34 = sub_1004DE064;
    uint64_t v35 = v13;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v31 = 1107296256;
    double v32 = sub_10003C410;
    uint64_t v33 = &unk_100641FD0;
    unint64_t v14 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    static DispatchQoS.unspecified.getter();
    double v29 = _swiftEmptyArrayStorage;
    sub_100045D0C((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10005D034((uint64_t *)&unk_1006AE4B0);
    sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v14);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v28);
    swift_release();
  }
  else
  {
    char v15 = v8;
    v25[0] = v10;
    v25[1] = v9;
    uint64_t v16 = v4;
    uint64_t v17 = v26;
    uint64_t v18 = v27;
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_1000606BC(v19, (uint64_t)qword_1006D1E98);
    double v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      double v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "FMMapViewDataSource: devicesProvider is not initialized hidding items", v22, 2u);
      swift_slowDealloc();
    }

    uint64_t v34 = sub_1004DD840;
    uint64_t v35 = v2;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v31 = 1107296256;
    double v32 = sub_10003C410;
    uint64_t v33 = &unk_100641F80;
    double v23 = _Block_copy(&aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    double v29 = _swiftEmptyArrayStorage;
    sub_100045D0C((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10005D034((uint64_t *)&unk_1006AE4B0);
    sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v23);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v16);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v28);
    swift_release();
  }
  swift_release();
  return swift_release();
}

uint64_t sub_1004CDA28(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v118 = a2;
  uint64_t v110 = type metadata accessor for DispatchQoS();
  uint64_t v96 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v109 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v95 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v107 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FMAnnotationIdentifier();
  uint64_t v12 = __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v116 = (uint64_t *)((char *)&v94 - v15);
  uint64_t v16 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = (void (**)(void, void))type metadata accessor for FMIPLocation();
  uint64_t v19 = (uint64_t)*(v103 - 1);
  __chkstk_darwin(v103);
  uint64_t v102 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for FMIPItem();
  uint64_t v21 = __chkstk_darwin(a1);
  double v24 = (char *)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = (uint64_t *)(a4 + 16);
  uint64_t v25 = v11;
  uint64_t v26 = (void *)(a5 + 16);
  uint64_t v27 = *(void *)(v21 + 16);
  uint64_t v111 = v14;
  if (v27)
  {
    uint64_t v104 = v26;
    double v29 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
    uint64_t v28 = v22 + 16;
    unint64_t v30 = v21 + ((*(unsigned __int8 *)(v28 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 64));
    int64_t v114 = *(void *)(v28 + 56);
    uint64_t v115 = v29;
    uint64_t v119 = v28;
    unint64_t v113 = (void (**)(char *, uint64_t))(v28 - 8);
    uint64_t v105 = (void *)(v19 + 48);
    uint64_t v99 = (void (**)(uint64_t, char *, void))(v19 + 32);
    uint64_t v100 = (void (**)(char *, void))(v19 + 8);
    uint64_t v94 = v21;
    swift_bridgeObjectRetain();
    int v98 = a3 & 1;
    uint64_t v31 = v103;
    uint64_t v32 = (uint64_t)v102;
    uint64_t v33 = v112;
    uint64_t v101 = v18;
    do
    {
      v115(v24, v30, v33);
      FMIPItem.groupIdentifier.getter();
      uint64_t v35 = v34;
      swift_bridgeObjectRelease();
      if (v35)
      {
        (*v113)(v24, v33);
      }
      else
      {
        FMIPItem.location.getter();
        if (((unsigned int (*)(char *, uint64_t, void (**)(void, void)))*v105)(v18, 1, v31) == 1)
        {
          uint64_t v33 = v112;
          (*v113)(v24, v112);
          sub_100003F10((uint64_t)v18, (uint64_t *)&unk_1006B2AE0);
        }
        else
        {
          (*v99)(v32, v18, v31);
          uint64_t v36 = *(void *)(v118 + 48);
          swift_bridgeObjectRetain();
          uint64_t v37 = (char *)sub_1004D0154((uint64_t)v24, v32, v36, v98);
          swift_bridgeObjectRelease();
          unint64_t v38 = *(void *)&v37[OBJC_IVAR____TtC6FindMy12FMAnnotation_fmClusterIdentifier + 8];
          if (v38)
          {
            uint64_t v39 = *(void *)&v37[OBJC_IVAR____TtC6FindMy12FMAnnotation_fmClusterIdentifier];
            double v40 = v104;
            swift_beginAccess();
            uint64_t v41 = *(void *)(*v40 + 16);
            sub_100083344(v39, v38);
            if (v41 && (sub_1001B00AC(v39, v38), (v42 & 1) != 0))
            {
              swift_endAccess();
            }
            else
            {
              swift_endAccess();
              double v43 = v104;
              swift_beginAccess();
              sub_100083344(v39, v38);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v123 = *v43;
              uint64_t *v43 = 0x8000000000000000;
              sub_1001B970C((uint64_t)_swiftEmptyArrayStorage, v39, v38, isUniquelyReferenced_nonNull_native);
              uint64_t *v43 = v123;
              swift_bridgeObjectRelease();
              sub_100083358(v39, v38);
              swift_endAccess();
            }
            swift_beginAccess();
            sub_100083344(v39, v38);
            uint64_t v45 = sub_1004C19DC(aBlock, v39, v38);
            if (*v46)
            {
              uint64_t v47 = v46;
              uint64_t v97 = (void (*)(uint64_t *, void))v45;
              uint64_t v48 = v37;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)((*v47 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v47 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
              v97(aBlock, 0);
              swift_endAccess();
              sub_100083358(v39, v38);

              sub_100083358(v39, v38);
            }
            else
            {
              ((void (*)(uint64_t *, void))v45)(aBlock, 0);
              swift_endAccess();
              sub_100083358(v39, v38);
              sub_100083358(v39, v38);
            }
          }
          else
          {
            uint64_t v49 = FMIPItem.identifier.getter();
            uint64_t v50 = (uint64_t)v116;
            uint64_t *v116 = v49;
            *(void *)(v50 + 8) = v51;
            swift_storeEnumTagMultiPayload();
            char v52 = v117;
            swift_beginAccess();
            uint64_t v53 = v37;
            char v54 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v123 = *v52;
            *char v52 = 0x8000000000000000;
            sub_1001B9880((uint64_t)v53, v50, v54);
            *char v52 = v123;
            swift_bridgeObjectRelease();
            sub_100057E74(v50, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
            swift_endAccess();
          }
          uint64_t v32 = (uint64_t)v102;
          uint64_t v31 = v103;
          (*v100)(v102, v103);
          uint64_t v33 = v112;
          (*v113)(v24, v112);
          uint64_t v18 = v101;
        }
      }
      v30 += v114;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
    unint64_t v14 = v111;
    uint64_t v26 = v104;
  }
  swift_beginAccess();
  uint64_t v55 = (void (*)(char *, unint64_t, uint64_t))*v26;
  uint64_t v56 = *(void *)(*v26 + 64);
  unint64_t v113 = (void (**)(char *, uint64_t))(*v26 + 64);
  uint64_t v57 = 1 << *((unsigned char *)v55 + 32);
  uint64_t v58 = -1;
  if (v57 < 64) {
    uint64_t v58 = ~(-1 << v57);
  }
  unint64_t v59 = v58 & v56;
  int64_t v114 = (unint64_t)(v57 + 63) >> 6;
  uint64_t v105 = v121;
  uint64_t v104 = (void *)(v96 + 8);
  uint64_t v103 = (void (**)(void, void))(v95 + 8);
  uint64_t v115 = v55;
  swift_bridgeObjectRetain();
  int64_t v60 = 0;
  uint64_t v106 = v25;
  while (v59)
  {
    uint64_t v119 = (v59 - 1) & v59;
    unint64_t v66 = __clz(__rbit64(v59)) | (v60 << 6);
LABEL_39:
    uint64_t v70 = (uint64_t *)(*((void *)v115 + 6) + 16 * v66);
    uint64_t v72 = *v70;
    unint64_t v71 = v70[1];
    unint64_t v73 = *(void *)(*((void *)v115 + 7) + 8 * v66);
    if ((v73 & 0x8000000000000000) != 0 || (v73 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain_n();
      sub_100083344(v72, v71);
      uint64_t v74 = (uint64_t)sub_1004AF378(v73);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v74 = v73 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n();
      sub_100083344(v72, v71);
    }
    aBlock[0] = v74;
    sub_1004D6A3C(aBlock);
    sub_100083358(v72, v71);
    swift_bridgeObjectRelease();
    uint64_t v75 = aBlock[0];
    uint64_t v76 = *(void *)(v118 + 48);
    id v77 = objc_allocWithZone((Class)type metadata accessor for FMClusterAnnotation());
    swift_bridgeObjectRetain();
    unint64_t v78 = swift_retain();
    sub_1003FA2A0(v78);
    double v80 = v79;
    *(&v94 - 2) = __chkstk_darwin(v79);
    OS_dispatch_queue.sync<A>(execute:)();
    if (*(void *)(v76 + 16) && (unint64_t v81 = sub_1001B0040((uint64_t)v14), (v82 & 1) != 0))
    {
      id v83 = *(id *)(*(void *)(v76 + 56) + 8 * v81);
      sub_100057E74((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
      uint64_t v84 = swift_dynamicCastClass();
      if (v84)
      {
        int v85 = (void *)v84;
        uint64_t v112 = *(void *)(v84 + OBJC_IVAR____TtC6FindMy19FMClusterAnnotation_updateQueue);
        uint64_t v86 = v107;
        static DispatchWorkItemFlags.barrier.getter();
        uint64_t v87 = swift_allocObject();
        *(void *)(v87 + 16) = v75;
        *(void *)(v87 + 24) = v85;
        v121[2] = sub_1003FAE34;
        v121[3] = v87;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        v121[0] = sub_10003C410;
        v121[1] = &unk_100642020;
        uint64_t v88 = _Block_copy(aBlock);
        swift_retain();
        id v89 = v83;
        uint64_t v90 = v109;
        static DispatchQoS.unspecified.getter();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v88);
        ((void (*)(char *, uint64_t))*v104)(v90, v110);
        id v91 = v86;
        unint64_t v14 = v111;
        (*v103)(v91, v108);
        swift_bridgeObjectRelease();
        swift_release();

        uint64_t v61 = swift_release();
        double v80 = v85;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    else
    {
      sub_100057E74((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
      swift_bridgeObjectRelease();
      uint64_t v61 = swift_release();
    }
    __chkstk_darwin(v61);
    *(&v94 - 2) = (uint64_t)v80;
    uint64_t v62 = (uint64_t)v116;
    OS_dispatch_queue.sync<A>(execute:)();
    uint64_t v63 = v117;
    swift_beginAccess();
    id v64 = v80;
    char v65 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v122 = *v63;
    uint64_t *v63 = 0x8000000000000000;
    sub_1001B9880((uint64_t)v64, v62, v65);
    uint64_t *v63 = v122;
    swift_bridgeObjectRelease();
    sub_100057E74(v62, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
    swift_endAccess();

    unint64_t v59 = v119;
  }
  if (__OFADD__(v60++, 1))
  {
    __break(1u);
    goto LABEL_54;
  }
  if (v60 >= v114) {
    goto LABEL_52;
  }
  unint64_t v68 = (unint64_t)v113[v60];
  if (v68)
  {
LABEL_38:
    uint64_t v119 = (v68 - 1) & v68;
    unint64_t v66 = __clz(__rbit64(v68)) + (v60 << 6);
    goto LABEL_39;
  }
  int64_t v69 = v60 + 1;
  if (v60 + 1 >= v114) {
    goto LABEL_52;
  }
  unint64_t v68 = (unint64_t)v113[v69];
  if (v68) {
    goto LABEL_37;
  }
  int64_t v69 = v60 + 2;
  if (v60 + 2 >= v114) {
    goto LABEL_52;
  }
  unint64_t v68 = (unint64_t)v113[v69];
  if (v68) {
    goto LABEL_37;
  }
  int64_t v69 = v60 + 3;
  if (v60 + 3 >= v114)
  {
LABEL_52:
    swift_release();
    swift_beginAccess();
    uint64_t v92 = swift_bridgeObjectRetain();
    sub_10003C81C(v92, (uint64_t)_swiftEmptyArrayStorage);
    return swift_bridgeObjectRelease();
  }
  unint64_t v68 = (unint64_t)v113[v69];
  if (v68)
  {
LABEL_37:
    int64_t v60 = v69;
    goto LABEL_38;
  }
  while (1)
  {
    int64_t v60 = v69 + 1;
    if (__OFADD__(v69, 1)) {
      break;
    }
    if (v60 >= v114) {
      goto LABEL_52;
    }
    unint64_t v68 = (unint64_t)v113[v60];
    ++v69;
    if (v68) {
      goto LABEL_38;
    }
  }
LABEL_54:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1004CE81C(uint64_t a1)
{
  uint64_t v117 = a1;
  uint64_t v107 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v106 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v104 = (char *)&v92 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for DispatchQoS();
  uint64_t v103 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v102 = (char *)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006B1760);
  __chkstk_darwin(v4 - 8);
  unint64_t v113 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = type metadata accessor for UUID();
  uint64_t v101 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v97 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  __chkstk_darwin(v7 - 8);
  uint64_t v111 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  __chkstk_darwin(v9 - 8);
  uint64_t v112 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FMIPItem();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v115 = v11;
  uint64_t v116 = v12;
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v110 = (char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v100 = (char *)&v92 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v92 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  int64_t v114 = (char *)&v92 - v21;
  __chkstk_darwin(v20);
  uint64_t v119 = (char *)&v92 - v22;
  uint64_t v23 = type metadata accessor for FMSelectedSection();
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v92 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v92 - v27;
  uint64_t v29 = *(void *)(v1 + 16);
  uint64_t v30 = *(void *)(v29 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100057A34(v30, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  id v31 = [*(id *)(v1 + 40) traitCollection];
  id v32 = [v31 userInterfaceStyle];

  sub_100057A34((uint64_t)v28, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload() - 3 >= 2)
  {
    sub_100057E74((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    return sub_100057E74((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  }
  uint64_t v93 = v29;
  id v94 = v32;
  uint64_t v95 = v13;
  uint64_t v96 = v28;
  uint64_t v109 = v1;
  uint64_t v33 = v115;
  uint64_t v34 = v116;
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v116 + 32);
  uint64_t v36 = v119;
  uint64_t v99 = v116 + 32;
  v35(v119, v26, v115);
  uint64_t v37 = v117;
  uint64_t v38 = *(void *)(v117 + 16);
  int v98 = v35;
  if (v38)
  {
    double v40 = *(void (**)(char *, unint64_t, uint64_t))(v34 + 16);
    uint64_t v39 = v34 + 16;
    uint64_t v118 = v40;
    unint64_t v41 = v117 + ((*(unsigned __int8 *)(v39 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 64));
    uint64_t v42 = *(void *)(v39 + 56);
    swift_bridgeObjectRetain();
    while (1)
    {
      v118(v19, v41, v33);
      uint64_t v43 = FMIPItem.identifier.getter();
      uint64_t v45 = v44;
      if (v43 == FMIPItem.identifier.getter() && v45 == v46) {
        break;
      }
      char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v47) {
        goto LABEL_13;
      }
      (*(void (**)(char *, uint64_t))(v39 - 8))(v19, v33);
      v41 += v42;
      if (!--v38)
      {
        uint64_t v48 = 1;
        uint64_t v34 = v116;
        uint64_t v37 = v117;
        uint64_t v49 = v119;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_13:
    uint64_t v53 = (uint64_t)v112;
    v98(v112, v19, v33);
    uint64_t v48 = 0;
    uint64_t v34 = v116;
    uint64_t v37 = v117;
    uint64_t v49 = v119;
    uint64_t v51 = (uint64_t)v113;
    char v52 = v114;
  }
  else
  {
    uint64_t v49 = v36;
    swift_bridgeObjectRetain();
    uint64_t v48 = 1;
LABEL_11:
    uint64_t v51 = (uint64_t)v113;
    char v52 = v114;
    uint64_t v53 = (uint64_t)v112;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v53, v48, 1, v33);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v53, 1, v33) == 1)
  {
    uint64_t v54 = v33;
    sub_100003F10(v53, (uint64_t *)&unk_1006AFE30);
LABEL_18:
    *(unsigned char *)(v109 + 58) = 0;
    sub_1004CD44C(v37);
    sub_100057E74((uint64_t)v96, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v49, v54);
  }
  v98(v52, (char *)v53, v33);
  uint64_t v55 = (uint64_t)v111;
  FMIPItem.location.getter();
  uint64_t v56 = type metadata accessor for FMIPLocation();
  int v57 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48))(v55, 1, v56);
  sub_100003F10(v55, (uint64_t *)&unk_1006B2AE0);
  if (v57 == 1)
  {
    uint64_t v54 = v33;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v52, v33);
    goto LABEL_18;
  }
  *(unsigned char *)(v109 + 58) = 1;
  uint64_t v58 = v93;
  uint64_t v59 = *(void *)(v93 + 48);
  swift_retain();
  FMIPItem.identifier.getter();
  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  uint64_t v60 = v101;
  uint64_t v61 = v108;
  uint64_t v62 = v52;
  uint64_t v63 = v49;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v51, 1, v108) == 1)
  {
    sub_100003F10(v51, (uint64_t *)&unk_1006B1760);
    id v64 = (char *)_swiftEmptyArrayStorage;
  }
  else
  {
    char v65 = v97;
    uint64_t v66 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 32))(v97, v51, v61);
    uint64_t v67 = *(void *)(*(void *)(v58 + 24) + 64);
    __chkstk_darwin(v66);
    uint64_t v68 = v60;
    *(&v92 - 2) = (uint64_t)v65;
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_100496E44(sub_1000F0764, (uint64_t)(&v92 - 4), v67);
    swift_retain();
    uint64_t v70 = sub_1000EC2D4(v69, v59);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v71 = sub_1000EC5F4((uint64_t)v70);
    swift_bridgeObjectRelease();
    id v64 = (char *)sub_1004AE930(v71);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v65, v108);
  }
  uint64_t v72 = v115;
  unint64_t v73 = v110;
  uint64_t v74 = v95;
  uint64_t v112 = v64;
  LODWORD(v113) = v94 == (id)2;
  swift_release();
  uint64_t v118 = *(void (**)(char *, unint64_t, uint64_t))(v109 + 88);
  uint64_t v75 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
  uint64_t v76 = v100;
  v75(v100, v62, v72);
  v75(v73, v63, v72);
  uint64_t v77 = *(unsigned __int8 *)(v34 + 80);
  uint64_t v78 = (v77 + 16) & ~v77;
  uint64_t v79 = v74;
  unint64_t v80 = (v74 + v78 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v81 = (v80 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v82 = (v81 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v83 = (v77 + v82 + 8) & ~v77;
  uint64_t v84 = v83 + v79;
  uint64_t v85 = swift_allocObject();
  uint64_t v86 = (void (*)(uint64_t, char *, uint64_t))v98;
  v98((char *)(v85 + v78), v76, v72);
  *(void *)(v85 + v80) = v112;
  *(void *)(v85 + v81) = v109;
  *(void *)(v85 + v82) = v117;
  v86(v85 + v83, v110, v72);
  *(unsigned char *)(v85 + v84) = (_BYTE)v113;
  aBlock[4] = sub_1004DDF58;
  aBlock[5] = v85;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_100641F30;
  uint64_t v87 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v88 = v102;
  static DispatchQoS.unspecified.getter();
  uint64_t v120 = _swiftEmptyArrayStorage;
  sub_100045D0C((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  id v89 = v104;
  uint64_t v90 = v107;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v87);
  (*(void (**)(char *, uint64_t))(v106 + 8))(v89, v90);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v88, v105);
  id v91 = *(void (**)(char *, uint64_t))(v116 + 8);
  v91(v114, v72);
  sub_100057E74((uint64_t)v96, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  v91(v119, v72);
  return swift_release();
}

uint64_t sub_1004CF508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v109 = a6;
  uint64_t v114 = a5;
  uint64_t v121 = a3;
  uint64_t v96 = a2;
  uint64_t v7 = type metadata accessor for FMIPLocation();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v101 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v105 = (char *)&v95 - v11;
  uint64_t v12 = type metadata accessor for FMIPItem();
  uint64_t v110 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for FMAnnotationIdentifier();
  __chkstk_darwin(v112);
  uint64_t v111 = (uint64_t *)((char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_10005D034((uint64_t *)&unk_1006C0B20);
  __chkstk_darwin(v16 - 8);
  uint64_t v99 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = type metadata accessor for FMIPRangingParameters();
  uint64_t v18 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v106 = (char *)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10005D034((uint64_t *)&unk_1006AF710);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = type metadata accessor for FMFFriend();
  uint64_t v122 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  uint64_t v24 = (char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v100 = (char *)&v95 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  unint64_t v113 = (char *)&v95 - v29;
  __chkstk_darwin(v28);
  id v31 = (char *)&v95 - v30;
  FMIPItem.location.getter();
  uint64_t v115 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  uint64_t v116 = v8 + 48;
  int v32 = v115(v31, 1, v7);
  uint64_t v117 = v7;
  uint64_t v98 = a4;
  uint64_t v107 = v12;
  if (v32 == 1)
  {
    sub_100003F10((uint64_t)v31, (uint64_t *)&unk_1006B2AE0);
    uint64_t v33 = &_swiftEmptyDictionarySingleton;
    goto LABEL_19;
  }
  uint64_t v34 = (void *)FMIPLocation.location.getter();
  uint64_t v95 = v8;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v31, v7);
  uint64_t v35 = *(void *)(v96 + 16);
  if (v35)
  {
    id v104 = v34;
    uint64_t v36 = *(void (***)(char *, uint64_t, uint64_t))(v122 + 16);
    uint64_t v37 = v96 + ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80));
    uint64_t v119 = *(void (***)(char *, uint64_t))(v122 + 72);
    uint64_t v120 = v36;
    uint64_t v103 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
    uint64_t v97 = (void (**)(char *, uint64_t, uint64_t))(v18 + 32);
    uint64_t v102 = (void (**)(char *, uint64_t))(v18 + 8);
    v122 += 16;
    uint64_t v118 = (void (**)(char *, uint64_t))(v122 - 8);
    swift_bridgeObjectRetain();
    uint64_t v123 = &_swiftEmptyDictionarySingleton;
    uint64_t v38 = (uint64_t)v99;
    while (1)
    {
      ((void (*)(char *, uint64_t, uint64_t))v120)(v24, v37, v124);
      FMFFriend.location.getter();
      uint64_t v39 = type metadata accessor for FMFLocation();
      uint64_t v40 = *(void *)(v39 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v22, 1, v39) == 1)
      {
        sub_100003F10((uint64_t)v22, (uint64_t *)&unk_1006AF710);
      }
      else
      {
        unint64_t v41 = (void *)FMFLocation.location.getter();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v22, v39);
        if (v41)
        {
          swift_retain();
          FMIPManager.rangingParameters.getter();
          uint64_t v42 = v108;
          if ((*v103)(v38, 1, v108) == 1)
          {
            uint64_t v43 = v106;
            FMIPRangingParameters.init()();
            sub_100003F10(v38, (uint64_t *)&unk_1006C0B20);
          }
          else
          {
            uint64_t v43 = v106;
            (*v97)(v106, v38, v42);
          }
          swift_release();
          FMIPRangingParameters.inBTRangeDistanceInMeters.getter();
          double v45 = v44;
          (*v102)(v43, v42);
          id v46 = v104;
          [v41 distanceFromLocation:v104];
          double v48 = v47;
          [v41 horizontalAccuracy];
          double v50 = v49;
          [v46 horizontalAccuracy];
          if (v48 / sqrt(v45 * v45 + v50 * v50 + v51 * v51) >= 1.5)
          {
            (*v118)(v24, v124);

            goto LABEL_7;
          }
          uint64_t v52 = FMFFriend.identifier.getter();
          uint64_t v53 = (uint64_t)v111;
          uint64_t *v111 = v52;
          *(void *)(v53 + 8) = v54;
          swift_storeEnumTagMultiPayload();
          uint64_t v55 = *(void *)(v121 + 48);
          swift_bridgeObjectRetain();
          uint64_t v56 = sub_1004CD0E4((uint64_t)v24, v41, v55);
          swift_bridgeObjectRelease();
          int v57 = v123;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v125 = v57;
          sub_1001B9880(v56, v53, isUniquelyReferenced_nonNull_native);
          uint64_t v123 = v125;
          swift_bridgeObjectRelease();
          uint64_t v59 = v53;
          uint64_t v38 = (uint64_t)v99;
          sub_100057E74(v59, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
        }
      }
      (*v118)(v24, v124);
LABEL_7:
      v37 += (uint64_t)v119;
      if (!--v35)
      {

        swift_bridgeObjectRelease();
        a4 = v98;
        uint64_t v12 = v107;
        uint64_t v33 = v123;
        goto LABEL_18;
      }
    }
  }

  uint64_t v33 = &_swiftEmptyDictionarySingleton;
  a4 = v98;
LABEL_18:
  uint64_t v8 = v95;
LABEL_19:
  uint64_t v60 = *(void *)(a4 + 16);
  if (v60)
  {
    uint64_t v123 = v33;
    uint64_t v61 = v110 + 16;
    uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t))(v110 + 16);
    uint64_t v63 = a4 + ((*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80));
    uint64_t v64 = *(void *)(v110 + 72);
    uint64_t v65 = v8;
    uint64_t v66 = (void (**)(char *, uint64_t))(v110 + 8);
    uint64_t v119 = (void (**)(char *, uint64_t))(v65 + 8);
    uint64_t v120 = (void (**)(char *, uint64_t, uint64_t))(v65 + 32);
    swift_bridgeObjectRetain();
    uint64_t v110 = v61;
    uint64_t v124 = (uint64_t)v62;
    uint64_t v122 = v64;
    while (1)
    {
      v62(v14, v63, v12);
      FMIPItem.groupIdentifier.getter();
      uint64_t v68 = v67;
      swift_bridgeObjectRelease();
      if (!v68) {
        break;
      }
      (*v66)(v14, v12);
LABEL_22:
      v63 += v64;
      if (!--v60)
      {
        swift_bridgeObjectRelease();
        uint64_t v33 = v123;
        goto LABEL_36;
      }
    }
    uint64_t v69 = FMIPItem.identifier.getter();
    uint64_t v71 = v70;
    if (v69 == FMIPItem.identifier.getter() && v71 == v72)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v73 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v73 & 1) == 0)
      {
        uint64_t v74 = (uint64_t)v100;
        FMIPItem.location.getter();
        uint64_t v85 = v117;
        if (v115((char *)v74, 1, v117) != 1)
        {
          uint64_t v86 = (uint64_t)v101;
          (*v120)(v101, v74, v85);
          uint64_t v87 = *(void *)(v121 + 48);
          swift_bridgeObjectRetain();
          uint64_t v118 = (void (**)(char *, uint64_t))sub_1004D0154((uint64_t)v14, v86, v87, v109 & 1);
          swift_bridgeObjectRelease();
          uint64_t v88 = FMIPItem.identifier.getter();
          uint64_t v89 = (uint64_t)v111;
          uint64_t *v111 = v88;
          *(void *)(v89 + 8) = v90;
          swift_storeEnumTagMultiPayload();
          id v91 = v118;
          uint64_t v92 = v123;
          char v93 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v125 = v92;
          sub_1001B9880((uint64_t)v91, v89, v93);
          uint64_t v123 = v125;
          swift_bridgeObjectRelease();
          sub_100057E74(v89, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);

          (*v119)(v101, v85);
          goto LABEL_33;
        }
LABEL_31:
        (*v66)(v14, v12);
        sub_100003F10(v74, (uint64_t *)&unk_1006B2AE0);
LABEL_34:
        uint64_t v62 = (void (*)(char *, uint64_t, uint64_t))v124;
        uint64_t v64 = v122;
        goto LABEL_22;
      }
    }
    uint64_t v74 = (uint64_t)v113;
    FMIPItem.location.getter();
    uint64_t v75 = v117;
    if (v115((char *)v74, 1, v117) != 1)
    {
      uint64_t v76 = (uint64_t)v105;
      (*v120)(v105, v74, v75);
      uint64_t v77 = FMIPItem.identifier.getter();
      uint64_t v78 = (uint64_t)v111;
      uint64_t *v111 = v77;
      *(void *)(v78 + 8) = v79;
      swift_storeEnumTagMultiPayload();
      uint64_t v80 = *(void *)(v121 + 48);
      swift_bridgeObjectRetain();
      uint64_t v81 = sub_1004D0154((uint64_t)v14, v76, v80, v109 & 1);
      swift_bridgeObjectRelease();
      unint64_t v82 = v123;
      char v83 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v125 = v82;
      sub_1001B9880(v81, v78, v83);
      uint64_t v123 = v125;
      swift_bridgeObjectRelease();
      sub_100057E74(v78, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
      uint64_t v84 = v76;
      uint64_t v12 = v107;
      (*v119)((char *)v84, v75);
LABEL_33:
      (*v66)(v14, v12);
      goto LABEL_34;
    }
    goto LABEL_31;
  }
LABEL_36:
  sub_10003C81C((uint64_t)v33, (uint64_t)_swiftEmptyArrayStorage);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004D0154(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v60 = a4;
  uint64_t v61 = a3;
  uint64_t v58 = a2;
  uint64_t v6 = type metadata accessor for FMIPItem();
  uint64_t v55 = *(void *)(v6 - 8);
  uint64_t v56 = v6;
  __chkstk_darwin(v6);
  int v57 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FMAnnotationIdentifier();
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for FMIPItemImageCacheRequest();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FMIPItemImageSize();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = v4;
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, enum case for FMIPItemImageSize.infobox(_:), v15);
  swift_retain();
  sub_1001C9354((uint64_t)v18, v60, (uint64_t)v14);
  dispatch thunk of FMImageCache.cachedImage(for:completion:)();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v19 = a1;
  swift_release();
  uint64_t v20 = v15;
  uint64_t v21 = v61;
  uint64_t v22 = v62;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v20);
  uint64_t *v10 = FMIPItem.identifier.getter();
  v10[1] = v23;
  swift_storeEnumTagMultiPayload();
  if (!*(void *)(v21 + 16) || (unint64_t v24 = sub_1001B0040((uint64_t)v10), (v25 & 1) == 0))
  {
    sub_100057E74((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
LABEL_6:
    uint64_t v40 = (void *)FMIPLocation.location.getter();
    [v40 coordinate];
    double v42 = v41;
    double v44 = v43;

    double v45 = (void *)FMIPLocation.location.getter();
    [v45 horizontalAccuracy];
    double v47 = v46;

    uint64_t v48 = (uint64_t)v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v57, a1, v56);
    uint64_t v49 = sub_1004D05F0(a1);
    uint64_t v51 = v50;
    id v52 = objc_allocWithZone((Class)type metadata accessor for FMItemAnnotation());
    sub_1001893DC(v48, v22, v49, v51, v42, v44, v47);
    uint64_t v28 = v53;
    goto LABEL_7;
  }
  id v26 = *(id *)(*(void *)(v21 + 56) + 8 * v24);
  sub_100057E74((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
  type metadata accessor for FMItemAnnotation();
  uint64_t v27 = swift_dynamicCastClass();
  if (!v27)
  {

    goto LABEL_6;
  }
  uint64_t v28 = v27;
  uint64_t v29 = (void *)FMIPLocation.location.getter();
  [v29 coordinate];
  double v31 = v30;
  double v33 = v32;

  uint64_t v34 = (void *)FMIPLocation.location.getter();
  [v34 horizontalAccuracy];
  double v36 = v35;

  uint64_t v37 = sub_1004D05F0(a1);
  unint64_t v39 = v38;
  sub_100189818(v19, v22, v37, v38, v31, v33, v36);
  sub_100083358(v37, v39);
LABEL_7:

  return v28;
}

uint64_t sub_1004D05F0(uint64_t a1)
{
  uint64_t v74 = a1;
  uint64_t v2 = type metadata accessor for FMIPItemState();
  uint64_t v61 = *(void *)(v2 - 8);
  uint64_t v62 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  int v60 = &v57[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v59 = &v57[-v5];
  uint64_t v6 = type metadata accessor for FMIPItem();
  uint64_t v66 = *(void *)(v6 - 8);
  uint64_t v67 = v6;
  __chkstk_darwin(v6);
  uint64_t v65 = &v57[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v73 = type metadata accessor for FMIPSafeLocationType();
  uint64_t v71 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v68 = &v57[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_10005D034((uint64_t *)&unk_1006BEB20);
  __chkstk_darwin(v9 - 8);
  uint64_t v72 = &v57[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for FMIPSafeLocation();
  uint64_t v69 = *(void *)(v11 - 8);
  uint64_t v70 = v11;
  __chkstk_darwin(v11);
  uint64_t v64 = &v57[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = &v57[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  uint64_t v18 = &v57[-v17];
  uint64_t v19 = type metadata accessor for FMIPLocation();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v75 = &v57[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = type metadata accessor for FMSelectedSection();
  uint64_t v23 = __chkstk_darwin(v22);
  char v25 = &v57[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v23);
  uint64_t v27 = &v57[-v26];
  int v63 = *(unsigned __int8 *)(v1 + 56);
  uint64_t v28 = *(void *)(v1 + 16);
  uint64_t v29 = *(void *)(v28 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100057A34(v29, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_100057A34((uint64_t)v27, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    double v30 = (void *)*v25;
    sub_100083358(v25[1], v25[2]);
    uint64_t v31 = v74;
    uint64_t v32 = FMIPItem.identifier.getter();
    char v34 = sub_100078284(v32, v33, v30);
    swift_bridgeObjectRelease();
    sub_100057E74((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100057E74((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    sub_100057E74((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    char v34 = 0;
    uint64_t v31 = v74;
  }
  uint64_t v35 = *(void *)(v28 + 40);
  int v36 = *(unsigned __int8 *)(v35 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_isLocationAuthorized);
  LODWORD(v74) = *(unsigned __int8 *)(v35 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_limitedPrecision);
  FMIPItem.location.getter();
  int v37 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19);
  unint64_t v38 = v75;
  if (v37 == 1)
  {
    sub_100003F10((uint64_t)v18, (uint64_t *)&unk_1006B2AE0);
    if (v34) {
      return 0;
    }
LABEL_9:
    if ((v36 ^ 1 | v74))
    {
      uint64_t v48 = v65;
      uint64_t v47 = v66;
      uint64_t v49 = v67;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v66 + 16))(v65, v31, v67);
    }
    else
    {
      uint64_t v48 = v65;
      uint64_t v47 = v66;
      uint64_t v49 = v67;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v66 + 16))(v65, v31, v67);
      if (v63 != 1)
      {
        id v52 = v59;
        FMIPItem.state.getter();
        uint64_t v53 = v60;
        static FMIPItemState.isBTConnected.getter();
        sub_100045D0C((unint64_t *)&qword_1006BEB30, (void (*)(uint64_t))&type metadata accessor for FMIPItemState);
        uint64_t v54 = v62;
        char v55 = dispatch thunk of SetAlgebra.isSuperset(of:)();
        uint64_t v56 = *(void (**)(unsigned char *, uint64_t))(v61 + 8);
        v56(v53, v54);
        v56(v52, v54);
        (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v48, v49);
        if (v55) {
          return 0;
        }
        return 0;
      }
    }
    (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v48, v49);
    return 0;
  }
  int v58 = v36;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v20 + 32))(v75, v18, v19);
  uint64_t v40 = v38;
  uint64_t v41 = v71;
  uint64_t v42 = (uint64_t)v68;
  uint64_t v43 = v73;
  (*(void (**)(unsigned char *, void, uint64_t))(v71 + 104))(v68, enum case for FMIPSafeLocationType.home(_:), v73);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v20 + 16))(v16, v40, v19);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
  swift_retain();
  double v44 = v72;
  sub_1000D95CC(v42, (uint64_t)v16, (uint64_t)v72);
  swift_release();
  sub_100003F10((uint64_t)v16, (uint64_t *)&unk_1006B2AE0);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v43);
  uint64_t v46 = v69;
  uint64_t v45 = v70;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v69 + 48))(v44, 1, v70) != 1)
  {
    uint64_t v50 = v64;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v46 + 32))(v64, v44, v45);
    uint64_t v39 = FMIPSafeLocation.identifier.getter();
    (*(void (**)(unsigned char *, uint64_t))(v46 + 8))(v50, v45);
    (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v75, v19);
    return v39;
  }
  (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v75, v19);
  sub_100003F10((uint64_t)v44, (uint64_t *)&unk_1006BEB20);
  int v36 = v58;
  if ((v34 & 1) == 0) {
    goto LABEL_9;
  }
  return 0;
}

uint64_t sub_1004D0E74(uint64_t a1, uint64_t a2)
{
  v46[1] = a2;
  uint64_t v58 = a1;
  uint64_t v3 = type metadata accessor for FMIPDeviceState();
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v48 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v47 = (char *)v46 - v6;
  uint64_t v56 = type metadata accessor for FMIPSafeLocationType();
  uint64_t v54 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v51 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10005D034((uint64_t *)&unk_1006BEB20);
  __chkstk_darwin(v8 - 8);
  char v55 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMIPSafeLocation();
  uint64_t v52 = *(void *)(v10 - 8);
  uint64_t v53 = v10;
  __chkstk_darwin(v10);
  v46[0] = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v46 - v16;
  uint64_t v18 = type metadata accessor for FMIPLocation();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v59 = (char *)v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for FMSelectedSection();
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = (void *)((char *)v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)v46 - v25;
  uint64_t v27 = *(void *)(*(void *)(v2 + 16) + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100057A34(v27, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_100057A34((uint64_t)v26, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    uint64_t v28 = (void *)*v24;
    sub_100083358(v24[1], v24[2]);
    uint64_t v29 = FMIPItem.identifier.getter();
    int v57 = sub_100078284(v29, v30, v28);
    swift_bridgeObjectRelease();
    sub_100057E74((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100057E74((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    sub_100057E74((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    int v57 = 0;
  }
  FMIPItem.location.getter();
  int v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18);
  uint64_t v32 = v59;
  if (v31 == 1)
  {
    uint64_t v33 = (uint64_t *)&unk_1006B2AE0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v59, v17, v18);
    uint64_t v34 = v54;
    uint64_t v35 = (uint64_t)v51;
    uint64_t v36 = v56;
    (*(void (**)(char *, void, uint64_t))(v54 + 104))(v51, enum case for FMIPSafeLocationType.home(_:), v56);
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v15, v32, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
    swift_retain();
    uint64_t v17 = v55;
    sub_1000D95CC(v35, (uint64_t)v15, (uint64_t)v55);
    swift_release();
    sub_100003F10((uint64_t)v15, (uint64_t *)&unk_1006B2AE0);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v36);
    uint64_t v38 = v52;
    uint64_t v37 = v53;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v17, 1, v53) != 1)
    {
      uint64_t v44 = v46[0];
      (*(void (**)(void, char *, uint64_t))(v38 + 32))(v46[0], v17, v37);
      uint64_t v39 = FMIPSafeLocation.identifier.getter();
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v44, v37);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v32, v18);
      return v39;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v32, v18);
    uint64_t v33 = (uint64_t *)&unk_1006BEB20;
  }
  sub_100003F10((uint64_t)v17, v33);
  if ((v57 & 1) == 0)
  {
    uint64_t v40 = v47;
    FMIPDevice.state.getter();
    uint64_t v41 = v48;
    static FMIPDeviceState.isThisDevice.getter();
    sub_100045D0C((unint64_t *)&qword_1006C0390, (void (*)(uint64_t))&type metadata accessor for FMIPDeviceState);
    uint64_t v42 = v50;
    dispatch thunk of SetAlgebra.isSuperset(of:)();
    uint64_t v43 = *(void (**)(char *, uint64_t))(v49 + 8);
    v43(v41, v42);
    v43(v40, v42);
  }
  return 0;
}