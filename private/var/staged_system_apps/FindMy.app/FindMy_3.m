void sub_10021540C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  void (*v28)(void);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v13 = type metadata accessor for FMIPItemActionStatus();
  v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v29 = a1;
    v30 = a7;
    swift_errorRetain();
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    v17 = type metadata accessor for Logger();
    sub_1000606BC(v17, (uint64_t)qword_1006D1E98);
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    v18 = Logger.logObject.getter();
    v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v28 = a6;
      v21 = v20;
      v22 = swift_slowAlloc();
      v27 = v14;
      v32 = v22;
      *(_DWORD *)v21 = 136315394;
      swift_bridgeObjectRetain();
      v31 = sub_1000606F4(a4, a5, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 12) = 2080;
      swift_getErrorValue();
      v23 = Error.localizedDescription.getter();
      v31 = sub_1000606F4(v23, v24, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "FMDeviceDetailContentViewController: Failed to play sound for item identifier: %s - error: %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      v14 = v27;
      swift_slowDealloc();
      a6 = v28;
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  if (a6)
  {
    (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for FMIPItemActionStatus.success(_:), v13);
    sub_10021E398((unint64_t *)&qword_1006B5DE8, (void (*)(uint64_t))&type metadata accessor for FMIPItemActionStatus);
    v25 = v14;
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    v26 = v32 == v31;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v13);
    a6(v26);
  }
}

void sub_1002157C4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
}

uint64_t sub_1002157E0(uint64_t a1, int a2, uint64_t a3)
{
  return sub_100223134(a2, a3);
}

void sub_1002157EC(uint64_t a1, void *a2, uint64_t a3)
{
  v59 = a2;
  uint64_t v65 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v64 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  v62 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for DispatchQoS();
  uint64_t v61 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  v60 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v68 = *(void *)(v7 - 8);
  uint64_t v69 = v7;
  uint64_t v8 = *(void *)(v68 + 64);
  uint64_t v9 = __chkstk_darwin(v7);
  v10 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v58 = (char *)&v58 - v11;
  uint64_t v12 = type metadata accessor for FMIPDevice();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = a3;
  uint64_t v67 = a1;
  uint64_t v16 = UUID.uuidString.getter();
  uint64_t v18 = v17;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v66 = v13;
  if (!Strong) {
    goto LABEL_6;
  }
  v20 = (void *)Strong;
  uint64_t v21 = *(void *)(Strong + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource);
  swift_retain();

  uint64_t v22 = v21 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v22, v12);
  swift_release();
  uint64_t v23 = FMIPDevice.baIdentifier.getter();
  uint64_t v25 = v24;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (v25)
  {
    if (v16 == v23 && v25 == v18)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v26 = v68;
      uint64_t v27 = v69;
      goto LABEL_14;
    }
    char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v26 = v68;
    uint64_t v27 = v69;
    if (v41)
    {
LABEL_14:
      swift_beginAccess();
      uint64_t v42 = swift_unknownObjectWeakLoadStrong();
      if (v42)
      {
        v43 = (void *)v42;
        id v44 = objc_retain(*(id *)(v42
                                + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_connectionMaterialUpdateQueue));

        v45 = v58;
        (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v58, v67, v27);
        unint64_t v46 = (*(unsigned __int8 *)(v26 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
        unint64_t v47 = (v8 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v48 = swift_allocObject();
        (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v48 + v46, v45, v27);
        v49 = v59;
        *(void *)(v48 + v47) = v59;
        *(void *)(v48 + ((v47 + 15) & 0xFFFFFFFFFFFFFFF8)) = v70;
        aBlock[4] = sub_10022675C;
        aBlock[5] = v48;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10003C410;
        aBlock[3] = &unk_10062DA18;
        v50 = _Block_copy(aBlock);
        id v51 = v49;
        swift_retain();
        v52 = v60;
        static DispatchQoS.unspecified.getter();
        v72 = _swiftEmptyArrayStorage;
        sub_10021E398((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10005D034((uint64_t *)&unk_1006AE4B0);
        sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
        v53 = v62;
        uint64_t v54 = v65;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v50);

        (*(void (**)(char *, uint64_t))(v64 + 8))(v53, v54);
        (*(void (**)(char *, uint64_t))(v61 + 8))(v52, v63);
        swift_release();
      }
      return;
    }
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t v26 = v68;
    uint64_t v27 = v69;
  }
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  sub_1000606BC(v28, (uint64_t)qword_1006D1E98);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v10, v67, v27);
  swift_retain_n();
  v29 = Logger.logObject.getter();
  int v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, (os_log_type_t)v30))
  {
    LODWORD(v68) = v30;
    uint64_t v31 = swift_slowAlloc();
    uint64_t v69 = swift_slowAlloc();
    uint64_t v74 = v69;
    *(_DWORD *)uint64_t v31 = 136315394;
    sub_10021E398((unint64_t *)&qword_1006B6CC0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
    aBlock[0] = sub_1000606F4(v32, v33, &v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v27);
    *(_WORD *)(v31 + 12) = 2080;
    swift_beginAccess();
    uint64_t v34 = swift_unknownObjectWeakLoadStrong();
    v35 = (void *)v34;
    if (v34)
    {
      uint64_t v36 = *(void *)(v34 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource);
      swift_retain();

      uint64_t v37 = v36 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
      swift_beginAccess();
      uint64_t v38 = v66;
      (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v15, v37, v12);
      swift_release();
      v35 = (void *)FMIPDevice.baIdentifier.getter();
      uint64_t v40 = v39;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v12);
    }
    else
    {
      uint64_t v40 = 0;
    }
    os_log_type_t v55 = v68;
    v72 = v35;
    uint64_t v73 = v40;
    sub_10005D034(&qword_1006AEFF0);
    uint64_t v56 = String.init<A>(describing:)();
    v72 = (void *)sub_1000606F4(v56, v57, &v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v29, v55, "Peripheral connection updated for id: %s, doesn't match deviceId: %s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v27);

    swift_release_n();
  }
}

void sub_10021611C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a3 + 16;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_1000606BC(v11, (uint64_t)qword_1006D1E98);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  id v12 = a2;
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  v15 = &selRef_handleFavorite;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v16 = swift_slowAlloc();
    v47[0] = swift_slowAlloc();
    v49[0] = v47[0];
    *(_DWORD *)uint64_t v16 = 136315650;
    v47[1] = v10;
    sub_10021E398((unint64_t *)&qword_1006B6CC0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v48 = sub_1000606F4(v17, v18, v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_WORD *)(v16 + 12) = 2080;
    id v19 = [v12 irkData];
    uint64_t v20 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v22 = v21;

    uint64_t v23 = Data.description.getter();
    unint64_t v25 = v24;
    sub_10002B2CC(v20, v22);
    uint64_t v48 = sub_1000606F4(v23, v25, v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 22) = 2080;
    id v26 = [v12 btAddressWithTypeData];
    uint64_t v27 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v29 = v28;

    uint64_t v30 = Data.description.getter();
    unint64_t v32 = v31;
    sub_10002B2CC(v27, v29);
    uint64_t v48 = sub_1000606F4(v30, v32, v49);
    v15 = &selRef_handleFavorite;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Peripheral connection updated for id: %s - irk: %s btAddress: %s", (uint8_t *)v16, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  unint64_t v33 = self;
  id v34 = [v12 v15[277]];
  uint64_t v35 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v37 = v36;

  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_10002B2CC(v35, v37);
  id v39 = [v12 irkData];
  uint64_t v40 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v42 = v41;

  Class v43 = Data._bridgeToObjectiveC()().super.isa;
  sub_10002B2CC(v40, v42);
  id v44 = [v33 generateBluetoothDeviceTokenWithPublicAddress:isa IRK:v43];

  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v46 = *(void **)&Strong[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_btDeviceDiscoveryToken];
    *(void *)&Strong[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_btDeviceDiscoveryToken] = v44;

    id v44 = v46;
  }
}

uint64_t sub_100216614(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void (**)(char *, id))(a1 + 32);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  id v10 = a3;
  v9(v8, v10);

  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_100216728()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    v1 = (char *)Strong;
    uint64_t v2 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_localFindableConnectionMaterialMonitoringSession;
    v3 = *(void **)(Strong
                  + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_localFindableConnectionMaterialMonitoringSession);
    *(void *)(Strong
              + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_localFindableConnectionMaterialMonitoringSession) = 0;

    sub_1001DD950();
    v4 = *(void **)&v1[v2];
    if (v4)
    {
      aBlock[4] = sub_10021682C;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100005590;
      aBlock[3] = &unk_10062D9C8;
      uint64_t v5 = _Block_copy(aBlock);
      uint64_t v6 = v4;
      [v6 startLocalFindableConnectionMaterialMonitoringWithCompletion:v5];
      _Block_release(v5);

      v1 = v6;
    }
  }
}

void sub_10021682C(uint64_t a1)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_1000606BC(v1, (uint64_t)qword_1006D1E98);
    swift_errorRetain();
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v2))
    {
      v3 = (uint8_t *)swift_slowAlloc();
      v4 = (void *)swift_slowAlloc();
      *(_DWORD *)v3 = 138412290;
      swift_errorRetain();
      uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v4 = v9;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v2, "Error starting characteristic monitoring session: %@", v3, 0xCu);
      sub_10005D034((uint64_t *)&unk_1006B5A50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return;
    }
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_1000606BC(v5, (uint64_t)qword_1006D1E98);
    oslog = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Accessory Characteristics monitoring session started!", v7, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_100216AD4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, const char *a5, const char *a6)
{
  uint64_t v11 = type metadata accessor for FMIPActionStatus();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  os_log_type_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for FMIPActionStatus.success(_:), v11);
  sub_10021E398(&qword_1006C03C0, (void (*)(uint64_t))&type metadata accessor for FMIPActionStatus);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  uint64_t v16 = v28;
  uint64_t v15 = v29;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v15 == v16)
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_1000606BC(v17, (uint64_t)qword_1006D1E98);
    swift_bridgeObjectRetain_n();
    unint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1000606F4(a3, a4, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, a5, v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_1000606BC(v21, (uint64_t)qword_1006D1E98);
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      unint64_t v24 = (uint8_t *)swift_slowAlloc();
      unint64_t v25 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v24 = 138412290;
      if (a2)
      {
        swift_errorRetain();
        uint64_t v26 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v29 = v26;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
      }
      else
      {
        uint64_t v29 = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v26 = 0;
      }
      *unint64_t v25 = v26;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, a6, v24, 0xCu);
      sub_10005D034((uint64_t *)&unk_1006B5A50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_100216F60()
{
  sub_100003F10(v0 + OBJC_IVAR____TtC6FindMyP33_FDB0C6A0A8911E0A6244ECE6337EF12425LostModeStatusCoordinator_continuation, &qword_1006B5E10);

  return swift_deallocClassInstance();
}

uint64_t sub_100216FCC()
{
  return type metadata accessor for LostModeStatusCoordinator(0);
}

uint64_t type metadata accessor for LostModeStatusCoordinator(uint64_t a1)
{
  return sub_1000201D0(a1, (uint64_t *)&unk_1006B5D38);
}

void sub_100216FF4()
{
  sub_100217084();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100217084()
{
  if (!qword_1006B5D48)
  {
    sub_100046C48((uint64_t *)&unk_1006B5D50);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1006B5D48);
    }
  }
}

uint64_t sub_1002170E0(uint64_t (*a1)(void))
{
  uint64_t result = a1();
  if (result) {
    return _swift_stdlib_bridgeErrorToNSError();
  }
  return result;
}

Swift::Int sub_100217110(void **a1)
{
  uint64_t v2 = *(void *)(sub_10005D034(&qword_1006B2C20) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    v3 = (void *)sub_1002688D4(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_1002171BC(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_1002171BC(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v146 = sub_10005D034(&qword_1006B2C20);
  uint64_t v144 = *(void *)(v146 - 8);
  uint64_t v4 = __chkstk_darwin(v146);
  uint64_t v140 = (uint64_t)&v132 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v151 = (uint64_t)&v132 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)&v132 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v132 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v132 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  v142 = (uint64_t *)((char *)&v132 - v18);
  uint64_t v19 = __chkstk_darwin(v17);
  v138 = (uint64_t *)((char *)&v132 - v20);
  __chkstk_darwin(v19);
  v137 = (uint64_t *)((char *)&v132 - v21);
  v153 = a1;
  Swift::Int v22 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v22);
  if (result >= v22)
  {
    if (v22 < 0) {
      goto LABEL_158;
    }
    if (v22) {
      return sub_100217CDC(0, v22, 1, v153);
    }
    return result;
  }
  if (v22 >= 0) {
    uint64_t v24 = v22;
  }
  else {
    uint64_t v24 = v22 + 1;
  }
  if (v22 < -1) {
    goto LABEL_166;
  }
  Swift::Int v133 = result;
  v134 = v16;
  v147 = v13;
  v148 = v10;
  Swift::Int v25 = v22;
  if (v22 < 2)
  {
    uint64_t v27 = _swiftEmptyArrayStorage;
    unint64_t v143 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v144 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v144 + 80));
    if (v22 != 1)
    {
      unint64_t v30 = _swiftEmptyArrayStorage[2];
      uint64_t v29 = (char *)_swiftEmptyArrayStorage;
LABEL_124:
      if (v30 >= 2)
      {
        uint64_t v124 = *v153;
        do
        {
          unint64_t v125 = v30 - 2;
          if (v30 < 2) {
            goto LABEL_153;
          }
          if (!v124) {
            goto LABEL_165;
          }
          v126 = v29;
          v127 = v29 + 32;
          uint64_t v128 = *(void *)&v29[16 * v125 + 32];
          uint64_t v129 = *(void *)&v29[16 * v30 + 24];
          sub_100217F94(v124 + *(void *)(v144 + 72) * v128, v124 + *(void *)(v144 + 72) * *(void *)&v127[16 * v30 - 16], v124 + *(void *)(v144 + 72) * v129, v143);
          if (v2) {
            break;
          }
          if (v129 < v128) {
            goto LABEL_154;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v126 = sub_1002687F8((uint64_t)v126);
          }
          if (v125 >= *((void *)v126 + 2)) {
            goto LABEL_155;
          }
          v130 = &v126[16 * v125 + 32];
          *(void *)v130 = v128;
          *((void *)v130 + 1) = v129;
          unint64_t v131 = *((void *)v126 + 2);
          if (v30 > v131) {
            goto LABEL_156;
          }
          uint64_t v29 = v126;
          memmove(&v126[16 * v30 + 16], &v126[16 * v30 + 32], 16 * (v131 - v30));
          *((void *)v126 + 2) = v131 - 1;
          unint64_t v30 = v131 - 1;
        }
        while (v131 > 2);
      }
LABEL_135:
      swift_bridgeObjectRelease();
      v27[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v26 = v24 >> 1;
    uint64_t v27 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
    v27[2] = v26;
    unint64_t v143 = (unint64_t)v27
         + ((*(unsigned __int8 *)(v144 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v144 + 80));
  }
  v136 = v27;
  Swift::Int v28 = 0;
  uint64_t v29 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    Swift::Int v31 = v28;
    Swift::Int v32 = v28 + 1;
    Swift::Int v141 = v28;
    if (v28 + 1 >= v25) {
      break;
    }
    Swift::Int v150 = v25;
    uint64_t v33 = *v153;
    uint64_t v34 = *(void *)(v144 + 72);
    uint64_t v35 = v137;
    sub_100006AB0(*v153 + v34 * v32, (uint64_t)v137, &qword_1006B2C20);
    uint64_t v149 = v33;
    uint64_t v152 = v34;
    uint64_t v36 = v33 + v34 * v28;
    unint64_t v37 = v138;
    sub_100006AB0(v36, (uint64_t)v138, &qword_1006B2C20);
    BOOL v38 = *v35 == *v37 && v35[1] == v37[1];
    id v39 = v134;
    if (v38) {
      int v40 = 0;
    }
    else {
      int v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    Swift::Int v25 = v150;
    sub_100003F10((uint64_t)v138, &qword_1006B2C20);
    sub_100003F10((uint64_t)v137, &qword_1006B2C20);
    Swift::Int v28 = v141 + 2;
    if (v141 + 2 >= v25)
    {
LABEL_34:
      Swift::Int v31 = v141;
      if ((v40 & 1) == 0) {
        goto LABEL_49;
      }
    }
    else
    {
      v135 = v29;
      uint64_t v41 = v152 * v32;
      uint64_t v42 = v149;
      uint64_t v43 = v152 * v28;
      while (1)
      {
        Swift::Int v44 = v28;
        v45 = v142;
        sub_100006AB0(v42 + v43, (uint64_t)v142, &qword_1006B2C20);
        sub_100006AB0(v42 + v41, (uint64_t)v39, &qword_1006B2C20);
        BOOL v46 = *v45 == *v39 && v45[1] == v39[1];
        int v47 = v46 ? 0 : _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_100003F10((uint64_t)v39, &qword_1006B2C20);
        sub_100003F10((uint64_t)v142, &qword_1006B2C20);
        if ((v40 ^ v47)) {
          break;
        }
        ++v28;
        v42 += v152;
        if (v150 == v44 + 1)
        {
          Swift::Int v25 = v150;
          Swift::Int v28 = v150;
          uint64_t v29 = v135;
          goto LABEL_34;
        }
      }
      uint64_t v29 = v135;
      Swift::Int v25 = v150;
      Swift::Int v31 = v141;
      if ((v40 & 1) == 0) {
        goto LABEL_49;
      }
    }
    if (v28 < v31) {
      goto LABEL_159;
    }
    if (v31 >= v28) {
      goto LABEL_49;
    }
    uint64_t v145 = v2;
    v135 = v29;
    uint64_t v48 = 0;
    uint64_t v49 = v152 * (v28 - 1);
    uint64_t v50 = v28 * v152;
    Swift::Int v51 = v31;
    uint64_t v52 = v31 * v152;
    v53 = v148;
    do
    {
      if (v51 != v28 + v48 - 1)
      {
        uint64_t v54 = v149;
        if (!v149) {
          goto LABEL_164;
        }
        unint64_t v55 = v149 + v52;
        sub_100067E48(v149 + v52, v140, &qword_1006B2C20);
        if (v52 < v49 || v55 >= v54 + v50)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v52 != v49)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        sub_100067E48(v140, v54 + v49, &qword_1006B2C20);
        v53 = v148;
      }
      ++v51;
      --v48;
      v49 -= v152;
      v50 -= v152;
      v52 += v152;
    }
    while (v51 < v28 + v48);
    uint64_t v29 = v135;
    uint64_t v2 = v145;
    Swift::Int v31 = v141;
    Swift::Int v25 = v150;
    if (v28 < v150) {
      goto LABEL_50;
    }
LABEL_74:
    if (v28 < v31) {
      goto LABEL_152;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v29 = sub_100268068(0, *((void *)v29 + 2) + 1, 1, v29);
    }
    unint64_t v71 = *((void *)v29 + 2);
    unint64_t v70 = *((void *)v29 + 3);
    unint64_t v30 = v71 + 1;
    if (v71 >= v70 >> 1) {
      uint64_t v29 = sub_100268068((char *)(v70 > 1), v71 + 1, 1, v29);
    }
    uint64_t v145 = v2;
    *((void *)v29 + 2) = v30;
    v72 = v29 + 32;
    uint64_t v73 = &v29[16 * v71 + 32];
    *(void *)uint64_t v73 = v31;
    *((void *)v73 + 1) = v28;
    if (v71)
    {
      while (1)
      {
        unint64_t v74 = v30 - 1;
        if (v30 >= 4)
        {
          v79 = &v72[16 * v30];
          uint64_t v80 = *((void *)v79 - 8);
          uint64_t v81 = *((void *)v79 - 7);
          BOOL v85 = __OFSUB__(v81, v80);
          uint64_t v82 = v81 - v80;
          if (v85) {
            goto LABEL_141;
          }
          uint64_t v84 = *((void *)v79 - 6);
          uint64_t v83 = *((void *)v79 - 5);
          BOOL v85 = __OFSUB__(v83, v84);
          uint64_t v77 = v83 - v84;
          char v78 = v85;
          if (v85) {
            goto LABEL_142;
          }
          unint64_t v86 = v30 - 2;
          v87 = &v72[16 * v30 - 32];
          uint64_t v89 = *(void *)v87;
          uint64_t v88 = *((void *)v87 + 1);
          BOOL v85 = __OFSUB__(v88, v89);
          uint64_t v90 = v88 - v89;
          if (v85) {
            goto LABEL_144;
          }
          BOOL v85 = __OFADD__(v77, v90);
          uint64_t v91 = v77 + v90;
          if (v85) {
            goto LABEL_147;
          }
          if (v91 >= v82)
          {
            v109 = &v72[16 * v74];
            uint64_t v111 = *(void *)v109;
            uint64_t v110 = *((void *)v109 + 1);
            BOOL v85 = __OFSUB__(v110, v111);
            uint64_t v112 = v110 - v111;
            if (v85) {
              goto LABEL_151;
            }
            BOOL v102 = v77 < v112;
            goto LABEL_111;
          }
        }
        else
        {
          if (v30 != 3)
          {
            uint64_t v103 = *((void *)v29 + 4);
            uint64_t v104 = *((void *)v29 + 5);
            BOOL v85 = __OFSUB__(v104, v103);
            uint64_t v96 = v104 - v103;
            char v97 = v85;
            goto LABEL_105;
          }
          uint64_t v76 = *((void *)v29 + 4);
          uint64_t v75 = *((void *)v29 + 5);
          BOOL v85 = __OFSUB__(v75, v76);
          uint64_t v77 = v75 - v76;
          char v78 = v85;
        }
        if (v78) {
          goto LABEL_143;
        }
        unint64_t v86 = v30 - 2;
        v92 = &v72[16 * v30 - 32];
        uint64_t v94 = *(void *)v92;
        uint64_t v93 = *((void *)v92 + 1);
        BOOL v95 = __OFSUB__(v93, v94);
        uint64_t v96 = v93 - v94;
        char v97 = v95;
        if (v95) {
          goto LABEL_146;
        }
        v98 = &v72[16 * v74];
        uint64_t v100 = *(void *)v98;
        uint64_t v99 = *((void *)v98 + 1);
        BOOL v85 = __OFSUB__(v99, v100);
        uint64_t v101 = v99 - v100;
        if (v85) {
          goto LABEL_149;
        }
        if (__OFADD__(v96, v101)) {
          goto LABEL_150;
        }
        if (v96 + v101 >= v77)
        {
          BOOL v102 = v77 < v101;
LABEL_111:
          if (v102) {
            unint64_t v74 = v86;
          }
          goto LABEL_113;
        }
LABEL_105:
        if (v97) {
          goto LABEL_145;
        }
        v105 = &v72[16 * v74];
        uint64_t v107 = *(void *)v105;
        uint64_t v106 = *((void *)v105 + 1);
        BOOL v85 = __OFSUB__(v106, v107);
        uint64_t v108 = v106 - v107;
        if (v85) {
          goto LABEL_148;
        }
        if (v108 < v96) {
          goto LABEL_14;
        }
LABEL_113:
        unint64_t v113 = v74 - 1;
        if (v74 - 1 >= v30)
        {
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
          goto LABEL_161;
        }
        if (!*v153) {
          goto LABEL_163;
        }
        Swift::Int v114 = v28;
        v115 = v29;
        v116 = v72;
        v117 = &v72[16 * v113];
        uint64_t v118 = *(void *)v117;
        v119 = v116;
        v120 = &v116[16 * v74];
        uint64_t v121 = *((void *)v120 + 1);
        uint64_t v122 = v145;
        sub_100217F94(*v153 + *(void *)(v144 + 72) * *(void *)v117, *v153 + *(void *)(v144 + 72) * *(void *)v120, *v153 + *(void *)(v144 + 72) * v121, v143);
        uint64_t v145 = v122;
        if (v122)
        {
          uint64_t v27 = v136;
          goto LABEL_135;
        }
        if (v121 < v118) {
          goto LABEL_138;
        }
        if (v74 > *((void *)v115 + 2)) {
          goto LABEL_139;
        }
        *(void *)v117 = v118;
        *(void *)&v119[16 * v113 + 8] = v121;
        unint64_t v123 = *((void *)v115 + 2);
        if (v74 >= v123) {
          goto LABEL_140;
        }
        v72 = v119;
        uint64_t v29 = v115;
        unint64_t v30 = v123 - 1;
        memmove(v120, v120 + 16, 16 * (v123 - 1 - v74));
        *((void *)v115 + 2) = v123 - 1;
        Swift::Int v28 = v114;
        if (v123 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v30 = 1;
LABEL_14:
    Swift::Int v25 = v153[1];
    uint64_t v27 = v136;
    uint64_t v2 = v145;
    if (v28 >= v25) {
      goto LABEL_124;
    }
  }
  ++v28;
LABEL_49:
  v53 = v148;
  if (v28 >= v25) {
    goto LABEL_74;
  }
LABEL_50:
  if (__OFSUB__(v28, v31)) {
    goto LABEL_157;
  }
  if (v28 - v31 >= v133) {
    goto LABEL_74;
  }
  if (__OFADD__(v31, v133)) {
    goto LABEL_160;
  }
  if (v31 + v133 >= v25) {
    Swift::Int v56 = v25;
  }
  else {
    Swift::Int v56 = v31 + v133;
  }
  if (v56 >= v31)
  {
    if (v28 != v56)
    {
      v135 = v29;
      uint64_t v145 = v2;
      uint64_t v57 = *(void *)(v144 + 72);
      uint64_t v152 = v57 * (v28 - 1);
      uint64_t v149 = v57;
      Swift::Int v58 = v28 * v57;
      Swift::Int v139 = v56;
      do
      {
        uint64_t v60 = 0;
        Swift::Int v61 = v31;
        Swift::Int v150 = v28;
        while (1)
        {
          uint64_t v62 = *v153;
          Swift::Int v63 = v58;
          uint64_t v64 = v58 + v60 + *v153;
          uint64_t v65 = v147;
          sub_100006AB0(v64, (uint64_t)v147, &qword_1006B2C20);
          sub_100006AB0(v152 + v60 + v62, (uint64_t)v53, &qword_1006B2C20);
          if (*v65 == *v53 && v65[1] == v53[1]) {
            break;
          }
          char v67 = _stringCompareWithSmolCheck(_:_:expecting:)();
          sub_100003F10((uint64_t)v53, &qword_1006B2C20);
          sub_100003F10((uint64_t)v65, &qword_1006B2C20);
          if ((v67 & 1) == 0) {
            goto LABEL_60;
          }
          uint64_t v68 = *v153;
          if (!*v153) {
            goto LABEL_162;
          }
          Swift::Int v58 = v63;
          uint64_t v69 = v68 + v152 + v60;
          sub_100067E48(v68 + v63 + v60, v151, &qword_1006B2C20);
          swift_arrayInitWithTakeFrontToBack();
          sub_100067E48(v151, v69, &qword_1006B2C20);
          Swift::Int v59 = v150;
          v60 -= v149;
          ++v61;
          v53 = v148;
          if (v150 == v61) {
            goto LABEL_61;
          }
        }
        sub_100003F10((uint64_t)v53, &qword_1006B2C20);
        sub_100003F10((uint64_t)v65, &qword_1006B2C20);
LABEL_60:
        Swift::Int v59 = v150;
        Swift::Int v58 = v63;
LABEL_61:
        Swift::Int v28 = v59 + 1;
        v152 += v149;
        v58 += v149;
        Swift::Int v31 = v141;
      }
      while (v28 != v139);
      Swift::Int v28 = v139;
      uint64_t v2 = v145;
      uint64_t v29 = v135;
    }
    goto LABEL_74;
  }
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100217CDC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = a1;
  uint64_t v32 = sub_10005D034(&qword_1006B2C20);
  uint64_t v7 = __chkstk_darwin(v32);
  uint64_t v36 = (uint64_t)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (uint64_t *)((char *)&v29 - v10);
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v15 = (uint64_t *)((char *)&v29 - v14);
  uint64_t v35 = a3;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v38 = v16 * (v35 - 1);
    uint64_t v33 = (char *)&v29 - v14;
    uint64_t v34 = v16;
    uint64_t v37 = v16 * v35;
    uint64_t v17 = &qword_1006B2C20;
LABEL_6:
    uint64_t v18 = 0;
    uint64_t v19 = v31;
    while (1)
    {
      uint64_t v20 = *a4;
      sub_100006AB0(v37 + v18 + *a4, (uint64_t)v15, v17);
      sub_100006AB0(v38 + v18 + v20, (uint64_t)v11, v17);
      if (*v15 == *v11 && v15[1] == v11[1])
      {
        sub_100003F10((uint64_t)v11, v17);
        uint64_t result = sub_100003F10((uint64_t)v15, v17);
LABEL_5:
        v38 += v34;
        v37 += v34;
        if (++v35 == v30) {
          return result;
        }
        goto LABEL_6;
      }
      char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_100003F10((uint64_t)v11, v17);
      uint64_t result = sub_100003F10((uint64_t)v15, v17);
      if ((v22 & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v23 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v24 = v11;
      Swift::Int v25 = v17;
      uint64_t v26 = a4;
      uint64_t v27 = v23 + v38 + v18;
      Swift::Int v28 = v25;
      sub_100067E48(v23 + v37 + v18, v36, v25);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_100067E48(v36, v27, v28);
      v18 -= v34;
      ++v19;
      a4 = v26;
      uint64_t v17 = v28;
      uint64_t v11 = v24;
      uint64_t v15 = v33;
      if (v35 == v19) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100217F94(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v44 = sub_10005D034(&qword_1006B2C20);
  uint64_t v8 = __chkstk_darwin(v44);
  unint64_t v46 = (unint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  v45 = (uint64_t *)((char *)&v43 - v11);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (uint64_t *)((char *)&v43 - v13);
  __chkstk_darwin(v12);
  uint64_t v16 = (uint64_t *)((char *)&v43 - v15);
  uint64_t v18 = *(void *)(v17 + 72);
  if (!v18)
  {
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  uint64_t v19 = v18;
  if (a2 - a1 == 0x8000000000000000 && v18 == -1) {
    goto LABEL_72;
  }
  int64_t v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v18 == -1) {
    goto LABEL_73;
  }
  uint64_t v21 = (uint64_t)(a2 - a1) / v18;
  unint64_t v49 = a1;
  unint64_t v48 = a4;
  uint64_t v22 = v20 / v18;
  if (v21 >= v20 / v19)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      uint64_t v24 = v22 * v19;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v31 = a4 + v24;
      unint64_t v47 = a4 + v24;
      unint64_t v49 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        uint64_t v33 = -v19;
        do
        {
          unint64_t v34 = a1;
          uint64_t v35 = v45;
          sub_100006AB0(v31 + v33, (uint64_t)v45, &qword_1006B2C20);
          unint64_t v36 = a2 + v33;
          uint64_t v37 = (void *)v46;
          sub_100006AB0(a2 + v33, v46, &qword_1006B2C20);
          if (*v35 == *v37 && v35[1] == v37[1]) {
            char v39 = 0;
          }
          else {
            char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
          }
          unint64_t v40 = a3 + v33;
          sub_100003F10(v46, &qword_1006B2C20);
          sub_100003F10((uint64_t)v45, &qword_1006B2C20);
          if (v39)
          {
            if (a3 < a2 || v40 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v34;
            }
            else
            {
              a1 = v34;
              if (a3 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v49 += v33;
          }
          else
          {
            unint64_t v41 = v47;
            v47 += v33;
            if (a3 < v41 || v40 >= v41)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v36 = a2;
              a1 = v34;
            }
            else
            {
              a1 = v34;
              if (a3 != v41) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v36 = a2;
            }
          }
          unint64_t v31 = v47;
          if (v47 <= a4) {
            break;
          }
          a2 = v36;
          a3 += v33;
        }
        while (v36 > a1);
      }
LABEL_70:
      sub_1002684F8(&v49, &v48, (uint64_t *)&v47);
      return 1;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    uint64_t v23 = v21 * v19;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v46 = a4 + v23;
    unint64_t v47 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      while (1)
      {
        sub_100006AB0(a2, (uint64_t)v16, &qword_1006B2C20);
        sub_100006AB0(a4, (uint64_t)v14, &qword_1006B2C20);
        if (*v16 == *v14 && v16[1] == v14[1]) {
          break;
        }
        char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_100003F10((uint64_t)v14, &qword_1006B2C20);
        sub_100003F10((uint64_t)v16, &qword_1006B2C20);
        if ((v27 & 1) == 0) {
          goto LABEL_32;
        }
        unint64_t v28 = v49;
        unint64_t v29 = a2 + v19;
        if (v49 < a2 || v49 >= v29)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v49 == a2)
        {
          unint64_t v28 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_38:
        unint64_t v49 = v28 + v19;
        a4 = v48;
        if (v48 < v46)
        {
          a2 = v29;
          if (v29 < a3) {
            continue;
          }
        }
        goto LABEL_70;
      }
      sub_100003F10((uint64_t)v14, &qword_1006B2C20);
      sub_100003F10((uint64_t)v16, &qword_1006B2C20);
LABEL_32:
      unint64_t v28 = v49;
      unint64_t v30 = v48 + v19;
      if (v49 < v48 || v49 >= v30)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v49 != v48)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v48 = v30;
      unint64_t v29 = a2;
      goto LABEL_38;
    }
    goto LABEL_70;
  }
LABEL_74:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002184F4(uint64_t a1)
{
  uint64_t v3 = sub_10005D034(&qword_1006B5E68);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMIPPlaySoundChannels();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v25 - v12;
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v25 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  uint64_t v28 = v7 + 16;
  int64_t v26 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v27 = v7 + 32;
  uint64_t v18 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v21 = v20 | (v19 << 6);
      goto LABEL_6;
    }
    int64_t v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v26) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v25 + 8 * v22);
    ++v19;
    if (!v23)
    {
      int64_t v19 = v22 + 1;
      if (v22 + 1 >= v26) {
        return swift_release();
      }
      unint64_t v23 = *(void *)(v25 + 8 * v19);
      if (!v23)
      {
        int64_t v19 = v22 + 2;
        if (v22 + 2 >= v26) {
          return swift_release();
        }
        unint64_t v23 = *(void *)(v25 + 8 * v19);
        if (!v23)
        {
          int64_t v19 = v22 + 3;
          if (v22 + 3 >= v26) {
            return swift_release();
          }
          unint64_t v23 = *(void *)(v25 + 8 * v19);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_6:
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v13, *(void *)(v18 + 48) + *(void *)(v7 + 72) * v21, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v13, v6);
    sub_10021A3CC((uint64_t)v10, (uint64_t)v5);
    sub_100003F10((uint64_t)v5, &qword_1006B5E68);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v26) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v25 + 8 * v24);
  if (v23)
  {
    int64_t v19 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v19 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v19 >= v26) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v25 + 8 * v19);
    ++v24;
    if (v23) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_100218800(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPPlaySoundChannels();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v35 = (char *)&v30 - v9;
  if (*(void *)(a2 + 16))
  {
    uint64_t v36 = a1;
    unint64_t v10 = *(void *)(a1 + 16);
    swift_bridgeObjectRetain();
    if (v10)
    {
      unint64_t v11 = 0;
      uint64_t v33 = v5 + 16;
      unint64_t v34 = (char *)(a2 + 56);
      uint64_t v12 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v31 = v5;
      uint64_t v32 = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      while (1)
      {
        if (v11 >= v10) {
          __break(1u);
        }
        uint64_t v13 = *(void *)(v5 + 72);
        unint64_t v14 = a1
            + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
            + v13 * v11;
        unint64_t v37 = v11 + 1;
        uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
        v15(v35, v14, v4);
        sub_10021E398(&qword_1006B36E0, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
        uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
        uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v18 = v16 & ~v17;
        if ((*(void *)&v34[(v18 >> 3) & 0xFFFFFFFFFFFFFF8] >> v18)) {
          break;
        }
        int64_t v22 = *v12;
LABEL_11:
        v22(v35, v4);
        a1 = v36;
        unint64_t v11 = v37;
        unint64_t v10 = *(void *)(v36 + 16);
        if (v37 == v10) {
          goto LABEL_12;
        }
      }
      uint64_t v19 = a2;
      uint64_t v20 = ~v17;
      while (1)
      {
        v15(v8, *(void *)(v19 + 48) + v18 * v13, v4);
        sub_10021E398(&qword_1006B36E8, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
        char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
        int64_t v22 = *v12;
        (*v12)(v8, v4);
        if (v21) {
          break;
        }
        unint64_t v18 = (v18 + 1) & v20;
        if (((*(void *)&v34[(v18 >> 3) & 0xFFFFFFFFFFFFFF8] >> v18) & 1) == 0)
        {
          a2 = v19;
          uint64_t v5 = v31;
          goto LABEL_11;
        }
      }
      uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v22)(v35, v4);
      char v24 = *(unsigned char *)(v19 + 32);
      unint64_t v25 = (unint64_t)((1 << v24) + 63) >> 6;
      size_t v26 = 8 * v25;
      if ((v24 & 0x3Fu) <= 0xD
        || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
      {
        __chkstk_darwin(isStackAllocationSafe);
        memcpy((char *)&v30 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0), v34, v26);
        uint64_t v27 = sub_100219338((unint64_t *)((char *)&v30 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0)), v25, v19, v18, &v36);
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v28 = (void *)swift_slowAlloc();
        memcpy(v28, v34, v26);
        uint64_t v27 = sub_100219338((unint64_t *)v28, v25, v19, v18, &v36);
        swift_release();
        swift_bridgeObjectRelease();
        swift_slowDealloc();
      }
      return v27;
    }
    else
    {
LABEL_12:
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  return (void *)a2;
}

void *sub_100218C74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034(&qword_1006B5E68);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMIPPlaySoundChannels();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  Swift::Int v59 = (char *)&v49 - v12;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = ~v13;
  uint64_t v15 = a1 + 56;
  uint64_t v16 = -v13;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & *(void *)(a1 + 56);
  uint64_t v60 = a1;
  uint64_t v61 = a1 + 56;
  uint64_t v54 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  unint64_t v55 = v6;
  uint64_t v62 = v14;
  uint64_t v63 = 0;
  unint64_t v64 = v18;
  v53 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  Swift::Int v51 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v57 = v8 + 16;
  Swift::Int v58 = (char *)(a2 + 56);
  uint64_t v19 = (void (**)(char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v56 = v8;
  uint64_t v52 = a2;
  uint64_t v50 = 0;
  if (!v18) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v21 = (v18 - 1) & v18;
  unint64_t v22 = __clz(__rbit64(v18)) | (v20 << 6);
  int64_t v23 = v20;
LABEL_7:
  unint64_t v24 = *(void *)(a1 + 48) + *(void *)(v8 + 72) * v22;
  unint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v26 = (uint64_t)v55;
  v25(v55, v24, v7);
  uint64_t v27 = 0;
  while (1)
  {
    (*v54)(v26, v27, 1, v7);
    uint64_t v60 = a1;
    uint64_t v61 = v15;
    uint64_t v62 = v14;
    uint64_t v63 = v23;
    unint64_t v64 = v21;
    if ((*v53)(v26, 1, v7) == 1)
    {
      sub_1000814B8();
      sub_100003F10(v26, &qword_1006B5E68);
      return (void *)v52;
    }
    (*v51)(v59, v26, v7);
    uint64_t v31 = v52;
    sub_10021E398(&qword_1006B36E0, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
    uint64_t v32 = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v33 = -1 << *(unsigned char *)(v31 + 32);
    unint64_t v34 = v32 & ~v33;
    if ((*(void *)&v58[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34)) {
      break;
    }
    unint64_t v40 = *v19;
    uint64_t v8 = v56;
LABEL_35:
    v40(v59, v7);
    int64_t v20 = v63;
    unint64_t v18 = v64;
    a1 = v60;
    uint64_t v15 = v61;
    uint64_t v14 = v62;
    uint64_t v50 = v63;
    if (v64) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v23 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      __break(1u);
    }
    int64_t v28 = (unint64_t)(v14 + 64) >> 6;
    if (v23 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v23);
    if (v29) {
      goto LABEL_11;
    }
    v20 += 2;
    if (v23 + 1 >= v28) {
      goto LABEL_37;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v20);
    if (v29) {
      goto LABEL_14;
    }
    if (v23 + 2 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * (v23 + 2));
    if (v29)
    {
      v23 += 2;
      goto LABEL_11;
    }
    int64_t v20 = v23 + 3;
    if (v23 + 3 < v28)
    {
      unint64_t v29 = *(void *)(v15 + 8 * v20);
      if (v29)
      {
LABEL_14:
        int64_t v23 = v20;
LABEL_11:
        uint64_t v21 = (v29 - 1) & v29;
        unint64_t v22 = __clz(__rbit64(v29)) + (v23 << 6);
        goto LABEL_7;
      }
      v23 += 4;
      if (v23 >= v28)
      {
LABEL_26:
        uint64_t v21 = 0;
        uint64_t v27 = 1;
        int64_t v23 = v20;
        goto LABEL_27;
      }
      unint64_t v29 = *(void *)(v15 + 8 * v23);
      if (v29) {
        goto LABEL_11;
      }
      int64_t v23 = v28 - 1;
      uint64_t v30 = v50 + 6;
      while (v28 != v30)
      {
        unint64_t v29 = *(void *)(v15 + 8 * v30++);
        if (v29)
        {
          int64_t v23 = v30 - 1;
          goto LABEL_11;
        }
      }
LABEL_37:
      uint64_t v21 = 0;
      uint64_t v27 = 1;
      goto LABEL_27;
    }
    uint64_t v21 = 0;
    uint64_t v27 = 1;
    v23 += 2;
LABEL_27:
    uint64_t v26 = (uint64_t)v55;
  }
  uint64_t v50 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v35 = v31;
  uint64_t v36 = ~v33;
  uint64_t v37 = *(void *)(v56 + 72);
  uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v56 + 16);
  while (1)
  {
    v38(v11, *(void *)(v35 + 48) + v37 * v34, v7);
    sub_10021E398(&qword_1006B36E8, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
    char v39 = dispatch thunk of static Equatable.== infix(_:_:)();
    unint64_t v40 = *v19;
    (*v19)(v11, v7);
    if (v39) {
      break;
    }
    unint64_t v34 = (v34 + 1) & v36;
    if (((*(void *)&v58[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34) & 1) == 0)
    {
      uint64_t v8 = v56;
      goto LABEL_35;
    }
  }
  uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v40)(v59, v7);
  char v42 = *(unsigned char *)(v35 + 32);
  unint64_t v43 = (unint64_t)((1 << v42) + 63) >> 6;
  size_t v44 = 8 * v43;
  if ((v42 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe);
    memcpy((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0), v58, v44);
    v45 = sub_100219730((unint64_t *)((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0)), v43, v35, v34, &v60);
    swift_release();
    sub_1000814B8();
    return v45;
  }
  else
  {
    unint64_t v47 = (void *)swift_slowAlloc();
    memcpy(v47, v58, v44);
    unint64_t v48 = sub_100219730((unint64_t *)v47, v43, v35, v34, &v60);
    swift_release();
    sub_1000814B8();
    swift_slowDealloc();
    return v48;
  }
}

void *sub_100219338(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v10 = type metadata accessor for FMIPPlaySoundChannels();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t result = (void *)__chkstk_darwin(v14);
  uint64_t v19 = (char *)&v44 - v18;
  uint64_t v20 = *(void *)(a3 + 16);
  uint64_t v21 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v22 = *(unint64_t *)((char *)a1 + v21);
  v45 = a1;
  *(unint64_t *)((char *)a1 + v21) = v22 & ((-1 << a4) - 1);
  uint64_t v23 = v20 - 1;
  uint64_t v24 = *a5;
  unint64_t v25 = a5[1];
  unint64_t v26 = *(void *)(*a5 + 16);
  uint64_t v44 = a2;
  uint64_t v46 = v23;
  if (v25 == v26)
  {
    uint64_t v27 = a3;
LABEL_3:
    swift_retain();
    return (void *)sub_100219CB4(v45, v44, v46, v27);
  }
  else
  {
    unint64_t v55 = v19;
    uint64_t v54 = v16 + 16;
    uint64_t v49 = v16 + 32;
    uint64_t v50 = v17;
    uint64_t v51 = v16;
    uint64_t v52 = a3 + 56;
    int64_t v28 = (void (**)(char *, uint64_t))(v16 + 8);
    uint64_t v27 = a3;
    unint64_t v29 = a5;
    unint64_t v47 = a5;
    while (v25 < v26)
    {
      uint64_t v32 = v50;
      uint64_t v31 = v51;
      uint64_t v33 = *(unsigned __int8 *)(v51 + 80);
      uint64_t v53 = *(void *)(v51 + 72);
      unint64_t v34 = *(void (**)(uint64_t, unint64_t, uint64_t))(v51 + 16);
      v34(v50, v24 + ((v33 + 32) & ~v33) + v53 * v25, v10);
      v29[1] = v25 + 1;
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v55, v32, v10);
      sub_10021E398(&qword_1006B36E0, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
      uint64_t v35 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v36 = -1 << *(unsigned char *)(v27 + 32);
      unint64_t v37 = v35 & ~v36;
      if ((*(void *)(v52 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37))
      {
        uint64_t v48 = (unint64_t)v28 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        uint64_t v38 = v27;
        uint64_t v39 = ~v36;
        while (1)
        {
          v34((uint64_t)v13, *(void *)(v38 + 48) + v37 * v53, v10);
          sub_10021E398(&qword_1006B36E8, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
          char v40 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v30 = *v28;
          (*v28)(v13, v10);
          if (v40) {
            break;
          }
          unint64_t v37 = (v37 + 1) & v39;
          if (((*(void *)(v52 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
          {
            uint64_t v27 = v38;
            unint64_t v29 = v47;
            goto LABEL_7;
          }
        }
        uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v30)(v55, v10);
        uint64_t v41 = (v37 >> 3) & 0x1FFFFFFFFFFFFFF8;
        uint64_t v42 = *(unint64_t *)((char *)v45 + v41);
        *(unint64_t *)((char *)v45 + v41) = v42 & ~(1 << v37);
        if ((v42 & (1 << v37)) != 0)
        {
          uint64_t v43 = v46 - 1;
          if (__OFSUB__(v46, 1)) {
            goto LABEL_21;
          }
          uint64_t v27 = v38;
          unint64_t v29 = v47;
          --v46;
          if (!v43) {
            return &_swiftEmptySetSingleton;
          }
        }
        else
        {
          uint64_t v27 = v38;
          unint64_t v29 = v47;
        }
      }
      else
      {
        uint64_t v30 = *v28;
LABEL_7:
        uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v30)(v55, v10);
      }
      uint64_t v24 = *v29;
      unint64_t v25 = v29[1];
      unint64_t v26 = *(void *)(*v29 + 16);
      if (v25 == v26) {
        goto LABEL_3;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
  }
  return result;
}

void *sub_100219730(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v52 = a2;
  uint64_t v9 = sub_10005D034(&qword_1006B5E68);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FMIPPlaySoundChannels();
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (void *)__chkstk_darwin(v13);
  uint64_t v65 = (char *)&v52 - v17;
  uint64_t v18 = *(void *)(a3 + 16);
  uint64_t v19 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v20 = *(unint64_t *)((char *)a1 + v19);
  uint64_t v54 = a1;
  unint64_t v55 = v11;
  *(unint64_t *)((char *)a1 + v19) = v20 & ((-1 << a4) - 1);
  uint64_t v22 = v21;
  uint64_t v23 = v18 - 1;
  uint64_t v63 = v21 + 16;
  uint64_t v64 = a3;
  Swift::Int v58 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  Swift::Int v59 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v56 = a5;
  uint64_t v57 = (void (**)(char *, char *, uint64_t))(v21 + 32);
  uint64_t v62 = a3 + 56;
  uint64_t v24 = (void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v60 = v21;
  while (2)
  {
    uint64_t v53 = v23;
    do
    {
      while (1)
      {
        uint64_t v26 = *a5;
        uint64_t v27 = a5[1];
        uint64_t v29 = a5[2];
        int64_t v28 = a5[3];
        unint64_t v30 = a5[4];
        if (v30)
        {
          uint64_t v61 = (v30 - 1) & v30;
          unint64_t v31 = __clz(__rbit64(v30)) | (v28 << 6);
LABEL_7:
          unint64_t v32 = *(void *)(v26 + 48) + *(void *)(v22 + 72) * v31;
          uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
          uint64_t v34 = v26;
          v33(v11, v32, v12);
          uint64_t v35 = 0;
          goto LABEL_8;
        }
        int64_t v44 = v28 + 1;
        if (__OFADD__(v28, 1))
        {
          __break(1u);
          goto LABEL_44;
        }
        int64_t v45 = (unint64_t)(v29 + 64) >> 6;
        if (v44 >= v45)
        {
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          uint64_t v34 = v26;
          goto LABEL_8;
        }
        unint64_t v46 = *(void *)(v27 + 8 * v44);
        if (v46) {
          goto LABEL_17;
        }
        int64_t v49 = v28 + 2;
        if (v28 + 2 >= v45) {
          goto LABEL_35;
        }
        unint64_t v46 = *(void *)(v27 + 8 * v49);
        if (v46) {
          goto LABEL_23;
        }
        if (v28 + 3 >= v45) {
          goto LABEL_36;
        }
        unint64_t v46 = *(void *)(v27 + 8 * (v28 + 3));
        if (v46)
        {
          int64_t v44 = v28 + 3;
          goto LABEL_17;
        }
        int64_t v49 = v28 + 4;
        if (v28 + 4 < v45)
        {
          unint64_t v46 = *(void *)(v27 + 8 * v49);
          if (v46)
          {
LABEL_23:
            int64_t v44 = v49;
LABEL_17:
            uint64_t v61 = (v46 - 1) & v46;
            unint64_t v31 = __clz(__rbit64(v46)) + (v44 << 6);
            int64_t v28 = v44;
            goto LABEL_7;
          }
          int64_t v44 = v28 + 5;
          if (v28 + 5 < v45)
          {
            unint64_t v46 = *(void *)(v27 + 8 * v44);
            if (v46) {
              goto LABEL_17;
            }
            int64_t v44 = v45 - 1;
            int64_t v50 = v28 + 6;
            while (v45 != v50)
            {
              unint64_t v46 = *(void *)(v27 + 8 * v50++);
              if (v46)
              {
                int64_t v44 = v50 - 1;
                goto LABEL_17;
              }
            }
LABEL_35:
            uint64_t v61 = 0;
            uint64_t v35 = 1;
            int64_t v28 = v44;
            uint64_t v34 = v26;
            goto LABEL_8;
          }
LABEL_36:
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          int64_t v28 = v49;
          uint64_t v34 = v26;
          goto LABEL_8;
        }
        uint64_t v61 = 0;
        uint64_t v35 = 1;
        v28 += 3;
        uint64_t v34 = v26;
LABEL_8:
        (*v59)(v11, v35, 1, v12);
        *a5 = v34;
        a5[1] = v27;
        a5[2] = v29;
        a5[3] = v28;
        a5[4] = v61;
        if ((*v58)(v11, 1, v12) == 1)
        {
          sub_100003F10((uint64_t)v11, &qword_1006B5E68);
          uint64_t v51 = v64;
          swift_retain();
          return (void *)sub_100219CB4(v54, v52, v53, v51);
        }
        (*v57)(v65, v11, v12);
        uint64_t v36 = v64;
        sub_10021E398(&qword_1006B36E0, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
        uint64_t v37 = dispatch thunk of Hashable._rawHashValue(seed:)();
        uint64_t v38 = -1 << *(unsigned char *)(v36 + 32);
        unint64_t v39 = v37 & ~v38;
        if ((*(void *)(v62 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39)) {
          break;
        }
        unint64_t v25 = *v24;
        uint64_t v22 = v60;
LABEL_4:
        uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v25)(v65, v12);
      }
      uint64_t v61 = (unint64_t)v24 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v40 = ~v38;
      uint64_t v41 = *(void *)(v60 + 72);
      uint64_t v42 = *(void (**)(char *, unint64_t, uint64_t))(v60 + 16);
      while (1)
      {
        v42(v15, *(void *)(v64 + 48) + v41 * v39, v12);
        sub_10021E398(&qword_1006B36E8, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
        char v43 = dispatch thunk of static Equatable.== infix(_:_:)();
        unint64_t v25 = *v24;
        (*v24)(v15, v12);
        if (v43) {
          break;
        }
        unint64_t v39 = (v39 + 1) & v40;
        if (((*(void *)(v62 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
        {
          uint64_t v11 = v55;
          a5 = v56;
          uint64_t v22 = v60;
          goto LABEL_4;
        }
      }
      uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v25)(v65, v12);
      uint64_t v47 = (v39 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v11 = v55;
      uint64_t v48 = *(unint64_t *)((char *)v54 + v47);
      *(unint64_t *)((char *)v54 + v47) = v48 & ~(1 << v39);
      a5 = v56;
      uint64_t v22 = v60;
    }
    while ((v48 & (1 << v39)) == 0);
    uint64_t v23 = v53 - 1;
    if (__OFSUB__(v53, 1))
    {
LABEL_44:
      __break(1u);
      return result;
    }
    if (v53 != 1) {
      continue;
    }
    return &_swiftEmptySetSingleton;
  }
}

uint64_t sub_100219CB4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = type metadata accessor for FMIPPlaySoundChannels();
  uint64_t v37 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_10005D034(&qword_1006B5E70);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_10021E398(&qword_1006B36E0, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10021A040(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = type metadata accessor for FMIPItem();
  uint64_t v37 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_10005D034(&qword_1006B5E38);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_10021E398(&qword_1006B1180, (void (*)(uint64_t))&type metadata accessor for FMIPItem);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10021A3CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for FMIPPlaySoundChannels();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_10021E398(&qword_1006B36E0, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    unint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    unint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    uint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_10021E398(&qword_1006B36E8, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    *uint64_t v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100260B38();
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_10021A6AC(v12);
    *uint64_t v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_10021A6AC(int64_t a1)
{
  uint64_t v3 = type metadata accessor for FMIPPlaySoundChannels();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v31 = v1;
    uint64_t v11 = ~v9;
    uint64_t v35 = result;
    swift_retain();
    uint64_t v12 = _HashTable.previousHole(before:)();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v33 = (v12 + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v13 = v4 + 16;
      uint64_t v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      unint64_t v16 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v35;
      do
      {
        uint64_t v18 = v8;
        uint64_t v19 = v15;
        int64_t v20 = v15 * v10;
        v32(v6, *(void *)(v17 + 48) + v15 * v10, v3);
        sub_10021E398(&qword_1006B36E0, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
        uint64_t v21 = dispatch thunk of Hashable._rawHashValue(seed:)();
        (*v16)(v6, v3);
        unint64_t v22 = v21 & v11;
        if (a1 >= (uint64_t)v33)
        {
          if (v22 < v33 || a1 < (uint64_t)v22)
          {
LABEL_4:
            uint64_t v8 = v18;
            uint64_t v15 = v19;
            uint64_t v17 = v35;
            goto LABEL_5;
          }
        }
        else if (v22 < v33 && a1 < (uint64_t)v22)
        {
          goto LABEL_4;
        }
        uint64_t v17 = v35;
        int64_t v25 = v19 * a1;
        uint64_t v8 = v18;
        if (v19 * a1 < v20
          || (uint64_t v15 = v19, *(void *)(v35 + 48) + v19 * a1 >= (unint64_t)(*(void *)(v35 + 48) + v20 + v19)))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_21;
        }
        a1 = v10;
        if (v25 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_21:
          uint64_t v17 = v35;
          uint64_t v15 = v19;
          a1 = v10;
        }
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v31;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v1;
  uint64_t v27 = *(void *)(*v1 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
  return result;
}

uint64_t sub_10021A9C8(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_10021AB2C((unint64_t *)((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v6 = sub_10021AB2C((unint64_t *)v7, v4, v2);
    swift_release();
    swift_slowDealloc();
  }
  return v6;
}

uint64_t sub_10021AB2C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v36 = a2;
  uint64_t v37 = a1;
  uint64_t v49 = type metadata accessor for FMItemCapabilities();
  uint64_t v4 = *(void *)(v49 - 8);
  uint64_t v5 = __chkstk_darwin(v49);
  uint64_t v48 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v47 = (char *)&v36 - v7;
  uint64_t v46 = type metadata accessor for FMIPItem();
  uint64_t result = __chkstk_darwin(v46);
  int64_t v44 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = 0;
  uint64_t v51 = a3;
  uint64_t v14 = *(void *)(a3 + 56);
  uint64_t v13 = a3 + 56;
  uint64_t v12 = v14;
  uint64_t v15 = 1 << *(unsigned char *)(v13 - 24);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v12;
  uint64_t v38 = 0;
  int64_t v39 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v42 = v4 + 8;
  uint64_t v43 = v9 + 16;
  uint64_t v45 = v9;
  uint64_t v40 = v13;
  uint64_t v41 = v9 + 8;
  uint64_t v18 = v9;
  uint64_t v19 = v44;
  uint64_t v20 = v46;
  uint64_t v21 = v47;
  unint64_t v22 = v48;
  uint64_t v23 = v49;
  unint64_t v24 = (void (**)(char *, uint64_t))(v4 + 8);
  while (1)
  {
    if (v17)
    {
      uint64_t v52 = (v17 - 1) & v17;
      int64_t v53 = v11;
      unint64_t v25 = __clz(__rbit64(v17)) | (v11 << 6);
      goto LABEL_5;
    }
    int64_t v30 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v30 >= v39) {
      goto LABEL_22;
    }
    unint64_t v31 = *(void *)(v40 + 8 * v30);
    int64_t v32 = v11 + 1;
    if (!v31)
    {
      int64_t v32 = v11 + 2;
      if (v11 + 2 >= v39) {
        goto LABEL_22;
      }
      unint64_t v31 = *(void *)(v40 + 8 * v32);
      if (!v31) {
        break;
      }
    }
LABEL_18:
    uint64_t v52 = (v31 - 1) & v31;
    int64_t v53 = v32;
    unint64_t v25 = __clz(__rbit64(v31)) + (v32 << 6);
LABEL_5:
    uint64_t v26 = *(void *)(v51 + 48);
    uint64_t v27 = *(void *)(v18 + 72);
    unint64_t v50 = v25;
    (*(void (**)(char *, unint64_t, uint64_t))(v18 + 16))(v19, v26 + v27 * v25, v20);
    FMIPItem.capabilities.getter();
    static FMItemCapabilities.canBTFinding.getter();
    sub_10021E398((unint64_t *)&qword_1006B1128, (void (*)(uint64_t))&type metadata accessor for FMItemCapabilities);
    char v28 = dispatch thunk of SetAlgebra.isSuperset(of:)();
    uint64_t v29 = *v24;
    (*v24)(v22, v23);
    v29(v21, v23);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v19, v20);
    int64_t v11 = v53;
    unint64_t v17 = v52;
    if (v28)
    {
      *(unint64_t *)((char *)v37 + ((v50 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v50;
      if (__OFADD__(v38++, 1))
      {
        __break(1u);
LABEL_22:
        uint64_t v35 = v51;
        swift_retain();
        return sub_10021A040(v37, v36, v38, v35);
      }
    }
  }
  uint64_t v33 = v11 + 3;
  if (v11 + 3 >= v39) {
    goto LABEL_22;
  }
  unint64_t v31 = *(void *)(v40 + 8 * v33);
  if (v31)
  {
    int64_t v32 = v11 + 3;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v32 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v32 >= v39) {
      goto LABEL_22;
    }
    unint64_t v31 = *(void *)(v40 + 8 * v32);
    ++v33;
    if (v31) {
      goto LABEL_18;
    }
  }
LABEL_24:
  __break(1u);
  return result;
}

int64_t sub_10021AEF4(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10021AFD8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10021B010(uint64_t a1, uint64_t a2)
{
  sub_100216AD4(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), "FMDeviceDetailContentViewController: Finding action STOP succeeded for identifier: %s", "FMDeviceDetailContentViewController: Finding action STOP failed with error %@");
}

void sub_10021B03C(uint64_t a1, uint64_t a2)
{
  sub_100216AD4(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), "FMDeviceDetailContentViewController: Finding action START succeeded for identifier: %s", "FMDeviceDetailContentViewController: Finding action START failed with error %@");
}

void sub_10021B068(int a1)
{
  int v31 = a1;
  uint64_t v2 = sub_10005D034(&qword_1006B2AF0);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FMIPDevice();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v5);
  int64_t v30 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  int64_t v32 = (char *)&v29 - v9;
  unint64_t v10 = (uint64_t *)(*(void *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
                  + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel);
  swift_beginAccess();
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v13 = FMIPManager.devices.getter();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1004DC53C(v13, v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)v14 + 2))
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, &v14[(*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)], v5);
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v15 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, v15, 1, v5);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100003F10((uint64_t)v4, &qword_1006B2AF0);
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_1000606BC(v16, (uint64_t)qword_1006D1E98);
    unint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "FMDeviceDetailContentViewController: cannot enable notify me for unknown device", v19, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v29(v32, v4, v5);
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_1000606BC(v20, (uint64_t)qword_1006D1E98);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "FMDeviceDetailContentViewController: Notify Me button toggled", v23, 2u);
      swift_slowDealloc();
    }

    uint64_t v24 = swift_allocObject();
    swift_unknownObjectWeakInit();
    unint64_t v25 = v30;
    uint64_t v26 = v32;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v30, v32, v5);
    unint64_t v27 = (*(unsigned __int8 *)(v6 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v24;
    *(unsigned char *)(v28 + 24) = v31 & 1;
    v29((char *)(v28 + v27), v25, v5);
    sub_1000B6D08((uint64_t)sub_100223448, v28, 0, 0);
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v26, v5);
  }
}

void *sub_10021B554()
{
  uint64_t v0 = type metadata accessor for FMIPPlaySoundChannels();
  uint64_t v269 = *(void *)(v0 - 8);
  uint64_t v1 = __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v233 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v268 = (uint64_t)&v233 - v4;
  uint64_t v5 = type metadata accessor for FMIPItemState();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  v252 = (char *)&v233 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  v251 = (char *)&v233 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  v257 = (char *)&v233 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  v249 = (char *)&v233 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  v248 = (char *)&v233 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  v247 = (char *)&v233 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  v246 = (char *)&v233 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  v245 = (char *)&v233 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  v265 = (char *)&v233 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  v236 = (char *)&v233 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  v271 = (char *)&v233 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  v235 = (char *)&v233 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  v264 = (char *)&v233 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  v234 = (char *)&v233 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  v266 = (char *)&v233 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  v233 = (char *)&v233 - v38;
  __chkstk_darwin(v37);
  v258 = (char *)&v233 - v39;
  uint64_t v40 = type metadata accessor for FMIPPartType();
  uint64_t v255 = *(void *)(v40 - 8);
  uint64_t v41 = __chkstk_darwin(v40);
  v240 = (char *)&v233 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v41);
  v239 = (char *)&v233 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  v238 = (char *)&v233 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  v275 = (char *)&v233 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  v274 = (char *)&v233 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  v273 = (char *)&v233 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  unint64_t v55 = (char *)&v233 - v54;
  __chkstk_darwin(v53);
  v272 = (char *)&v233 - v56;
  uint64_t v287 = type metadata accessor for FMIPItem();
  uint64_t v267 = *(void *)(v287 - 8);
  uint64_t v57 = __chkstk_darwin(v287);
  v278 = (char *)&v233 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __chkstk_darwin(v57);
  v277 = (char *)&v233 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  v276 = (char *)&v233 - v62;
  __chkstk_darwin(v61);
  v285 = (char *)&v233 - v63;
  uint64_t v64 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  uint64_t v65 = __chkstk_darwin(v64 - 8);
  uint64_t v244 = (uint64_t)&v233 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __chkstk_darwin(v65);
  uint64_t v243 = (uint64_t)&v233 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  uint64_t v242 = (uint64_t)&v233 - v70;
  uint64_t v71 = __chkstk_darwin(v69);
  uint64_t v241 = (uint64_t)&v233 - v72;
  uint64_t v73 = __chkstk_darwin(v71);
  uint64_t v270 = (uint64_t)&v233 - v74;
  uint64_t v75 = __chkstk_darwin(v73);
  uint64_t v260 = (uint64_t)&v233 - v76;
  uint64_t v77 = __chkstk_darwin(v75);
  uint64_t v262 = (uint64_t)&v233 - v78;
  __chkstk_darwin(v77);
  uint64_t v263 = (uint64_t)&v233 - v79;
  uint64_t v80 = sub_10005D034(&qword_1006B36B0);
  __chkstk_darwin(v80 - 8);
  uint64_t v82 = (char *)&v233 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v250 = FMIPDevice.identifier.getter();
  unint64_t v256 = v83;
  v293 = &_swiftEmptySetSingleton;
  FMIPDevice.itemGroup.getter();
  uint64_t v84 = type metadata accessor for FMIPItemGroup();
  uint64_t v85 = *(void *)(v84 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v82, 1, v84) == 1)
  {
    sub_100003F10((uint64_t)v82, &qword_1006B36B0);
    unint64_t v86 = v256;
    goto LABEL_82;
  }
  uint64_t v279 = v6;
  v259 = v3;
  uint64_t v237 = v5;
  uint64_t v261 = v0;
  uint64_t v87 = FMIPItemGroup.items.getter();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v82, v84);
  uint64_t v88 = *(char **)(v87 + 16);
  uint64_t v89 = v287;
  uint64_t v254 = v87;
  v286 = v88;
  if (v88)
  {
    v283 = *(void (***)(char *, uint64_t))(v267 + 16);
    unint64_t v90 = v87 + ((*(unsigned __int8 *)(v267 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v267 + 80));
    LODWORD(v282) = enum case for FMIPPartType.leftBud(_:);
    uint64_t v91 = (void (**)(char *, void, uint64_t))(v255 + 104);
    v92 = (void (**)(char *, uint64_t))(v255 + 8);
    v284 = (void (*)(char *, unint64_t, uint64_t))(v267 + 16);
    uint64_t v280 = *(void *)(v267 + 72);
    v281 = (void (**)(char *, uint64_t))(v267 + 8);
    swift_bridgeObjectRetain();
    uint64_t v93 = v272;
    uint64_t v94 = v285;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v283)(v94, v90, v89);
      FMIPItem.partType.getter();
      (*v91)(v55, v282, v40);
      sub_10021E398(&qword_1006B5E78, (void (*)(uint64_t))&type metadata accessor for FMIPPartType);
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      if (v291 == v289 && v292 == v290) {
        break;
      }
      char v96 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v97 = *v92;
      (*v92)(v55, v40);
      v97(v93, v40);
      if (v96) {
        goto LABEL_22;
      }
      uint64_t v94 = v285;
      uint64_t v89 = v287;
      (*v281)(v285, v287);
      v90 += v280;
      if (!--v88)
      {
        uint64_t v87 = v254;
        swift_bridgeObjectRelease();
        uint64_t v88 = v286;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease_n();
    Swift::Int v114 = *v92;
    (*v92)(v55, v40);
    v114(v93, v40);
LABEL_22:
    uint64_t v87 = v254;
    swift_bridgeObjectRelease();
    uint64_t v98 = v267;
    uint64_t v115 = v263;
    uint64_t v116 = v287;
    (*(void (**)(uint64_t, char *, uint64_t))(v267 + 32))(v263, v285, v287);
    uint64_t v99 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v98 + 56);
    uint64_t v117 = v115;
    uint64_t v89 = v116;
    v99(v117, 0, 1, v116);
    uint64_t v88 = v286;
    if (!v286) {
      goto LABEL_23;
    }
  }
  else
  {
LABEL_12:
    uint64_t v98 = v267;
    uint64_t v99 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v267 + 56);
    v99(v263, 1, 1, v89);
    if (!v88)
    {
LABEL_23:
      uint64_t v118 = 1;
      v99(v262, 1, 1, v89);
      uint64_t v119 = v237;
      uint64_t v120 = v260;
      uint64_t v121 = v270;
      uint64_t v122 = v98;
      uint64_t v123 = v89;
      goto LABEL_37;
    }
  }
  v253 = v99;
  uint64_t v101 = *(void (**)(char *, unint64_t, uint64_t))(v98 + 16);
  uint64_t v100 = (char *)(v98 + 16);
  v284 = v101;
  unint64_t v102 = v87 + ((v100[64] + 32) & ~(unint64_t)v100[64]);
  LODWORD(v272) = enum case for FMIPPartType.rightBud(_:);
  v282 = (char **)(v255 + 104);
  v283 = (void (**)(char *, uint64_t))(v255 + 8);
  v285 = v100;
  uint64_t v280 = *((void *)v100 + 7);
  v281 = (void (**)(char *, uint64_t))(v100 - 8);
  swift_bridgeObjectRetain();
  unint64_t v103 = v102;
  uint64_t v104 = v88;
  v105 = v273;
  uint64_t v106 = v276;
  uint64_t v107 = v274;
  while (1)
  {
    v284(v106, v103, v89);
    FMIPItem.partType.getter();
    v273 = *v282;
    ((void (*)(char *, void, uint64_t))v273)(v107, v272, v40);
    sub_10021E398(&qword_1006B5E78, (void (*)(uint64_t))&type metadata accessor for FMIPPartType);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    if (v291 == v289 && v292 == v290) {
      break;
    }
    char v109 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v110 = *v283;
    (*v283)(v107, v40);
    v110(v105, v40);
    if (v109) {
      goto LABEL_25;
    }
    uint64_t v106 = v276;
    uint64_t v89 = v287;
    (*v281)(v276, v287);
    v103 += v280;
    if (!--v104)
    {
      swift_bridgeObjectRelease();
      uint64_t v111 = 1;
      uint64_t v112 = v89;
      uint64_t v113 = v262;
      goto LABEL_26;
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v124 = *v283;
  (*v283)(v107, v40);
  v124(v105, v40);
LABEL_25:
  swift_bridgeObjectRelease();
  uint64_t v113 = v262;
  uint64_t v112 = v287;
  (*(void (**)(uint64_t, char *, uint64_t))(v267 + 32))(v262, v276, v287);
  uint64_t v111 = 0;
LABEL_26:
  v253(v113, v111, 1, v112);
  LODWORD(v276) = enum case for FMIPPartType.case(_:);
  swift_bridgeObjectRetain();
  unint64_t v125 = v286;
  uint64_t v126 = v112;
  v127 = v238;
  uint64_t v128 = v277;
  uint64_t v129 = (void (*)(char *, void, uint64_t))v273;
  v130 = v275;
  while (1)
  {
    v284(v128, v102, v126);
    FMIPItem.partType.getter();
    v129(v127, v276, v40);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    if (v291 == v289 && v292 == v290) {
      break;
    }
    char v132 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    Swift::Int v133 = *v283;
    (*v283)(v127, v40);
    v133(v130, v40);
    if (v132) {
      goto LABEL_35;
    }
    uint64_t v128 = v277;
    uint64_t v126 = v287;
    (*v281)(v277, v287);
    v102 += v280;
    if (!--v125)
    {
      uint64_t v87 = v254;
      swift_bridgeObjectRelease();
      uint64_t v118 = 1;
      uint64_t v119 = v237;
      uint64_t v120 = v260;
      uint64_t v121 = v270;
      uint64_t v123 = v126;
      uint64_t v122 = v267;
      goto LABEL_36;
    }
  }
  swift_bridgeObjectRelease_n();
  v134 = *v283;
  (*v283)(v127, v40);
  v134(v130, v40);
LABEL_35:
  uint64_t v87 = v254;
  swift_bridgeObjectRelease();
  uint64_t v122 = v267;
  uint64_t v120 = v260;
  uint64_t v123 = v287;
  (*(void (**)(uint64_t, char *, uint64_t))(v267 + 32))(v260, v277, v287);
  uint64_t v118 = 0;
  uint64_t v119 = v237;
  uint64_t v121 = v270;
LABEL_36:
  uint64_t v99 = v253;
LABEL_37:
  uint64_t v135 = 1;
  v281 = (void (**)(char *, uint64_t))(v122 + 56);
  v99(v120, v118, 1, v123);
  if (v286)
  {
    v253 = v99;
    v137 = *(char **)(v122 + 16);
    uint64_t v136 = v122 + 16;
    v285 = v137;
    unint64_t v138 = v87 + ((*(unsigned __int8 *)(v136 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 64));
    LODWORD(v283) = enum case for FMIPPartType.standalone(_:);
    Swift::Int v139 = (void (**)(char *, void, uint64_t))(v255 + 104);
    uint64_t v140 = (void (**)(char *, uint64_t))(v255 + 8);
    Swift::Int v141 = (void (**)(char *, uint64_t))(v136 - 8);
    v284 = (void (*)(char *, unint64_t, uint64_t))v136;
    v282 = *(char ***)(v136 + 56);
    swift_bridgeObjectRetain();
    uint64_t v142 = v287;
    unint64_t v143 = v240;
    uint64_t v144 = v239;
    uint64_t v145 = v278;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v285)(v145, v138, v142);
      FMIPItem.partType.getter();
      (*v139)(v143, v283, v40);
      sub_10021E398(&qword_1006B5E78, (void (*)(uint64_t))&type metadata accessor for FMIPPartType);
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      if (v291 == v289 && v292 == v290) {
        break;
      }
      char v147 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v148 = *v140;
      (*v140)(v143, v40);
      v148(v144, v40);
      if (v147) {
        goto LABEL_48;
      }
      uint64_t v145 = v278;
      uint64_t v142 = v287;
      (*v141)(v278, v287);
      v138 += (unint64_t)v282;
      if (!--v286)
      {
        swift_bridgeObjectRelease();
        uint64_t v149 = v142;
        uint64_t v135 = 1;
        uint64_t v119 = v237;
        uint64_t v120 = v260;
        uint64_t v121 = v270;
        uint64_t v122 = v267;
        goto LABEL_49;
      }
    }
    swift_bridgeObjectRelease_n();
    Swift::Int v150 = *v140;
    (*v140)(v143, v40);
    v150(v144, v40);
LABEL_48:
    swift_bridgeObjectRelease();
    uint64_t v122 = v267;
    uint64_t v121 = v270;
    uint64_t v149 = v287;
    (*(void (**)(uint64_t, char *, uint64_t))(v267 + 32))(v270, v278, v287);
    uint64_t v135 = 0;
    uint64_t v119 = v237;
    uint64_t v120 = v260;
LABEL_49:
    uint64_t v99 = v253;
  }
  else
  {
    uint64_t v149 = v287;
  }
  v99(v121, v135, 1, v149);
  swift_bridgeObjectRelease();
  uint64_t v151 = v241;
  sub_100006AB0(v263, v241, (uint64_t *)&unk_1006AFE30);
  uint64_t v152 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v122 + 48);
  if (v152(v151, 1, v149) == 1)
  {
    sub_100003F10(v151, (uint64_t *)&unk_1006AFE30);
    v153 = v258;
    static FMIPItemState.normal.getter();
  }
  else
  {
    v154 = v233;
    FMIPItem.state.getter();
    uint64_t v149 = v287;
    (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v151, v287);
    v153 = v258;
    (*(void (**)(char *, char *, uint64_t))(v279 + 32))(v258, v154, v119);
  }
  uint64_t v155 = v122;
  uint64_t v156 = v242;
  sub_100006AB0(v262, v242, (uint64_t *)&unk_1006AFE30);
  if (v152(v156, 1, v149) == 1)
  {
    sub_100003F10(v156, (uint64_t *)&unk_1006AFE30);
    static FMIPItemState.normal.getter();
  }
  else
  {
    v157 = v234;
    FMIPItem.state.getter();
    uint64_t v149 = v287;
    (*(void (**)(uint64_t, uint64_t))(v155 + 8))(v156, v287);
    (*(void (**)(char *, char *, uint64_t))(v279 + 32))(v266, v157, v119);
  }
  uint64_t v158 = v243;
  sub_100006AB0(v120, v243, (uint64_t *)&unk_1006AFE30);
  if (v152(v158, 1, v149) == 1)
  {
    sub_100003F10(v158, (uint64_t *)&unk_1006AFE30);
    static FMIPItemState.normal.getter();
  }
  else
  {
    v159 = v235;
    FMIPItem.state.getter();
    uint64_t v149 = v287;
    (*(void (**)(uint64_t, uint64_t))(v155 + 8))(v158, v287);
    (*(void (**)(char *, char *, uint64_t))(v279 + 32))(v264, v159, v119);
  }
  uint64_t v160 = v244;
  sub_100006AB0(v270, v244, (uint64_t *)&unk_1006AFE30);
  if (v152(v160, 1, v149) == 1)
  {
    sub_100003F10(v160, (uint64_t *)&unk_1006AFE30);
    static FMIPItemState.normal.getter();
  }
  else
  {
    v161 = v236;
    FMIPItem.state.getter();
    (*(void (**)(uint64_t, uint64_t))(v155 + 8))(v160, v149);
    (*(void (**)(char *, char *, uint64_t))(v279 + 32))(v271, v161, v119);
  }
  v162 = v265;
  static FMIPItemState.soundPlaying.getter();
  uint64_t v163 = sub_10021E398((unint64_t *)&qword_1006BEB30, (void (*)(uint64_t))&type metadata accessor for FMIPItemState);
  char v164 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  uint64_t v165 = v279;
  v166 = v153;
  v167 = *(char **)(v279 + 8);
  ((void (*)(char *, uint64_t))v167)(v162, v119);
  v168 = *(void (**)(char *, char *, uint64_t))(v165 + 16);
  v169 = v245;
  uint64_t v279 = v165 + 16;
  v168(v245, v166, v119);
  v285 = v167;
  v286 = (char *)v168;
  uint64_t v287 = v163;
  if (v164)
  {
    ((void (*)(char *, uint64_t))v167)(v169, v119);
    v170 = v246;
    v168(v246, v166, v119);
LABEL_65:
    ((void (*)(char *, uint64_t))v167)(v170, v119);
    v172 = v265;
    v173 = v247;
LABEL_66:
    uint64_t v174 = v269;
    v175 = v259;
    uint64_t v176 = v261;
    (*(void (**)(char *, void, uint64_t))(v269 + 104))(v259, enum case for FMIPPlaySoundChannels.left(_:), v261);
    uint64_t v177 = v268;
    v178 = v175;
    v167 = v285;
    sub_10025C554(v268, v178);
    uint64_t v179 = v177;
    v180 = (void (*)(char *, char *, uint64_t))v286;
    (*(void (**)(uint64_t, uint64_t))(v174 + 8))(v179, v176);
    goto LABEL_67;
  }
  static FMIPItemState.soundPending.getter();
  char v171 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  ((void (*)(char *, uint64_t))v167)(v162, v119);
  ((void (*)(char *, uint64_t))v167)(v169, v119);
  v170 = v246;
  v168(v246, v166, v119);
  if (v171) {
    goto LABEL_65;
  }
  v180 = v168;
  v227 = v170;
  v172 = v265;
  static FMIPItemState.soundQueued.getter();
  char v228 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  ((void (*)(char *, uint64_t))v167)(v172, v119);
  ((void (*)(char *, uint64_t))v167)(v227, v119);
  v173 = v247;
  if (v228) {
    goto LABEL_66;
  }
LABEL_67:
  static FMIPItemState.soundPlaying.getter();
  v181 = v266;
  char v182 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  ((void (*)(char *, uint64_t))v167)(v172, v119);
  v180(v173, v181, v119);
  if (v182)
  {
    ((void (*)(char *, uint64_t))v167)(v173, v119);
    v183 = v248;
    v180(v248, v181, v119);
    v184 = v249;
LABEL_70:
    ((void (*)(char *, uint64_t))v167)(v183, v119);
    v187 = v265;
LABEL_71:
    uint64_t v188 = v269;
    v189 = v259;
    uint64_t v190 = v261;
    (*(void (**)(char *, void, uint64_t))(v269 + 104))(v259, enum case for FMIPPlaySoundChannels.right(_:), v261);
    uint64_t v191 = v268;
    sub_10025C554(v268, v189);
    uint64_t v192 = v191;
    v167 = v285;
    (*(void (**)(uint64_t, uint64_t))(v188 + 8))(v192, v190);
    goto LABEL_72;
  }
  static FMIPItemState.soundPending.getter();
  v185 = v173;
  char v186 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  ((void (*)(char *, uint64_t))v167)(v172, v119);
  ((void (*)(char *, uint64_t))v167)(v185, v119);
  v183 = v248;
  v180(v248, v181, v119);
  v184 = v249;
  if (v186) {
    goto LABEL_70;
  }
  v187 = v265;
  static FMIPItemState.soundQueued.getter();
  char v229 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  ((void (*)(char *, uint64_t))v167)(v187, v119);
  ((void (*)(char *, uint64_t))v167)(v183, v119);
  if (v229) {
    goto LABEL_71;
  }
LABEL_72:
  static FMIPItemState.soundPlaying.getter();
  v193 = v264;
  char v194 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  ((void (*)(char *, uint64_t))v167)(v187, v119);
  v195 = v184;
  v196 = v184;
  v197 = (void (*)(char *, char *, uint64_t))v286;
  ((void (*)(char *, char *, uint64_t))v286)(v195, v193, v119);
  v198 = v271;
  if (v194)
  {
    ((void (*)(char *, uint64_t))v167)(v196, v119);
    v197(v257, v193, v119);
LABEL_75:
    ((void (*)(char *, uint64_t))v167)(v257, v119);
    v200 = v251;
LABEL_76:
    uint64_t v201 = v269;
    v202 = v259;
    uint64_t v203 = v261;
    (*(void (**)(char *, void, uint64_t))(v269 + 104))(v259, enum case for FMIPPlaySoundChannels.case(_:), v261);
    uint64_t v204 = v268;
    v198 = v271;
    sub_10025C554(v268, v202);
    uint64_t v205 = v204;
    v167 = v285;
    uint64_t v206 = v203;
    v207 = (void (*)(char *, char *, uint64_t))v286;
    (*(void (**)(uint64_t, uint64_t))(v201 + 8))(v205, v206);
    goto LABEL_77;
  }
  static FMIPItemState.soundPending.getter();
  char v199 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  ((void (*)(char *, uint64_t))v167)(v187, v119);
  ((void (*)(char *, uint64_t))v167)(v196, v119);
  v197(v257, v193, v119);
  if (v199) {
    goto LABEL_75;
  }
  v207 = v197;
  static FMIPItemState.soundQueued.getter();
  v230 = v257;
  char v231 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  ((void (*)(char *, uint64_t))v167)(v187, v119);
  ((void (*)(char *, uint64_t))v167)(v230, v119);
  v200 = v251;
  if (v231) {
    goto LABEL_76;
  }
LABEL_77:
  static FMIPItemState.soundPlaying.getter();
  char v208 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  ((void (*)(char *, uint64_t))v167)(v187, v119);
  v207(v200, v198, v119);
  if (v208)
  {
    ((void (*)(char *, uint64_t))v167)(v200, v119);
    v209 = v252;
    v207(v252, v198, v119);
    v210 = v258;
LABEL_80:
    ((void (*)(char *, uint64_t))v167)(v209, v119);
    v213 = v167;
    v214 = v266;
LABEL_81:
    uint64_t v215 = v269;
    v216 = v259;
    uint64_t v217 = v261;
    (*(void (**)(char *, void, uint64_t))(v269 + 104))(v259, enum case for FMIPPlaySoundChannels.standalone(_:), v261);
    uint64_t v218 = v268;
    sub_10025C554(v268, v216);
    (*(void (**)(uint64_t, uint64_t))(v215 + 8))(v218, v217);
    ((void (*)(char *, uint64_t))v213)(v271, v119);
    ((void (*)(char *, uint64_t))v213)(v264, v119);
    ((void (*)(char *, uint64_t))v213)(v214, v119);
    ((void (*)(char *, uint64_t))v213)(v210, v119);
    sub_100003F10(v270, (uint64_t *)&unk_1006AFE30);
    sub_100003F10(v260, (uint64_t *)&unk_1006AFE30);
    sub_100003F10(v262, (uint64_t *)&unk_1006AFE30);
    sub_100003F10(v263, (uint64_t *)&unk_1006AFE30);
    unint64_t v86 = v256;
    goto LABEL_82;
  }
  static FMIPItemState.soundPending.getter();
  v211 = v200;
  char v212 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  ((void (*)(char *, uint64_t))v167)(v187, v119);
  ((void (*)(char *, uint64_t))v167)(v211, v119);
  v209 = v252;
  v207(v252, v198, v119);
  v210 = v258;
  if (v212) {
    goto LABEL_80;
  }
  static FMIPItemState.soundQueued.getter();
  char v232 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  ((void (*)(char *, uint64_t))v167)(v187, v119);
  ((void (*)(char *, uint64_t))v167)(v209, v119);
  v213 = v167;
  v214 = v266;
  if (v232) {
    goto LABEL_81;
  }
  ((void (*)(char *, uint64_t))v213)(v271, v119);
  ((void (*)(char *, uint64_t))v213)(v264, v119);
  ((void (*)(char *, uint64_t))v213)(v214, v119);
  ((void (*)(char *, uint64_t))v213)(v210, v119);
  sub_100003F10(v270, (uint64_t *)&unk_1006AFE30);
  sub_100003F10(v260, (uint64_t *)&unk_1006AFE30);
  sub_100003F10(v262, (uint64_t *)&unk_1006AFE30);
  sub_100003F10(v263, (uint64_t *)&unk_1006AFE30);
  unint64_t v86 = v256;
LABEL_82:
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v219 = type metadata accessor for Logger();
  sub_1000606BC(v219, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain();
  v220 = Logger.logObject.getter();
  os_log_type_t v221 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v220, v221))
  {
    uint64_t v222 = swift_slowAlloc();
    uint64_t v291 = swift_slowAlloc();
    *(_DWORD *)uint64_t v222 = 141558531;
    uint64_t v289 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v222 + 12) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v289 = sub_1000606F4(v250, v86, &v291);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v222 + 22) = 2082;
    swift_beginAccess();
    sub_10021E398(&qword_1006B36E0, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
    swift_bridgeObjectRetain();
    uint64_t v223 = Set.description.getter();
    unint64_t v225 = v224;
    swift_bridgeObjectRelease();
    uint64_t v288 = sub_1000606F4(v223, v225, &v291);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v220, v221, "FMDeviceDetailContentViewController: offlineActiveChannels for %{private,mask.hash}s %{public}s.", (uint8_t *)v222, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  return v293;
}

uint64_t sub_10021D820()
{
  uint64_t v1 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(*(void *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundButton)
                 + OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_active) & 1) != 0
    || (uint64_t v4 = v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundInFlight,
        swift_beginAccess(),
        sub_100006AB0(v4, (uint64_t)v3, (uint64_t *)&unk_1006AF6E0),
        uint64_t v5 = type metadata accessor for Date(),
        LODWORD(v4) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5),
        sub_100003F10((uint64_t)v3, (uint64_t *)&unk_1006AF6E0),
        v4 != 1))
  {
    sub_1001F5E2C();
  }
  *(unsigned char *)(*(void *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
           + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_updatesEnabled) = 0;
  swift_retain();
  sub_1004ECAB8();
  return swift_release();
}

uint64_t sub_10021D974()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPFeatures();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = type metadata accessor for FMIPDevice();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource;
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource);
  uint64_t v14 = v13 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess();
  if ((*(unsigned char *)(v14 + *(int *)(type metadata accessor for FMDeviceDetailViewModel() + 148)) & 1) == 0)
  {
    uint64_t v15 = v13 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
    swift_beginAccess();
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v31 = v10 + 16;
    v30(v12, v15, v9);
    FMIPDevice.features.getter();
    uint64_t v29 = *(void (**)(char *, uint64_t))(v10 + 8);
    v29(v12, v9);
    static FMIPFeatures.isBTFindingSupported.getter();
    sub_10021E398((unint64_t *)&qword_1006B36D0, (void (*)(uint64_t))&type metadata accessor for FMIPFeatures);
    LOBYTE(v15) = dispatch thunk of SetAlgebra.isSuperset(of:)();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v3 + 8);
    v16(v6, v2);
    v16(v8, v2);
    if (v15)
    {
      if (qword_1006AE190 != -1) {
        swift_once();
      }
      uint64_t v17 = type metadata accessor for Logger();
      sub_1000606BC(v17, (uint64_t)qword_1006D1E98);
      uint64_t v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v20 = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "FMDeviceDetailContentViewController, attempting to stop fast advertisement", v20, 2u);
        swift_slowDealloc();
      }

      uint64_t v21 = *(void *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_findingExperienceCoordinator);
      uint64_t v22 = *(void *)(v1 + v32) + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
      swift_beginAccess();
      v30(v12, v22, v9);
      uint64_t v23 = FMIPDevice.baIdentifier.getter();
      uint64_t v25 = v24;
      v29(v12, v9);
      uint64_t v26 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_10019F73C(v23, v25, 0, v21, v26);
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  *(unsigned char *)(*(void *)(v1 + v32) + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_updatesEnabled) = 1;
  swift_retain();
  sub_1004ECAB8();
  return swift_release();
}

void sub_10021DDBC(uint64_t a1, int a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v47 = a5;
  uint64_t v12 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  __chkstk_darwin(v12 - 8);
  uint64_t v48 = &v39[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v51 = type metadata accessor for FMIPItem();
  uint64_t v14 = *(void *)(v51 - 8);
  uint64_t v15 = __chkstk_darwin(v51);
  uint64_t v17 = &v39[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  uint64_t v45 = &v39[-v18];
  uint64_t v46 = v6;
  uint64_t v44 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
  swift_retain();
  uint64_t v19 = FMIPManager.items.getter();
  swift_release();
  uint64_t v20 = *(void *)(v19 + 16);
  uint64_t v49 = v19;
  if (v20)
  {
    int v40 = a2;
    uint64_t v42 = a6;
    uint64_t v43 = a1;
    uint64_t v41 = v14;
    uint64_t v22 = *(void (**)(unsigned char *, unint64_t, uint64_t))(v14 + 16);
    uint64_t v21 = v14 + 16;
    uint64_t v50 = v22;
    unint64_t v23 = v19 + ((*(unsigned __int8 *)(v21 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 64));
    uint64_t v24 = *(void *)(v21 + 56);
    swift_bridgeObjectRetain();
    uint64_t v25 = v51;
    while (1)
    {
      v50(v17, v23, v25);
      if (FMIPItem.identifier.getter() == a3 && v26 == a4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
      uint64_t v27 = a3;
      unint64_t v28 = a4;
      char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v29) {
        break;
      }
      uint64_t v25 = v51;
      (*(void (**)(unsigned char *, uint64_t))(v21 - 8))(v17, v51);
      v23 += v24;
      --v20;
      a4 = v28;
      a3 = v27;
      if (!v20)
      {
        swift_bridgeObjectRelease();
        uint64_t v30 = 1;
        a6 = v42;
        a1 = v43;
        uint64_t v14 = v41;
        LOBYTE(a2) = v40;
        goto LABEL_9;
      }
    }
    a4 = v28;
    a3 = v27;
LABEL_12:
    uint64_t v25 = v51;
    swift_bridgeObjectRelease();
    uint64_t v14 = v41;
    uint64_t v31 = (uint64_t)v48;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v41 + 32))(v48, v17, v25);
    uint64_t v30 = 0;
    a6 = v42;
    a1 = v43;
    LOBYTE(a2) = v40;
  }
  else
  {
    uint64_t v30 = 1;
    uint64_t v25 = v51;
LABEL_9:
    uint64_t v31 = (uint64_t)v48;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v31, v30, 1, v25);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v31, 1, v25) == 1)
  {
    sub_100003F10(v31, (uint64_t *)&unk_1006AFE30);
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    sub_1000606BC(v32, (uint64_t)qword_1006D1E98);
    swift_bridgeObjectRetain_n();
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_1000606F4(a3, a4, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "FMDeviceDetailContentViewController: Requested play sound for unknown item identifier: %s", v35, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    LODWORD(v51) = a2 & 1;
    uint64_t v36 = (uint64_t)v45;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 32))(v45, v31, v25);
    uint64_t v37 = (void *)swift_allocObject();
    v37[2] = a3;
    v37[3] = a4;
    uint64_t v38 = v47;
    v37[4] = v47;
    v37[5] = a6;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1000B7838(v38);
    sub_1000CDEB8(v36, a1, v51, (uint64_t)sub_10021E38C, (uint64_t)v37);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v36, v25);
  }
}

uint64_t sub_10021E344()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10021E38C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10021540C(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void (**)(void))(v3 + 32), *(void *)(v3 + 40));
}

uint64_t sub_10021E398(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10021E3E0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10021E418()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10005D034(&qword_1006AF760);
  __chkstk_darwin(v2 - 8);
  uint64_t v98 = (char *)v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v101);
  char v97 = (char *)v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  uint64_t v100 = (char *)v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v102 = v7;
  uint64_t v103 = v8;
  __chkstk_darwin(v7);
  uint64_t v99 = (char *)v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMPlatterIcon();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v0[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_conditionsSubscription] = 0;
  uint64_t v13 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundButton;
  uint64_t v14 = self;
  id v15 = [v14 systemIndigoColor];
  swift_storeEnumTagMultiPayload();
  *(void *)&long long v130 = 0xD00000000000001ELL;
  *((void *)&v130 + 1) = 0x800000010058B540;
  uint64_t v16 = (objc_class *)type metadata accessor for FMIconPlatterButton();
  uint64_t v132 = 0;
  uint64_t v133 = 0;
  uint64_t v131 = 0;
  char v134 = 0;
  id v17 = objc_allocWithZone(v16);
  uint64_t v18 = sub_1000C7D64(v15, (uint64_t)v12, &v130, 1, 1);

  *(void *)&v1[v13] = v18;
  uint64_t v19 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteLeftButton;
  id v20 = [v14 systemIndigoColor];
  swift_storeEnumTagMultiPayload();
  *(void *)&long long v125 = 0xD000000000000028;
  *((void *)&v125 + 1) = 0x800000010058B560;
  uint64_t v127 = 0;
  uint64_t v128 = 0;
  uint64_t v126 = 0;
  char v129 = 0;
  id v21 = objc_allocWithZone(v16);
  uint64_t v22 = sub_1000C7D64(v20, (uint64_t)v12, &v125, 0, 0);

  *(void *)&v1[v19] = v22;
  uint64_t v23 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteRightButton;
  id v24 = [v14 systemIndigoColor];
  swift_storeEnumTagMultiPayload();
  *(void *)&long long v120 = 0xD000000000000029;
  *((void *)&v120 + 1) = 0x800000010058B590;
  uint64_t v122 = 0;
  uint64_t v123 = 0;
  uint64_t v121 = 0;
  char v124 = 0;
  id v25 = objc_allocWithZone(v16);
  uint64_t v26 = sub_1000C7D64(v24, (uint64_t)v12, &v120, 0, 0);

  *(void *)&v1[v23] = v26;
  uint64_t v27 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_stopSoundButton;
  id v28 = [v14 systemIndigoColor];
  swift_storeEnumTagMultiPayload();
  *(void *)&long long v115 = 0xD00000000000001ELL;
  *((void *)&v115 + 1) = 0x800000010058B5C0;
  uint64_t v117 = 0;
  uint64_t v118 = 0;
  uint64_t v116 = 0;
  char v119 = 0;
  id v29 = objc_allocWithZone(v16);
  uint64_t v30 = sub_1000C7D64(v28, (uint64_t)v12, &v115, 0, 0);

  *(void *)&v1[v27] = v30;
  uint64_t v31 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_directionsButton;
  id v32 = [v14 systemBlueColor];
  swift_storeEnumTagMultiPayload();
  *(void *)&long long v110 = 0xD00000000000001FLL;
  *((void *)&v110 + 1) = 0x8000000100584D80;
  uint64_t v112 = 0;
  uint64_t v113 = 0;
  uint64_t v111 = 0;
  char v114 = 0;
  id v33 = objc_allocWithZone(v16);
  os_log_type_t v34 = sub_1000C7D64(v32, (uint64_t)v12, &v110, 0, 0);

  *(void *)&v1[v31] = v34;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_itemConnectionManager] = 0;
  uint64_t v35 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_findButton;
  id v36 = [v14 systemBlueColor];
  uint64_t v37 = *(int *)(sub_10005D034(&qword_1006B5E00) + 48);
  uint64_t v38 = enum case for FMFindingType.owner(_:);
  uint64_t v39 = type metadata accessor for FMFindingType();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 104))(v12, v38, v39);
  v12[v37] = 0;
  uint64_t v40 = enum case for FMFindingTechnology.proximity(_:);
  uint64_t v41 = type metadata accessor for FMFindingTechnology();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 104))(v12, v40, v41);
  swift_storeEnumTagMultiPayload();
  *(void *)&long long v105 = 0xD000000000000019;
  *((void *)&v105 + 1) = 0x800000010058B5E0;
  uint64_t v107 = 0;
  uint64_t v108 = 0;
  uint64_t v106 = 0;
  char v109 = 0;
  id v42 = objc_allocWithZone(v16);
  uint64_t v43 = sub_1000C7D64(v36, (uint64_t)v12, &v105, 0, 0);

  *(void *)&v1[v35] = v43;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_btDeviceDiscoveryToken] = 0;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController____lazy_storage___ownerSession] = 0;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_connectionMaterialTask] = 0;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_localFindableConnectionMaterialMonitoringSession] = 0;
  uint64_t v44 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_connectionMaterialUpdateQueue;
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  unsigned int v95 = enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:);
  uint64_t v45 = *(void (**)(void))(v103 + 104);
  v103 += 104;
  char v96 = (void (*)(char *, void, uint64_t))v45;
  v45(v99);
  static DispatchQoS.unspecified.getter();
  uint64_t v104 = _swiftEmptyArrayStorage;
  sub_10021E398((unint64_t *)&unk_1006AE490, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  v94[1] = sub_10005D034((uint64_t *)&unk_1006B6C50);
  v94[2] = sub_100045050((unint64_t *)&unk_1006AE4A0, (uint64_t *)&unk_1006B6C50);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  *(void *)&v1[v44] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v46 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsView;
  id v47 = objc_allocWithZone((Class)type metadata accessor for FMDeviceNotificationsView());
  *(void *)&v1[v46] = sub_100245EC4();
  uint64_t v48 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsView;
  id v49 = objc_allocWithZone((Class)type metadata accessor for FMDeviceShowContactDetailsView());
  *(void *)&v1[v48] = sub_10044CDD4();
  *(void *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsWelcomeScreenViewController] = 0;
  uint64_t v50 = &v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsPhoneNumber];
  void *v50 = 0;
  v50[1] = 0xE000000000000000;
  uint64_t v51 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAttention;
  uint64_t v52 = (objc_class *)type metadata accessor for FMExtendedPlatterInfoView();
  id v53 = objc_allocWithZone(v52);
  *(void *)&v1[v51] = sub_10033C758(1, 0);
  *(void *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_markAsLostHostingController] = 0;
  uint64_t v54 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelEraseDeviceButton;
  unint64_t v55 = (objc_class *)type metadata accessor for FMSingleLinePlatterButton();
  id v56 = objc_allocWithZone(v55);
  *(void *)&v1[v54] = sub_10004E188(0, 0, 0, 1);
  uint64_t v57 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_eraseDeviceButton;
  id v58 = objc_allocWithZone(v55);
  *(void *)&v1[v57] = sub_10004E188(0, 0, 0, 1);
  uint64_t v59 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_removeDeviceButton;
  id v60 = objc_allocWithZone(v55);
  *(void *)&v1[v59] = sub_10004E188(0, 0, 0, 1);
  uint64_t v61 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_inaccurateAttention;
  id v62 = objc_allocWithZone(v52);
  *(void *)&v1[v61] = sub_10033C758(1, 0);
  uint64_t v63 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPendingAttention;
  uint64_t v64 = objc_allocWithZone((Class)type metadata accessor for FMFailablePlatterInfoView());
  uint64_t v65 = OBJC_IVAR____TtC6FindMy25FMFailablePlatterInfoView_isActionable;
  v64[OBJC_IVAR____TtC6FindMy25FMFailablePlatterInfoView_isActionable] = 0;
  v64[OBJC_IVAR____TtC6FindMy25FMFailablePlatterInfoView_playSoundFailureCode] = 0;
  v64[OBJC_IVAR____TtC6FindMy25FMFailablePlatterInfoView_localizableType] = 1;
  v64[v65] = 1;
  uint64_t v66 = sub_1002C2624(1);
  sub_1003F7280();

  *(void *)&v1[v63] = v66;
  uint64_t v67 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_mismatchAttention;
  id v68 = objc_allocWithZone(v52);
  *(void *)&v1[v67] = sub_10033C758(1, 0);
  uint64_t v69 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pairingIncompleteAttention;
  id v70 = objc_allocWithZone(v52);
  *(void *)&v1[v69] = sub_10033C758(1, 0);
  uint64_t v71 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pairingStatusDebugView;
  id v72 = objc_allocWithZone(v52);
  *(void *)&v1[v71] = sub_10033C758(0, 0);
  uint64_t v73 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsOffAttention;
  id v74 = objc_allocWithZone(v52);
  *(void *)&v1[v73] = sub_10033C758(1, 1);
  uint64_t v75 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_repairModeAttention;
  id v76 = objc_allocWithZone(v52);
  *(void *)&v1[v75] = sub_10033C758(0, 0);
  uint64_t v77 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_firstButtonsStackView;
  *(void *)&v1[v77] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v78 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_actionButtonsStackView;
  *(void *)&v1[v78] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v79 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_verticalStackView;
  *(void *)&v1[v79] = [objc_allocWithZone((Class)UIStackView) init];
  *(void *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_verticalStackBottomConstraint] = 0;
  uint64_t v80 = &v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundInFlight];
  uint64_t v81 = type metadata accessor for Date();
  uint64_t v82 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56);
  v82(v80, 1, 1, v81);
  v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isNotifyWhenFoundOnOverride] = 2;
  v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isNotifyWhenLeftBehindOnOverride] = 2;
  v82(&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_canShowQueueAlert], 1, 1, v81);
  *(void *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_lastPlayAction] = &_swiftEmptyDictionarySingleton;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelOnlinePlaySoundWorkItem] = 0;
  uint64_t v83 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_actionQueue;
  v96(v99, v95, v102);
  static DispatchQoS.unspecified.getter();
  uint64_t v104 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  *(void *)&v1[v83] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v84 = &v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingPlaySoundAnalytics];
  uint64_t v85 = type metadata accessor for FMIPAirPodsPlaySoundEvent();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v84, 1, 1, v85);
  unint64_t v86 = &v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocation];
  uint64_t v87 = type metadata accessor for FMIPSafeLocation();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v86, 1, 1, v87);
  uint64_t v88 = &v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAddress];
  *uint64_t v88 = 0;
  v88[1] = 0;
  v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocationAdded] = 0;
  uint64_t v89 = &v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationEvent];
  uint64_t v90 = type metadata accessor for FMIPSeparationEvent();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v89, 1, 1, v90);
  uint64_t v91 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_geocodingCache;
  v92 = v98;
  static Locale.autoupdatingCurrent.getter();
  uint64_t v93 = type metadata accessor for Locale();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v92, 0, 1, v93);
  type metadata accessor for FMIPReverseGeocodingCache();
  swift_allocObject();
  *(void *)&v1[v91] = FMIPReverseGeocodingCache.init(preferredLocale:)();
  v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showSeparationAttention] = 0;
  v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPlayingOrPending] = 0;
  v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isRangingAvailable] = 1;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPendingTimer] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10021F1A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPPlaySoundChannels();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v19 = a2;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v13 = v14;
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    uint64_t v16 = *(void *)(v12 + 56);
    do
    {
      v13(v8, v15, v4);
      sub_10025C554((uint64_t)v10, v8);
      (*(void (**)(char *, uint64_t))(v12 - 8))(v10, v4);
      v15 += v16;
      --v11;
    }
    while (v11);
    return v19;
  }
  return a2;
}

uint64_t sub_10021F308(uint64_t a1, char *a2, void *a3)
{
  uint64_t v175 = type metadata accessor for FMIPPlaySoundMethod();
  os_log_t v174 = *(os_log_t *)(v175 - 8);
  uint64_t v6 = __chkstk_darwin(v175);
  char v171 = (char *)&v164 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v173 = (char *)&v164 - v8;
  uint64_t v9 = type metadata accessor for FMIPDevice();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v164 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMIPPlaySoundChannels();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  v170 = (char *)&v164 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  v169 = (char *)&v164 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  id v21 = (char *)&v164 - v20;
  *(void *)&long long v168 = v22;
  __chkstk_darwin(v19);
  id v24 = (char *)&v164 - v23;
  uint64_t v177 = swift_allocObject();
  *(void *)(v177 + 16) = a3;
  uint64_t v183 = v14;
  id v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v185 = v24;
  uint64_t v172 = a1;
  uint64_t v186 = v13;
  v180 = v25;
  v25((uint64_t)v24, a1, v13);
  v181 = a2;
  uint64_t v26 = *(void *)&a2[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource];
  uint64_t v27 = v26 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess();
  uint64_t v28 = type metadata accessor for FMDeviceDetailViewModel();
  uint64_t v29 = v26 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  uint64_t v30 = *(unsigned __int8 *)(v27 + *(int *)(v28 + 96));
  swift_beginAccess();
  uint64_t v178 = v10;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v179 = v9;
  v31(v12, v29, v9);
  id v32 = a3;
  uint64_t v33 = FMIPDevice.identifier.getter();
  unint64_t v184 = v34;
  uint64_t v35 = sub_10021B554();
  id v36 = sub_1001F6C2C(v30);
  unint64_t v37 = v35[2];
  unint64_t v38 = v36[2];
  uint64_t v182 = v33;
  if (v37 > v38 >> 3)
  {
    uint64_t v39 = sub_100218C74((uint64_t)v35, (uint64_t)v36);
  }
  else
  {
    aBlock[0] = (uint64_t)v36;
    sub_1002184F4((uint64_t)v35);
    uint64_t v39 = (void *)aBlock[0];
  }
  uint64_t v40 = (uint64_t)v185;
  char v41 = sub_10015BE0C((uint64_t)v185, (uint64_t)v39);
  uint64_t v42 = v183;
  uint64_t v176 = v12;
  if ((v41 & 1) == 0)
  {
    if (sub_10015BE0C(v40, (uint64_t)v35))
    {
      swift_bridgeObjectRelease();
      uint64_t v47 = sub_10005D034((uint64_t *)&unk_1006C0530);
      uint64_t v48 = *(unsigned __int8 *)(v42 + 80);
      uint64_t v49 = (v48 + 32) & ~v48;
      uint64_t v50 = (char *)(v49 + *(void *)(v42 + 72));
      uint64_t v172 = v47;
      v170 = v50;
      v169 = (char *)(v48 | 7);
      uint64_t v51 = swift_allocObject();
      long long v168 = xmmword_10055B970;
      *(_OWORD *)(v51 + 16) = xmmword_10055B970;
      v173 = (char *)v49;
      uint64_t v52 = v186;
      v180(v51 + v49, v40, v186);
      id v53 = sub_100218800(v51, (uint64_t)v35);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      uint64_t v54 = qword_1006AE040;
      swift_retain();
      if (v54 != -1) {
        swift_once();
      }
      uint64_t v55 = type metadata accessor for Logger();
      sub_1000606BC(v55, (uint64_t)qword_1006D1890);
      unint64_t v56 = v184;
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      uint64_t v57 = Logger.logObject.getter();
      os_log_type_t v58 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v57, v58))
      {
        uint64_t v59 = swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v59 = 136446723;
        sub_10021E398(&qword_1006B36E0, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
        swift_retain();
        uint64_t v60 = Set.description.getter();
        unint64_t v62 = v61;
        swift_release();
        uint64_t v189 = sub_1000606F4(v60, v62, aBlock);
        uint64_t v63 = v183;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v59 + 12) = 2160;
        uint64_t v189 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v59 + 22) = 2081;
        swift_bridgeObjectRetain();
        uint64_t v189 = sub_1000606F4(v182, v56, aBlock);
        uint64_t v52 = v186;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v57, v58, "FMDeviceDetailContentViewController: mute sound selecting channels to play LE %{public}s for %{private,mask.hash}s.", (uint8_t *)v59, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_release_n();
        uint64_t v63 = v42;
      }
      os_log_t v110 = v174;
      uint64_t v111 = (uint64_t)v171;
      uint64_t v112 = v175;
      ((void (*)(char *, void, uint64_t))v174[13].isa)(v171, enum case for FMIPPlaySoundMethod.ble(_:), v175);
      uint64_t v113 = swift_allocObject();
      *(_OWORD *)(v113 + 16) = v168;
      (*(void (**)(char *, void, uint64_t))(v63 + 104))(&v173[v113], enum case for FMIPPlaySoundChannels.mute(_:), v52);
      int64_t v114 = v53[2] + 1;
      swift_retain();
      aBlock[0] = sub_10007D39C(0, v114, 0, (unint64_t)_swiftEmptyArrayStorage);
      uint64_t v115 = swift_bridgeObjectRetain();
      sub_1004A21FC(v115);
      sub_1004A21D0(v113);
      swift_release();
      uint64_t v116 = aBlock[0];
      uint64_t v117 = v52;
      uint64_t v118 = (void *)swift_allocObject();
      uint64_t v119 = v182;
      v118[2] = v53;
      v118[3] = v119;
      v118[4] = v56;
      v118[5] = sub_100224C4C;
      v118[6] = v177;
      swift_retain();
      sub_1001FA0BC(v111, 1, 0, v116, (uint64_t)sub_100224BFC, (uint64_t)v118);
      swift_bridgeObjectRelease();
      swift_release();
      ((void (*)(uint64_t, uint64_t))v110[1].isa)(v111, v112);
      (*(void (**)(char *, uint64_t))(v178 + 8))(v176, v179);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v185, v117);
      swift_release();
      return swift_release();
    }
    uint64_t v75 = &v181[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_lastPlayAction];
    swift_beginAccess();
    uint64_t v76 = *(void *)v75;
    if (*(void *)(v76 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v77 = sub_1001AFDE4(v40);
      if (v78)
      {
        uint64_t v79 = *(NSObject **)(*(void *)(v76 + 56) + 8 * v77);
        swift_retain();
        swift_bridgeObjectRelease();
        os_log_t v174 = v79;
        uint64_t v80 = sub_1001F7194((uint64_t)v79, (uint64_t)v35, v40, (uint64_t)v39);
        if (qword_1006AE040 != -1) {
          swift_once();
        }
        uint64_t v81 = type metadata accessor for Logger();
        sub_1000606BC(v81, (uint64_t)qword_1006D1890);
        uint64_t v82 = v169;
        uint64_t v83 = v186;
        v180((uint64_t)v169, v172, v186);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_retain_n();
        uint64_t v84 = Logger.logObject.getter();
        os_log_type_t v85 = static os_log_type_t.default.getter();
        int v86 = v85;
        BOOL v87 = os_log_type_enabled(v84, v85);
        uint64_t v175 = v80;
        v167 = v39;
        if (v87)
        {
          uint64_t v88 = swift_slowAlloc();
          char v171 = (char *)swift_slowAlloc();
          aBlock[0] = (uint64_t)v171;
          *(_DWORD *)uint64_t v88 = 136447491;
          uint64_t v165 = (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels;
          sub_10021E398(&qword_1006B5E58, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
          os_log_t v166 = v84;
          uint64_t v89 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v187 = sub_1000606F4(v89, v90, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v91 = *(void (**)(char *, uint64_t))(v42 + 8);
          v173 = (char *)((v42 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
          v91(v82, v186);
          *(_WORD *)(v88 + 12) = 2160;
          uint64_t v187 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v88 + 22) = 2081;
          LODWORD(v169) = v86;
          uint64_t v92 = v175;
          unint64_t v93 = v184;
          swift_bridgeObjectRetain();
          uint64_t v187 = sub_1000606F4(v182, v93, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v88 + 32) = 2082;
          uint64_t v164 = v88 + 34;
          sub_10021E398(&qword_1006B36E0, v165);
          swift_bridgeObjectRetain();
          uint64_t v94 = Set.description.getter();
          unint64_t v96 = v95;
          swift_bridgeObjectRelease();
          uint64_t v187 = sub_1000606F4(v94, v96, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v88 + 42) = 2082;
          swift_bridgeObjectRetain();
          uint64_t v97 = Set.description.getter();
          unint64_t v99 = v98;
          swift_bridgeObjectRelease();
          uint64_t v187 = sub_1000606F4(v97, v99, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v88 + 52) = 2082;
          uint64_t v187 = v92;
          type metadata accessor for FMIPPlaySoundDeviceAction();
          sub_10021E398(&qword_1006B5E60, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundDeviceAction);
          uint64_t v83 = v186;
          uint64_t v100 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v187 = sub_1000606F4(v100, v101, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          os_log_t v102 = v166;
          _os_log_impl((void *)&_mh_execute_header, v166, (os_log_type_t)v169, "FMDeviceDetailContentViewController: mute %{public}s sound button pressed for %{private,mask.hash}s. onlineActiveChannels: %{public}s, offlineActiveChannels: %{public}s - Reissuing action %{public}s.", (uint8_t *)v88, 0x3Eu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          uint64_t v152 = *(void (**)(char *, uint64_t))(v42 + 8);
          v173 = (char *)((v42 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
          v152(v82, v83);

          swift_release_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        v181 = *(char **)(*(void *)(*(void *)&v181[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator]
                                    + 24)
                        + 32);
        v180((uint64_t)v170, v172, v83);
        unint64_t v153 = (*(unsigned __int8 *)(v42 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
        unint64_t v154 = (v168 + v153 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v155 = (v154 + 23) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v156 = (v155 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v157 = (v156 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v158 = swift_allocObject();
        (*(void (**)(unint64_t, char *, uint64_t))(v42 + 32))(v158 + v153, v170, v83);
        v159 = (void *)(v158 + v154);
        unint64_t v160 = v184;
        void *v159 = v182;
        v159[1] = v160;
        *(void *)(v158 + v155) = v167;
        *(void *)(v158 + v156) = v35;
        uint64_t v161 = v175;
        *(void *)(v158 + v157) = v175;
        v162 = (id (**)())(v158 + ((v157 + 15) & 0xFFFFFFFFFFFFFFF8));
        uint64_t v163 = v177;
        char *v162 = sub_100224C4C;
        v162[1] = (id (*)())v163;
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1000CD498(v161, (uint64_t)sub_100224BF4, v158);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v178 + 8))(v176, v179);
        (*(void (**)(char *, uint64_t))(v42 + 8))(v185, v186);
        return swift_release();
      }
      swift_bridgeObjectRelease();
    }
    if (qword_1006AE040 != -1) {
      swift_once();
    }
    uint64_t v120 = type metadata accessor for Logger();
    sub_1000606BC(v120, (uint64_t)qword_1006D1890);
    uint64_t v121 = v186;
    v180((uint64_t)v21, v172, v186);
    unint64_t v122 = v184;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v123 = Logger.logObject.getter();
    os_log_type_t v124 = static os_log_type_t.error.getter();
    int v125 = v124;
    if (os_log_type_enabled(v123, v124))
    {
      uint64_t v126 = swift_slowAlloc();
      v181 = v32;
      uint64_t v127 = v126;
      v180 = (void (*)(uint64_t, uint64_t, uint64_t))swift_slowAlloc();
      aBlock[0] = (uint64_t)v180;
      *(_DWORD *)uint64_t v127 = 136447235;
      v173 = (char *)(v127 + 4);
      unint64_t v128 = v122;
      LODWORD(v175) = v125;
      sub_10021E398(&qword_1006B5E58, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
      os_log_t v174 = v123;
      uint64_t v129 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v187 = sub_1000606F4(v129, v130, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v131 = *(void (**)(char *, uint64_t))(v42 + 8);
      uint64_t v183 = (v42 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v131(v21, v121);
      *(_WORD *)(v127 + 12) = 2160;
      uint64_t v187 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v127 + 22) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v187 = sub_1000606F4(v182, v128, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v127 + 32) = 2082;
      sub_10021E398(&qword_1006B36E0, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
      swift_bridgeObjectRetain();
      uint64_t v132 = Set.description.getter();
      unint64_t v134 = v133;
      swift_bridgeObjectRelease();
      uint64_t v135 = v132;
      uint64_t v12 = v176;
      uint64_t v187 = sub_1000606F4(v135, v134, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v136 = (void (*)(uint64_t, uint64_t))v131;
      swift_bridgeObjectRelease();
      *(_WORD *)(v127 + 42) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v137 = Set.description.getter();
      unint64_t v139 = v138;
      swift_bridgeObjectRelease();
      uint64_t v187 = sub_1000606F4(v137, v139, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v140 = (uint64_t)v185;
      swift_bridgeObjectRelease();
      os_log_t v141 = v174;
      _os_log_impl((void *)&_mh_execute_header, v174, (os_log_type_t)v175, "FMDeviceDetailContentViewController: mute %{public}s sound button pressed for %{private,mask.hash}s. onlineActiveChannels: %{public}s, offlineActiveChannels: %{public}s - Failed to reissue action, no last action.", (uint8_t *)v127, 0x34u);
      swift_arrayDestroy();
      swift_slowDealloc();
      id v32 = v181;
      swift_slowDealloc();
    }
    else
    {
      uint64_t v142 = *(void (**)(char *, uint64_t))(v42 + 8);
      uint64_t v183 = (v42 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v142(v21, v121);
      uint64_t v136 = (void (*)(uint64_t, uint64_t))v142;

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      uint64_t v140 = (uint64_t)v185;
    }
    uint64_t v143 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteLeftButton;
    uint64_t v144 = *(unsigned char **)&v32[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteLeftButton];
    v144[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_pending] = 0;
    uint64_t v145 = v144;
    sub_1000C3C5C();

    uint64_t v146 = v32;
    char v147 = *(unsigned char **)&v32[v143];
    v147[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_showActivityIndicator] = 0;
    v148 = self;
    uint64_t v149 = swift_allocObject();
    *(void *)(v149 + 16) = v147;
    aBlock[4] = (uint64_t)sub_100137F6C;
    aBlock[5] = v149;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10003C410;
    aBlock[3] = (uint64_t)&unk_10062ABC0;
    Swift::Int v150 = _Block_copy(aBlock);
    uint64_t v151 = v147;
    swift_release();
    [v148 animateWithDuration:4 delay:v150 options:0 animations:0.3 completion:0.0];
    _Block_release(v150);

    [*(id *)&v146[v143] setUserInteractionEnabled:1];
    (*(void (**)(char *, uint64_t))(v178 + 8))(v12, v179);
    v136(v140, v186);
    return swift_release();
  }
  sub_10005D034((uint64_t *)&unk_1006C0530);
  unint64_t v43 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_10055B970;
  v180(v44 + v43, v40, v186);
  uint64_t v45 = sub_100218800(v44, (uint64_t)v39);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if (v35[2] <= v45[2] >> 3)
  {
    aBlock[0] = (uint64_t)v45;
    sub_1002184F4((uint64_t)v35);
    swift_bridgeObjectRelease();
    uint64_t v46 = (void *)aBlock[0];
  }
  else
  {
    uint64_t v46 = sub_100218C74((uint64_t)v35, (uint64_t)v45);
    swift_bridgeObjectRelease();
  }
  uint64_t v64 = qword_1006AE040;
  swift_bridgeObjectRetain();
  if (v64 != -1) {
    swift_once();
  }
  uint64_t v65 = type metadata accessor for Logger();
  sub_1000606BC(v65, (uint64_t)qword_1006D1890);
  swift_bridgeObjectRetain_n();
  unint64_t v66 = v184;
  swift_bridgeObjectRetain_n();
  uint64_t v67 = Logger.logObject.getter();
  os_log_type_t v68 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v67, v68))
  {
    uint64_t v69 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v69 = 136446723;
    sub_10021E398(&qword_1006B36E0, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
    swift_bridgeObjectRetain();
    uint64_t v70 = Set.description.getter();
    unint64_t v72 = v71;
    swift_bridgeObjectRelease();
    uint64_t v189 = sub_1000606F4(v70, v72, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    uint64_t v73 = v183;
    swift_bridgeObjectRelease();
    *(_WORD *)(v69 + 12) = 2160;
    uint64_t v189 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v69 + 22) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v74 = v182;
    uint64_t v189 = sub_1000606F4(v182, v184, aBlock);
    unint64_t v66 = v184;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v67, v68, "FMDeviceDetailContentViewController: mute sound selecting channels to play Classic %{public}s for %{private,mask.hash}s.", (uint8_t *)v69, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v73 = v42;
    uint64_t v74 = v182;
  }
  os_log_t v103 = v174;
  uint64_t v104 = (uint64_t)v173;
  uint64_t v105 = v175;
  ((void (*)(char *, void, uint64_t))v174[13].isa)(v173, enum case for FMIPPlaySoundMethod.classic(_:), v175);
  uint64_t v106 = swift_bridgeObjectRetain();
  uint64_t v107 = sub_1004AF24C(v106);
  swift_bridgeObjectRelease();
  uint64_t v108 = (void *)swift_allocObject();
  v108[2] = v46;
  v108[3] = v74;
  v108[4] = v66;
  v108[5] = sub_100224C4C;
  v108[6] = v177;
  swift_retain();
  sub_1001FA0BC(v104, 1, 0, (uint64_t)v107, (uint64_t)sub_100224C0C, (uint64_t)v108);
  swift_release();
  swift_release();
  ((void (*)(uint64_t, uint64_t))v103[1].isa)(v104, v105);
  (*(void (**)(char *, uint64_t))(v178 + 8))(v176, v179);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v185, v186);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100220D84(void (*a1)(os_log_t, uint64_t), char *a2, void *a3)
{
  uint64_t v173 = type metadata accessor for FMIPPlaySoundMethod();
  os_log_t v172 = *(os_log_t *)(v173 - 8);
  uint64_t v6 = __chkstk_darwin(v173);
  v169 = (char *)&v162 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  char v171 = (void (*)(uint64_t))((char *)&v162 - v8);
  uint64_t v9 = type metadata accessor for FMIPDevice();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMIPPlaySoundChannels();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = __chkstk_darwin(v13);
  v167 = (char *)&v162 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v16);
  *(void *)&long long v166 = (char *)&v162 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  os_log_t v168 = (os_log_t)((char *)&v162 - v20);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v162 - v21;
  uint64_t v175 = swift_allocObject();
  *(void *)(v175 + 16) = a3;
  uint64_t v181 = v14;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v183 = v22;
  v170 = a1;
  uint64_t v184 = v13;
  uint64_t v178 = v23;
  v23(v22, (uint64_t)a1, v13);
  uint64_t v179 = a2;
  uint64_t v24 = *(void *)&a2[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource];
  uint64_t v25 = v24 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess();
  uint64_t v26 = type metadata accessor for FMDeviceDetailViewModel();
  uint64_t v27 = v24 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  uint64_t v28 = *(unsigned __int8 *)(v25 + *(int *)(v26 + 96));
  swift_beginAccess();
  uint64_t v176 = v10;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v177 = v9;
  v29(v12, v27, v9);
  uint64_t v30 = a3;
  uint64_t v31 = FMIPDevice.identifier.getter();
  unint64_t v182 = v32;
  uint64_t v33 = sub_10021B554();
  unint64_t v34 = sub_1001F6C2C(v28);
  unint64_t v35 = v33[2];
  unint64_t v36 = v34[2];
  uint64_t v180 = v31;
  if (v35 > v36 >> 3)
  {
    unint64_t v37 = sub_100218C74((uint64_t)v33, (uint64_t)v34);
  }
  else
  {
    aBlock[0] = (uint64_t)v34;
    sub_1002184F4((uint64_t)v33);
    unint64_t v37 = (void *)aBlock[0];
  }
  uint64_t v38 = (uint64_t)v183;
  char v39 = sub_10015BE0C((uint64_t)v183, (uint64_t)v37);
  uint64_t v40 = v181;
  os_log_t v174 = v12;
  if ((v39 & 1) == 0)
  {
    if (sub_10015BE0C(v38, (uint64_t)v33))
    {
      swift_bridgeObjectRelease();
      uint64_t v45 = sub_10005D034((uint64_t *)&unk_1006C0530);
      uint64_t v46 = *(unsigned __int8 *)(v40 + 80);
      uint64_t v47 = (void (*)(uint64_t))((v46 + 32) & ~v46);
      uint64_t v48 = ((char *)v47 + *(void *)(v40 + 72));
      v170 = (void (*)(os_log_t, uint64_t))v45;
      os_log_t v168 = v48;
      v167 = (char *)(v46 | 7);
      uint64_t v49 = swift_allocObject();
      long long v166 = xmmword_10055B970;
      *(_OWORD *)(v49 + 16) = xmmword_10055B970;
      char v171 = v47;
      uint64_t v50 = v184;
      v178((char *)v47 + v49, v38, v184);
      uint64_t v51 = sub_100218800(v49, (uint64_t)v33);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      uint64_t v52 = qword_1006AE040;
      swift_retain();
      if (v52 != -1) {
        swift_once();
      }
      uint64_t v53 = type metadata accessor for Logger();
      sub_1000606BC(v53, (uint64_t)qword_1006D1890);
      unint64_t v54 = v182;
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      uint64_t v55 = Logger.logObject.getter();
      os_log_type_t v56 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v55, v56))
      {
        uint64_t v57 = swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v57 = 136446723;
        sub_10021E398(&qword_1006B36E0, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
        swift_retain();
        uint64_t v58 = Set.description.getter();
        unint64_t v60 = v59;
        swift_release();
        uint64_t v187 = sub_1000606F4(v58, v60, aBlock);
        uint64_t v61 = v181;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v57 + 12) = 2160;
        uint64_t v187 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v57 + 22) = 2081;
        swift_bridgeObjectRetain();
        uint64_t v187 = sub_1000606F4(v180, v54, aBlock);
        uint64_t v50 = v184;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "FMDeviceDetailContentViewController: mute sound selecting channels to play LE %{public}s for %{private,mask.hash}s.", (uint8_t *)v57, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_release_n();
        uint64_t v61 = v40;
      }
      os_log_t v108 = v172;
      uint64_t v109 = (uint64_t)v169;
      uint64_t v110 = v173;
      ((void (*)(char *, void, uint64_t))v172[13].isa)(v169, enum case for FMIPPlaySoundMethod.ble(_:), v173);
      uint64_t v111 = swift_allocObject();
      *(_OWORD *)(v111 + 16) = v166;
      (*(void (**)(char *, void, uint64_t))(v61 + 104))((char *)v171 + v111, enum case for FMIPPlaySoundChannels.mute(_:), v50);
      int64_t v112 = v51[2] + 1;
      swift_retain();
      aBlock[0] = sub_10007D39C(0, v112, 0, (unint64_t)_swiftEmptyArrayStorage);
      uint64_t v113 = swift_bridgeObjectRetain();
      sub_1004A21FC(v113);
      sub_1004A21D0(v111);
      swift_release();
      uint64_t v114 = aBlock[0];
      uint64_t v115 = v50;
      uint64_t v116 = (void *)swift_allocObject();
      uint64_t v117 = v180;
      v116[2] = v51;
      v116[3] = v117;
      v116[4] = v54;
      v116[5] = sub_100224BE8;
      v116[6] = v175;
      swift_retain();
      sub_1001FA0BC(v109, 1, 0, v114, (uint64_t)sub_100224BFC, (uint64_t)v116);
      swift_bridgeObjectRelease();
      swift_release();
      ((void (*)(uint64_t, uint64_t))v108[1].isa)(v109, v110);
      (*(void (**)(char *, uint64_t))(v176 + 8))(v174, v177);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v183, v115);
      swift_release();
      return swift_release();
    }
    uint64_t v73 = &v179[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_lastPlayAction];
    swift_beginAccess();
    uint64_t v74 = *(void *)v73;
    if (*(void *)(v74 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v75 = sub_1001AFDE4(v38);
      if (v76)
      {
        unint64_t v77 = *(NSObject **)(*(void *)(v74 + 56) + 8 * v75);
        swift_retain();
        swift_bridgeObjectRelease();
        os_log_t v172 = v77;
        uint64_t v78 = sub_1001F7194((uint64_t)v77, (uint64_t)v33, v38, (uint64_t)v37);
        if (qword_1006AE040 != -1) {
          swift_once();
        }
        uint64_t v79 = type metadata accessor for Logger();
        sub_1000606BC(v79, (uint64_t)qword_1006D1890);
        uint64_t v80 = v166;
        uint64_t v81 = v184;
        v178((char *)v166, (uint64_t)v170, v184);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_retain_n();
        uint64_t v82 = Logger.logObject.getter();
        os_log_type_t v83 = static os_log_type_t.default.getter();
        uint64_t v84 = v78;
        int v85 = v83;
        BOOL v86 = os_log_type_enabled(v82, v83);
        uint64_t v173 = v84;
        uint64_t v165 = v37;
        if (v86)
        {
          uint64_t v87 = swift_slowAlloc();
          v169 = (char *)swift_slowAlloc();
          aBlock[0] = (uint64_t)v169;
          *(_DWORD *)uint64_t v87 = 136447491;
          uint64_t v163 = (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels;
          sub_10021E398(&qword_1006B5E58, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
          os_log_t v168 = v82;
          uint64_t v88 = dispatch thunk of CustomStringConvertible.description.getter();
          int v164 = v85;
          uint64_t v185 = sub_1000606F4(v88, v89, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          unint64_t v90 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
          char v171 = (void (*)(uint64_t))((v40 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
          v90(v80, v184);
          *(_WORD *)(v87 + 12) = 2160;
          uint64_t v185 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v87 + 22) = 2081;
          unint64_t v91 = v182;
          swift_bridgeObjectRetain();
          uint64_t v185 = sub_1000606F4(v180, v91, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v87 + 32) = 2082;
          *(void *)&long long v166 = v87 + 34;
          sub_10021E398(&qword_1006B36E0, v163);
          swift_bridgeObjectRetain();
          uint64_t v92 = Set.description.getter();
          unint64_t v94 = v93;
          swift_bridgeObjectRelease();
          uint64_t v185 = sub_1000606F4(v92, v94, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v87 + 42) = 2082;
          swift_bridgeObjectRetain();
          uint64_t v95 = Set.description.getter();
          unint64_t v97 = v96;
          swift_bridgeObjectRelease();
          uint64_t v185 = sub_1000606F4(v95, v97, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v87 + 52) = 2082;
          uint64_t v185 = v173;
          type metadata accessor for FMIPPlaySoundDeviceAction();
          sub_10021E398(&qword_1006B5E60, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundDeviceAction);
          uint64_t v81 = v184;
          uint64_t v98 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v185 = sub_1000606F4(v98, v99, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          os_log_t v100 = v168;
          _os_log_impl((void *)&_mh_execute_header, v168, (os_log_type_t)v164, "FMDeviceDetailContentViewController: mute %{public}s sound button pressed for %{private,mask.hash}s. onlineActiveChannels: %{public}s, offlineActiveChannels: %{public}s - Reissuing action %{public}s.", (uint8_t *)v87, 0x3Eu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          Swift::Int v150 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
          char v171 = (void (*)(uint64_t))((v40 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
          v150(v80, v81);

          swift_release_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        uint64_t v179 = *(char **)(*(void *)(*(void *)&v179[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator]
                                    + 24)
                        + 32);
        v178(v167, (uint64_t)v170, v81);
        unint64_t v151 = (*(unsigned __int8 *)(v40 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
        unint64_t v152 = (v15 + v151 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v153 = (v152 + 23) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v154 = (v153 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v155 = (v154 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v156 = swift_allocObject();
        (*(void (**)(unint64_t, char *, uint64_t))(v40 + 32))(v156 + v151, v167, v81);
        unint64_t v157 = (void *)(v156 + v152);
        unint64_t v158 = v182;
        void *v157 = v180;
        v157[1] = v158;
        *(void *)(v156 + v153) = v165;
        *(void *)(v156 + v154) = v33;
        uint64_t v159 = v173;
        *(void *)(v156 + v155) = v173;
        unint64_t v160 = (id (**)())(v156 + ((v155 + 15) & 0xFFFFFFFFFFFFFFF8));
        uint64_t v161 = v175;
        *unint64_t v160 = sub_100224BE8;
        v160[1] = (id (*)())v161;
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1000CD498(v159, (uint64_t)sub_100224BF4, v156);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v176 + 8))(v174, v177);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v183, v184);
        return swift_release();
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v118 = v38;
    if (qword_1006AE040 != -1) {
      swift_once();
    }
    uint64_t v179 = v30;
    uint64_t v119 = type metadata accessor for Logger();
    sub_1000606BC(v119, (uint64_t)qword_1006D1890);
    os_log_t v120 = v168;
    uint64_t v121 = v184;
    v178((char *)v168, (uint64_t)v170, v184);
    unint64_t v122 = v182;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v123 = Logger.logObject.getter();
    os_log_type_t v124 = static os_log_type_t.error.getter();
    int v125 = v124;
    if (os_log_type_enabled(v123, v124))
    {
      uint64_t v126 = swift_slowAlloc();
      uint64_t v178 = (void (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
      aBlock[0] = (uint64_t)v178;
      *(_DWORD *)uint64_t v126 = 136447235;
      LODWORD(v173) = v125;
      char v171 = (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels;
      sub_10021E398(&qword_1006B5E58, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
      os_log_t v172 = v123;
      uint64_t v127 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v185 = sub_1000606F4(v127, v128, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v170 = *(void (**)(os_log_t, uint64_t))(v40 + 8);
      uint64_t v181 = (v40 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v170(v120, v121);
      *(_WORD *)(v126 + 12) = 2160;
      uint64_t v185 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v126 + 22) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v185 = sub_1000606F4(v180, v122, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v126 + 32) = 2082;
      sub_10021E398(&qword_1006B36E0, v171);
      swift_bridgeObjectRetain();
      uint64_t v129 = Set.description.getter();
      unint64_t v131 = v130;
      swift_bridgeObjectRelease();
      uint64_t v132 = v129;
      uint64_t v12 = v174;
      uint64_t v185 = sub_1000606F4(v132, v131, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      unint64_t v133 = (void (*)(uint64_t, uint64_t))v170;
      swift_bridgeObjectRelease();
      *(_WORD *)(v126 + 42) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v134 = Set.description.getter();
      unint64_t v136 = v135;
      swift_bridgeObjectRelease();
      uint64_t v185 = sub_1000606F4(v134, v136, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v137 = (uint64_t)v183;
      swift_bridgeObjectRelease();
      os_log_t v138 = v172;
      _os_log_impl((void *)&_mh_execute_header, v172, (os_log_type_t)v173, "FMDeviceDetailContentViewController: mute %{public}s sound button pressed for %{private,mask.hash}s. onlineActiveChannels: %{public}s, offlineActiveChannels: %{public}s - Failed to reissue action, no last action.", (uint8_t *)v126, 0x34u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v139 = v121;
    }
    else
    {
      uint64_t v140 = *(void (**)(os_log_t, uint64_t))(v40 + 8);
      uint64_t v181 = (v40 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v140(v120, v121);
      unint64_t v133 = (void (*)(uint64_t, uint64_t))v140;

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      uint64_t v139 = v121;
      uint64_t v137 = v118;
    }
    uint64_t v141 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteRightButton;
    uint64_t v142 = v179;
    uint64_t v143 = *(unsigned char **)&v179[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteRightButton];
    v143[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_pending] = 0;
    uint64_t v144 = v143;
    sub_1000C3C5C();

    uint64_t v145 = *(unsigned char **)&v142[v141];
    v145[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_showActivityIndicator] = 0;
    uint64_t v146 = self;
    uint64_t v147 = swift_allocObject();
    *(void *)(v147 + 16) = v145;
    aBlock[4] = (uint64_t)sub_100137F6C;
    aBlock[5] = v147;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10003C410;
    aBlock[3] = (uint64_t)&unk_10062AA30;
    v148 = _Block_copy(aBlock);
    uint64_t v149 = v145;
    swift_release();
    [v146 animateWithDuration:4 delay:v148 options:0 animations:0.3 completion:0.0];
    _Block_release(v148);

    [*(id *)&v142[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteLeftButton] setUserInteractionEnabled:1];
    (*(void (**)(char *, uint64_t))(v176 + 8))(v12, v177);
    v133(v137, v139);
    return swift_release();
  }
  sub_10005D034((uint64_t *)&unk_1006C0530);
  unint64_t v41 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_10055B970;
  v178((char *)(v42 + v41), v38, v184);
  unint64_t v43 = sub_100218800(v42, (uint64_t)v37);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if (v33[2] <= v43[2] >> 3)
  {
    aBlock[0] = (uint64_t)v43;
    sub_1002184F4((uint64_t)v33);
    swift_bridgeObjectRelease();
    uint64_t v44 = (void *)aBlock[0];
  }
  else
  {
    uint64_t v44 = sub_100218C74((uint64_t)v33, (uint64_t)v43);
    swift_bridgeObjectRelease();
  }
  uint64_t v62 = qword_1006AE040;
  swift_bridgeObjectRetain();
  if (v62 != -1) {
    swift_once();
  }
  uint64_t v63 = type metadata accessor for Logger();
  sub_1000606BC(v63, (uint64_t)qword_1006D1890);
  swift_bridgeObjectRetain_n();
  unint64_t v64 = v182;
  swift_bridgeObjectRetain_n();
  uint64_t v65 = Logger.logObject.getter();
  os_log_type_t v66 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v65, v66))
  {
    uint64_t v67 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v67 = 136446723;
    sub_10021E398(&qword_1006B36E0, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
    swift_bridgeObjectRetain();
    uint64_t v68 = Set.description.getter();
    unint64_t v70 = v69;
    swift_bridgeObjectRelease();
    uint64_t v187 = sub_1000606F4(v68, v70, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    uint64_t v71 = v181;
    swift_bridgeObjectRelease();
    *(_WORD *)(v67 + 12) = 2160;
    uint64_t v187 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v67 + 22) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v72 = v180;
    uint64_t v187 = sub_1000606F4(v180, v182, aBlock);
    unint64_t v64 = v182;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v65, v66, "FMDeviceDetailContentViewController: mute sound selecting channels to play Classic %{public}s for %{private,mask.hash}s.", (uint8_t *)v67, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v71 = v40;
    uint64_t v72 = v180;
  }
  os_log_t v101 = v172;
  os_log_t v102 = v171;
  uint64_t v103 = v173;
  ((void (*)(void (*)(uint64_t), void, uint64_t))v172[13].isa)(v171, enum case for FMIPPlaySoundMethod.classic(_:), v173);
  uint64_t v104 = swift_bridgeObjectRetain();
  uint64_t v105 = sub_1004AF24C(v104);
  swift_bridgeObjectRelease();
  uint64_t v106 = (void *)swift_allocObject();
  v106[2] = v44;
  v106[3] = v72;
  v106[4] = v64;
  v106[5] = sub_100224BE8;
  v106[6] = v175;
  swift_retain();
  sub_1001FA0BC((uint64_t)v102, 1, 0, (uint64_t)v105, (uint64_t)sub_100224C0C, (uint64_t)v106);
  swift_release();
  swift_release();
  ((void (*)(void (*)(uint64_t), uint64_t))v101[1].isa)(v102, v103);
  (*(void (**)(char *, uint64_t))(v176 + 8))(v174, v177);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v183, v184);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_100222B08()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPDeviceState();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v20 - v7;
  uint64_t v9 = type metadata accessor for FMIPDevice();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_1000606BC(v13, (uint64_t)qword_1006D1E98);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = v3;
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "FMDeviceDetailContentViewController: handle itemNotificationViewSelectNWLBDetailLabel", v16, 2u);
    uint64_t v3 = v20;
    swift_slowDealloc();
  }

  uint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
      + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v17, v9);
  FMIPDevice.state.getter();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  static FMIPDeviceState.separationWarningPaused.getter();
  sub_10021E398((unint64_t *)&qword_1006C0390, (void (*)(uint64_t))&type metadata accessor for FMIPDeviceState);
  LOBYTE(v17) = dispatch thunk of SetAlgebra.isSuperset(of:)();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v3 + 8);
  v18(v6, v2);
  v18(v8, v2);
  if (v17)
  {
    sub_100209C2C();
  }
  else
  {
    uint64_t v19 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1000B6D08((uint64_t)sub_10022343C, v19, 0, 0);
    swift_release();
  }
}

void sub_100222E84()
{
  uint64_t v0 = sub_10005D034((uint64_t *)&unk_1006AF820);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_100003F10((uint64_t)v2, (uint64_t *)&unk_1006AF820);
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_1000606BC(v7, (uint64_t)qword_1006D1E98);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMDeviceDetailContentViewController: Error opening settings. Invalid URL", v10, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    id v11 = [self defaultWorkspace];
    if (v11)
    {
      uint64_t v13 = v11;
      URL._bridgeToObjectiveC()(v12);
      os_log_type_t v15 = v14;
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      [v13 openSensitiveURL:v15 withOptions:isa];
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_100223134(int a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for FMDeviceDetailViewModel();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_1000606BC(v9, (uint64_t)qword_1006D1E98);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    v22[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 67109378;
    LODWORD(v21) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 8) = 2080;
    int v20 = a1;
    if (a2)
    {
      swift_getErrorValue();
      uint64_t v13 = Error.localizedDescription.getter();
      unint64_t v15 = v14;
    }
    else
    {
      unint64_t v15 = 0xE300000000000000;
      uint64_t v13 = 7104878;
    }
    uint64_t v21 = sub_1000606F4(v13, v15, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMDeviceDetailContentViewController: isRangingServiceAvailable: %{BOOL}d, error: %s", (uint8_t *)v12, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    LOBYTE(a1) = v20;
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  *(unsigned char *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isRangingAvailable) = a1 & 1;
  uint64_t v16 = *(void *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
      + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess();
  uint64_t v17 = *(void *)(v16 + *(int *)(v6 + 88));
  sub_1002265B8(v16, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMDeviceDetailViewModel);
  sub_1001E47A0((uint64_t)v8, (v17 & 0x1400) != 0);
  return sub_100226620((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMDeviceDetailViewModel);
}

uint64_t sub_100223434(uint64_t a1)
{
  return sub_1001DCC5C(a1, v1);
}

uint64_t sub_10022343C()
{
  return sub_1002098E4();
}

uint64_t sub_100223448(uint64_t a1)
{
  return sub_1002238B0(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100208D04);
}

uint64_t sub_100223460(uint64_t a1, uint64_t a2)
{
  return sub_1002097D0(a1, a2, *(void *)(v2 + 16));
}

void sub_100223468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1002093C8(a1, a2, a3, *(void *)(v3 + 16));
}

id sub_100223470()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_verticalStackView) setAlpha:1.0];
}

id sub_100223490()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_verticalStackView) setAlpha:0.0];
}

uint64_t sub_1002234B0()
{
  return sub_1002253A4((uint64_t (*)(void))&type metadata accessor for FMIPDevice);
}

uint64_t sub_1002234C8(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FMIPDevice() - 8);
  uint64_t v4 = *(void **)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1002114F8(a1, v4, v5);
}

uint64_t sub_10022353C()
{
  uint64_t v1 = type metadata accessor for FMIPDevice();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_1002235E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for FMIPDevice() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void **)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_100211684(a1, a2, a3, v3 + v8, v9);
}

uint64_t sub_100223694(uint64_t a1)
{
  return sub_10020FB44(a1, *(void **)(v1 + 16), (uint64_t)&unk_10062A180, (uint64_t)sub_100223778, (uint64_t)&unk_10062A198);
}

uint64_t sub_1002236D4(uint64_t a1)
{
  return sub_10020FB44(a1, *(void **)(v1 + 16), (uint64_t)&unk_10062A0B8, (uint64_t)sub_100223714, (uint64_t)&unk_10062A0D0);
}

void sub_100223714()
{
  sub_10020FE04(*(void **)(v0 + 16));
}

uint64_t sub_10022371C(char a1)
{
  return sub_1002100B0(a1, *(void **)(v1 + 16), (uint64_t)&unk_10062A130, (uint64_t)sub_10022375C, (uint64_t)&unk_10062A148);
}

uint64_t sub_10022375C()
{
  return sub_100210624(*(void *)(v0 + 16));
}

void sub_100223778()
{
  sub_10020F824(*(void **)(v0 + 16));
}

uint64_t sub_100223780(char a1)
{
  return sub_1002100B0(a1, *(void **)(v1 + 16), (uint64_t)&unk_10062A1F8, (uint64_t)sub_100226D4C, (uint64_t)&unk_10062A210);
}

uint64_t sub_1002237C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10020EE28(a1, a2, a3, a4, *(uint64_t (**)(BOOL))(v4 + 16));
}

uint64_t sub_1002237CC()
{
  uint64_t v1 = type metadata accessor for FMIPDevice();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 25) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100223898(uint64_t a1)
{
  return sub_1002238B0(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10020DD64);
}

uint64_t sub_1002238B0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for FMIPDevice() - 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(unsigned __int8 *)(v2 + 24);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5, v6, v7);
}

uint64_t sub_10022393C(uint64_t a1, uint64_t a2)
{
  return sub_10020DE78(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

void sub_10022394C(uint64_t a1, uint64_t a2)
{
  sub_10020D1F8(a1, a2, *(void *)(v2 + 16), *(void (**)(uint64_t))(v2 + 24));
}

uint64_t sub_100223958()
{
  uint64_t v1 = type metadata accessor for FMIPDevice();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(void *)(v0 + v5)) {
    swift_release();
  }

  return _swift_deallocObject(v0, v5 + 16, v3 | 7);
}

uint64_t sub_100223A3C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FMIPDevice() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + v4;
  uint64_t v7 = (uint64_t *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];

  return sub_10020C414(a1, v5, v6, v8, v9);
}

uint64_t sub_100223AE4()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100223B2C(uint64_t a1, uint64_t a2)
{
  sub_10020C508(a1, a2, *(void *)(v2 + 16), *(void (**)(void))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_100223B38()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100223B48()
{
  uint64_t v1 = type metadata accessor for FMIPDevice();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 49) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = *(void *)(sub_10005D034(&qword_1006AEFE8) - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v5 + v4 + v7 + 2) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v10 = type metadata accessor for FMFDevice();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v0 + v8, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v8, v10);
  }

  return _swift_deallocObject(v0, v9 + v8 + 1, v3 | v7 | 7);
}

uint64_t sub_100223CF8(char a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FMIPDevice() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_10005D034(&qword_1006AEFE8) - 8);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(v6 + 80) + 2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_10020B4EC(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(unsigned __int8 *)(v1 + 33), *(unsigned __int8 *)(v1 + 34), *(unsigned __int8 *)(v1 + 35), *(unsigned __int8 *)(v1 + 36), *(void **)(v1 + 40), *(unsigned char *)(v1 + 48), v1 + v4, *(unsigned char *)(v1 + v5), *(unsigned char *)(v1 + v5 + 1), v1 + v7, *(unsigned char *)(v1 + v7 + *(void *)(v6 + 64)));
}

uint64_t sub_100223E40()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100223E68()
{
  uint64_t v1 = type metadata accessor for FMIPDevice();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 25) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = *(void *)(sub_10005D034(&qword_1006AEFE8) - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v5 + v4 + v7 + 4) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v10 = type metadata accessor for FMFDevice();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v0 + v8, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v8, v10);
  }
  swift_release();

  return _swift_deallocObject(v0, ((v9 + v8 + 9) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | v7 | 7);
}

void sub_100224028()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMIPDevice() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_10005D034(&qword_1006AEFE8) - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  sub_10020BB28(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), v0 + v2, *(unsigned __int8 *)(v0 + v3), *(unsigned __int8 *)(v0 + v3 + 1), *(unsigned __int8 *)(v0 + v3 + 2), *(unsigned __int8 *)(v0 + v3 + 3), v0 + v5, *(unsigned char *)(v0 + v5 + *(void *)(v4 + 64)), *(unsigned char *)(v0 + v5 + *(void *)(v4 + 64) + 1), *(void *)(v0 + ((v5 + *(void *)(v4 + 64) + 9) & 0xFFFFFFFFFFFFFFF8)));
}

id sub_100224158(uint64_t a1, uint64_t a2)
{
  return sub_1002087DC(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_100224160()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1002241F0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_100205770(a1, a2, v6);
}

uint64_t sub_100224270()
{
  uint64_t v1 = *(void *)(sub_10005D034(&qword_1006B2AF0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 25) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);

  uint64_t v5 = type metadata accessor for FMIPDevice();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }

  return _swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
}

void sub_10022439C()
{
  uint64_t v1 = *(void *)(sub_10005D034(&qword_1006B2AF0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  char v4 = *(unsigned char *)(v0 + 24);
  char v5 = *(unsigned char *)(v0 + v2 + *(void *)(v1 + 64));

  sub_1002011D0(v3, v4, v0 + v2, v5);
}

void sub_100224430()
{
  *(unsigned char *)(*(void *)(*(void *)(v0 + 16)
                       + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPendingAttention)
           + OBJC_IVAR____TtC6FindMy17FMPlatterInfoView_collapsed) = 1;
  sub_1002C4884();
}

uint64_t sub_100224474@<X0>(char *a1@<X8>)
{
  return sub_1001FF100(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_100224490(uint64_t a1)
{
  sub_1001FF71C(a1, *(void *)(v1 + 16));
}

uint64_t sub_100224498()
{
  return sub_1001FF8D0();
}

id sub_1002244A0(uint64_t a1)
{
  return sub_1001FE4D0(a1, *(void *)(v1 + 16));
}

uint64_t sub_1002244A8()
{
  return sub_1002253A4((uint64_t (*)(void))&type metadata accessor for FMIPPlaySoundMethod);
}

uint64_t sub_1002244C0(uint64_t a1)
{
  return sub_1002244CC(a1, "DeviceDetailContentViewController: User confirmed safety warning");
}

uint64_t sub_1002244CC(uint64_t a1, const char *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for FMIPPlaySoundMethod() - 8);
  return sub_1001FE69C(a1, *(void *)(v2 + 16), v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

uint64_t sub_100224544()
{
  return sub_1002253A4((uint64_t (*)(void))&type metadata accessor for FMIPPlaySoundMethod);
}

uint64_t sub_10022455C(uint64_t a1)
{
  return sub_1002244CC(a1, "FMDeviceDetailContentViewController: User confirmed server safety warning");
}

uint64_t sub_100224568()
{
  uint64_t v1 = type metadata accessor for FMIPPlaySoundMethod();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  unint64_t v5 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = type metadata accessor for FMIPDevice();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v13 = *(void *)(v7 + 64);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v5)) {
    swift_release();
  }
  uint64_t v9 = v3 | v8 | 7;
  uint64_t v10 = (v5 + v8 + 16) & ~v8;
  uint64_t v11 = v10 + v13;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v10, v6);

  return _swift_deallocObject(v0, v11, v9);
}

uint64_t sub_100224700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for FMIPPlaySoundMethod() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(type metadata accessor for FMIPDevice() - 8);
  return sub_1001FADCC(a1, a2, a3, a4, *(void **)(v4 + 16), v4 + v10, *(void *)(v4 + v11), *(void *)(v4 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v4 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), v4+ ((((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)));
}

uint64_t sub_100224820()
{
  uint64_t v1 = type metadata accessor for FMIPActionStatus();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = type metadata accessor for FMIPDevice();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(void *)(v0 + v5)) {
    swift_release();
  }
  unint64_t v10 = (((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & ~v8;
  unint64_t v11 = (((((v9 + v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v10, v6);
  swift_release();
  swift_errorRelease();

  return _swift_deallocObject(v0, v11 + 8, v3 | v8 | 7);
}

uint64_t sub_1002249D4()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMIPActionStatus() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(type metadata accessor for FMIPDevice() - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void (**)(uint64_t, char *, void))(v0 + v3);
  uint64_t v10 = *(void *)(v0 + v3 + 8);
  uint64_t v11 = *(void *)(v0 + v4);
  uint64_t v12 = *(void (**)(void, void, void))(v0 + v7);
  uint64_t v13 = *(void **)(v0 + v8);
  unint64_t v14 = *(char **)(v0 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_1001FB7AC(v0 + v2, v9, v10, v11, v0 + v6, v12, v13, v14);
}

void sub_100224B04()
{
  *(unsigned char *)(*(void *)(*(void *)(v0 + 16)
                       + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPendingAttention)
           + OBJC_IVAR____TtC6FindMy17FMPlatterInfoView_collapsed) = 0;
  sub_1002C4884();
}

uint64_t sub_100224B44()
{
  return sub_1002253A4((uint64_t (*)(void))&type metadata accessor for FMIPPlaySoundMethod);
}

uint64_t sub_100224B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for FMIPPlaySoundMethod() - 8);
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_1001F9A2C(a1, a2, a3, v8, v9);
}

id sub_100224BE8()
{
  return sub_1001F8268(*(void *)(v0 + 16));
}

uint64_t sub_100224BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100224C18(a1, a2, a3, "FMDeviceDetailContentViewController: finished mute sound selecting channels to play LE %{public}s for %{private,mask.hash}s.");
}

uint64_t sub_100224C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100224C18(a1, a2, a3, "FMDeviceDetailContentViewController: finished mute sound selecting channels to play classic %{public}s for %{private,mask.hash}s.");
}

uint64_t sub_100224C18(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  return sub_1001F6EC4(a1, a2, a3, *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(uint64_t (**)(void))(v4 + 40), *(void *)(v4 + 48), a4);
}

id sub_100224C4C()
{
  return sub_1001F7DB4(*(void *)(v0 + 16));
}

uint64_t sub_100224C58()
{
  uint64_t v1 = type metadata accessor for FMIPPlaySoundChannels();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_100224D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for FMIPPlaySoundChannels() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1001F7574(a1, a2, a3, a4, v4 + v10, *(void *)(v4 + v11), *(void *)(v4 + v11 + 8), *(void *)(v4 + v12), *(void *)(v4 + v13), *(void *)(v4 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)), *(uint64_t (**)(uint64_t))(v4 + ((((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v4 + ((((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_100224E5C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_100224EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001F6904(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), "FMDeviceDetailContentViewController: Sound stopped - classic for %{private,mask.hash}s.", (uint64_t)&unk_10062ADB0, (uint64_t)sub_100137F6C, (uint64_t)&unk_10062ADC8);
}

uint64_t sub_100224F00()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100224F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001F6904(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), "FMDeviceDetailContentViewController: Sound stopped - LE for %{private,mask.hash}s.", (uint64_t)&unk_10062AD60, (uint64_t)sub_100137F6C, (uint64_t)&unk_10062AD78);
}

uint64_t sub_100224F94()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100224FD4()
{
  return sub_1001F4340(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100224FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F47EC(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
}

uint64_t sub_100224FF4()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100225034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F4D1C(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
}

uint64_t sub_100225040()
{
  uint64_t v1 = (int *)type metadata accessor for FMDeviceDetailViewModel();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v17 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v4 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[9];
  uint64_t v6 = type metadata accessor for FMIPItem();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v4 + v1[19];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  uint64_t v12 = v4 + v1[21];
  uint64_t v13 = type metadata accessor for FMIPBatteryStatus();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v4 + v1[33];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v14, 1, v9)) {
    v11(v14, v9);
  }
  unint64_t v15 = (v17 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v15 + 8, v2 | 7);
}

void sub_1002252F0(char a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FMDeviceDetailViewModel() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void **)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_1001F2E94(a1, (char *)(v1 + v4), v5);
}

uint64_t sub_10022538C()
{
  return sub_1002253A4((uint64_t (*)(void))&type metadata accessor for FMIPPlaySoundMethod);
}

uint64_t sub_1002253A4(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 24) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v6, v7);
}

uint64_t sub_100225478()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMIPPlaySoundMethod() - 8);
  return sub_1001F8420(v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)), 0, 0);
}

uint64_t sub_1002254E4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002254F4()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_10022552C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100225564()
{
  return _swift_deallocObject(v0, 17, 7);
}

void sub_100225574(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t sub_100225580()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002255B8()
{
  return sub_1004AE7E8(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

uint64_t PushAlert.locKey.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1002255F0()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char **sub_100225600(unsigned char **a1, uint64_t a2, uint64_t a3)
{
  return sub_10007E438(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

uint64_t sub_100225608()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100225618()
{
  return sub_10007E1CC(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100225620(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_10007E1F4(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_100225628()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100225638()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100225648()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100225658@<X0>(void *a1@<X8>)
{
  return sub_10006EEE8(*(void *)(v1 + 16), a1);
}

uint64_t sub_100225660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10007E448(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_100225668()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100225678()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100225688(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1002256F0()
{
  sub_1001E92AC(*(char **)(v0 + 16));
}

uint64_t sub_1002256F8()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMSelectionPendingAction(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);

  if (swift_getEnumCaseMultiPayload() <= 1)
  {
    uint64_t v5 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  swift_release();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_100225814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for FMSelectionPendingAction(0) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(char **)(v3 + 16);
  uint64_t v10 = v3 + v8;
  unint64_t v11 = (uint64_t *)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];

  return sub_1001E9404(a1, a2, a3, v9, v10, v12, v13);
}

uint64_t sub_1002258D0(uint64_t a1)
{
  return sub_1001EB420(a1, *(uint64_t (**)(uint64_t, void, void))(v1 + 16));
}

uint64_t sub_1002258D8()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_1002259C4()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = v0 + v2;
  uint64_t v5 = v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, void *))v5;
  uint64_t v7 = *(void *)(v5 + 8);

  return sub_1001EABE4(v3, v4, v6, v7);
}

uint64_t sub_100225A58()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100225A98(uint64_t a1)
{
  return sub_1001EB2F0(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t, void, void))(v1 + 24));
}

uint64_t sub_100225AA4()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMSelectionPendingAction(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  unint64_t v4 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(sub_10005D034((uint64_t *)&unk_1006BB9C0) - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v4 + v6 + 8) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = v0 + v3;
  if (swift_getEnumCaseMultiPayload() <= 1)
  {
    uint64_t v10 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }

  uint64_t v11 = type metadata accessor for FMIPAddress();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v0 + v7, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0 + v7, v11);
  }
  swift_release();

  return _swift_deallocObject(v0, ((v8 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | v6 | 7);
}

void sub_100225CAC()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMSelectionPendingAction(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(sub_10005D034((uint64_t *)&unk_1006BB9C0) - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(unsigned char **)(v0 + v3);
  uint64_t v7 = v0 + v5;
  uint64_t v8 = v0 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *(void (**)(uint64_t))v8;
  uint64_t v10 = *(void *)(v8 + 8);

  sub_1001E9BA4(v0 + v2, v6, v7, v9, v10);
}

uint64_t sub_100225DBC()
{
  return sub_1001EA8E0(*(void **)(v0 + 16));
}

uint64_t sub_100225DC4(uint64_t a1)
{
  return sub_1001EAAD8(a1, *(void *)(v1 + 16));
}

uint64_t sub_100225DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMPlatterIcon();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100225E30()
{
  uint64_t v1 = (int *)type metadata accessor for FMDeviceDetailViewModel();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v16 = *(void *)(*((void *)v1 - 1) + 64);

  uint64_t v4 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[9];
  uint64_t v6 = type metadata accessor for FMIPItem();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v4 + v1[19];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  uint64_t v12 = v4 + v1[21];
  uint64_t v13 = type metadata accessor for FMIPBatteryStatus();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v4 + v1[33];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v14, 1, v9)) {
    v11(v14, v9);
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v3 + v16, v2 | 7);
}

uint64_t sub_1002260D4()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMDeviceDetailViewModel() - 8);
  uint64_t v2 = *(char **)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100213058(v2, v3);
}

uint64_t sub_100226138()
{
  uint64_t v1 = (int *)type metadata accessor for FMDeviceDetailViewModel();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v17 = *(void *)(*((void *)v1 - 1) + 64);
  swift_unknownObjectRelease();
  uint64_t v4 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[9];
  uint64_t v6 = type metadata accessor for FMIPItem();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v4 + v1[19];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  uint64_t v12 = v4 + v1[21];
  uint64_t v13 = type metadata accessor for FMIPBatteryStatus();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v4 + v1[33];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v14, 1, v9)) {
    v11(v14, v9);
  }
  unint64_t v15 = (v17 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v15 + 8, v2 | 7);
}

uint64_t sub_1002263F0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FMDeviceDetailViewModel() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_1000D6E0C;
  return sub_10021325C(a1, v6, v7, v8, v9);
}

uint64_t sub_100226514()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_connectionMaterialTask) = 0;
  return swift_release();
}

uint64_t sub_10022652C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10022656C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  id v4 = *(id *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_btDeviceDiscoveryToken);
  *(void *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_btDeviceDiscoveryToken) = v2;
  id v3 = v2;
}

uint64_t sub_1002265B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100226620(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100226680()
{
  return sub_1001DEC34(*(void *)(v0 + 16));
}

void sub_100226688()
{
}

void sub_100226690(uint64_t a1, void *a2)
{
  sub_1002157EC(a1, a2, v2);
}

void sub_100226698()
{
}

uint64_t sub_1002266A0()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release();

  return _swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

void sub_10022675C()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void **)(v0 + v3);
  uint64_t v5 = *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_10021611C(v0 + v2, v4, v5);
}

id sub_100226FD0()
{
  type metadata accessor for FMAccessoryPairingAccountProvider();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = [self sharedInstance];
  id result = [objc_allocWithZone((Class)ACAccountStore) init];
  *(void *)(v0 + 24) = result;
  qword_1006D18A8 = v0;
  return result;
}

uint64_t sub_100227048()
{
  os_log_type_t v1 = static os_log_type_t.default.getter();
  sub_100227620(v1, 0xD00000000000001CLL, 0x800000010058C7B0);
  id v2 = sub_1002274DC();
  if (!v2) {
    return 0;
  }
  unint64_t v3 = v2;
  if ([*(id *)(v0 + 16) securityLevelForAccount:v2] == (id)4)
  {
    os_log_type_t v4 = static os_log_type_t.default.getter();
    sub_100227620(v4, 0x616E452032415348, 0xEC00000064656C62);
    uint64_t v5 = 2;
  }
  else
  {
    os_log_type_t v6 = static os_log_type_t.error.getter();
    sub_100227620(v6, 0x7369442032415348, 0xED000064656C6261);
    uint64_t v5 = 1;
  }

  return v5;
}

id sub_100227114()
{
  os_log_type_t v1 = static os_log_type_t.default.getter();
  sub_100227620(v1, 0xD000000000000018, 0x800000010058C790);
  id v2 = *(void **)(v0 + 24);
  id v3 = [v2 aa_primaryAppleAccount];
  if (!v3) {
    goto LABEL_5;
  }
  os_log_type_t v4 = v3;
  id v5 = [objc_allocWithZone((Class)AAUIProfilePictureStore) initWithAppleAccount:v3 grandSlamAccount:0 accountStore:v2];
  if (!v5)
  {

LABEL_5:
    os_log_type_t v8 = static os_log_type_t.error.getter();
    sub_100227620(v8, 0xD000000000000029, 0x800000010058C760);
    return 0;
  }
  os_log_type_t v6 = v5;
  id v7 = [v5 profilePictureForAccountOwner];

  return v7;
}

void sub_1002271FC(uint64_t a1@<X8>)
{
  os_log_type_t v3 = static os_log_type_t.default.getter();
  sub_100227620(v3, 0xD000000000000018, 0x800000010058C740);
  id v4 = sub_1002274DC();
  if (!v4)
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    char v15 = -1;
    goto LABEL_18;
  }
  id v5 = v4;
  id v6 = [v4 aa_formattedUsername];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    uint64_t v11 = *(void **)(v1 + 16);
    if ([v11 phoneAsAppleIDForAccount:v5])
    {
      os_log_type_t v12 = static os_log_type_t.default.getter();
      sub_100227620(v12, 0x20746E756F636341, 0xEF4F4B414D207369);

      uint64_t v13 = 0;
      uint64_t v14 = 0;
      char v15 = 1;
LABEL_18:
      *(void *)a1 = v8;
      *(void *)(a1 + 8) = v10;
      *(void *)(a1 + 16) = v13;
      *(void *)(a1 + 24) = v14;
      *(unsigned char *)(a1 + 32) = v15;
      return;
    }
    id v16 = [v11 additionalInfoForAccount:v5];
    if (!v16) {
      goto LABEL_17;
    }
    uint64_t v17 = v16;
    uint64_t v18 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    if (*(void *)(v18 + 16) && (unint64_t v19 = sub_100053708(0x6D754E656E6F6870, 0xEC00000073726562), (v20 & 1) != 0))
    {
      sub_1000607C8(*(void *)(v18 + 56) + 32 * v19, (uint64_t)&v27);
      swift_bridgeObjectRelease();
      if (*((void *)&v28 + 1))
      {
        sub_10005D034(&qword_1006B5FA8);
        if (swift_dynamicCast())
        {
          if (*(void *)(v25 + 16))
          {
            uint64_t v21 = *(void *)(v25 + 32);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if (*(void *)(v21 + 16)
              && (unint64_t v22 = sub_100053708(0x6D754E656E6F6870, 0xEB00000000726562), (v23 & 1) != 0))
            {
              sub_1000607C8(*(void *)(v21 + 56) + 32 * v22, (uint64_t)&v27);
            }
            else
            {
              long long v27 = 0u;
              long long v28 = 0u;
            }
            swift_bridgeObjectRelease();
            if (*((void *)&v28 + 1))
            {
              if (swift_dynamicCast())
              {

                uint64_t v13 = v25;
                uint64_t v14 = v26;
                char v15 = 2;
                goto LABEL_18;
              }
              goto LABEL_17;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            long long v27 = 0u;
            long long v28 = 0u;
          }
          goto LABEL_16;
        }
LABEL_17:
        os_log_type_t v24 = static os_log_type_t.default.getter();
        sub_100227620(v24, 0xD000000000000026, 0x800000010058C710);

        uint64_t v13 = 0;
        uint64_t v14 = 0;
        char v15 = 0;
        goto LABEL_18;
      }
    }
    else
    {
      long long v27 = 0u;
      long long v28 = 0u;
      swift_bridgeObjectRelease();
    }
LABEL_16:
    sub_100067244((uint64_t)&v27);
    goto LABEL_17;
  }
  __break(1u);
}

id sub_1002274DC()
{
  os_log_type_t v1 = static os_log_type_t.default.getter();
  sub_100227620(v1, 0xD000000000000018, 0x800000010058C6F0);
  id v2 = [*(id *)(v0 + 24) aa_primaryAppleAccount];
  if (!v2) {
    goto LABEL_6;
  }
  os_log_type_t v3 = v2;
  id v4 = [v2 aa_altDSID];
  if (!v4)
  {

LABEL_6:
    os_log_type_t v7 = static os_log_type_t.error.getter();
    sub_100227620(v7, 0xD00000000000001ALL, 0x800000010058C6D0);
    return 0;
  }
  id v5 = v4;
  id v6 = [*(id *)(v0 + 16) authKitAccountWithAltDSID:v4];

  if (!v6) {
    goto LABEL_6;
  }
  return v6;
}

uint64_t sub_1002275BC()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMAccessoryPairingAccountProvider()
{
  return self;
}

void sub_100227620(os_log_type_t a1, uint64_t a2, unint64_t a3)
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000606BC(v6, (uint64_t)qword_1006D1E98);
  log = Logger.logObject.getter();
  if (os_log_type_enabled(log, a1))
  {
    os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v7 = 136315138;
    sub_1000606F4(a2, a3, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, log, a1, "FMAccessoryPairingAccountProvider: %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t destroy for FMAccessoryPairingAccountProvider.AccountIdentifier(uint64_t a1)
{
  return sub_100121270(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for FMAccessoryPairingAccountProvider.AccountIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1001212D0(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for FMAccessoryPairingAccountProvider.AccountIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1001212D0(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_100121270(v8, v9, v10, v11, v12);
  return a1;
}

__n128 initializeWithTake for FMAccessoryPairingAccountProvider.AccountIdentifier(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FMAccessoryPairingAccountProvider.AccountIdentifier(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_100121270(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMAccessoryPairingAccountProvider.AccountIdentifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMAccessoryPairingAccountProvider.AccountIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1002279A0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1002279A8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FMAccessoryPairingAccountProvider.AccountIdentifier()
{
  return &type metadata for FMAccessoryPairingAccountProvider.AccountIdentifier;
}

void sub_1002279E8()
{
  id v1 = [v0 selectedItem];

  if (v1) {
    return;
  }
  id v2 = [v0 items];
  if (v2)
  {
    sub_100006060(0, (unint64_t *)&unk_1006B6100);
    unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      id v2 = (id)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v2) {
        goto LABEL_6;
      }
    }
    else
    {
      id v2 = *(id *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v2)
      {
LABEL_6:
        if ((v3 & 0xC000000000000001) != 0)
        {
          id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          id v4 = *(id *)(v3 + 32);
        }
        id v2 = v4;
      }
    }
    swift_bridgeObjectRelease();
  }
  [v0 setSelectedItem:v2];

  id v5 = [v0 selectedItem];
  if (v5)
  {
    id v6 = v5;
    sub_100228C7C();
  }
}

uint64_t sub_100227B64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10005D034((uint64_t *)&unk_1006C22C0);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMFPreferences();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  sub_1000061F0((uint64_t)v5);
  return sub_100003F10((uint64_t)v5, (uint64_t *)&unk_1006C22C0);
}

id sub_100227E60()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMTabBar();
  [super dealloc];
}

uint64_t sub_100227F60(uint64_t a1, uint64_t a2)
{
  return sub_100227FA8(a2);
}

uint64_t sub_100227F68(uint64_t a1, uint64_t a2)
{
  return sub_100045F90(a2, (uint64_t)&unk_10062DCC8, (uint64_t)sub_100228430, (uint64_t)&unk_10062DCE0);
}

uint64_t sub_100227FA8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v22 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v20 = *(void *)(v5 - 8);
  uint64_t v21 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FMFPreferences();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  unsigned __int8 v12 = (void *)static OS_dispatch_queue.main.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = swift_allocObject();
  char v15 = v19;
  *(void *)(v14 + 16) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14 + v13, v11, v8);
  aBlock[4] = sub_1002283FC;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10062DC40;
  id v16 = _Block_copy(aBlock);
  id v17 = v15;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000457B4((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_10005ECA8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v7, v21);
}

uint64_t sub_100228330()
{
  uint64_t v1 = type metadata accessor for FMFPreferences();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002283FC()
{
  return sub_100067EBC((uint64_t (*)(void))&type metadata accessor for FMFPreferences, sub_100227B64);
}

void sub_100228430()
{
  sub_100016E24(*(void *)(v0 + 24));
}

uint64_t sub_100228458()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100228490()
{
}

uint64_t sub_1002284B4()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMSelectedSection() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);

  uint64_t v5 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v7 = type metadata accessor for FMIPDevice();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
      uint64_t v8 = v5 + *(int *)(sub_10005D034(&qword_1006BAF00) + 48);
      uint64_t v9 = type metadata accessor for FMIPItem();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      }
      break;
    case 1u:
    case 7u:
      uint64_t v6 = type metadata accessor for FMIPDevice();
      goto LABEL_10;
    case 2u:
      uint64_t v6 = type metadata accessor for FMFFriend();
      goto LABEL_10;
    case 3u:
    case 4u:
      uint64_t v6 = type metadata accessor for FMIPItem();
      goto LABEL_10;
    case 5u:
    case 6u:
      swift_bridgeObjectRelease();
      if (*(void *)(v5 + 16) >= 4uLL) {
        swift_bridgeObjectRelease();
      }
      break;
    case 8u:
      uint64_t v6 = type metadata accessor for FMIPUnknownItem();
LABEL_10:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_100228704()
{
  uint64_t v1 = v0;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy8FMTabBar_contentDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC6FindMy8FMTabBar_peopleSubscription] = 0;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy8FMTabBar_devicesSubscription] = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC6FindMy8FMTabBar_selectionSubscription];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  uint64_t v3 = OBJC_IVAR____TtC6FindMy8FMTabBar_peopleTab;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  uint64_t v4 = self;
  id v5 = [v4 mainBundle];
  v42._countAndFlagsBits = 0xD00000000000001CLL;
  v42._object = (void *)0x800000010058C8E0;
  v6._countAndFlagsBits = 0x545F454C504F4550;
  v6._object = (void *)0xEA00000000004241;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v42);

  NSString v8 = String._bridgeToObjectiveC()();
  uint64_t v9 = self;
  id v10 = [v9 _systemImageNamed:v8];

  id v11 = objc_allocWithZone((Class)UITabBarItem);
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [v11 initWithTitle:v12 image:v10 selectedImage:0];

  *(void *)&v1[v3] = v13;
  uint64_t v14 = OBJC_IVAR____TtC6FindMy8FMTabBar_devicesTab;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v15 = [v4 mainBundle];
  v43._countAndFlagsBits = 0xD00000000000001DLL;
  v43._object = (void *)0x800000010058C900;
  v16._countAndFlagsBits = 0x5F53454349564544;
  v16._object = (void *)0xEB00000000424154;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v43);

  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v9 _systemImageNamed:v18];

  id v20 = objc_allocWithZone((Class)UITabBarItem);
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v22 = [v20 initWithTitle:v21 image:v19 selectedImage:0];

  *(void *)&v1[v14] = v22;
  uint64_t v23 = OBJC_IVAR____TtC6FindMy8FMTabBar_meTab;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v24 = [v4 mainBundle];
  v44._object = (void *)0x800000010058C940;
  v25._countAndFlagsBits = 0x4241545F454DLL;
  v25._object = (void *)0xE600000000000000;
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  v44._countAndFlagsBits = 0xD000000000000018;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)v24, v26, v44);

  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = [v9 _systemImageNamed:v27];

  id v29 = objc_allocWithZone((Class)UITabBarItem);
  NSString v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v31 = [v29 initWithTitle:v30 image:v28 selectedImage:0];

  *(void *)&v1[v23] = v31;
  uint64_t v32 = OBJC_IVAR____TtC6FindMy8FMTabBar_itemsTab;
  id v33 = [v4 mainBundle];
  v34.value._countAndFlagsBits = 0xD000000000000013;
  v45._object = (void *)0x800000010057EF80;
  v34.value._object = (void *)0x800000010057EF60;
  v35._countAndFlagsBits = 0x41545F534D455449;
  v35._object = (void *)0xE900000000000042;
  v36._countAndFlagsBits = 0;
  v36._object = (void *)0xE000000000000000;
  v45._countAndFlagsBits = 0xD000000000000018;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v35, v34, (NSBundle)v33, v36, v45);

  NSString v37 = String._bridgeToObjectiveC()();
  id v38 = [v9 _systemImageNamed:v37];

  id v39 = objc_allocWithZone((Class)UITabBarItem);
  NSString v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v41 = [v39 initWithTitle:v40 image:v38 selectedImage:0];

  *(void *)&v1[v32] = v41;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy8FMTabBar____lazy_storage___largeContentInteraction] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100228C7C()
{
  uint64_t v1 = type metadata accessor for FMSelectedSection();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy8FMTabBar_peopleTab);
  sub_100006060(0, (unint64_t *)&unk_1006B6100);
  id v5 = v4;
  char v6 = static NSObject.== infix(_:_:)();

  if (v6)
  {
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (!result) {
      return result;
    }
    goto LABEL_12;
  }
  id v8 = *(id *)(v0 + OBJC_IVAR____TtC6FindMy8FMTabBar_devicesTab);
  char v9 = static NSObject.== infix(_:_:)();

  if (v9)
  {
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (!result) {
      return result;
    }
    goto LABEL_12;
  }
  id v10 = *(id *)(v0 + OBJC_IVAR____TtC6FindMy8FMTabBar_itemsTab);
  char v11 = static NSObject.== infix(_:_:)();

  if (v11)
  {
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (!result) {
      return result;
    }
    goto LABEL_12;
  }
  id v12 = *(id *)(v0 + OBJC_IVAR____TtC6FindMy8FMTabBar_meTab);
  char v13 = static NSObject.== infix(_:_:)();

  if ((v13 & 1) == 0)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
LABEL_12:
    swift_storeEnumTagMultiPayload();
    sub_100364600((uint64_t)v3);
    swift_unknownObjectRelease();
    return sub_100028108((uint64_t)v3);
  }
  return result;
}

void *sub_100228EB8()
{
  id v16 = [v0 hitTest:0];
  if (v16)
  {
    id v1 = [v0 items];
    if (v1)
    {
      uint64_t v2 = v1;
      sub_100006060(0, (unint64_t *)&unk_1006B6100);
      unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v3 >> 62) {
        goto LABEL_16;
      }
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v5 = v16;
      swift_bridgeObjectRetain();
      for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
      {
        uint64_t v6 = 4;
        while (1)
        {
          id v7 = (v3 & 0xC000000000000001) != 0
             ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
             : *(id *)(v3 + 8 * v6);
          id v8 = v7;
          uint64_t v9 = v6 - 3;
          if (__OFADD__(v6 - 4, 1)) {
            break;
          }
          id v10 = [v7 view];
          if (v10)
          {
            char v11 = v10;
            sub_100006060(0, (unint64_t *)&qword_1006B79A0);
            id v12 = v16;
            id v13 = v11;
            LOBYTE(v11) = static NSObject.== infix(_:_:)();

            if (v11)
            {

              swift_bridgeObjectRelease_n();
              return v8;
            }
          }

          ++v6;
          if (v9 == v4) {
            goto LABEL_17;
          }
        }
        __break(1u);
LABEL_16:
        id v14 = v16;
        swift_bridgeObjectRetain();
      }
LABEL_17:

      swift_bridgeObjectRelease_n();
    }
    else
    {
    }
  }
  return 0;
}

void sub_1002290BC()
{
  id v1 = v0;
  id v2 = [v0 hitTest:0];
  if (v2)
  {
    id v18 = v2;
    id v3 = [v0 items];
    if (v3)
    {
      uint64_t v4 = v3;
      sub_100006060(0, (unint64_t *)&unk_1006B6100);
      unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v5 >> 62) {
        goto LABEL_16;
      }
      uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v7 = v18;
      swift_bridgeObjectRetain();
      for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
      {
        uint64_t v8 = 4;
        while (1)
        {
          id v9 = (v5 & 0xC000000000000001) != 0
             ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
             : *(id *)(v5 + 8 * v8);
          id v10 = v9;
          uint64_t v11 = v8 - 3;
          if (__OFADD__(v8 - 4, 1)) {
            break;
          }
          id v12 = [v9 view];
          if (v12)
          {
            id v13 = v12;
            sub_100006060(0, (unint64_t *)&qword_1006B79A0);
            id v14 = v18;
            id v15 = v13;
            LOBYTE(v13) = static NSObject.== infix(_:_:)();

            if (v13)
            {

              swift_bridgeObjectRelease_n();
              [v1 setSelectedItem:v10];
              sub_100228C7C();
              id v16 = v10;
              goto LABEL_19;
            }
          }

          ++v8;
          if (v11 == v6) {
            goto LABEL_17;
          }
        }
        __break(1u);
LABEL_16:
        id v17 = v18;
        swift_bridgeObjectRetain();
      }
LABEL_17:

      swift_bridgeObjectRelease_n();
    }
    id v16 = v18;
LABEL_19:
  }
}

id sub_100229318(void *a1, void *a2, double a3)
{
  uint64_t v7 = OBJC_IVAR____TtC6FindMy7FMBadge_color;
  *(void *)&v3[OBJC_IVAR____TtC6FindMy7FMBadge_color] = 0;
  uint64_t v8 = OBJC_IVAR____TtC6FindMy7FMBadge_strokeColor;
  *(void *)&v3[OBJC_IVAR____TtC6FindMy7FMBadge_strokeColor] = 0;
  id v9 = &v3[OBJC_IVAR____TtC6FindMy7FMBadge_insets];
  *(_OWORD *)id v9 = xmmword_100560BC0;
  *((_OWORD *)v9 + 1) = xmmword_100560BC0;
  id v10 = *(void **)&v3[v7];
  *(void *)&v3[v7] = a1;
  uint64_t v11 = v3;
  id v12 = a1;

  *(double *)&v11[OBJC_IVAR____TtC6FindMy7FMBadge_lineWidth] = a3;
  id v13 = *(void **)&v3[v8];
  *(void *)&v3[v8] = a2;
  id v14 = a2;

  v21.receiver = v11;
  v21.super_class = (Class)type metadata accessor for FMBadge();
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v16 = self;
  id v17 = v15;
  id v18 = [v16 clearColor];
  [v17 setBackgroundColor:v18];

  id v19 = v17;
  [v19 setTextAlignment:1];

  return v19;
}

double sub_1002295A4()
{
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for FMBadge();
  [super intrinsicContentSize];
  if ((result != 0.0 || v2 != 0.0) && result != UIViewNoIntrinsicMetric && v2 != UIViewNoIntrinsicMetric) {
    return result
  }
         + *(double *)&v0[OBJC_IVAR____TtC6FindMy7FMBadge_insets + 8]
         + *(double *)&v0[OBJC_IVAR____TtC6FindMy7FMBadge_insets + 24];
  return result;
}

id sub_100229654()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMBadge();
  return [super dealloc];
}

uint64_t type metadata accessor for FMBadge()
{
  return self;
}

void sub_1002296F8()
{
  [v0 bounds];
  double v2 = v1;
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  id v9 = [self bezierPathWithRoundedRect:v1 cornerRadius:v3, v5, v7, v7 * 0.5];
  [v9 setLineWidth:*(double *)&v0[OBJC_IVAR____TtC6FindMy7FMBadge_lineWidth]];
  [v9 setLineCapStyle:1];
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy7FMBadge_color] set];
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy7FMBadge_strokeColor] setStroke];
  [v9 fill];
  [v9 stroke];
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for FMBadge();
  [super drawRect:v2, v4, v6, v8];
}

void sub_100229864()
{
  double v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPDeviceState();
  uint64_t v101 = *(void *)(v2 - 8);
  uint64_t v102 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  os_log_t v100 = (char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  unint64_t v99 = (char *)&v96 - v5;
  uint64_t v6 = sub_10005D034(&qword_1006B5A10);
  __chkstk_darwin(v6 - 8);
  uint64_t v104 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v8 = (void *)sub_10005D034(&qword_1006B3190);
  uint64_t v106 = (void (**)(void, id))*(v8 - 1);
  id v107 = v8;
  __chkstk_darwin(v8);
  unint64_t v105 = (unint64_t)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = type metadata accessor for FMIPDevice();
  uint64_t v10 = *(void *)(v108 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v108);
  uint64_t v103 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = (objc_class *)type metadata accessor for FMContactDetailsWelcomeScreenViewController();
  v111.receiver = v0;
  v111.super_class = v12;
  [super viewDidLoad];
  id v13 = [v0 view];
  if (!v13)
  {
    __break(1u);
    goto LABEL_8;
  }
  id v14 = v13;
  id v15 = self;
  id v16 = [v15 secondarySystemBackgroundColor];
  [v14 setBackgroundColor:v16];

  uint64_t v17 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_scrollView;
  id v18 = *(id *)&v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_scrollView];
  id v19 = [v15 secondarySystemBackgroundColor];
  [v18 setBackgroundColor:v19];

  uint64_t v20 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_contentStackView;
  id v21 = *(id *)&v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_contentStackView];
  id v97 = v15;
  id v22 = [v15 secondarySystemBackgroundColor];
  [v21 setBackgroundColor:v22];

  uint64_t v98 = (char *)v17;
  [*(id *)&v1[v17] setPreservesSuperviewLayoutMargins:1];
  [*(id *)&v1[v17] setContentInsetAdjustmentBehavior:3];
  [*(id *)&v1[v20] setPreservesSuperviewLayoutMargins:1];
  [*(id *)&v1[v20] setAxis:1];
  uint64_t v23 = &v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_device];
  uint64_t v24 = swift_allocObject();
  swift_weakInit();
  Swift::String v25 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  Swift::String v26 = v103;
  unint64_t v96 = v23;
  NSString v27 = v23;
  uint64_t v28 = v108;
  v25(v103, v27, v108);
  unint64_t v29 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v30 = v29 + v11;
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v24;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v31 + v29, v26, v28);
  *(unsigned char *)(v31 + v30) = 1;
  sub_10005D034((uint64_t *)&unk_1006B31B0);
  swift_allocObject();
  swift_retain();
  uint64_t v110 = Future.init(_:)();
  sub_1000450A0(&qword_1006C1EE0, (uint64_t *)&unk_1006B31B0);
  uint64_t v32 = Publisher.eraseToAnyPublisher()();
  swift_release();
  swift_release();
  uint64_t v108 = v32;
  uint64_t v110 = v32;
  id v109 = [self mainRunLoop];
  uint64_t v33 = type metadata accessor for NSRunLoop.SchedulerOptions();
  uint64_t v34 = (uint64_t)v104;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v104, 1, 1, v33);
  sub_10005D034(&qword_1006B31A0);
  sub_100006060(0, (unint64_t *)&qword_1006C1DE0);
  sub_1000450A0((unint64_t *)&unk_1006B4250, &qword_1006B31A0);
  sub_100150450();
  unint64_t v35 = v105;
  Publisher.receive<A>(on:options:)();
  sub_1001D12E0(v34);

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1000450A0(&qword_1006B31A8, &qword_1006B3190);
  id v36 = v107;
  uint64_t v37 = Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  v106[1](v35, v36);
  *(void *)&v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_productImageCancellable] = v37;
  swift_release();
  uint64_t v38 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_deviceImageView;
  [*(id *)&v1[v20] addArrangedSubview:*(void *)&v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_deviceImageView]];
  id v39 = *(void **)&v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_deviceNameLabel];
  [*(id *)&v1[v20] addArrangedSubview:v39];
  NSString v40 = *(void **)&v1[v20];
  id v107 = *(id *)&v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_phoneNumberLabel];
  [v40 addArrangedSubview:];
  uint64_t v41 = *(void *)&v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsSwitchSection];
  Swift::String v42 = *(char **)&v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsSwitch];
  [*(id *)(v41 + OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentStackView) addArrangedSubview:v42];
  [*(id *)&v1[v20] addArrangedSubview:v41];
  Swift::String v43 = *(void **)&v1[v20];
  Swift::String v44 = v98;
  uint64_t v106 = *(void (***)(void, id))&v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_subtitleLabel];
  [v43 addArrangedSubview:];
  [*(id *)&v44[(void)v1] addSubview:*(void *)&v1[v20]];
  id v45 = [v1 view];
  if (!v45)
  {
LABEL_8:
    __break(1u);
    return;
  }
  uint64_t v46 = v45;
  [v45 addSubview:*(void *)&v44[(void)v1]];

  id v47 = [v1 navigationItem];
  uint64_t v103 = (char *)self;
  id v48 = [v103 mainBundle];
  v49._countAndFlagsBits = 0xD000000000000024;
  unint64_t v105 = (unint64_t)"CONTACT_DETAILS_ERROR_TITLE";
  uint64_t v98 = (char *)0x800000010058CBA0;
  v112._object = (void *)0x800000010058CBA0;
  v49._object = (void *)0x800000010058CC60;
  v50.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v50.value._object = (void *)0xEC00000031656C62;
  v51._countAndFlagsBits = 0;
  v51._object = (void *)0xE000000000000000;
  v112._countAndFlagsBits = 0xD000000000000017;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v49, v50, (NSBundle)v48, v51, v112);

  NSString v52 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v47 setTitle:v52];

  [*(id *)&v1[v38] setContentMode:4];
  [v39 setNumberOfLines:0];
  uint64_t v53 = (char *)self;
  id v54 = [v53 preferredFontForTextStyle:UIFontTextStyleHeadline];
  sub_10005D034((uint64_t *)&unk_1006B4280);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10055B970;
  *(void *)(inited + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(inited + 40) = UIFontWeightSemibold;
  os_log_type_t v56 = UIFontWeightTrait;
  unint64_t v57 = sub_10005010C(inited);
  id v58 = sub_10005021C(v57);

  swift_bridgeObjectRelease();
  unint64_t v59 = (void *)sub_100042318(0x8000);

  [v39 setFont:v59];
  id v60 = v97;
  id v61 = [v97 labelColor];
  [v39 setTextColor:v61];

  [v39 setTextAlignment:1];
  id v62 = v107;
  [v107 setNumberOfLines:0];
  uint64_t v104 = v53;
  id v63 = [v53 preferredFontForTextStyle:UIFontTextStyleBody];
  unint64_t v64 = (void *)sub_100042318(0x8000);

  [v62 setFont:v64];
  id v65 = [v60 secondaryLabelColor];
  [v62 setTextColor:v65];

  [v62 setTextAlignment:1];
  os_log_type_t v66 = v99;
  FMIPDevice.state.getter();
  uint64_t v67 = v100;
  static FMIPDeviceState.isDeviceWithYou.getter();
  sub_10022BEEC((unint64_t *)&qword_1006C0390, (void (*)(uint64_t))&type metadata accessor for FMIPDeviceState);
  uint64_t v68 = v102;
  char v69 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  unint64_t v70 = *(void (**)(char *, uint64_t))(v101 + 8);
  v70(v67, v68);
  v70(v66, v68);
  uint64_t v71 = v60;
  if (v69)
  {
    uint64_t v72 = v103;
    id v73 = [v103 mainBundle];
    v74._countAndFlagsBits = 0xD00000000000002ALL;
    v113._object = v98;
    v74._object = (void *)0x800000010058CC30;
    v75.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v75.value._object = (void *)0xEC00000031656C62;
    v76._countAndFlagsBits = 0;
    v76._object = (void *)0xE000000000000000;
    v113._countAndFlagsBits = 0xD000000000000017;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v74, v75, (NSBundle)v73, v76, v113);

    uint64_t v71 = v60;
    NSString v77 = String._bridgeToObjectiveC()();
  }
  else
  {
    sub_10022F92C(0xD000000000000033, (void *)0x800000010058CBF0);
    NSString v77 = String._bridgeToObjectiveC()();
    uint64_t v72 = v103;
  }
  uint64_t v78 = v106;
  swift_bridgeObjectRelease();
  [v78 setText:v77];

  [v78 setNumberOfLines:0];
  id v79 = [v104 preferredFontForTextStyle:UIFontTextStyleFootnote];
  [v78 setFont:v79];

  id v80 = [v71 secondaryLabelColor];
  [v78 setTextColor:v80];

  [v78 setLineBreakMode:0];
  [v78 sizeToFit];
  sub_10022AB98();
  id v81 = [v72 mainBundle];
  v82._countAndFlagsBits = 0xD000000000000025;
  v114._object = (void *)(v105 | 0x8000000000000000);
  v82._object = (void *)0x800000010058CC90;
  v83.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v83.value._object = (void *)0xEC00000031656C62;
  v84._countAndFlagsBits = 0;
  v84._object = (void *)0xE000000000000000;
  v114._countAndFlagsBits = 0xD000000000000017;
  Swift::String v85 = NSLocalizedString(_:tableName:bundle:value:comment:)(v82, v83, (NSBundle)v81, v84, v114);

  *(Swift::String *)&v42[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_title] = v85;
  swift_bridgeObjectRelease();
  id v86 = *(id *)&v42[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_titleLabel];
  swift_bridgeObjectRetain();
  NSString v87 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v86 setText:v87];

  *(void *)&v42[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_delegate + 8] = &off_10062DDB0;
  swift_unknownObjectWeakAssign();
  NSString v88 = String._bridgeToObjectiveC()();
  [v42 setAccessibilityIdentifier:v88];

  v42[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_separated] = 0;
  [*(id *)&v42[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_separator] setHidden:1];
  v42[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_isOn] = v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsState];
  [*(id *)&v42[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_settingSwitch] setOn:];
  v42[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_isEnabled] = v69 & 1;
  sub_1001431C0();
  id v89 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:1 target:v1 action:"cancelActionWithSender:"];
  id v90 = [v1 navigationItem];
  [v90 setLeftBarButtonItem:v89];

  id v91 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:0 target:v1 action:"doneAction"];
  id v92 = [v1 navigationItem];
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v93 = swift_allocObject();
  *(_OWORD *)(v93 + 16) = xmmword_10055BD30;
  *(void *)(v93 + 32) = v91;
  uint64_t v110 = v93;
  specialized Array._endMutation()();
  sub_100006060(0, &qword_1006AF860);
  id v94 = v91;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v92 setRightBarButtonItems:isa animated:0];
  swift_release();
}

void sub_10022A864(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    [*(id *)(Strong + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_deviceImageView) setImage:v1];
  }
}

id sub_10022A91C(char a1, char a2)
{
  uint64_t v3 = v2;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000606BC(v6, (uint64_t)qword_1006D1E98);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "FMContactDetailsWelcomeScreenViewController : update called", v9, 2u);
    swift_slowDealloc();
  }

  *(unsigned char *)(v3 + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_originalShowContactDetailsState) = a2 & 1;
  if (a1)
  {
    uint64_t v10 = *(void **)(v3 + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_subtitleLabel);
    id v11 = [self mainBundle];
    v12._countAndFlagsBits = 0xD00000000000002ALL;
    v18._object = (void *)0x800000010058CBA0;
    v12._object = (void *)0x800000010058CC30;
    v13.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v13.value._object = (void *)0xEC00000031656C62;
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    v18._countAndFlagsBits = 0xD000000000000017;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v18);
  }
  else
  {
    *(unsigned char *)(v3 + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsState) = a2 & 1;
    uint64_t v16 = *(void *)(v3 + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsSwitch);
    *(unsigned char *)(v16 + OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_isOn) = a2 & 1;
    [*(id *)(v16 + OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_settingSwitch) setOn:];
    uint64_t v10 = *(void **)(v3 + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_subtitleLabel);
    sub_10022F92C(0xD000000000000033, (void *)0x800000010058CBF0);
  }
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v10 setText:v15];

  *(unsigned char *)(*(void *)(v3
                       + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsSwitch)
           + OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_isEnabled) = a1 & 1;
  return sub_1001431C0();
}

void sub_10022AB98()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_scrollView;
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_scrollView];
  os_log_type_t v56 = (char *)OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_contentStackView;
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_contentStackView];
  uint64_t v5 = *(void **)((char *)v1 + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_deviceImageView);
  uint64_t v6 = *(void **)((char *)v1 + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_deviceNameLabel);
  uint64_t v7 = *(void **)((char *)v1 + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_phoneNumberLabel);
  os_log_type_t v8 = *(void **)((char *)v1
                + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsSwitchSection);
  uint64_t v9 = *(void **)((char *)v1 + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_subtitleLabel);
  id v10 = v3;
  id v11 = v4;
  id v12 = v5;
  id v13 = v6;
  id v14 = v7;
  id v15 = v8;
  id v16 = v9;
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v16 setTranslatesAutoresizingMaskIntoConstraints:0];

  sub_10005D034(&qword_1006AF2D0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_10055B950;
  id v18 = [*(id *)((char *)v1 + v2) topAnchor];
  id v19 = [v1 view];
  if (!v19)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v20 = v19;
  id v21 = [v19 safeAreaLayoutGuide];

  id v22 = [v21 topAnchor];
  id v23 = [v18 constraintEqualToAnchor:v22];

  *(void *)(v17 + 32) = v23;
  id v24 = [*(id *)((char *)v1 + v2) bottomAnchor];
  id v25 = [v1 view];
  if (!v25)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  Swift::String v26 = v25;
  id v27 = [v25 bottomAnchor];

  id v28 = [v24 constraintEqualToAnchor:v27];
  *(void *)(v17 + 40) = v28;
  id v29 = [*(id *)((char *)v1 + v2) leadingAnchor];
  id v30 = [v1 view];
  if (!v30)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v31 = v30;
  id v32 = [v30 leadingAnchor];

  id v33 = [v29 constraintEqualToAnchor:v32];
  *(void *)(v17 + 48) = v33;
  id v34 = [*(id *)((char *)v1 + v2) trailingAnchor];
  id v35 = [v1 view];
  if (!v35)
  {
LABEL_11:
    __break(1u);
    return;
  }
  id v36 = v35;
  id v55 = self;
  id v37 = [v36 trailingAnchor];

  id v38 = [v34 constraintEqualToAnchor:v37];
  *(void *)(v17 + 56) = v38;
  specialized Array._endMutation()();
  sub_100006060(0, (unint64_t *)&qword_1006AEE60);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v55 activateConstraints:isa];

  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_10055B950;
  id v41 = [*(id *)&v56[(void)v1] topAnchor];
  id v42 = [*(id *)((char *)v1 + v2) topAnchor];
  id v43 = [v41 constraintEqualToAnchor:v42];

  *(void *)(v40 + 32) = v43;
  id v44 = [*(id *)&v56[(void)v1] bottomAnchor];
  id v45 = [*(id *)((char *)v1 + v2) bottomAnchor];
  id v46 = [v44 constraintEqualToAnchor:v45];

  *(void *)(v40 + 40) = v46;
  id v47 = [*(id *)&v56[(void)v1] leadingAnchor];
  id v48 = [*(id *)((char *)v1 + v2) layoutMarginsGuide];
  id v49 = [v48 leadingAnchor];

  id v50 = [v47 constraintEqualToAnchor:v49];
  *(void *)(v40 + 48) = v50;
  id v51 = [*(id *)&v56[(void)v1] trailingAnchor];
  id v52 = [*(id *)((char *)v1 + v2) layoutMarginsGuide];
  id v53 = [v52 trailingAnchor];

  id v54 = [v51 constraintEqualToAnchor:v53];
  *(void *)(v40 + 56) = v54;
  specialized Array._endMutation()();
  Class v57 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v55 activateConstraints:v57];
}

id sub_10022B1D4(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsState;
  if (v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsState] == v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_originalShowContactDetailsState])
  {
    return [v1 dismissViewControllerAnimated:1 completion:0];
  }
  else
  {
    sub_100437D88(a1);
    id result = (id)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      int v4 = v1[v2];
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = v1;
      uint64_t v6 = v1;
      sub_10020CD18(v4, (uint64_t)sub_10022BD9C, v5);
      swift_release();
      return (id)swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_10022B2DC(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for FMIPActionStatus();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  os_log_type_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003F0454(v6);
  uint64_t v9 = *(void (**)(char *, void, uint64_t))(v5 + 104);
  v9(v8, enum case for FMIPActionStatus.success(_:), v4);
  sub_10022BEEC(&qword_1006C03C0, (void (*)(uint64_t))&type metadata accessor for FMIPActionStatus);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  uint64_t v10 = v48;
  uint64_t v11 = v50;
  id v47 = *(void (**)(char *, uint64_t))(v5 + 8);
  v47(v8, v4);
  if (v10 == v11)
  {
    [a2 dismissViewControllerAnimated:1 completion:0];
  }
  else
  {
    id v46 = a2;
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    id v44 = v9;
    uint64_t v45 = a1;
    uint64_t v12 = type metadata accessor for Logger();
    sub_1000606BC(v12, (uint64_t)qword_1006D1E98);
    id v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMContactDetailsWelcomeScreenViewController: Error occurred", v15, 2u);
      swift_slowDealloc();
    }

    uint64_t v48 = 0;
    unint64_t v49 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v16 = self;
    id v17 = [v16 mainBundle];
    v18._uint64_t countAndFlagsBits = 0xD000000000000019;
    v51._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
    v51._object = (void *)0x8000000100585390;
    v18._object = (void *)0x8000000100585370;
    v19._uint64_t countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    uint64_t v42 = 0xD00000000000002BLL;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v51)._countAndFlagsBits;

    uint64_t v48 = 0;
    unint64_t v49 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v20 = [v16 mainBundle];
    v21._uint64_t countAndFlagsBits = 0xD000000000000018;
    v52._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
    v52._object = (void *)0x80000001005853E0;
    v21._object = (void *)0x80000001005853C0;
    v22._uint64_t countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v52);

    v44(v8, enum case for FMIPActionStatus.error(_:), v4);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v23 = v48;
    uint64_t v24 = v50;
    v47(v8, v4);
    if (v23 == v24)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v25 = [v16 mainBundle];
      v53._object = (void *)0x800000010058CBA0;
      v26._object = (void *)0x800000010058CB70;
      v26._uint64_t countAndFlagsBits = v42;
      v27.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v27.value._object = (void *)0xEC00000031656C62;
      v28._uint64_t countAndFlagsBits = 0;
      v28._object = (void *)0xE000000000000000;
      v53._uint64_t countAndFlagsBits = 0xD000000000000017;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v26, v27, (NSBundle)v25, v28, v53);

      id v29 = [v16 mainBundle];
      v30._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
      v54._object = (void *)0x800000010058CBA0;
      v30._object = (void *)0x800000010058CBC0;
      v31.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v31.value._object = (void *)0xEC00000031656C62;
      v32._uint64_t countAndFlagsBits = 0;
      v32._object = (void *)0xE000000000000000;
      v54._uint64_t countAndFlagsBits = 0xD000000000000017;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v30, v31, (NSBundle)v29, v32, v54);
    }
    NSString v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v35 = [self alertControllerWithTitle:v33 message:v34 preferredStyle:1];

    uint64_t v48 = 0;
    unint64_t v49 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v36 = [v16 mainBundle];
    v55._uint64_t countAndFlagsBits = 0xD000000000000021;
    v55._object = (void *)0x800000010057F840;
    v37._uint64_t countAndFlagsBits = 0x4F545455425F4B4FLL;
    v37._object = (void *)0xEF454C5449545F4ELL;
    v38._uint64_t countAndFlagsBits = 0;
    v38._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v37, (Swift::String_optional)0, (NSBundle)v36, v38, v55);

    NSString v39 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v40 = [self actionWithTitle:v39 style:1 handler:0];

    [v35 addAction:v40];
    [v46 presentViewController:v35 animated:1 completion:0];
  }
}

uint64_t sub_10022B9E0()
{
  sub_100068760(v0 + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_delegate);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsSwitchSection));

  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_device;
  uint64_t v2 = type metadata accessor for FMIPDevice();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

id sub_10022BAEC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMContactDetailsWelcomeScreenViewController();
  return [super dealloc];
}

uint64_t sub_10022BC34()
{
  return type metadata accessor for FMContactDetailsWelcomeScreenViewController();
}

uint64_t type metadata accessor for FMContactDetailsWelcomeScreenViewController()
{
  uint64_t result = qword_1006B6218;
  if (!qword_1006B6218) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10022BC88()
{
  uint64_t result = type metadata accessor for FMIPDevice();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_10022BD54(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsState) = a2;
}

uint64_t sub_10022BD64()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10022BD9C(uint64_t a1)
{
  sub_10022B2DC(a1, *(void **)(v1 + 16));
}

uint64_t sub_10022BDA4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10022BDDC()
{
  uint64_t v1 = type metadata accessor for FMIPDevice();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10022BEAC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10022BEE4(uint64_t *a1)
{
}

uint64_t sub_10022BEEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_10022BF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v5 = type metadata accessor for FMIPDeviceState();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v35 - v10;
  uint64_t v12 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_scrollView;
  id v13 = objc_allocWithZone((Class)UIScrollView);
  os_log_type_t v14 = v4;
  *(void *)&v4[v12] = [v13 init];
  uint64_t v15 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_contentStackView;
  *(void *)&v14[v15] = [objc_allocWithZone((Class)UIStackView) init];
  *(void *)&v14[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v16 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_deviceImageView;
  *(void *)&v14[v16] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v17 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_deviceNameLabel;
  *(void *)&v14[v17] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v18 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_phoneNumberLabel;
  *(void *)&v14[v18] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v19 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_subtitleLabel;
  *(void *)&v14[v19] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v20 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsSwitchSection;
  *(void *)&v14[v20] = [objc_allocWithZone((Class)type metadata accessor for FMSectionPlatterGroupView()) init];
  uint64_t v21 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsSwitch;
  *(void *)&v14[v21] = [objc_allocWithZone((Class)type metadata accessor for FMSettingSwitchView()) init];
  *(void *)&v14[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_productImageCancellable] = 0;
  Swift::String v22 = &v14[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_device];
  uint64_t v23 = type metadata accessor for FMIPDevice();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v22, v36, v23);
  FMIPDevice.state.getter();
  static FMIPDeviceState.isShowContactDetailsEnabled.getter();
  sub_10022BEEC((unint64_t *)&qword_1006C0390, (void (*)(uint64_t))&type metadata accessor for FMIPDeviceState);
  LOBYTE(v22) = dispatch thunk of SetAlgebra.isSuperset(of:)();
  Swift::String v26 = *(void (**)(char *, uint64_t))(v6 + 8);
  v26(v9, v5);
  v26(v11, v5);
  v14[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_originalShowContactDetailsState] = v22 & 1;
  v14[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsState] = v22 & 1;

  *(void *)&v14[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] = v35;
  Swift::String_optional v27 = (objc_class *)type metadata accessor for FMMediatedViewController();
  v39.receiver = v14;
  v39.super_class = v27;
  swift_retain();
  Swift::String v28 = (char *)objc_msgSendSuper2(&v39, "initWithNibName:bundle:", 0, 0);
  uint64_t v29 = v25;
  FMIPDevice.name.getter();
  Swift::String v30 = *(void **)&v28[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_deviceNameLabel];
  NSString v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v30 setText:v31];

  sub_100119B04(v37);
  swift_bridgeObjectRelease();
  Swift::String v32 = *(void **)&v28[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_phoneNumberLabel];
  NSString v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v32 setText:v33];

  sub_10022AB98();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v29, v23);
  return v28;
}

void sub_10022C36C()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_scrollView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIScrollView) init];
  uint64_t v2 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_contentStackView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIStackView) init];
  *(void *)&v0[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v3 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_deviceImageView;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v4 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_deviceNameLabel;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v5 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_phoneNumberLabel;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v6 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_subtitleLabel;
  *(void *)&v0[v6] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v7 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsSwitchSection;
  *(void *)&v0[v7] = [objc_allocWithZone((Class)type metadata accessor for FMSectionPlatterGroupView()) init];
  uint64_t v8 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsSwitch;
  *(void *)&v0[v8] = [objc_allocWithZone((Class)type metadata accessor for FMSettingSwitchView()) init];
  *(void *)&v0[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_productImageCancellable] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10022C4F4()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v17 - v5;
  Date.init()();
  Date.timeIntervalSince1970.getter();
  double v8 = v7;
  uint64_t v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v6, v0);
  static Date.distantPast.getter();
  Date.timeIntervalSince1970.getter();
  double v11 = v10;
  v9(v4, v0);
  double v12 = v8 - v11;
  if (v8 - v11 < 0.0 || v12 > 30.0)
  {
    long double v14 = 60.0;
    if (v12 < 30.0 || v12 > 60.0)
    {
      long double v14 = 3600.0;
      if (v12 >= 60.0 && v12 <= 3600.0) {
        long double v14 = 60.0;
      }
    }
    fmod(v12, v14);
  }
}

void sub_10022C680()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  Date.timeIntervalSince1970.getter();
  double v5 = v4;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  type metadata accessor for FMItemCellViewModel();
  Date.timeIntervalSince1970.getter();
  double v7 = v5 - v6;
  if (v7 < 0.0 || v7 > 30.0)
  {
    long double v9 = 60.0;
    if (v7 < 30.0 || v7 > 60.0)
    {
      long double v9 = 3600.0;
      if (v7 >= 60.0 && v7 <= 3600.0) {
        long double v9 = 60.0;
      }
    }
    fmod(v7, v9);
  }
}

void sub_10022C7D4()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  Date.timeIntervalSince1970.getter();
  double v5 = v4;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  type metadata accessor for FMDeviceCellViewModel();
  Date.timeIntervalSince1970.getter();
  double v7 = v5 - v6;
  if (v7 < 0.0 || v7 > 30.0)
  {
    long double v9 = 60.0;
    if (v7 < 30.0 || v7 > 60.0)
    {
      long double v9 = 3600.0;
      if (v7 >= 60.0 && v7 <= 3600.0) {
        long double v9 = 60.0;
      }
    }
    fmod(v7, v9);
  }
}

void sub_10022C928()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  Date.timeIntervalSince1970.getter();
  double v5 = v4;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  type metadata accessor for FMItemDetailViewModel();
  Date.timeIntervalSince1970.getter();
  double v7 = v5 - v6;
  if (v7 < 0.0 || v7 > 30.0)
  {
    long double v9 = 60.0;
    if (v7 < 30.0 || v7 > 60.0)
    {
      long double v9 = 3600.0;
      if (v7 >= 60.0 && v7 <= 3600.0) {
        long double v9 = 60.0;
      }
    }
    fmod(v7, v9);
  }
}

void sub_10022CA7C()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  Date.timeIntervalSince1970.getter();
  double v5 = v4;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  type metadata accessor for FMDeviceDetailViewModel();
  Date.timeIntervalSince1970.getter();
  double v7 = v5 - v6;
  if (v7 < 0.0 || v7 > 30.0)
  {
    long double v9 = 60.0;
    if (v7 < 30.0 || v7 > 60.0)
    {
      long double v9 = 3600.0;
      if (v7 >= 60.0 && v7 <= 3600.0) {
        long double v9 = 60.0;
      }
    }
    fmod(v7, v9);
  }
}

void sub_10022CBD0()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  Date.timeIntervalSince1970.getter();
  double v5 = v4;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  type metadata accessor for FMUnknownItemCellViewModel();
  Date.timeIntervalSince1970.getter();
  double v7 = v5 - v6;
  if (v7 < 0.0 || v7 > 30.0)
  {
    long double v9 = 60.0;
    if (v7 < 30.0 || v7 > 60.0)
    {
      long double v9 = 3600.0;
      if (v7 >= 60.0 && v7 <= 3600.0) {
        long double v9 = 60.0;
      }
    }
    fmod(v7, v9);
  }
}

void sub_10022CD24(void (*a1)(void))
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  double v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  Date.timeIntervalSince1970.getter();
  double v7 = v6;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  a1(0);
  Date.timeIntervalSince1970.getter();
  double v9 = v7 - v8;
  if (v9 < 0.0 || v9 > 30.0)
  {
    long double v11 = 60.0;
    if (v9 < 30.0 || v9 > 60.0)
    {
      long double v11 = 3600.0;
      if (v9 >= 60.0 && v9 <= 3600.0) {
        long double v11 = 60.0;
      }
    }
    fmod(v9, v11);
  }
}

void sub_10022CE88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  double v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  double v10 = (char *)&v21 - v9;
  Date.init()();
  Date.timeIntervalSince1970.getter();
  double v12 = v11;
  id v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v10, v4);
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  Date.timeIntervalSince1970.getter();
  double v15 = v14;
  v13(v8, v4);
  double v16 = v12 - v15;
  if (v12 - v15 < 0.0 || v16 > 30.0)
  {
    long double v18 = 60.0;
    if (v16 < 30.0 || v16 > 60.0)
    {
      long double v18 = 3600.0;
      if (v16 >= 60.0 && v16 <= 3600.0) {
        long double v18 = 60.0;
      }
    }
    fmod(v16, v18);
  }
}

void sub_10022D050(void *a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_1000606BC(v7, (uint64_t)qword_1006D1E98);
    double v8 = a1;
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      double v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = a3;
      double v12 = (void *)swift_slowAlloc();
      *(_DWORD *)double v11 = 138412290;
      id v13 = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *double v12 = v8;

      _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMItemAger: refresh timer fired %@", v11, 0xCu);
      sub_10005D034((uint64_t *)&unk_1006B5A50);
      swift_arrayDestroy();
      a3 = v21;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v9 = v8;
    }

    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v18 = *(void *)(v6 + 24);
      uint64_t ObjectType = swift_getObjectType();
      sub_10005D034(&qword_1006B19B0);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_10055B970;
      sub_10005FAA4(a3, v20 + 32);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8))(v6, v20, ObjectType, v18);
      swift_bridgeObjectRelease();
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_1000606BC(v14, (uint64_t)qword_1006D1E98);
    double v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "FMItemAger: refresh timer cannot be fired because self has been deallocated", v17, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_10022D370()
{
}

void sub_10022D3A8()
{
}

void sub_10022D3D4()
{
}

uint64_t sub_10022D400(char *a1, char *a2, char *a3, char *a4)
{
  uint64_t v63 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v63 - 8);
  uint64_t v9 = __chkstk_darwin(v63);
  id v62 = (char *)v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v60 = a3;
  id v61 = (char *)v57 - v11;
  uint64_t v12 = a2 - a1;
  uint64_t v13 = (a2 - a1) / 40;
  uint64_t v14 = a3 - a2;
  uint64_t v15 = v14 / 40;
  uint64_t v72 = a1;
  uint64_t v71 = a4;
  if (v13 >= v14 / 40)
  {
    if (v14 < -39) {
      goto LABEL_43;
    }
    if (a4 != a2 || &a2[40 * v15] <= a4) {
      memmove(a4, a2, 40 * v15);
    }
    uint64_t v35 = &a4[40 * v15];
    unint64_t v70 = v35;
    uint64_t v72 = a2;
    if (v14 < 40 || a1 >= a2) {
      goto LABEL_42;
    }
    v57[2] = v8 + 8;
    id v58 = a1;
    unint64_t v36 = (unint64_t)(v60 - 40);
    unint64_t v59 = a4;
    uint64_t v37 = v62;
    uint64_t v38 = (void (**)(char *, uint64_t))(v8 + 8);
    while (1)
    {
      id v60 = (char *)(v36 + 40);
      sub_10005FAA4((uint64_t)(v35 - 40), (uint64_t)v67);
      uint64_t v41 = a2 - 40;
      sub_10005FAA4((uint64_t)(a2 - 40), (uint64_t)v64);
      uint64_t v43 = v68;
      uint64_t v44 = v69;
      sub_10002CEB8(v67, v68);
      uint64_t v45 = v61;
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v44);
      uint64_t v46 = v65;
      uint64_t v47 = v66;
      sub_10002CEB8(v64, v65);
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v47);
      LOBYTE(v46) = static Date.< infix(_:_:)();
      uint64_t v48 = *v38;
      uint64_t v49 = v63;
      (*v38)(v37, v63);
      v48(v45, v49);
      sub_10002CEFC((uint64_t)v64);
      sub_10002CEFC((uint64_t)v67);
      if (v46) {
        break;
      }
      Swift::String v52 = v70;
      uint64_t v35 = v70 - 40;
      v70 -= 40;
      if (v60 < v52 || v36 >= (unint64_t)v52)
      {
        long long v39 = *(_OWORD *)v35;
        long long v40 = *(_OWORD *)(v52 - 24);
        *(void *)(v36 + 32) = *((void *)v52 - 1);
        *(_OWORD *)unint64_t v36 = v39;
        *(_OWORD *)(v36 + 16) = v40;
        uint64_t v41 = a2;
        goto LABEL_30;
      }
      unint64_t v42 = (unint64_t)v58;
      unint64_t v53 = (unint64_t)v59;
      if (v60 != v52)
      {
        long long v54 = *(_OWORD *)v35;
        long long v55 = *(_OWORD *)(v52 - 24);
        *(void *)(v36 + 32) = *((void *)v52 - 1);
        *(_OWORD *)unint64_t v36 = v54;
        *(_OWORD *)(v36 + 16) = v55;
      }
      uint64_t v41 = a2;
      if ((unint64_t)v35 <= v53) {
        goto LABEL_42;
      }
LABEL_31:
      v36 -= 40;
      a2 = v41;
      if ((unint64_t)v41 <= v42) {
        goto LABEL_42;
      }
    }
    if (v60 != a2 || v36 >= (unint64_t)a2)
    {
      long long v50 = *(_OWORD *)v41;
      long long v51 = *(_OWORD *)(a2 - 24);
      *(void *)(v36 + 32) = *((void *)a2 - 1);
      *(_OWORD *)unint64_t v36 = v50;
      *(_OWORD *)(v36 + 16) = v51;
    }
    v72 -= 40;
    uint64_t v35 = v70;
LABEL_30:
    unint64_t v42 = (unint64_t)v58;
    if (v35 <= v59) {
      goto LABEL_42;
    }
    goto LABEL_31;
  }
  if (v12 >= -39)
  {
    if (a4 != a1 || &a1[40 * v13] <= a4) {
      memmove(a4, a1, 40 * v13);
    }
    unint64_t v16 = (unint64_t)&a4[40 * v13];
    unint64_t v70 = (char *)v16;
    if (v12 >= 40 && a2 < v60)
    {
      uint64_t v17 = (void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v18 = v61;
      do
      {
        sub_10005FAA4((uint64_t)a2, (uint64_t)v67);
        sub_10005FAA4((uint64_t)a4, (uint64_t)v64);
        uint64_t v19 = v68;
        uint64_t v20 = v69;
        sub_10002CEB8(v67, v68);
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
        uint64_t v21 = v65;
        uint64_t v22 = v66;
        sub_10002CEB8(v64, v65);
        uint64_t v23 = v62;
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
        char v24 = static Date.< infix(_:_:)();
        uint64_t v25 = *v17;
        Swift::String v26 = v23;
        uint64_t v27 = v63;
        (*v17)(v26, v63);
        v25(v18, v27);
        sub_10002CEFC((uint64_t)v64);
        sub_10002CEFC((uint64_t)v67);
        Swift::String v28 = v72;
        if (v24)
        {
          unint64_t v29 = (unint64_t)(a2 + 40);
          if (v72 >= a2 && (unint64_t)v72 < v29 && v72 == a2)
          {
            Swift::String v28 = a2;
          }
          else
          {
            long long v30 = *(_OWORD *)a2;
            long long v31 = *((_OWORD *)a2 + 1);
            *((void *)v72 + 4) = *((void *)a2 + 4);
            *Swift::String v28 = v30;
            v28[1] = v31;
          }
        }
        else
        {
          Swift::String v32 = v71 + 40;
          if (v72 != v71 || v72 >= v32)
          {
            long long v33 = *(_OWORD *)v71;
            long long v34 = *((_OWORD *)v71 + 1);
            *((void *)v72 + 4) = *((void *)v71 + 4);
            *Swift::String v28 = v33;
            v28[1] = v34;
          }
          uint64_t v71 = v32;
          unint64_t v29 = (unint64_t)a2;
        }
        uint64_t v72 = (char *)v28 + 40;
        a4 = v71;
        if ((unint64_t)v71 >= v16) {
          break;
        }
        a2 = (char *)v29;
      }
      while (v29 < (unint64_t)v60);
    }
LABEL_42:
    sub_100268250((void **)&v72, (const void **)&v71, &v70);
    return 1;
  }
LABEL_43:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10022D968()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v17 - v5;
  Date.init()();
  Date.timeIntervalSince1970.getter();
  double v8 = v7;
  uint64_t v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v6, v0);
  Date.init(timeIntervalSinceNow:)();
  Date.timeIntervalSince1970.getter();
  double v11 = v10;
  v9(v4, v0);
  double v12 = v8 - v11;
  if (v8 - v11 < 0.0 || v12 > 30.0)
  {
    long double v14 = 60.0;
    if (v12 < 30.0 || v12 > 60.0)
    {
      long double v14 = 3600.0;
      if (v12 >= 60.0 && v12 <= 3600.0) {
        long double v14 = 60.0;
      }
    }
    fmod(v12, v14);
  }
}

uint64_t sub_10022DAF8(uint64_t a1)
{
  uint64_t v2 = sub_10005D034(&qword_1006B6308);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10022DB58()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10022DB90()
{
  swift_release();
  sub_10002CEFC(v0 + 24);

  return _swift_deallocObject(v0, 64, 7);
}

void sub_10022DBD0(void *a1)
{
  sub_10022D050(a1, *(void *)(v1 + 16), v1 + 24);
}

uint64_t sub_10022DBDC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

unint64_t FMB389VideoAsset.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0x64726143786F7250;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x5F656C6261736944;
      break;
    case 5:
    case 6:
    case 10:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10022DD64(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = FMB389VideoAsset.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == FMB389VideoAsset.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_10022DDF0()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  FMB389VideoAsset.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_10022DE54()
{
  FMB389VideoAsset.rawValue.getter(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10022DEA8()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  FMB389VideoAsset.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_10022DF08@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s6FindMy16FMB389VideoAssetO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_10022DF38@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FMB389VideoAsset.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t _s6FindMy16FMB389VideoAssetO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10061F640, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xB) {
    return 11;
  }
  else {
    return v3;
  }
}

unint64_t sub_10022DFB4()
{
  unint64_t result = qword_1006B6310;
  if (!qword_1006B6310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B6310);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMSoundPlatterViewLayout(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMB389VideoAsset(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10022E164);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMB389VideoAsset()
{
  return &type metadata for FMB389VideoAsset;
}

double sub_10022E19C()
{
  if (qword_1006AE228 != -1) {
    swift_once();
  }
  __asm { FMOV            V1.2D, #12.0 }
  xmmword_1006D18B0 = _Q1;
  *(double *)&qword_1006D18C0 = *(double *)&qword_1006D20C8 + 8.0;
  double result = 28.0;
  *(_OWORD *)algn_1006D18C8 = xmmword_100560DE0;
  *((void *)&xmmword_1006D18D0 + 1) = 0x3FE4CCCCCCCCCCCDLL;
  return result;
}

char *sub_10022E220(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v5 = OBJC_IVAR____TtC6FindMy11FMAddButton_titleLabel;
  id v6 = objc_allocWithZone((Class)UILabel);
  BOOL v7 = v3;
  *(void *)&v3[v5] = [v6 init];
  uint64_t v8 = OBJC_IVAR____TtC6FindMy11FMAddButton_iconView;
  *(void *)&v7[v8] = [objc_allocWithZone((Class)UIImageView) init];
  *(void *)&v7[OBJC_IVAR____TtC6FindMy11FMAddButton_titleLeadingConstraint] = 0;
  *(void *)&v7[OBJC_IVAR____TtC6FindMy11FMAddButton_iconViewLeadingConstraint] = 0;
  v7[OBJC_IVAR____TtC6FindMy11FMAddButton_isEnabled] = 1;
  uint64_t v9 = &v7[OBJC_IVAR____TtC6FindMy11FMAddButton_style];
  long long v10 = a3[2];
  long long v11 = *a3;
  *((_OWORD *)v9 + 1) = a3[1];
  *((_OWORD *)v9 + 2) = v10;
  *(_OWORD *)uint64_t v9 = v11;

  v18.receiver = v7;
  v18.super_class = (Class)type metadata accessor for FMAddButton();
  double v12 = (char *)[super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v13 = *(void **)&v12[OBJC_IVAR____TtC6FindMy11FMAddButton_titleLabel];
  long double v14 = v12;
  id v15 = v13;
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v15 setText:v16];

  sub_10022E484();
  sub_10022E584();
  sub_10022EA28();

  return v14;
}

id sub_10022E484()
{
  char v1 = v0;
  int v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_titleLabel];
  id v3 = [self preferredFontForTextStyle:UIFontTextStyleBody];
  unsigned int v4 = (void *)sub_100042318(2);

  uint64_t v5 = (void *)sub_100042318(0x8000);
  [v2 setFont:v5];

  [v2 setAdjustsFontForContentSizeCategory:1];
  [v2 setNumberOfLines:0];
  [v1 addSubview:v2];
  uint64_t v6 = *(void *)&v1[OBJC_IVAR____TtC6FindMy11FMAddButton_iconView];

  return [v1 addSubview:v6];
}

void sub_10022E584()
{
  char v1 = v0;
  int v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_iconView];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_titleLabel];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v4 = [v2 leadingAnchor];
  id v5 = [v1 layoutMarginsGuide];
  id v6 = [v5 leadingAnchor];

  id v7 = [v4 constraintEqualToAnchor:v6 constant:0.0];
  id v36 = self;
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10055C1E0;
  id v9 = [v2 topAnchor];
  id v10 = [v1 topAnchor];
  long long v11 = (double *)&v1[OBJC_IVAR____TtC6FindMy11FMAddButton_style];
  double v12 = *(double *)&v1[OBJC_IVAR____TtC6FindMy11FMAddButton_style];
  id v13 = [v9 constraintEqualToAnchor:v10 constant:v12];

  *(void *)(v8 + 32) = v13;
  *(void *)(v8 + 40) = v7;
  specialized Array._endMutation()();
  sub_10004FCE4();
  id v38 = v7;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v36 activateConstraints:isa];

  id v15 = [v3 trailingAnchor];
  id v16 = [v1 trailingAnchor];
  id v17 = [v15 constraintLessThanOrEqualToAnchor:v16 constant:-v11[1]];

  LODWORD(v18) = 1144750080;
  [v17 setPriority:v18];
  id v19 = [v3 bottomAnchor];
  id v20 = [v1 bottomAnchor];
  id v21 = [v19 constraintLessThanOrEqualToAnchor:v20 constant:-2.0 - v12];

  LODWORD(v22) = 1144750080;
  [v21 setPriority:v22];
  id v23 = [v3 leadingAnchor];
  id v24 = [v2 trailingAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24 constant:v11[3]];

  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_10055B950;
  id v27 = [v3 centerYAnchor];
  id v28 = [v1 centerYAnchor];
  id v29 = [v27 constraintEqualToAnchor:v28];

  *(void *)(v26 + 32) = v29;
  *(void *)(v26 + 40) = v25;
  *(void *)(v26 + 48) = v21;
  *(void *)(v26 + 56) = v17;
  specialized Array._endMutation()();
  id v30 = v25;
  id v31 = v21;
  id v32 = v17;
  Class v33 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v36 activateConstraints:v33];

  long long v34 = *(void **)&v1[OBJC_IVAR____TtC6FindMy11FMAddButton_titleLeadingConstraint];
  *(void *)&v1[OBJC_IVAR____TtC6FindMy11FMAddButton_titleLeadingConstraint] = v30;
  id v35 = v30;

  id v37 = *(id *)&v1[OBJC_IVAR____TtC6FindMy11FMAddButton_iconViewLeadingConstraint];
  *(void *)&v1[OBJC_IVAR____TtC6FindMy11FMAddButton_iconViewLeadingConstraint] = v38;
}

void sub_10022EA28()
{
  char v1 = self;
  id v2 = [v1 clearColor];
  [v0 setBackgroundColor:v2];

  id v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_titleLabel];
  if (v0[OBJC_IVAR____TtC6FindMy11FMAddButton_isEnabled] == 1)
  {
    id v4 = [v1 systemBlueColor];
    [v3 setTextColor:v4];

    id v5 = *(void **)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_iconView];
    [v5 setAlpha:1.0];
  }
  else
  {
    id v6 = [v1 secondaryLabelColor];
    [v3 setTextColor:v6];

    id v5 = *(void **)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_iconView];
    [v5 setAlpha:0.5];
  }
  id v7 = [self preferredFontForTextStyle:UIFontTextStyleTitle2];
  id v8 = [self configurationWithFont:v7 scale:2];
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [self systemImageNamed:v9 withConfiguration:v8];

  [v5 setImage:v10];
}

void sub_10022EC9C()
{
  v18.receiver = v0;
  v18.super_class = (Class)type metadata accessor for FMAddButton();
  [super layoutSubviews];
  char v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_titleLabel];
  [v0 frame];
  id v2 = (double *)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_style];
  [v1 setPreferredMaxLayoutWidth:v3 * *(double *)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_style + 40]];
  id v4 = [self sharedApplication];
  id v5 = [v4 preferredContentSizeCategory];

  if (!_UIContentSizeCategoryCompareToContentSizeCategory())
  {
    double v8 = v2[4];
LABEL_18:
    double v7 = 1.0;
    goto LABEL_19;
  }
  if (!_UIContentSizeCategoryCompareToContentSizeCategory())
  {
    double v10 = v2[4];
    double v11 = -0.05;
    goto LABEL_17;
  }
  if (!_UIContentSizeCategoryCompareToContentSizeCategory() || !_UIContentSizeCategoryCompareToContentSizeCategory())
  {
    double v10 = v2[4];
    double v11 = -0.1;
LABEL_17:
    double v8 = v10 + v11;
    goto LABEL_18;
  }
  if (!_UIContentSizeCategoryCompareToContentSizeCategory())
  {
    double v10 = v2[4];
    double v11 = -0.15;
    goto LABEL_17;
  }
  if (!_UIContentSizeCategoryCompareToContentSizeCategory())
  {
    double v16 = v2[4];
    double v17 = -0.2;
LABEL_27:
    double v8 = v16 + v17;
    uint64_t v9 = 0x3FEE666666666666;
    goto LABEL_28;
  }
  if (!_UIContentSizeCategoryCompareToContentSizeCategory())
  {
    double v16 = v2[4];
    double v17 = -0.25;
    goto LABEL_27;
  }
  if (_UIContentSizeCategoryCompareToContentSizeCategory())
  {
    if (_UIContentSizeCategoryCompareToContentSizeCategory())
    {
      if (_UIContentSizeCategoryCompareToContentSizeCategory())
      {
        if (!_UIContentSizeCategoryCompareToContentSizeCategory()
          || (uint64_t v6 = _UIContentSizeCategoryCompareToContentSizeCategory(), v7 = 1.0, v8 = 1.0, !v6))
        {
          double v8 = v2[4] + -0.8;
          uint64_t v9 = 0x3FD6666666666666;
LABEL_28:
          double v7 = *(double *)&v9;
        }
      }
      else
      {
        double v8 = v2[4] + -0.6;
        double v7 = 0.5;
      }
    }
    else
    {
      double v8 = v2[4] + -0.45;
      double v7 = 0.55;
    }
  }
  else
  {
    double v8 = v2[4] + -0.35;
    double v7 = 0.75;
  }
LABEL_19:
  double v12 = *(void **)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_titleLeadingConstraint];
  if (v12) {
    [v12 setConstant:v7 * v2[3]];
  }
  id v13 = *(void **)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_iconViewLeadingConstraint];
  if (v13)
  {
    double v14 = v8 * v2[2];
    id v15 = v13;
    [v15 setConstant:v14];
  }
}

id sub_10022F03C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAddButton();
  [super dealloc];
}

uint64_t type metadata accessor for FMAddButton()
{
  return self;
}

uint64_t getEnumTagSinglePayload for FMAddButtonStyle(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FMAddButtonStyle(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FMAddButtonStyle()
{
  return &type metadata for FMAddButtonStyle;
}

void sub_10022F168()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy11FMAddButton_titleLabel;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v2 = OBJC_IVAR____TtC6FindMy11FMAddButton_iconView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIImageView) init];
  *(void *)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_titleLeadingConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_iconViewLeadingConstraint] = 0;
  v0[OBJC_IVAR____TtC6FindMy11FMAddButton_isEnabled] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10022F23C(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = a1;
  v11._object = a2;
  String.append(_:)(v11);
  double v12 = self;
  id v13 = [v12 mainBundle];
  v27._object = (void *)0x800000010057F630;
  v14._uint64_t countAndFlagsBits = a1;
  v14._object = a2;
  v15.value._uint64_t countAndFlagsBits = a5;
  v15.value._object = a6;
  v16._uint64_t countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v27._uint64_t countAndFlagsBits = 0xD000000000000012;
  Swift::String v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v27);
  swift_bridgeObjectRelease();

  BOOL v18 = v17._countAndFlagsBits == a1 && v17._object == a2;
  if (!v18 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0 || !a4) {
    return v17._countAndFlagsBits;
  }
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  v19._uint64_t countAndFlagsBits = a3;
  v19._object = a4;
  String.append(_:)(v19);
  id v20 = [v12 mainBundle];
  v28._object = (void *)0x800000010057F630;
  v21._uint64_t countAndFlagsBits = a3;
  v21._object = a4;
  v22.value._uint64_t countAndFlagsBits = a5;
  v22.value._object = a6;
  v23._uint64_t countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v28._uint64_t countAndFlagsBits = 0xD000000000000012;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v28)._countAndFlagsBits;
  swift_bridgeObjectRelease();

  return countAndFlagsBits;
}

uint64_t sub_10022F42C(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_10022F4BC(a1, a2, a3, (uint64_t *)&unk_1006AEE50, (uint64_t (*)(void))&type metadata accessor for FMIPUnknownItem, (uint64_t (*)(void))&FMIPUnknownItem.isAppleAudioAccessory.getter, (void (*)(void))&FMIPUnknownItem.productType.getter);
}

uint64_t sub_10022F474(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_10022F4BC(a1, a2, a3, (uint64_t *)&unk_1006AFE30, (uint64_t (*)(void))&type metadata accessor for FMIPItem, (uint64_t (*)(void))&FMIPItem.isAppleAudioAccessory.getter, (void (*)(void))&FMIPItem.productType.getter);
}

uint64_t sub_10022F4BC(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void), uint64_t (*a6)(void), void (*a7)(void))
{
  uint64_t v49 = a7;
  uint64_t v52 = a1;
  uint64_t v12 = type metadata accessor for FMIPProductType();
  uint64_t v50 = *(void *)(v12 - 8);
  uint64_t v51 = v12;
  __chkstk_darwin(v12);
  uint64_t v48 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10005D034(a4);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  Swift::String v17 = (uint64_t *)((char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  Swift::String v19 = (uint64_t *)((char *)&v47 - v18);
  sub_100006AB0(a3, (uint64_t)&v47 - v18, a4);
  uint64_t v20 = a5(0);
  uint64_t v21 = *(void *)(v20 - 8);
  Swift::String_optional v22 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v21 + 48);
  if (v22(v19, 1, v20) == 1)
  {
    Swift::String v23 = v19;
  }
  else
  {
    char v25 = a6();
    uint64_t v26 = (char *)v19;
    Swift::String v27 = *(void (**)(char *, uint64_t))(v21 + 8);
    v27(v26, v20);
    if ((v25 & 1) == 0) {
      goto LABEL_8;
    }
    sub_100006AB0(a3, (uint64_t)v17, a4);
    if (v22(v17, 1, v20) != 1)
    {
      long long v34 = v48;
      v49();
      v27((char *)v17, v20);
      FMIPProductType.productInformation.getter();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v34, v51);
      if (v56)
      {
        sub_10002CEB8(&v54, v56);
        uint64_t v35 = dispatch thunk of FMIPAnyProductInformation.productIdentifier.getter();
        sub_10002CEFC((uint64_t)&v54);
        uint64_t v36 = v52;
        uint64_t v54 = v52;
        long long v55 = a2;
        swift_bridgeObjectRetain();
        v37._uint64_t countAndFlagsBits = 24415;
        v37._object = (void *)0xE200000000000000;
        String.append(_:)(v37);
        swift_bridgeObjectRetain();
        v38._uint64_t countAndFlagsBits = 0x53444F50524941;
        v38._object = (void *)0xE700000000000000;
        String.append(_:)(v38);
        swift_bridgeObjectRelease();
        uint64_t v40 = v54;
        long long v39 = v55;
        uint64_t v54 = v36;
        long long v55 = a2;
        swift_bridgeObjectRetain();
        v41._uint64_t countAndFlagsBits = 24415;
        v41._object = (void *)0xE200000000000000;
        String.append(_:)(v41);
        v42._uint64_t countAndFlagsBits = 0x53444F50524941;
        v42._object = (void *)0xE700000000000000;
        String.append(_:)(v42);
        v43._uint64_t countAndFlagsBits = 95;
        v43._object = (void *)0xE100000000000000;
        String.append(_:)(v43);
        uint64_t v53 = v35;
        v44._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v44);
        swift_bridgeObjectRelease();
        uint64_t v45 = v54;
        uint64_t v46 = v55;
        swift_bridgeObjectRetain();
        uint64_t v32 = sub_100231028(v45, v46, v40, v39, v36, a2);
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
      id v24 = &qword_1006B20E0;
      Swift::String v23 = &v54;
      goto LABEL_4;
    }
    Swift::String v23 = v17;
  }
  id v24 = a4;
LABEL_4:
  sub_100003F10((uint64_t)v23, v24);
LABEL_8:
  uint64_t v28 = v52;
  uint64_t v54 = v52;
  long long v55 = a2;
  swift_bridgeObjectRetain();
  v29._uint64_t countAndFlagsBits = 0x4C55414645445F5FLL;
  v29._object = (void *)0xE900000000000054;
  String.append(_:)(v29);
  uint64_t v30 = v54;
  id v31 = v55;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_100231028(v28, a2, v30, v31, v28, a2);
LABEL_9:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_10022F8F0(uint64_t a1, void *a2)
{
  return sub_10022F964(a1, a2, 0xD000000000000010, (void *)0x80000001005875B0, 0xD000000000000015, (void *)0x80000001005875D0);
}

uint64_t sub_10022F92C(uint64_t a1, void *a2)
{
  return sub_10022F964(a1, a2, 0x617A696C61636F4CLL, (void *)0xEC00000031656C62, 0xD000000000000017, (void *)0x800000010058CBA0);
}

uint64_t sub_10022F964(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v12 = self;
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v12 modelSpecificLocalizedStringKeyForKey:v13];

  if (v14)
  {
    a1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    a2 = v15;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  id v16 = [self mainBundle];
  v22._object = a6;
  v17._uint64_t countAndFlagsBits = a1;
  v17._object = a2;
  v18.value._uint64_t countAndFlagsBits = a3;
  v18.value._object = a4;
  v19._uint64_t countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v22._uint64_t countAndFlagsBits = a5;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v22)._countAndFlagsBits;
  swift_bridgeObjectRelease();

  return countAndFlagsBits;
}

void sub_10022FA88()
{
  NSString v0 = String._bridgeToObjectiveC()();
  char v1 = MGGetBoolAnswer();

  byte_1006B6370 = v1;
}

uint64_t type metadata accessor for FMLocalizer()
{
  return self;
}

uint64_t sub_10022FAF4(uint64_t a1, void *a2)
{
  if (qword_1006AE058 != -1) {
    swift_once();
  }
  if (byte_1006B6370) {
    uint64_t v4 = 1312902231;
  }
  else {
    uint64_t v4 = 1229343063;
  }
  swift_bridgeObjectRetain();
  v5._uint64_t countAndFlagsBits = 95;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  swift_bridgeObjectRetain();
  v6._uint64_t countAndFlagsBits = v4;
  v6._object = (void *)0xE400000000000000;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = a1;
  v8._object = a2;
  String.append(_:)(v8);
  id v9 = [self mainBundle];
  v14._object = (void *)0x800000010058CF00;
  v10._uint64_t countAndFlagsBits = v7;
  v10._object = a2;
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v14._uint64_t countAndFlagsBits = 0xD000000000000016;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v14)._countAndFlagsBits;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return countAndFlagsBits;
}

uint64_t sub_10022FC8C(uint64_t a1, void *a2)
{
  uint64_t v4 = self;
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 modelSpecificLocalizedStringKeyForKey:v5];

  if (v6)
  {
    a1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    a2 = v7;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = a1;
  v8._object = a2;
  String.append(_:)(v8);
  id v9 = [self mainBundle];
  v14._object = (void *)0x800000010057F630;
  v10._uint64_t countAndFlagsBits = a1;
  v10._object = a2;
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v14._uint64_t countAndFlagsBits = 0xD000000000000012;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v14)._countAndFlagsBits;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return countAndFlagsBits;
}

uint64_t sub_10022FDEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FMIPDevice();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10005D034(&qword_1006B2AF0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006AB0(a3, (uint64_t)v12, &qword_1006B2AF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    sub_100230090();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_10005D034((uint64_t *)&unk_1006AF790);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10055B960;
  *(void *)(v13 + 56) = &type metadata for String;
  unint64_t v14 = sub_10007F2C8();
  *(void *)(v13 + 64) = v14;
  *(void *)(v13 + 32) = a1;
  *(void *)(v13 + 40) = a2;
  Swift::String v15 = String.uppercased()();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v13 + 96) = &type metadata for String;
  *(void *)(v13 + 104) = v14;
  *(Swift::String *)(v13 + 72) = v15;
  uint64_t v16 = String.init(format:_:)();
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_10055B970;
  *(void *)(v17 + 56) = &type metadata for String;
  *(void *)(v17 + 64) = v14;
  *(void *)(v17 + 32) = a1;
  *(void *)(v17 + 40) = a2;
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  return v16;
}

uint64_t sub_100230090()
{
  uint64_t v0 = type metadata accessor for FMIPDeviceState();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v17 - v5;
  FMIPDevice.state.getter();
  static FMIPDeviceState.isMacOS.getter();
  sub_1002313D0();
  char v7 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  if (v7) {
    return 4407629;
  }
  uint64_t v9 = 0x4843544157;
  if (FMIPDevice.category.getter() == 0x6863746157 && v10 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v9 = 0x53444F50524941;
      FMIPDevice.rawModel.getter();
      Swift::String v12 = String.uppercased()();
      swift_bridgeObjectRelease();
      Swift::String v19 = v12;
      uint64_t v17 = 0x53444F50524941;
      unint64_t v18 = 0xE700000000000000;
      sub_100059EB8();
      char v13 = StringProtocol.contains<A>(_:)();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        uint64_t v9 = 0x54454C4C4157;
        FMIPDevice.rawModel.getter();
        Swift::String v14 = String.uppercased()();
        swift_bridgeObjectRelease();
        Swift::String v19 = v14;
        uint64_t v17 = 0x54454C4C4157;
        unint64_t v18 = 0xE600000000000000;
        char v15 = StringProtocol.contains<A>(_:)();
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
        {
          if (FMIPDevice.isLocalFindable.getter()) {
            return 0x4C49434E4550;
          }
          else {
            return FMIPDevice.modelDisplayName.getter();
          }
        }
      }
    }
  }
  return v9;
}

uint64_t type metadata accessor for FMLocalizerB389()
{
  return self;
}

uint64_t sub_100230384(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_100230640(a1, a2, a3, a4, 0xD000000000000010, (void *)0x80000001005875B0, 0xD000000000000015, (void *)0x80000001005875D0);
}

uint64_t type metadata accessor for FMLocalizerHawkeye()
{
  return self;
}

uint64_t sub_1002303E4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_100230640(a1, a2, a3, a4, 0xD000000000000013, (void *)0x800000010057EF60, 0xD000000000000018, (void *)0x800000010057EF80);
}

uint64_t sub_10023041C(uint64_t a1, void *a2)
{
  if (qword_1006AE058 != -1) {
    swift_once();
  }
  if (byte_1006B6370) {
    uint64_t v4 = 1312902231;
  }
  else {
    uint64_t v4 = 1229343063;
  }
  swift_bridgeObjectRetain();
  v5._uint64_t countAndFlagsBits = 95;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  swift_bridgeObjectRetain();
  v6._uint64_t countAndFlagsBits = v4;
  v6._object = (void *)0xE400000000000000;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v7 = [self mainBundle];
  v13._uint64_t countAndFlagsBits = 0xD000000000000017;
  v13._object = (void *)0x8000000100585120;
  v8.value._object = (void *)0x8000000100585100;
  v9._uint64_t countAndFlagsBits = a1;
  v9._object = a2;
  v8.value._uint64_t countAndFlagsBits = 0xD000000000000012;
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v8, (NSBundle)v7, v10, v13)._countAndFlagsBits;
  swift_bridgeObjectRelease();

  return countAndFlagsBits;
}

uint64_t type metadata accessor for FMLocalizerLocalFindable()
{
  return self;
}

uint64_t sub_1002305A8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_100230640(a1, a2, a3, a4, 0xD000000000000010, (void *)0x800000010058CEC0, 0xD000000000000015, (void *)0x800000010058CEE0);
}

uint64_t type metadata accessor for FMLocalizerRedStripe()
{
  return self;
}

uint64_t sub_100230608(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_100230640(a1, a2, a3, a4, 0xD000000000000019, (void *)0x80000001005854C0, 0xD00000000000001ALL, (void *)0x80000001005854E0);
}

uint64_t sub_100230640(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, void *a8)
{
  id v14 = [self mainBundle];
  v20._object = a8;
  v15._uint64_t countAndFlagsBits = a1;
  v15._object = a2;
  v16.value._uint64_t countAndFlagsBits = a5;
  v16.value._object = a6;
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v20._uint64_t countAndFlagsBits = a7;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v20)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1002306F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMIPDevice();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  Swift::String v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMLostModeTrackable();
  __chkstk_darwin(v6);
  Swift::String_optional v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100109F60(a1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = 0x54454C4C4157;
    uint64_t v10 = (uint64_t)&v8[*(int *)(sub_10005D034(&qword_1006AF350) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    FMIPDevice.rawModel.getter();
    Swift::String v11 = String.uppercased()();
    swift_bridgeObjectRelease();
    Swift::String v19 = v11;
    uint64_t v17 = 0x54454C4C4157;
    unint64_t v18 = 0xE600000000000000;
    sub_100059EB8();
    char v12 = StringProtocol.contains<A>(_:)();
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_3;
    }
    uint64_t v9 = 0x53444F50524941;
    FMIPDevice.rawModel.getter();
    Swift::String v14 = String.uppercased()();
    swift_bridgeObjectRelease();
    Swift::String v19 = v14;
    uint64_t v17 = 0x53444F50524941;
    unint64_t v18 = 0xE700000000000000;
    char v15 = StringProtocol.contains<A>(_:)();
    swift_bridgeObjectRelease();
    if (v15)
    {
LABEL_3:
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      sub_100003F10(v10, (uint64_t *)&unk_1006AFE30);
    }
    else if (FMIPDevice.isConsideredAccessory.getter())
    {
      char v16 = FMIPDevice.isLocalFindable.getter();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      sub_100003F10(v10, (uint64_t *)&unk_1006AFE30);
      if (v16) {
        return 0x4C49434E4550;
      }
      else {
        return 1296389193;
      }
    }
    else
    {
      uint64_t v9 = sub_100230090();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      sub_100003F10(v10, (uint64_t *)&unk_1006AFE30);
    }
  }
  else
  {
    uint64_t v9 = 1296389193;
    sub_100109FC4((uint64_t)v8);
  }
  return v9;
}

uint64_t sub_100230A54(uint64_t a1, uint64_t a2)
{
  sub_10005D034((uint64_t *)&unk_1006AF790);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10055B960;
  *(void *)(v4 + 56) = &type metadata for String;
  unint64_t v5 = sub_10007F2C8();
  *(void *)(v4 + 64) = v5;
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = a2;
  Swift::String v6 = String.uppercased()();
  *(void *)(v4 + 96) = &type metadata for String;
  *(void *)(v4 + 104) = v5;
  *(Swift::String *)(v4 + 72) = v6;
  swift_bridgeObjectRetain();
  uint64_t v7 = String.init(format:_:)();
  uint64_t v9 = v8;
  id v26 = self;
  id v10 = [v26 mainBundle];
  v27._uint64_t countAndFlagsBits = 0xD000000000000018;
  v27._object = (void *)0x800000010057EF80;
  v11.value._object = (void *)0x800000010057EF60;
  v12._uint64_t countAndFlagsBits = v7;
  v12._object = v9;
  v11.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  Swift::String v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v11, (NSBundle)v10, v13, v27);

  if (v14._countAndFlagsBits == v7 && v14._object == v9)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_10055B970;
    *(void *)(v16 + 56) = &type metadata for String;
    *(void *)(v16 + 64) = v5;
    *(void *)(v16 + 32) = a1;
    *(void *)(v16 + 40) = a2;
    swift_bridgeObjectRetain();
    uint64_t v17 = String.init(format:_:)();
    Swift::String v19 = v18;
    id v20 = [v26 mainBundle];
    v28._uint64_t countAndFlagsBits = 0xD000000000000018;
    v28._object = (void *)0x800000010057EF80;
    v21.value._object = (void *)0x800000010057EF60;
    v22._uint64_t countAndFlagsBits = v17;
    v22._object = v19;
    v21.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v23._uint64_t countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v21, (NSBundle)v20, v23, v28)._countAndFlagsBits;
    swift_bridgeObjectRelease();

    return countAndFlagsBits;
  }
  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v15) {
    goto LABEL_5;
  }
  return v14._countAndFlagsBits;
}

uint64_t sub_100230CE8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_10005D034(&qword_1006B2AF0);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FMIPDevice();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  Swift::String v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006AB0(a3, (uint64_t)v10, &qword_1006B2AF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_100003F10((uint64_t)v10, &qword_1006B2AF0);
LABEL_6:
    v32._uint64_t countAndFlagsBits = a1;
    v32._object = a2;
    swift_bridgeObjectRetain();
    v25._uint64_t countAndFlagsBits = 0x4C55414645445F5FLL;
    v25._object = (void *)0xE900000000000054;
    String.append(_:)(v25);
    uint64_t countAndFlagsBits = v32._countAndFlagsBits;
    object = v32._object;
    v32._uint64_t countAndFlagsBits = a1;
    v32._object = a2;
    swift_bridgeObjectRetain();
    v26._uint64_t countAndFlagsBits = 0x4C55414645445F5FLL;
    v26._object = (void *)0xE900000000000054;
    String.append(_:)(v26);
    uint64_t v23 = v32._countAndFlagsBits;
    id v24 = v32._object;
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  FMIPDevice.rawModel.getter();
  Swift::String v15 = String.uppercased()();
  swift_bridgeObjectRelease();
  Swift::String v32 = v15;
  uint64_t v30 = 0x53444F50524941;
  unint64_t v31 = 0xE700000000000000;
  sub_100059EB8();
  char v16 = StringProtocol.contains<A>(_:)();
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    goto LABEL_6;
  }
  v32._uint64_t countAndFlagsBits = a1;
  v32._object = a2;
  swift_bridgeObjectRetain();
  v17._uint64_t countAndFlagsBits = 24415;
  v17._object = (void *)0xE200000000000000;
  String.append(_:)(v17);
  unint64_t v18 = v32._object;
  uint64_t v29 = v32._countAndFlagsBits;
  FMIPDevice.rawModel.getter();
  Swift::String v19 = String.uppercased()();
  swift_bridgeObjectRelease();
  v32._uint64_t countAndFlagsBits = v29;
  v32._object = v18;
  swift_bridgeObjectRetain();
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t countAndFlagsBits = v32._countAndFlagsBits;
  object = v32._object;
  v32._uint64_t countAndFlagsBits = a1;
  v32._object = a2;
  swift_bridgeObjectRetain();
  v22._object = (void *)0xE900000000000053;
  v22._uint64_t countAndFlagsBits = 0x444F505249415F5FLL;
  String.append(_:)(v22);
  uint64_t v23 = v32._countAndFlagsBits;
  id v24 = v32._object;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
LABEL_7:
  uint64_t result = swift_bridgeObjectRetain();
  *a4 = countAndFlagsBits;
  a4[1] = (uint64_t)object;
  a4[2] = v23;
  a4[3] = (uint64_t)v24;
  a4[4] = a1;
  a4[5] = (uint64_t)a2;
  return result;
}

uint64_t sub_100231028(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  v27._uint64_t countAndFlagsBits = a5;
  v27._object = a6;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = a1;
  v10._object = a2;
  String.append(_:)(v10);
  uint64_t v11 = self;
  id v12 = [v11 mainBundle];
  v28._object = (void *)0x800000010057F630;
  v13._uint64_t countAndFlagsBits = a1;
  v13._object = a2;
  v14._uint64_t countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v28._uint64_t countAndFlagsBits = 0xD000000000000012;
  Swift::String v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v28);
  uint64_t countAndFlagsBits = v15._countAndFlagsBits;
  swift_bridgeObjectRelease();

  BOOL v17 = v15._countAndFlagsBits == a1 && v15._object == a2;
  if (!v17 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return countAndFlagsBits;
  }
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  v18._uint64_t countAndFlagsBits = a3;
  v18._object = a4;
  String.append(_:)(v18);
  id v19 = [v11 mainBundle];
  v29._object = (void *)0x800000010057F630;
  v20._uint64_t countAndFlagsBits = a3;
  v20._object = a4;
  v21._uint64_t countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v29._uint64_t countAndFlagsBits = 0xD000000000000012;
  Swift::String v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v29);
  uint64_t countAndFlagsBits = v22._countAndFlagsBits;
  swift_bridgeObjectRelease();

  if ((v22._countAndFlagsBits != a3 || v22._object != a4) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return countAndFlagsBits;
  }
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  String.append(_:)(v27);
  id v23 = [v11 mainBundle];
  v30._object = (void *)0x800000010057F630;
  v24._uint64_t countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v30._uint64_t countAndFlagsBits = 0xD000000000000012;
  uint64_t v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v23, v24, v30)._countAndFlagsBits;
  swift_bridgeObjectRelease();

  return v25;
}

uint64_t sub_1002312E0(uint64_t a1, void *a2)
{
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = a1;
  v4._object = a2;
  String.append(_:)(v4);
  id v5 = [self mainBundle];
  v10._object = (void *)0x800000010057F630;
  v6._uint64_t countAndFlagsBits = a1;
  v6._object = a2;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v10._uint64_t countAndFlagsBits = 0xD000000000000012;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v10)._countAndFlagsBits;
  swift_bridgeObjectRelease();

  return countAndFlagsBits;
}

unint64_t sub_1002313D0()
{
  unint64_t result = qword_1006C0390;
  if (!qword_1006C0390)
  {
    type metadata accessor for FMIPDeviceState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C0390);
  }
  return result;
}

ValueMetadata *type metadata accessor for FMMapMode.Mode()
{
  return &type metadata for FMMapMode.Mode;
}

uint64_t initializeBufferWithCopyOfBuffer for FMMapMode(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for FMMapMode(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
  }
  unsigned int v4 = *(unsigned __int8 *)a1;
  BOOL v5 = v4 >= 2;
  int v6 = v4 - 2;
  if (!v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for FMMapMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554177) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFE) {
    int v3 = 0;
  }
  if (a2 > 0xFE)
  {
    *(_WORD *)unint64_t result = a2 - 255;
    *(unsigned char *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)unint64_t result = a2 + 1;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMMapMode()
{
  return &type metadata for FMMapMode;
}

uint64_t sub_100231564(char a1)
{
  if (a1)
  {
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v1 = [self mainBundle];
    unint64_t v4 = 0xD00000000000001ALL;
    unint64_t v2 = 0xD00000000000002CLL;
    unint64_t v8 = 0x80000001005842F0;
    unint64_t v3 = 0x80000001005842D0;
  }
  else
  {
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v1 = [self mainBundle];
    unint64_t v2 = 0xD00000000000002ALL;
    unint64_t v8 = 0x800000010058D000;
    unint64_t v3 = 0x800000010058CFE0;
    unint64_t v4 = 0xD000000000000018;
  }
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, (Swift::String_optional)0, (NSBundle)v1, v5, *(Swift::String *)&v2)._countAndFlagsBits;

  return countAndFlagsBits;
}

void sub_1002316A4()
{
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v0 = [self mainBundle];
  v4._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  v4._object = (void *)0x800000010058CF60;
  v1._object = (void *)0x800000010058CF40;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_1006D18E0 = (__int128)v3;
}

void sub_100231778()
{
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v0 = [self mainBundle];
  v4._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v4._object = (void *)0x800000010058CFB0;
  v1._object = (void *)0x800000010058CF90;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_1006D18F0 = (__int128)v3;
}

uint64_t sub_10023184C(void *a1, char a2)
{
  uint64_t v5 = sub_10005D034(&qword_1006B66D0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002CEB8(a1, a1[3]);
  sub_100233194();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v10[15] = a2 & 1;
  v10[14] = 0;
  sub_1002328C8();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    v10[13] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v10[12] = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1002319EC()
{
  uint64_t v1 = 0x61725473776F6873;
  if (*v0 != 1) {
    uint64_t v1 = 0x62614C73776F6873;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701080941;
  }
}

uint64_t sub_100231A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100232E24(a1, a2);
  *a3 = result;
  return result;
}

void sub_100231A78(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_100231A84(uint64_t a1)
{
  unint64_t v2 = sub_100233194();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100231AC0(uint64_t a1)
{
  unint64_t v2 = sub_100233194();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100231AFC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100232F9C(a1);
  if (!v2)
  {
    *a2 = result & 1;
    a2[1] = BYTE1(result) & 1;
    a2[2] = BYTE2(result) & 1;
  }
  return result;
}

uint64_t sub_100231B3C(void *a1)
{
  return sub_10023184C(a1, *v1);
}

uint64_t sub_100231B80(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1[2]) {
    int v2 = 0x10000;
  }
  else {
    int v2 = 0;
  }
  if (a1[1]) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  int v4 = v3 | *a1 | v2;
  if (a2[2]) {
    int v5 = 0x10000;
  }
  else {
    int v5 = 0;
  }
  if (a2[1]) {
    int v6 = 256;
  }
  else {
    int v6 = 0;
  }
  return sub_100232970(v4, v6 | *a2 | v5);
}

uint64_t sub_100231BD4()
{
  uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
  word_1006D1900 = 1;
  byte_1006D1902 = result & 1;
  return result;
}

uint64_t sub_100231C34(char *a1, char *a2)
{
  return sub_1001D922C(*a1, *a2);
}

Swift::Int sub_100231C40()
{
  return Hasher._finalize()();
}

uint64_t sub_100231CC8()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100231D3C()
{
  return Hasher._finalize()();
}

uint64_t sub_100231DC0@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10061F768, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_100231E20(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x65726F6C707865;
  if (*v1) {
    uint64_t v2 = 0x74696C6C65746173;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE900000000000065;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100231E64()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100231EC4()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_100231F18()
{
  unint64_t result = qword_1006B6690;
  if (!qword_1006B6690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B6690);
  }
  return result;
}

uint64_t sub_100231F6C(int a1)
{
  v12[8] = 0;
  _StringGuts.grow(_:)(31);
  v2._uint64_t countAndFlagsBits = 0x203A65646F4DLL;
  v2._object = (void *)0xE600000000000000;
  String.append(_:)(v2);
  *(void *)id v12 = a1 & 1;
  _print_unlocked<A, B>(_:_:)();
  v3._uint64_t countAndFlagsBits = 0x6369666661725420;
  v3._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v3);
  if ((a1 & 0x100) != 0) {
    uint64_t v4 = 1702195828;
  }
  else {
    uint64_t v4 = 0x65736C6166;
  }
  if ((a1 & 0x100) != 0) {
    unint64_t v5 = 0xE400000000000000;
  }
  else {
    unint64_t v5 = 0xE500000000000000;
  }
  unint64_t v6 = v5;
  String.append(_:)(*(Swift::String *)&v4);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 0x3A736C6562614C20;
  v7._object = (void *)0xE900000000000020;
  String.append(_:)(v7);
  if ((a1 & 0x10000) != 0) {
    uint64_t v8 = 1702195828;
  }
  else {
    uint64_t v8 = 0x65736C6166;
  }
  if ((a1 & 0x10000) != 0) {
    unint64_t v9 = 0xE400000000000000;
  }
  else {
    unint64_t v9 = 0xE500000000000000;
  }
  unint64_t v10 = v9;
  String.append(_:)(*(Swift::String *)&v8);
  swift_bridgeObjectRelease();
  return *(void *)&v12[1];
}

uint64_t sub_1002320AC()
{
  if (v0[2]) {
    int v1 = 0x10000;
  }
  else {
    int v1 = 0;
  }
  if (v0[1]) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return sub_100231F6C(v2 | *v0 | v1);
}

uint64_t sub_1002320DC(void *a1)
{
  uint64_t v3 = sub_10005D034(&qword_1006B66F0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002CEB8(a1, a1[3]);
  sub_1002335FC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v10 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    char v9 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100232248()
{
  if (*v0) {
    return 0x62614C73776F6873;
  }
  else {
    return 0x61725473776F6873;
  }
}

uint64_t sub_100232294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100233650(a1, a2);
  *a3 = result;
  return result;
}

void sub_1002322BC(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1002322C8(uint64_t a1)
{
  unint64_t v2 = sub_1002335FC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100232304(uint64_t a1)
{
  unint64_t v2 = sub_1002335FC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100232340@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100233774(a1);
  if (!v2)
  {
    *a2 = result & 1;
    a2[1] = BYTE1(result) & 1;
  }
  return result;
}

uint64_t sub_100232378(void *a1)
{
  return sub_1002320DC(a1);
}

void sub_1002323A8(void *a1, char a2, int a3)
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000606BC(v6, (uint64_t)qword_1006D1E98);
  Swift::String v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    char v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)char v9 = 136446210;
    uint64_t v10 = sub_100231F6C(a3 & 0x10101);
    sub_1000606F4(v10, v11, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "FMMapMode: Save to UserDefaults (%{public}s)", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (a2)
  {
    LOBYTE(v27) = a3 & 1;
    type metadata accessor for JSONEncoder();
    swift_allocObject();
    JSONEncoder.init()();
    sub_1002328C8();
    uint64_t v14 = dispatch thunk of JSONEncoder.encode<A>(_:)();
    unint64_t v16 = v15;
    swift_release();
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    NSString v18 = String._bridgeToObjectiveC()();
    [a1 setValue:isa forKey:v18];

    sub_10002B2CC(v14, v16);
    uint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    uint64_t v27 = 0xD000000000000012;
    unint64_t v28 = 0x800000010058CF20;
    if (a3) {
      uint64_t v19 = 0x74696C6C65746173;
    }
    else {
      uint64_t v19 = 0x65726F6C707865;
    }
    if (a3) {
      unint64_t v20 = 0xE900000000000065;
    }
    else {
      unint64_t v20 = 0xE700000000000000;
    }
    unint64_t v21 = v20;
    String.append(_:)(*(Swift::String *)&v19);
    swift_bridgeObjectRelease();
    LOBYTE(v27) = BYTE1(a3) & 1;
    BYTE1(v27) = BYTE2(a3) & 1;
    swift_allocObject();
    JSONEncoder.init()();
    sub_10023291C();
    uint64_t v22 = dispatch thunk of JSONEncoder.encode<A>(_:)();
    unint64_t v24 = v23;
    swift_release();
    Class v25 = Data._bridgeToObjectiveC()().super.isa;
    NSString v26 = String._bridgeToObjectiveC()();
    [a1 setValue:v25 forKey:v26];

    sub_10002B2CC(v22, v24);
    swift_bridgeObjectRelease();
  }
  else
  {
    Class v12 = UInt._bridgeToObjectiveC()().super.super.isa;
    NSString v13 = String._bridgeToObjectiveC()();
    [a1 setObject:v12 forKey:v13];
  }
}

uint64_t sub_1002327C8()
{
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 dataForKey:v2];

  if (!v3) {
    return 2;
  }
  uint64_t v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v6 = v5;

  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_100232D6C();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  sub_10002B2CC(v4, v6);
  uint64_t result = swift_release();
  if (!v1)
  {
    if (v10) {
      int v8 = 256;
    }
    else {
      int v8 = 0;
    }
    return v8 | v9;
  }
  return result;
}

unint64_t sub_1002328C8()
{
  unint64_t result = qword_1006B6698;
  if (!qword_1006B6698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B6698);
  }
  return result;
}

unint64_t sub_10023291C()
{
  unint64_t result = qword_1006B66A0;
  if (!qword_1006B66A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B66A0);
  }
  return result;
}

uint64_t sub_100232970(int a1, int a2)
{
  BOOL v4 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v5 = 0x74696C6C65746173;
  }
  else {
    uint64_t v5 = 0x65726F6C707865;
  }
  if (v4) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE900000000000065;
  }
  if (a2) {
    uint64_t v7 = 0x74696C6C65746173;
  }
  else {
    uint64_t v7 = 0x65726F6C707865;
  }
  if (a2) {
    unint64_t v8 = 0xE900000000000065;
  }
  else {
    unint64_t v8 = 0xE700000000000000;
  }
  if (v5 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n();
    if (((a1 ^ a2) & 0x100) != 0) {
      return 0;
    }
    return ((a1 & 0x10000) == 0) ^ ((a2 & 0x10000u) >> 16);
  }
  char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if ((a1 ^ a2) & 0x100) == 0 && (v10) {
    return ((a1 & 0x10000) == 0) ^ ((a2 & 0x10000u) >> 16);
  }
  return result;
}

uint64_t sub_100232A58(char a1)
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  int v2 = a1 & 1;
  id v3 = (void *)0xE900000000000065;
  uint64_t v4 = 0x74696C6C65746173;
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000606BC(v5, (uint64_t)qword_1006D1E98);
  unint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    unint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)unint64_t v8 = 136446210;
    uint64_t v18 = v9;
    if (v2)
    {
      id v3 = (void *)0xE900000000000065;
    }
    else
    {
      uint64_t v4 = 0x65726F6C707865;
      id v3 = (void *)0xE700000000000000;
    }
    sub_1000606F4(v4, (unint64_t)v3, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMMapMode: Load with Mode (%{public}s) from UserDefaults", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    if (!v2)
    {
      uint64_t v4 = 0x65726F6C707865;
      id v3 = (void *)0xE700000000000000;
    }
  }
  uint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  uint64_t v18 = 0xD000000000000012;
  unint64_t v19 = 0x800000010058CF20;
  v10._uint64_t countAndFlagsBits = v4;
  v10._object = v3;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  __int16 v11 = sub_1002327C8();
  swift_bridgeObjectRelease();
  if (v11 == 2)
  {
    int v12 = 0;
LABEL_16:
    int v14 = 0x10000;
    return v12 | v14 | v2;
  }
  int v13 = v11 & 1;
  if ((v11 & 0x100) != 0)
  {
LABEL_15:
    int v12 = v13 << 8;
    goto LABEL_16;
  }
  if (!v2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  int v12 = 0;
  int v14 = 0;
  if ((v16 & 1 & (v13 != 0)) != 0) {
    int v17 = 256;
  }
  else {
    int v17 = 0;
  }
  if (v16)
  {
    int v12 = v17;
    goto LABEL_16;
  }
  return v12 | v14 | v2;
}

unint64_t sub_100232D6C()
{
  unint64_t result = qword_1006B66A8;
  if (!qword_1006B66A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B66A8);
  }
  return result;
}

unint64_t sub_100232DC0()
{
  unint64_t result = qword_1006B66B0;
  if (!qword_1006B66B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B66B0);
  }
  return result;
}

uint64_t sub_100232E24(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701080941 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61725473776F6873 && a2 == 0xEC00000063696666 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x62614C73776F6873 && a2 == 0xEB00000000736C65)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_100232F9C(void *a1)
{
  uint64_t v3 = sub_10005D034(&qword_1006B66B8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002CEB8(a1, a1[3]);
  sub_100233194();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1) {
    return sub_10002CEFC((uint64_t)a1);
  }
  v13[14] = 0;
  sub_1002331E8();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  int v7 = v13[15];
  v13[13] = 1;
  char v9 = KeyedDecodingContainer.decode(_:forKey:)();
  v13[12] = 2;
  char v10 = KeyedDecodingContainer.decode(_:forKey:)();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  sub_10002CEFC((uint64_t)a1);
  if (v10) {
    int v11 = 0x10000;
  }
  else {
    int v11 = 0;
  }
  if (v9) {
    int v12 = 256;
  }
  else {
    int v12 = 0;
  }
  return v12 | v7 | v11;
}

unint64_t sub_100233194()
{
  unint64_t result = qword_1006B66C0;
  if (!qword_1006B66C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B66C0);
  }
  return result;
}

unint64_t sub_1002331E8()
{
  unint64_t result = qword_1006B66C8;
  if (!qword_1006B66C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B66C8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMMapMode.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100233308);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMMapMode.CodingKeys()
{
  return &type metadata for FMMapMode.CodingKeys;
}

_WORD *initializeBufferWithCopyOfBuffer for FMMapMode.Options(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FMMapMode.Options(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FMMapMode.Options(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002334BCLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMMapMode.Options()
{
  return &type metadata for FMMapMode.Options;
}

unint64_t sub_1002334F8()
{
  unint64_t result = qword_1006B66D8;
  if (!qword_1006B66D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B66D8);
  }
  return result;
}

unint64_t sub_100233550()
{
  unint64_t result = qword_1006B66E0;
  if (!qword_1006B66E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B66E0);
  }
  return result;
}

unint64_t sub_1002335A8()
{
  unint64_t result = qword_1006B66E8;
  if (!qword_1006B66E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B66E8);
  }
  return result;
}

unint64_t sub_1002335FC()
{
  unint64_t result = qword_1006B66F8;
  if (!qword_1006B66F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B66F8);
  }
  return result;
}

uint64_t sub_100233650(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61725473776F6873 && a2 == 0xEC00000063696666;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x62614C73776F6873 && a2 == 0xEB00000000736C65)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100233774(void *a1)
{
  uint64_t v3 = sub_10005D034(&qword_1006B6700);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002CEB8(a1, a1[3]);
  sub_1002335FC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1) {
    return sub_10002CEFC((uint64_t)a1);
  }
  v11[15] = 0;
  char v7 = KeyedDecodingContainer.decode(_:forKey:)();
  v11[14] = 1;
  char v8 = KeyedDecodingContainer.decode(_:forKey:)();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  sub_10002CEFC((uint64_t)a1);
  if (v8) {
    int v10 = 256;
  }
  else {
    int v10 = 0;
  }
  return v10 & 0xFFFFFFFE | v7 & 1;
}

unsigned char *_s6FindMy9FMMapModeV4ModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002339ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMMapMode.Options.CodingKeys()
{
  return &type metadata for FMMapMode.Options.CodingKeys;
}

unint64_t sub_100233A28()
{
  unint64_t result = qword_1006B6708;
  if (!qword_1006B6708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B6708);
  }
  return result;
}

unint64_t sub_100233A80()
{
  unint64_t result = qword_1006B6710;
  if (!qword_1006B6710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B6710);
  }
  return result;
}

unint64_t sub_100233AD8()
{
  unint64_t result = qword_1006B6718;
  if (!qword_1006B6718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B6718);
  }
  return result;
}

unint64_t sub_100233B34(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100233BE0()
{
  return *(unsigned __int8 *)(v0 + qword_1006B6780);
}

uint64_t sub_100233BF0()
{
  return *(unsigned __int8 *)(v0 + qword_1006B6788);
}

id sub_100233C00(char a1)
{
  *(unsigned char *)(v1 + qword_1006B6788) = a1;
  [*(id *)(v1 + qword_1006B6770) setHidden:*(unsigned __int8 *)(v1 + qword_1006B6788)];

  return sub_1000561C0();
}

uint64_t sub_100233C50()
{
  return *(unsigned __int8 *)(v0 + qword_1006B6790);
}

id sub_100233C60(char a1)
{
  *(unsigned char *)(v1 + qword_1006B6790) = a1;
  return sub_1000561C0();
}

uint64_t sub_100233C70()
{
  return *(unsigned __int8 *)(v0 + qword_1006B6798);
}

id sub_100233C80(char a1)
{
  *(unsigned char *)(v1 + qword_1006B6798) = a1;
  char v2 = *(unsigned char *)(v1 + qword_1006B6798);
  char v3 = *(unsigned char *)(v1 + qword_1006B6788);
  char v4 = v2 & v3;
  char v5 = v3 & ~v2;
  if (!*(unsigned char *)(v1 + qword_1006B6780)) {
    char v5 = v4;
  }
  return [*(id *)(v1 + qword_1006B6770) setHidden:v5 & 1];
}

void sub_100233CE0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_10023404C();
}

id sub_100233D08()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for FMListTableViewCell();
  [super prepareForReuse];
  v0[qword_1006B6788] = 0;
  [*(id *)&v0[qword_1006B6770] setHidden:v0[qword_1006B6788]];
  sub_1000561C0();
  v0[qword_1006B6798] = 0;
  char v1 = v0[qword_1006B6798];
  char v2 = v0[qword_1006B6788];
  char v3 = v1 & v2;
  char v4 = v2 & ~v1;
  if (!v0[qword_1006B6780]) {
    char v4 = v3;
  }
  [*(id *)&v0[qword_1006B6770] setHidden:v4 & 1];
  return [*(id *)&v0[qword_1006B6770] setAlpha:1.0];
}

void sub_100233E28(void *a1)
{
  id v1 = a1;
  sub_100233D08();
}

id sub_100233E70(uint64_t a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for FMListTableViewCell();
  [super traitCollectionDidChange:a1];
  char v3 = *(void **)&v1[qword_1006B6758];
  id v4 = [v1 traitCollection];
  id v5 = [v4 preferredContentSizeCategory];

  LOBYTE(v4) = UIContentSizeCategory.isAccessibilityCategory.getter();
  [v3 setTextAlignment:(v4 & 1) == 0];
  return sub_1000561C0();
}

void sub_100233F6C(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  sub_100233E70((uint64_t)a3);
}

id sub_100233FD8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMListTableViewCell();
  return [super dealloc];
}

void sub_10023404C()
{
  uint64_t v1 = qword_1006B6720;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)NUIContainerStackView) init];
  uint64_t v2 = qword_1006B6728;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)type metadata accessor for FMTableViewCellImageContainer()) init];
  uint64_t v3 = qword_1006B6730;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)NUIContainerStackView) init];
  uint64_t v4 = qword_1006B6738;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)NUIContainerStackView) init];
  uint64_t v5 = qword_1006B6740;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)NUIContainerStackView) init];
  uint64_t v6 = qword_1006B6748;
  *(void *)&v0[v6] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v7 = qword_1006B6750;
  type metadata accessor for FMSubtitleLabel();
  *(void *)&v0[v7] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v8 = qword_1006B6758;
  *(void *)&v0[v8] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v9 = qword_1006B6760;
  *(void *)&v0[v9] = [objc_allocWithZone((Class)type metadata accessor for FMBatteryView()) init];
  uint64_t v10 = qword_1006B6768;
  *(void *)&v0[v10] = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithActivityIndicatorStyle:100];
  uint64_t v11 = qword_1006B6770;
  *(void *)&v0[v11] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v12 = qword_1006B6778;
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [self systemImageNamed:v13];

  id v15 = [objc_allocWithZone((Class)UIImageView) initWithImage:v14];
  *(void *)&v0[v12] = v15;
  v0[qword_1006B6780] = 0;
  v0[qword_1006B6788] = 0;
  v0[qword_1006B6790] = 0;
  v0[qword_1006B6798] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1002342C8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  memset(v19, 0, sizeof(v19));
  uint64_t v10 = *(NSObject **)(v4 + 24);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = a3;
  v11[5] = a4;
  v11[6] = v5;
  v11[7] = v19;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1002364A4;
  *(void *)(v12 + 24) = v11;
  v18[4] = sub_100024A90;
  v18[5] = v12;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_100024A40;
  v18[3] = &unk_10062E578;
  NSString v13 = _Block_copy(v18);
  id v14 = a1;
  id v15 = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v10, v13);
  _Block_release(v13);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v10)
  {
    __break(1u);
  }
  else
  {
    uint64_t v17 = *(void *)&v19[0];
    swift_release();
    return v17;
  }
  return result;
}

void sub_100234478(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  [a1 distanceFromLocation:a2];
  if (v12 >= 1000000.0)
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_1000606BC(v26, (uint64_t)qword_1006D1E98);
    oslog = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v27))
    {
      unint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v27, "FMETACache: cannot calculate ETA for distances over 1000KM", v28, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v40 = a3;
    uint64_t v41 = a4;
    swift_bridgeObjectRetain();
    id v13 = a1;
    id v14 = a2;
    [v13 coordinate];
    [v13 coordinate];
    Double.write<A>(to:)();
    v15._uint64_t countAndFlagsBits = 45;
    v15._object = (void *)0xE100000000000000;
    String.append(_:)(v15);
    Double.write<A>(to:)();
    [v14 coordinate];
    [v14 coordinate];
    Double.write<A>(to:)();
    v16._uint64_t countAndFlagsBits = 45;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    Double.write<A>(to:)();
    swift_bridgeObjectRetain();
    v17._uint64_t countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v18 = *(void *)(a5 + 40);
    if (*(void *)(v18 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v19 = sub_100053708(0, 0xE000000000000000);
      if (v20)
      {
        unint64_t v21 = (uint64_t *)(*(void *)(v18 + 56) + 32 * v19);
        uint64_t v22 = *v21;
        uint64_t v23 = v21[1];
        uint64_t v24 = v21[2];
        uint64_t v25 = v21[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *a6 = v22;
        a6[1] = v23;
        a6[2] = v24;
        a6[3] = v25;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    if (a6[1]) {
      goto LABEL_16;
    }
    [v13 coordinate];
    [v13 coordinate];
    Double.write<A>(to:)();
    v29._uint64_t countAndFlagsBits = 45;
    v29._object = (void *)0xE100000000000000;
    String.append(_:)(v29);
    Double.write<A>(to:)();
    [v14 coordinate];
    [v14 coordinate];
    Double.write<A>(to:)();
    v30._uint64_t countAndFlagsBits = 45;
    v30._object = (void *)0xE100000000000000;
    String.append(_:)(v30);
    Double.write<A>(to:)();
    swift_bridgeObjectRetain();
    v31._uint64_t countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    String.append(_:)(v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v32 = *(void *)(a5 + 32);
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_100491AEC(0, 0xE000000000000000, v32);
    uint64_t v35 = v34;
    Swift::String v37 = v36;
    long long v39 = v38;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100236300(v33, v35, v37, v39);
    if (v35)
    {
LABEL_16:

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1002349B8(v40, v41, v13, v14);

      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1002349B8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for DispatchQoS();
  uint64_t v14 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  Swift::String v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = *(void *)(v5 + 24);
  Swift::String v17 = (void *)swift_allocObject();
  v17[2] = v5;
  v17[3] = a1;
  v17[4] = a2;
  v17[5] = a3;
  v17[6] = a4;
  aBlock[4] = sub_100236424;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10062E500;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  id v19 = a3;
  id v20 = a4;
  static DispatchQoS.unspecified.getter();
  uint64_t v24 = _swiftEmptyArrayStorage;
  sub_100046B28((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v23);
  return swift_release();
}

void sub_100234C8C(uint64_t a1, void *a2, id a3, void *a4)
{
  uint64_t v5 = v4;
  [a3 coordinate];
  [a3 coordinate];
  Double.write<A>(to:)();
  v8._uint64_t countAndFlagsBits = 45;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  Double.write<A>(to:)();
  [a4 coordinate];
  [a4 coordinate];
  Double.write<A>(to:)();
  v9._uint64_t countAndFlagsBits = 45;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  Double.write<A>(to:)();
  uint64_t v57 = 0;
  unint64_t v58 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v11 = *(void *)(v4 + 32);
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_100491AEC(0, 0xE000000000000000, v11);
  uint64_t v14 = v13;
  Swift::String v16 = v15;
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100236300(v12, v14, v16, v18);
  if (v14) {
    goto LABEL_2;
  }
  [a3 coordinate];
  [a3 coordinate];
  Double.write<A>(to:)();
  v29._uint64_t countAndFlagsBits = 45;
  v29._object = (void *)0xE100000000000000;
  String.append(_:)(v29);
  Double.write<A>(to:)();
  [a4 coordinate];
  [a4 coordinate];
  Double.write<A>(to:)();
  v30._uint64_t countAndFlagsBits = 45;
  v30._object = (void *)0xE100000000000000;
  String.append(_:)(v30);
  Double.write<A>(to:)();
  uint64_t v54 = 0;
  unint64_t v55 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  v31._uint64_t countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  String.append(_:)(v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (!*(void *)(*(void *)(v5 + 40) + 16))
  {
    swift_bridgeObjectRelease();
LABEL_11:
    uint64_t v34 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))swift_allocObject();
    *((void *)v34 + 2) = v5;
    *((void *)v34 + 3) = a1;
    *((void *)v34 + 4) = a2;
    *((void *)v34 + 5) = a3;
    *((void *)v34 + 6) = a4;
    uint64_t v35 = (objc_class *)type metadata accessor for FMETAOperation();
    uint64_t v36 = objc_allocWithZone(v35);
    v36[OBJC_IVAR____TtC6FindMy14FMETAOperation__isFinished] = 0;
    Swift::String v37 = (uint64_t *)&v36[OBJC_IVAR____TtC6FindMy14FMETAOperation_request];
    *Swift::String v37 = a1;
    v37[1] = (uint64_t)a2;
    v37[2] = (uint64_t)a3;
    v37[3] = (uint64_t)a4;
    Swift::String v38 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&v36[OBJC_IVAR____TtC6FindMy14FMETAOperation_completion];
    *Swift::String v38 = sub_100236358;
    v38[1] = v34;
    v53.receiver = v36;
    v53.super_class = v35;
    swift_bridgeObjectRetain_n();
    id v39 = a3;
    id v40 = a4;
    id v41 = v39;
    id v42 = v40;
    swift_retain();
    id v49 = [super init];
    [*(id *)(v5 + 48) addOperation:v49];
    [v41 coordinate];
    [v41 coordinate];
    Double.write<A>(to:)();
    v43._uint64_t countAndFlagsBits = 45;
    v43._object = (void *)0xE100000000000000;
    String.append(_:)(v43);
    Double.write<A>(to:)();
    [v42 coordinate];
    [v42 coordinate];
    Double.write<A>(to:)();
    v44._uint64_t countAndFlagsBits = 45;
    v44._object = (void *)0xE100000000000000;
    String.append(_:)(v44);
    Double.write<A>(to:)();
    v52[0] = 0;
    v52[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    v45._uint64_t countAndFlagsBits = 0;
    v45._object = (void *)0xE000000000000000;
    String.append(_:)(v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    id v46 = v41;
    id v47 = v42;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v56 = *(void *)(v5 + 32);
    *(void *)(v5 + 32) = 0x8000000000000000;
    sub_1001B8E98(a1, (uint64_t)a2, (uint64_t)v46, (uint64_t)v47, 0, 0xE000000000000000, isUniquelyReferenced_nonNull_native);
    *(void *)(v5 + 32) = v56;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();

    return;
  }
  swift_bridgeObjectRetain();
  sub_100053708(0, 0xE000000000000000);
  char v33 = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v33 & 1) == 0) {
    goto LABEL_11;
  }
LABEL_2:
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_1000606BC(v19, (uint64_t)qword_1006D1E98);
  id v20 = a3;
  id v21 = a4;
  swift_bridgeObjectRetain_n();
  id v22 = v20;
  id v23 = v21;
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    v52[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136315138;
    unint64_t v27 = sub_1001A316C(a1, a2, v22, v23);
    uint64_t v56 = sub_1000606F4(v27, v28, v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "FMETACache: Loading declined, we are already processing similar eta: %s", v26, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_10023548C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v26 = a1;
  uint64_t v15 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v32 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  Swift::String v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for DispatchQoS();
  uint64_t v29 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *(void *)(a6 + 24);
  id v20 = (void *)swift_allocObject();
  v20[2] = a5;
  v20[3] = a7;
  v20[4] = a8;
  v20[5] = a9;
  v20[6] = a10;
  v20[7] = a6;
  v20[8] = v26;
  v20[9] = a2;
  uint64_t v21 = v28;
  v20[10] = v27;
  v20[11] = v21;
  aBlock[4] = sub_1002363E8;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10062E4B0;
  id v22 = _Block_copy(aBlock);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v23 = a9;
  id v24 = a10;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  char v33 = _swiftEmptyArrayStorage;
  sub_100046B28((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v17, v15);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v19, v31);
  return swift_release();
}

void sub_10023579C(uint64_t a1, uint64_t a2, void *a3, id a4, void *a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10)
{
  if (!a1)
  {
    [a4 coordinate];
    [a4 coordinate];
    Double.write<A>(to:)();
    v26._uint64_t countAndFlagsBits = 45;
    v26._object = (void *)0xE100000000000000;
    String.append(_:)(v26);
    Double.write<A>(to:)();
    [a5 coordinate];
    [a5 coordinate];
    Double.write<A>(to:)();
    v27._uint64_t countAndFlagsBits = 45;
    v27._object = (void *)0xE100000000000000;
    String.append(_:)(v27);
    Double.write<A>(to:)();
    uint64_t v85 = 0;
    unint64_t v86 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    v28._uint64_t countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    String.append(_:)(v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v29 = sub_1001B115C(0, 0xE000000000000000);
    uint64_t v31 = v30;
    char v33 = v32;
    uint64_t v35 = v34;
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_100236300(v29, v31, v33, v35);
    if (!a8) {
      return;
    }
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v36 = type metadata accessor for Logger();
    sub_1000606BC(v36, (uint64_t)qword_1006D1E98);
    swift_bridgeObjectRetain_n();
    Swift::String v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v37, v38))
    {
      id v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      *(_DWORD *)id v39 = 136315138;
      uint64_t v84 = v40;
      uint64_t v85 = 0;
      unint64_t v86 = 0xE000000000000000;
      _StringGuts.grow(_:)(28);
      v41._uint64_t countAndFlagsBits = 60;
      v41._object = (void *)0xE100000000000000;
      String.append(_:)(v41);
      v42._uint64_t countAndFlagsBits = 0x4154454D46;
      v42._object = (void *)0xE500000000000000;
      String.append(_:)(v42);
      v43._uint64_t countAndFlagsBits = 0x69746E656469203ALL;
      v43._object = (void *)0xEE00203A72656966;
      String.append(_:)(v43);
      swift_bridgeObjectRetain();
      v44._uint64_t countAndFlagsBits = a7;
      v44._object = a8;
      String.append(_:)(v44);
      swift_bridgeObjectRelease();
      v45._uint64_t countAndFlagsBits = 0x203A61746520;
      v45._object = (void *)0xE600000000000000;
      String.append(_:)(v45);
      Double.write<A>(to:)();
      v46._uint64_t countAndFlagsBits = 62;
      v46._object = (void *)0xE100000000000000;
      String.append(_:)(v46);
      uint64_t v85 = sub_1000606F4(0, 0xE000000000000000, &v84);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "FMETACache: ETA calculation received: %s", v39, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    [a4 coordinate];
    [a4 coordinate];
    uint64_t v85 = 0;
    unint64_t v86 = 0xE000000000000000;
    Double.write<A>(to:)();
    v63._uint64_t countAndFlagsBits = 45;
    v63._object = (void *)0xE100000000000000;
    String.append(_:)(v63);
    Double.write<A>(to:)();
    uint64_t v65 = v85;
    unint64_t v64 = v86;
    [a5 coordinate];
    [a5 coordinate];
    uint64_t v85 = 0;
    unint64_t v86 = 0xE000000000000000;
    Double.write<A>(to:)();
    v66._uint64_t countAndFlagsBits = 45;
    v66._object = (void *)0xE100000000000000;
    String.append(_:)(v66);
    Double.write<A>(to:)();
    uint64_t v67 = v85;
    uint64_t v68 = (void *)v86;
    uint64_t v85 = v65;
    unint64_t v86 = v64;
    swift_bridgeObjectRetain();
    v69._uint64_t countAndFlagsBits = v67;
    v69._object = v68;
    String.append(_:)(v69);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v70 = v85;
    uint64_t v71 = v86;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v84 = *(void *)(a6 + 40);
    *(void *)(a6 + 40) = 0x8000000000000000;
    sub_1001B9050(a7, (uint64_t)a8, v70, v71, isUniquelyReferenced_nonNull_native, *(double *)&a9, *(double *)&a10);
    *(void *)(a6 + 40) = v84;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_beginAccess();
    unint64_t v73 = *(void *)(a6 + 16);
    if (v73 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v74 = _CocoaArrayWrapper.endIndex.getter();
      if (v74) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v74 = *(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v74)
      {
LABEL_16:
        if (v74 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v74; ++i)
        {
          if ((v73 & 0xC000000000000001) != 0)
          {
            uint64_t v76 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v76 = *(void *)(v73 + 8 * i + 32);
            swift_retain();
          }
          uint64_t v77 = v76 + OBJC_IVAR____TtC6FindMy17FMETASubscription_subscriber;
          if (swift_unknownObjectWeakLoadStrong())
          {
            uint64_t v78 = *(void *)(v77 + 8);
            uint64_t ObjectType = swift_getObjectType();
            (*(void (**)(uint64_t, uint64_t, void *, uint64_t, void *, uint64_t, uint64_t, double, double))(v78 + 8))(a6, a7, a8, a2, a3, ObjectType, v78, *(double *)&a9, *(double *)&a10);
            swift_release();
            swift_unknownObjectRelease();
          }
          else
          {
            swift_release();
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    return;
  }
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_1000606BC(v13, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain();
  id v14 = a4;
  id v15 = a5;
  swift_errorRetain();
  swift_bridgeObjectRetain();
  id v16 = v14;
  id v17 = v15;
  swift_errorRetain();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v85 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136315394;
    unint64_t v21 = sub_1001A316C(a2, a3, v16, v17);
    sub_1000606F4(v21, v22, &v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v23 = Error.localizedDescription.getter();
    uint64_t v84 = sub_1000606F4(v23, v24, &v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "FMETACache: ETA calculation error: %s for request: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }

  [v16 coordinate];
  [v16 coordinate];
  uint64_t v85 = 0;
  unint64_t v86 = 0xE000000000000000;
  Double.write<A>(to:)();
  v47._uint64_t countAndFlagsBits = 45;
  v47._object = (void *)0xE100000000000000;
  String.append(_:)(v47);
  Double.write<A>(to:)();
  uint64_t v49 = v85;
  unint64_t v48 = v86;
  [v17 coordinate];
  [v17 coordinate];
  uint64_t v85 = 0;
  unint64_t v86 = 0xE000000000000000;
  Double.write<A>(to:)();
  v50._uint64_t countAndFlagsBits = 45;
  v50._object = (void *)0xE100000000000000;
  String.append(_:)(v50);
  Double.write<A>(to:)();
  uint64_t v51 = v85;
  uint64_t v52 = (void *)v86;
  uint64_t v85 = v49;
  unint64_t v86 = v48;
  swift_bridgeObjectRetain();
  v53._uint64_t countAndFlagsBits = v51;
  v53._object = v52;
  String.append(_:)(v53);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v54 = v85;
  uint64_t v55 = v86;
  swift_beginAccess();
  uint64_t v56 = sub_1001B115C(v54, v55);
  uint64_t v58 = v57;
  id v60 = v59;
  id v62 = v61;
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_100236300(v56, v58, v60, v62);
}

uint64_t sub_1002362A8()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void sub_100236300(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100236358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10023548C(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void **)(v5 + 40), *(void **)(v5 + 48));
}

uint64_t sub_100236388()
{
  swift_errorRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 96, 7);
}

void sub_1002363E8()
{
  sub_10023579C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(id *)(v0 + 40), *(void **)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void **)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88));
}

void sub_100236424()
{
  sub_100234C8C(*(void *)(v0 + 24), *(void **)(v0 + 32), *(id *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_100236454()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_1002364A4()
{
  sub_100234478(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56));
}

uint64_t sub_1002364B4()
{
  return _swift_deallocObject(v0, 32, 7);
}

void *sub_1002364D4(uint64_t a1)
{
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    v13[1] = v1;
    id v16 = _swiftEmptyArrayStorage;
    sub_10013E9DC(0, v6, 0);
    uint64_t v7 = v16;
    uint64_t v8 = *(void *)(type metadata accessor for FMIPUnknownItem() - 8);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v14 = *(void *)(v8 + 72);
    do
    {
      FMIPUnknownItem.identifier.getter();
      id v16 = v7;
      unint64_t v11 = v7[2];
      unint64_t v10 = v7[3];
      if (v11 >= v10 >> 1)
      {
        sub_10013E9DC(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v16;
      }
      v7[2] = v11 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v11, v5, v15);
      v9 += v14;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1002366BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10005D034(&qword_1006B6C68);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMUnknownItemCellViewModel();
  __chkstk_darwin(v9);
  unint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_100003F10(a1, &qword_1006B6C68);
    sub_1001B125C(a2, (uint64_t)v8);
    uint64_t v13 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_100003F10((uint64_t)v8, &qword_1006B6C68);
  }
  else
  {
    sub_100242284(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_1001B9398((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = type metadata accessor for UUID();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_1002368DC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UICellConfigurationState();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE418 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1000606BC(v8, (uint64_t)qword_1006D2790);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v20 = v1;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v19 = a1;
    uint64_t v22 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    sub_1002419D4((unint64_t *)&unk_1006B6D10, (void (*)(uint64_t))&type metadata accessor for UICellConfigurationState);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v21 = sub_1000606F4(v14, v15, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMUnknownItemListCellView: updateConfiguration(using: %s)", v12, 0xCu);
    swift_arrayDestroy();
    a1 = v19;
    swift_slowDealloc();
    uint64_t v2 = v20;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  Class isa = UICellConfigurationState._bridgeToObjectiveC()().super.super.isa;
  uint64_t v17 = (objc_class *)type metadata accessor for FMUnknownItemListCellView();
  v23.receiver = v2;
  v23.super_class = v17;
  [super _bridgedUpdateConfigurationUsingState:isa];

  sub_100236CA0();
  return sub_10023739C(a1);
}

void sub_100236CA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UIListContentConfiguration.ImageProperties();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10005D034(&qword_1006B6CF8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UIListContentConfiguration();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = OBJC_IVAR____TtC6FindMy25FMUnknownItemListCellView_setupCompleted;
  if (v1[OBJC_IVAR____TtC6FindMy25FMUnknownItemListCellView_setupCompleted]) {
    return;
  }
  id v55 = [v1 contentView];
  self;
  uint64_t v14 = swift_dynamicCastObjCClass();
  if (!v14)
  {
    id v26 = v55;

    return;
  }
  unint64_t v15 = (void *)v14;
  uint64_t v54 = v3;
  UITableViewCell.contentConfiguration.getter();
  if (!v56[3])
  {
    sub_100003F10((uint64_t)v56, &qword_1006B6D00);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_19;
  }
  sub_10005D034(&qword_1006B6D08);
  int v16 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, v16 ^ 1u, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_19:

    sub_100003F10((uint64_t)v8, &qword_1006B6CF8);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  id v17 = [v15 imageLayoutGuide];
  if (v17)
  {
    id v52 = v17;
    uint64_t v50 = v13;
    uint64_t v18 = *(void **)&v1[OBJC_IVAR____TtC6FindMy25FMUnknownItemListCellView_imageContainer];
    [v15 addSubview:v18];
    id v19 = [v18 constraints];
    v48[1] = (id)sub_100006060(0, (unint64_t *)&qword_1006AEE60);
    unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v20 >> 62)
    {
      id v47 = v18;
      swift_bridgeObjectRetain();
      uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v22 = v18;
      swift_bridgeObjectRetain();
    }
    uint64_t v49 = v2;
    Swift::String v53 = v12;
    uint64_t v51 = v10;
    if (!v21)
    {
LABEL_20:

      swift_bridgeObjectRelease_n();
      [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
      v48[0] = self;
      sub_10005D034(&qword_1006AF2D0);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_10055B950;
      id v28 = [v18 centerXAnchor];
      id v29 = v52;
      id v30 = [v52 centerXAnchor];
      id v31 = [v28 constraintEqualToAnchor:v30];

      *(void *)(v27 + 32) = v31;
      id v32 = [v18 centerYAnchor];
      id v33 = [v29 centerYAnchor];
      id v34 = [v32 constraintEqualToAnchor:v33];

      *(void *)(v27 + 40) = v34;
      id v35 = [v18 widthAnchor];
      UIListContentConfiguration.imageProperties.getter();
      UIListContentConfiguration.ImageProperties.reservedLayoutSize.getter();
      double v37 = v36;
      os_log_type_t v38 = *(void (**)(char *, uint64_t))(v54 + 8);
      uint64_t v39 = v49;
      v38(v5, v49);
      id v40 = [v35 constraintEqualToConstant:v37];

      *(void *)(v27 + 48) = v40;
      id v41 = [v18 heightAnchor];
      Swift::String v42 = v53;
      UIListContentConfiguration.imageProperties.getter();
      UIListContentConfiguration.ImageProperties.reservedLayoutSize.getter();
      double v44 = v43;
      v38(v5, v39);
      id v45 = [v41 constraintEqualToConstant:v44];

      *(void *)(v27 + 56) = v45;
      v56[0] = v27;
      specialized Array._endMutation()();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v48[0] activateConstraints:isa];

      (*(void (**)(char *, uint64_t))(v51 + 8))(v42, v9);
      v1[v50] = 1;
      return;
    }
    if (v21 >= 1)
    {
      for (uint64_t i = 0; i != v21; ++i)
      {
        if ((v20 & 0xC000000000000001) != 0) {
          id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v24 = *(id *)(v20 + 8 * i + 32);
        }
        os_log_type_t v25 = v24;
        [v18 removeConstraint:v24];
      }
      goto LABEL_20;
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_10023739C(uint64_t a1)
{
  uint64_t v50 = a1;
  uint64_t v51 = type metadata accessor for UICellConfigurationState();
  uint64_t v49 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v3 = (char *)v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10005D034(&qword_1006B6C60);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)v42 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)v42 - v12;
  __chkstk_darwin(v11);
  Swift::String v53 = (char *)v42 - v14;
  uint64_t v15 = type metadata accessor for UIBackgroundConfiguration();
  int v16 = *(void **)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  id v19 = (char *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)v42 - v20;
  UITableViewCell.backgroundConfiguration.getter();
  id v52 = (unsigned int (*)(char *, uint64_t, uint64_t))v16[6];
  if (v52(v10, 1, v15))
  {
    sub_100003F10((uint64_t)v10, &qword_1006B6C60);
    id v22 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v16[7];
    v22(v13, 1, 1, v15);
LABEL_4:
    uint64_t v27 = (uint64_t)v53;
    sub_100003F10((uint64_t)v13, &qword_1006B6C60);
    v22((char *)v27, 1, 1, v15);
    return sub_100003F10(v27, &qword_1006B6C60);
  }
  id v47 = v21;
  unint64_t v48 = v3;
  double v44 = v7;
  uint64_t v45 = v1;
  double v43 = (void (*)(char *, char *, uint64_t))v16[2];
  v43(v19, v10, v15);
  sub_100003F10((uint64_t)v10, &qword_1006B6C60);
  uint64_t v23 = v51;
  v54[3] = v51;
  v54[4] = (uint64_t)&protocol witness table for UICellConfigurationState;
  id v24 = sub_100042804(v54);
  uint64_t v25 = v49 + 16;
  Swift::String v46 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v49 + 16);
  v46(v24, v50, v23);
  UIBackgroundConfiguration.updated(for:)();
  id v26 = (void (*)(char *, uint64_t))v16[1];
  v26(v19, v15);
  sub_10002CEFC((uint64_t)v54);
  id v22 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v16[7];
  v22(v13, 0, 1, v15);
  if (v52(v13, 1, v15) == 1) {
    goto LABEL_4;
  }
  v42[0] = v26;
  v42[1] = v25;
  v42[2] = v16 + 1;
  id v29 = (void (*)(char *, char *, uint64_t))v16[4];
  uint64_t v27 = (uint64_t)v53;
  v29(v53, v13, v15);
  v22((char *)v27, 0, 1, v15);
  if (v52((char *)v27, 1, v15) == 1) {
    return sub_100003F10(v27, &qword_1006B6C60);
  }
  id v30 = v47;
  v29(v47, (char *)v27, v15);
  uint64_t v31 = v50;
  char v32 = UICellConfigurationState.isHighlighted.getter();
  id v33 = v48;
  uint64_t v34 = v31;
  uint64_t v35 = v51;
  v46((uint64_t *)v48, v34, v51);
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v49 + 8))(v33, v35);
    double v36 = &selRef_separatorColor;
  }
  else
  {
    char v37 = UICellConfigurationState.isSelected.getter();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v33, v35);
    if (v37) {
      double v36 = &selRef_separatorColor;
    }
    else {
      double v36 = &selRef_clearColor;
    }
  }
  os_log_type_t v38 = v44;
  uint64_t v39 = v43;
  id v40 = (uint64_t (*)(char *, uint64_t))v42[0];
  id v41 = [self *v36];
  UIBackgroundConfiguration.backgroundColor.setter();
  v39(v38, v30, v15);
  v22(v38, 0, 1, v15);
  UITableViewCell.backgroundConfiguration.setter();
  return v40(v30, v15);
}

uint64_t sub_1002378EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v22 = a1;
  uint64_t v5 = type metadata accessor for FMUnknownItemCellViewModel();
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v21 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = sub_10005D034(&qword_1006B4230);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10005D034(&qword_1006B6CD0);
  uint64_t v10 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a2;
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  id v24 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v13 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v9, 1, 1, v13);
  sub_10005D034(&qword_1006B6CD8);
  sub_1000450A0((unint64_t *)&unk_1006B6CE0, &qword_1006B6CD8);
  sub_100188498();
  Publisher.receive<A>(on:options:)();
  sub_100003F10((uint64_t)v9, &qword_1006B4230);

  sub_10024190C(v22, (uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
  unint64_t v14 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v15 = swift_allocObject();
  sub_100242284((uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
  *(void *)(v15 + ((v6 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = v3;
  sub_1000450A0(&qword_1006B6CF0, &qword_1006B6CD0);
  int v16 = v3;
  uint64_t v17 = v23;
  uint64_t v18 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v17);
  *(void *)&v16[OBJC_IVAR____TtC6FindMy25FMUnknownItemListCellView_imageCancellable] = v18;
  return swift_release();
}

uint64_t sub_100237C68(void **a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMUnknownItemCellViewModel();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (void **)((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *a1;
  sub_10024190C(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
  uint64_t v8 = *v6;
  id v9 = v7;

  *uint64_t v6 = v7;
  sub_100538A20((uint64_t)v6);
  return sub_100241974((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
}

id sub_100237D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR____TtC6FindMy25FMUnknownItemListCellView_imageCancellable] = 0;
  uint64_t v6 = OBJC_IVAR____TtC6FindMy25FMUnknownItemListCellView_imageContainer;
  id v7 = objc_allocWithZone((Class)type metadata accessor for FMTableViewCellImageContainer());
  uint64_t v8 = v3;
  *(void *)&v3[v6] = [v7 init];
  v8[OBJC_IVAR____TtC6FindMy25FMUnknownItemListCellView_setupCompleted] = 0;

  if (a3)
  {
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v9 = 0;
  }
  v12.receiver = v8;
  v12.super_class = (Class)type metadata accessor for FMUnknownItemListCellView();
  id v10 = [super initWithStyle:a1 reuseIdentifier:v9];

  return v10;
}

id sub_100237E74(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC6FindMy25FMUnknownItemListCellView_imageCancellable] = 0;
  uint64_t v3 = OBJC_IVAR____TtC6FindMy25FMUnknownItemListCellView_imageContainer;
  id v4 = objc_allocWithZone((Class)type metadata accessor for FMTableViewCellImageContainer());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  v5[OBJC_IVAR____TtC6FindMy25FMUnknownItemListCellView_setupCompleted] = 0;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for FMUnknownItemListCellView();
  [super initWithCoder:a1];

  return v6;
}

id sub_100237F4C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMUnknownItemListCellView();
  return [super dealloc];
}

uint64_t type metadata accessor for FMUnknownItemListCellView()
{
  return self;
}

uint64_t type metadata accessor for FMUnknownItemsListDataSource(uint64_t a1)
{
  return sub_1000201D0(a1, (uint64_t *)&unk_1006B6A38);
}

uint64_t sub_100238010()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1002380A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMUnknownItemCellViewModel();
  uint64_t v62 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v58 = (uint64_t)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  objc_super v8 = (char *)&v48 - v7;
  uint64_t v63 = type metadata accessor for UUID();
  uint64_t v57 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  unint64_t v59 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10005D034(&qword_1006B6C30);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v11);
  int v16 = (char *)&v48 - v15;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v53 = a1;
  uint64_t v54 = v8;
  int64_t v60 = 0;
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v18 = a1 + 64;
  uint64_t v17 = v19;
  uint64_t v20 = 1 << *(unsigned char *)(v18 - 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v17;
  uint64_t v52 = v57 + 16;
  id v55 = (void (**)(uint64_t, uint64_t))(v57 + 8);
  uint64_t v56 = (void (**)(uint64_t, char *, uint64_t))(v57 + 32);
  uint64_t v50 = v18;
  int64_t v51 = (unint64_t)(v20 + 63) >> 6;
  int64_t v49 = v51 - 1;
  uint64_t v23 = (uint64_t *)&unk_1006B6C38;
  uint64_t v24 = (uint64_t)v59;
  while (1)
  {
    if (v22)
    {
      unint64_t v25 = __clz(__rbit64(v22));
      uint64_t v26 = (v22 - 1) & v22;
      unint64_t v27 = v25 | (v60 << 6);
LABEL_8:
      uint64_t v28 = v53;
      (*(void (**)(char *, unint64_t, uint64_t))(v57 + 16))(v13, *(void *)(v53 + 48) + *(void *)(v57 + 72) * v27, v63);
      uint64_t v29 = *(void *)(v28 + 56) + *(void *)(v62 + 72) * v27;
      uint64_t v30 = sub_10005D034(v23);
      sub_10024190C(v29, (uint64_t)&v13[*(int *)(v30 + 48)], (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v13, 0, 1, v30);
      goto LABEL_30;
    }
    int64_t v31 = v60 + 1;
    if (__OFADD__(v60, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v31 < v51)
    {
      unint64_t v32 = *(void *)(v50 + 8 * v31);
      if (v32) {
        goto LABEL_12;
      }
      int64_t v33 = v60 + 2;
      ++v60;
      if (v31 + 1 < v51)
      {
        unint64_t v32 = *(void *)(v50 + 8 * v33);
        if (v32) {
          goto LABEL_15;
        }
        int64_t v60 = v31 + 1;
        if (v31 + 2 < v51)
        {
          unint64_t v32 = *(void *)(v50 + 8 * (v31 + 2));
          if (v32)
          {
            v31 += 2;
            goto LABEL_12;
          }
          int64_t v60 = v31 + 2;
          if (v31 + 3 < v51)
          {
            unint64_t v32 = *(void *)(v50 + 8 * (v31 + 3));
            if (v32)
            {
              v31 += 3;
              goto LABEL_12;
            }
            int64_t v33 = v31 + 4;
            int64_t v60 = v31 + 3;
            if (v31 + 4 < v51) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    uint64_t v34 = sub_10005D034(v23);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v13, 1, 1, v34);
    uint64_t v26 = 0;
LABEL_30:
    sub_1002418A4((uint64_t)v13, (uint64_t)v16);
    uint64_t v35 = sub_10005D034(v23);
    int v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v16, 1, v35);
    BOOL v61 = v36 == 1;
    if (v36 == 1) {
      return v61;
    }
    unint64_t v37 = v26;
    os_log_type_t v38 = v23;
    uint64_t v39 = (uint64_t)&v16[*(int *)(v35 + 48)];
    id v40 = v16;
    uint64_t v41 = v63;
    (*v56)(v24, v16, v63);
    uint64_t v42 = (uint64_t)v54;
    sub_100242284(v39, (uint64_t)v54, (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
    unint64_t v43 = sub_1001AF8D4(v24);
    char v45 = v44;
    (*v55)(v24, v41);
    if ((v45 & 1) == 0)
    {
      sub_100241974(v42, (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
      return 0;
    }
    uint64_t v46 = v58;
    sub_10024190C(*(void *)(a2 + 56) + *(void *)(v62 + 72) * v43, v58, (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
    char v47 = sub_100105E20(v46, v42);
    sub_100241974(v46, (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
    uint64_t result = sub_100241974(v42, (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
    uint64_t v23 = v38;
    int v16 = v40;
    unint64_t v22 = v37;
    if ((v47 & 1) == 0) {
      return v61;
    }
  }
  unint64_t v32 = *(void *)(v50 + 8 * v33);
  if (v32)
  {
LABEL_15:
    int64_t v31 = v33;
LABEL_12:
    uint64_t v26 = (v32 - 1) & v32;
    unint64_t v27 = __clz(__rbit64(v32)) + (v31 << 6);
    int64_t v60 = v31;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v31 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v31 >= v51)
    {
      int64_t v60 = v49;
      goto LABEL_29;
    }
    unint64_t v32 = *(void *)(v50 + 8 * v31);
    ++v33;
    if (v32) {
      goto LABEL_12;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_100238688(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_24;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        return 1;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          return 1;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            return 1;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_24:
    uint64_t v14 = *(void *)(*(void *)(v2 + 56) + 8 * v10);
    sub_1001AF868(*(unsigned char *)(*(void *)(v2 + 48) + v10));
    if (v15)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = swift_bridgeObjectRetain();
      char v17 = sub_1002498F0(v16, v14);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v17) {
        continue;
      }
    }
    return 0;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8) {
    return 1;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_23;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t (*sub_100238838())()
{
  return j__swift_endAccess;
}

uint64_t sub_10023888C(void *a1)
{
  swift_beginAccess();
  uint64_t v3 = a1[3];
  swift_beginAccess();
  v1[3] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v4 = a1[2];
  swift_beginAccess();
  v1[2] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v5 = a1[4];
  swift_beginAccess();
  v1[4] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100238988()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1002389D0(uint64_t *a1, uint64_t *a2)
{
  return sub_1002413B0(*a1, *a2);
}

uint64_t sub_1002389DC(char a1)
{
  if (a1)
  {
    if (a1 != 1) {
      return 0;
    }
    id v1 = [self mainBundle];
    unint64_t v2 = 0xD000000000000018;
    unint64_t v3 = 0xD000000000000032;
    unint64_t v10 = 0x800000010057EF80;
    uint64_t v4 = "UNKNOWN_ITEMS_LIST_SECTION_TITLE_DETECTED_NEAR_YOU";
  }
  else
  {
    id v1 = [self mainBundle];
    unint64_t v2 = 0xD000000000000018;
    unint64_t v3 = 0xD000000000000038;
    unint64_t v10 = 0x800000010057EF80;
    uint64_t v4 = "UNKNOWN_ITEMS_LIST_SECTION_TITLE_PREVIOUSLY_NOTIFIED_YOU";
  }
  unint64_t v5 = (unint64_t)(v4 - 32) | 0x8000000000000000;
  v6.value._object = (void *)0x800000010057EF60;
  v6.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, v6, (NSBundle)v1, v7, *(Swift::String *)&v2)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t *sub_100238B0C@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

void sub_100238B24(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_100238B30(void *a1@<X8>)
{
  *a1 = &off_10061F7B8;
}

Swift::Int sub_100238B40()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMUnknownItemsListDataSource.Entry(0);
  __chkstk_darwin(v6 - 8);
  int64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)();
  sub_10024190C(v1, (uint64_t)v8, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  uint64_t v9 = sub_10005D034((uint64_t *)&unk_1006BB350);
  int v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 2, v9);
  if (v10)
  {
    if (v10 == 1) {
      Swift::UInt v11 = 1;
    }
    else {
      Swift::UInt v11 = 2;
    }
    Hasher._combine(_:)(v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    Hasher._combine(_:)(0);
    sub_1002419D4((unint64_t *)&unk_1006C0B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return Hasher._finalize()();
}

void sub_100238D60()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  unint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10024190C(v0, (uint64_t)v7, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  uint64_t v8 = sub_10005D034((uint64_t *)&unk_1006BB350);
  int v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 2, v8);
  if (v9)
  {
    if (v9 == 1) {
      Swift::UInt v10 = 1;
    }
    else {
      Swift::UInt v10 = 2;
    }
    Hasher._combine(_:)(v10);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v7, v1);
    Hasher._combine(_:)(0);
    sub_1002419D4((unint64_t *)&unk_1006C0B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
}

Swift::Int sub_100238F58()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)();
  sub_10024190C(v1, (uint64_t)v8, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  uint64_t v9 = sub_10005D034((uint64_t *)&unk_1006BB350);
  int v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 2, v9);
  if (v10)
  {
    if (v10 == 1) {
      Swift::UInt v11 = 1;
    }
    else {
      Swift::UInt v11 = 2;
    }
    Hasher._combine(_:)(v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    Hasher._combine(_:)(0);
    sub_1002419D4((unint64_t *)&unk_1006C0B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return Hasher._finalize()();
}

void sub_100239178()
{
  if (qword_1006AE418 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000606BC(v1, (uint64_t)qword_1006D2790);
  uint64_t v9 = v0;
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    int v6 = v9[qword_1006B6A28];
    uint64_t v10 = v5;
    if (v6) {
      uint64_t v7 = 1702195828;
    }
    else {
      uint64_t v7 = 0x65736C6166;
    }
    if (v6) {
      unint64_t v8 = 0xE400000000000000;
    }
    else {
      unint64_t v8 = 0xE500000000000000;
    }
    sub_1000606F4(v7, v8, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "FMUnknownItemsListDataSource: isUpdating: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

id sub_10023937C(uint64_t a1, void *a2, char a3)
{
  uint64_t v25 = a1;
  id v26 = a2;
  int v24 = a3 & 1;
  uint64_t v23 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v4 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  int v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v7);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = qword_1006B69F0;
  type metadata accessor for FMIPUnknownAccessoryDiscoveryController();
  swift_allocObject();
  uint64_t v10 = v3;
  *(void *)&v3[v9] = FMIPUnknownAccessoryDiscoveryController.init()();
  uint64_t v22 = qword_1006B69F8;
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  static DispatchQoS.unspecified.getter();
  unint64_t v27 = _swiftEmptyArrayStorage;
  sub_1002419D4((unint64_t *)&unk_1006AE490, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10005D034((uint64_t *)&unk_1006B6C50);
  sub_1000450A0((unint64_t *)&unk_1006AE4A0, (uint64_t *)&unk_1006B6C50);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v23);
  *(void *)&v10[v22] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v10[qword_1006B6A18] = 0;
  v10[qword_1006B6A20] = 0;
  v10[qword_1006B6A28] = 0;
  Swift::UInt v11 = &v10[qword_1006B6A30];
  type metadata accessor for FMUnknownItemsListDataSource.ViewModel();
  *(void *)Swift::UInt v11 = 0;
  *((void *)v11 + 1) = 0;
  unint64_t v12 = (void *)swift_allocObject();
  v12[2] = sub_10014C430((uint64_t)_swiftEmptyArrayStorage);
  v12[3] = sub_10014D070((uint64_t)_swiftEmptyArrayStorage);
  v12[4] = sub_10014C660((uint64_t)_swiftEmptyArrayStorage);
  v10[qword_1006B6A10] = v24;
  uint64_t v13 = v25;
  *(void *)&v10[qword_1006B69E0] = v25;
  *(void *)&v10[qword_1006B6A00] = v12;
  *(void *)&v10[qword_1006B69E8] = *(void *)(v13 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v14 = FMIPManager.unknownItems.getter();
  char v15 = sub_1002364D4(v14);
  swift_bridgeObjectRelease();
  *(void *)&v10[qword_1006B6A08] = v15;

  swift_retain();
  id v16 = v26;
  id v17 = (id)UITableViewDiffableDataSource.init(tableView:cellProvider:)();
  sub_10023B0BC();
  sub_10023AE4C(v16);
  uint64_t v18 = self;
  id v19 = [v18 defaultCenter];
  [v19 addObserver:v17 selector:"applicationDidEnterBackground" name:UIApplicationDidEnterBackgroundNotification object:0];

  id v20 = [v18 defaultCenter];
  [v20 addObserver:v17 selector:"applicationWillEnterForeground" name:UIApplicationWillEnterForegroundNotification object:0];
  swift_release();

  swift_release();
  return v17;
}

uint64_t sub_100239828()
{
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = *(void *)(v0 + qword_1006B6A30);

  return sub_100036B90(v1);
}

id sub_1002398CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v19 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v17 = *(void *)(v5 - 8);
  uint64_t v18 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = self;
  id v9 = [v8 defaultCenter];
  [v9 removeObserver:v1 name:UIApplicationDidEnterBackgroundNotification object:0];

  id v10 = [v8 defaultCenter];
  [v10 removeObserver:v1 name:UIApplicationWillEnterForegroundNotification object:0];

  uint64_t v11 = *(void *)&v1[qword_1006B69E0];
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  swift_retain();
  unint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = sub_10024223C;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10062E6F0;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1002419D4((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);
  swift_release();

  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v18);
  uint64_t v14 = (objc_class *)type metadata accessor for FMUnknownItemsListDataSource(0);
  v20.receiver = v1;
  v20.super_class = v14;
  return [super dealloc];
}

uint64_t sub_100239C54(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000606BC(v2, (uint64_t)qword_1006D1E98);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    v16[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    type metadata accessor for FMIPUnknownItem();
    uint64_t v6 = Array.description.getter();
    sub_1000606F4(v6, v7, v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMDevicesProvider: update detectedUnknownItems %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  *(void *)(v1 + OBJC_IVAR____TtC6FindMy17FMDevicesProvider_unknownItemsDetectedNearYou) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  unint64_t v8 = *(void *)(v1 + 16);
  if (!(v8 >> 62))
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_7;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v9 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_7:
  if (v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if ((v8 & 0xC000000000000001) != 0)
      {
        uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v12 = *(void *)(v8 + 8 * i + 32);
        swift_retain();
      }
      uint64_t v13 = v12 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v14 = *(void *)(v13 + 8);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v14 + 96))(v1, _swiftEmptyArrayStorage, ObjectType, v14);
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

id sub_100239F24(void *a1)
{
  id v1 = a1;
  return sub_1002398CC();
}

uint64_t sub_100239F4C(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v2 = *(void *)(a1 + qword_1006B6A30);

  return sub_100036B90(v2);
}

void sub_100239FFC(void *a1)
{
  uint64_t v1 = qword_1006AE418;
  id v6 = a1;
  if (v1 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000606BC(v2, (uint64_t)qword_1006D2790);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMUnknownItemsListDataSource: applicationDidEnterBackground", v5, 2u);
    swift_slowDealloc();
  }

  sub_10023A84C();
}

void sub_10023A100(void *a1)
{
  uint64_t v1 = qword_1006AE418;
  id v2 = a1;
  if (v1 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_1000606BC(v3, (uint64_t)qword_1006D2790);
  oslog = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v4, "FMUnknownItemsListDataSource: applicationWillEnterForeground", v5, 2u);
    swift_slowDealloc();
  }
}

void sub_10023A1FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v26 = *(void *)(v2 - 8);
  uint64_t v27 = v2;
  __chkstk_darwin(v2);
  os_log_type_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v24 = *(void *)(v5 - 8);
  uint64_t v25 = v5;
  __chkstk_darwin(v5);
  unint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE418 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1000606BC(v8, (uint64_t)qword_1006D2790);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v28 = sub_1000606F4(0x6470557472617473, 0xEF2928676E697461, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMUnknownItemsListDataSource: %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if ((v1[qword_1006B6A28] & 1) == 0)
  {
    uint64_t v12 = *(void *)(*(void *)&v1[qword_1006B69E0] + 24);
    type metadata accessor for FMDevicesSubscription();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber + 8) = 0;
    swift_unknownObjectWeakInit();
    swift_retain();
    uint64_t v14 = v1;
    UUID.init()();
    *(void *)(v13 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber + 8) = &off_10062E650;
    swift_unknownObjectWeakAssign();

    swift_beginAccess();
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)(v12 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v12 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    swift_release();
    *(void *)&v14[qword_1006B6A18] = v13;
    swift_release();
    char v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "FMUnknownItemsListDataSource: Scanning disabled, no session running.", v17, 2u);
      swift_slowDealloc();
    }

    sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
    uint64_t v18 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v14;
    aBlock[4] = (uint64_t)sub_100242550;
    aBlock[5] = v19;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10003C410;
    aBlock[3] = (uint64_t)&unk_10062E8D0;
    objc_super v20 = _Block_copy(aBlock);
    uint64_t v21 = v14;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_1002419D4((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10005D034((uint64_t *)&unk_1006AE4B0);
    sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
    uint64_t v22 = v27;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v22);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
  }
}

uint64_t sub_10023A7B8(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + qword_1006B6A20);
  *(unsigned char *)(a1 + qword_1006B6A20) = 1;
  swift_retain();
  uint64_t v2 = FMIPManager.unknownItems.getter();
  swift_release();
  sub_10023B61C(v2, v1);

  return swift_bridgeObjectRelease();
}

void sub_10023A84C()
{
  int v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v31 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE418 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_1000606BC(v9, (uint64_t)qword_1006D2790);
  os_log_type_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v33 = v3;
  uint64_t v34 = v2;
  uint64_t v32 = v6;
  if (v12)
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v35 = sub_1000606F4(0x61647055706F7473, 0xEE002928676E6974, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMUnknownItemsListDataSource: %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (v1[qword_1006B6A28] == 1)
  {
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      os_log_type_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "FMUnknownItemsListDataSource: Stopping discovery", v16, 2u);
      swift_slowDealloc();
    }

    uint64_t v17 = *(void *)&v1[qword_1006B6A18];
    if (!v17) {
      goto LABEL_12;
    }
    uint64_t v18 = *(void *)(*(void *)&v1[qword_1006B69E0] + 24);
    swift_beginAccess();
    swift_retain();
    swift_retain();
    int64_t v19 = sub_10014040C((unint64_t *)(v18 + 16), v17);
    uint64_t v20 = v19;
    unint64_t v21 = *(void *)(v18 + 16);
    if (v21 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v22 >= v20) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v22 >= v19)
      {
LABEL_11:
        sub_100258678(v20, v22);
        swift_endAccess();
        swift_release();
        swift_release();
LABEL_12:
        uint64_t v23 = Logger.logObject.getter();
        os_log_type_t v24 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v23, v24))
        {
          uint64_t v25 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v25 = 0;
          _os_log_impl((void *)&_mh_execute_header, v23, v24, "FMUnknownItemsListDataSource: Scanning disabled, no session running.", v25, 2u);
          swift_slowDealloc();
        }

        sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
        uint64_t v26 = (void *)static OS_dispatch_queue.main.getter();
        uint64_t v27 = swift_allocObject();
        *(void *)(v27 + 16) = v1;
        aBlock[4] = (uint64_t)sub_100242520;
        aBlock[5] = v27;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_10003C410;
        aBlock[3] = (uint64_t)&unk_10062E880;
        uint64_t v28 = _Block_copy(aBlock);
        uint64_t v29 = v1;
        swift_release();
        static DispatchQoS.unspecified.getter();
        aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
        sub_1002419D4((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10005D034((uint64_t *)&unk_1006AE4B0);
        sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
        uint64_t v30 = v34;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v28);

        (*(void (**)(char *, uint64_t))(v33 + 8))(v5, v30);
        (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v32);
        return;
      }
    }
    __break(1u);
  }
}

void sub_10023AE4C(void *a1)
{
  dispatch thunk of UITableViewDiffableDataSource.defaultRowAnimation.setter();
  [a1 setDelegate:v1];
  type metadata accessor for FMTableViewSectionHeaderView();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v4 = String._bridgeToObjectiveC()();
  [a1 registerClass:ObjCClassFromMetadata forHeaderFooterViewReuseIdentifier:v4];

  [a1 setSectionHeaderTopPadding:0.0];
  id v5 = [self clearColor];
  [a1 setBackgroundColor:v5];

  type metadata accessor for FMUnknownItemListCellView();
  uint64_t v6 = swift_getObjCClassFromMetadata();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 registerClass:v6 forCellReuseIdentifier:v7];

  type metadata accessor for FMUnknownItemListCellView();
  uint64_t v8 = swift_getObjCClassFromMetadata();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 registerClass:v8 forCellReuseIdentifier:v9];

  type metadata accessor for FMAccessoryDiscoverySearchingCell();
  uint64_t v10 = swift_getObjCClassFromMetadata();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 registerClass:v10 forCellReuseIdentifier:v11];
}

uint64_t sub_10023B0BC()
{
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  uint64_t v0 = (void (*)(unsigned char *, void))dispatch thunk of FMIPUnknownAccessoryDiscoveryController.callbacks.modify();
  FMIPUnknownAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback.setter();
  v0(v4, 0);
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  uint64_t v1 = (void (*)(unsigned char *, void))dispatch thunk of FMIPUnknownAccessoryDiscoveryController.callbacks.modify();
  FMIPUnknownAccessoryDiscoveryController.Callbacks.lostAccessoriesCallback.setter();
  v1(v4, 0);
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  uint64_t v2 = (void (*)(unsigned char *, void))dispatch thunk of FMIPUnknownAccessoryDiscoveryController.callbacks.modify();
  FMIPUnknownAccessoryDiscoveryController.Callbacks.accessoryDiscoveryFinished.setter();
  v2(v4, 0);
  return swift_release();
}

uint64_t sub_10023B270()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    swift_retain();
    uint64_t v2 = FMIPManager.unknownItems.getter();
    swift_release();
    sub_10023B61C(v2, 1);

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10023B30C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = a3;
  aBlock[5] = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = a4;
  os_log_type_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1002419D4((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v18);
}

void sub_10023B5C8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10023F0D8();
  }
}

uint64_t sub_10023B61C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v26 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v24 = *(void *)(v9 - 8);
  uint64_t v25 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1006AE418 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_1000606BC(v12, (uint64_t)qword_1006D2790);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    int v22 = a2;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v23 = a1;
    os_log_type_t v16 = (uint8_t *)v15;
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v16 = 136315138;
    uint64_t v27 = (void *)sub_1000606F4(0xD000000000000022, 0x800000010058D740, aBlock);
    LOBYTE(a2) = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v23;
    swift_slowDealloc();
  }

  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v3;
  *(void *)(v17 + 24) = a1;
  *(unsigned char *)(v17 + 32) = a2 & 1;
  aBlock[4] = (uint64_t)sub_10024232C;
  aBlock[5] = v17;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10003C410;
  aBlock[3] = (uint64_t)&unk_10062E740;
  uint64_t v18 = _Block_copy(aBlock);
  id v19 = v3;
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  uint64_t v27 = _swiftEmptyArrayStorage;
  sub_1002419D4((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);
  (*(void (**)(unsigned char *, uint64_t))(v26 + 8))(v8, v6);
  (*(void (**)(unsigned char *, uint64_t))(v24 + 8))(v11, v25);
  return swift_release();
}

uint64_t sub_10023BA44(char *a1, uint64_t a2, int a3)
{
  int v38 = a3;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)&a1[qword_1006B6A00];
  uint64_t v12 = sub_10023CD2C(a2);
  swift_beginAccess();
  uint64_t v13 = v12[2];
  swift_beginAccess();
  uint64_t v14 = *(void *)(v11 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v15 = sub_1002380A4(v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0) {
    goto LABEL_3;
  }
  swift_beginAccess();
  uint64_t v16 = v12[3];
  swift_beginAccess();
  uint64_t v17 = *(void *)(v11 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v18 = sub_100238688(v16, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v18 & 1) == 0)
  {
LABEL_3:
    uint64_t v36 = v6;
    uint64_t v37 = v5;
    sub_10005D034(&qword_1006B6CA0);
    uint64_t v35 = swift_allocBox();
    uint64_t v20 = v19;
    type metadata accessor for FMUnknownItemsListDataSource.Entry(0);
    sub_100242338();
    sub_1002419D4((unint64_t *)&unk_1006B6CB0, (void (*)(uint64_t))type metadata accessor for FMUnknownItemsListDataSource.Entry);
    NSDiffableDataSourceSnapshot.init()();
    unint64_t v21 = v12 + 3;
    unint64_t v22 = swift_beginAccess();
    if (*(void *)(v12[3] + 16))
    {
      unint64_t v22 = sub_1001AF868(0);
      if (v23)
      {
        swift_bridgeObjectRetain();
        NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_10061F858);
        LOBYTE(aBlock[0]) = 0;
        NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
        unint64_t v22 = swift_bridgeObjectRelease();
      }
    }
    if (*(void *)(*v21 + 16))
    {
      unint64_t v22 = sub_1001AF868(1u);
      if (v24)
      {
        swift_bridgeObjectRetain();
        NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_10061F830);
        LOBYTE(aBlock[0]) = 1;
        NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
        unint64_t v22 = swift_bridgeObjectRelease();
      }
    }
    if (*(void *)(*v21 + 16))
    {
      unint64_t v22 = sub_1001AF868(2u);
      if (v25)
      {
        swift_bridgeObjectRetain();
        NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_10061F808);
        LOBYTE(aBlock[0]) = 2;
        NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
        unint64_t v22 = swift_bridgeObjectRelease();
      }
    }
    __chkstk_darwin(v22);
    *(&v34 - 4) = v11;
    *(&v34 - 3) = (uint64_t)v12;
    *(&v34 - 2) = v20;
    uint64_t v26 = swift_bridgeObjectRetain();
    sub_1002414BC(v26, (void (*)(char *, uint64_t))sub_10024238C);
    swift_bridgeObjectRelease();
    sub_10023888C(v12);
    sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
    uint64_t v27 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v28 = swift_allocObject();
    *(unsigned char *)(v28 + 16) = v38 & 1;
    uint64_t v29 = v35;
    *(void *)(v28 + 24) = a1;
    *(void *)(v28 + 32) = v29;
    aBlock[4] = sub_1002423D8;
    aBlock[5] = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003C410;
    aBlock[3] = &unk_10062E790;
    uint64_t v30 = _Block_copy(aBlock);
    uint64_t v31 = a1;
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1002419D4((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10005D034((uint64_t *)&unk_1006AE4B0);
    sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
    uint64_t v32 = v37;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v30);
    swift_release();

    (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v32);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v40);
  }
  return swift_release();
}

uint64_t sub_10023C09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v60 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v59 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10005D034(&qword_1006B6C68);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v51 - v15;
  uint64_t v17 = type metadata accessor for FMUnknownItemCellViewModel();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v61 = (uint64_t)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  unint64_t v22 = (char *)&v51 - v21;
  swift_beginAccess();
  uint64_t v23 = *(void *)(a3 + 16);
  if (!*(void *)(v23 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    return sub_100003F10((uint64_t)v16, &qword_1006B6C68);
  }
  swift_bridgeObjectRetain();
  uint64_t v58 = a1;
  unint64_t v24 = sub_1001AF8D4(a1);
  uint64_t v56 = v9;
  uint64_t v57 = a5;
  if (v25)
  {
    sub_10024190C(*(void *)(v23 + 56) + *(void *)(v18 + 72) * v24, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v26(v16, 0, 1, v17);
  }
  else
  {
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v26(v16, 1, 1, v17);
  }
  swift_bridgeObjectRelease();
  uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v27(v16, 1, v17) == 1) {
    return sub_100003F10((uint64_t)v16, &qword_1006B6C68);
  }
  sub_100242284((uint64_t)v16, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
  swift_beginAccess();
  uint64_t v29 = *(void *)(a4 + 16);
  if (!*(void *)(v29 + 16))
  {
    v26(v14, 1, 1, v17);
LABEL_14:
    sub_100241974((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
    return sub_100003F10((uint64_t)v14, &qword_1006B6C68);
  }
  swift_bridgeObjectRetain();
  unint64_t v30 = sub_1001AF8D4(v58);
  if (v31)
  {
    sub_10024190C(*(void *)(v29 + 56) + *(void *)(v18 + 72) * v30, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
    uint64_t v32 = 0;
  }
  else
  {
    uint64_t v32 = 1;
  }
  v26(v14, v32, 1, v17);
  swift_bridgeObjectRelease();
  if (v27(v14, 1, v17) == 1) {
    goto LABEL_14;
  }
  uint64_t v33 = v61;
  sub_100242284((uint64_t)v14, v61, (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
  if ((sub_100105E20((uint64_t)v22, v33) & 1) == 0)
  {
    if (qword_1006AE418 != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    sub_1000606BC(v34, (uint64_t)qword_1006D2790);
    uint64_t v35 = v59;
    uint64_t v36 = v60;
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
    uint64_t v38 = v56;
    v37(v59, v58, v56);
    uint64_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = swift_slowAlloc();
      os_log_t v53 = v39;
      uint64_t v42 = v38;
      unint64_t v43 = (uint8_t *)v41;
      uint64_t v54 = swift_slowAlloc();
      uint64_t v63 = v54;
      id v55 = v37;
      *(_DWORD *)unint64_t v43 = 136315138;
      int64_t v51 = v43 + 4;
      uint64_t v52 = v43;
      uint64_t v38 = v42;
      sub_1002419D4((unint64_t *)&qword_1006B6CC0, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v44 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v62 = sub_1000606F4(v44, v45, &v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v37 = v55;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v42);
      uint64_t v39 = v53;
      _os_log_impl((void *)&_mh_execute_header, v53, v40, "FMUnknownItemsListDataSource: Reconfiguring item: %s)", v52, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v38);
    }

    sub_10005D034(&qword_1006AF028);
    uint64_t v46 = *(void *)(type metadata accessor for FMUnknownItemsListDataSource.Entry(0) - 8);
    unint64_t v47 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_10055B970;
    unint64_t v49 = v48 + v47;
    v37((char *)v49, v58, v38);
    uint64_t v50 = sub_10005D034((uint64_t *)&unk_1006BB350);
    (*(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 0, 2, v50);
    sub_10005D034(&qword_1006B6CA0);
    NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v48);
    swift_bridgeObjectRelease();
  }
  sub_100241974(v33, (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
  return sub_100241974((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
}

uint64_t sub_10023C7FC(char a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034(&qword_1006B6CA0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_projectBox();
  if (qword_1006AE418 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_1000606BC(v9, (uint64_t)qword_1006D2790);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 67109120;
    int v32 = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMUnknownItemsListDataSource: Reloading data (animated: %{BOOL}d)", v12, 8u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v13 = *(void *)(*(void *)(a2 + qword_1006B69E0) + 24);
  swift_retain();
  uint64_t v14 = dispatch thunk of FMIPUnknownAccessoryDiscoveryController.discoveredAccessories.getter();
  uint64_t v15 = sub_1004AF2BC(v14);
  swift_bridgeObjectRelease();
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  sub_1000606BC(v9, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain_n();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    v31[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315138;
    type metadata accessor for FMIPUnknownItem();
    swift_bridgeObjectRetain();
    uint64_t v19 = Array.description.getter();
    unint64_t v21 = v20;
    swift_release();
    v30[1] = sub_1000606F4(v19, v21, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "FMDevicesProvider: update detectedUnknownItems %s", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  *(void *)(v13 + OBJC_IVAR____TtC6FindMy17FMDevicesProvider_unknownItemsDetectedNearYou) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  unint64_t v22 = *(void *)(v13 + 16);
  if (!(v22 >> 62))
  {
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v23) {
      goto LABEL_12;
    }
LABEL_22:
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v23 = result;
  if (!result) {
    goto LABEL_22;
  }
LABEL_12:
  if (v23 >= 1)
  {
    for (uint64_t i = 0; i != v23; ++i)
    {
      if ((v22 & 0xC000000000000001) != 0)
      {
        uint64_t v26 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v26 = *(void *)(v22 + 8 * i + 32);
        swift_retain();
      }
      uint64_t v27 = v26 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v28 = *(void *)(v27 + 8);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v28 + 96))(v13, v15, ObjectType, v28);
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

void *sub_10023CD2C(uint64_t a1)
{
  uint64_t v122 = sub_10005D034(&qword_1006B6C78);
  uint64_t v148 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v121 = (char *)&v100 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10005D034(&qword_1006B6C68);
  __chkstk_darwin(v3 - 8);
  uint64_t v120 = (uint64_t)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = type metadata accessor for UUID();
  unint64_t v147 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  uint64_t v118 = (char *)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMUnknownItemsListDataSource.Entry(0);
  uint64_t v108 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v125 = (uint64_t)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = type metadata accessor for FMUnknownItemCellViewModel();
  uint64_t v146 = *(void (**)(char *, uint64_t))(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v133 = (uint64_t)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = type metadata accessor for FMIPUnknownItemAlertState();
  uint64_t v145 = *(void *)(v132 - 8);
  uint64_t v9 = __chkstk_darwin(v132);
  id v107 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v142 = (char *)&v100 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v100 - v13;
  uint64_t v141 = type metadata accessor for FMIPUnknownItem();
  uint64_t v15 = *(void *)(v141 - 8);
  uint64_t v16 = __chkstk_darwin(v141);
  uint64_t v116 = (char *)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  unint64_t v135 = (char *)&v100 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  unint64_t v131 = (char *)&v100 - v21;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v100 - v22;
  uint64_t v105 = type metadata accessor for Date();
  uint64_t v104 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  char v25 = (char *)&v100 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FMUnknownItemsListDataSource.ViewModel();
  uint64_t v26 = (void *)swift_allocObject();
  v26[2] = sub_10014C430((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v115 = v26 + 2;
  v26[3] = sub_10014D070((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v27 = sub_10014C660((uint64_t)_swiftEmptyArrayStorage);
  os_log_type_t v124 = v26;
  v26[4] = v27;
  Swift::String v114 = v26 + 4;
  sub_10005D034(&qword_1006B6C80);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10055BD40;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 40) = _swiftEmptyArrayStorage;
  *(unsigned char *)(inited + 48) = 1;
  *(void *)(inited + 56) = _swiftEmptyArrayStorage;
  *(unsigned char *)(inited + 64) = 2;
  *(void *)(inited + 72) = _swiftEmptyArrayStorage;
  unint64_t v29 = sub_10014D070(inited);
  swift_setDeallocating();
  sub_10005D034(&qword_1006B6C88);
  swift_arrayDestroy();
  swift_beginAccess();
  v26[3] = v29;
  swift_bridgeObjectRelease();
  Date.init()();
  uint64_t v103 = v25;
  unint64_t v154 = v25;
  uint64_t v156 = a1;
  swift_bridgeObjectRetain();
  sub_1004D697C((uint64_t (*)(char *, unint64_t))sub_100242244, (uint64_t)v153);
  uint64_t v30 = *(void *)(v156 + 16);
  if (v30)
  {
    uint64_t v149 = 0;
    uint64_t v130 = *(void *)(v123 + qword_1006B69F0);
    int v140 = *(unsigned __int8 *)(v123 + qword_1006B6A10);
    int v32 = *(void (**)(void))(v15 + 16);
    uint64_t v31 = v15 + 16;
    unint64_t v152 = (void (*)(char *))v32;
    unint64_t v33 = (*(unsigned __int8 *)(v31 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 64);
    uint64_t v100 = v156;
    unint64_t v34 = v156 + v33;
    uint64_t v139 = (void (**)(char *, uint64_t))(v145 + 8);
    uint64_t v106 = (uint64_t (**)(char *, uint64_t))(v145 + 88);
    Swift::String v113 = (void (**)(uint64_t, void, uint64_t, uint64_t))((char *)v146 + 56);
    Swift::String v112 = (void (**)(char *, uint64_t))(v148 + 8);
    objc_super v111 = (void (**)(uint64_t, uint64_t))(v147 + 8);
    uint64_t v110 = qword_1006B69E8;
    uint64_t v151 = v31;
    uint64_t v128 = *(void *)(v31 + 56);
    unsigned int v134 = enum case for FMIPUnknownItemAlertState.triggered(_:);
    unsigned int v126 = enum case for FMIPUnknownItemAlertState.cleared(_:);
    unsigned int v109 = enum case for FMIPUnknownItemAlertState.ignored(_:);
    int v102 = enum case for FMIPUnknownItemAlertState.discovered(_:);
    int v101 = enum case for FMIPUnknownItemAlertState.unknown(_:);
    uint64_t v35 = v142;
    uint64_t v36 = v14;
    uint64_t v144 = v14;
    uint64_t v37 = v141;
    uint64_t v38 = v23;
    Swift::Int v150 = v23;
    uint64_t v39 = (void (**)(void, void, void))(v145 + 104);
    uint64_t v129 = (void (**)(void, void, void))(v145 + 104);
    os_log_t v138 = (void (**)(char *, uint64_t))(v31 - 8);
    while (1)
    {
      uint64_t v148 = v30;
      unint64_t v147 = v34;
      v152(v38);
      uint64_t v40 = dispatch thunk of FMIPUnknownAccessoryDiscoveryController.discoveredAccessories.getter();
      __chkstk_darwin(v40);
      *(&v100 - 2) = (uint64_t)v38;
      uint64_t v41 = v149;
      LODWORD(v145) = sub_100497250((uint64_t (*)(char *))sub_100242264, (char)(&v100 - 4), v40);
      uint64_t v149 = v41;
      swift_bridgeObjectRelease();
      uint64_t v42 = v36;
      FMIPUnknownItem.alertState.getter();
      uint64_t v43 = v37;
      uint64_t v44 = v132;
      unint64_t v136 = (void (*)(char *, void, uint64_t))*v39;
      v136(v35, v134, v132);
      uint64_t v45 = sub_1002419D4(&qword_1006B6C90, (void (*)(uint64_t))&type metadata accessor for FMIPUnknownItemAlertState);
      dispatch thunk of RawRepresentable.rawValue.getter();
      uint64_t v143 = v45;
      dispatch thunk of RawRepresentable.rawValue.getter();
      uint64_t v46 = v156;
      uint64_t v47 = v155;
      uint64_t v48 = v35;
      unint64_t v49 = *v139;
      (*v139)(v48, v44);
      v49(v42, v44);
      uint64_t v50 = v38;
      int64_t v51 = v131;
      ((void (*)(char *, char *, uint64_t))v152)(v131, v50, v43);
      uint64_t v137 = v49;
      if (v46 == v47) {
        break;
      }
      uint64_t v56 = v144;
      FMIPUnknownItem.alertState.getter();
      uint64_t v57 = v142;
      uint64_t v58 = v136;
      v136(v142, v126, v44);
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      uint64_t v127 = v156;
      uint64_t v59 = v155;
      v49(v57, v44);
      v49(v56, v44);
      uint64_t v60 = v51;
      uint64_t v61 = v141;
      uint64_t v146 = *v138;
      v146(v60, v141);
      uint64_t v54 = v135;
      ((void (*)(char *, char *, uint64_t))v152)(v135, v150, v61);
      if (v127 == v59)
      {
        uint64_t v35 = v57;
        uint64_t v37 = v61;
        uint64_t v38 = v150;
        uint64_t v52 = v129;
        os_log_t v53 = v146;
        goto LABEL_9;
      }
      FMIPUnknownItem.alertState.getter();
      uint64_t v63 = v129;
      v58(v57, v109, v44);
      uint64_t v52 = v63;
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      BOOL v62 = v156 == v155;
      v49(v57, v44);
      v49(v56, v44);
      os_log_t v53 = v146;
      v146(v135, v61);
      uint64_t v35 = v57;
      uint64_t v37 = v61;
      uint64_t v38 = v150;
LABEL_11:
      if (v140)
      {
        if (v145)
        {
          uint64_t v146 = v53;
          unsigned __int8 v64 = 1;
          goto LABEL_16;
        }
      }
      else if ((v145 | v62))
      {
        uint64_t v146 = v53;
        unsigned __int8 v64 = v145 & 1;
LABEL_16:
        uint64_t v65 = (uint64_t)v116;
        ((void (*)(char *, char *, uint64_t))v152)(v116, v38, v37);
        sub_1001051A0(v65, v133);
        Swift::String v66 = v137;
        if ((v140 & 1) == 0)
        {
          uint64_t v67 = v107;
          FMIPUnknownItem.alertState.getter();
          int v68 = (*v106)(v67, v44);
          if (v68 == v134 || v68 == v126)
          {
            id v74 = [self systemRedColor];
            uint64_t v70 = v133;

            *(void *)(v70 + 16) = v74;
            id v71 = [self configurationWithPointSize:9.0];
            NSString v72 = String._bridgeToObjectiveC()();
            id v73 = [self systemImageNamed:v72 withConfiguration:v71];
LABEL_22:
            id v75 = v73;

            *(void *)(v70 + 8) = v75;
          }
          else
          {
            if (v68 == v109)
            {
              id v69 = [self systemRedColor];
              uint64_t v70 = v133;

              *(void *)(v70 + 16) = v69;
              id v71 = [self configurationWithPointSize:9.0];
              NSString v72 = String._bridgeToObjectiveC()();
              id v73 = [self systemImageNamed:v72 withConfiguration:v71];
              goto LABEL_22;
            }
            if (v68 != v102 && v68 != v101) {
              v66(v107, v44);
            }
          }
        }
        uint64_t v76 = sub_100238838();
        uint64_t v78 = sub_1004C1930(&v155, v64);
        if (*v77)
        {
          id v79 = v77;
          uint64_t v80 = v125;
          FMIPUnknownItem.identifier.getter();
          uint64_t v81 = sub_10005D034((uint64_t *)&unk_1006BB350);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v80, 0, 2, v81);
          unint64_t v82 = *v79;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t *v79 = v82;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            unint64_t v82 = sub_10007D7C8(0, *(void *)(v82 + 16) + 1, 1, v82);
            unint64_t *v79 = v82;
          }
          unint64_t v85 = *(void *)(v82 + 16);
          unint64_t v84 = *(void *)(v82 + 24);
          if (v85 >= v84 >> 1)
          {
            unint64_t v82 = sub_10007D7C8(v84 > 1, v85 + 1, 1, v82);
            unint64_t *v79 = v82;
          }
          *(void *)(v82 + 16) = v85 + 1;
          sub_100242284(v125, v82+ ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80))+ *(void *)(v108 + 72) * v85, type metadata accessor for FMUnknownItemsListDataSource.Entry);
        }
        ((void (*)(uint64_t *, void))v78)(&v155, 0);
        ((void (*)(uint64_t *, void))v76)(&v156, 0);
        uint64_t v86 = (uint64_t)v118;
        uint64_t v87 = (uint64_t)v150;
        FMIPUnknownItem.identifier.getter();
        uint64_t v88 = v133;
        uint64_t v89 = v120;
        sub_10024190C(v133, v120, (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
        (*v113)(v89, 0, 1, v117);
        swift_beginAccess();
        sub_1002366BC(v89, v86);
        swift_endAccess();
        FMIPUnknownItem.identifier.getter();
        uint64_t v156 = sub_1001AB4F8(v87, 0);
        id v90 = [objc_allocWithZone((Class)UIImage) init];
        uint64_t v155 = (uint64_t)v90;
        sub_10005D034(&qword_1006B31A0);
        sub_1000450A0((unint64_t *)&unk_1006B4250, &qword_1006B31A0);
        id v91 = v121;
        Publisher.replaceError(with:)();
        swift_release();

        sub_1000450A0(&qword_1006B6C98, &qword_1006B6C78);
        uint64_t v92 = v122;
        uint64_t v93 = Publisher.eraseToAnyPublisher()();
        (*v112)(v91, v92);
        id v94 = v114;
        swift_beginAccess();
        char v95 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v155 = *v94;
        *id v94 = 0x8000000000000000;
        sub_1001B91F0(v93, v86, v95);
        *id v94 = v155;
        swift_bridgeObjectRelease();
        uint64_t v96 = v86;
        uint64_t v38 = (char *)v87;
        (*v111)(v96, v119);
        swift_endAccess();
        uint64_t v97 = v141;
        v146((char *)v87, v141);
        uint64_t v98 = v88;
        uint64_t v37 = v97;
        sub_100241974(v98, (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
        uint64_t v35 = v142;
        uint64_t v36 = v144;
        uint64_t v39 = v129;
        goto LABEL_4;
      }
      uint64_t v36 = v56;
      uint64_t v39 = v52;
      v53(v38, v37);
LABEL_4:
      unint64_t v34 = v147 + v128;
      uint64_t v30 = v148 - 1;
      if (v148 == 1) {
        goto LABEL_33;
      }
    }
    uint64_t v35 = v142;
    uint64_t v52 = v39;
    os_log_t v53 = *v138;
    uint64_t v37 = v141;
    (*v138)(v51, v141);
    uint64_t v54 = v135;
    id v55 = v150;
    ((void (*)(char *, char *, uint64_t))v152)(v135, v150, v37);
    uint64_t v38 = v55;
LABEL_9:
    v53(v54, v37);
    BOOL v62 = 1;
    uint64_t v56 = v144;
    goto LABEL_11;
  }
LABEL_33:
  swift_release();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v103, v105);
  return v124;
}

uint64_t sub_10023E0E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v88 = a3;
  uint64_t v89 = a2;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v79 = *(void *)(v4 - 8);
  uint64_t v80 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  unint64_t v84 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  Swift::String_optional v83 = (char *)&v69 - v7;
  uint64_t v8 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  unint64_t v82 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v69 - v11;
  uint64_t v13 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v76 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v69 - v16;
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v87 = *(void *)(v18 - 8);
  uint64_t v19 = __chkstk_darwin(v18);
  id v75 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v77 = (char *)&v69 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  unint64_t v85 = (char *)&v69 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  id v74 = (char *)&v69 - v26;
  __chkstk_darwin(v25);
  uint64_t v86 = (uint64_t)&v69 - v27;
  uint64_t v78 = a1;
  uint64_t v28 = FMIPUnknownItem.locations.getter();
  uint64_t v29 = *(void *)(v28 + 16);
  uint64_t v30 = type metadata accessor for FMIPLocation();
  uint64_t v31 = *(void *)(v30 - 8);
  if (v29)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v31 + 16))(v12, v28 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80)), v30);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v12, 0, 1, v30);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v12, 1, 1, v30);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for FMIPLocation();
  uint64_t v32 = v31;
  unint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  uint64_t v72 = v31 + 48;
  unsigned int v34 = v33(v12, 1, v30);
  uint64_t v35 = v87;
  uint64_t v36 = v88;
  id v73 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v33;
  if (v34 == 1)
  {
    sub_100003F10((uint64_t)v12, (uint64_t *)&unk_1006B2AE0);
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
    uint64_t v38 = v17;
    uint64_t v39 = 1;
  }
  else
  {
    uint64_t v40 = (void *)FMIPLocation.location.getter();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v30);
    id v41 = [v40 timestamp];

    uint64_t v42 = v74;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v17, v42, v18);
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
    uint64_t v38 = v17;
    uint64_t v39 = 0;
  }
  uint64_t v70 = v37;
  v37(v38, v39, 1, v18);
  uint64_t v43 = v85;
  id v71 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
  v71(v85, v36, v18);
  uint64_t v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  if (v81(v17, 1, v18) == 1)
  {
    unint64_t v85 = *(char **)(v35 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v85)(v86, v43, v18);
    sub_100003F10((uint64_t)v17, (uint64_t *)&unk_1006AF6E0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v43, v18);
    unint64_t v85 = *(char **)(v35 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v85)(v86, v17, v18);
  }
  uint64_t v44 = v73;
  uint64_t v45 = FMIPUnknownItem.locations.getter();
  if (*(void *)(v45 + 16))
  {
    uint64_t v46 = (uint64_t)v82;
    (*(void (**)(char *, unint64_t, uint64_t))(v32 + 16))(v82, v45 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80)), v30);
    uint64_t v47 = 0;
  }
  else
  {
    uint64_t v47 = 1;
    uint64_t v46 = (uint64_t)v82;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v46, v47, 1, v30);
  swift_bridgeObjectRelease();
  if (v44(v46, 1, v30) == 1)
  {
    sub_100003F10(v46, (uint64_t *)&unk_1006B2AE0);
    uint64_t v48 = 1;
    uint64_t v49 = v79;
    uint64_t v50 = v87;
    int64_t v51 = v76;
  }
  else
  {
    uint64_t v52 = (void *)FMIPLocation.location.getter();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v46, v30);
    id v53 = [v52 timestamp];

    uint64_t v54 = v74;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v50 = v87;
    int64_t v51 = v76;
    ((void (*)(char *, char *, uint64_t))v85)(v76, v54, v18);
    uint64_t v48 = 0;
    uint64_t v49 = v79;
  }
  id v55 = v75;
  uint64_t v56 = v71;
  v70(v51, v48, 1, v18);
  v56(v55, v88, v18);
  uint64_t v57 = v18;
  if (v81(v51, 1, v18) == 1)
  {
    uint64_t v58 = v50;
    uint64_t v59 = (uint64_t)v51;
    uint64_t v60 = (uint64_t)v77;
    ((void (*)(char *, char *, uint64_t))v85)(v77, v55, v57);
    sub_100003F10(v59, (uint64_t *)&unk_1006AF6E0);
  }
  else
  {
    uint64_t v58 = v50;
    uint64_t v61 = v51;
    (*(void (**)(char *, uint64_t))(v58 + 8))(v55, v57);
    uint64_t v60 = (uint64_t)v77;
    ((void (*)(char *, char *, uint64_t))v85)(v77, v61, v57);
  }
  uint64_t v62 = v80;
  uint64_t v63 = (uint64_t)v83;
  FMIPUnknownItem.identifier.getter();
  uint64_t v64 = (uint64_t)v84;
  FMIPUnknownItem.identifier.getter();
  uint64_t v65 = v86;
  LODWORD(v89) = sub_1004C1AC4(v86, v63, v60, v64);
  Swift::String v66 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
  v66(v64, v62);
  v66(v63, v62);
  uint64_t v67 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
  v67(v60, v57);
  v67(v65, v57);
  return v89 & 1;
}

uint64_t sub_10023E95C()
{
  uint64_t v0 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)v10 - v5;
  FMIPUnknownItem.identifier.getter();
  FMIPUnknownItem.identifier.getter();
  char v7 = static UUID.== infix(_:_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  return v7 & 1;
}

uint64_t sub_10023EA90()
{
  return sub_100241A24();
}

id sub_10023EA98()
{
  sub_100241A24();
  if (v0)
  {
    NSString v1 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v1 = 0;
  }

  return v1;
}

id sub_10023EAF0()
{
  return 0;
}

double sub_10023EAF8()
{
  *(void *)&double result = 1;
  return result;
}

uint64_t sub_10023EB04(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = a3;
  id v10 = a1;
  sub_100241B5C((uint64_t)v8);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10023EBFC@<X0>(uint64_t a1@<X8>)
{
  unint64_t v3 = IndexPath.section.getter();
  if (v3 >= 3) {
    goto LABEL_11;
  }
  unsigned __int8 v4 = v3;
  uint64_t v5 = *(void *)(v1 + qword_1006B6A00);
  unint64_t v6 = IndexPath.item.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v5 + 24);
  if (!*(void *)(v7 + 16))
  {
    __break(1u);
    goto LABEL_8;
  }
  unint64_t v8 = sub_1001AF868(v4);
  if ((v9 & 1) == 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if ((v6 & 0x8000000000000000) == 0)
  {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
    if (v6 < *(void *)(v10 + 16))
    {
      uint64_t v11 = *(void *)(type metadata accessor for FMUnknownItemsListDataSource.Entry(0) - 8);
      return sub_10024190C(v10+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v6, a1, type metadata accessor for FMUnknownItemsListDataSource.Entry);
    }
    goto LABEL_10;
  }
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
LABEL_11:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10023ED78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for FMUnknownItemsListDataSource.Entry(0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  char v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v22[-v10];
  sub_10023EBFC((uint64_t)&v22[-v10]);
  sub_10024190C((uint64_t)v11, (uint64_t)v9, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  uint64_t v12 = sub_10005D034((uint64_t *)&unk_1006BB350);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v9, 2, v12))
  {
    sub_100241974((uint64_t)v11, type metadata accessor for FMUnknownItemsListDataSource.Entry);
    uint64_t v13 = type metadata accessor for FMIPUnknownItem();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 1, 1, v13);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 32))(v5, v9, v2);
    swift_retain();
    uint64_t v15 = FMIPManager.unknownItems.getter();
    __chkstk_darwin(v15);
    *(void *)&v22[-16] = v5;
    uint64_t v17 = sub_100496E04((uint64_t (*)(void))sub_10016BDEC, (uint64_t)&v22[-32], v16);
    uint64_t v18 = *(void *)(v17 + 16);
    uint64_t v19 = type metadata accessor for FMIPUnknownItem();
    uint64_t v20 = *(void *)(v19 - 8);
    if (v18)
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(a1, v17+ ((*(unsigned __int8 *)(*(void *)(v19 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v19 - 8) + 80)), v19);
      uint64_t v21 = 0;
    }
    else
    {
      uint64_t v21 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(a1, v21, 1, v19);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
    return sub_100241974((uint64_t)v11, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  }
}

uint64_t sub_10023F0D8()
{
  uint64_t v1 = v0;
  if (qword_1006AE418 != -1) {
LABEL_38:
  }
    swift_once();
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000606BC(v2, (uint64_t)qword_1006D2790);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMUnknownItemsListDataSource: handleScanningFinished", v5, 2u);
    swift_slowDealloc();
  }

  *(unsigned char *)(v1 + qword_1006B6A28) = 0;
  sub_100239178();
  uint64_t v6 = *(void *)(v1 + qword_1006B6A00);
  uint64_t result = swift_beginAccess();
  int64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = *(void *)(v6 + 24);
  uint64_t v11 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  uint64_t v13 = v10 + 64;
  unint64_t v14 = v12 & *(void *)(v10 + 64);
  int64_t v15 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v8 << 6);
      goto LABEL_8;
    }
    int64_t v18 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (v18 >= v15) {
      goto LABEL_31;
    }
    unint64_t v19 = *(void *)(v13 + 8 * v18);
    ++v8;
    if (!v19)
    {
      int64_t v8 = v18 + 1;
      if (v18 + 1 >= v15) {
        goto LABEL_31;
      }
      unint64_t v19 = *(void *)(v13 + 8 * v8);
      if (!v19)
      {
        int64_t v8 = v18 + 2;
        if (v18 + 2 >= v15) {
          goto LABEL_31;
        }
        unint64_t v19 = *(void *)(v13 + 8 * v8);
        if (!v19)
        {
          int64_t v8 = v18 + 3;
          if (v18 + 3 >= v15) {
            goto LABEL_31;
          }
          unint64_t v19 = *(void *)(v13 + 8 * v8);
          if (!v19)
          {
            int64_t v8 = v18 + 4;
            if (v18 + 4 >= v15) {
              goto LABEL_31;
            }
            unint64_t v19 = *(void *)(v13 + 8 * v8);
            if (!v19) {
              break;
            }
          }
        }
      }
    }
LABEL_30:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
LABEL_8:
    if (*(unsigned char *)(*(void *)(v10 + 48) + v17) != 2)
    {
      uint64_t v21 = *(void *)(*(void *)(*(void *)(v10 + 56) + 8 * v17) + 16);
      BOOL v22 = __OFADD__(v9, v21);
      v9 += v21;
      if (v22) {
        goto LABEL_37;
      }
    }
  }
  int64_t v20 = v18 + 5;
  if (v20 >= v15)
  {
LABEL_31:
    if (v9)
    {
      swift_retain();
      uint64_t v23 = FMIPManager.unknownItems.getter();
      swift_release();
      sub_10023B61C(v23, 1);
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = *(void (**)(uint64_t))(v1 + qword_1006B6A30);
      if (v24)
      {
        uint64_t v25 = swift_retain();
        v24(v25);
        return sub_100036B90((uint64_t)v24);
      }
    }
    return result;
  }
  unint64_t v19 = *(void *)(v13 + 8 * v20);
  if (v19)
  {
    int64_t v8 = v20;
    goto LABEL_30;
  }
  while (1)
  {
    int64_t v8 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v8 >= v15) {
      goto LABEL_31;
    }
    unint64_t v19 = *(void *)(v13 + 8 * v8);
    ++v20;
    if (v19) {
      goto LABEL_30;
    }
  }
  __break(1u);
  return result;
}

id sub_10023F3B8(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v106 = a4;
  id v118 = a3;
  uint64_t v6 = sub_10005D034(&qword_1006B6C60);
  __chkstk_darwin(v6 - 8);
  uint64_t v110 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v108 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  id v107 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10005D034(&qword_1006B6C68);
  __chkstk_darwin(v9 - 8);
  uint64_t v104 = (uint64_t)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for FMUnknownItemCellViewModel();
  uint64_t v11 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  int v101 = (void **)((char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v116 = *(void *)(v13 - 8);
  uint64_t v117 = v13;
  __chkstk_darwin(v13);
  int64_t v15 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for UIListContentConfiguration();
  uint64_t v115 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v119 = (char *)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for FMUnknownItemsListDataSource.Entry(0);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v113 = (uint64_t)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v112 = (uint64_t)&v100 - v21;
  uint64_t v22 = type metadata accessor for IndexPath();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v100 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE418 != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  sub_1000606BC(v26, (uint64_t)qword_1006D2790);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  uint64_t v114 = a2;
  v27(v25, a2, v22);
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v105 = v15;
  uint64_t v111 = v16;
  uint64_t v102 = v11;
  if (v30)
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    v121[0] = swift_slowAlloc();
    uint64_t v100 = a1;
    *(_DWORD *)uint64_t v31 = 136315138;
    sub_1002419D4(&qword_1006B6C70, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v120 = sub_1000606F4(v32, v33, v121);
    a1 = v100;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "FMUnknownItemsListDataSource: dequeueConfiguredReusableCell(for: %s)", v31, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  }

  uint64_t v34 = v112;
  sub_10024190C((uint64_t)v118, v112, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  uint64_t v35 = sub_10005D034((uint64_t *)&unk_1006BB350);
  uint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48);
  if (!v36(v34, 2, v35)) {
    (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v34, v117);
  }
  NSString v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v39 = [a1 dequeueReusableCellWithIdentifier:v37 forIndexPath:isa];

  static UIListContentConfiguration.cell()();
  [objc_allocWithZone((Class)UIImage) init];
  UIListContentConfiguration.image.setter();
  uint64_t v40 = (void (*)(uint64_t *, void))UIListContentConfiguration.imageProperties.modify();
  UIListContentConfiguration.ImageProperties.maximumSize.setter();
  v40(v121, 0);
  id v41 = (void (*)(uint64_t *, void))UIListContentConfiguration.imageProperties.modify();
  UIListContentConfiguration.ImageProperties.reservedLayoutSize.setter();
  v41(v121, 0);
  UIListContentConfiguration.axesPreservingSuperviewLayoutMargins.setter();
  uint64_t v42 = v113;
  sub_10024190C((uint64_t)v118, v113, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  unsigned int v43 = v36(v42, 2, v35);
  if (!v43)
  {
    uint64_t v57 = (uint64_t)v105;
    (*(void (**)(char *, uint64_t, uint64_t))(v116 + 32))(v105, v42, v117);
    uint64_t v58 = v106;
    swift_beginAccess();
    uint64_t v59 = *(void *)(v58 + 16);
    uint64_t v44 = v115;
    if (*(void *)(v59 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v60 = sub_1001AF8D4(v57);
      uint64_t v61 = v104;
      uint64_t v62 = v102;
      if (v63)
      {
        sub_10024190C(*(void *)(v59 + 56) + *(void *)(v102 + 72) * v60, v104, (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
        uint64_t v64 = 0;
      }
      else
      {
        uint64_t v64 = 1;
      }
      uint64_t v47 = v119;
      id v74 = v101;
      uint64_t v75 = v103;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56))(v61, v64, 1, v103);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v61, 1, v75) != 1)
      {
        sub_100242284(v61, (uint64_t)v74, (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
        type metadata accessor for FMUnknownItemListCellView();
        uint64_t v76 = swift_dynamicCastClass();
        if (v76)
        {
          uint64_t v77 = (void *)v76;
          id v118 = v39;
          swift_bridgeObjectRetain();
          UIListContentConfiguration.text.setter();
          swift_bridgeObjectRetain();
          UIListContentConfiguration.secondaryText.setter();
          uint64_t v78 = *v74;
          if (!*v74) {
            [objc_allocWithZone((Class)UIImage) init];
          }
          id v79 = v78;
          UIListContentConfiguration.image.setter();
          uint64_t v80 = self;
          id v81 = [v80 preferredFontForTextStyle:UIFontTextStyleHeadline];
          sub_100042318(2);

          unint64_t v82 = (void (*)(uint64_t *, void))UIListContentConfiguration.textProperties.modify();
          UIListContentConfiguration.TextProperties.font.setter();
          v82(v121, 0);
          id v83 = [v80 preferredFontForTextStyle:UIFontTextStyleSubheadline];
          unint64_t v84 = (void (*)(uint64_t *, void))UIListContentConfiguration.secondaryTextProperties.modify();
          UIListContentConfiguration.TextProperties.font.setter();
          v84(v121, 0);
          id v85 = [self secondaryLabelColor];
          uint64_t v86 = (void (*)(uint64_t *, void))UIListContentConfiguration.secondaryTextProperties.modify();
          UIListContentConfiguration.TextProperties.color.setter();
          v86(v121, 0);
          [v77 setAccessoryType:1];
          [v77 setSelectionStyle:2];
          uint64_t v87 = v106;
          swift_beginAccess();
          uint64_t v88 = *(void *)(v87 + 32);
          if (*(void *)(v88 + 16))
          {
            swift_bridgeObjectRetain();
            uint64_t v89 = (uint64_t)v105;
            unint64_t v90 = sub_1001AF8D4((uint64_t)v105);
            uint64_t v46 = v111;
            uint64_t v91 = (uint64_t)v101;
            if (v92)
            {
              uint64_t v93 = *(void *)(*(void *)(v88 + 56) + 8 * v90);
              swift_retain();
              swift_bridgeObjectRelease();
              sub_1002378EC(v91, v93);

              swift_release();
            }
            else
            {

              swift_bridgeObjectRelease();
            }
            uint64_t v47 = v119;
          }
          else
          {

            uint64_t v46 = v111;
            uint64_t v47 = v119;
            uint64_t v89 = (uint64_t)v105;
            uint64_t v91 = (uint64_t)v101;
          }
          sub_100241974(v91, (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
          (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v89, v117);
        }
        else
        {
          sub_100241974((uint64_t)v74, (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
          (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v57, v117);
          uint64_t v46 = v111;
          uint64_t v47 = v119;
        }
        goto LABEL_34;
      }
    }
    else
    {
      uint64_t v61 = v104;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v102 + 56))(v104, 1, 1, v103);
      uint64_t v47 = v119;
    }
    (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v57, v117);
    sub_100003F10(v61, &qword_1006B6C68);
    uint64_t v46 = v111;
LABEL_34:
    UIListContentConfiguration.axesPreservingSuperviewLayoutMargins.setter();
    id v94 = v107;
    static UIBackgroundConfiguration.clear()();
    v121[3] = v46;
    v121[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
    char v95 = sub_100042804(v121);
    (*(void (**)(uint64_t *, char *, uint64_t))(v44 + 16))(v95, v47, v46);
    UITableViewCell.contentConfiguration.setter();
    uint64_t v96 = v108;
    uint64_t v97 = v110;
    uint64_t v98 = v109;
    (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v110, v94, v109);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v97, 0, 1, v98);
    UITableViewCell.backgroundConfiguration.setter();
    (*(void (**)(char *, uint64_t))(v96 + 8))(v94, v98);
    goto LABEL_35;
  }
  uint64_t v44 = v115;
  if (v43 != 1)
  {
    type metadata accessor for FMAccessoryDiscoverySearchingCell();
    uint64_t v65 = swift_dynamicCastClass();
    uint64_t v46 = v111;
    uint64_t v47 = v119;
    if (!v65) {
      goto LABEL_34;
    }
    uint64_t v66 = v65;
    uint64_t v67 = self;
    id v50 = v39;
    id v68 = [v67 linkColor];
    uint64_t v69 = (void (*)(uint64_t *, void))UIListContentConfiguration.textProperties.modify();
    UIListContentConfiguration.TextProperties.color.setter();
    v69(v121, 0);
    uint64_t v47 = v119;
    id v70 = [self mainBundle];
    v123._uint64_t countAndFlagsBits = 0xD000000000000018;
    v71._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
    v123._object = (void *)0x800000010057EF80;
    v71._object = (void *)0x800000010058D5E0;
    v72.value._object = (void *)0x800000010057EF60;
    v72.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v73._uint64_t countAndFlagsBits = 0;
    v73._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v71, v72, (NSBundle)v70, v73, v123);

    UIListContentConfiguration.text.setter();
    [*(id *)(v66 + OBJC_IVAR____TtC6FindMy33FMAccessoryDiscoverySearchingCell_activityIndicator) setHidden:1];
    goto LABEL_18;
  }
  type metadata accessor for FMAccessoryDiscoverySearchingCell();
  uint64_t v45 = swift_dynamicCastClass();
  uint64_t v46 = v111;
  uint64_t v47 = v119;
  if (v45)
  {
    uint64_t v48 = (char *)v45;
    uint64_t v49 = self;
    id v50 = v39;
    id v51 = [v49 mainBundle];
    v122._uint64_t countAndFlagsBits = 0xD000000000000018;
    v52._uint64_t countAndFlagsBits = 0xD000000000000027;
    v122._object = (void *)0x800000010057EF80;
    v52._object = (void *)0x800000010058D610;
    v53.value._object = (void *)0x800000010057EF60;
    v53.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v54._uint64_t countAndFlagsBits = 0;
    v54._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v52, v53, (NSBundle)v51, v54, v122);

    UIListContentConfiguration.text.setter();
    id v55 = [self secondaryLabelColor];
    uint64_t v56 = (void (*)(uint64_t *, void))UIListContentConfiguration.textProperties.modify();
    UIListContentConfiguration.TextProperties.color.setter();
    v56(v121, 0);
    [*(id *)&v48[OBJC_IVAR____TtC6FindMy33FMAccessoryDiscoverySearchingCell_activityIndicator] setHidden:0];
    [v48 setSelectionStyle:0];
LABEL_18:

    goto LABEL_34;
  }
LABEL_35:
  (*(void (**)(char *, uint64_t))(v44 + 8))(v47, v46);
  return v39;
}

void sub_1002403D0()
{
}

uint64_t sub_100240400()
{
  return type metadata accessor for FMUnknownItemsListDataSource(0);
}

uint64_t type metadata accessor for FMUnknownItemsListDataSource.ViewModel()
{
  return self;
}

uint64_t *sub_10024042C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_10005D034((uint64_t *)&unk_1006BB350);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_100240598(uint64_t a1)
{
  uint64_t v2 = sub_10005D034((uint64_t *)&unk_1006BB350);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for UUID();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *sub_10024064C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10005D034((uint64_t *)&unk_1006BB350);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_10024077C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10005D034((uint64_t *)&unk_1006BB350);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = type metadata accessor for UUID();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_100003F10((uint64_t)a1, (uint64_t *)&unk_1006BB350);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *sub_100240928(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10005D034((uint64_t *)&unk_1006BB350);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_100240A58(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10005D034((uint64_t *)&unk_1006BB350);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = type metadata accessor for UUID();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_100003F10((uint64_t)a1, (uint64_t *)&unk_1006BB350);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_100240C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100240C18);
}

uint64_t sub_100240C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006BB350);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_100240C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100240C9C);
}

uint64_t sub_100240C9C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_10005D034((uint64_t *)&unk_1006BB350);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_100240D24(uint64_t a1)
{
  uint64_t v2 = sub_10005D034((uint64_t *)&unk_1006BB350);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 2, v2);
}

uint64_t sub_100240D90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006BB350);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 2, v4);
}

uint64_t type metadata accessor for FMUnknownItemsListDataSource.Entry(uint64_t a1)
{
  return sub_1000201D0(a1, (uint64_t *)&unk_1006B6C00);
}

uint64_t sub_100240E24()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMUnknownItemsListDataSource.Section(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100240F68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMUnknownItemsListDataSource.Section()
{
  return &type metadata for FMUnknownItemsListDataSource.Section;
}

uint64_t sub_100240FA0()
{
  return sub_1000450A0(&qword_1006B6C10, &qword_1006B6C18);
}

unint64_t sub_100240FE0()
{
  unint64_t result = qword_1006B6C20;
  if (!qword_1006B6C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B6C20);
  }
  return result;
}

uint64_t sub_100241034()
{
  return sub_1002419D4(&qword_1006B6C28, (void (*)(uint64_t))type metadata accessor for FMUnknownItemsListDataSource.Entry);
}

uint64_t sub_10024107C(uint64_t a1, uint64_t a2)
{
  return sub_100241758(a2);
}

uint64_t sub_100241084(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FMUnknownItemsListDataSource.Entry(0);
  __chkstk_darwin(v8 - 8);
  int v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10005D034((uint64_t *)&unk_1006B6C40);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_10024190C(a1, (uint64_t)v14, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  sub_10024190C(a2, v15, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  uint64_t v16 = sub_10005D034((uint64_t *)&unk_1006BB350);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  int v18 = v17(v14, 2, v16);
  if (!v18)
  {
    sub_10024190C((uint64_t)v14, (uint64_t)v10, type metadata accessor for FMUnknownItemsListDataSource.Entry);
    if (!v17((char *)v15, 2, v16))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      char v19 = static UUID.== infix(_:_:)();
      uint64_t v20 = *(void (**)(char *, uint64_t))(v5 + 8);
      v20(v7, v4);
      v20(v10, v4);
      sub_100241974((uint64_t)v14, type metadata accessor for FMUnknownItemsListDataSource.Entry);
      return v19 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_9;
  }
  if (v18 == 1)
  {
    if (v17((char *)v15, 2, v16) != 1) {
      goto LABEL_9;
    }
  }
  else if (v17((char *)v15, 2, v16) != 2)
  {
LABEL_9:
    sub_100003F10((uint64_t)v14, (uint64_t *)&unk_1006B6C40);
    char v19 = 0;
    return v19 & 1;
  }
  sub_100241974((uint64_t)v14, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  char v19 = 1;
  return v19 & 1;
}

uint64_t sub_1002413B0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v6 = sub_1002380A4(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6)
  {
    swift_beginAccess();
    uint64_t v7 = *(void *)(a1 + 24);
    swift_beginAccess();
    uint64_t v8 = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v9 = sub_100238688(v7, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_1002414BC(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v4 = sub_10005D034(&qword_1006B6C38);
  __chkstk_darwin(v4);
  char v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  int64_t v25 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_5;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v20 >= v25) {
      return swift_release();
    }
    unint64_t v21 = *(void *)(v24 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v25) {
        return swift_release();
      }
      unint64_t v21 = *(void *)(v24 + 8 * v12);
      if (!v21)
      {
        int64_t v12 = v20 + 2;
        if (v20 + 2 >= v25) {
          return swift_release();
        }
        unint64_t v21 = *(void *)(v24 + 8 * v12);
        if (!v21)
        {
          int64_t v12 = v20 + 3;
          if (v20 + 3 >= v25) {
            return swift_release();
          }
          unint64_t v21 = *(void *)(v24 + 8 * v12);
          if (!v21) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v10 = (v21 - 1) & v21;
    unint64_t v14 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_5:
    uint64_t v15 = *(void *)(a1 + 48);
    uint64_t v16 = type metadata accessor for UUID();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v6, v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14, v16);
    uint64_t v17 = *(void *)(a1 + 56);
    uint64_t v18 = v17 + *(void *)(*(void *)(type metadata accessor for FMUnknownItemCellViewModel() - 8) + 72) * v14;
    uint64_t v19 = (uint64_t)&v6[*(int *)(v4 + 48)];
    sub_10024190C(v18, v19, (uint64_t (*)(void))type metadata accessor for FMUnknownItemCellViewModel);
    a2(v6, v19);
    uint64_t result = sub_100003F10((uint64_t)v6, &qword_1006B6C38);
  }
  int64_t v22 = v20 + 4;
  if (v22 >= v25) {
    return swift_release();
  }
  unint64_t v21 = *(void *)(v24 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v25) {
      return swift_release();
    }
    unint64_t v21 = *(void *)(v24 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_100241758(uint64_t a1)
{
  if (qword_1006AE418 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000606BC(v2, (uint64_t)qword_1006D2790);
  swift_bridgeObjectRetain();
  int v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134217984;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMUnknownItemsListDataSource: didUpdate %ld items", v5, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  return sub_10023B61C(a1, 1);
}

uint64_t sub_1002418A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034(&qword_1006B6C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10024190C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100241974(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1002419D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_100241A1C(void *a1, uint64_t a2, void *a3)
{
  return sub_10023F3B8(a1, a2, a3, v3);
}

uint64_t sub_100241A24()
{
  uint64_t v0 = type metadata accessor for IndexPath();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  IndexPath.init(row:section:)();
  unint64_t v4 = IndexPath.section.getter();
  if (v4 > 2)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    char v5 = v4;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return sub_1002389DC(v5);
  }
  return result;
}

uint64_t sub_100241B5C(uint64_t a1)
{
  uint64_t v49 = type metadata accessor for IndexPath();
  uint64_t v47 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v48 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FMSelectedSection();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v44 - v8;
  uint64_t v10 = sub_10005D034((uint64_t *)&unk_1006AEE50);
  __chkstk_darwin(v10 - 8);
  int64_t v12 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMIPUnknownItem();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v50 = v13;
  uint64_t v51 = v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for FMUnknownItemsListDataSource.Entry(0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  int64_t v20 = (char *)v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  int64_t v22 = (char *)v44 - v21;
  uint64_t v23 = a1;
  sub_10023EBFC((uint64_t)v44 - v21);
  Swift::String v52 = v22;
  sub_10024190C((uint64_t)v22, (uint64_t)v20, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  uint64_t v24 = sub_10005D034((uint64_t *)&unk_1006BB350);
  int v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v20, 2, v24);
  if (v25)
  {
    if (v25 != 1) {
      sub_10023A1FC();
    }
    return sub_100241974((uint64_t)v52, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  }
  else
  {
    v44[1] = v4;
    uint64_t v45 = v7;
    uint64_t v28 = v48;
    uint64_t v27 = v49;
    uint64_t v46 = v20;
    sub_10023ED78((uint64_t)v12);
    uint64_t v29 = v50;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v12, 1, v50) == 1)
    {
      sub_100003F10((uint64_t)v12, (uint64_t *)&unk_1006AEE50);
      if (qword_1006AE190 != -1) {
        swift_once();
      }
      uint64_t v30 = type metadata accessor for Logger();
      sub_1000606BC(v30, (uint64_t)qword_1006D1E98);
      uint64_t v31 = v47;
      (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v28, v23, v27);
      uint64_t v32 = Logger.logObject.getter();
      os_log_type_t v33 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        v54[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v34 = 136315138;
        sub_1002419D4(&qword_1006B6C70, (void (*)(uint64_t))&type metadata accessor for IndexPath);
        uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v53 = sub_1000606F4(v35, v36, v54);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v27);
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "FMItemsListDataSource: cannnot select device at indexPath: %s", v34, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v27);
      }
      sub_100241974((uint64_t)v52, type metadata accessor for FMUnknownItemsListDataSource.Entry);
      uint64_t v42 = v46;
      uint64_t v43 = type metadata accessor for UUID();
      return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v43 - 8) + 8))(v42, v43);
    }
    else
    {
      uint64_t v37 = v51;
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v16, v12, v29);
      uint64_t v38 = *(void *)(*(void *)(v1 + qword_1006B69E0) + 56);
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v9, v16, v29);
      swift_storeEnumTagMultiPayload();
      uint64_t v39 = v38 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
      swift_beginAccess();
      uint64_t v40 = (uint64_t)v45;
      sub_10024190C(v39, (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
      swift_beginAccess();
      swift_retain();
      sub_100009A88((uint64_t)v9, v39);
      swift_endAccess();
      sub_100053CA0(v40);
      sub_100241974((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
      sub_100241974(v40, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
      swift_release();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v29);
      sub_100241974((uint64_t)v52, type metadata accessor for FMUnknownItemsListDataSource.Entry);
      uint64_t v41 = type metadata accessor for UUID();
      return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v41 - 8) + 8))(v46, v41);
    }
  }
}

uint64_t sub_10024223C()
{
  return sub_100239C54(v0);
}

uint64_t sub_100242244(uint64_t a1, uint64_t a2)
{
  return sub_10023E0E0(a1, a2, *(void *)(v2 + 16)) & 1;
}

uint64_t sub_100242264()
{
  return sub_10023E95C() & 1;
}

uint64_t sub_100242284(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002422EC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_10024232C()
{
  return sub_10023BA44(*(char **)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

unint64_t sub_100242338()
{
  unint64_t result = qword_1006B6CA8;
  if (!qword_1006B6CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B6CA8);
  }
  return result;
}

uint64_t sub_10024238C(uint64_t a1, uint64_t a2)
{
  return sub_10023C09C(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_100242398()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002423D8()
{
  return sub_10023C7FC(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1002423E4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10024241C(uint64_t a1)
{
  return sub_10023B30C(a1, v1, (uint64_t)sub_1002424CC, (uint64_t)&unk_10062E830);
}

uint64_t sub_100242454(uint64_t a1)
{
  return sub_10023B30C(a1, v1, (uint64_t)sub_1002424CC, (uint64_t)&unk_10062E808);
}

uint64_t sub_10024248C(uint64_t a1)
{
  return sub_10023B30C(a1, v1, (uint64_t)sub_1002424C4, (uint64_t)&unk_10062E7E0);
}

void sub_1002424C4()
{
}

uint64_t sub_1002424CC()
{
  return sub_10023B270();
}

uint64_t sub_1002424E8()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100242520()
{
  *(unsigned char *)(*(void *)(v0 + 16) + qword_1006B6A28) = 0;
  sub_100239178();
}

uint64_t sub_100242550()
{
  return sub_10023A7B8(*(void *)(v0 + 16));
}

uint64_t sub_100242558()
{
  uint64_t v1 = (int *)(type metadata accessor for FMUnknownItemCellViewModel() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + v1[13];
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v6 + v1[14];
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  return _swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_1002426C8(void **a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FMUnknownItemCellViewModel() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100237C68(a1, v4);
}

uint64_t destroy for FMUTWelcomeView(void *a1)
{
  uint64_t result = swift_release();
  if (a1[1]) {
    uint64_t result = swift_release();
  }
  if (a1[3]) {
    uint64_t result = swift_release();
  }
  if (a1[5])
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for FMUTWelcomeView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  unint64_t v5 = (_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 8);
  swift_retain();
  if (v4)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *v5;
  }
  uint64_t v7 = *(void *)(a2 + 24);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  uint64_t v9 = *(void *)(a2 + 40);
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

void *assignWithCopy for FMUTWelcomeView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = a2[1];
  if (a1[1])
  {
    if (v4)
    {
      uint64_t v5 = a2[2];
      a1[1] = v4;
      a1[2] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[2];
    a1[1] = v4;
    a1[2] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
LABEL_8:
  uint64_t v7 = a2[3];
  if (a1[3])
  {
    if (v7)
    {
      uint64_t v8 = a2[4];
      a1[3] = v7;
      a1[4] = v8;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[4];
    a1[3] = v7;
    a1[4] = v9;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
LABEL_15:
  uint64_t v10 = a2[5];
  if (!a1[5])
  {
    if (v10)
    {
      uint64_t v12 = a2[6];
      a1[5] = v10;
      a1[6] = v12;
      swift_retain();
      goto LABEL_22;
    }
LABEL_21:
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    goto LABEL_22;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_21;
  }
  uint64_t v11 = a2[6];
  a1[5] = v10;
  a1[6] = v11;
  swift_retain();
  swift_release();
LABEL_22:
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  return a1;
}

__n128 initializeWithTake for FMUTWelcomeView(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for FMUTWelcomeView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v4)
    {
      uint64_t v5 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v4;
      *(void *)(a1 + 16) = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
LABEL_8:
  uint64_t v7 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24))
  {
    if (v7)
    {
      uint64_t v8 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = v8;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v9;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
LABEL_15:
  uint64_t v10 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40))
  {
    if (v10)
    {
      uint64_t v12 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v10;
      *(void *)(a1 + 48) = v12;
      goto LABEL_22;
    }
LABEL_21:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    goto LABEL_22;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_21;
  }
  uint64_t v11 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  swift_release();
LABEL_22:
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMUTWelcomeView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMUTWelcomeView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMUTWelcomeView()
{
  return &type metadata for FMUTWelcomeView;
}

uint64_t sub_100242C80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100242C9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v2 = sub_10005D034(&qword_1006B6D20);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_10005D034(&qword_1006B6D28) - 8;
  uint64_t v5 = __chkstk_darwin(v33);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v32 = (uint64_t)&v29 - v8;
  uint64_t v31 = sub_10005D034(&qword_1006B6D30);
  uint64_t v9 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10005D034(&qword_1006B6D38);
  uint64_t v13 = v12 - 8;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v30 = (uint64_t)&v29 - v17;
  static Axis.Set.vertical.getter();
  uint64_t v35 = v1;
  sub_10005D034(&qword_1006B6D40);
  sub_1000450A0(&qword_1006B6D48, &qword_1006B6D40);
  ScrollView.init(_:showsIndicators:content:)();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v18 = v31;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v16, v11, v31);
  uint64_t v19 = &v16[*(int *)(v13 + 44)];
  long long v20 = v37;
  *(_OWORD *)uint64_t v19 = v36;
  *((_OWORD *)v19 + 1) = v20;
  *((_OWORD *)v19 + 2) = v38;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  uint64_t v21 = v30;
  sub_100067E48((uint64_t)v16, v30, &qword_1006B6D38);
  *(void *)uint64_t v4 = static HorizontalAlignment.center.getter();
  *((void *)v4 + 1) = 0;
  v4[16] = 1;
  uint64_t v22 = sub_10005D034(&qword_1006B6D50);
  sub_100244984(v1, (uint64_t)&v4[*(int *)(v22 + 44)]);
  static Alignment.bottom.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_100006AB0((uint64_t)v4, (uint64_t)v7, &qword_1006B6D20);
  uint64_t v23 = &v7[*(int *)(v33 + 44)];
  long long v24 = v40;
  *(_OWORD *)uint64_t v23 = v39;
  *((_OWORD *)v23 + 1) = v24;
  *((_OWORD *)v23 + 2) = v41;
  sub_100003F10((uint64_t)v4, &qword_1006B6D20);
  uint64_t v25 = v32;
  sub_100067E48((uint64_t)v7, v32, &qword_1006B6D28);
  sub_100006AB0(v21, (uint64_t)v16, &qword_1006B6D38);
  sub_100006AB0(v25, (uint64_t)v7, &qword_1006B6D28);
  uint64_t v26 = v34;
  sub_100006AB0((uint64_t)v16, v34, &qword_1006B6D38);
  uint64_t v27 = sub_10005D034(&qword_1006B6D58);
  sub_100006AB0((uint64_t)v7, v26 + *(int *)(v27 + 48), &qword_1006B6D28);
  sub_100003F10(v25, &qword_1006B6D28);
  sub_100003F10(v21, &qword_1006B6D38);
  sub_100003F10((uint64_t)v7, &qword_1006B6D28);
  return sub_100003F10((uint64_t)v16, &qword_1006B6D38);
}

uint64_t sub_1002430CC@<X0>(double *a1@<X0>, void *a2@<X8>)
{
  Swift::String v71 = a2;
  uint64_t v3 = sub_10005D034(&qword_1006B6DB0);
  __chkstk_darwin(v3 - 8);
  uint64_t v66 = (uint64_t)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_10005D034(&qword_1006B6DB8) - 8;
  __chkstk_darwin(v67);
  uint64_t v65 = (uint64_t)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_10005D034(&qword_1006B6DC0) - 8;
  __chkstk_darwin(v70);
  uint64_t v7 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_10005D034(&qword_1006B6DC8) - 8;
  uint64_t v8 = __chkstk_darwin(v69);
  uint64_t v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v68 = (uint64_t)&v64 - v11;
  uint64_t v12 = sub_10005D034(&qword_1006B6DD0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10005D034(&qword_1006B6DD8);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10005D034(&qword_1006B6DE0);
  uint64_t v20 = v19 - 8;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v64 = (uint64_t)&v64 - v24;
  *(void *)uint64_t v14 = static HorizontalAlignment.center.getter();
  *((void *)v14 + 1) = 0;
  v14[16] = 1;
  uint64_t v25 = sub_10005D034(&qword_1006B6DE8);
  sub_100243644(a1, (uint64_t)&v14[*(int *)(v25 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  sub_100006AB0((uint64_t)v14, (uint64_t)v18, &qword_1006B6DD0);
  uint64_t v27 = &v18[*(int *)(v16 + 44)];
  *(void *)uint64_t v27 = KeyPath;
  v27[8] = 1;
  sub_100003F10((uint64_t)v14, &qword_1006B6DD0);
  LOBYTE(KeyPath) = static Edge.Set.horizontal.getter();
  uint64_t v28 = (uint64_t)a1;
  EdgeInsets.init(_all:)();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  sub_100006AB0((uint64_t)v18, (uint64_t)v23, &qword_1006B6DD8);
  long long v37 = &v23[*(int *)(v20 + 44)];
  *long long v37 = KeyPath;
  *((void *)v37 + 1) = v30;
  *((void *)v37 + 2) = v32;
  *((void *)v37 + 3) = v34;
  *((void *)v37 + 4) = v36;
  v37[40] = 0;
  sub_100003F10((uint64_t)v18, &qword_1006B6DD8);
  uint64_t v38 = v64;
  sub_100067E48((uint64_t)v23, v64, &qword_1006B6DE0);
  uint64_t v39 = v66;
  sub_100243F0C(v28, v66);
  LOBYTE(KeyPath) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v48 = v65;
  sub_100006AB0(v39, v65, &qword_1006B6DB0);
  uint64_t v49 = v48 + *(int *)(v67 + 44);
  *(unsigned char *)uint64_t v49 = KeyPath;
  *(void *)(v49 + 8) = v41;
  *(void *)(v49 + 16) = v43;
  *(void *)(v49 + 24) = v45;
  *(void *)(v49 + 32) = v47;
  *(unsigned char *)(v49 + 40) = 0;
  sub_100003F10(v39, &qword_1006B6DB0);
  LOBYTE(KeyPath) = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  sub_100006AB0(v48, (uint64_t)v7, &qword_1006B6DB8);
  uint64_t v58 = &v7[*(int *)(v70 + 44)];
  char *v58 = KeyPath;
  *((void *)v58 + 1) = v51;
  *((void *)v58 + 2) = v53;
  *((void *)v58 + 3) = v55;
  *((void *)v58 + 4) = v57;
  v58[40] = 0;
  sub_100003F10(v48, &qword_1006B6DB8);
  sub_100006AB0((uint64_t)v7, (uint64_t)v10, &qword_1006B6DC0);
  *(_WORD *)&v10[*(int *)(v69 + 44)] = 256;
  sub_100003F10((uint64_t)v7, &qword_1006B6DC0);
  uint64_t v59 = v68;
  sub_100067E48((uint64_t)v10, v68, &qword_1006B6DC8);
  sub_100006AB0(v38, (uint64_t)v23, &qword_1006B6DE0);
  sub_100006AB0(v59, (uint64_t)v10, &qword_1006B6DC8);
  unint64_t v60 = v71;
  *Swift::String v71 = 0;
  *((unsigned char *)v60 + 8) = 1;
  uint64_t v61 = v60;
  uint64_t v62 = sub_10005D034(&qword_1006B6DF0);
  sub_100006AB0((uint64_t)v23, (uint64_t)v61 + *(int *)(v62 + 48), &qword_1006B6DE0);
  sub_100006AB0((uint64_t)v10, (uint64_t)v61 + *(int *)(v62 + 64), &qword_1006B6DC8);
  sub_100003F10(v59, &qword_1006B6DC8);
  sub_100003F10(v38, &qword_1006B6DE0);
  sub_100003F10((uint64_t)v10, &qword_1006B6DC8);
  return sub_100003F10((uint64_t)v23, &qword_1006B6DE0);
}

uint64_t sub_100243644@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v3 = sub_10005D034(&qword_1006B6E20);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v46 = (uint64_t)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v41 - v6);
  *uint64_t v7 = static Alignment.center.getter();
  v7[1] = v8;
  uint64_t v44 = v7;
  uint64_t v9 = sub_10005D034(&qword_1006B6E28);
  sub_100243900(a1, (uint64_t)v7 + *(int *)(v9 + 44));
  uint64_t v47 = sub_100189EA4();
  uint64_t v48 = v10;
  unint64_t v43 = sub_100059EB8();
  uint64_t v11 = Text.init<A>(_:)();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  static Font.title.getter();
  uint64_t v16 = Text.font(_:)();
  uint64_t v18 = v17;
  char v20 = v19;
  swift_release();
  sub_10019C4F0(v11, v13, v15);
  swift_bridgeObjectRelease();
  uint64_t v21 = Text.bold()();
  uint64_t v23 = v22;
  uint64_t v42 = v24;
  LOBYTE(v11) = v25 & 1;
  sub_10019C4F0(v16, v18, v20 & 1);
  swift_bridgeObjectRelease();
  uint64_t v47 = sub_10018A04C();
  uint64_t v48 = v26;
  uint64_t v27 = Text.init<A>(_:)();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  LOBYTE(v13) = v32 & 1;
  uint64_t v33 = (uint64_t)v44;
  uint64_t v34 = v46;
  sub_100006AB0((uint64_t)v44, v46, &qword_1006B6E20);
  LOBYTE(v47) = v11;
  uint64_t v35 = v34;
  uint64_t v36 = v45;
  sub_100006AB0(v35, v45, &qword_1006B6E20);
  uint64_t v37 = sub_10005D034(&qword_1006B6E30);
  uint64_t v38 = v36 + *(int *)(v37 + 48);
  *(void *)uint64_t v38 = v21;
  *(void *)(v38 + 8) = v23;
  *(unsigned char *)(v38 + 16) = v11;
  *(void *)(v38 + 24) = v42;
  uint64_t v39 = v36 + *(int *)(v37 + 64);
  *(void *)uint64_t v39 = v27;
  *(void *)(v39 + 8) = v29;
  *(unsigned char *)(v39 + 16) = v13;
  *(void *)(v39 + 24) = v31;
  sub_10019C5B8(v21, v23, v11);
  swift_bridgeObjectRetain();
  sub_10019C5B8(v27, v29, v13);
  swift_bridgeObjectRetain();
  sub_100003F10(v33, &qword_1006B6E20);
  sub_10019C4F0(v27, v29, v13);
  swift_bridgeObjectRelease();
  sub_10019C4F0(v21, v23, v47);
  swift_bridgeObjectRelease();
  return sub_100003F10(v46, &qword_1006B6E20);
}

uint64_t sub_100243900@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v3 = type metadata accessor for Image.ResizingMode();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_10005D034(&qword_1006B4870);
  __chkstk_darwin(v59);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v57 = sub_10005D034(&qword_1006B6E10);
  __chkstk_darwin(v57);
  uint64_t v13 = (uint64_t *)((char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_10005D034(&qword_1006B6E38);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v58 = (uint64_t)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10005D034(&qword_1006B6E40);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v61 = (uint64_t)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v63 = (uint64_t)&v55 - v20;
  double v60 = *a1;
  if (*(unsigned char *)(*(void *)&v60 + 25))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v63, 1, 1, v14);
  }
  else
  {
    id v21 = [self whiteColor];
    uint64_t v22 = Color.init(uiColor:)();
    uint64_t v56 = v15;
    uint64_t v23 = v22;
    double v24 = a1[7];
    double v25 = a1[8];
    double v26 = a1[9];
    uint64_t v27 = *((void *)a1 + 12);
    uint64_t v28 = (char *)v11 + *(int *)(v9 + 20);
    uint64_t v55 = v14;
    uint64_t v29 = v6;
    uint64_t v30 = v3;
    uint64_t v31 = v4;
    uint64_t v32 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v33 = type metadata accessor for RoundedCornerStyle();
    uint64_t v34 = v32;
    uint64_t v4 = v31;
    uint64_t v3 = v30;
    uint64_t v6 = v29;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(v28, v34, v33);
    *uint64_t v11 = v27;
    v11[1] = v27;
    sub_1002453C8((uint64_t)v11, (uint64_t)v8);
    *(_WORD *)&v8[*(int *)(v59 + 36)] = 256;
    sub_100006AB0((uint64_t)v8, (uint64_t)v13 + *(int *)(v57 + 36), &qword_1006B4870);
    *uint64_t v13 = v23;
    swift_retain();
    sub_100003F10((uint64_t)v8, &qword_1006B4870);
    sub_10024542C((uint64_t)v11);
    swift_release();
    double v35 = v25 * 0.5;
    char v36 = static Edge.Set.all.getter();
    uint64_t v37 = v58;
    sub_100006AB0((uint64_t)v13, v58, &qword_1006B6E10);
    uint64_t v38 = v55;
    uint64_t v39 = v37 + *(int *)(v55 + 36);
    *(unsigned char *)uint64_t v39 = v36;
    *(double *)(v39 + 8) = v24 - v26;
    *(double *)(v39 + 16) = v35;
    *(void *)(v39 + 24) = 0;
    *(double *)(v39 + 32) = v35;
    *(unsigned char *)(v39 + 40) = 0;
    sub_100003F10((uint64_t)v13, &qword_1006B6E10);
    uint64_t v40 = v63;
    sub_100067E48(v37, v63, &qword_1006B6E38);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v40, 0, 1, v38);
  }
  id v41 = *(id *)(*(void *)&v60 + 16);
  Image.init(uiImage:)();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Image.ResizingMode.stretch(_:), v3);
  uint64_t v42 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  double v43 = a1[9];
  uint64_t v59 = *((void *)a1 + 7);
  double v60 = v43;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v44 = v64;
  char v45 = v65;
  uint64_t v46 = v66;
  char v47 = v67;
  uint64_t v57 = v69;
  uint64_t v58 = v68;
  char v48 = static Edge.Set.all.getter();
  uint64_t v49 = v63;
  uint64_t v50 = v61;
  sub_100006AB0(v63, v61, &qword_1006B6E40);
  uint64_t v51 = v62;
  sub_100006AB0(v50, v62, &qword_1006B6E40);
  uint64_t v52 = v51 + *(int *)(sub_10005D034(&qword_1006B6E48) + 48);
  *(void *)uint64_t v52 = v42;
  *(void *)(v52 + 8) = 0;
  *(_WORD *)(v52 + 16) = 1;
  *(void *)(v52 + 24) = v44;
  *(unsigned char *)(v52 + 32) = v45;
  *(void *)(v52 + 40) = v46;
  *(unsigned char *)(v52 + 48) = v47;
  uint64_t v53 = v57;
  *(void *)(v52 + 56) = v58;
  *(void *)(v52 + 64) = v53;
  *(unsigned char *)(v52 + 72) = v48;
  *(void *)(v52 + 80) = v59;
  *(void *)(v52 + 88) = 0;
  *(double *)(v52 + 96) = v60;
  *(void *)(v52 + 104) = 0;
  *(unsigned char *)(v52 + 112) = 0;
  swift_retain();
  sub_100003F10(v49, &qword_1006B6E40);
  swift_release();
  return sub_100003F10(v50, &qword_1006B6E40);
}

uint64_t sub_100243F0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10005D034(&qword_1006B6DF8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (uint64_t *)((char *)&v21 - v12);
  __chkstk_darwin(v11);
  uint64_t v15 = (uint64_t *)((char *)&v21 - v14);
  uint64_t *v15 = static Alignment.center.getter();
  v15[1] = v16;
  uint64_t v17 = sub_10005D034(&qword_1006B6E00);
  sub_100244144(a1, 0xD000000000000010, 0x800000010058D7B0, (uint64_t (*)(void))&static Color.green.getter, (void (*)(void))sub_10018A15C, (uint64_t)v15 + *(int *)(v17 + 44));
  *uint64_t v13 = static Alignment.center.getter();
  v13[1] = v18;
  sub_100244144(a1, 0xD000000000000013, 0x800000010058D790, (uint64_t (*)(void))&static Color.orange.getter, (void (*)(void))sub_10018A31C, (uint64_t)v13 + *(int *)(v17 + 44));
  sub_100006AB0((uint64_t)v15, (uint64_t)v10, &qword_1006B6DF8);
  sub_100006AB0((uint64_t)v13, (uint64_t)v7, &qword_1006B6DF8);
  sub_100006AB0((uint64_t)v10, a2, &qword_1006B6DF8);
  uint64_t v19 = sub_10005D034(&qword_1006B6E08);
  sub_100006AB0((uint64_t)v7, a2 + *(int *)(v19 + 48), &qword_1006B6DF8);
  sub_100003F10((uint64_t)v13, &qword_1006B6DF8);
  sub_100003F10((uint64_t)v15, &qword_1006B6DF8);
  sub_100003F10((uint64_t)v7, &qword_1006B6DF8);
  return sub_100003F10((uint64_t)v10, &qword_1006B6DF8);
}

uint64_t sub_100244144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void)@<X3>, void (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  char v36 = a4;
  uint64_t v37 = a5;
  uint64_t v34 = a2;
  uint64_t v35 = a3;
  v32[1] = a1;
  uint64_t v38 = a6;
  uint64_t v7 = sub_10005D034(&qword_1006B4870);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for RoundedRectangle();
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (void *)((char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_10005D034(&qword_1006B6E10);
  uint64_t v16 = v15 - 8;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (void *)((char *)v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  uint64_t v33 = (uint64_t)v32 - v20;
  id v21 = [self tertiarySystemFillColor];
  uint64_t v22 = Color.init(uiColor:)();
  uint64_t v23 = *(void *)(a1 + 96);
  double v24 = (char *)v14 + *(int *)(v12 + 28);
  uint64_t v25 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v26 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v24, v25, v26);
  *uint64_t v14 = v23;
  v14[1] = v23;
  sub_1002453C8((uint64_t)v14, (uint64_t)v10);
  *(_WORD *)&v10[*(int *)(v8 + 44)] = 256;
  sub_100006AB0((uint64_t)v10, (uint64_t)v19 + *(int *)(v16 + 44), &qword_1006B4870);
  *uint64_t v19 = v22;
  swift_retain();
  sub_100003F10((uint64_t)v10, &qword_1006B4870);
  sub_10024542C((uint64_t)v14);
  swift_release();
  uint64_t v27 = v33;
  sub_100067E48((uint64_t)v19, v33, &qword_1006B6E10);
  uint64_t v28 = static VerticalAlignment.center.getter();
  sub_10024457C(v36, v37, (uint64_t)v39);
  *(_OWORD *)((char *)&v41[11] + 7) = v39[11];
  *(_OWORD *)((char *)&v41[12] + 7) = v39[12];
  *(_OWORD *)((char *)&v41[13] + 7) = v40[0];
  v41[14] = *(_OWORD *)((char *)v40 + 9);
  *(_OWORD *)((char *)&v41[7] + 7) = v39[7];
  *(_OWORD *)((char *)&v41[8] + 7) = v39[8];
  *(_OWORD *)((char *)&v41[9] + 7) = v39[9];
  *(_OWORD *)((char *)&v41[10] + 7) = v39[10];
  *(_OWORD *)((char *)&v41[3] + 7) = v39[3];
  *(_OWORD *)((char *)&v41[4] + 7) = v39[4];
  *(_OWORD *)((char *)&v41[5] + 7) = v39[5];
  *(_OWORD *)((char *)&v41[6] + 7) = v39[6];
  *(_OWORD *)((char *)v41 + 7) = v39[0];
  *(_OWORD *)((char *)&v41[1] + 7) = v39[1];
  char v42 = 1;
  *(_OWORD *)((char *)&v41[2] + 7) = v39[2];
  sub_100006AB0(v27, (uint64_t)v19, &qword_1006B6E10);
  uint64_t v29 = v38;
  sub_100006AB0((uint64_t)v19, v38, &qword_1006B6E10);
  uint64_t v30 = *(int *)(sub_10005D034(&qword_1006B6E18) + 48);
  *(_OWORD *)((char *)&v43[24] + 1) = v41[11];
  *(_OWORD *)((char *)&v43[26] + 1) = v41[12];
  *(_OWORD *)((char *)&v43[28] + 1) = v41[13];
  *(_OWORD *)((char *)&v43[30] + 1) = v41[14];
  *(_OWORD *)((char *)&v43[16] + 1) = v41[7];
  *(_OWORD *)((char *)&v43[18] + 1) = v41[8];
  *(_OWORD *)((char *)&v43[20] + 1) = v41[9];
  *(_OWORD *)((char *)&v43[22] + 1) = v41[10];
  *(_OWORD *)((char *)&v43[8] + 1) = v41[3];
  *(_OWORD *)((char *)&v43[10] + 1) = v41[4];
  *(_OWORD *)((char *)&v43[12] + 1) = v41[5];
  *(_OWORD *)((char *)&v43[14] + 1) = v41[6];
  *(_OWORD *)((char *)&v43[4] + 1) = v41[1];
  *(_OWORD *)((char *)&v43[6] + 1) = v41[2];
  v43[0] = v28;
  v43[1] = 0;
  LOBYTE(v43[2]) = 1;
  *(_OWORD *)((char *)&v43[2] + 1) = v41[0];
  memcpy((void *)(v29 + v30), v43, 0x101uLL);
  sub_100245488((uint64_t)v43);
  sub_100003F10(v27, &qword_1006B6E10);
  long long v57 = v41[11];
  long long v58 = v41[12];
  long long v59 = v41[13];
  long long v60 = v41[14];
  long long v53 = v41[7];
  long long v54 = v41[8];
  long long v55 = v41[9];
  long long v56 = v41[10];
  long long v49 = v41[3];
  long long v50 = v41[4];
  long long v51 = v41[5];
  long long v52 = v41[6];
  long long v46 = v41[0];
  long long v47 = v41[1];
  v44[0] = v28;
  v44[1] = 0;
  char v45 = 1;
  long long v48 = v41[2];
  sub_100245554((uint64_t)v44);
  return sub_100003F10((uint64_t)v19, &qword_1006B6E10);
}

uint64_t sub_10024457C@<X0>(uint64_t (*a1)(void)@<X3>, void (*a2)(void)@<X4>, uint64_t a3@<X8>)
{
  uint64_t v28 = Image.init(systemName:)();
  uint64_t v27 = static Font.largeTitle.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = a1();
  uint64_t v29 = swift_getKeyPath();
  char v24 = static Edge.Set.all.getter();
  uint64_t v6 = static HorizontalAlignment.leading.getter();
  sub_1002447F8(a2, (uint64_t)v39);
  uint64_t v7 = *(void *)v39;
  char v8 = v39[16];
  uint64_t v9 = *(void *)&v39[24];
  long long v10 = *(_OWORD *)&v39[32];
  char v11 = v39[48];
  uint64_t v22 = *(void *)&v39[56];
  uint64_t v23 = *(void *)&v39[8];
  char v12 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  long long v30 = (unint64_t)v6;
  LOBYTE(v31) = 1;
  *((void *)&v31 + 1) = v7;
  *(void *)&long long v32 = v23;
  BYTE8(v32) = v8;
  *(void *)uint64_t v33 = v9;
  *(_OWORD *)&v33[8] = v10;
  v33[24] = v11;
  *(void *)&long long v34 = v22;
  BYTE8(v34) = v12;
  *(void *)&long long v35 = v13;
  *((void *)&v35 + 1) = v14;
  *(void *)&long long v36 = v15;
  *((void *)&v36 + 1) = v16;
  char v37 = 0;
  char v40 = 1;
  *(_OWORD *)&v39[7] = (unint64_t)v6;
  *(_OWORD *)&v39[71] = *(_OWORD *)&v33[16];
  *(_OWORD *)&v39[55] = *(_OWORD *)v33;
  *(_OWORD *)&v39[39] = v32;
  *(_OWORD *)&v39[23] = v31;
  v39[135] = 0;
  *(_OWORD *)&v39[119] = v36;
  *(_OWORD *)&v39[103] = v35;
  *(_OWORD *)&v39[87] = v34;
  char v38 = 1;
  *(void *)a3 = v28;
  *(void *)(a3 + 8) = KeyPath;
  *(void *)(a3 + 16) = v27;
  *(void *)(a3 + 24) = v29;
  *(void *)(a3 + 32) = v25;
  *(unsigned char *)(a3 + 40) = v24;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(unsigned char *)(a3 + 80) = 1;
  long long v17 = *(_OWORD *)&v39[64];
  *(_OWORD *)(a3 + 161) = *(_OWORD *)&v39[80];
  long long v18 = *(_OWORD *)&v39[112];
  *(_OWORD *)(a3 + 177) = *(_OWORD *)&v39[96];
  *(_OWORD *)(a3 + 193) = v18;
  *(void *)(a3 + 209) = *(void *)&v39[128];
  long long v19 = *(_OWORD *)v39;
  *(_OWORD *)(a3 + 97) = *(_OWORD *)&v39[16];
  long long v20 = *(_OWORD *)&v39[48];
  *(_OWORD *)(a3 + 113) = *(_OWORD *)&v39[32];
  *(_OWORD *)(a3 + 129) = v20;
  *(_OWORD *)(a3 + 145) = v17;
  *(_OWORD *)(a3 + 81) = v19;
  *(void *)(a3 + 224) = 0;
  *(unsigned char *)(a3 + 232) = 1;
  v41[0] = v6;
  v41[1] = 0;
  char v42 = 1;
  uint64_t v43 = v7;
  uint64_t v44 = v23;
  char v45 = v8;
  uint64_t v46 = v9;
  long long v47 = v10;
  char v48 = v11;
  uint64_t v49 = v22;
  char v50 = v12;
  uint64_t v51 = v13;
  uint64_t v52 = v14;
  uint64_t v53 = v15;
  uint64_t v54 = v16;
  char v55 = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1002456D0((uint64_t)&v30);
  sub_100245744((uint64_t)v41);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1002447F8@<X0>(void (*a1)(void)@<X1>, uint64_t a2@<X8>)
{
  a1();
  swift_bridgeObjectRelease();
  sub_100059EB8();
  uint64_t v3 = Text.init<A>(_:)();
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  uint64_t v8 = Text.bold()();
  uint64_t v10 = v9;
  uint64_t v22 = v11;
  char v13 = v12 & 1;
  sub_10019C4F0(v3, v5, v7);
  uint64_t v14 = swift_bridgeObjectRelease();
  ((void (*)(uint64_t))a1)(v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = Text.init<A>(_:)();
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = v10;
  *(unsigned char *)(a2 + 16) = v13;
  *(void *)(a2 + 24) = v22;
  *(void *)(a2 + 32) = v15;
  *(void *)(a2 + 40) = v16;
  *(unsigned char *)(a2 + 48) = v18 & 1;
  *(void *)(a2 + 56) = v20;
  sub_10019C5B8(v8, v10, v13);
  swift_bridgeObjectRetain();
  sub_10019C5B8(v15, v17, v19);
  swift_bridgeObjectRetain();
  sub_10019C4F0(v15, v17, v19);
  swift_bridgeObjectRelease();
  sub_10019C4F0(v8, v10, v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100244984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v63 = type metadata accessor for ControlSize();
  uint64_t v60 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v62 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v58 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10005D034(&qword_1006B6D60);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v54 = v6;
  uint64_t v55 = v7;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_10005D034(&qword_1006B6D68);
  uint64_t v59 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10005D034(&qword_1006B6D70);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_10005D034(&qword_1006B6D78) - 8;
  __chkstk_darwin(v57);
  uint64_t v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v18 = (_OWORD *)swift_allocObject();
  long long v19 = *(_OWORD *)(a1 + 80);
  v18[5] = *(_OWORD *)(a1 + 64);
  void v18[6] = v19;
  v18[7] = *(_OWORD *)(a1 + 96);
  long long v20 = *(_OWORD *)(a1 + 16);
  v18[1] = *(_OWORD *)a1;
  v18[2] = v20;
  long long v21 = *(_OWORD *)(a1 + 48);
  v18[3] = *(_OWORD *)(a1 + 32);
  v18[4] = v21;
  sub_100245144((void *)a1);
  sub_10005D034(&qword_1006B6D80);
  sub_1002451B8();
  Button.init(action:label:)();
  BorderedProminentButtonStyle.init()();
  sub_1000450A0(&qword_1006B6D90, &qword_1006B6D60);
  sub_10024522C();
  uint64_t v22 = v11;
  uint64_t v23 = v54;
  uint64_t v24 = v56;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v5, v24);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v9, v23);
  uint64_t v25 = v60;
  uint64_t v27 = v62;
  uint64_t v26 = v63;
  (*(void (**)(char *, void, uint64_t))(v60 + 104))(v62, enum case for ControlSize.large(_:), v63);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v29 = (uint64_t *)&v15[*(int *)(v13 + 44)];
  uint64_t v30 = sub_10005D034(&qword_1006B6DA0);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))((char *)v29 + *(int *)(v30 + 28), v27, v26);
  uint64_t *v29 = KeyPath;
  uint64_t v31 = v59;
  uint64_t v32 = v61;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v15, v22, v61);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v26);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v22, v32);
  LOBYTE(v32) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  sub_100006AB0((uint64_t)v15, (uint64_t)v17, &qword_1006B6D70);
  id v41 = &v17[*(int *)(v57 + 44)];
  *id v41 = v32;
  *((void *)v41 + 1) = v34;
  *((void *)v41 + 2) = v36;
  *((void *)v41 + 3) = v38;
  *((void *)v41 + 4) = v40;
  v41[40] = 0;
  sub_100003F10((uint64_t)v15, &qword_1006B6D70);
  LOBYTE(v32) = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v50 = v64;
  sub_100006AB0((uint64_t)v17, v64, &qword_1006B6D78);
  uint64_t v51 = v50 + *(int *)(sub_10005D034(&qword_1006B6DA8) + 36);
  *(unsigned char *)uint64_t v51 = v32;
  *(void *)(v51 + 8) = v43;
  *(void *)(v51 + 16) = v45;
  *(void *)(v51 + 24) = v47;
  *(void *)(v51 + 32) = v49;
  *(unsigned char *)(v51 + 40) = 0;
  return sub_100003F10((uint64_t)v17, &qword_1006B6D78);
}

__n128 sub_100244F40@<Q0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  uint64_t v9 = static Alignment.center.getter();
  sub_1001979C0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, 0.0, 1, v9, v10, v2, v4, v8, v6);
  sub_10019C4F0(v2, v4, v8);
  swift_bridgeObjectRelease();
  long long v11 = v15[7];
  *(_OWORD *)(a1 + 96) = v15[6];
  *(_OWORD *)(a1 + 112) = v11;
  *(_OWORD *)(a1 + 128) = v15[8];
  long long v12 = v15[3];
  *(_OWORD *)(a1 + 32) = v15[2];
  *(_OWORD *)(a1 + 48) = v12;
  long long v13 = v15[5];
  *(_OWORD *)(a1 + 64) = v15[4];
  *(_OWORD *)(a1 + 80) = v13;
  __n128 result = (__n128)v15[1];
  *(_OWORD *)a1 = v15[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100245058@<X0>(uint64_t a1@<X8>)
{
  return sub_100242C9C(a1);
}

uint64_t sub_1002450A4@<X0>(void *a1@<X8>)
{
  return sub_1002430CC(*(double **)(v1 + 16), a1);
}

uint64_t sub_1002450AC()
{
  swift_release();
  if (v0[3]) {
    swift_release();
  }
  if (v0[5]) {
    swift_release();
  }
  if (v0[7]) {
    swift_release();
  }

  return _swift_deallocObject(v0, 128, 7);
}

uint64_t sub_100245114()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 56);
  if (v1) {
    return v1();
  }
  return result;
}

void *sub_100245144(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[5];
  swift_retain();
  sub_1000B7838(v2);
  sub_1000B7838(v3);
  sub_1000B7838(v4);
  return a1;
}

unint64_t sub_1002451B8()
{
  unint64_t result = qword_1006B6D88;
  if (!qword_1006B6D88)
  {
    sub_100046C48(&qword_1006B6D80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B6D88);
  }
  return result;
}

unint64_t sub_10024522C()
{
  unint64_t result = qword_1006B6D98;
  if (!qword_1006B6D98)
  {
    type metadata accessor for BorderedProminentButtonStyle();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B6D98);
  }
  return result;
}

uint64_t sub_100245284()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_1002452A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ControlSize();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.controlSize.setter();
}

uint64_t sub_100245374@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002453A0()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_1002453C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10024542C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100245488(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 136);
  uint64_t v3 = *(void *)(a1 + 144);
  char v4 = *(unsigned char *)(a1 + 152);
  uint64_t v5 = *(void *)(a1 + 168);
  char v7 = *(unsigned char *)(a1 + 184);
  uint64_t v8 = *(void *)(a1 + 176);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10019C5B8(v2, v3, v4);
  swift_bridgeObjectRetain();
  sub_10019C5B8(v5, v8, v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100245554(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 136);
  uint64_t v3 = *(void *)(a1 + 144);
  char v4 = *(unsigned char *)(a1 + 152);
  uint64_t v5 = *(void *)(a1 + 168);
  char v7 = *(unsigned char *)(a1 + 184);
  uint64_t v8 = *(void *)(a1 + 176);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10019C4F0(v2, v3, v4);
  swift_bridgeObjectRelease();
  sub_10019C4F0(v5, v8, v7);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100245620@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10024564C()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_100245678@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002456A4()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_1002456D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 72);
  sub_10019C5B8(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_10019C5B8(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100245744(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 72);
  sub_10019C4F0(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_10019C4F0(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FMUTWelcomeViewStyle()
{
  return &type metadata for FMUTWelcomeViewStyle;
}

uint64_t sub_1002457C8()
{
  return sub_1000450A0(&qword_1006B6E50, &qword_1006B6E58);
}

double sub_100245804()
{
  if (qword_1006AE460 != -1) {
    swift_once();
  }
  if (qword_1006AE228 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_1006D20C8;
  __asm { FMOV            V1.2D, #10.0 }
  xmmword_1006D19A0 = _Q1;
  *(_OWORD *)algn_1006D19B0 = _Q1;
  *(void *)&xmmword_1006D19C0 = 0x4028000000000000;
  *((void *)&xmmword_1006D19C0 + 1) = qword_1006D20C8;
  return result;
}

void sub_1002458C4(uint64_t a1)
{
  uint64_t v2 = v1;
  v19.receiver = v2;
  v19.super_class = (Class)type metadata accessor for FMSectionPlatterMessageTextView();
  [super traitCollectionDidChange:a1];
  uint64_t v4 = *(void *)&v2[OBJC_IVAR____TtC6FindMy31FMSectionPlatterMessageTextView_messageTextView];
  uint64_t v5 = sub_10014E970();
  uint64_t v6 = v5;
  if (v5) {
    char v7 = (NSString *)v5;
  }
  else {
    char v7 = UIFontTextStyleBody;
  }
  uint64_t v8 = self;
  id v9 = v6;
  id v10 = [v8 preferredFontForTextStyle:v7];

  long long v11 = *(void **)&v2[OBJC_IVAR____TtC6FindMy31FMSectionPlatterMessageTextView_messageTextViewHeightConstraint];
  if (v11)
  {
    id v12 = v11;
    [v10 lineHeight];
    double v14 = v13 * 3.25;
    uint64_t v15 = OBJC_IVAR____TtC6FindMy17FMMessageTextView_textView;
    [*(id *)(v4 + OBJC_IVAR____TtC6FindMy17FMMessageTextView_textView) textContainerInset];
    double v17 = v14 + v16;
    [*(id *)(v4 + v15) textContainerInset];
    [v12 setConstant:v17 + v18];
  }
  else
  {
    __break(1u);
  }
}

id sub_100245C4C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMSectionPlatterMessageTextView();
  return [super dealloc];
}

uint64_t type metadata accessor for FMSectionPlatterMessageTextView()
{
  return self;
}

ValueMetadata *type metadata accessor for FMSectionPlatterMessageTextViewStyle()
{
  return &type metadata for FMSectionPlatterMessageTextViewStyle;
}

void sub_100245D58()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy31FMSectionPlatterMessageTextView_style;
  if (qword_1006AE088 != -1) {
    swift_once();
  }
  objc_super v2 = &v0[v1];
  long long v3 = *(_OWORD *)algn_1006D19B0;
  long long v4 = xmmword_1006D19C0;
  *objc_super v2 = xmmword_1006D19A0;
  v2[1] = v3;
  v2[2] = v4;
  uint64_t v5 = OBJC_IVAR____TtC6FindMy31FMSectionPlatterMessageTextView_sectionLabel;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v6 = OBJC_IVAR____TtC6FindMy31FMSectionPlatterMessageTextView_contentView;
  *(void *)&v0[v6] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v7 = OBJC_IVAR____TtC6FindMy31FMSectionPlatterMessageTextView_messageTextView;
  *(void *)&v0[v7] = [objc_allocWithZone((Class)type metadata accessor for FMMessageTextView()) init];
  *(void *)&v0[OBJC_IVAR____TtC6FindMy31FMSectionPlatterMessageTextView_messageTextViewHeightConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy31FMSectionPlatterMessageTextView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC6FindMy31FMSectionPlatterMessageTextView_isEditing] = 0;
  uint64_t v8 = &v0[OBJC_IVAR____TtC6FindMy31FMSectionPlatterMessageTextView_initialMessageText];
  *uint64_t v8 = 0;
  v8[1] = 0;
  id v9 = &v0[OBJC_IVAR____TtC6FindMy31FMSectionPlatterMessageTextView_placeHolderText];
  *id v9 = 0;
  v9[1] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

char *sub_100245EC4()
{
  uint64_t v1 = sub_10005D034((uint64_t *)&unk_1006C0CE0);
  __chkstk_darwin(v1 - 8);
  long long v3 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenFoundSwitch;
  id v5 = objc_allocWithZone((Class)type metadata accessor for FMSettingSwitchView());
  uint64_t v6 = v0;
  *(void *)&v0[v4] = [v5 init];
  uint64_t v7 = OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenDetachedSwitch;
  if (qword_1006AE460 != -1) {
    swift_once();
  }
  if (qword_1006AE228 != -1) {
    swift_once();
  }
  double v8 = *(double *)&qword_1006D20C8;
  id v9 = (objc_class *)type metadata accessor for FMSettingRowView();
  id v10 = objc_allocWithZone(v9);
  *(void *)&v6[v7] = sub_100512828(1, v8);
  uint64_t v11 = OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenLeftBehindSwitch;
  double v12 = *(double *)&qword_1006D20C8;
  id v13 = objc_allocWithZone(v9);
  *(void *)&v6[v11] = sub_100512828(1, v12);
  *(void *)&v6[OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v6[OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_disabled] = 0;

  v24[0] = 0;
  v24[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v14 = [self mainBundle];
  v15._uint64_t countAndFlagsBits = 0xD000000000000022;
  v25._uint64_t countAndFlagsBits = 0xD000000000000034;
  v25._object = (void *)0x800000010058D990;
  v15._object = (void *)0x800000010058D960;
  v16._uint64_t countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  Swift::String v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v25);

  uint64_t v18 = type metadata accessor for FMPlatterIcon();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v3, 0, 1, v18);
  objc_super v19 = sub_100456A50(v17._countAndFlagsBits, (uint64_t)v17._object, 0, 0, (uint64_t)v3, 0, 0, 0, 0, 0, 0);
  NSString v20 = String._bridgeToObjectiveC()();
  [v19 setAccessibilityIdentifier:v20];

  id v21 = *(id *)&v19[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_titleLabel];
  NSString v22 = String._bridgeToObjectiveC()();
  [v21 setAccessibilityIdentifier:v22];

  return v19;
}

id sub_100246248()
{
  uint64_t v1 = v0;
  sub_10045716C();
  uint64_t v2 = *(char **)(v0 + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenLeftBehindSwitch);
  long long v3 = self;
  id v4 = [v3 mainBundle];
  v5.value._uint64_t countAndFlagsBits = 0xD000000000000016;
  v38._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v6._uint64_t countAndFlagsBits = 0xD000000000000023;
  v38._object = (void *)0x8000000100582B40;
  v6._object = (void *)0x800000010058D9F0;
  v5.value._object = (void *)0x8000000100582B20;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  Swift::String v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v5, (NSBundle)v4, v7, v38);

  id v9 = (Swift::String *)&v2[OBJC_IVAR____TtC6FindMy16FMSettingRowView_title];
  *id v9 = v8;
  swift_bridgeObjectRelease();
  id v10 = *(void **)&v2[OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabel];
  if (v9->_object)
  {
    id v11 = v10;
    swift_bridgeObjectRetain();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v13 = v10;
    NSString v12 = 0;
  }
  [v10 setText:v12];

  NSString v14 = String._bridgeToObjectiveC()();
  [v2 setAccessibilityIdentifier:v14];

  Swift::String v15 = *(unsigned char **)(v1 + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenFoundSwitch);
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v16 = [v3 mainBundle];
  v17._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v39._uint64_t countAndFlagsBits = 0xD000000000000031;
  v39._object = (void *)0x800000010058DA60;
  v17._object = (void *)0x800000010058DA40;
  v18._uint64_t countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  Swift::String v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v39);

  *(Swift::String *)&v15[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_title] = v19;
  swift_bridgeObjectRelease();
  id v20 = *(id *)&v15[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_titleLabel];
  swift_bridgeObjectRetain();
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v20 setText:v21];

  v15[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_isOn] = 0;
  [*(id *)&v15[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_settingSwitch] setOn:0];
  *(void *)&v15[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_delegate + 8] = &off_10062EB00;
  swift_unknownObjectWeakAssign();
  NSString v22 = String._bridgeToObjectiveC()();
  [v15 setAccessibilityIdentifier:v22];

  uint64_t v23 = *(char **)(v1 + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenDetachedSwitch);
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v24 = [v3 mainBundle];
  v25._uint64_t countAndFlagsBits = 0xD000000000000022;
  v40._uint64_t countAndFlagsBits = 0xD000000000000034;
  v40._object = (void *)0x800000010058DAF0;
  v25._object = (void *)0x800000010058DAC0;
  v26.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v26.value._object = (void *)0xEC00000031656C62;
  v27._uint64_t countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  Swift::String v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, v26, (NSBundle)v24, v27, v40);

  uint64_t v29 = (Swift::String *)&v23[OBJC_IVAR____TtC6FindMy16FMSettingRowView_title];
  Swift::String *v29 = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void **)&v23[OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabel];
  if (v29->_object)
  {
    id v31 = v30;
    swift_bridgeObjectRetain();
    NSString v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v33 = v30;
    NSString v32 = 0;
  }
  [v30 setText:v32];

  NSString v34 = String._bridgeToObjectiveC()();
  [v23 setAccessibilityIdentifier:v34];

  uint64_t v35 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_contentStackView);
  [v35 addArrangedSubview:v15];
  [v35 addArrangedSubview:v2];

  return [v35 addArrangedSubview:v23];
}

void sub_100246764()
{
  id v1 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"notifyWhenLeftBehindRowTap"];
  [*(id *)(v0 + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenLeftBehindSwitch) addGestureRecognizer:v1];
  id v2 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"notifyWhenDetachedRowTap"];
  [*(id *)(v0 + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenDetachedSwitch) addGestureRecognizer:v2];
}

id sub_100246834(char a1, uint64_t a2, char a3, char a4, char a5, char a6, uint64_t a7, unint64_t a8, char a9, char a10, char a11, char a12)
{
  uint64_t v13 = v12;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_1000606BC(v18, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain_n();
  Swift::String v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  char v108 = a5;
  char v109 = a4;
  uint64_t v103 = a2;
  unint64_t v104 = a8;
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v112 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 67111426;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 8) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 18) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 24) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 30) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 36) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 42) = 2080;
    if (a8) {
      uint64_t v22 = a7;
    }
    else {
      uint64_t v22 = 0x216C696E21;
    }
    if (a8) {
      unint64_t v23 = a8;
    }
    else {
      unint64_t v23 = 0xE500000000000000;
    }
    swift_bridgeObjectRetain();
    sub_1000606F4(v22, v23, &v112);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 52) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 58) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 64) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMDeviceNotificationsView.update:\n  status: %{BOOL}d,\n  safeLocationCount: %ld,\n  supportsSeparation: %{BOOL}d,\n  enabled: %{BOOL}d,\n  notifyWhenFoundEnabled: %{BOOL}d,\n  isMeDevice: %{BOOL}d,\n  meDeviceName: %s,\n  isThisDevice: %{BOOL}d,\n  temporarilyUnavailable: %{BOOL}d\n  paused: %{BOOL}d", (uint8_t *)v21, 0x46u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v24 = *(void *)(v13 + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenLeftBehindSwitch);
  if (a12)
  {
    uint64_t countAndFlagsBits = 0;
    object = (void *)0xE000000000000000;
  }
  else
  {
    uint64_t v112 = 0;
    unint64_t v113 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v27 = [self mainBundle];
    if (a1)
    {
      unint64_t v28 = 0xD00000000000001DLL;
      unint64_t v29 = 0xD00000000000002FLL;
      unint64_t v101 = 0x800000010058DBD0;
      uint64_t v30 = "DEVICE_DETAIL_NOTIFICATION_ON";
    }
    else
    {
      unint64_t v28 = 0xD00000000000001ELL;
      unint64_t v29 = 0xD000000000000030;
      unint64_t v101 = 0x800000010058DB70;
      uint64_t v30 = "DEVICE_DETAIL_NOTIFICATION_OFF";
    }
    unint64_t v31 = (unint64_t)(v30 - 32) | 0x8000000000000000;
    v32._uint64_t countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    Swift::String v33 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v28, (Swift::String_optional)0, (NSBundle)v27, v32, *(Swift::String *)&v29);
    uint64_t countAndFlagsBits = v33._countAndFlagsBits;
    object = v33._object;
  }
  NSString v34 = (uint64_t *)(v24 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_subtitle);
  *NSString v34 = countAndFlagsBits;
  v34[1] = (uint64_t)object;
  swift_bridgeObjectRelease();
  uint64_t v35 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_secondaryLabel;
  uint64_t v36 = *(void **)(v24 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_secondaryLabel);
  if (v34[1])
  {
    id v37 = v36;
    swift_bridgeObjectRetain();
    NSString v38 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v39 = v36;
    NSString v38 = 0;
  }
  [v36 setText:v38];

  if (a3)
  {
    if (a11)
    {
      uint64_t v107 = v13;
      Swift::String v40 = self;
      id v41 = [v40 mainBundle];
      v114._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v42._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
      v114._object = (void *)0x8000000100582B40;
      v42._object = (void *)0x800000010058DDD0;
      v43.value._object = (void *)0x8000000100582B20;
      uint64_t v44 = (void *)0xE000000000000000;
      v43.value._uint64_t countAndFlagsBits = 0xD000000000000016;
      v45._uint64_t countAndFlagsBits = 0;
      v45._object = (void *)0xE000000000000000;
      Swift::String v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(v42, v43, (NSBundle)v41, v45, v114);

      sub_10051260C(v46._countAndFlagsBits, (uint64_t)v46._object);
      if ((a12 & 1) == 0)
      {
LABEL_38:
        uint64_t v112 = 0;
        unint64_t v113 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease();
        id v74 = [v40 mainBundle];
        v75._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
        v118._uint64_t countAndFlagsBits = 0xD000000000000030;
        v118._object = (void *)0x800000010058DB70;
        v75._object = (void *)0x800000010058DB50;
        v76._uint64_t countAndFlagsBits = 0;
        v76._object = (void *)0xE000000000000000;
        Swift::String v77 = NSLocalizedString(_:tableName:bundle:value:comment:)(v75, (Swift::String_optional)0, (NSBundle)v74, v76, v118);
        uint64_t v61 = v77._countAndFlagsBits;
        uint64_t v44 = v77._object;

        goto LABEL_39;
      }
    }
    else
    {
      char v55 = a10;
      if ((a10 & 1) == 0)
      {
        if ((a6 & 1) != 0 || !v104)
        {
          char v54 = v109;
          if (a9)
          {
            id v84 = [self mainBundle];
            unint64_t v85 = 0xD00000000000001BLL;
            if (a1)
            {
              unint64_t v86 = 0xD000000000000034;
              unint64_t v102 = 0x8000000100582B40;
              uint64_t v87 = "DEVICE_OR_ITEM_NOTIFICATIONS_ENABLED_FOR_APPLE_WATCH";
            }
            else
            {
              unint64_t v86 = 0xD000000000000035;
              unint64_t v102 = 0x8000000100582B40;
              uint64_t v87 = "DEVICE_OR_ITEM_NOTIFICATIONS_DISABLED_FOR_APPLE_WATCH";
            }
            unint64_t v97 = (unint64_t)(v87 - 32) | 0x8000000000000000;
            v98.value._object = (void *)0x8000000100582B20;
            v98.value._uint64_t countAndFlagsBits = 0xD000000000000016;
            v99._uint64_t countAndFlagsBits = 0;
            v99._object = (void *)0xE000000000000000;
            Swift::String v100 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v86, v98, (NSBundle)v84, v99, *(Swift::String *)&v85);
            char v53 = v108;

            sub_10051260C(v100._countAndFlagsBits, (uint64_t)v100._object);
            char v55 = a10;
          }
          else
          {
            if (v103)
            {
              uint64_t v112 = 0;
              unint64_t v113 = 0xE000000000000000;
              _StringGuts.grow(_:)(20);
              swift_bridgeObjectRelease();
              id v88 = [self mainBundle];
              v89._uint64_t countAndFlagsBits = 0xD000000000000037;
              v119._uint64_t countAndFlagsBits = 0xD000000000000049;
              v119._object = (void *)0x800000010058DC70;
              v89._object = (void *)0x800000010058DC30;
              v90._uint64_t countAndFlagsBits = 0;
              v90._object = (void *)0xE000000000000000;
              NSLocalizedString(_:tableName:bundle:value:comment:)(v89, (Swift::String_optional)0, (NSBundle)v88, v90, v119);

              sub_10005D034((uint64_t *)&unk_1006AF790);
              uint64_t v91 = swift_allocObject();
              *(_OWORD *)(v91 + 16) = xmmword_10055B970;
              *(void *)(v91 + 56) = &type metadata for Int;
              *(void *)(v91 + 64) = &protocol witness table for Int;
              *(void *)(v91 + 32) = v103;
              uint64_t v92 = static String.localizedStringWithFormat(_:_:)();
              uint64_t v94 = v93;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v95 = v92;
              uint64_t v96 = v94;
            }
            else
            {
              uint64_t v95 = 0;
              uint64_t v96 = 0xE000000000000000;
            }
            sub_10051260C(v95, v96);
            char v53 = v108;
          }
        }
        else
        {
          if (a1) {
            uint64_t v62 = 0xD000000000000028;
          }
          else {
            uint64_t v62 = 0xD000000000000029;
          }
          if (a1) {
            uint64_t v63 = (void *)0x800000010058DD70;
          }
          else {
            uint64_t v63 = (void *)0x800000010058DD40;
          }
          uint64_t v112 = 0;
          unint64_t v113 = 0xE000000000000000;
          _StringGuts.grow(_:)(20);
          swift_bridgeObjectRelease();
          uint64_t v112 = 0xD000000000000012;
          unint64_t v113 = 0x800000010057F630;
          v64._uint64_t countAndFlagsBits = v62;
          v64._object = v63;
          String.append(_:)(v64);
          uint64_t v65 = v112;
          uint64_t v66 = (void *)v113;
          id v67 = [self mainBundle];
          v117._object = v66;
          v68._uint64_t countAndFlagsBits = v62;
          v68._object = v63;
          v69._uint64_t countAndFlagsBits = 0;
          v69._object = (void *)0xE000000000000000;
          v117._uint64_t countAndFlagsBits = v65;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v68, (Swift::String_optional)0, (NSBundle)v67, v69, v117);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          sub_10005D034((uint64_t *)&unk_1006AF790);
          uint64_t v70 = swift_allocObject();
          *(_OWORD *)(v70 + 16) = xmmword_10055B970;
          *(void *)(v70 + 56) = &type metadata for String;
          *(void *)(v70 + 64) = sub_10007F2C8();
          *(void *)(v70 + 32) = a7;
          *(void *)(v70 + 40) = v104;
          swift_bridgeObjectRetain();
          uint64_t v71 = String.init(format:_:)();
          uint64_t v73 = v72;
          char v55 = a10;
          swift_bridgeObjectRelease();
          sub_10051260C(v71, v73);
          char v53 = v108;
          char v54 = v109;
        }
        goto LABEL_43;
      }
      uint64_t v107 = v13;
      Swift::String v40 = self;
      id v56 = [v40 mainBundle];
      v116._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v57._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
      v116._object = (void *)0x8000000100582B40;
      v57._object = (void *)0x800000010058DDA0;
      v58.value._object = (void *)0x8000000100582B20;
      uint64_t v44 = (void *)0xE000000000000000;
      v58.value._uint64_t countAndFlagsBits = 0xD000000000000016;
      v59._uint64_t countAndFlagsBits = 0;
      v59._object = (void *)0xE000000000000000;
      Swift::String v60 = NSLocalizedString(_:tableName:bundle:value:comment:)(v57, v58, (NSBundle)v56, v59, v116);

      sub_10051260C(v60._countAndFlagsBits, (uint64_t)v60._object);
      if ((a12 & 1) == 0) {
        goto LABEL_38;
      }
    }
    uint64_t v61 = 0;
LABEL_39:
    char v53 = v108;
    *NSString v34 = v61;
    v34[1] = (uint64_t)v44;
    swift_bridgeObjectRelease();
    uint64_t v78 = *(void **)(v24 + v35);
    uint64_t v13 = v107;
    if (v34[1])
    {
      id v79 = v78;
      swift_bridgeObjectRetain();
      NSString v80 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v81 = v78;
      NSString v80 = 0;
    }
    char v54 = v109;
    char v55 = a10;
    [v78 setText:v80];

LABEL_43:
    char v52 = v55 ^ 1;
    goto LABEL_44;
  }
  id v47 = [self mainBundle];
  v115._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v48._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  v115._object = (void *)0x8000000100582B40;
  v48._object = (void *)0x800000010058DC00;
  v49.value._object = (void *)0x8000000100582B20;
  v49.value._uint64_t countAndFlagsBits = 0xD000000000000016;
  v50._uint64_t countAndFlagsBits = 0;
  v50._object = (void *)0xE000000000000000;
  Swift::String v51 = NSLocalizedString(_:tableName:bundle:value:comment:)(v48, v49, (NSBundle)v47, v50, v115);

  sub_10051260C(v51._countAndFlagsBits, (uint64_t)v51._object);
  char v52 = 0;
  char v53 = v108;
  char v54 = v109;
LABEL_44:
  *(unsigned char *)(v24 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_enabled) = v52 & 1;
  sub_1005126FC();
  uint64_t v82 = *(void *)(v13 + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenFoundSwitch);
  *(unsigned char *)(v82 + OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_isEnabled) = v54 & 1;
  sub_1001431C0();
  *(unsigned char *)(v82 + OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_isOn) = v53 & 1;
  return [*(id *)(v82 + OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_settingSwitch) setOn:];
}

void sub_100247498(char a1, char a2)
{
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenDetachedSwitch);
  if (a2)
  {
    uint64_t countAndFlagsBits = 0;
    object = (void *)0xE000000000000000;
  }
  else
  {
    if (a1)
    {
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      id v6 = [self mainBundle];
      unint64_t v7 = 0xD00000000000002FLL;
      unint64_t v17 = 0x800000010058DBD0;
      unint64_t v8 = 0x800000010058DBB0;
      unint64_t v9 = 0xD00000000000001DLL;
    }
    else
    {
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      id v6 = [self mainBundle];
      unint64_t v9 = 0xD00000000000001ELL;
      unint64_t v7 = 0xD000000000000030;
      unint64_t v17 = 0x800000010058DB70;
      unint64_t v8 = 0x800000010058DB50;
    }
    v10._uint64_t countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v9, (Swift::String_optional)0, (NSBundle)v6, v10, *(Swift::String *)&v7);
    uint64_t countAndFlagsBits = v11._countAndFlagsBits;
    object = v11._object;
  }
  uint64_t v12 = (uint64_t *)(v3 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_subtitle);
  *uint64_t v12 = countAndFlagsBits;
  v12[1] = (uint64_t)object;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void **)(v3 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_secondaryLabel);
  if (v12[1])
  {
    id v14 = v13;
    swift_bridgeObjectRetain();
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v16 = v13;
    NSString v15 = 0;
  }
  [v13 setText:v15];

  *(unsigned char *)(v3 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_enabled) = 1;
  sub_1005126FC();
}

id sub_100247694(char a1, char a2)
{
  uint64_t v3 = v2;
  id v6 = *(char **)&v2[OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenFoundSwitch];
  [v6 setHidden:a1 & 1];
  unint64_t v7 = *(char **)&v3[OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenDetachedSwitch];
  [v7 setHidden:a2 & 1];
  unint64_t v8 = *(char **)&v3[OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenLeftBehindSwitch];
  unsigned __int8 v9 = [v8 isHidden];
  v6[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_separated] = v9 & a2 ^ 1;
  [*(id *)&v6[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_separator] setHidden:];
  v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_separated] = a2 ^ 1;
  [*(id *)&v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_separator] setHidden:a2 & 1];
  v7[OBJC_IVAR____TtC6FindMy16FMSettingRowView_separated] = 0;
  [*(id *)&v7[OBJC_IVAR____TtC6FindMy16FMSettingRowView_separator] setHidden:1];
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_1000606BC(v10, (uint64_t)qword_1006D1E98);
  Swift::String v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 67109376;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 8) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMDeviceNotificationsView: Visibility state: hideNotifyWhenFound: %{BOOL}d hideNotifyWhenDetached: %{BOOL}d", (uint8_t *)v13, 0xEu);
    swift_slowDealloc();
  }

  id v14 = 0;
  if (a1 & 1) != 0 && (a2) {
    id v14 = [v8 isHidden];
  }
  return [v3 setHidden:v14];
}

id sub_1002478E8(char a1)
{
  uint64_t v2 = v1;
  char v3 = a1;
  id v4 = *(char **)&v1[OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenLeftBehindSwitch];
  [v4 setHidden:a1 & 1];
  Swift::String_optional v5 = *(unsigned char **)&v2[OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenFoundSwitch];
  if (v3) {
    unsigned int v6 = [*(id *)&v2[OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenDetachedSwitch] isHidden] ^ 1;
  }
  else {
    unsigned int v6 = 1;
  }
  v5[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_separated] = v6;
  [*(id *)&v5[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_separator] setHidden:v6 ^ 1];
  unint64_t v7 = *(void **)&v2[OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenDetachedSwitch];
  id v8 = [v7 isHidden];
  v4[OBJC_IVAR____TtC6FindMy16FMSettingRowView_separated] = v8 ^ 1;
  [*(id *)&v4[OBJC_IVAR____TtC6FindMy16FMSettingRowView_separator] setHidden:v8];
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_1000606BC(v9, (uint64_t)qword_1006D1E98);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v12 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMDeviceNotificationsView: Visibility state: hideNotifyWhenLeftBehind: %{BOOL}d", v12, 8u);
    swift_slowDealloc();
  }

  if (![v5 isHidden] || (objc_msgSend(v7, "isHidden") & 1) == 0) {
    char v3 = 0;
  }
  return [v2 setHidden:v3 & 1];
}

uint64_t sub_100247B0C(uint64_t a1, char a2)
{
  sub_1002481F8();
  if (static NSObject.== infix(_:_:)())
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_1000606BC(v3, (uint64_t)qword_1006D1E98);
    id v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      unsigned int v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMDeviceNotificationsView:  User toggled notify when found switch", v6, 2u);
      swift_slowDealloc();
    }

    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_10021B068(a2 & 1);
      swift_unknownObjectRelease();
    }
  }
  uint64_t result = static NSObject.== infix(_:_:)();
  if (result)
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_1000606BC(v8, (uint64_t)qword_1006D1E98);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMDeviceNotificationsView:  User toggled notify if left behind switch", v11, 2u);
      swift_slowDealloc();
    }

    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      os_log_type_t v12 = *(void **)(*(void *)(result + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator) + 16);
      uint64_t v13 = self;
      id v14 = v12;
      id v15 = [v13 standardUserDefaults];
      NSString v16 = String._bridgeToObjectiveC()();
      unsigned int v17 = [v15 BOOLForKey:v16];

      if (v17) {
        sub_10020D878(a2 & 1);
      }
      else {
        sub_10020E0CC();
      }
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_100247E08()
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000606BC(v0, (uint64_t)qword_1006D1E98);
  id v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "FMDeviceNotificationsView: User selected notifyWhenDetached detail label.", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10020C8E0();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100247F6C()
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000606BC(v0, (uint64_t)qword_1006D1E98);
  id v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "FMDeviceNotificationsView: User selected detail label.", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_100222B08();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1002480D0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_delegate;

  return sub_100068760(v1);
}

id sub_100248130()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMDeviceNotificationsView();
  return [super dealloc];
}

uint64_t type metadata accessor for FMDeviceNotificationsView()
{
  return self;
}

unint64_t sub_1002481F8()
{
  unint64_t result = qword_1006B3E40;
  if (!qword_1006B3E40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1006B3E40);
  }
  return result;
}

void sub_100248238()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenFoundSwitch;
  *(void *)&v1[v2] = [objc_allocWithZone((Class)type metadata accessor for FMSettingSwitchView()) init];
  uint64_t v3 = OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenDetachedSwitch;
  if (qword_1006AE460 != -1) {
    swift_once();
  }
  if (qword_1006AE228 != -1) {
    swift_once();
  }
  double v4 = *(double *)&qword_1006D20C8;
  os_log_type_t v5 = (objc_class *)type metadata accessor for FMSettingRowView();
  id v6 = objc_allocWithZone(v5);
  *(void *)&v1[v3] = sub_100512828(1, v4);
  uint64_t v7 = OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenLeftBehindSwitch;
  double v8 = *(double *)&qword_1006D20C8;
  id v9 = objc_allocWithZone(v5);
  *(void *)&v1[v7] = sub_100512828(1, v8);
  *(void *)&v1[OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_disabled] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_1002484A8()
{
  uint64_t v1 = v0;
  id v2 = [v0 titleLabel];
  if (v2)
  {
    uint64_t v3 = v2;
    [v2 setNumberOfLines:0];
  }
  type metadata accessor for UILayoutPriority(0);
  sub_1000556D0();
  static _UIKitNumericRawRepresentable.+ infix(_:_:)();
  LODWORD(v4) = v7;
  [v1 setContentHuggingPriority:1 forAxis:v4];
  static _UIKitNumericRawRepresentable.+ infix(_:_:)();
  LODWORD(v5) = v7;
  return [v1 setContentHuggingPriority:0 forAxis:v5];
}

id sub_1002485D8()
{
  id result = [v0 titleLabel];
  if (result)
  {
    id v2 = result;
    [result intrinsicContentSize];

    [v0 contentEdgeInsets];
    [v0 contentEdgeInsets];
    [v0 contentEdgeInsets];
    return [v0 contentEdgeInsets];
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100248758()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMMultilineButton();
  return [super dealloc];
}

uint64_t type metadata accessor for FMMultilineButton()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for FMSelectedSection.FMUnknownItemsMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *id result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10024887CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMSelectedSection.FMUnknownItemsMode()
{
  return &type metadata for FMSelectedSection.FMUnknownItemsMode;
}

char *sub_100248944(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for FMIPDevice();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = *(int *)(sub_10005D034(&qword_1006BAF00) + 48);
      double v8 = &a1[v7];
      id v9 = &a2[v7];
      uint64_t v10 = type metadata accessor for FMIPItem();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_10005D034((uint64_t *)&unk_1006AFE30);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      goto LABEL_10;
    case 1u:
    case 7u:
      uint64_t v13 = type metadata accessor for FMIPDevice();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
      goto LABEL_10;
    case 2u:
      uint64_t v14 = type metadata accessor for FMFFriend();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
      goto LABEL_10;
    case 3u:
    case 4u:
      uint64_t v15 = type metadata accessor for FMIPItem();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
      goto LABEL_10;
    case 8u:
      uint64_t v16 = type metadata accessor for FMIPUnknownItem();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_100248CF8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100057C94((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for FMIPDevice();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        uint64_t v7 = *(int *)(sub_10005D034(&qword_1006BAF00) + 48);
        double v8 = &a1[v7];
        id v9 = &a2[v7];
        uint64_t v10 = type metadata accessor for FMIPItem();
        uint64_t v11 = *(void *)(v10 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
        {
          uint64_t v12 = sub_10005D034((uint64_t *)&unk_1006AFE30);
          memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
        }
        goto LABEL_11;
      case 1u:
      case 7u:
        uint64_t v13 = type metadata accessor for FMIPDevice();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
        goto LABEL_11;
      case 2u:
        uint64_t v14 = type metadata accessor for FMFFriend();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
        goto LABEL_11;
      case 3u:
      case 4u:
        uint64_t v15 = type metadata accessor for FMIPItem();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
        goto LABEL_11;
      case 8u:
        uint64_t v16 = type metadata accessor for FMIPUnknownItem();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1002490D0(unsigned __int8 *a1, char *a2)
{
  return sub_1001DA314(*a1, *a2);
}

Swift::Int sub_1002490DC()
{
  return Hasher._finalize()();
}

uint64_t sub_1002491C4()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100249294()
{
  return Hasher._finalize()();
}

unint64_t sub_100249378@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10000609C(*a1);
  *a2 = result;
  return result;
}

void sub_1002493A8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x73656369766564;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x656C706F6570;
      goto LABEL_3;
    case 2:
      *a1 = 25965;
      a1[1] = 0xE200000000000000;
      break;
    case 3:
      *a1 = 0x646E61707845656DLL;
      a1[1] = 0xEA00000000006465;
      break;
    case 4:
      *a1 = 0x736D657469;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_100249454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v39 = a3;
  Swift::String v40 = (char *)a4;
  uint64_t v6 = type metadata accessor for FMIPItem();
  uint64_t v37 = *(void *)(v6 - 8);
  uint64_t v38 = v6;
  __chkstk_darwin(v6);
  uint64_t v36 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  __chkstk_darwin(v8 - 8);
  uint64_t v35 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10005D034((uint64_t *)&unk_1006C0410);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10005D034(&qword_1006B7000);
  uint64_t v14 = v13 - 8;
  uint64_t v15 = __chkstk_darwin(v13);
  unsigned int v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  Swift::String v19 = (char *)&v35 - v18;
  uint64_t v20 = type metadata accessor for FMIPDevice();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
  v21(v19, a1, v20);
  uint64_t v22 = (uint64_t)&v19[*(int *)(v14 + 56)];
  sub_10010A088(a2, v22);
  v21(v17, v39, v20);
  uint64_t v23 = (uint64_t)&v17[*(int *)(v14 + 56)];
  sub_10010A088((uint64_t)v40, v23);
  sub_10024AF14(&qword_1006B7008, (void (*)(uint64_t))&type metadata accessor for FMIPDevice);
  if (dispatch thunk of static Equatable.== infix(_:_:)())
  {
    uint64_t v25 = (uint64_t)v35;
    uint64_t v24 = v36;
    uint64_t v26 = (uint64_t)&v12[*(int *)(v10 + 48)];
    sub_10010A088(v22, (uint64_t)v12);
    sub_10010A088(v23, v26);
    uint64_t v27 = v37;
    uint64_t v28 = v38;
    unint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
    if (v29((uint64_t)v12, 1, v38) == 1)
    {
      int v30 = v29(v26, 1, v28);
      if (v30 == 1) {
        unint64_t v31 = (uint64_t *)&unk_1006AFE30;
      }
      else {
        unint64_t v31 = (uint64_t *)&unk_1006C0410;
      }
      if (v30 == 1) {
        char v32 = -1;
      }
      else {
        char v32 = 0;
      }
    }
    else
    {
      Swift::String v40 = v12;
      sub_10010A088((uint64_t)v12, v25);
      if (v29(v26, 1, v28) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v28);
        char v32 = 0;
        unint64_t v31 = (uint64_t *)&unk_1006C0410;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v24, v26, v28);
        sub_10024AF14(&qword_1006B7010, (void (*)(uint64_t))&type metadata accessor for FMIPItem);
        char v32 = dispatch thunk of static Equatable.== infix(_:_:)();
        Swift::String v33 = *(void (**)(char *, uint64_t))(v27 + 8);
        v33(v24, v28);
        v33((char *)v25, v28);
        unint64_t v31 = (uint64_t *)&unk_1006AFE30;
      }
      uint64_t v12 = v40;
    }
    sub_100003F10((uint64_t)v12, v31);
  }
  else
  {
    char v32 = 0;
  }
  sub_100003F10((uint64_t)v17, &qword_1006B7000);
  sub_100003F10((uint64_t)v19, &qword_1006B7000);
  return v32 & 1;
}

uint64_t sub_1002498B0(uint64_t a1, uint64_t a2)
{
  return sub_100057504(a1, a2, type metadata accessor for FMBeaconSharingModuleEntry, type metadata accessor for FMBeaconSharingModuleEntry, (uint64_t (*)(char *, char *))sub_1002BB694);
}

uint64_t sub_1002498F0(uint64_t a1, uint64_t a2)
{
  uint64_t v38 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v37 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10005D034((uint64_t *)&unk_1006B6C40);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMUnknownItemsListDataSource.Entry(0) - 8;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v32 - v12;
  __chkstk_darwin(v11);
  unsigned int v17 = (char *)&v32 - v15;
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v18 || v40 == v41) {
    return 1;
  }
  NSString v34 = (char *)&v32 - v15;
  uint64_t v35 = v16;
  unint64_t v19 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v39 = *(void *)(v14 + 72);
  char v32 = (void (**)(char *, uint64_t, uint64_t))(v4 + 32);
  Swift::String v33 = (void (**)(uint64_t, uint64_t))(v4 + 8);
  while (1)
  {
    sub_1000577C4(v40 + v19, (uint64_t)v17, type metadata accessor for FMUnknownItemsListDataSource.Entry);
    sub_1000577C4(v41 + v19, (uint64_t)v13, type metadata accessor for FMUnknownItemsListDataSource.Entry);
    uint64_t v20 = (uint64_t)&v8[*(int *)(v6 + 48)];
    sub_1000577C4((uint64_t)v17, (uint64_t)v8, type metadata accessor for FMUnknownItemsListDataSource.Entry);
    sub_1000577C4((uint64_t)v13, v20, type metadata accessor for FMUnknownItemsListDataSource.Entry);
    uint64_t v21 = sub_10005D034((uint64_t *)&unk_1006BB350);
    uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48);
    int v23 = v22(v8, 2, v21);
    if (!v23) {
      break;
    }
    if (v23 == 1)
    {
      if (v22((char *)v20, 2, v21) != 1) {
        goto LABEL_17;
      }
    }
    else if (v22((char *)v20, 2, v21) != 2)
    {
      goto LABEL_17;
    }
    sub_100057C94((uint64_t)v8, type metadata accessor for FMUnknownItemsListDataSource.Entry);
LABEL_7:
    sub_100057C94((uint64_t)v13, type metadata accessor for FMUnknownItemsListDataSource.Entry);
    sub_100057C94((uint64_t)v17, type metadata accessor for FMUnknownItemsListDataSource.Entry);
    v19 += v39;
    if (!--v18) {
      return 1;
    }
  }
  uint64_t v24 = v13;
  uint64_t v25 = v35;
  sub_1000577C4((uint64_t)v8, v35, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  if (!v22((char *)v20, 2, v21))
  {
    uint64_t v26 = v6;
    uint64_t v28 = v37;
    uint64_t v27 = v38;
    (*v32)(v37, v20, v38);
    int v36 = static UUID.== infix(_:_:)();
    unint64_t v29 = *v33;
    int v30 = v28;
    uint64_t v6 = v26;
    (*v33)((uint64_t)v30, v27);
    v29(v25, v27);
    sub_100057C94((uint64_t)v8, type metadata accessor for FMUnknownItemsListDataSource.Entry);
    uint64_t v13 = v24;
    unsigned int v17 = v34;
    if ((v36 & 1) == 0) {
      goto LABEL_18;
    }
    goto LABEL_7;
  }
  (*v33)(v25, v38);
  uint64_t v13 = v24;
  unsigned int v17 = v34;
LABEL_17:
  sub_100003F10((uint64_t)v8, (uint64_t *)&unk_1006B6C40);
LABEL_18:
  sub_100057C94((uint64_t)v13, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  sub_100057C94((uint64_t)v17, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  return 0;
}

uint64_t sub_100249DA0(uint64_t a1, uint64_t a2)
{
  return sub_100057504(a1, a2, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel, (uint64_t (*)(char *, char *))sub_100359540);
}

uint64_t sub_100249DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = type metadata accessor for FMLocationAlertRowViewModel(0);
  uint64_t v4 = __chkstk_darwin(v41);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v36 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v36 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v36 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (uint64_t *)((char *)&v36 - v17);
  __chkstk_darwin(v16);
  uint64_t v21 = (uint64_t *)((char *)&v36 - v20);
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v22 || v42 == v43) {
    return 1;
  }
  unint64_t v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v37 = *(void *)(v19 + 72);
  uint64_t v38 = v15;
  uint64_t v39 = v12;
  uint64_t v40 = v6;
  while (1)
  {
    sub_1000577C4(v42 + v23, (uint64_t)v21, type metadata accessor for FMLocationAlertRowViewModel);
    sub_1000577C4(v43 + v23, (uint64_t)v18, type metadata accessor for FMLocationAlertRowViewModel);
    uint64_t v25 = v21[1];
    uint64_t v26 = v18[1];
    if (!v25) {
      break;
    }
    if (!v26) {
      goto LABEL_25;
    }
    if (*v21 == *v18 && v25 == v26) {
      goto LABEL_16;
    }
    char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_1000577C4((uint64_t)v21, (uint64_t)v15, type metadata accessor for FMLocationAlertRowViewModel);
    uint64_t v6 = v40;
    sub_1000577C4((uint64_t)v18, (uint64_t)v12, type metadata accessor for FMLocationAlertRowViewModel);
    if ((v28 & 1) == 0) {
      goto LABEL_26;
    }
LABEL_17:
    if (*((void *)v15 + 2) == *((void *)v12 + 2) && *((void *)v15 + 3) == *((void *)v12 + 3))
    {
      sub_100057C94((uint64_t)v15, type metadata accessor for FMLocationAlertRowViewModel);
      sub_100057C94((uint64_t)v12, type metadata accessor for FMLocationAlertRowViewModel);
      sub_1000577C4((uint64_t)v21, (uint64_t)v9, type metadata accessor for FMLocationAlertRowViewModel);
      sub_1000577C4((uint64_t)v18, (uint64_t)v6, type metadata accessor for FMLocationAlertRowViewModel);
    }
    else
    {
      char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_100057C94((uint64_t)v15, type metadata accessor for FMLocationAlertRowViewModel);
      sub_100057C94((uint64_t)v12, type metadata accessor for FMLocationAlertRowViewModel);
      sub_1000577C4((uint64_t)v21, (uint64_t)v9, type metadata accessor for FMLocationAlertRowViewModel);
      sub_1000577C4((uint64_t)v18, (uint64_t)v6, type metadata accessor for FMLocationAlertRowViewModel);
      if ((v29 & 1) == 0) {
        goto LABEL_27;
      }
    }
    uint64_t v30 = (uint64_t)v9;
    uint64_t v31 = FMFLocationAlertTriggerType.rawValue.getter();
    uint64_t v33 = v32;
    if (v31 == FMFLocationAlertTriggerType.rawValue.getter() && v33 == v34)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v6 = v40;
      sub_100057C94((uint64_t)v40, type metadata accessor for FMLocationAlertRowViewModel);
      sub_100057C94(v30, type metadata accessor for FMLocationAlertRowViewModel);
      sub_100057C94((uint64_t)v18, type metadata accessor for FMLocationAlertRowViewModel);
      sub_100057C94((uint64_t)v21, type metadata accessor for FMLocationAlertRowViewModel);
    }
    else
    {
      char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v40;
      sub_100057C94((uint64_t)v40, type metadata accessor for FMLocationAlertRowViewModel);
      sub_100057C94(v30, type metadata accessor for FMLocationAlertRowViewModel);
      sub_100057C94((uint64_t)v18, type metadata accessor for FMLocationAlertRowViewModel);
      sub_100057C94((uint64_t)v21, type metadata accessor for FMLocationAlertRowViewModel);
      if ((v24 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v15 = v38;
    v23 += v37;
    --v22;
    uint64_t v9 = (char *)v30;
    uint64_t v12 = v39;
    if (!v22) {
      return 1;
    }
  }
  if (!v26)
  {
LABEL_16:
    sub_1000577C4((uint64_t)v21, (uint64_t)v15, type metadata accessor for FMLocationAlertRowViewModel);
    sub_1000577C4((uint64_t)v18, (uint64_t)v12, type metadata accessor for FMLocationAlertRowViewModel);
    goto LABEL_17;
  }
LABEL_25:
  sub_1000577C4((uint64_t)v21, (uint64_t)v15, type metadata accessor for FMLocationAlertRowViewModel);
  sub_1000577C4((uint64_t)v18, (uint64_t)v12, type metadata accessor for FMLocationAlertRowViewModel);
LABEL_26:
  sub_100057C94((uint64_t)v15, type metadata accessor for FMLocationAlertRowViewModel);
  sub_100057C94((uint64_t)v12, type metadata accessor for FMLocationAlertRowViewModel);
  sub_1000577C4((uint64_t)v21, (uint64_t)v9, type metadata accessor for FMLocationAlertRowViewModel);
  sub_1000577C4((uint64_t)v18, (uint64_t)v6, type metadata accessor for FMLocationAlertRowViewModel);
LABEL_27:
  sub_100057C94((uint64_t)v6, type metadata accessor for FMLocationAlertRowViewModel);
  sub_100057C94((uint64_t)v9, type metadata accessor for FMLocationAlertRowViewModel);
  sub_100057C94((uint64_t)v18, type metadata accessor for FMLocationAlertRowViewModel);
  sub_100057C94((uint64_t)v21, type metadata accessor for FMLocationAlertRowViewModel);
  return 0;
}

uint64_t sub_10024A320(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_10024A3E8(uint64_t a1, uint64_t a2)
{
  return sub_10024A478(a1, a2, (uint64_t (*)(void))&type metadata accessor for FMIPItem, &qword_1006B7010, (void (*)(uint64_t))&type metadata accessor for FMIPItem, (uint64_t)&protocol conformance descriptor for FMIPItem);
}

uint64_t sub_10024A430(uint64_t a1, uint64_t a2)
{
  return sub_10024A478(a1, a2, (uint64_t (*)(void))&type metadata accessor for FMIPPlaySoundChannels, &qword_1006B36E8, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
}

uint64_t sub_10024A478(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v37 = a6;
  uint64_t v10 = a3(0);
  uint64_t v11 = __chkstk_darwin(v10);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16 == *(void *)(a2 + 16))
  {
    if (!v16 || a1 == a2)
    {
      char v24 = 1;
    }
    else
    {
      unint64_t v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
      uint64_t v18 = v12 + 16;
      uint64_t v34 = v19;
      uint64_t v35 = v13;
      uint64_t v30 = *(void *)(v18 + 56);
      uint64_t v31 = a2;
      uint64_t v36 = v18;
      uint64_t v32 = a1;
      uint64_t v33 = (void (**)(char *, uint64_t))(v18 - 8);
      uint64_t v20 = v16 - 1;
      do
      {
        uint64_t v21 = v34;
        v34(v15, a1 + v17, v10);
        uint64_t v22 = v15;
        unint64_t v23 = v35;
        v21(v35, a2 + v17, v10);
        sub_10024AF14(a4, a5);
        char v24 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v25 = *v33;
        uint64_t v26 = v23;
        uint64_t v15 = v22;
        (*v33)(v26, v10);
        v25(v22, v10);
        BOOL v28 = v20-- != 0;
        if ((v24 & 1) == 0) {
          break;
        }
        v17 += v30;
        a2 = v31;
        a1 = v32;
      }
      while (v28);
    }
  }
  else
  {
    char v24 = 0;
  }
  return v24 & 1;
}

uint64_t sub_10024A690(uint64_t a1, uint64_t a2)
{
  return sub_10024A478(a1, a2, (uint64_t (*)(void))&type metadata accessor for FMIPSafeLocation, &qword_1006B7018, (void (*)(uint64_t))&type metadata accessor for FMIPSafeLocation, (uint64_t)&protocol conformance descriptor for FMIPSafeLocation);
}

uint64_t sub_10024A6D8(uint64_t a1, uint64_t a2)
{
  return sub_100057504(a1, a2, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier, (uint64_t (*)(char *, char *))sub_100179AD8);
}

uint64_t sub_10024A718(uint64_t a1, uint64_t a2)
{
  return sub_10024A478(a1, a2, (uint64_t (*)(void))&type metadata accessor for FMIPBeaconShare, &qword_1006B7020, (void (*)(uint64_t))&type metadata accessor for FMIPBeaconShare, (uint64_t)&protocol conformance descriptor for FMIPBeaconShare);
}

uint64_t sub_10024A760(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMItemCellViewModel() - 8;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v11 || a1 == a2) {
    return 1;
  }
  uint64_t v12 = a2 + 32;
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32)) {
    return 0;
  }
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a2 + 40);
  uint64_t v15 = *(void *)(v13 + 16);
  if (v15 != *(void *)(v14 + 16)) {
    return 0;
  }
  uint64_t v16 = a1 + 32;
  uint64_t v17 = 1;
  uint64_t v26 = v12;
  uint64_t v27 = v8;
  uint64_t v25 = a1 + 32;
  while (!v15 || v13 == v14)
  {
LABEL_14:
    uint64_t result = v17 == v11;
    if (v17 != v11)
    {
      uint64_t v23 = 16 * v17;
      if (*(unsigned __int8 *)(v16 + 16 * v17) == *(unsigned __int8 *)(v12 + 16 * v17))
      {
        uint64_t v13 = *(void *)(v16 + v23 + 8);
        ++v17;
        uint64_t v14 = *(void *)(v12 + v23 + 8);
        uint64_t v15 = *(void *)(v13 + 16);
        if (v15 == *(void *)(v14 + 16)) {
          continue;
        }
      }
    }
    return result;
  }
  uint64_t v28 = v17;
  uint64_t v18 = v8;
  unint64_t v19 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v20 = 0;
  uint64_t v29 = *(void *)(v18 + 72);
  while (1)
  {
    uint64_t result = sub_1000577C4(v13 + v19, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
    if (v20 >= *(void *)(v14 + 16)) {
      break;
    }
    sub_1000577C4(v14 + v19, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
    char v22 = sub_10035C478((uint64_t)v10, (uint64_t)v7);
    sub_100057C94((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
    sub_100057C94((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
    if ((v22 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    ++v20;
    v19 += v29;
    if (v15 == v20)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v26;
      uint64_t v8 = v27;
      uint64_t v16 = v25;
      uint64_t v17 = v28;
      goto LABEL_14;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10024A9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMDeviceCellViewModel();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4 - 8);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v11 || a1 == a2) {
    return 1;
  }
  uint64_t v12 = a1 + 32;
  uint64_t v13 = a2 + 32;
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a2 + 32);
  uint64_t v16 = *(void *)(v14 + 16);
  if (v16 != *(void *)(v15 + 16)) {
    return 0;
  }
  uint64_t v17 = 1;
  uint64_t v27 = v11;
  uint64_t v28 = v5;
  uint64_t v25 = v13;
  uint64_t v26 = v12;
  while (!v16 || v14 == v15)
  {
LABEL_13:
    uint64_t result = v17 == v11;
    if (v17 != v11)
    {
      uint64_t v23 = 8 * v17++;
      uint64_t v14 = *(void *)(v12 + v23);
      uint64_t v15 = *(void *)(v13 + v23);
      uint64_t v16 = *(void *)(v14 + 16);
      if (v16 == *(void *)(v15 + 16)) {
        continue;
      }
    }
    return result;
  }
  uint64_t v29 = v17;
  unint64_t v18 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v19 = 0;
  uint64_t v20 = *(void *)(v5 + 72);
  while (1)
  {
    uint64_t result = sub_1000577C4(v14 + v18, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
    if (v19 >= *(void *)(v15 + 16)) {
      break;
    }
    sub_1000577C4(v15 + v18, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
    char v22 = sub_100324FDC((uint64_t)v10, (uint64_t)v8);
    sub_100057C94((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
    sub_100057C94((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
    if ((v22 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    ++v19;
    v18 += v20;
    if (v16 == v19)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = v27;
      uint64_t v5 = v28;
      uint64_t v13 = v25;
      uint64_t v12 = v26;
      uint64_t v17 = v29;
      goto LABEL_13;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10024AC34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a1 + 32);
    uint64_t v4 = (unsigned __int8 *)(a2 + 32);
    while (1)
    {
      unsigned int v7 = *v3++;
      uint64_t v6 = v7;
      unsigned int v9 = *v4++;
      uint64_t v8 = v9;
      unint64_t v10 = 0xEA00000000006D65;
      unint64_t v11 = 0x7449656D616E6572;
      switch(v6)
      {
        case 1:
          unint64_t v11 = 0x744965766F6D6572;
          break;
        case 2:
          unint64_t v10 = 0x800000010057DEF0;
          unint64_t v11 = 0xD000000000000010;
          break;
        case 3:
          unint64_t v11 = 0xD000000000000015;
          unint64_t v10 = 0x800000010057DF10;
          break;
        default:
          break;
      }
      unint64_t v12 = 0x7449656D616E6572;
      unint64_t v13 = 0xEA00000000006D65;
      switch(v8)
      {
        case 1:
          if (v11 == 0x744965766F6D6572) {
            goto LABEL_16;
          }
          goto LABEL_5;
        case 2:
          unint64_t v13 = 0x800000010057DEF0;
          unint64_t v12 = 0xD000000000000010;
          goto LABEL_15;
        case 3:
          unint64_t v13 = 0x800000010057DF10;
          if (v11 != 0xD000000000000015) {
            goto LABEL_5;
          }
          goto LABEL_16;
        default:
LABEL_15:
          if (v11 != v12) {
            goto LABEL_5;
          }
LABEL_16:
          if (v10 == v13)
          {
            swift_bridgeObjectRelease_n();
            if (!--v2) {
              return 1;
            }
          }
          else
          {
LABEL_5:
            char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v5 & 1) == 0) {
              return 0;
            }
            if (!--v2) {
              return 1;
            }
          }
          break;
      }
    }
  }
  return 1;
}

unint64_t sub_10024AE28()
{
  unint64_t result = qword_1006B6FF0;
  if (!qword_1006B6FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B6FF0);
  }
  return result;
}

uint64_t sub_10024AF14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10024AF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMSelectedSection();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10005D034(&qword_1006B6FF8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  unint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_1000577C4(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_1000577C4(a2, v11, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_19;
      }
      goto LABEL_39;
    case 2u:
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_39;
      }
      goto LABEL_19;
    case 3u:
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_39;
      }
      goto LABEL_19;
    case 4u:
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_39;
      }
      goto LABEL_19;
    case 5u:
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_39;
      }
      goto LABEL_19;
    case 6u:
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_39;
      }
      goto LABEL_19;
    case 7u:
      if (swift_getEnumCaseMultiPayload() != 7) {
        goto LABEL_39;
      }
      goto LABEL_19;
    case 8u:
      if (swift_getEnumCaseMultiPayload() != 8) {
        goto LABEL_39;
      }
LABEL_19:
      sub_100057C94(v11, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
      uint64_t v15 = (uint64_t)v10;
      goto LABEL_42;
    case 9u:
      if (swift_getEnumCaseMultiPayload() == 9) {
        goto LABEL_41;
      }
      goto LABEL_39;
    case 0xAu:
      if (swift_getEnumCaseMultiPayload() == 10) {
        goto LABEL_41;
      }
      goto LABEL_39;
    case 0xBu:
      if (swift_getEnumCaseMultiPayload() == 11) {
        goto LABEL_41;
      }
      goto LABEL_39;
    case 0xCu:
      if (swift_getEnumCaseMultiPayload() == 12) {
        goto LABEL_41;
      }
      goto LABEL_39;
    case 0xDu:
      if (swift_getEnumCaseMultiPayload() == 13) {
        goto LABEL_41;
      }
      goto LABEL_39;
    case 0xEu:
      if (swift_getEnumCaseMultiPayload() == 14) {
        goto LABEL_41;
      }
      goto LABEL_39;
    case 0xFu:
      if (swift_getEnumCaseMultiPayload() == 15) {
        goto LABEL_41;
      }
      goto LABEL_39;
    case 0x10u:
      if (swift_getEnumCaseMultiPayload() == 16) {
        goto LABEL_41;
      }
      goto LABEL_39;
    case 0x11u:
      if (swift_getEnumCaseMultiPayload() == 17) {
        goto LABEL_41;
      }
      goto LABEL_39;
    case 0x12u:
      if (swift_getEnumCaseMultiPayload() != 18) {
        goto LABEL_39;
      }
      goto LABEL_41;
    default:
      sub_1000577C4((uint64_t)v10, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
      uint64_t v12 = *(int *)(sub_10005D034(&qword_1006BAF00) + 48);
      uint64_t v13 = (uint64_t)&v6[v12];
      if (swift_getEnumCaseMultiPayload())
      {
        sub_100003F10((uint64_t)&v6[v12], (uint64_t *)&unk_1006AFE30);
        uint64_t v14 = type metadata accessor for FMIPDevice();
        (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v6, v14);
LABEL_39:
        sub_100003F10((uint64_t)v10, &qword_1006B6FF8);
        return 0;
      }
      else
      {
        sub_100003F10(v11 + v12, (uint64_t *)&unk_1006AFE30);
        uint64_t v17 = type metadata accessor for FMIPDevice();
        unint64_t v18 = *(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8);
        v18(v11, v17);
        sub_100003F10(v13, (uint64_t *)&unk_1006AFE30);
        v18((uint64_t)v6, v17);
LABEL_41:
        uint64_t v15 = (uint64_t)v10;
LABEL_42:
        sub_100057C94(v15, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
        return 1;
      }
  }
}

unsigned char *storeEnumTagSinglePayload for FMRestoreState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10024B4C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMRestoreState()
{
  return &type metadata for FMRestoreState;
}

unint64_t sub_10024B4FC()
{
  unint64_t result = qword_1006B7028;
  if (!qword_1006B7028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B7028);
  }
  return result;
}

void sub_10024B554()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMSelectedSection();
  __chkstk_darwin(v2);
  unsigned int v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000606BC(v5, (uint64_t)qword_1006D1E98);
  swift_retain_n();
  unsigned int v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v14 = v9;
    uint64_t v10 = v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
    swift_beginAccess();
    sub_10005782C(v10, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    uint64_t v11 = String.init<A>(describing:)();
    v13[1] = sub_1000606F4(v11, v12, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMSelectionController: previousSelectedSection update - %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_10024B8C0()
{
  uint64_t v1 = v0;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000606BC(v2, (uint64_t)qword_1006D1E98);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    v30[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode + 2)) {
      int v6 = 0x10000;
    }
    else {
      int v6 = 0;
    }
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode + 1)) {
      int v7 = 256;
    }
    else {
      int v7 = 0;
    }
    uint64_t v8 = sub_100231F6C(v7 | *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode) | v6);
    sub_1000606F4(v8, v9, v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMSelectionController: map configuration updated %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v10 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode);
  int v11 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode);
  int v12 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode + 1);
  int v13 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode + 2);
  id v14 = [self standardUserDefaults];
  uint64_t My = type metadata accessor for Feature.FindMy();
  v30[3] = My;
  v30[4] = sub_100005780();
  uint64_t v16 = sub_100042804(v30);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(My - 8) + 104))(v16, enum case for Feature.FindMy.springfieldIntegration(_:), My);
  char v17 = isFeatureEnabled(_:)();
  sub_10002CEFC((uint64_t)v30);
  if (v13) {
    int v18 = 0x10000;
  }
  else {
    int v18 = 0;
  }
  if (v12) {
    int v19 = 256;
  }
  else {
    int v19 = 0;
  }
  sub_1002323A8(v14, v17 & 1, v19 | v11 | v18);

  swift_beginAccess();
  unint64_t v20 = *(void *)(v1 + 16);
  if (!(v20 >> 62))
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v21) {
      goto LABEL_20;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v21 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_20:
  if (v21 >= 1)
  {
    for (uint64_t i = 0; i != v21; ++i)
    {
      if ((v20 & 0xC000000000000001) != 0)
      {
        uint64_t v28 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v28 = *(void *)(v20 + 8 * i + 32);
        swift_retain();
      }
      uint64_t v29 = v28 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v24 = *(void *)(v29 + 8);
        uint64_t ObjectType = swift_getObjectType();
        if (v10[2]) {
          int v26 = 0x10000;
        }
        else {
          int v26 = 0;
        }
        if (v10[1]) {
          int v27 = 256;
        }
        else {
          int v27 = 0;
        }
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 16))(v1, v27 | *v10 | v26, ObjectType, v24);
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_10024BCB8()
{
  uint64_t v1 = v0;
  uint64_t My = type metadata accessor for Feature.FindMy();
  uint64_t v20 = My;
  unint64_t v21 = sub_100005780();
  uint64_t v3 = sub_100042804(&v18);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(My - 8) + 104))(v3, enum case for Feature.FindMy.springfieldIntegration(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)();
  uint64_t result = sub_10002CEFC((uint64_t)&v18);
  if ((My & 1) == 0)
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_1000606BC(v5, (uint64_t)qword_1006D1E98);
    swift_retain_n();
    int v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = 0;
      *(_DWORD *)uint64_t v8 = 136315138;
      unint64_t v19 = 0xE000000000000000;
      type metadata accessor for FMDistanceCalculatorMeasurementSystem(0);
      _print_unlocked<A, B>(_:_:)();
      uint64_t v18 = sub_1000606F4(v18, v19, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMSelectionController: selected distance %s", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    if (qword_1006AE278 != -1) {
      swift_once();
    }
    uint64_t v9 = OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedUnit;
    [(id)qword_1006D2238 setMeasurementSystem:*(void *)(v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedUnit)];
    swift_beginAccess();
    unint64_t v10 = *(void *)(v1 + 16);
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v11 = result;
      if (result) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v11)
      {
LABEL_11:
        if (v11 < 1)
        {
          __break(1u);
          return result;
        }
        for (uint64_t i = 0; i != v11; ++i)
        {
          if ((v10 & 0xC000000000000001) != 0)
          {
            uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v15 = *(void *)(v10 + 8 * i + 32);
            swift_retain();
          }
          uint64_t v16 = v15 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
          if (swift_unknownObjectWeakLoadStrong())
          {
            uint64_t v13 = *(void *)(v16 + 8);
            uint64_t ObjectType = swift_getObjectType();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 24))(v1, *(void *)(v1 + v9), ObjectType, v13);
            swift_release();
            swift_unknownObjectRelease();
          }
          else
          {
            swift_release();
          }
        }
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10024C074()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10005D034(&qword_1006B20D0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  os_log_type_t v7 = (char *)&v16 - v6;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1000606BC(v8, (uint64_t)qword_1006D1E98);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMSelectionController: entering background", v11, 2u);
    swift_slowDealloc();
  }

  uint64_t v12 = type metadata accessor for FMSelectedSection();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  v13(v7, 1, 1, v12);
  uint64_t v14 = v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_10005782C(v14, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  v13(v5, 0, 1, v12);
  sub_100051C48((uint64_t)v7, (uint64_t)v5);
  sub_100003F10((uint64_t)v5, &qword_1006B20D0);
  return sub_100003F10((uint64_t)v7, &qword_1006B20D0);
}

uint64_t sub_10024C2B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10005D034(&qword_1006B20D0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  os_log_type_t v7 = (char *)&v16 - v6;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1000606BC(v8, (uint64_t)qword_1006D1E98);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMSelectionController: entering foreground", v11, 2u);
    swift_slowDealloc();
  }

  uint64_t v12 = v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_10005782C(v12, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  uint64_t v13 = type metadata accessor for FMSelectedSection();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  v14(v7, 0, 1, v13);
  v14(v5, 1, 1, v13);
  sub_100051C48((uint64_t)v7, (uint64_t)v5);
  sub_100003F10((uint64_t)v5, &qword_1006B20D0);
  return sub_100003F10((uint64_t)v7, &qword_1006B20D0);
}

uint64_t sub_10024C4F4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = swift_retain();
  a3(v4);

  return swift_release();
}

uint64_t sub_10024C538()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10024EA68(v0 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_10024EA68(v0 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_100003F10(v0 + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingAction, &qword_1006AF090);
  sub_10024EA68(v0 + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingActionInfo, type metadata accessor for FMPendingActionInfo);
  return v0;
}

uint64_t sub_10024C5F8()
{
  sub_10024C538();

  return swift_deallocClassInstance();
}

uint64_t sub_10024C650()
{
  return type metadata accessor for FMSelectionController(0);
}

uint64_t *sub_10024C658(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    os_log_type_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for FMIPSeparationLocation();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_10005D034(&qword_1006BA4E0);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = type metadata accessor for UUID();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_10005D034((uint64_t *)&unk_1006B1760);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    uint64_t v22 = a3[7];
    uint64_t v23 = (char *)v4 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = type metadata accessor for Date();
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      uint64_t v27 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    uint64_t v28 = a3[9];
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    uint64_t v29 = *(void **)((char *)a2 + v28);
    *(uint64_t *)((char *)v4 + v28) = (uint64_t)v29;
    uint64_t v30 = a3[10];
    uint64_t v31 = (char *)v4 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = type metadata accessor for FMIPUTAlertEvent();
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
    swift_bridgeObjectRetain();
    id v36 = v29;
    if (v35(v32, 1, v33))
    {
      uint64_t v37 = sub_10005D034(&qword_1006B7288);
      memcpy(v31, v32, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
  }
  return v4;
}

uint64_t sub_10024CAAC(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for FMIPSeparationLocation();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v10 = a1 + a2[7];
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  swift_bridgeObjectRelease();

  uint64_t v13 = a1 + a2[10];
  uint64_t v14 = type metadata accessor for FMIPUTAlertEvent();
  uint64_t v17 = *(void *)(v14 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v13, 1, v14);
  if (!result)
  {
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8);
    return v16(v13, v14);
  }
  return result;
}

void *sub_10024CD48(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for FMIPSeparationLocation();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_10005D034(&qword_1006BA4E0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_10005D034((uint64_t *)&unk_1006B1760);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = a3[7];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = type metadata accessor for Date();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    uint64_t v25 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v26 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  uint64_t v27 = *(void **)((char *)a2 + v26);
  *(void *)((char *)a1 + v26) = v27;
  uint64_t v28 = a3[10];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = type metadata accessor for FMIPUTAlertEvent();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  swift_bridgeObjectRetain();
  id v34 = v27;
  if (v33(v30, 1, v31))
  {
    uint64_t v35 = sub_10005D034(&qword_1006B7288);
    memcpy(v29, v30, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  }
  return a1;
}

void *sub_10024D14C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for FMIPSeparationLocation();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10005D034(&qword_1006BA4E0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_12:
    uint64_t v23 = sub_10005D034((uint64_t *)&unk_1006B1760);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_13:
  uint64_t v24 = a3[7];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = type metadata accessor for Date();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  int v30 = v29(v25, 1, v27);
  int v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
LABEL_18:
    uint64_t v32 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
    memcpy(v25, v26, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v25, v26, v27);
LABEL_19:
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[9];
  id v34 = *(void **)((char *)a1 + v33);
  uint64_t v35 = *(void **)((char *)a2 + v33);
  *(void *)((char *)a1 + v33) = v35;
  id v36 = v35;

  uint64_t v37 = a3[10];
  uint64_t v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  uint64_t v40 = type metadata accessor for FMIPUTAlertEvent();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
  int v43 = v42(v38, 1, v40);
  int v44 = v42(v39, 1, v40);
  if (!v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 24))(v38, v39, v40);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v41 + 8))(v38, v40);
    goto LABEL_24;
  }
  if (v44)
  {
LABEL_24:
    uint64_t v45 = sub_10005D034(&qword_1006B7288);
    memcpy(v38, v39, *(void *)(*(void *)(v45 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  return a1;
}

_OWORD *sub_10024D6E4(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for FMIPSeparationLocation();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_10005D034(&qword_1006BA4E0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[6];
  int v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_10005D034((uint64_t *)&unk_1006B1760);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = type metadata accessor for Date();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v24 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v24) = *(void *)((char *)a2 + v24);
  uint64_t v25 = a3[10];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = type metadata accessor for FMIPUTAlertEvent();
  uint64_t v29 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    uint64_t v30 = sub_10005D034(&qword_1006B7288);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  return a1;
}

void *sub_10024DACC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for FMIPSeparationLocation();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_10005D034(&qword_1006BA4E0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = type metadata accessor for UUID();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
LABEL_12:
    uint64_t v24 = sub_10005D034((uint64_t *)&unk_1006B1760);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v17, v18, v19);
LABEL_13:
  uint64_t v25 = a3[7];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = type metadata accessor for Date();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  int v31 = v30(v26, 1, v28);
  int v32 = v30(v27, 1, v28);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
LABEL_18:
    uint64_t v33 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
    memcpy(v26, v27, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 40))(v26, v27, v28);
LABEL_19:
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[9];
  uint64_t v35 = *(void **)((char *)a1 + v34);
  *(void *)((char *)a1 + v34) = *(void *)((char *)a2 + v34);

  uint64_t v36 = a3[10];
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = type metadata accessor for FMIPUTAlertEvent();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48);
  int v42 = v41(v37, 1, v39);
  int v43 = v41(v38, 1, v39);
  if (!v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 40))(v37, v38, v39);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v37, v39);
    goto LABEL_24;
  }
  if (v43)
  {
LABEL_24:
    uint64_t v44 = sub_10005D034(&qword_1006B7288);
    memcpy(v37, v38, *(void *)(*(void *)(v44 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  return a1;
}

uint64_t sub_10024E048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10024E05C);
}

uint64_t sub_10024E05C(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  uint64_t v9 = sub_10005D034(&qword_1006BA4E0);
  if (*(_DWORD *)(*(void *)(v9 - 8) + 84) == a2)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)(v9 - 8);
    uint64_t v12 = a3[5];
LABEL_13:
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    return v15(a1 + v12, a2, v10);
  }
  uint64_t v13 = sub_10005D034((uint64_t *)&unk_1006B1760);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v10 = v13;
    uint64_t v11 = *(void *)(v13 - 8);
    uint64_t v12 = a3[6];
    goto LABEL_13;
  }
  uint64_t v14 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v10 = v14;
    uint64_t v11 = *(void *)(v14 - 8);
    uint64_t v12 = a3[7];
    goto LABEL_13;
  }
  uint64_t v16 = sub_10005D034(&qword_1006B7288);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[10];

  return v17(v19, a2, v18);
}

uint64_t sub_10024E23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10024E250);
}

uint64_t sub_10024E250(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
    return result;
  }
  uint64_t v8 = sub_10005D034(&qword_1006BA4E0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_10005D034((uint64_t *)&unk_1006B1760);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_9;
  }
  uint64_t v13 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_9;
  }
  uint64_t v15 = sub_10005D034(&qword_1006B7288);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = v5 + a4[10];

  return v16(v18, a2, a2, v17);
}

uint64_t *sub_10024E424(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10024E574(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    uint64_t v3 = type metadata accessor for UUID();
    unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_10024E5F0(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for UUID();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_10024E6FC(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10024EA68((uint64_t)a1, type metadata accessor for FMSelectionPendingAction);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for UUID();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_10024E82C(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for UUID();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_10024E938(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10024EA68((uint64_t)a1, type metadata accessor for FMSelectionPendingAction);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for UUID();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10024EA68(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10024EAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for FMSelectionSubscription();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber + 8) = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectRetain();
  UUID.init()();
  *(void *)(v6 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber + 8) = a4;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  return v6;
}

uint64_t sub_10024EBE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v29 = *(void *)(v4 - 8);
  uint64_t v30 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = type metadata accessor for FMSelectionPendingAction(0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v16 = sub_10005D034(&qword_1006B7430);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v19[*(int *)(v17 + 56)];
  sub_10005782C(a1, (uint64_t)v19, type metadata accessor for FMSelectionPendingAction);
  sub_10005782C(a2, v20, type metadata accessor for FMSelectionPendingAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10005782C((uint64_t)v19, (uint64_t)v13, type metadata accessor for FMSelectionPendingAction);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_6;
      }
      uint64_t v22 = v29;
      uint64_t v21 = v30;
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v7, v20, v30);
      char v23 = static UUID.== infix(_:_:)();
      uint64_t v24 = *(void (**)(char *, uint64_t))(v22 + 8);
      v24(v7, v21);
      v24(v13, v21);
      goto LABEL_29;
    case 2u:
      if (swift_getEnumCaseMultiPayload() == 2) {
        goto LABEL_8;
      }
      goto LABEL_26;
    case 3u:
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_26;
      }
      goto LABEL_8;
    case 4u:
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_26;
      }
      goto LABEL_8;
    case 5u:
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_26;
      }
      goto LABEL_8;
    case 6u:
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_26;
      }
      goto LABEL_8;
    case 7u:
      if (swift_getEnumCaseMultiPayload() != 7) {
        goto LABEL_26;
      }
      goto LABEL_8;
    case 8u:
      if (swift_getEnumCaseMultiPayload() != 8) {
        goto LABEL_26;
      }
      goto LABEL_8;
    case 9u:
      if (swift_getEnumCaseMultiPayload() != 9) {
        goto LABEL_26;
      }
      goto LABEL_8;
    case 0xAu:
      if (swift_getEnumCaseMultiPayload() != 10) {
        goto LABEL_26;
      }
      goto LABEL_8;
    case 0xBu:
      if (swift_getEnumCaseMultiPayload() != 11) {
        goto LABEL_26;
      }
LABEL_8:
      sub_10024EA68((uint64_t)v19, type metadata accessor for FMSelectionPendingAction);
      char v23 = 1;
      break;
    default:
      sub_10005782C((uint64_t)v19, (uint64_t)v15, type metadata accessor for FMSelectionPendingAction);
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v13 = v15;
LABEL_6:
        (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v30);
LABEL_26:
        sub_100003F10((uint64_t)v19, &qword_1006B7430);
        char v23 = 0;
      }
      else
      {
        uint64_t v27 = v29;
        uint64_t v26 = v30;
        (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v9, v20, v30);
        char v23 = static UUID.== infix(_:_:)();
        uint64_t v28 = *(void (**)(char *, uint64_t))(v27 + 8);
        v28(v9, v26);
        v28(v15, v26);
LABEL_29:
        sub_10024EA68((uint64_t)v19, type metadata accessor for FMSelectionPendingAction);
      }
      break;
  }
  return v23 & 1;
}

double sub_10024F0A4()
{
  uint64_t v0 = self;
  id v1 = [v0 labelColor];
  id v2 = [v0 tertiaryLabelColor];
  qword_1006D1A08 = (uint64_t)v1;
  qword_1006D1A10 = (uint64_t)v2;
  double result = -6.0;
  xmmword_1006D1A18 = xmmword_100561CB0;
  return result;
}

id sub_10024F118()
{
  int v1 = v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_showActivityIndicator];
  id v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicator];
  if (v1 == 1)
  {
    [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicator]];
    uint64_t v3 = self;
    sub_10004FCE4();
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 activateConstraints:isa];

    swift_bridgeObjectRetain();
    v5.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 deactivateConstraints:v5.super.isa];
    uint64_t v6 = &selRef_startAnimating;
  }
  else
  {
    [*(id *)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicator] removeFromSuperview];
    uint64_t v7 = self;
    sub_10004FCE4();
    swift_bridgeObjectRetain();
    Class v8 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v7 activateConstraints:v8];

    swift_bridgeObjectRetain();
    v5.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v7 deactivateConstraints:v5.super.isa];
    uint64_t v6 = &selRef_stopAnimating;
  }

  [v2 setHidden:v1 ^ 1u];
  uint64_t v9 = *v6;

  return [v2 v9];
}

id sub_10024F330()
{
  uint64_t v23 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_separator;
  int v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_separator];
  id v2 = self;
  id v3 = v1;
  id v4 = [v2 tertiaryLabelColor];
  [v3 setBackgroundColor:v4];

  uint64_t v5 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_titleLabel;
  uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_titleLabel];
  uint64_t v7 = self;
  id v8 = v6;
  id v9 = [v7 preferredFontForTextStyle:UIFontTextStyleBody];
  [v8 setFont:v9];

  [*(id *)&v0[v5] setNumberOfLines:0];
  uint64_t v10 = qword_1006AE090;
  id v11 = *(id *)&v0[v5];
  if (v10 != -1) {
    swift_once();
  }
  [v11 setTextColor:qword_1006D1A08];

  [*(id *)&v0[v5] setAdjustsFontForContentSizeCategory:1];
  id v12 = *(id *)&v0[v5];
  NSString v13 = String._bridgeToObjectiveC()();
  [v12 setAccessibilityIdentifier:v13];

  uint64_t v14 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_detailLabel;
  id v15 = *(id *)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_detailLabel];
  id v16 = [v7 preferredFontForTextStyle:UIFontTextStyleBody];
  [v15 setFont:v16];

  [*(id *)&v0[v14] setTextAlignment:2];
  [*(id *)&v0[v14] setNumberOfLines:0];
  [*(id *)&v0[v14] setTextColor:qword_1006D1A10];
  [*(id *)&v0[v14] setAdjustsFontForContentSizeCategory:1];
  id v17 = *(id *)&v0[v14];
  NSString v18 = String._bridgeToObjectiveC()();
  [v17 setAccessibilityIdentifier:v18];

  uint64_t v19 = *(void **)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicator];
  [v19 setHidden:1];
  uint64_t v20 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_horizontalStackView;
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_horizontalStackView] setAxis:0];
  [*(id *)&v0[v20] setDistribution:2];
  [*(id *)&v0[v20] setAlignment:4];
  [*(id *)&v0[v20] addArrangedSubview:*(void *)&v0[v5]];
  [*(id *)&v0[v20] addArrangedSubview:*(void *)&v0[v14]];
  [*(id *)&v0[v20] addArrangedSubview:v19];
  [v0 addSubview:*(void *)&v0[v20]];
  [v0 addSubview:v19];
  uint64_t v21 = *(void *)&v0[v23];

  return [v0 addSubview:v21];
}

id sub_10024F6C8()
{
  int v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_horizontalStackView;
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_horizontalStackView] setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v56 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_separator;
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_separator] setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicator];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10055EFD0;
  id v5 = [v3 trailingAnchor];
  id v6 = [v1 trailingAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];

  *(void *)(v4 + 32) = v7;
  id v8 = [v3 widthAnchor];
  if (qword_1006AE090 != -1) {
    swift_once();
  }
  id v9 = objc_retainAutoreleasedReturnValue(objc_msgSend(v8, "constraintEqualToConstant:", *((double *)&xmmword_1006D1A18
                                                                                         + 1)));

  *(void *)(v4 + 40) = v9;
  id v10 = [v3 centerYAnchor];
  id v11 = [v1 centerYAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11];

  *(void *)(v4 + 48) = v12;
  id v13 = [*(id *)&v1[v2] topAnchor];
  id v14 = [v1 topAnchor];
  if (qword_1006AE460 != -1) {
    swift_once();
  }
  id v15 = [v13 constraintEqualToAnchor:v14 constant:*(double *)&xmmword_1006D2900];

  *(void *)(v4 + 56) = v15;
  id v16 = [*(id *)&v1[v2] bottomAnchor];
  id v17 = [v1 bottomAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17 constant:-*(double *)&xmmword_1006D2900];

  *(void *)(v4 + 64) = v18;
  id v19 = [*(id *)&v1[v2] leadingAnchor];
  id v20 = [v1 leadingAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20];

  *(void *)(v4 + 72) = v21;
  id v22 = [*(id *)&v1[v2] trailingAnchor];
  id v23 = [v3 leadingAnchor];
  id v24 = [v22 constraintEqualToAnchor:v23 constant:*(double *)&xmmword_1006D1A18];

  *(void *)(v4 + 80) = v24;
  specialized Array._endMutation()();
  *(void *)&v1[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicatorShowingContraints] = v4;
  swift_bridgeObjectRelease();
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_10055B950;
  id v26 = [*(id *)&v1[v2] topAnchor];
  id v27 = [v1 topAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27 constant:*(double *)&xmmword_1006D2900];

  *(void *)(v25 + 32) = v28;
  id v29 = [*(id *)&v1[v2] bottomAnchor];
  id v30 = [v1 bottomAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30 constant:-*(double *)&xmmword_1006D2900];

  *(void *)(v25 + 40) = v31;
  id v32 = [*(id *)&v1[v2] leadingAnchor];
  id v33 = [v1 leadingAnchor];
  id v34 = [v32 constraintEqualToAnchor:v33];

  *(void *)(v25 + 48) = v34;
  id v35 = [*(id *)&v1[v2] trailingAnchor];
  id v36 = [v1 trailingAnchor];
  id v37 = [v35 constraintEqualToAnchor:v36];

  *(void *)(v25 + 56) = v37;
  specialized Array._endMutation()();
  *(void *)&v1[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicatorHiddenConstraints] = v25;
  swift_bridgeObjectRelease();
  uint64_t v38 = self;
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_10055B950;
  id v40 = [*(id *)&v1[v56] leadingAnchor];
  id v41 = [v1 leadingAnchor];
  id v42 = [v40 constraintEqualToAnchor:v41];

  *(void *)(v39 + 32) = v42;
  id v43 = [*(id *)&v1[v56] trailingAnchor];
  id v44 = [v1 trailingAnchor];
  if (qword_1006AE228 != -1) {
    swift_once();
  }
  id v45 = [v43 constraintEqualToAnchor:v44 constant:*(double *)&qword_1006D20C8];

  *(void *)(v39 + 40) = v45;
  id v46 = [*(id *)&v1[v56] bottomAnchor];
  id v47 = [v1 bottomAnchor];
  id v48 = [v46 constraintEqualToAnchor:v47];

  *(void *)(v39 + 48) = v48;
  id v49 = [*(id *)&v1[v56] heightAnchor];
  id v50 = [self mainScreen];
  [v50 scale];
  double v52 = v51;

  id v53 = [v49 constraintEqualToConstant:1.0 / v52];
  *(void *)(v39 + 56) = v53;
  specialized Array._endMutation()();
  sub_10004FCE4();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v38 activateConstraints:isa];

  v1[OBJC_IVAR____TtC6FindMy15FMDetailRowView_showActivityIndicator] = 0;

  return sub_10024F118();
}

id sub_10024FF14()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMDetailRowView();
  return [super dealloc];
}

uint64_t type metadata accessor for FMDetailRowView()
{
  return self;
}

id sub_100250044()
{
  int v1 = &v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_identifier];
  *(void *)int v1 = 0;
  *((void *)v1 + 1) = 0;
  uint64_t v2 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_horizontalStackView;
  id v3 = objc_allocWithZone((Class)UIStackView);
  uint64_t v4 = v0;
  *(void *)&v0[v2] = [v3 init];
  uint64_t v5 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_separator;
  *(void *)&v4[v5] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v6 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_titleLabel;
  *(void *)&v4[v6] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v7 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_detailLabel;
  *(void *)&v4[v7] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v8 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicator;
  *(void *)&v4[v8] = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithActivityIndicatorStyle:100];
  *(void *)&v4[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicatorShowingContraints] = _swiftEmptyArrayStorage;
  *(void *)&v4[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicatorHiddenConstraints] = _swiftEmptyArrayStorage;
  id v9 = &v4[OBJC_IVAR____TtC6FindMy15FMDetailRowView_title];
  *(void *)id v9 = 0;
  *((void *)v9 + 1) = 0;
  id v10 = &v4[OBJC_IVAR____TtC6FindMy15FMDetailRowView_detailText];
  *(void *)id v10 = 0;
  *((void *)v10 + 1) = 0;
  v4[OBJC_IVAR____TtC6FindMy15FMDetailRowView_isEnabled] = 1;
  v4[OBJC_IVAR____TtC6FindMy15FMDetailRowView_separated] = 1;
  v4[OBJC_IVAR____TtC6FindMy15FMDetailRowView_showActivityIndicator] = 0;

  v13.receiver = v4;
  v13.super_class = (Class)type metadata accessor for FMDetailRowView();
  id v11 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_10024F330();
  sub_10024F6C8();

  return v11;
}

void sub_1002501EC()
{
  int v1 = &v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_identifier];
  void *v1 = 0;
  v1[1] = 0;
  uint64_t v2 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_horizontalStackView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v3 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_separator;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v4 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_titleLabel;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v5 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_detailLabel;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v6 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicator;
  *(void *)&v0[v6] = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithActivityIndicatorStyle:100];
  *(void *)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicatorShowingContraints] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicatorHiddenConstraints] = _swiftEmptyArrayStorage;
  uint64_t v7 = &v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_title];
  *uint64_t v7 = 0;
  v7[1] = 0;
  uint64_t v8 = &v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_detailText];
  *uint64_t v8 = 0;
  v8[1] = 0;
  v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_isEnabled] = 1;
  v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_separated] = 1;
  v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_showActivityIndicator] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_100250490()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMR1Transition();
  [super dealloc];
}

uint64_t type metadata accessor for FMR1Transition()
{
  return self;
}

void sub_1002504E8(void *a1)
{
  id v1 = [a1 viewControllerForKey:UITransitionContextFromViewControllerKey];
  if (v1)
  {
    objc_super v2 = v1;
    while (1)
    {
      id v3 = [v2 view];
      if (!v3) {
        break;
      }
      uint64_t v4 = v3;
      type metadata accessor for FMPassthroughView();
      id v14 = v4;
      uint64_t v5 = v14;
      while (!swift_dynamicCastClass())
      {
        id v6 = [v14 superview];

        uint64_t v5 = v6;
        if (!v6)
        {

          return;
        }
      }

      id v7 = [v2 view];
      if (!v7) {
        goto LABEL_20;
      }
      id v8 = v7;
      id v9 = v8;
      while (1)
      {
        uint64_t v10 = swift_dynamicCastClass();
        if (v10) {
          break;
        }
        id v11 = [v8 superview];

        id v9 = v11;
        if (!v11)
        {
          id v9 = v8;
          goto LABEL_14;
        }
      }
      uint64_t v12 = v10;

      *(unsigned char *)(v12 + OBJC_IVAR____TtC6FindMy17FMPassthroughView_enabled) = 0;
LABEL_14:

      id v13 = [v2 presentingViewController];
      objc_super v2 = v13;
      if (!v13) {
        return;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
  }
}

void sub_1002506B8(void *a1)
{
  id v1 = [a1 viewControllerForKey:UITransitionContextToViewControllerKey];
  if (v1)
  {
    objc_super v2 = v1;
    while (1)
    {
      id v3 = [v2 view];
      if (!v3) {
        break;
      }
      uint64_t v4 = v3;
      type metadata accessor for FMPassthroughView();
      id v14 = v4;
      uint64_t v5 = v14;
      while (!swift_dynamicCastClass())
      {
        id v6 = [v14 superview];

        uint64_t v5 = v6;
        if (!v6)
        {

          return;
        }
      }

      id v7 = [v2 view];
      if (!v7) {
        goto LABEL_20;
      }
      id v8 = v7;
      id v9 = v8;
      while (1)
      {
        uint64_t v10 = swift_dynamicCastClass();
        if (v10) {
          break;
        }
        id v11 = [v8 superview];

        id v9 = v11;
        if (!v11)
        {
          id v9 = v8;
          goto LABEL_14;
        }
      }
      uint64_t v12 = v10;

      *(unsigned char *)(v12 + OBJC_IVAR____TtC6FindMy17FMPassthroughView_enabled) = 1;
LABEL_14:

      id v13 = [v2 presentingViewController];
      objc_super v2 = v13;
      if (!v13) {
        return;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
  }
}

uint64_t sub_1002508E8()
{
  return swift_unknownObjectWeakDestroy();
}

id sub_1002508F8()
{
  return sub_100251C60(type metadata accessor for FMAccessoryPairingFailedCard);
}

uint64_t type metadata accessor for FMAccessoryPairingFailedCard()
{
  return self;
}

void sub_100250944(uint64_t a1)
{
  objc_super v2 = v1;
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006AF820);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B786C(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000AFBAC((uint64_t)v6);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    id v11 = [self defaultWorkspace];
    if (v11)
    {
      id v13 = v11;
      URL._bridgeToObjectiveC()(v12);
      id v15 = v14;
      sub_1000535D0((uint64_t)_swiftEmptyArrayStorage);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v13 openSensitiveURL:v15 withOptions:isa];
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  *(void *)(v17 + 24) = 0;
  aBlock[4] = sub_100252CF8;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10062ED50;
  id v18 = _Block_copy(aBlock);
  swift_release();
  [v2 dismissViewControllerAnimated:1 completion:v18];
  _Block_release(v18);
}

void sub_100250BF4(uint64_t a1)
{
  objc_super v2 = v1;
  uint64_t v4 = FMIPAccessoryError.localizedAlertTitle.getter();
  id v6 = v5;
  uint64_t v7 = self;
  id v8 = [v7 mainBundle];
  v27._object = (void *)0x800000010057EF80;
  v9._uint64_t countAndFlagsBits = v4;
  v9._object = v6;
  v10.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v10.value._object = (void *)0x800000010057EF60;
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v27._uint64_t countAndFlagsBits = 0xD000000000000018;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v27);
  swift_bridgeObjectRelease();

  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setTitle:v12];

  uint64_t v13 = FMIPAccessoryError.localizedDescription.getter();
  id v15 = v14;
  id v16 = [v7 mainBundle];
  v28._object = (void *)0x800000010057EF80;
  v17._uint64_t countAndFlagsBits = v13;
  v17._object = v15;
  v18.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v18.value._object = (void *)0x800000010057EF60;
  v19._uint64_t countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v28._uint64_t countAndFlagsBits = 0xD000000000000018;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v28);
  swift_bridgeObjectRelease();

  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setSubtitle:v20];

  id v21 = sub_100251F4C(a1);
  if (v21)
  {
    id v22 = v21;
    sub_10005D034(&qword_1006AF2D0);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_10055BD30;
    *(void *)(v23 + 32) = v22;
    specialized Array._endMutation()();
    sub_10014B9EC();
    id v24 = v22;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v2 setImages:isa];
  }
}

void sub_100250E68(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMIPAccessoryError();
  uint64_t v52 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FMAccessoryDiscoveryAndPairingFailedCard.ViewModel();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10005D034((uint64_t *)&unk_1006AF820);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  Swift::String v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v47 - v12;
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = __chkstk_darwin(v14);
  double v51 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  id v53 = (char *)&v47 - v18;
  uint64_t v19 = sub_10025170C();
  if (!v20) {
    goto LABEL_12;
  }
  uint64_t v49 = v19;
  uint64_t v50 = v20;
  sub_1000B786C(a1 + *(int *)(v5 + 20), (uint64_t)v11);
  sub_100251D48(a1, (uint64_t)v7);
  id v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v21(v11, 1, v14) == 1)
  {
    uint64_t v48 = v15;
    uint64_t v22 = v52;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v4, v7, v2);
    int v23 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v4, v2);
    if (v23 == enum case for FMIPAccessoryError.bluetoothDisabled(_:))
    {
      URL.init(string:)();
      uint64_t v15 = v48;
    }
    else
    {
      uint64_t v15 = v48;
      if (v23 == enum case for FMIPAccessoryError.invalidAccountState(_:))
      {
        URL.init(string:)();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v13, 1, 1, v14);
        (*(void (**)(char *, uint64_t))(v52 + 8))(v4, v2);
      }
    }
    sub_100251DAC((uint64_t)v7);
    sub_1000AFBAC((uint64_t)v11);
    if (v21(v13, 1, v14) == 1) {
      goto LABEL_11;
    }
    id v24 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
LABEL_14:
    id v29 = v51;
    id v30 = v53;
    v24(v53, v13, v14);
    uint64_t v31 = swift_allocObject();
    uint64_t v52 = v31;
    id v26 = v54;
    swift_unknownObjectWeakInit();
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v29, v30, v14);
    unint64_t v32 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v31;
    v24((char *)(v33 + v32), v29, v14);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Swift::String v59 = sub_100251ED4;
    uint64_t v60 = v33;
    aBlock = _NSConcreteStackBlock;
    uint64_t v56 = 1107296256;
    Swift::String v57 = sub_10000841C;
    Swift::String_optional v58 = &unk_10062ECB0;
    id v35 = _Block_copy(&aBlock);
    Swift::String v28 = &off_100686000;
    id v36 = [self actionWithTitle:v34 style:0 handler:v35];

    _Block_release(v35);
    swift_release();
    Swift::String v27 = &off_100686000;
    id v37 = [v26 addAction:v36];

    swift_release();
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v15 + 8))(v53, v14);
    swift_release();
    uint64_t v25 = 1;
    goto LABEL_15;
  }
  sub_100251DAC((uint64_t)v7);
  id v24 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v24(v13, v11, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  if (v21(v13, 1, v14) != 1) {
    goto LABEL_14;
  }
LABEL_11:
  swift_bridgeObjectRelease();
  sub_1000AFBAC((uint64_t)v13);
LABEL_12:
  uint64_t v25 = 0;
  id v26 = v54;
  Swift::String v27 = &off_100686000;
  Swift::String v28 = &off_100686000;
LABEL_15:
  id v38 = [self mainBundle];
  v39.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v40._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  v61._object = (void *)0x800000010057EF80;
  v40._object = (void *)0x800000010058E200;
  v39.value._object = (void *)0x800000010057EF60;
  v41._uint64_t countAndFlagsBits = 0;
  v41._object = (void *)0xE000000000000000;
  v61._uint64_t countAndFlagsBits = 0xD000000000000018;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v40, v39, (NSBundle)v38, v41, v61);

  uint64_t v42 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain_n();
  swift_bridgeObjectRetain();
  NSString v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Swift::String v59 = sub_100251D40;
  uint64_t v60 = v42;
  aBlock = _NSConcreteStackBlock;
  uint64_t v56 = 1107296256;
  Swift::String v57 = sub_10000841C;
  Swift::String_optional v58 = &unk_10062EC60;
  id v44 = _Block_copy(&aBlock);
  id v45 = [self v28[222] v43 v25 v44];

  _Block_release(v44);
  swift_release();
  id v46 = [v26 v27[223] v45];

  swift_bridgeObjectRelease();
  swift_release_n();
}

uint64_t sub_100251660()
{
  return swift_unknownObjectWeakDestroy();
}

id sub_100251670()
{
  return sub_100251C60(type metadata accessor for FMAccessoryDiscoveryFailedCard);
}

uint64_t type metadata accessor for FMAccessoryDiscoveryFailedCard()
{
  return self;
}

void sub_1002516BC()
{
  qword_1006D1A28 = 0x4049000000000000;
}

uint64_t sub_10025170C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPAccessoryError();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for FMIPAccessoryError.bluetoothDisabled(_:))
  {
    id v7 = [self mainBundle];
    unint64_t v8 = 0xD000000000000018;
    unint64_t v9 = 0xD000000000000036;
    unint64_t v16 = 0x800000010057EF80;
    uint64_t v10 = "ADD_ACCESSORY_PAIRING_BLUETOOTH_DISABLED_ACTION_BUTTON";
  }
  else if (v6 == enum case for FMIPAccessoryError.invalidAccountState(_:))
  {
    id v7 = [self mainBundle];
    unint64_t v8 = 0xD000000000000018;
    unint64_t v9 = 0xD00000000000002CLL;
    unint64_t v16 = 0x800000010057EF80;
    uint64_t v10 = "ADD_ACCESSORY_PAIRING_ACCOUNT_UPGRADE_BUTTON";
  }
  else
  {
    if (v6 != enum case for FMIPAccessoryError.accessoryBatteryTooLow(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return 0;
    }
    id v7 = [self mainBundle];
    unint64_t v8 = 0xD000000000000018;
    unint64_t v9 = 0xD000000000000033;
    unint64_t v16 = 0x800000010057EF80;
    uint64_t v10 = "ADD_ACCESSORY_PAIRING_LOW_BATTERY_LEARN_MORE_BUTTON";
  }
  unint64_t v11 = (unint64_t)(v10 - 32) | 0x8000000000000000;
  v12.value._object = (void *)0x800000010057EF60;
  v12.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v9, v12, (NSBundle)v7, v13, *(Swift::String *)&v8)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_10025198C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006AF820);
  __chkstk_darwin(v4 - 8);
  int v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    unint64_t v8 = (void *)result;
    uint64_t v9 = type metadata accessor for URL();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v6, a3, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    (*(void (**)(char *))((swift_isaMask & *v8) + 0x50))(v6);

    return sub_1000AFBAC((uint64_t)v6);
  }
  return result;
}

void sub_100251B0C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = 0;
    *(void *)(v2 + 24) = 0;
    aBlock[4] = sub_10007245C;
    aBlock[5] = v2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003C410;
    aBlock[3] = &unk_10062ED00;
    uint64_t v3 = _Block_copy(aBlock);
    swift_release();
    [v1 dismissViewControllerAnimated:1 completion:v3];
    _Block_release(v3);
  }
}

id sub_100251C48()
{
  return sub_100251C60(type metadata accessor for FMAccessoryDiscoveryAndPairingFailedCard);
}

id sub_100251C60(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  [super dealloc];
}

uint64_t type metadata accessor for FMAccessoryDiscoveryAndPairingFailedCard()
{
  return self;
}

uint64_t type metadata accessor for FMAccessoryDiscoveryAndPairingFailedCard.ViewModel()
{
  uint64_t result = qword_1006B76E8;
  if (!qword_1006B76E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100251D08()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100251D40()
{
}

uint64_t sub_100251D48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMAccessoryDiscoveryAndPairingFailedCard.ViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100251DAC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMAccessoryDiscoveryAndPairingFailedCard.ViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100251E08()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100251ED4(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10025198C(a1, v4, v5);
}

id sub_100251F4C(uint64_t a1)
{
  uint64_t v2 = 0xD00000000000001BLL;
  uint64_t v3 = type metadata accessor for FMIPAccessoryError();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v7 == enum case for FMIPAccessoryError.bluetoothDisabled(_:))
  {
    unint64_t v8 = "bluetooth.slash.circle.fill";
  }
  else if (v7 == enum case for FMIPAccessoryError.invalidAccountState(_:))
  {
    uint64_t v2 = 0xD000000000000010;
    unint64_t v8 = "lock.shield.fill";
  }
  else
  {
    if (v7 == enum case for FMIPAccessoryError.accessoryBatteryTooLow(_:))
    {
      unint64_t v9 = 0xEA00000000003532;
      uint64_t v2 = 0x2E79726574746162;
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    unint64_t v8 = "exclamationmark.circle.fill";
  }
  unint64_t v9 = (unint64_t)(v8 - 32) | 0x8000000000000000;
LABEL_9:
  id v10 = [self systemBlueColor];
  if (qword_1006AE098 != -1) {
    swift_once();
  }
  id v11 = sub_10044D910(*(double *)&qword_1006D1A28, v2, v9, (uint64_t)v10);
  swift_bridgeObjectRelease();

  return v11;
}

uint64_t *sub_10025215C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for FMIPAccessoryError();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    unint64_t v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_10005D034((uint64_t *)&unk_1006AF820);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_1002522FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPAccessoryError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v5, v6);
  }
  return result;
}

uint64_t sub_1002523FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FMIPAccessoryError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10005D034((uint64_t *)&unk_1006AF820);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_10025254C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FMIPAccessoryError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_10005D034((uint64_t *)&unk_1006AF820);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_100252700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FMIPAccessoryError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10005D034((uint64_t *)&unk_1006AF820);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_100252850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FMIPAccessoryError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_10005D034((uint64_t *)&unk_1006AF820);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_100252A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100252A18);
}

uint64_t sub_100252A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FMIPAccessoryError();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_10005D034((uint64_t *)&unk_1006AF820);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_100252B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100252B28);
}

uint64_t sub_100252B28(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for FMIPAccessoryError();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_10005D034((uint64_t *)&unk_1006AF820);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_100252C30()
{
  type metadata accessor for FMIPAccessoryError();
  if (v0 <= 0x3F)
  {
    sub_1001867EC();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

id sub_100252D0C()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_foregroundLayer;
  id v2 = objc_allocWithZone((Class)CALayer);
  uint64_t v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  uint64_t v4 = OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_borderLayer;
  *(void *)&v3[v4] = [objc_allocWithZone((Class)CALayer) init];
  uint64_t v5 = OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_backgroundLayer;
  *(void *)&v3[v5] = [objc_allocWithZone((Class)CALayer) init];
  uint64_t v6 = OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_animationGroup;
  *(void *)&v3[v6] = [objc_allocWithZone((Class)CAAnimationGroup) init];

  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for FMAccessoryPairingWithYouIndicator();
  id v7 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_100252F20();
  sub_1002531A4();

  return v7;
}

void sub_100252F20()
{
  id v1 = [v0 layer];
  id v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_backgroundLayer];
  [v1 addSublayer:v2];

  id v3 = [v0 layer];
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_foregroundLayer];
  [v3 addSublayer:v4];

  id v5 = [v0 layer];
  uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_borderLayer];
  [v5 addSublayer:v6];

  [v4 setCornerCurve:kCACornerCurveCircular];
  id v7 = self;
  id v8 = [v7 systemBlueColor];
  id v9 = [v8 CGColor];

  [v4 setBackgroundColor:v9];
  [v6 setBorderWidth:1.0];
  id v10 = [v7 whiteColor];
  id v11 = [v10 CGColor];

  [v6 setBorderColor:v11];
  [v2 setCornerCurve:kCACornerCurveCircular];
  id v12 = [v7 systemBlueColor];
  id v13 = [v12 CGColor];

  [v2 setBackgroundColor:v13];
  [v2 setBorderWidth:1.0];
  id v14 = [v7 clearColor];
  id v15 = [v14 CGColor];

  [v2 setBorderColor:v15];
}

void sub_1002531A4()
{
  uint64_t v1 = v0;
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [self animationWithKeyPath:v2];

  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  [v3 setFromValue:isa];

  Class v5 = Int._bridgeToObjectiveC()().super.super.isa;
  [v3 setToValue:v5];

  id v6 = [objc_allocWithZone((Class)CABasicAnimation) init];
  NSString v7 = String._bridgeToObjectiveC()();
  [v6 setKeyPath:v7];

  id v8 = self;
  id v9 = v6;
  id v10 = [v8 functionWithName:kCAValueFunctionScale];
  [v9 setValueFunction:v10];

  Class v11 = Array._bridgeToObjectiveC()().super.isa;
  [v9 setFromValue:v11];

  sub_10005D034(&qword_1006B7768);
  uint64_t v12 = swift_allocObject();
  __asm { FMOV            V1.2D, #2.5 }
  *(_OWORD *)(v12 + 16) = xmmword_10055BD40;
  *(_OWORD *)(v12 + 32) = _Q1;
  *(void *)(v12 + 48) = 0x4004000000000000;
  Class v18 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v9 setToValue:v18];

  id v19 = [objc_allocWithZone((Class)CAAnimationGroup) init];
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_10055C1E0;
  *(void *)(v20 + 32) = v3;
  *(void *)(v20 + 40) = v9;
  specialized Array._endMutation()();
  sub_100006060(0, (unint64_t *)&qword_1006B7770);
  id v21 = v9;
  id v22 = v3;
  Class v23 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v19 setAnimations:v23];

  [v19 setDuration:2.0];
  [v19 setRemovedOnCompletion:0];
  LODWORD(v24) = 2139095039;
  [v19 setRepeatCount:v24];
  uint64_t v25 = self;
  id v26 = v19;
  id v27 = [v25 functionWithName:kCAMediaTimingFunctionEaseOut];
  [v26 setTimingFunction:v27];

  Swift::String v28 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_backgroundLayer);
  NSString v29 = String._bridgeToObjectiveC()();
  [v28 addAnimation:v26 forKey:v29];
}

id sub_100253574()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_backgroundLayer];
  id v2 = *(id *)&v0[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_foregroundLayer];
  id v3 = v1;
  id v4 = [v0 layer];
  [v4 bounds];
  CGFloat v62 = v6;
  CGFloat v64 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;

  id v11 = [v0 layer];
  [v11 bounds];
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;

  v67.origin.x = v13;
  v67.origin.y = v15;
  v67.size.width = v17;
  v67.size.height = v19;
  CGFloat v20 = CGRectGetWidth(v67) * 0.3;
  id v21 = [v0 layer];
  [v21 bounds];
  CGFloat v23 = v22;
  CGFloat v25 = v24;
  CGFloat v27 = v26;
  CGFloat v29 = v28;

  v68.origin.x = v23;
  v68.origin.y = v25;
  v68.size.width = v27;
  v68.size.height = v29;
  CGFloat v30 = CGRectGetHeight(v68) * 0.3;
  v69.origin.y = v62;
  v69.origin.x = v64;
  v69.size.width = v8;
  v69.size.height = v10;
  CGRect v70 = CGRectInset(v69, v20, v30);
  [v2 setFrame:v70.origin.x, v70.origin.y, v70.size.width, v70.size.height];
  [v2 bounds];
  [v2 setCornerRadius:CGRectGetWidth(v71) * 0.5];

  id v31 = v3;
  id v32 = [v0 layer];
  [v32 bounds];
  CGFloat v63 = v34;
  CGFloat v65 = v33;
  CGFloat v36 = v35;
  CGFloat v38 = v37;

  id v39 = [v0 layer];
  [v39 bounds];
  CGFloat v41 = v40;
  CGFloat v43 = v42;
  CGFloat v45 = v44;
  CGFloat v47 = v46;

  v72.origin.x = v41;
  v72.origin.y = v43;
  v72.size.width = v45;
  v72.size.height = v47;
  CGFloat v48 = CGRectGetWidth(v72) * 0.3;
  id v49 = [v0 layer];
  [v49 bounds];
  CGFloat v51 = v50;
  CGFloat v53 = v52;
  CGFloat v55 = v54;
  CGFloat v57 = v56;

  v73.origin.x = v51;
  v73.origin.y = v53;
  v73.size.width = v55;
  v73.size.height = v57;
  CGFloat v58 = CGRectGetHeight(v73) * 0.3;
  v74.origin.y = v63;
  v74.origin.x = v65;
  v74.size.width = v36;
  v74.size.height = v38;
  CGRect v75 = CGRectInset(v74, v48, v58);
  [v31 setFrame:v75.origin.x, v75.origin.y, v75.size.width, v75.size.height];
  [v31 bounds];
  [v31 setCornerRadius:CGRectGetWidth(v76) * 0.5];

  Swift::String v59 = *(void **)&v0[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_borderLayer];
  [v2 frame];
  CGRect v78 = CGRectInset(v77, -1.0, -1.0);
  [v59 setFrame:v78.origin.x, v78.origin.y, v78.size.width, v78.size.height];
  [v59 bounds];
  double v60 = CGRectGetWidth(v79) * 0.5;

  return [v59 setCornerRadius:v60];
}

id sub_1002538D8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAccessoryPairingWithYouIndicator();
  return [super dealloc];
}

uint64_t type metadata accessor for FMAccessoryPairingWithYouIndicator()
{
  return self;
}

void sub_10025399C()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_foregroundLayer;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)CALayer) init];
  uint64_t v2 = OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_borderLayer;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)CALayer) init];
  uint64_t v3 = OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_backgroundLayer;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)CALayer) init];
  uint64_t v4 = OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_animationGroup;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)CAAnimationGroup) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100253A80(char a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v16) {
    uint64_t v3 = 0x74696C6C65746173;
  }
  else {
    uint64_t v3 = 0x65726F6C707865;
  }
  if (v16) {
    unint64_t v4 = 0xE900000000000065;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  int v5 = a1 & 1;
  if (v5) {
    uint64_t v6 = 0x74696C6C65746173;
  }
  else {
    uint64_t v6 = 0x65726F6C707865;
  }
  if (v5) {
    unint64_t v7 = 0xE900000000000065;
  }
  else {
    unint64_t v7 = 0xE700000000000000;
  }
  if (v3 == v6 && v4 == v7) {
    return swift_bridgeObjectRelease_n();
  }
  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    uint64_t v11 = *(void *)(*(void *)(v1 + 16) + 56);
    double v12 = self;
    swift_retain();
    id v13 = [v12 standardUserDefaults];
    int v14 = sub_100232A58(v5);

    CGFloat v15 = (unsigned char *)(v11 + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode);
    unsigned char *v15 = v14 & 1;
    v15[1] = BYTE1(v14) & 1;
    v15[2] = BYTE2(v14) & 1;
    sub_10024B8C0();
    return swift_release();
  }
  return result;
}

uint64_t sub_100253C0C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v5) {
    int v0 = 0x10000;
  }
  else {
    int v0 = 0;
  }
  if (v4) {
    int v1 = 256;
  }
  else {
    int v1 = 0;
  }
  return v1 | v3 | v0;
}

void sub_100253CA8()
{
  uint64_t v1 = sub_10005D034(&qword_1006B46E8);
  __chkstk_darwin(v1 - 8);
  unsigned __int8 v3 = (id *)((char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006AF820);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  CGFloat v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100255300(v0 + OBJC_IVAR____TtC6FindMy20FMChooseMapViewModel_mapAttribution, (uint64_t)v3);
  uint64_t v11 = sub_10005D034(&qword_1006B4710);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v3, 1, v11) == 1)
  {
    sub_100003F10((uint64_t)v3, &qword_1006B46E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
LABEL_4:
    sub_100003F10((uint64_t)v6, (uint64_t *)&unk_1006AF820);
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_1000606BC(v12, (uint64_t)qword_1006D1E98);
    id v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      CGFloat v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)CGFloat v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMChooseMapViewModel: No URL found", v15, 2u);
      swift_slowDealloc();
    }

    return;
  }

  sub_100067E48((uint64_t)v3 + *(int *)(v11 + 48), (uint64_t)v6, (uint64_t *)&unk_1006AF820);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    goto LABEL_4;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_1000606BC(v16, (uint64_t)qword_1006D1E98);
  CGFloat v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    CGFloat v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)CGFloat v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "FMChooseMapViewModel: Open attribution URL", v19, 2u);
    swift_slowDealloc();
  }

  id v20 = [self sharedApplication];
  URL._bridgeToObjectiveC()(v21);
  CGFloat v23 = v22;
  sub_10014C1D0((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_1000457FC((unint64_t *)&qword_1006AEA10, type metadata accessor for OpenExternalURLOptionsKey);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v20 openURL:v23 options:isa completionHandler:0];

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_100254148@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006AF820);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [v2 string];
  if (v7)
  {
    *a1 = v7;
    id v8 = v7;
    id v9 = [v2 url];
    if (v9)
    {
      CGFloat v10 = v9;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v11 = type metadata accessor for URL();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 0, 1, v11);
    }
    else
    {

      uint64_t v15 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 1, 1, v15);
    }
    uint64_t v16 = sub_10005D034(&qword_1006B4710);
    sub_100067E48((uint64_t)v6, (uint64_t)a1 + *(int *)(v16 + 48), (uint64_t *)&unk_1006AF820);
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a1, 0, 1, v16);
  }
  else
  {
    uint64_t v12 = sub_10005D034(&qword_1006B4710);
    id v13 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    return v13(a1, 1, 1, v12);
  }
}

uint64_t sub_100254354@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

uint64_t sub_1002543E4()
{
  return static Published.subscript.setter();
}

uint64_t sub_100254470(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10005D034(&qword_1006B46E8);
  __chkstk_darwin(v6 - 8);
  id v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_10005D034(&qword_1006B7888);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v27[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = v3 + OBJC_IVAR____TtC6FindMy20FMChooseMapViewModel__availableModes;
  double v28 = &off_10061EE20;
  sub_10005D034(&qword_1006B77D8);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v10 + 32))(v13, v12, v9);
  *(void *)(v3 + OBJC_IVAR____TtC6FindMy20FMChooseMapViewModel_selectionSubscription) = 0;
  *(void *)(v3 + 16) = a1;
  if (a2)
  {
    swift_retain();
    id v14 = a2;
    sub_100254148(v8);
  }
  else
  {
    uint64_t v15 = sub_10005D034(&qword_1006B4710);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
    swift_retain();
  }
  sub_100067E48((uint64_t)v8, v3 + OBJC_IVAR____TtC6FindMy20FMChooseMapViewModel_mapAttribution, &qword_1006B46E8);
  uint64_t v16 = (char *)(*(void *)(a1 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode);
  char v17 = *v16;
  char v18 = v16[1];
  char v19 = v16[2];
  swift_beginAccess();
  v27[5] = v17;
  v27[6] = v18;
  v27[7] = v19;
  Published.init(initialValue:)();
  swift_endAccess();
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  sub_1000606BC(v20, (uint64_t)qword_1006D1E98);
  id v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    CGFloat v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)CGFloat v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "FMChooseMapViewModel: Subscribe to selection controller", v23, 2u);
    swift_slowDealloc();
  }

  uint64_t v24 = *(void *)(a1 + 56);
  type metadata accessor for FMSelectionSubscription();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber + 8) = 0;
  swift_unknownObjectWeakInit();
  swift_retain();
  swift_retain();
  UUID.init()();
  *(void *)(v25 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber + 8) = &off_10062ED78;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(v24 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v24 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  swift_release();
  swift_release();
  swift_release();

  *(void *)(v3 + OBJC_IVAR____TtC6FindMy20FMChooseMapViewModel_selectionSubscription) = v25;
  swift_release();
  return v3;
}

uint64_t sub_100254898()
{
  uint64_t v1 = v0;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000606BC(v2, (uint64_t)qword_1006D1E98);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    char v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMChooseMapViewModel: Unsubscribe to selection controller", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC6FindMy20FMChooseMapViewModel_selectionSubscription);
  if (!v6) {
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(*(void *)(v1 + 16) + 56);
  swift_beginAccess();
  swift_retain();
  swift_retain();
  uint64_t result = sub_1003D6AB4((uint64_t *)(v7 + 16), v6);
  uint64_t v9 = result;
  unint64_t v10 = *(void *)(v7 + 16);
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v11 >= v9) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11 >= result)
    {
LABEL_8:
      sub_1002586A8(v9, v11);
      swift_endAccess();
      swift_release();
      swift_release();
LABEL_9:
      swift_release();
      sub_100003F10(v1 + OBJC_IVAR____TtC6FindMy20FMChooseMapViewModel_mapAttribution, &qword_1006B46E8);
      uint64_t v12 = v1 + OBJC_IVAR____TtC6FindMy20FMChooseMapViewModel__availableModes;
      uint64_t v13 = sub_10005D034(&qword_1006B7888);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      uint64_t v14 = v1 + OBJC_IVAR____TtC6FindMy20FMChooseMapViewModel__selection;
      uint64_t v15 = sub_10005D034(&qword_1006B7890);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
      swift_release();
      return v1;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100254B10()
{
  sub_100254898();

  return swift_deallocClassInstance();
}

uint64_t sub_100254B68()
{
  return type metadata accessor for FMChooseMapViewModel();
}

uint64_t type metadata accessor for FMChooseMapViewModel()
{
  uint64_t result = qword_1006B77B8;
  if (!qword_1006B77B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100254BBC()
{
  sub_100254D20(319, &qword_1006B77C8, &qword_1006B4710, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    sub_100254D20(319, &qword_1006B77D0, &qword_1006B77D8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
    if (v1 <= 0x3F)
    {
      sub_100254D80();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_100254D20(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = sub_100046C48(a3);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_100254D80()
{
  if (!qword_1006B77E0)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1006B77E0);
    }
  }
}

uint64_t sub_100254DD8()
{
  return static Published.subscript.setter();
}

uint64_t sub_100254E60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100254EB0(uint64_t a1, int a2)
{
  return sub_100254ECC(a2 & 0x10101);
}

void *sub_100254EC0()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_100254ECC(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_1000606BC(v12, (uint64_t)qword_1006D1E98);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    int v21 = a1;
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMChooseMapViewModel: <FMSelectionSubscriber> selectedMapMode update", v15, 2u);
    a1 = v21;
    swift_slowDealloc();
  }

  sub_10005EC68();
  uint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v2;
  *(unsigned char *)(v17 + 24) = a1 & 1;
  *(unsigned char *)(v17 + 25) = BYTE1(a1) & 1;
  *(unsigned char *)(v17 + 26) = BYTE2(a1) & 1;
  aBlock[4] = sub_1002552C4;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10062EDE0;
  char v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000457FC((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_10005ECA8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_10025528C()
{
  swift_release();

  return _swift_deallocObject(v0, 27, 7);
}

uint64_t sub_1002552C4()
{
  return sub_100254DD8();
}

uint64_t sub_100255300(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034(&qword_1006B46E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL MKCircle.isEqual(_:)(uint64_t a1)
{
  sub_10017B9DC(a1, (uint64_t)v27);
  if (!v28)
  {
    sub_100067244((uint64_t)v27);
    return 0;
  }
  sub_1002554D0();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  [v26 coordinate];
  double v3 = v2;
  [v1 coordinate];
  if (v3 != v4
    || ([v26 coordinate], double v6 = v5, objc_msgSend(v1, "coordinate"), v6 != v7)
    || ([v26 radius], double v9 = v8, objc_msgSend(v1, "radius"), v9 != v10))
  {

    return 0;
  }
  [v26 boundingMapRect];
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;
  double v18 = v17;
  [v1 boundingMapRect];
  if (v12 == v22)
  {
    BOOL v23 = v16 == v20;
    if (v18 != v21) {
      BOOL v23 = 0;
    }
    BOOL v24 = v14 == v19 && v23;
  }
  else
  {
    BOOL v24 = 0;
  }
  return v24;
}

unint64_t sub_1002554D0()
{
  unint64_t result = qword_1006B7898;
  if (!qword_1006B7898)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1006B7898);
  }
  return result;
}

uint64_t MKCircle.hash.getter()
{
  [v0 coordinate];
  uint64_t v1 = Double.hashValue.getter();
  [v0 coordinate];
  uint64_t v2 = Double.hashValue.getter() ^ v1;
  [v0 radius];
  uint64_t v3 = Double.hashValue.getter();
  [v0 boundingMapRect];
  uint64_t v4 = v2 ^ v3 ^ Double.hashValue.getter();
  [v0 boundingMapRect];
  uint64_t v5 = Double.hashValue.getter();
  [v0 boundingMapRect];
  uint64_t v6 = v5 ^ Double.hashValue.getter();
  [v0 boundingMapRect];
  return v4 ^ v6 ^ Double.hashValue.getter();
}

void *sub_100255690(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  unint64_t result = sub_10041146C(a1);
  *((unsigned char *)result + OBJC_IVAR____TtC6FindMy14FMTerminalView_isPeopleTab) = 1;
  return result;
}

id sub_100255750()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPersonTerminalView();
  return [super dealloc];
}

void sub_100255784(char a1, double a2)
{
  uint64_t v5 = self;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v2;
  *(unsigned char *)(v6 + 24) = a1;
  double v16 = sub_10025A5D0;
  uint64_t v17 = v6;
  double v12 = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  double v14 = sub_10003C410;
  double v15 = &unk_10062F278;
  double v7 = _Block_copy(&v12);
  id v8 = v2;
  swift_release();
  [v5 animateWithDuration:0x20000 delay:v7 usingSpringWithDamping:0 initialSpringVelocity:0.4 options:0.0 animations:0.8 completion:a2];
  _Block_release(v7);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(unsigned char *)(v9 + 24) = a1;
  double v16 = sub_10025A5DC;
  uint64_t v17 = v9;
  double v12 = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  double v14 = sub_10003C410;
  double v15 = &unk_10062F2C8;
  double v10 = _Block_copy(&v12);
  id v11 = v8;
  swift_release();
  [v5 animateWithDuration:0x20000 delay:v10 options:0 animations:0.4 completion:0.0];
  _Block_release(v10);
}

void sub_100255968()
{
  id v1 = [v0 view];
  if (v1)
  {
    objc_super v2 = v1;
    [v1 setUserInteractionEnabled:0];

    id v3 = self;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v0;
    double v14 = (void (*)(uint64_t))sub_10025A4F4;
    uint64_t v15 = v4;
    double v10 = _NSConcreteStackBlock;
    uint64_t v11 = 1107296256;
    double v12 = sub_10003C410;
    uint64_t v13 = &unk_10062F188;
    uint64_t v5 = _Block_copy(&v10);
    id v6 = v0;
    swift_release();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v6;
    double v14 = sub_10025A550;
    uint64_t v15 = v7;
    double v10 = _NSConcreteStackBlock;
    uint64_t v11 = 1107296256;
    double v12 = sub_1002F8BC0;
    uint64_t v13 = &unk_10062F1D8;
    id v8 = _Block_copy(&v10);
    id v9 = v6;
    swift_release();
    [v3 animateWithDuration:v5 animations:v8 completion:0.1];
    _Block_release(v8);
    _Block_release(v5);
  }
  else
  {
    __break(1u);
  }
}

void sub_100255B28()
{
  id v1 = [v0 view];
  if (v1)
  {
    objc_super v2 = v1;
    [v1 setUserInteractionEnabled:0];

    id v3 = self;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v0;
    double v14 = (void (*)(uint64_t))sub_10025A4F4;
    uint64_t v15 = v4;
    double v10 = _NSConcreteStackBlock;
    uint64_t v11 = 1107296256;
    double v12 = sub_10003C410;
    uint64_t v13 = &unk_10062F098;
    uint64_t v5 = _Block_copy(&v10);
    id v6 = v0;
    swift_release();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v6;
    double v14 = sub_10025A4F8;
    uint64_t v15 = v7;
    double v10 = _NSConcreteStackBlock;
    uint64_t v11 = 1107296256;
    double v12 = sub_1002F8BC0;
    uint64_t v13 = &unk_10062F0E8;
    id v8 = _Block_copy(&v10);
    id v9 = v6;
    swift_release();
    [v3 animateWithDuration:v5 animations:v8 completion:0.1];
    _Block_release(v8);
    _Block_release(v5);
  }
  else
  {
    __break(1u);
  }
}

id sub_100255CE8(double a1, double a2)
{
  uint64_t v5 = v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent];
  id v6 = [v2 traitCollection];
  id v7 = [v6 horizontalSizeClass];

  if (v7 != (id)1)
  {
    if (qword_1006AE228 != -1) {
      swift_once();
    }
    uint64_t v11 = qword_1006D20D0;
    id result = [v2 view];
    if (result)
    {
      double v12 = result;
      id v13 = [result window];

      if (v13)
      {
        [v13 bounds];
        double v15 = v14;
      }
      else
      {
        double v15 = 0.0;
      }
      id v16 = [self sharedApplication];
      id v17 = [v16 keyWindow];

      if (v17
        && (id v18 = [v17 rootViewController], v17, v18)
        && (id v19 = [v18 view], v18, v19))
      {
        [v19 layoutMargins];
        double top = v20;
        double left = v22;
        double bottom = v24;
        double right = v26;
      }
      else
      {
        double top = UIEdgeInsetsZero.top;
        double left = UIEdgeInsetsZero.left;
        double bottom = UIEdgeInsetsZero.bottom;
        double right = UIEdgeInsetsZero.right;
      }
      double v28 = *(double *)&xmmword_1006D20B0;
      id result = [v2 view];
      if (result)
      {
        CGFloat v29 = result;
        double v30 = v15 - right - *(double *)&qword_1006D20A8;
        if (v11 != 1) {
          double v30 = left;
        }
        [result setFrame:v30 top + *((double *)&xmmword_1006D20B0 + 1) *(double *)&qword_1006D20A8 a2 - v28 - top - bottom];

        double v10 = *(void **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground];
        [v10 setHidden:1];
        goto LABEL_19;
      }
LABEL_26:
      __break(1u);
      return result;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  id result = [v2 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_25;
  }
  id v9 = result;
  [result setFrame:0.0, 0.0, a1, a2];

  double v10 = *(void **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground];
  [v10 setHidden:0];
LABEL_19:
  double v31 = dbl_100562080[v5];
  sub_1000489A0(0, v31);
  double v32 = 0.64 - v31;
  if (0.64 - v31 <= 0.0) {
    double v32 = 0.0;
  }
  double v33 = *(double *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration] * v32;

  return [v10 setAlpha:v33];
}

void sub_100256024(char a1)
{
  objc_super v2 = *(void **)(*(void *)(v1 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer)
                + OBJC_IVAR____TtC6FindMy19FMCardContainerView_grabber);
  id v13 = v2;
  if (a1)
  {
    if (a1 == 1)
    {
      id v3 = v2;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      id v4 = [self mainBundle];
      unint64_t v5 = 0xD000000000000022;
      unint64_t v12 = 0x800000010058E870;
      unint64_t v6 = 0x800000010058E850;
      unint64_t v7 = 0xD000000000000010;
    }
    else
    {
      id v9 = v2;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      id v4 = [self mainBundle];
      unint64_t v5 = 0xD000000000000021;
      unint64_t v12 = 0x800000010058E8A0;
      unint64_t v7 = 0x5A49535F44524143;
      unint64_t v6 = 0xEF4C4C414D535F45;
    }
  }
  else
  {
    id v8 = v2;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v4 = [self mainBundle];
    unint64_t v5 = 0xD000000000000020;
    unint64_t v12 = 0x800000010058E8D0;
    unint64_t v7 = 0x5A49535F44524143;
    unint64_t v6 = 0xEE004C4C55465F45;
  }
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v7, (Swift::String_optional)0, (NSBundle)v4, v10, *(Swift::String *)&v5);

  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v13 setAccessibilityValue:v11];
}

uint64_t sub_100256288()
{
  sub_100048C44();
  BOOL v1 = v0 < -1.0;
  if (v0 > 0.3) {
    BOOL v1 = 1;
  }
  BOOL v2 = v0 < 0.3;
  if (v0 > 0.85) {
    BOOL v2 = 1;
  }
  char v3 = v1 && v2;
  sub_100255784(v1 && v2, 0.4);
  sub_100256024(v3);
  return 1;
}

uint64_t sub_100256300()
{
  sub_100048C44();
  if (v0 > 0.3 || v0 < -1.0) {
    char v2 = 2;
  }
  else {
    char v2 = 1;
  }
  sub_100255784(v2, 0.4);
  sub_100256024(v2);
  return 1;
}

Swift::Int sub_10025635C()
{
  return Hasher._finalize()();
}

Swift::Int sub_100256448(char a1)
{
  Hasher.init(_seed:)();
  if (a1) {
    Swift::UInt64 v2 = 0x4050800000000000;
  }
  else {
    Swift::UInt64 v2 = 0x4043000000000000;
  }
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

Swift::Int sub_1002564A0(char a1)
{
  return Hasher._finalize()();
}

Swift::Int sub_1002564F4(char a1)
{
  Hasher.init(_seed:)();
  if (a1) {
    Swift::UInt64 v2 = 0x4050800000000000;
  }
  else {
    Swift::UInt64 v2 = 0x403E000000000000;
  }
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

Swift::Int sub_10025654C()
{
  return Hasher._finalize()();
}

Swift::Int sub_1002565D4()
{
  return Hasher._finalize()();
}

BOOL sub_1002566D0(char *a1, char *a2)
{
  return dbl_100562080[*a1] == dbl_100562080[*a2];
}

Swift::Int sub_1002566F4()
{
  return sub_1002564A0(*v0);
}

void sub_1002566FC()
{
  Hasher._combine(_:)(qword_100562068[*v0]);
}

Swift::Int sub_100256734(uint64_t a1)
{
  return sub_100411324(a1, *v1);
}

double *sub_10025673C@<X0>(double *result@<X0>, char *a2@<X8>)
{
  double v2 = *result;
  if (*result == 0.0)
  {
    *a2 = 0;
  }
  else if (v2 == 0.64)
  {
    *a2 = 1;
  }
  else
  {
    if (v2 == 1.0) {
      char v3 = 2;
    }
    else {
      char v3 = 3;
    }
    *a2 = v3;
  }
  return result;
}

double sub_100256788@<D0>(double *a1@<X8>)
{
  double result = dbl_100562080[*v1];
  *a1 = result;
  return result;
}

id sub_1002567A0()
{
  id v0 = [self sharedApplication];
  id v1 = [v0 delegate];

  if (!v1) {
    goto LABEL_9;
  }
  type metadata accessor for FMAppDelegate();
  uint64_t v2 = swift_dynamicCastClass();
  if (!v2)
  {
    swift_unknownObjectRelease();
    goto LABEL_9;
  }
  char v3 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy13FMAppDelegate_mainViewController);
  id v4 = v3;
  swift_unknownObjectRelease();
  if (!v3)
  {
LABEL_9:
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_1000606BC(v24, (uint64_t)qword_1006D1E98);
    os_log_type_t v25 = static os_log_type_t.error.getter();
    double v26 = Logger.logObject.getter();
    os_log_type_t v27 = v25;
    if (os_log_type_enabled(v26, v25))
    {
      double v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)double v28 = 136315138;
      sub_1000606F4(0xD000000000000026, 0x800000010058E7E0, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "%s", v28, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    CGFloat v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v30))
    {
      double v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "FMCardContainerConfiguration: Couldn't find MainViewController's view", v31, 2u);
      swift_slowDealloc();
    }

    id v32 = [self mediumDetent];
    uint64_t v23 = UISheetPresentationControllerDetent.resolvedValue(in:)();

    return (id)v23;
  }
  id v5 = *(id *)&v4[OBJC_IVAR____TtC6FindMy20FMMainViewController_initialCardContainer];

  sub_100048D68();
  sub_1000490B8();
  unint64_t v6 = self;
  id v7 = [v6 mainScreen];
  UIRoundToScreenScale();

  id result = [v5 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_18;
  }
  id v9 = result;
  [result safeAreaInsets];

  id result = [v5 view];
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  Swift::String v10 = result;
  [result safeAreaInsets];

  id result = [v5 view];
  if (result)
  {
    NSString v11 = result;
    [result bounds];
    CGFloat v13 = v12;
    CGFloat v15 = v14;
    CGFloat v17 = v16;
    CGFloat v19 = v18;

    v34.origin.x = v13;
    v34.origin.y = v15;
    v34.size.width = v17;
    v34.size.height = v19;
    CGRectGetHeight(v34);
    id v20 = [v6 mainScreen];
    UIRoundToScreenScale();
    uint64_t v22 = v21;

    return (id)v22;
  }
LABEL_19:
  __break(1u);
  return result;
}

id sub_100256BE8(char a1)
{
  return sub_1000096A8(a1, (SEL *)&selRef_viewWillAppear_);
}

id sub_100256BF4(char a1)
{
  return sub_1000096A8(a1, (SEL *)&selRef_viewWillDisappear_);
}

void sub_100256C5C(unsigned char *a1, char a2)
{
  sub_1000489A0(0, dbl_100562080[a2]);
  a1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent] = a2;
  sub_10000F86C();
  id v4 = [a1 view];
  if (v4)
  {
    id v5 = v4;
    [v4 layoutIfNeeded];
  }
  else
  {
    __break(1u);
  }
}

id sub_100256CF4(uint64_t a1, char a2)
{
  double v2 = 0.64 - dbl_100562080[a2];
  if (v2 <= 0.0) {
    double v2 = 0.0;
  }
  return [*(id *)(a1 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground) setAlpha:v2 * *(double *)(a1 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration)];
}

void sub_100256ED0(uint64_t a1)
{
  id v1 = *(void **)(a1 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController);
  if (v1)
  {
    uint64_t v2 = *(void *)(a1 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController + 8);
    uint64_t ObjectType = swift_getObjectType();
    id v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
    id v5 = v1;
    id v6 = (id)v4(ObjectType, v2);

    if (v6)
    {
      [v6 setContentOffset:0, 0.0, 0.0];
    }
  }
}

void sub_100256FA4(uint64_t a1, void *a2)
{
  (*(void (**)(void))((swift_isaMask & *a2) + 0x2F0))();
  char v3 = *(void **)((char *)a2 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController);
  if (v3)
  {
    uint64_t v4 = *(void *)((char *)a2 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController + 8);
    uint64_t ObjectType = swift_getObjectType();
    id v6 = *(void (**)(uint64_t, uint64_t))(v4 + 56);
    id v7 = v3;
    v6(ObjectType, v4);
  }
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0;
  v10[4] = sub_10007245C;
  v10[5] = v8;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  void v10[2] = sub_10003C410;
  v10[3] = &unk_10062F228;
  id v9 = _Block_copy(v10);
  swift_release();
  [a2 dismissViewControllerAnimated:1 completion:v9];
  _Block_release(v9);
}

void sub_100257154(uint64_t a1, void *a2)
{
  (*(void (**)(void))((swift_isaMask & *a2) + 0x2F0))();
  char v3 = *(void **)((char *)a2 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController);
  if (v3)
  {
    uint64_t v4 = *(void *)((char *)a2 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController + 8);
    uint64_t ObjectType = swift_getObjectType();
    id v6 = *(void (**)(uint64_t, uint64_t))(v4 + 56);
    id v7 = v3;
    v6(ObjectType, v4);
  }
  id v8 = [a2 presentingViewController];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  v12[4] = sub_10025A500;
  v12[5] = v9;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_10003C410;
  v12[3] = &unk_10062F138;
  Swift::String v10 = _Block_copy(v12);
  id v11 = v8;
  swift_release();
  [a2 dismissViewControllerAnimated:1 completion:v10];
  _Block_release(v10);
}

void sub_100257330(void *a1, double a2, double a3)
{
  v19.receiver = v3;
  v19.super_class = (Class)type metadata accessor for FMCardContainerViewController();
  [super viewWillTransitionToSize:a1 withTransitionCoordinator:a2];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(double *)(v7 + 24) = a2;
  *(double *)(v7 + 32) = a3;
  CGFloat v17 = sub_10025A4C4;
  uint64_t v18 = v7;
  CGFloat v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  CGFloat v15 = sub_10045D478;
  double v16 = &unk_10062EFF8;
  id v8 = _Block_copy(&v13);
  id v9 = v3;
  swift_release();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(double *)(v10 + 24) = a2;
  *(double *)(v10 + 32) = a3;
  CGFloat v17 = sub_10025A4C4;
  uint64_t v18 = v10;
  CGFloat v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  CGFloat v15 = sub_10045D478;
  double v16 = &unk_10062F048;
  id v11 = _Block_copy(&v13);
  id v12 = v9;
  swift_release();
  [a1 animateAlongsideTransition:v8 completion:v11];
  _Block_release(v11);
  _Block_release(v8);
}

id sub_1002575C0(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_tabBar] = 0;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_tabBarTopConstraint] = 0;
  uint64_t v3 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration;
  uint64_t v4 = qword_1006AE0A0;
  id v5 = v1;
  if (v4 != -1) {
    swift_once();
  }
  id v6 = &v5[v3];
  uint64_t v7 = qword_1006D1A60;
  long long v8 = *(_OWORD *)algn_1006D1A50;
  *(_OWORD *)id v6 = xmmword_1006D1A40;
  *((_OWORD *)v6 + 1) = v8;
  *((void *)v6 + 4) = v7;
  v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent] = 1;
  v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_dismissable] = 1;
  uint64_t v9 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground;
  uint64_t v10 = (objc_class *)type metadata accessor for FMPassthroughView();
  id v11 = objc_allocWithZone(v10);
  v11[OBJC_IVAR____TtC6FindMy17FMPassthroughView_enabled] = 1;
  *(void *)&v11[OBJC_IVAR____TtC6FindMy17FMPassthroughView_exemptViews] = _swiftEmptyArrayStorage;
  v20.receiver = v11;
  v20.super_class = v10;
  *(void *)&v5[v9] = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v12 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardShadow;
  *(void *)&v5[v12] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v13 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_closeButton;
  *(void *)&v5[v13] = [self buttonWithType:7];
  uint64_t v14 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer;
  *(void *)&v5[v14] = [objc_allocWithZone((Class)type metadata accessor for FMCardContainerView()) init];
  *(void *)&v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_passthroughView] = 0;
  v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_isFirstLayoutCompleted] = 0;
  v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_isPanFromScrollView] = 0;
  v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_isPanningCard] = 0;
  CGFloat v15 = &v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_startPosition];
  *(void *)CGFloat v15 = 0;
  v15[8] = 1;
  *(void *)&v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_otherGesture] = 0;
  *(void *)&v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_compactConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_regularConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_compactCardTopConstraint] = 0;
  *(void *)&v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_regularCardTopConstraint] = 0;
  double v16 = &v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController];
  *(void *)double v16 = 0;
  *((void *)v16 + 1) = 0;

  v19.receiver = v5;
  v19.super_class = (Class)type metadata accessor for FMCardContainerViewController();
  id v17 = [super initWithCoder:a1];

  return v17;
}

id sub_100257848()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMCardContainerViewController();
  return [super dealloc];
}

unsigned char *storeEnumTagSinglePayload for FMCardContainerLockingPercent(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *id result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100257A44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMCardContainerLockingPercent()
{
  return &type metadata for FMCardContainerLockingPercent;
}

ValueMetadata *type metadata accessor for FMCardContainerConfiguration()
{
  return &type metadata for FMCardContainerConfiguration;
}

unint64_t sub_100257A90()
{
  unint64_t result = qword_1006B7998;
  if (!qword_1006B7998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B7998);
  }
  return result;
}

void sub_100257AE4(uint64_t a1, uint64_t a2, void *a3)
{
}

void sub_100257AEC(uint64_t a1, uint64_t a2, void *a3)
{
}

uint64_t sub_100257AF4(unint64_t a1)
{
  unint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    unint64_t v3 = sub_100257FEC(v3);
    unint64_t *v1 = v3;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      uint64_t v9 = v5 + 8 * a1;
      uint64_t v10 = *(void *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
      specialized Array._endMutation()();
      return v10;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100257BE0(unint64_t a1)
{
  unint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    unint64_t v3 = sub_100257FEC(v3);
    unint64_t *v1 = v3;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      uint64_t v9 = v5 + 8 * a1;
      uint64_t v10 = *(void *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(void *)(v5 + 16) = v7;
      specialized Array._endMutation()();
      return v10;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100257CC4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_100258068(v5);
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v7 = v6 - 1;
  uint64_t v8 = *(void *)(type metadata accessor for FMPeopleCellViewModel() - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v9 * a1;
  uint64_t result = sub_100259C3C(v10, a2);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v9 > 0 || v10 >= v10 + v9 + v9 * (v7 - a1))
  {
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v9)
  {
    uint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  *(void *)(v5 + 16) = v7;
  *objc_super v2 = v5;
  return result;
}

char *sub_100257E38(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v5 = *(void **)v3;
  int64_t v6 = *(void *)(*(void *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t v5 = sub_10007D46C(isUniquelyReferenced_nonNull_native, v13, 1, v5);
  }
  uint64_t v14 = &v5[a1 + 4];
  sub_10005D034(&qword_1006AEFA0);
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v9) {
    goto LABEL_20;
  }
  uint64_t v16 = v5[2];
  BOOL v17 = __OFSUB__(v16, a2);
  uint64_t v18 = v16 - a2;
  if (v17) {
    goto LABEL_26;
  }
  if ((v18 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v14 + 1);
    objc_super v19 = &v5[a2 + 4];
    if (v14 + 1 != v19 || result >= (char *)&v19[v18]) {
      uint64_t result = (char *)memmove(result, v19, 8 * v18);
    }
    uint64_t v20 = v5[2];
    BOOL v17 = __OFADD__(v20, v9);
    uint64_t v21 = v20 + v9;
    if (!v17)
    {
      v5[2] = v21;
LABEL_20:
      *uint64_t v14 = a3;
      *(void *)uint64_t v3 = v5;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_100257FC4(void *a1)
{
  return sub_10007D788(0, a1[2], 0, a1);
}

uint64_t sub_100257FD8(unint64_t a1)
{
  return sub_10007D368(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_100257FEC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }

  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_100258068(unint64_t a1)
{
  return sub_10006322C(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t (*sub_10025807C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  int64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_100258200(v6, a2, a3);
  return sub_1002580E4;
}

uint64_t (*sub_1002580E8(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  int64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_100258280(v6, a2, a3);
  return sub_1002580E4;
}

uint64_t (*sub_100258150(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  int64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_100258300(v6, a2, a3);
  return sub_1002580E4;
}

void sub_1002581B8(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_100258200(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return j__s6FindMy26FMEditableMessageViewStyleVwxx;
  }
  __break(1u);
  return result;
}

void (*sub_100258280(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for FMEditableMessageViewStyle;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_100258300(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    uint64_t *v3 = v4;
    return sub_100258380;
  }
  __break(1u);
  return result;
}

uint64_t sub_100258380()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_100258388()
{
  unint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *id v0 = v1;
  if (!result || (v1 & 0x8000000000000000) != 0 || (v1 & 0x4000000000000000) != 0)
  {
    uint64_t result = sub_100257FEC(v1);
    unint64_t v1 = result;
    *id v0 = result;
  }
  uint64_t v3 = v1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    uint64_t v5 = v4 - 1;
    uint64_t v6 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x20);
    *(void *)(v3 + 16) = v5;
    specialized Array._endMutation()();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002583F8(void *a1, char *a2, uint64_t a3, void *a4)
{
  id v7 = [a1 view];
  if (v7)
  {
    id v32 = v7;
    sub_1000493BC();
    [a2 addChildViewController:a1];
    uint64_t v8 = *(void *)&a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer];
    uint64_t v9 = OBJC_IVAR____TtC6FindMy19FMCardContainerView_bluredBackground;
    id v10 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v8
                                                                + OBJC_IVAR____TtC6FindMy19FMCardContainerView_bluredBackground), "contentView"));
    [v10 bounds];
    double v12 = v11;
    double v14 = v13;
    double v16 = v15;
    double v18 = v17;

    [v32 setFrame:v12, v14, v16, v18];
    [v32 setAutoresizingMask:18];
    [v32 setPreservesSuperviewLayoutMargins:1];
    id v19 = [*(id *)(v8 + v9) contentView];
    [v19 addSubview:v32];

    [a1 didMoveToParentViewController:a2];
    uint64_t v20 = (void **)&a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController];
    uint64_t v21 = *(void **)&a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController];
    char *v20 = a1;
    v20[1] = a4;
    id v22 = a1;

    uint64_t v23 = *v20;
    if (*v20)
    {
      uint64_t v24 = v20[1];
      uint64_t ObjectType = swift_getObjectType();
      double v26 = (void (*)(uint64_t, uint64_t, void *))v24[4];
      uint64_t v27 = a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent];
      id v28 = v23;
      v26(v27, ObjectType, v24);

      id v22 = v28;
    }

    [v32 layoutIfNeeded];
    sub_100048C44();
    sub_1000489A0(0, v29);
    sub_100048C44();
    double v31 = 0.64 - v30;
    if (v31 <= 0.0) {
      double v31 = 0.0;
    }
    [*(id *)&a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground] setAlpha:v31 * *(double *)&a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration]];
  }
}

uint64_t sub_100258678(uint64_t a1, uint64_t a2)
{
  return sub_100007A60(a1, a2, (void (*)(void))type metadata accessor for FMDevicesSubscription);
}

uint64_t sub_100258690(uint64_t a1, uint64_t a2)
{
  return sub_100007A60(a1, a2, (void (*)(void))type metadata accessor for FMLocationSubscription);
}

uint64_t sub_1002586A8(uint64_t a1, uint64_t a2)
{
  return sub_100007A60(a1, a2, (void (*)(void))type metadata accessor for FMSelectionSubscription);
}

uint64_t sub_1002586C0(unint64_t a1, uint64_t a2)
{
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
    return 0;
  }
LABEL_13:
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v4) {
    return 0;
  }
LABEL_3:
  sub_100006060(0, (unint64_t *)&qword_1006B3E40);
  uint64_t v5 = 0;
  a2 = *(void *)(a2 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer);
  while (1)
  {
    id v6 = (a1 & 0xC000000000000001) != 0
       ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
       : *(id *)(a1 + 8 * v5 + 32);
    id v7 = v6;
    char v8 = static NSObject.== infix(_:_:)();

    if (v8) {
      return v5;
    }
    uint64_t v9 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v9 == v4) {
      return 0;
    }
  }
}

uint64_t sub_1002587E8(unint64_t *a1, uint64_t a2)
{
  unint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = sub_1002586C0(v5, a2);
  char v8 = v7;
  uint64_t v9 = v2;
  swift_bridgeObjectRelease();
  if (v2) {
    return v6;
  }
  if ((v8 & 1) == 0)
  {
    unint64_t v10 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_54;
    }
    if (*a1 >> 62)
    {
LABEL_55:
      swift_bridgeObjectRetain();
      uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v10 != v29) {
        goto LABEL_6;
      }
    }
    else if (v10 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      sub_100006060(0, (unint64_t *)&qword_1006B3E40);
      unint64_t v10 = v6 + 5;
      uint64_t v31 = v9;
      while (1)
      {
        unint64_t v11 = v10 - 4;
        unint64_t v12 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v11 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
            goto LABEL_55;
          }
          if (v11 >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_45;
          }
          id v13 = *(id *)(v12 + 8 * v10);
        }
        double v14 = v13;
        char v15 = static NSObject.== infix(_:_:)();

        if ((v15 & 1) == 0) {
          break;
        }
LABEL_32:
        unint64_t v26 = v10 - 3;
        if (__OFADD__(v11, 1)) {
          goto LABEL_46;
        }
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v27 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        ++v10;
        if (v26 == v27) {
          return v6;
        }
      }
      if (v11 == v6)
      {
LABEL_31:
        if (__OFADD__(v6++, 1)) {
          goto LABEL_47;
        }
        goto LABEL_32;
      }
      unint64_t v16 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        unint64_t v16 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_17:
          if ((v11 & 0x8000000000000000) != 0) {
            goto LABEL_50;
          }
          if (v11 >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_51;
          }
          id v18 = *(id *)(v16 + 8 * v10);
          goto LABEL_20;
        }
      }
      else
      {
        if ((v6 & 0x8000000000000000) != 0) {
          goto LABEL_48;
        }
        if (v6 >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_49;
        }
        id v17 = *(id *)(v16 + 8 * v6 + 32);
        if ((v16 & 0xC000000000000001) == 0) {
          goto LABEL_17;
        }
      }
      id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      unint64_t v16 = *a1;
LABEL_20:
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v16;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v16 & 0x8000000000000000) != 0
        || (v16 & 0x4000000000000000) != 0)
      {
        unint64_t v16 = sub_100257FEC(v16);
        *a1 = v16;
      }
      uint64_t v20 = *(void **)((v16 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20);
      *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v18;

      specialized Array._endMutation()();
      unint64_t v21 = *a1;
      int v22 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v21;
      if (!v22 || (v21 & 0x8000000000000000) != 0 || (v21 & 0x4000000000000000) != 0)
      {
        unint64_t v21 = sub_100257FEC(v21);
        *a1 = v21;
      }
      uint64_t v9 = v31;
      if ((v11 & 0x8000000000000000) != 0) {
        goto LABEL_52;
      }
      uint64_t v23 = v21 & 0xFFFFFFFFFFFFFF8;
      if (v11 >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_53;
      }
      uint64_t v24 = *(void **)(v23 + 8 * v10);
      *(void *)(v23 + 8 * v10) = v17;

      specialized Array._endMutation()();
      goto LABEL_31;
    }
    return v6;
  }
  if (!(*a1 >> 62)) {
    return *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  return v30;
}

void sub_100258B44(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v58 = v4;
  uint64_t v59 = v5;
  __chkstk_darwin(v4);
  CGFloat v64 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for DispatchQoS();
  uint64_t v63 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  CGFloat v62 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for DispatchTime();
  uint64_t v57 = *(void *)(v60 - 8);
  uint64_t v8 = __chkstk_darwin(v60);
  CGFloat v65 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v56 - v10;
  unint64_t v12 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_tabBar];
  if (v12)
  {
    id v13 = v12;
    [v13 setAlpha:0.0];
    double v14 = *(void **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_tabBarTopConstraint];
    if (v14)
    {
      id v15 = v14;
      [v15 setConstant:300.0];
    }
  }
  unint64_t v16 = &selRef_tableView_viewForFooterInSection_;
  id v17 = [v2 traitCollection];
  id v18 = [v17 horizontalSizeClass];

  if (v18 == (id)1)
  {
    id v19 = a1;
    sub_100048C44();
    if (v20 < 0.64)
    {
      sub_1000489A0(0, 0.64);
      [*(id *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground] setAlpha:*(double *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration] * 0.0];
    }
  }
  else
  {
    type metadata accessor for FMCardContainerViewController();
    id v19 = a1;
    uint64_t v21 = swift_dynamicCastClass();
    if (v21)
    {
      uint64_t v22 = v21;
      uint64_t v23 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent;
      double v24 = dbl_100562080[v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent]];
      id v25 = a1;
      sub_1000489A0(0, v24);
      unint64_t v16 = &selRef_tableView_viewForFooterInSection_;
      double v26 = 0.64 - dbl_100562080[v2[v23]];
      if (v26 <= 0.0) {
        double v26 = 0.0;
      }
      [*(id *)(v22 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground) setAlpha:v26 * *(double *)(v22 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration)];
      *(unsigned char *)(v22 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent) = v2[v23];
      sub_10000F86C();
    }
  }
  id v27 = [v2 view];
  if (!v27) {
    goto LABEL_23;
  }
  id v28 = v27;
  type metadata accessor for FMPassthroughView();
  uint64_t v29 = swift_dynamicCastClass();
  if (!v29 || (uint64_t v30 = v29, (v31 = [v19 view]) == 0))
  {

    goto LABEL_23;
  }
  id v32 = v31;
  if (!swift_dynamicCastClass())
  {

    unint64_t v16 = &selRef_tableView_viewForFooterInSection_;
    goto LABEL_23;
  }
  uint64_t v33 = (void *)(v30 + OBJC_IVAR____TtC6FindMy17FMPassthroughView_exemptViews);
  swift_beginAccess();
  id v34 = v32;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  double v35 = *(char **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_passthroughView];
  if (!v35)
  {
LABEL_30:
    __break(1u);
    return;
  }
  CGFloat v36 = (unint64_t *)&v35[OBJC_IVAR____TtC6FindMy17FMPassthroughView_exemptViews];
  swift_beginAccess();
  double v37 = v2;
  double v56 = v35;
  uint64_t v38 = sub_1002587E8(v36, (uint64_t)v37);

  if (*v36 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v39 >= v38) {
      goto LABEL_21;
    }
    goto LABEL_29;
  }
  uint64_t v39 = *(void *)((*v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v39 < v38)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
LABEL_21:
  sub_100259F80(v38, v39, (unint64_t *)&qword_1006B79A0);
  swift_endAccess();

  unint64_t v16 = &selRef_tableView_viewForFooterInSection_;
LABEL_23:
  double v40 = *(unsigned char **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer];
  v40[OBJC_IVAR____TtC6FindMy19FMCardContainerView_appearance] = 1;
  CGFloat v41 = *(void **)&v40[OBJC_IVAR____TtC6FindMy19FMCardContainerView_darkeningView];
  [v41 setAlpha:0.1];
  id v42 = [v40 v16[131]];
  id v43 = [v42 horizontalSizeClass];

  id v44 = [*(id *)&v40[OBJC_IVAR____TtC6FindMy19FMCardContainerView_bluredBackground] layer];
  CGFloat v45 = v44;
  if (v43 == (id)1)
  {
    [v44 setMaskedCorners:3];

    id v46 = [v41 layer];
    [v46 setMaskedCorners:3];
  }
  else
  {
    [v44 setMaskedCorners:15];

    id v46 = [v41 layer];
    [v46 setMaskedCorners:15];
  }
  CGFloat v47 = v65;

  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  CGFloat v48 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  CGFloat v65 = *(char **)(v57 + 8);
  uint64_t v49 = v60;
  ((void (*)(char *, uint64_t))v65)(v47, v60);
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = v2;
  aBlock[4] = sub_100259954;
  aBlock[5] = v50;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10062EFA8;
  CGFloat v51 = _Block_copy(aBlock);
  double v52 = v2;
  swift_release();
  CGFloat v53 = v62;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10005FE54();
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_10005ECA8();
  double v54 = v64;
  uint64_t v55 = v58;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v51);

  (*(void (**)(char *, uint64_t))(v59 + 8))(v54, v55);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v53, v61);
  ((void (*)(char *, uint64_t))v65)(v11, v49);
}

void sub_100259370(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_tabBar];
  if (v4)
  {
    id v5 = v4;
    [v5 setAlpha:1.0];
    uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_tabBarTopConstraint];
    if (v6) {
      [v6 setConstant:-48.0];
    }
    id v7 = [v5 superview];
    [v7 layoutIfNeeded];
  }
  id v8 = [v2 view];
  if (v8)
  {
    uint64_t v9 = v8;
    type metadata accessor for FMPassthroughView();
    uint64_t v10 = swift_dynamicCastClass();
    if (v10)
    {
      unint64_t v11 = &OBJC_IVAR____TtC6FindMy17FMPassthroughView_exemptViews;
      unint64_t v12 = (void *)(v10 + OBJC_IVAR____TtC6FindMy17FMPassthroughView_exemptViews);
      swift_beginAccess();
      if (*v12 >> 62)
      {
        swift_bridgeObjectRetain();
        id v13 = (char *)_CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v13) {
          goto LABEL_9;
        }
      }
      else
      {
        id v13 = *(char **)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v13)
        {
LABEL_9:
          double v14 = (void *)sub_100258388();
          if (v14) {
            goto LABEL_13;
          }
          if (*v12 >> 62) {
            goto LABEL_40;
          }
          uint64_t v15 = *(void *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
          unint64_t v16 = v15 - 1;
          if (!__OFSUB__(v15, 1))
          {
            do
            {
              double v14 = (void *)sub_100257AF4(v16);
LABEL_13:

              swift_endAccess();
              id v13 = *(char **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_passthroughView];
              if (!v13) {
                goto LABEL_44;
              }
              unint64_t v12 = *(void **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer];
              id v17 = (uint64_t **)&v13[*v11];
              swift_beginAccess();
              unint64_t v11 = *v17;
              if (!((unint64_t)*v17 >> 62))
              {
                id v18 = v13;
                id v19 = v12;
LABEL_16:
                sub_10001A1AC(0, 0, (uint64_t)v12, (unint64_t *)&qword_1006B79A0);
                swift_endAccess();

                goto LABEL_17;
              }
LABEL_38:
              CGFloat v45 = v13;
              id v46 = v12;
              swift_bridgeObjectRetain();
              uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              if ((v47 & 0x8000000000000000) == 0) {
                goto LABEL_16;
              }
              __break(1u);
LABEL_40:
              swift_bridgeObjectRetain();
              uint64_t v48 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              unint64_t v16 = v48 - 1;
            }
            while (!__OFSUB__(v48, 1));
          }
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
      }
      __break(1u);
      goto LABEL_38;
    }
LABEL_17:
  }
  double v20 = *(void **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController];
  if (v20)
  {
    uint64_t v21 = *(void *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController + 8];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8);
    id v24 = v20;
    id v25 = (void *)v23(ObjectType, v21);

    if (v25)
    {
      [v25 setContentOffset:0, 0.0, 0.0];
    }
  }
  double v26 = *(unsigned char **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer];
  v26[OBJC_IVAR____TtC6FindMy19FMCardContainerView_appearance] = 0;
  id v27 = *(void **)&v26[OBJC_IVAR____TtC6FindMy19FMCardContainerView_darkeningView];
  [v27 setAlpha:0.0];
  id v28 = [v26 traitCollection];
  id v29 = [v28 horizontalSizeClass];

  id v30 = [*(id *)&v26[OBJC_IVAR____TtC6FindMy19FMCardContainerView_bluredBackground] layer];
  id v31 = v30;
  if (v29 == (id)1)
  {
    [v30 setMaskedCorners:3];

    id v32 = [v27 layer];
    [v32 setMaskedCorners:3];
  }
  else
  {
    [v30 setMaskedCorners:15];

    id v32 = [v27 layer];
    [v32 setMaskedCorners:15];
  }

  id v33 = [v2 traitCollection];
  id v34 = [v33 horizontalSizeClass];

  if (v34 == (id)1)
  {
    sub_1000489A0(0, 0.64);
    [*(id *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground] setAlpha:*(double *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration] * 0.0];
    v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent] = 1;
    sub_10000F86C();
  }
  else
  {
    type metadata accessor for FMCardContainerViewController();
    uint64_t v35 = swift_dynamicCastClass();
    if (v35)
    {
      uint64_t v36 = v35;
      uint64_t v37 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent;
      double v38 = dbl_100562080[v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent]];
      id v39 = a1;
      sub_1000489A0(0, v38);
      double v40 = 0.64 - dbl_100562080[v2[v37]];
      if (v40 <= 0.0) {
        double v40 = 0.0;
      }
      [*(id *)(v36 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground) setAlpha:v40 * *(double *)(v36 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration)];
      *(unsigned char *)(v36 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent) = v2[v37];
      sub_10000F86C();
    }
  }
  id v41 = [v2 view];
  if (!v41) {
    goto LABEL_43;
  }
  id v42 = v41;
  id v43 = [v41 superview];

  if (v43)
  {
    type metadata accessor for FMPassthroughView();
    uint64_t v44 = swift_dynamicCastClass();
    if (v44) {
      *(unsigned char *)(v44 + OBJC_IVAR____TtC6FindMy17FMPassthroughView_enabled) = 1;
    }
  }
}

uint64_t sub_10025991C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100259954()
{
  sub_100256ED0(*(void *)(v0 + 16));
}

uint64_t sub_10025995C(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v18 < v2) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v8 = v19 + v5;
    if (!__OFADD__(v19, v5)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v3 >> 62) {
    goto LABEL_32;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v3 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v9 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      unint64_t *v3 = v9;
      uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  type metadata accessor for FMETASubscription();
  swift_arrayDestroy();
  if (v5)
  {
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v13 = v20 - v2;
      if (!__OFSUB__(v20, v2))
      {
LABEL_17:
        if (v13 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        double v14 = (const void *)(v11 + 32 + 8 * v2);
        if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v14 + 8 * v13) {
          memmove((void *)(v11 + 32 + 8 * v4), v14, 8 * v13);
        }
        if (!(v9 >> 62))
        {
          uint64_t v15 = *(void *)(v11 + 16);
          uint64_t v16 = v15 + v5;
          if (!__OFADD__(v15, v5))
          {
LABEL_23:
            *(void *)(v11 + 16) = v16;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v16 = v21 + v5;
        if (!__OFADD__(v21, v5)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = v12 - v2;
      if (!__OFSUB__(v12, v2)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:

  return specialized Array._endMutation()();
}

uint64_t sub_100259C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMPeopleCellViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *sub_100259CA0(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= v4[3] >> 1)
  {
    if (!v8) {
      goto LABEL_21;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t result = (char *)sub_10007D788(result, v11, 1, v4);
    uint64_t v4 = result;
    if (!v8) {
      goto LABEL_21;
    }
  }
  uint64_t v12 = v4[2];
  size_t v13 = v12 - a2;
  if (__OFSUB__(v12, a2)) {
    goto LABEL_27;
  }
  if ((v13 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)v4 + a1 + 32;
    double v14 = (char *)v4 + a2 + 32;
    if (a1 != a2 || result >= &v14[v13]) {
      uint64_t result = (char *)memmove(result, v14, v13);
    }
    uint64_t v15 = v4[2];
    BOOL v16 = __OFADD__(v15, v8);
    uint64_t v17 = v15 + v8;
    if (!v16)
    {
      v4[2] = v17;
LABEL_21:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100259DF8(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_10007DBC4(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  sub_10005D034(&qword_1006B79B0);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    BOOL v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (void *)&v16[16 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100259F6C(uint64_t a1, uint64_t a2)
{
  return sub_100259F80(a1, a2, &qword_1006B79A8);
}

uint64_t sub_100259F80(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v3 = a2;
    uint64_t v5 = a1;
    unint64_t v7 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v15 < v3) {
    goto LABEL_15;
  }
LABEL_4:
  uint64_t v8 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v9 = v5 - v3;
  if (__OFSUB__(0, v8))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v11 = v16 + v27;
    if (!__OFADD__(v16, v27)) {
      goto LABEL_8;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  unint64_t v7 = *v4;
  uint64_t v27 = v5 - v3;
  uint64_t v28 = v5;
  if (*v4 >> 62) {
    goto LABEL_18;
  }
  uint64_t v10 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v11 = v10 - v8;
  if (__OFADD__(v10, v9)) {
    goto LABEL_20;
  }
LABEL_8:
  unint64_t v7 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v4 = v7;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
    {
      uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
      if (v11 <= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      {
        BOOL v14 = v6;
        goto LABEL_24;
      }
    }
  }
LABEL_21:
  BOOL v14 = v6;
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  swift_bridgeObjectRelease();
  unint64_t *v4 = v7;
  uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_24:
  uint64_t v17 = (char *)(v13 + 32 + 8 * v28);
  sub_100006060(0, v14);
  swift_arrayDestroy();
  uint64_t v18 = v27;
  if (v27)
  {
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v18 = v27;
      uint64_t v20 = v25 - v3;
      if (!__OFSUB__(v25, v3))
      {
LABEL_27:
        if (v20 < 0)
        {
LABEL_43:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v21 = (char *)(v13 + 32 + 8 * v3);
        if (v28 != v3 || v17 >= &v21[8 * v20])
        {
          memmove(v17, v21, 8 * v20);
          uint64_t v18 = v27;
        }
        if (!(v7 >> 62))
        {
          uint64_t v22 = *(void *)(v13 + 16);
          uint64_t v23 = v22 + v18;
          if (!__OFADD__(v22, v18))
          {
LABEL_33:
            *(void *)(v13 + 16) = v23;
            goto LABEL_34;
          }
          goto LABEL_42;
        }
LABEL_40:
        swift_bridgeObjectRetain();
        uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v23 = v26 + v27;
        if (!__OFADD__(v26, v27)) {
          goto LABEL_33;
        }
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
    }
    else
    {
      uint64_t v19 = *(void *)(v13 + 16);
      uint64_t v20 = v19 - v3;
      if (!__OFSUB__(v19, v3)) {
        goto LABEL_27;
      }
    }
    __break(1u);
    goto LABEL_40;
  }
LABEL_34:

  return specialized Array._endMutation()();
}

uint64_t sub_10025A2A4(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_10007D368(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(type metadata accessor for FMIPSafeLocation() - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025A48C()
{
  return _swift_deallocObject(v0, 40, 7);
}

id sub_10025A4C8()
{
  return sub_100255CE8(*(double *)(v0 + 24), *(double *)(v0 + 32));
}

void sub_10025A4F8(uint64_t a1)
{
  sub_100257154(a1, *(void **)(v1 + 16));
}

id sub_10025A500()
{
  id result = *(id *)(v0 + 16);
  if (result) {
    return [result dismissViewControllerAnimated:1 completion:0];
  }
  return result;
}

id sub_10025A520()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground) setAlpha:*(double *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration)* 0.0];
}

void sub_10025A550(uint64_t a1)
{
  sub_100256FA4(a1, *(void **)(v1 + 16));
}

uint64_t sub_10025A558()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10025A598()
{
  return _swift_deallocObject(v0, 25, 7);
}

void sub_10025A5D0()
{
  sub_100256C5C(*(unsigned char **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

id sub_10025A5DC()
{
  return sub_100256CF4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_10025A720()
{
  uint64_t v1 = v0;
  [v0 setDismissalType:3];
  uint64_t v2 = self;
  id v3 = [v2 mainBundle];
  v35._uint64_t countAndFlagsBits = 0xD000000000000018;
  v4._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  v4._object = (void *)0x800000010058EA60;
  v5.value._object = (void *)0x800000010057EF60;
  v35._object = (void *)0x800000010057EF80;
  v5.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v35);

  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setTitle:v7];

  uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC6FindMy37FMAccessoryDiscoveryFlowSelectionCard_imageView];
  sub_100006060(0, (unint64_t *)&qword_1006BA4D0);
  id v9 = sub_1003E7408(0x63496D6574496F4ELL, 0xEA00000000006E6FLL, 6778480, 0xE300000000000000);
  [v8 setImage:v9];

  [v8 setContentMode:4];
  id v10 = [v2 mainBundle];
  v11.value._uint64_t countAndFlagsBits = 0xD000000000000010;
  v36._uint64_t countAndFlagsBits = 0xD000000000000015;
  v12._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v36._object = (void *)0x80000001005875D0;
  v12._object = (void *)0x800000010058EA80;
  v11.value._object = (void *)0x80000001005875B0;
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v11, (NSBundle)v10, v13, v36);

  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain_n();
  swift_bridgeObjectRetain();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v33 = sub_10025B154;
  uint64_t v34 = v14;
  aBlock = _NSConcreteStackBlock;
  uint64_t v30 = 1107296256;
  id v31 = sub_10000841C;
  id v32 = &unk_10062F318;
  unint64_t v16 = _Block_copy(&aBlock);
  uint64_t v17 = self;
  id v18 = [v17 actionWithTitle:v15 style:0 handler:v16];

  _Block_release(v16);
  swift_release();
  id v19 = [v1 addAction:v18];

  swift_bridgeObjectRelease();
  swift_release_n();

  id v20 = [v2 mainBundle];
  v21._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v37._uint64_t countAndFlagsBits = 0xD000000000000018;
  v37._object = (void *)0x800000010057EF80;
  v21._object = (void *)0x800000010058EAA0;
  v22.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v22.value._object = (void *)0x800000010057EF60;
  v23._uint64_t countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v37);

  uint64_t v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain_n();
  swift_bridgeObjectRetain();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v33 = sub_10025B174;
  uint64_t v34 = v24;
  aBlock = _NSConcreteStackBlock;
  uint64_t v30 = 1107296256;
  id v31 = sub_10000841C;
  id v32 = &unk_10062F340;
  uint64_t v26 = _Block_copy(&aBlock);
  id v27 = [v17 actionWithTitle:v25 style:1 handler:v26];

  _Block_release(v26);
  swift_release();
  id v28 = [v1 addAction:v27];

  swift_bridgeObjectRelease();
  swift_release_n();
}

void sub_10025ABF4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = type metadata accessor for FMAccessoryDiscoveryCoordinator.Event(0);
  __chkstk_darwin(v4);
  Swift::String v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    id v9 = (void *)swift_unknownObjectWeakLoadStrong();

    if (v9)
    {
      *Swift::String v6 = a3;
      swift_storeEnumTagMultiPayload();
      sub_1002792E0((uint64_t)v6);

      sub_10025B194((uint64_t)v6);
    }
  }
}

void sub_10025ACEC()
{
  uint64_t v1 = v0;
  uint64_t v24 = self;
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10055B950;
  id v3 = *(void **)&v1[OBJC_IVAR____TtC6FindMy37FMAccessoryDiscoveryFlowSelectionCard_imageView];
  id v4 = [v3 centerXAnchor];
  id v5 = [v1 contentView];
  id v6 = [v5 mainContentGuide];

  id v7 = [v6 centerXAnchor];
  id v8 = [v4 constraintEqualToAnchor:v7];

  *(void *)(v2 + 32) = v8;
  id v9 = [v3 topAnchor];
  id v10 = [v1 contentView];
  id v11 = [v10 mainContentGuide];

  id v12 = [v11 topAnchor];
  id v13 = [v9 constraintGreaterThanOrEqualToAnchor:v12];

  *(void *)(v2 + 40) = v13;
  id v14 = [v3 bottomAnchor];
  id v15 = [v1 contentView];
  id v16 = [v15 mainContentGuide];

  id v17 = [v16 bottomAnchor];
  id v18 = [v14 constraintLessThanOrEqualToAnchor:v17];

  *(void *)(v2 + 48) = v18;
  id v19 = [v3 centerYAnchor];
  id v20 = [v1 contentView];
  id v21 = [v20 mainContentGuide];

  id v22 = [v21 centerYAnchor];
  id v23 = [v19 constraintEqualToAnchor:v22];

  *(void *)(v2 + 56) = v23;
  specialized Array._endMutation()();
  sub_100006060(0, (unint64_t *)&qword_1006AEE60);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v24 activateConstraints:isa];
}

id sub_10025B068()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAccessoryDiscoveryFlowSelectionCard();
  return [super dealloc];
}

uint64_t type metadata accessor for FMAccessoryDiscoveryFlowSelectionCard()
{
  return self;
}

uint64_t sub_10025B11C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10025B154(uint64_t a1)
{
  sub_10025ABF4(a1, v1, 1);
}

void sub_10025B174(uint64_t a1)
{
  sub_10025ABF4(a1, v1, 0);
}

uint64_t sub_10025B194(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMAccessoryDiscoveryCoordinator.Event(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FMIPUnknownItem.findingProductUUID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10025B5BC((uint64_t (*)(void))&type metadata accessor for UUID, a1);
}

uint64_t FMIPUnknownItem.findingProductType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for FMIPProductType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  FMIPUnknownItem.productType.getter();
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for FMIPProductType.b389(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    sub_100003F10((uint64_t)v5, &qword_1006B5280);
LABEL_5:
    uint64_t v8 = enum case for FMFindingProductType.item(_:);
    uint64_t v9 = type metadata accessor for FMFindingProductType();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(a1, v8, v9);
  }
  if (v6 == enum case for FMIPProductType.zeus(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    uint64_t v7 = type metadata accessor for FMIPZeusProductInformation();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
    goto LABEL_5;
  }
  if (v6 == enum case for FMIPProductType.hawkeye(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    if ((FMIPUnknownItem.isAppleAudioAccessory.getter() & 1) != 0
      && (uint64_t v11 = FMIPUnknownItem.unknownBeacon.getter()) != 0)
    {
      id v12 = (void *)v11;
      uint64_t v13 = SPUnknownBeacon.productId.getter();
      id v14 = [v12 type];
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v17 = v16;
      if (v15 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v17 == v18) {
        char v19 = 1;
      }
      else {
        char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)a1 = v13;
      *(unsigned char *)(a1 + 8) = v19 & 1;
      id v20 = (unsigned int *)&enum case for FMFindingProductType.airpods(_:);
    }
    else
    {
      id v20 = (unsigned int *)&enum case for FMFindingProductType.item(_:);
    }
    uint64_t v21 = *v20;
    uint64_t v22 = type metadata accessor for FMFindingProductType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(a1, v21, v22);
    return sub_100003F10((uint64_t)v5, &qword_1006B3700);
  }
  else
  {
    uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
    __break(1u);
  }
  return result;
}

uint64_t FMIPUnknownItem.findingPartType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for FMFindingPartType.standalone(_:);
  uint64_t v3 = type metadata accessor for FMFindingPartType();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t FMIPUnknownItem.findingPartInfo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10025B5BC((uint64_t (*)(void))&type metadata accessor for FMFindingPartInfo, a1);
}

uint64_t sub_10025B5BC@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 1, 1, v3);
}

void *FMIPUnknownItem.supportedFindingTechnologies.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMFindingTechnology();
  uint64_t v35 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  id v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v34 = (uint64_t)v33 - v6;
  uint64_t v7 = type metadata accessor for FMItemCapabilities();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v33 - v12;
  Swift::String v36 = &_swiftEmptySetSingleton;
  FMIPUnknownItem.capabilities.getter();
  static FMItemCapabilities.canR1.getter();
  uint64_t v14 = sub_100262ADC((unint64_t *)&qword_1006B1128, (void (*)(uint64_t))&type metadata accessor for FMItemCapabilities);
  char v15 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v11, v7);
  v16(v13, v7);
  if (v15)
  {
    uint64_t v17 = &v5[*(int *)(sub_10005D034(&qword_1006B27B8) + 48)];
    *id v5 = 1;
    v33[1] = v14;
    v33[2] = v1;
    uint64_t v18 = v5;
    uint64_t v19 = enum case for FMFindingType.ut(_:);
    uint64_t v20 = type metadata accessor for FMFindingType();
    uint64_t v21 = v2;
    uint64_t v22 = v35;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v17, v19, v20);
    (*(void (**)(char *, void, uint64_t))(v22 + 104))(v18, enum case for FMFindingTechnology.precision(_:), v21);
    uint64_t v23 = v34;
    sub_10025C878(v34, v18);
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    uint64_t v25 = v23;
    id v5 = v18;
    uint64_t v2 = v21;
    v24(v25, v21);
  }
  FMIPUnknownItem.capabilities.getter();
  static FMItemCapabilities.canBTFinding.getter();
  char v26 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  v16(v11, v7);
  v16(v13, v7);
  if (v26)
  {
    uint64_t v27 = *(int *)(sub_10005D034(&qword_1006B5E00) + 48);
    uint64_t v28 = enum case for FMFindingType.ut(_:);
    uint64_t v29 = type metadata accessor for FMFindingType();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v5, v28, v29);
    v5[v27] = 0;
    uint64_t v30 = v35;
    (*(void (**)(char *, void, uint64_t))(v35 + 104))(v5, enum case for FMFindingTechnology.proximity(_:), v2);
    uint64_t v31 = v34;
    sub_10025C878(v34, v5);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v2);
  }
  return v36;
}

uint64_t FMIPUnknownItem.videoInfo.getter()
{
  uint64_t v0 = type metadata accessor for FMFindingProductType();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  FMIPUnknownItem.findingProductType.getter((uint64_t)v3);
  char v4 = FMFindingProductType.isAirPods.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v4) {
    return FMR1AirPodsVideoInfo.getter();
  }
  else {
    return FMR1AirTagDefaultVideoInfo.getter();
  }
}

uint64_t sub_10025BB1C@<X0>(uint64_t a1@<X8>)
{
  return sub_10025BB4C((uint64_t (*)(void))&type metadata accessor for UUID, a1);
}

uint64_t sub_10025BB34@<X0>(uint64_t a1@<X8>)
{
  return sub_10025BB4C((uint64_t (*)(void))&type metadata accessor for FMFindingPartInfo, a1);
}

uint64_t sub_10025BB4C@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  char v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 1, 1, v3);
}

uint64_t sub_10025BBC8(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for FMFFriend();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100262ADC(&qword_1006B1168, (void (*)(uint64_t))&type metadata accessor for FMFFriend);
  swift_bridgeObjectRetain();
  id v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100262ADC(&qword_1006B7A30, (void (*)(uint64_t))&type metadata accessor for FMFFriend);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_10025F2B0((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_10025BEEC(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for FMIPItem();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100262ADC(&qword_1006B1180, (void (*)(uint64_t))&type metadata accessor for FMIPItem);
  swift_bridgeObjectRetain();
  id v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100262ADC(&qword_1006B7010, (void (*)(uint64_t))&type metadata accessor for FMIPItem);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_10025F56C((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_10025C210(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  sub_1003C209C(v17, a2);
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v9 = swift_bridgeObjectRetain();
    char v10 = sub_1003BF0EC(v9, a2);
    swift_bridgeObjectRelease();
    if (v10)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v8);
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v11 = ~v7;
    while (1)
    {
      unint64_t v8 = (v8 + 1) & v11;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        break;
      }
      uint64_t v12 = swift_bridgeObjectRetain();
      char v13 = sub_1003BF0EC(v12, a2);
      swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_6;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v17[0] = *v2;
  *uint64_t v2 = 0x8000000000000000;
  Swift::Int v16 = swift_bridgeObjectRetain();
  sub_10025F828(v16, v8, isUniquelyReferenced_nonNull_native);
  *uint64_t v2 = *(void *)&v17[0];
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_10025C3A4(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_10025F9B8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_10025C554(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for FMIPPlaySoundChannels();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100262ADC(&qword_1006B36E0, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
  swift_bridgeObjectRetain();
  id v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    Swift::Int v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100262ADC(&qword_1006B36E8, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_10025FB54((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_10025C878(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for FMFindingTechnology();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100262ADC(&qword_1006B7A60, (void (*)(uint64_t))&type metadata accessor for FMFindingTechnology);
  swift_bridgeObjectRetain();
  id v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    Swift::Int v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100262ADC(&qword_1006B7A68, (void (*)(uint64_t))&type metadata accessor for FMFindingTechnology);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_10025FE10((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_10025CB9C()
{
  return sub_100262ADC(&qword_1006B7A28, (void (*)(uint64_t))&type metadata accessor for FMIPUnknownItem);
}

uint64_t sub_10025CBE4(unsigned char *a1, Swift::Int a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  switch((char)a2)
  {
    case 2:
      Swift::UInt v6 = 0;
      goto LABEL_9;
    case 3:
      Swift::UInt v6 = 1;
      goto LABEL_9;
    case 4:
      Swift::UInt v6 = 2;
      goto LABEL_9;
    case 5:
      Swift::UInt v6 = 4;
      goto LABEL_9;
    case 6:
      Swift::UInt v6 = 5;
      goto LABEL_9;
    case 7:
      Swift::UInt v6 = 6;
LABEL_9:
      Hasher._combine(_:)(v6);
      break;
    default:
      Hasher._combine(_:)(3uLL);
      Hasher._combine(_:)(a2 & 1);
      break;
  }
  Swift::Int v7 = Hasher._finalize()();
  uint64_t v8 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_28:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1002600CC(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_29;
  }
  uint64_t v10 = ~v8;
  while (2)
  {
    switch(*(unsigned char *)(*(void *)(v5 + 48) + v9))
    {
      case 2:
        if (a2 != 2) {
          goto LABEL_13;
        }
        goto LABEL_27;
      case 3:
        if (a2 == 3) {
          goto LABEL_27;
        }
        goto LABEL_13;
      case 4:
        if (a2 == 4) {
          goto LABEL_27;
        }
        goto LABEL_13;
      case 5:
        if (a2 == 5) {
          goto LABEL_27;
        }
        goto LABEL_13;
      case 6:
        if (a2 == 6) {
          goto LABEL_27;
        }
        goto LABEL_13;
      case 7:
        if (a2 != 7) {
          goto LABEL_13;
        }
        goto LABEL_27;
      default:
        if ((a2 - 2) < 6u
          || ((a2 ^ ((*(unsigned char *)(*(void *)(v5 + 48) + v9) & 1) == 0)) & 1) == 0)
        {
LABEL_13:
          unint64_t v9 = (v9 + 1) & v10;
          if (((*(void *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
            goto LABEL_28;
          }
          continue;
        }
LABEL_27:
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v9);
LABEL_29:
        *a1 = a2;
        return result;
    }
  }
}

uint64_t sub_10025CE58(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100262ADC((unint64_t *)&unk_1006C0B10, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  id v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    Swift::Int v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100262ADC((unint64_t *)&unk_1006BEAD0, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_100260370((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

Swift::Int sub_10025D17C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_10005D034(&qword_1006B7A48);
    uint64_t v2 = static _SetStorage.convert(_:capacity:)();
    uint64_t v14 = v2;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      sub_10002C148();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_10025DB5C();
          uint64_t v2 = v14;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

uint64_t sub_10025D364()
{
  uint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for FMFFriend();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  id v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_10005D034(&qword_1006B7A38);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    Swift::String v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    uint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *Swift::String v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      char v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_100262ADC(&qword_1006B1168, (void (*)(uint64_t))&type metadata accessor for FMFFriend);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_10025D760()
{
  uint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for FMIPItem();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  id v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_10005D034(&qword_1006B5E38);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    Swift::String v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    uint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *Swift::String v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      char v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_100262ADC(&qword_1006B1180, (void (*)(uint64_t))&type metadata accessor for FMIPItem);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_10025DB5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10005D034(&qword_1006B7A48);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    unint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v4 + 40));
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

unint64_t sub_10025DDFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10005D034(&qword_1006B7A58);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    unint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v14 = v13 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_23;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_23;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_23;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_23:
                swift_release();
                uint64_t v19 = 1 << *(unsigned char *)(v2 + 32);
                if (v19 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v19 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v19;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_29;
                  }
                  if (v12 >= v9) {
                    goto LABEL_23;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_22:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v14 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v15 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      Hasher.init(_seed:)();
      sub_1003C209C(v20, v15);
      Hasher._finalize()();
      unint64_t result = _HashTable.nextHole(atOrAfter:)();
      *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      *(void *)(*(void *)(v4 + 48) + 8 * result) = v15;
      ++*(void *)(v4 + 16);
    }
  }
  unint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_10025E044()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10005D034(&qword_1006B3918);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_10025E324()
{
  uint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for FMIPPlaySoundChannels();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  id v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_10005D034(&qword_1006B5E70);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    Swift::String v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *Swift::String v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_100262ADC(&qword_1006B36E0, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_10025E720()
{
  uint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for FMFindingTechnology();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  id v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_10005D034(&qword_1006B7A70);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    Swift::String v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *Swift::String v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_100262ADC(&qword_1006B7A60, (void (*)(uint64_t))&type metadata accessor for FMFindingTechnology);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

unint64_t sub_10025EB1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10005D034(&qword_1006B7A50);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v5 = (void *)(v2 + 56);
    uint64_t v6 = -1;
    if (v4 < 64) {
      uint64_t v6 = ~(-1 << v4);
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v4 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v11 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v12 = v11 | (v10 << 6);
      }
      else
      {
        int64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return result;
        }
        if (v13 >= v8) {
          goto LABEL_22;
        }
        unint64_t v14 = v5[v13];
        ++v10;
        if (!v14)
        {
          int64_t v10 = v13 + 1;
          if (v13 + 1 >= v8) {
            goto LABEL_22;
          }
          unint64_t v14 = v5[v10];
          if (!v14)
          {
            int64_t v10 = v13 + 2;
            if (v13 + 2 >= v8) {
              goto LABEL_22;
            }
            unint64_t v14 = v5[v10];
            if (!v14)
            {
              int64_t v15 = v13 + 3;
              if (v15 >= v8)
              {
LABEL_22:
                swift_release();
                uint64_t v16 = 1 << *(unsigned char *)(v2 + 32);
                if (v16 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v5 = -1 << v16;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v14 = v5[v15];
              if (!v14)
              {
                while (1)
                {
                  int64_t v10 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_28;
                  }
                  if (v10 >= v8) {
                    goto LABEL_22;
                  }
                  unint64_t v14 = v5[v10];
                  ++v15;
                  if (v14) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v10 = v15;
            }
          }
        }
LABEL_21:
        unint64_t v7 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
      }
      unint64_t result = sub_10025F168(*(unsigned char *)(*(void *)(v2 + 48) + v12), v3);
    }
  }
  unint64_t result = swift_release();
  uint64_t *v1 = v3;
  return result;
}

uint64_t sub_10025ECE8()
{
  uint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  id v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_10005D034(&qword_1006B7A40);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    Swift::String v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *Swift::String v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_100262ADC((unint64_t *)&unk_1006C0B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

unint64_t sub_10025F0E4(uint64_t a1, void *a2)
{
  NSObject._rawHashValue(seed:)(a2[5]);
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

unint64_t sub_10025F168(char a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  switch(a1)
  {
    case 2:
      Swift::UInt v4 = 0;
      goto LABEL_9;
    case 3:
      Swift::UInt v4 = 1;
      goto LABEL_9;
    case 4:
      Swift::UInt v4 = 2;
      goto LABEL_9;
    case 5:
      Swift::UInt v4 = 4;
      goto LABEL_9;
    case 6:
      Swift::UInt v4 = 5;
      goto LABEL_9;
    case 7:
      Swift::UInt v4 = 6;
LABEL_9:
      Hasher._combine(_:)(v4);
      break;
    default:
      Hasher._combine(_:)(3uLL);
      Hasher._combine(_:)(a1 & 1);
      break;
  }
  Hasher._finalize()();
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(unsigned char *)(*(void *)(a2 + 48) + result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_10025F2B0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for FMFFriend();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_10025D364();
  }
  else
  {
    if (v11 > v10)
    {
      sub_100260CEC((uint64_t (*)(void))&type metadata accessor for FMFFriend, &qword_1006B7A38);
      goto LABEL_12;
    }
    sub_100260F9C();
  }
  uint64_t v12 = *v3;
  sub_100262ADC(&qword_1006B1168, (void (*)(uint64_t))&type metadata accessor for FMFFriend);
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    int64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    unint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_100262ADC(&qword_1006B7A30, (void (*)(uint64_t))&type metadata accessor for FMFFriend);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10025F56C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for FMIPItem();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_10025D760();
  }
  else
  {
    if (v11 > v10)
    {
      sub_100260CEC((uint64_t (*)(void))&type metadata accessor for FMIPItem, &qword_1006B5E38);
      goto LABEL_12;
    }
    sub_10026134C();
  }
  uint64_t v12 = *v3;
  sub_100262ADC(&qword_1006B1180, (void (*)(uint64_t))&type metadata accessor for FMIPItem);
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    int64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    unint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_100262ADC(&qword_1006B7010, (void (*)(uint64_t))&type metadata accessor for FMIPItem);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_10025F828(Swift::Int result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_10025DDFC();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (Swift::Int)sub_1002607D8();
      goto LABEL_14;
    }
    sub_100261978();
  }
  uint64_t v8 = *v3;
  Hasher.init(_seed:)();
  sub_1003C209C(v19, v5);
  uint64_t result = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = swift_bridgeObjectRetain();
    char v11 = sub_1003BF0EC(v10, v5);
    uint64_t result = swift_bridgeObjectRelease();
    if (v11)
    {
LABEL_13:
      sub_10005D034((uint64_t *)&unk_1006B2C30);
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v12 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        uint64_t v13 = swift_bridgeObjectRetain();
        char v14 = sub_1003BF0EC(v13, v5);
        uint64_t result = swift_bridgeObjectRelease();
        if (v14) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v15 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v15 + 48) + 8 * a2) = v5;
  uint64_t v16 = *(void *)(v15 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17) {
    __break(1u);
  }
  else {
    *(void *)(v15 + 16) = v18;
  }
  return result;
}

Swift::Int sub_10025F9B8(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_10025E044();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_100260984();
      goto LABEL_22;
    }
    sub_100261B8C();
  }
  uint64_t v11 = *v4;
  Hasher.init(_seed:)();
  String.hash(into:)();
  uint64_t result = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  char v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *char v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_10025FB54(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for FMIPPlaySoundChannels();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_10025E324();
  }
  else
  {
    if (v11 > v10)
    {
      sub_100260CEC((uint64_t (*)(void))&type metadata accessor for FMIPPlaySoundChannels, &qword_1006B5E70);
      goto LABEL_12;
    }
    sub_100261E3C();
  }
  uint64_t v12 = *v3;
  sub_100262ADC(&qword_1006B36E0, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    int64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_100262ADC(&qword_1006B36E8, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10025FE10(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for FMFindingTechnology();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_10025E720();
  }
  else
  {
    if (v11 > v10)
    {
      sub_100260CEC((uint64_t (*)(void))&type metadata accessor for FMFindingTechnology, &qword_1006B7A70);
      goto LABEL_12;
    }
    sub_1002621EC();
  }
  uint64_t v12 = *v3;
  sub_100262ADC(&qword_1006B7A60, (void (*)(uint64_t))&type metadata accessor for FMFindingTechnology);
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    int64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_100262ADC(&qword_1006B7A68, (void (*)(uint64_t))&type metadata accessor for FMFindingTechnology);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_1002600CC(Swift::Int result, unint64_t a2, char a3)
{
  int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_10025EB1C();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (Swift::Int)sub_100260B58();
        goto LABEL_35;
      }
      sub_10026259C();
    }
    uint64_t v8 = *v3;
    Hasher.init(_seed:)();
    switch((char)v5)
    {
      case 2:
        Swift::UInt v9 = 0;
        goto LABEL_16;
      case 3:
        Swift::UInt v9 = 1;
        goto LABEL_16;
      case 4:
        Swift::UInt v9 = 2;
        goto LABEL_16;
      case 5:
        Swift::UInt v9 = 4;
        goto LABEL_16;
      case 6:
        Swift::UInt v9 = 5;
        goto LABEL_16;
      case 7:
        Swift::UInt v9 = 6;
LABEL_16:
        Hasher._combine(_:)(v9);
        break;
      default:
        Hasher._combine(_:)(3uLL);
        Hasher._combine(_:)(v5 & 1);
        break;
    }
    uint64_t result = Hasher._finalize()();
    uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v10;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v11 = ~v10;
      while (1)
      {
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 2:
            if (v5 != 2) {
              goto LABEL_20;
            }
            goto LABEL_34;
          case 3:
            if (v5 == 3) {
              goto LABEL_34;
            }
            goto LABEL_20;
          case 4:
            if (v5 == 4) {
              goto LABEL_34;
            }
            goto LABEL_20;
          case 5:
            if (v5 == 5) {
              goto LABEL_34;
            }
            goto LABEL_20;
          case 6:
            if (v5 != 6) {
              goto LABEL_20;
            }
            goto LABEL_34;
          case 7:
            if (v5 == 7) {
              goto LABEL_34;
            }
            goto LABEL_20;
          default:
            if (v5 - 2) >= 6u && ((v5 ^ ((*(unsigned char *)(*(void *)(v8 + 48) + a2) & 1) == 0)))
            {
LABEL_34:
              uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
              __break(1u);
              goto LABEL_35;
            }
LABEL_20:
            a2 = (a2 + 1) & v11;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              goto LABEL_35;
            }
            break;
        }
      }
    }
  }
LABEL_35:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14)
  {
    __break(1u);
    JUMPOUT(0x100260340);
  }
  *(void *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_100260370(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::UInt v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_10025ECE8();
  }
  else
  {
    if (v11 > v10)
    {
      sub_100260CEC((uint64_t (*)(void))&type metadata accessor for UUID, &qword_1006B7A40);
      goto LABEL_12;
    }
    sub_10026272C();
  }
  uint64_t v12 = *v3;
  sub_100262ADC((unint64_t *)&unk_1006C0B10, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    int64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_100262ADC((unint64_t *)&unk_1006BEAD0, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

id sub_10026062C()
{
  uint64_t v1 = v0;
  sub_10005D034(&qword_1006B7A48);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1002607D8()
{
  uint64_t v1 = v0;
  sub_10005D034(&qword_1006B7A58);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100260984()
{
  uint64_t v1 = v0;
  sub_10005D034(&qword_1006B3918);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v19 = *v17;
    v19[1] = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100260B38()
{
  return sub_100260CEC((uint64_t (*)(void))&type metadata accessor for FMIPPlaySoundChannels, &qword_1006B5E70);
}

void *sub_100260B58()
{
  uint64_t v1 = v0;
  sub_10005D034(&qword_1006B7A50);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100260CEC(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - v7;
  sub_10005D034(a2);
  uint64_t v9 = *v2;
  uint64_t v10 = static _SetStorage.copy(original:)();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    id result = (void *)swift_release();
LABEL_30:
    uint64_t *v4 = v11;
    return result;
  }
  id result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  BOOL v26 = v4;
  uint64_t v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    id result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_100260F9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMFFriend();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10005D034(&qword_1006B7A38);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_100262ADC(&qword_1006B1168, (void (*)(uint64_t))&type metadata accessor for FMFFriend);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10026134C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPItem();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10005D034(&qword_1006B5E38);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_100262ADC(&qword_1006B1180, (void (*)(uint64_t))&type metadata accessor for FMIPItem);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1002616FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10005D034(&qword_1006B7A48);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t v28 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    Swift::Int v19 = *(void *)(v4 + 40);
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = NSObject._rawHashValue(seed:)(v19);
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v28;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_100261978()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10005D034(&qword_1006B7A58);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    unint64_t result = swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  unint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_7;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v9) {
      goto LABEL_23;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_23;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_23;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_7:
    uint64_t v15 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    sub_1003C209C(v19, v15);
    Hasher._finalize()();
    unint64_t result = _HashTable.nextHole(atOrAfter:)();
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(*(void *)(v4 + 48) + 8 * result) = v15;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_23:
    swift_release();
    uint64_t v1 = v0;
    goto LABEL_24;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_23;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_22;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100261B8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10005D034(&qword_1006B3918);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    Swift::Int v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100261E3C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPPlaySoundChannels();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10005D034(&qword_1006B5E70);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_100262ADC(&qword_1006B36E0, (void (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1002621EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMFindingTechnology();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10005D034(&qword_1006B7A70);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_100262ADC(&qword_1006B7A60, (void (*)(uint64_t))&type metadata accessor for FMFindingTechnology);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_10026259C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10005D034(&qword_1006B7A50);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  if (!*(void *)(v2 + 16))
  {
LABEL_23:
    unint64_t result = swift_release();
    uint64_t *v1 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = v2 + 56;
  uint64_t v6 = -1;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  unint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_6;
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v8) {
      goto LABEL_22;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v8) {
        goto LABEL_22;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v8) {
          goto LABEL_22;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v10);
        if (!v14) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_6:
    unint64_t result = sub_10025F168(*(unsigned char *)(*(void *)(v2 + 48) + v12), v3);
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v8)
  {
LABEL_22:
    swift_release();
    goto LABEL_23;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_22;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_21;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10026272C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10005D034(&qword_1006B7A40);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_100262ADC((unint64_t *)&unk_1006C0B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100262ADC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_100262B24(uint64_t a1)
{
  uint64_t v31 = a1;
  uint64_t v38 = type metadata accessor for UIHostingControllerSizingOptions();
  uint64_t v35 = *(void *)(v38 - 8);
  uint64_t v36 = v35;
  __chkstk_darwin(v38);
  uint64_t v37 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for Font.TextStyle();
  uint64_t v3 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMChooseMapView();
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_allocWithZone((Class)MKMapView);
  uint64_t v33 = v1;
  id v11 = [v10 init];
  sub_10005D034(&qword_1006B1C30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10055B960;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  uint64_t v13 = self;
  unint64_t v14 = NSForegroundColorAttributeName;
  *(void *)(inited + 40) = [v13 labelColor];
  *(void *)(inited + 48) = NSFontAttributeName;
  int64_t v15 = self;
  int64_t v16 = NSFontAttributeName;
  unint64_t v17 = v11;
  uint64_t v18 = v31;
  *(void *)(inited + 56) = [v15 preferredFontForTextStyle:UIFontTextStyleFootnote];
  unint64_t v19 = sub_10014BFBC(inited);
  sub_1000E79DC(v19);
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v21 = [v11 mapAttributionWithStringAttributes:isa underlineText:1];

  type metadata accessor for FMChooseMapViewModel();
  swift_allocObject();
  swift_retain();
  id v32 = v21;
  uint64_t v22 = sub_100254470(v18, v21);
  *(_OWORD *)uint64_t v9 = xmmword_100562190;
  *((_OWORD *)v9 + 1) = xmmword_1005621A0;
  *((void *)v9 + 4) = 0x4028000000000000;
  uint64_t v23 = (uint64_t *)&v9[*(int *)(v7 + 32)];
  *uint64_t v23 = swift_getKeyPath();
  sub_10005D034(&qword_1006B45D0);
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = (uint64_t *)&v9[*(int *)(v7 + 36)];
  *uint64_t v24 = swift_getKeyPath();
  sub_10005D034(&qword_1006B45D8);
  swift_storeEnumTagMultiPayload();
  *(void *)&v39[0] = 0x4020000000000000;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Font.TextStyle.footnote(_:), v34);
  sub_100196AB8();
  ScaledMetric.init(wrappedValue:relativeTo:)();
  *((void *)v9 + 5) = sub_1002639BC;
  *((void *)v9 + 6) = v22;
  v9[56] = 0;
  id v25 = objc_allocWithZone((Class)sub_10005D034(&qword_1006B7AA8));
  uint64_t v26 = UIHostingController.init(rootView:)();
  unint64_t v27 = v33;
  *(void *)&v33[OBJC_IVAR____TtC6FindMy25FMChooseMapViewController_hostingViewController] = v26;
  sub_10005D034(&qword_1006B7AB0);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_10055B970;
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  *(void *)&v39[0] = v28;
  sub_1002639C4();
  sub_10005D034(&qword_1006B7AC0);
  sub_100263A1C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  dispatch thunk of UIHostingController.sizingOptions.setter();

  if (qword_1006AE0C0 != -1) {
    swift_once();
  }
  unsigned char v39[4] = xmmword_1006D1AD0;
  v39[5] = *(_OWORD *)&qword_1006D1AE0;
  v39[6] = xmmword_1006D1AF0;
  uint64_t v40 = qword_1006D1B00;
  v39[0] = xmmword_1006D1A90;
  v39[1] = unk_1006D1AA0;
  v39[2] = unk_1006D1AB0;
  v39[3] = unk_1006D1AC0;
  char v29 = sub_1002855F4(v18, (uint64_t)v39);

  return v29;
}

id sub_100263128()
{
  uint64_t v1 = v0;
  sub_100285964();
  uint64_t v2 = *(char **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView];
  [v2 setContentInsetAdjustmentBehavior:2];
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorView] setHidden:1];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryLabel];
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v4 = [self mainBundle];
  v16._uint64_t countAndFlagsBits = 0xD000000000000023;
  v16._object = (void *)0x8000000100584160;
  v5._object = (void *)0x8000000100584140;
  v5._uint64_t countAndFlagsBits = 0xD000000000000011;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v16);

  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v3 setText:v7];

  [v3 setNumberOfLines:1];
  LODWORD(v8) = 1132068864;
  [v3 setContentCompressionResistancePriority:0 forAxis:v8];
  uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC6FindMy25FMChooseMapViewController_hostingViewController];
  id result = [v9 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v11 = result;
  id v12 = [self clearColor];
  [v11 setBackgroundColor:v12];

  [v1 addChildViewController:v9];
  id v13 = *(id *)&v2[OBJC_IVAR____TtC6FindMy12FMScrollView_content];
  id result = [v9 view];
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  unint64_t v14 = result;
  [v13 addSubview:result];

  return [v9 didMoveToParentViewController:v1];
}

void sub_1002633AC()
{
  sub_100286330();
  id v1 = [*(id *)&v0[OBJC_IVAR____TtC6FindMy25FMChooseMapViewController_hostingViewController] view];
  if (!v1) {
    return;
  }
  uint64_t v2 = v1;
  if (qword_1006AE0C0 != -1) {
    swift_once();
  }
  double v3 = *(double *)&qword_1006D1AB8;
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10055B950;
  id v5 = [v2 topAnchor];
  id v6 = [*(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryLabel] lastBaselineAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6 constant:v3];

  *(void *)(v4 + 32) = v7;
  id v8 = [v2 leadingAnchor];
  id v9 = [v0 view];
  if (!v9)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v10 = v9;
  id v11 = [v9 layoutMarginsGuide];

  id v12 = [v11 leadingAnchor];
  id v13 = [v8 constraintEqualToAnchor:v12];

  *(void *)(v4 + 40) = v13;
  id v14 = [v2 trailingAnchor];
  id v15 = [v0 view];
  if (!v15)
  {
LABEL_11:
    __break(1u);
    return;
  }
  Swift::String v16 = v15;
  unint64_t v17 = self;
  id v18 = [v16 layoutMarginsGuide];

  id v19 = [v18 trailingAnchor];
  id v20 = [v14 constraintEqualToAnchor:v19];

  *(void *)(v4 + 48) = v20;
  id v21 = [v2 bottomAnchor];
  id v22 = [*(id *)(*(void *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView]+ OBJC_IVAR____TtC6FindMy12FMScrollView_content) bottomAnchor];
  id v23 = [v21 constraintEqualToAnchor:v22];

  *(void *)(v4 + 56) = v23;
  specialized Array._endMutation()();
  sub_10004FCE4();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v17 activateConstraints:isa];
}

void sub_100263864()
{
}

uint64_t type metadata accessor for FMChooseMapViewController()
{
  return self;
}

uint64_t sub_1002638A8()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_1002638CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DynamicTypeSize();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.dynamicTypeSize.setter();
}

uint64_t sub_100263998()
{
  return EnvironmentValues.presentationMode.getter();
}

uint64_t sub_1002639BC()
{
  return j__swift_retain(v0);
}

unint64_t sub_1002639C4()
{
  unint64_t result = qword_1006B7AB8;
  if (!qword_1006B7AB8)
  {
    type metadata accessor for UIHostingControllerSizingOptions();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B7AB8);
  }
  return result;
}

unint64_t sub_100263A1C()
{
  unint64_t result = qword_1006B7AC8;
  if (!qword_1006B7AC8)
  {
    sub_100046C48(&qword_1006B7AC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B7AC8);
  }
  return result;
}

uint64_t destroy for FMLostModeContext()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FMPersonLocationTrigger(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FMPersonLocationTrigger(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  return a1;
}

uint64_t assignWithTake for FMPersonLocationTrigger(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMPersonLocationTrigger(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMPersonLocationTrigger(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMPersonLocationTrigger()
{
  return &type metadata for FMPersonLocationTrigger;
}

uint64_t sub_100263D50()
{
  id v1 = v0;
  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for FMSideBarViewController();
  [super viewDidLoad];
  sub_10026400C();
  sub_1002641C8();
  uint64_t v2 = OBJC_IVAR____TtC6FindMy23FMSideBarViewController_mediator;
  uint64_t v3 = *(void **)(*(void *)&v0[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_mediator] + 16);
  type metadata accessor for FMConditionSubscription();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber + 8) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v5 = v3;
  uint64_t v6 = v0;
  UUID.init()();
  *(void *)(v4 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber + 8) = &off_10062F4A0;
  swift_unknownObjectWeakAssign();

  uint64_t v7 = &v5[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v7 & 0xFFFFFFFFFFFFFF8)
                                                                              + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  swift_release();

  uint64_t v8 = *(void *)(*(void *)&v1[v2] + 24);
  type metadata accessor for FMDevicesSubscription();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber + 8) = 0;
  swift_unknownObjectWeakInit();
  id v10 = v6;
  swift_retain();
  UUID.init()();
  *(void *)(v9 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber + 8) = &off_10062F400;
  swift_unknownObjectWeakAssign();

  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(v8 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v8 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  swift_release();
  *(void *)&v10[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_devicesSubscription] = v9;
  return swift_release();
}

void sub_10026400C()
{
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v2 = v1;
  [v1 addSubview:*(void *)&v0[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_sideBarView]];

  uint64_t v3 = sub_1002647C4();
  sub_1005377F4((uint64_t)v3);
  id v4 = objc_allocWithZone((Class)type metadata accessor for FMSegmentedControl());
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithItems:isa];

  uint64_t v7 = OBJC_IVAR____TtC6FindMy23FMSideBarViewController_segmentedControl;
  uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_segmentedControl];
  *(void *)&v0[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_segmentedControl] = v6;

  uint64_t v9 = *(void **)&v0[v7];
  if (!v9)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  [v9 addTarget:v0 action:"indexChangedWithSender:" forControlEvents:4096];
  id v10 = *(void **)&v0[v7];
  if (!v10)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  [v10 addTarget:v0 action:"indexNotChangedWithSender:" forControlEvents:64];
  id v11 = *(void **)&v0[v7];
  if (!v11)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  unint64_t v12 = v3[2];
  id v13 = v11;
  swift_bridgeObjectRelease();
  [v13 setHidden:v12 < 2];

  id v14 = [v0 view];
  if (!v14)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (!*(void *)&v0[v7])
  {
LABEL_15:
    __break(1u);
    return;
  }
  id v15 = v14;
  [v14 addSubview:];
}

void sub_1002641C8()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy23FMSideBarViewController_segmentedControl;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_segmentedControl];
  if (!v2)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v3 = v0;
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_sideBarView];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v5 = *(void **)&v0[v1];
  if (!v5)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v6 = [v5 topAnchor];
  id v7 = [v3 view];
  if (!v7)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = v7;
  id v9 = [v7 safeAreaLayoutGuide];

  id v10 = [v9 topAnchor];
  if (qword_1006AE230 != -1) {
    swift_once();
  }
  id v11 = [v6 constraintEqualToAnchor:v10 constant:*(double *)&qword_1006D2118];

  uint64_t v12 = OBJC_IVAR____TtC6FindMy23FMSideBarViewController_topConstraint;
  id v13 = *(void **)&v3[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_topConstraint];
  *(void *)&v3[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_topConstraint] = v11;

  id v14 = *(void **)&v3[v12];
  if (v14)
  {
    sub_10005D034(&qword_1006AF2D0);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_10055C1F0;
    *(void *)(v15 + 32) = v14;
    Swift::String v16 = *(void **)&v3[v1];
    if (!v16)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    uint64_t v17 = v15;
    id v18 = v14;
    id v19 = [v16 leadingAnchor];
    id v20 = [v3 view];
    if (!v20)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    id v21 = v20;
    id v22 = [v20 leadingAnchor];

    id v23 = [v19 constraintEqualToAnchor:v22 constant:10.0];
    *(void *)(v17 + 40) = v23;
    uint64_t v24 = *(void **)&v3[v1];
    if (!v24)
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    id v25 = [v24 trailingAnchor];
    id v26 = [v3 view];
    if (!v26)
    {
LABEL_29:
      __break(1u);
      return;
    }
    unint64_t v27 = v26;
    uint64_t v28 = self;
    id v29 = [v27 trailingAnchor];

    id v30 = [v25 constraintEqualToAnchor:v29 constant:-10.0];
    *(void *)(v17 + 48) = v30;
    specialized Array._endMutation()();
    sub_100006060(0, (unint64_t *)&qword_1006AEE60);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v28 activateConstraints:isa];
  }
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_10055B950;
  id v33 = [v4 topAnchor];
  id v34 = [v3 view];
  if (!v34) {
    goto LABEL_22;
  }
  uint64_t v35 = v34;
  id v36 = [v34 topAnchor];

  id v37 = [v33 constraintEqualToAnchor:v36];
  *(void *)(v32 + 32) = v37;
  id v38 = [v4 bottomAnchor];
  id v39 = [v3 view];
  if (!v39)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v40 = v39;
  id v41 = [v39 bottomAnchor];

  id v42 = [v38 constraintEqualToAnchor:v41];
  *(void *)(v32 + 40) = v42;
  id v43 = [v4 leadingAnchor];
  id v44 = [v3 view];
  if (!v44)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  CGFloat v45 = v44;
  id v46 = [v44 leadingAnchor];

  id v47 = [v43 constraintEqualToAnchor:v46];
  *(void *)(v32 + 48) = v47;
  id v48 = [v4 trailingAnchor];
  id v49 = [v3 view];
  if (!v49)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v50 = v49;
  CGFloat v51 = self;
  id v52 = [v50 trailingAnchor];

  id v53 = [v48 constraintEqualToAnchor:v52];
  *(void *)(v32 + 56) = v53;
  specialized Array._endMutation()();
  sub_100006060(0, (unint64_t *)&qword_1006AEE60);
  Class v54 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v51 activateConstraints:v54];
}

void *sub_1002647C4()
{
  uint64_t v1 = *(unsigned char **)(*(void *)(v0 + OBJC_IVAR____TtC6FindMy23FMSideBarViewController_mediator) + 16);
  char v2 = v1[OBJC_IVAR____TtC6FindMy19FMConditionProvider_FMIPRestricted];
  uint64_t v3 = qword_1006AE310;
  id v4 = v1;
  if (v3 != -1) {
    swift_once();
  }
  if (byte_1006D25B1 != 1)
  {

LABEL_10:
    id v10 = _swiftEmptyArrayStorage;
    if (v2) {
      goto LABEL_16;
    }
    goto LABEL_11;
  }
  char v5 = v4[OBJC_IVAR____TtC6FindMy19FMConditionProvider_FMFRestricted];

  if (v5) {
    goto LABEL_10;
  }
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v6 = [self mainBundle];
  v33._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  v33._object = (void *)0x800000010058ECA0;
  v7._object = (void *)0x800000010058EC80;
  v7._uint64_t countAndFlagsBits = 0xD000000000000018;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v33);

  id v10 = sub_10007D258(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v11 = v10[2];
  unint64_t v12 = v10[3];
  unint64_t v13 = v11 + 1;
  if (v11 >= v12 >> 1)
  {
    char v28 = v2;
    unint64_t v29 = v11 + 1;
    id v30 = v10;
    unint64_t v31 = v10[2];
    uint64_t v32 = sub_10007D258((void *)(v12 > 1), v11 + 1, 1, v30);
    unint64_t v11 = v31;
    unint64_t v13 = v29;
    char v2 = v28;
    id v10 = v32;
  }
  void v10[2] = v13;
  *(Swift::String *)&v10[2 * v11 + 4] = v9;
  if ((v2 & 1) == 0)
  {
LABEL_11:
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v14 = [self mainBundle];
    v15._uint64_t countAndFlagsBits = 0xD000000000000019;
    v34._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
    v34._object = (void *)0x800000010058EC50;
    v15._object = (void *)0x800000010058EC30;
    v16._uint64_t countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    Swift::String v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v34);

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v10 = sub_10007D258(0, v10[2] + 1, 1, v10);
    }
    unint64_t v19 = v10[2];
    unint64_t v18 = v10[3];
    if (v19 >= v18 >> 1) {
      id v10 = sub_10007D258((void *)(v18 > 1), v19 + 1, 1, v10);
    }
    void v10[2] = v19 + 1;
    *(Swift::String *)&v10[2 * v19 + 4] = v17;
  }
LABEL_16:
  if (FMIPItemsTabEnabled.getter())
  {
    id v20 = [self mainBundle];
    v21.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v35._object = (void *)0x800000010057EF80;
    v21.value._object = (void *)0x800000010057EF60;
    v22._uint64_t countAndFlagsBits = 0x41545F534D455449;
    v22._object = (void *)0xE900000000000042;
    v23._uint64_t countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    v35._uint64_t countAndFlagsBits = 0xD000000000000018;
    Swift::String v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v21, (NSBundle)v20, v23, v35);

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v10 = sub_10007D258(0, v10[2] + 1, 1, v10);
    }
    unint64_t v26 = v10[2];
    unint64_t v25 = v10[3];
    if (v26 >= v25 >> 1) {
      id v10 = sub_10007D258((void *)(v25 > 1), v26 + 1, 1, v10);
    }
    void v10[2] = v26 + 1;
    *(Swift::String *)&v10[2 * v26 + 4] = v24;
  }
  return v10;
}

uint64_t sub_100264B80(void *a1)
{
  uint64_t v3 = type metadata accessor for FMSelectedSection();
  __chkstk_darwin(v3);
  char v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = (char *)[a1 selectedSegmentIndex];
  uint64_t v7 = qword_1006AE310;
  Swift::String v8 = *(id *)(*(void *)(v1 + OBJC_IVAR____TtC6FindMy23FMSideBarViewController_mediator) + 16);
  if (v7 != -1) {
    swift_once();
  }
  if (byte_1006D25B1 == 1)
  {
    char v9 = v8[OBJC_IVAR____TtC6FindMy19FMConditionProvider_FMFRestricted];

    if ((v9 & 1) == 0) {
      goto LABEL_8;
    }
  }
  else
  {
  }
  if (__OFADD__(v6++, 1))
  {
    __break(1u);
    goto LABEL_19;
  }
LABEL_8:
  if ((unint64_t)(v6 + 1) >= 2)
  {
    if (v6 == (char *)1)
    {
      uint64_t result = swift_unknownObjectWeakLoadStrong();
      if (!result) {
        return result;
      }
      goto LABEL_16;
    }
    if (v6 == (char *)2)
    {
      uint64_t result = swift_unknownObjectWeakLoadStrong();
      if (!result) {
        return result;
      }
      goto LABEL_16;
    }
LABEL_19:
    unint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    _StringGuts.grow(_:)(48);
    swift_bridgeObjectRelease();
    unint64_t v14 = 0xD00000000000002ELL;
    unint64_t v15 = 0x800000010058EC00;
    v13[1] = v6;
    v12._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (!result) {
    return result;
  }
LABEL_16:
  swift_storeEnumTagMultiPayload();
  sub_100364600((uint64_t)v5);
  swift_unknownObjectRelease();
  return sub_100028108((uint64_t)v5);
}

uint64_t sub_100264E6C(void *a1)
{
  uint64_t v3 = type metadata accessor for FMSelectedSection();
  uint64_t v4 = __chkstk_darwin(v3);
  id v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  Swift::String v8 = (char *)v15 - v7;
  id v9 = [a1 selectedSegmentIndex];
  switch((unint64_t)v9)
  {
    case 0xFFFFFFFFFFFFFFFFLL:
      [a1 setSelectedSegmentIndex:0];
      goto LABEL_3;
    case 0uLL:
LABEL_3:
      uint64_t v10 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC6FindMy23FMSideBarViewController_mediator) + 56);
      break;
    case 1uLL:
      uint64_t v10 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC6FindMy23FMSideBarViewController_mediator) + 56);
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC6FindMy23FMSideBarViewController_mediator) + 56);
      break;
    default:
      unint64_t v16 = 0;
      unint64_t v17 = 0xE000000000000000;
      id v13 = v9;
      _StringGuts.grow(_:)(48);
      swift_bridgeObjectRelease();
      unint64_t v16 = 0xD00000000000002ELL;
      unint64_t v17 = 0x800000010058EC00;
      v15[0] = v13;
      v14._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v14);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      JUMPOUT(0x1002650ECLL);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = v10 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100028164(v11, (uint64_t)v6);
  swift_beginAccess();
  swift_retain();
  sub_100009A88((uint64_t)v8, v11);
  swift_endAccess();
  sub_100053CA0((unint64_t)v6);
  sub_100028108((uint64_t)v8);
  sub_100028108((uint64_t)v6);
  return swift_release();
}

void sub_100265164(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC6FindMy23FMSideBarViewController_segmentedControl;
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtC6FindMy23FMSideBarViewController_segmentedControl);
  if (!v3)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v4 = [v3 selectedSegmentIndex];
  uint64_t v5 = *(void **)(a1 + v2);
  if (!v5)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  [v5 removeAllSegments];
  id v6 = sub_1002647C4();
  uint64_t v7 = v6;
  uint64_t v8 = v6[2];
  if (v8)
  {
    unint64_t v9 = v8 - 1;
    uint64_t v10 = (uint64_t)&v6[2 * v8 + 3];
    while (v9 < v7[2])
    {
      uint64_t v11 = *(void **)(a1 + v2);
      if (!v11) {
        goto LABEL_13;
      }
      swift_bridgeObjectRetain();
      id v12 = v11;
      NSString v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v12 insertSegmentWithTitle:v13 atIndex:0 animated:1];

      --v9;
      v10 -= 16;
      if (v9 == -1) {
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_8:
  swift_bridgeObjectRelease();
  Swift::String v14 = *(void **)(a1 + v2);
  if (!v14)
  {
LABEL_16:
    __break(1u);
    return;
  }

  [v14 setSelectedSegmentIndex:v4];
}

id sub_1002652DC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMSideBarViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for FMSideBarViewController()
{
  return self;
}

uint64_t sub_1002653C0()
{
  return sub_100265438((uint64_t)&unk_10062F598, (uint64_t)sub_1002657D4, (uint64_t)&unk_10062F5B0);
}

uint64_t sub_1002653FC()
{
  return sub_100265438((uint64_t)&unk_10062F548, (uint64_t)sub_1002656F0, (uint64_t)&unk_10062F560);
}

uint64_t sub_100265438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v17 = a3;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  id v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v3;
  aBlock[4] = a2;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = v17;
  Swift::String v14 = _Block_copy(aBlock);
  id v15 = v3;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10005FE54();
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_10005ECA8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v18);
}

uint64_t sub_1002656B8()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1002656F0()
{
  sub_100265164(*(void *)(v0 + 16));
}

void sub_10026570C()
{
  *(void *)&v0[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_contentDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v1 = OBJC_IVAR____TtC6FindMy23FMSideBarViewController_sideBarView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)type metadata accessor for FMSideBarView()) init];
  *(void *)&v0[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_segmentedControl] = 0;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_topConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_devicesSubscription] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Int sub_1002657D8(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for FMIPItem() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_100268820(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_100265880(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_100265880(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v240 = sub_10005D034(&qword_1006B7B30);
  uint64_t v4 = __chkstk_darwin(v240);
  uint64_t v251 = (uint64_t)&v204 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v223 = (uint64_t)&v204 - v7;
  __chkstk_darwin(v6);
  uint64_t v212 = (uint64_t)&v204 - v8;
  uint64_t v9 = type metadata accessor for FMIPPartType();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  char v231 = (char *)&v204 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  v230 = (char *)&v204 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v219 = (char *)&v204 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v218 = (char *)&v204 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  v227 = (char *)&v204 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  v226 = (char *)&v204 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  char v208 = (char *)&v204 - v24;
  __chkstk_darwin(v23);
  v207 = (char *)&v204 - v25;
  uint64_t v242 = type metadata accessor for FMIPItem();
  uint64_t v26 = *(void *)(v242 - 8);
  uint64_t v27 = __chkstk_darwin(v242);
  uint64_t v217 = (char *)&v204 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  v246 = (char *)&v204 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v250 = (char *)&v204 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  v249 = (char *)&v204 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  id v37 = (char *)&v204 - v36;
  uint64_t v38 = __chkstk_darwin(v35);
  v220 = (char *)&v204 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  id v42 = (char *)&v204 - v41;
  __chkstk_darwin(v40);
  id v44 = (char *)&v204 - v43;
  v253 = a1;
  Swift::Int v45 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v45);
  if (result >= v45)
  {
    if (v45 < 0) {
      goto LABEL_162;
    }
    if (v45) {
      return sub_100266DA8(0, v45, 1, v253);
    }
    return result;
  }
  if (v45 >= 0) {
    uint64_t v47 = v45;
  }
  else {
    uint64_t v47 = v45 + 1;
  }
  if (v45 < -1) {
    goto LABEL_170;
  }
  uint64_t v222 = v37;
  v210 = v42;
  v209 = v44;
  Swift::Int v206 = result;
  if (v45 < 2)
  {
    uint64_t v50 = v26;
    unint64_t v224 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
    id v52 = _swiftEmptyArrayStorage;
    if (v45 != 1)
    {
      unint64_t v56 = _swiftEmptyArrayStorage[2];
      uint64_t v55 = (char *)_swiftEmptyArrayStorage;
LABEL_127:
      uint64_t v205 = v52;
      if (v56 >= 2)
      {
        uint64_t v197 = *v253;
        do
        {
          unint64_t v198 = v56 - 2;
          if (v56 < 2) {
            goto LABEL_157;
          }
          if (!v197) {
            goto LABEL_169;
          }
          uint64_t v199 = *(void *)&v55[16 * v198 + 32];
          uint64_t v200 = *(void *)&v55[16 * v56 + 24];
          uint64_t v201 = v50;
          sub_100267458(v197 + *(void *)(v50 + 72) * v199, v197 + *(void *)(v50 + 72) * *(void *)&v55[16 * v56 + 16], v197 + *(void *)(v50 + 72) * v200, v224);
          if (v2) {
            break;
          }
          if (v200 < v199) {
            goto LABEL_158;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v55 = sub_1002687F8((uint64_t)v55);
          }
          if (v198 >= *((void *)v55 + 2)) {
            goto LABEL_159;
          }
          v202 = &v55[16 * v198 + 32];
          *(void *)v202 = v199;
          *((void *)v202 + 1) = v200;
          unint64_t v203 = *((void *)v55 + 2);
          if (v56 > v203) {
            goto LABEL_160;
          }
          memmove(&v55[16 * v56 + 16], &v55[16 * v56 + 32], 16 * (v203 - v56));
          *((void *)v55 + 2) = v203 - 1;
          unint64_t v56 = v203 - 1;
          uint64_t v50 = v201;
        }
        while (v203 > 2);
      }
LABEL_138:
      swift_bridgeObjectRelease();
      v205[2] = 0;
      return swift_bridgeObjectRelease();
    }
    id v53 = &v237;
  }
  else
  {
    uint64_t v48 = v47 >> 1;
    uint64_t v49 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v49 + 16) = v48;
    uint64_t v50 = v26;
    unint64_t v51 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    uint64_t v205 = (void *)v49;
    id v52 = (void *)(v49 + v51);
    id v53 = (char ***)&v254;
  }
  *(v53 - 32) = (char **)v52;
  Class v54 = 0;
  v234 = (void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  uint64_t v235 = v50 + 16;
  v239 = (uint64_t (**)(uint64_t, uint64_t))(v10 + 88);
  int v244 = enum case for FMIPPartType.leftBud(_:);
  int v238 = enum case for FMIPPartType.rightBud(_:);
  v236 = (void (**)(char *, uint64_t))(v50 + 8);
  uint64_t v237 = (char **)(v10 + 8);
  char v228 = (void (**)(char *, char *, uint64_t))(v50 + 32);
  uint64_t v55 = (char *)_swiftEmptyArrayStorage;
  uint64_t v225 = v50;
  uint64_t v243 = v9;
  while (2)
  {
    uint64_t v57 = v54;
    Swift::Int v58 = (Swift::Int)(v54 + 1);
    if ((uint64_t)(v54 + 1) >= v45) {
      goto LABEL_54;
    }
    Swift::Int v248 = v45;
    v211 = v55;
    uint64_t v59 = *v253;
    uint64_t v60 = *(void *)(v50 + 72);
    Swift::Int v215 = (Swift::Int)(v54 + 1);
    uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
    uint64_t v62 = v242;
    Swift::Int v63 = (Swift::Int)v54;
    v61(v209, v59 + v60 * v58, v242);
    Swift::Int v221 = v63;
    uint64_t v213 = v59;
    uint64_t v252 = v60;
    v245 = v61;
    v61(v210, v59 + v60 * v63, v62);
    CGFloat v64 = v207;
    FMIPItem.partType.getter();
    CGFloat v65 = v208;
    FMIPItem.partType.getter();
    uint64_t v66 = v212;
    uint64_t v67 = v212 + *(int *)(v240 + 48);
    CGRect v68 = (char *)*v234;
    (*v234)(v212, v64, v9);
    uint64_t v241 = (void (*)(uint64_t, char *, uint64_t))v68;
    ((void (*)(uint64_t, char *, uint64_t))v68)(v67, v65, v9);
    CGRect v69 = *v239;
    int v70 = (*v239)(v66, v9);
    if (v70 != v244)
    {
      if (v70 == v238)
      {
        int v72 = v69(v67, v9);
        if (v72 == v244)
        {
          v233 = (void (*)(uint64_t, uint64_t))*v237;
          v233(v212, v9);
          LODWORD(v247) = 0;
          goto LABEL_23;
        }
      }
LABEL_24:
      CGRect v75 = v226;
      CGRect v74 = v209;
      FMIPItem.partType.getter();
      CGRect v76 = v227;
      CGRect v73 = v210;
      FMIPItem.partType.getter();
      LODWORD(v247) = static FMIPPartType.< infix(_:_:)();
      CGRect v77 = *v237;
      ((void (*)(char *, uint64_t))*v237)(v76, v9);
      v233 = (void (*)(uint64_t, uint64_t))v77;
      ((void (*)(char *, uint64_t))v77)(v75, v9);
      sub_100003F10(v212, &qword_1006B7B30);
      uint64_t v55 = v211;
      goto LABEL_25;
    }
    int v71 = v69(v67, v9);
    if (v71 != v238) {
      goto LABEL_24;
    }
    v233 = (void (*)(uint64_t, uint64_t))*v237;
    v233(v212, v9);
    LODWORD(v247) = 1;
LABEL_23:
    uint64_t v55 = v211;
    CGRect v73 = v210;
    CGRect v74 = v209;
LABEL_25:
    CGRect v78 = (char *)*v236;
    CGRect v79 = v73;
    uint64_t v80 = v242;
    (*v236)(v79, v242);
    char v232 = v78;
    ((void (*)(char *, uint64_t))v78)(v74, v80);
    Swift::Int v58 = v221 + 2;
    Swift::Int v45 = v248;
    if (v221 + 2 >= v248)
    {
      uint64_t v50 = v225;
      goto LABEL_40;
    }
    char v229 = v69;
    uint64_t v216 = v2;
    v215 *= v252;
    uint64_t v81 = v213;
    uint64_t v214 = v252 * v58;
    uint64_t v82 = v242;
    id v83 = v220;
    while (1)
    {
      Swift::Int v84 = v58;
      unint64_t v85 = v245;
      v245(v83, v81 + v214, v82);
      v85(v222, v81 + v215, v82);
      unint64_t v86 = v218;
      FMIPItem.partType.getter();
      uint64_t v87 = v219;
      FMIPItem.partType.getter();
      id v88 = v241;
      uint64_t v89 = v223;
      uint64_t v90 = v223 + *(int *)(v240 + 48);
      uint64_t v91 = v86;
      uint64_t v92 = v243;
      v241(v223, v91, v243);
      v88(v90, v87, v92);
      uint64_t v93 = v229;
      int v94 = v229(v89, v92);
      if (v94 == v244)
      {
        int v95 = v93(v90, v92);
        if (v95 == v238)
        {
          v233(v223, v92);
          int v96 = 1;
LABEL_33:
          Swift::String_optional v98 = v222;
          id v83 = v220;
          goto LABEL_35;
        }
      }
      else if (v94 == v238)
      {
        int v97 = v93(v90, v92);
        if (v97 == v244)
        {
          v233(v223, v92);
          int v96 = 0;
          goto LABEL_33;
        }
      }
      Swift::String v99 = v226;
      id v83 = v220;
      FMIPItem.partType.getter();
      Swift::String v100 = v227;
      Swift::String_optional v98 = v222;
      FMIPItem.partType.getter();
      int v96 = static FMIPPartType.< infix(_:_:)();
      unint64_t v101 = (void (*)(char *, uint64_t))v233;
      v233((uint64_t)v100, v92);
      v101(v99, v92);
      sub_100003F10(v223, &qword_1006B7B30);
LABEL_35:
      uint64_t v82 = v242;
      unint64_t v102 = (void (*)(char *, uint64_t))v232;
      ((void (*)(char *, uint64_t))v232)(v98, v242);
      v102(v83, v82);
      if ((v247 ^ v96)) {
        break;
      }
      Swift::Int v58 = v84 + 1;
      v81 += v252;
      if (v248 == v84 + 1)
      {
        Swift::Int v45 = v248;
        Swift::Int v58 = v248;
        uint64_t v50 = v225;
        uint64_t v9 = v243;
        uint64_t v55 = v211;
        uint64_t v2 = v216;
        goto LABEL_40;
      }
    }
    uint64_t v50 = v225;
    uint64_t v9 = v243;
    uint64_t v55 = v211;
    Swift::Int v58 = v84;
    uint64_t v2 = v216;
    Swift::Int v45 = v248;
LABEL_40:
    uint64_t v57 = (char *)v221;
    if (v247)
    {
      if (v58 < v221) {
        goto LABEL_163;
      }
      if (v221 < v58)
      {
        uint64_t v103 = 0;
        uint64_t v104 = v252 * (v58 - 1);
        uint64_t v105 = v58 * v252;
        Swift::Int v106 = v221;
        uint64_t v107 = v221 * v252;
        do
        {
          if (v106 != v58 + v103 - 1)
          {
            if (!v213) {
              goto LABEL_168;
            }
            uint64_t v216 = v2;
            unint64_t v109 = v213 + v107;
            uint64_t v110 = v213 + v104;
            uint64_t v111 = v213;
            v247 = *v228;
            v247(v217, (char *)(v213 + v107), v242);
            if (v107 < v104 || v109 >= v111 + v105)
            {
              uint64_t v108 = v242;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v108 = v242;
              if (v107 != v104) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v247((char *)v110, v217, v108);
            uint64_t v50 = v225;
            uint64_t v2 = v216;
          }
          ++v106;
          --v103;
          v104 -= v252;
          v105 -= v252;
          v107 += v252;
        }
        while (v106 < v58 + v103);
        uint64_t v9 = v243;
        uint64_t v55 = v211;
        uint64_t v57 = (char *)v221;
        Swift::Int v45 = v248;
      }
    }
LABEL_54:
    if (v58 >= v45) {
      goto LABEL_78;
    }
    if (__OFSUB__(v58, v57)) {
      goto LABEL_161;
    }
    if (v58 - (uint64_t)v57 >= v206) {
      goto LABEL_78;
    }
    if (__OFADD__(v57, v206)) {
      goto LABEL_164;
    }
    if ((uint64_t)&v57[v206] >= v45) {
      Swift::Int v112 = v45;
    }
    else {
      Swift::Int v112 = (Swift::Int)&v57[v206];
    }
    if (v112 >= (uint64_t)v57)
    {
      if (v58 == v112) {
        goto LABEL_78;
      }
      Swift::Int v221 = (Swift::Int)v57;
      v211 = v55;
      uint64_t v216 = v2;
      unint64_t v113 = *(char **)(v50 + 72);
      char v229 = *(uint64_t (**)(uint64_t, uint64_t))(v50 + 16);
      uint64_t v252 = (void)v113 * (v58 - 1);
      char v232 = v113;
      Swift::Int v114 = v58 * (void)v113;
      uint64_t v115 = v242;
      Swift::String v116 = v228;
      Swift::Int v215 = v112;
      while (2)
      {
        uint64_t v119 = 0;
        uint64_t v120 = (void (*)(uint64_t, char *, uint64_t))v221;
        uint64_t v241 = (void (*)(uint64_t, char *, uint64_t))v58;
        v233 = (void (*)(uint64_t, uint64_t))v114;
        while (2)
        {
          uint64_t v121 = *v253;
          Swift::Int v248 = v114 + v119;
          Swift::String v122 = v229;
          ((void (*)(char *, Swift::Int, uint64_t))v229)(v249, v114 + v119 + v121, v115);
          v247 = (void (*)(char *, char *, uint64_t))(v252 + v119);
          ((void (*)(char *, uint64_t, uint64_t))v122)(v250, v252 + v119 + v121, v115);
          Swift::String v123 = v230;
          FMIPItem.partType.getter();
          os_log_type_t v124 = v231;
          FMIPItem.partType.getter();
          uint64_t v125 = v251;
          uint64_t v126 = v251 + *(int *)(v240 + 48);
          uint64_t v127 = *v234;
          uint64_t v128 = v123;
          uint64_t v129 = v243;
          (*v234)(v251, v128, v243);
          v127(v126, v124, v129);
          uint64_t v130 = *v239;
          int v131 = (*v239)(v125, v129);
          if (v131 == v244)
          {
            int v132 = v130(v126, v129);
            if (v132 == v238)
            {
              ((void (*)(uint64_t, uint64_t))*v237)(v251, v129);
              uint64_t v133 = *v236;
              uint64_t v115 = v242;
              (*v236)(v250, v242);
              v133(v249, v115);
              goto LABEL_75;
            }
LABEL_74:
            unint64_t v135 = v226;
            unint64_t v136 = v249;
            FMIPItem.partType.getter();
            uint64_t v137 = v227;
            os_log_t v138 = v250;
            FMIPItem.partType.getter();
            LODWORD(v245) = static FMIPPartType.< infix(_:_:)();
            uint64_t v139 = *v237;
            ((void (*)(char *, uint64_t))*v237)(v137, v129);
            ((void (*)(char *, uint64_t))v139)(v135, v129);
            Swift::String v116 = v228;
            sub_100003F10(v251, &qword_1006B7B30);
            int v140 = *v236;
            uint64_t v115 = v242;
            (*v236)(v138, v242);
            v140(v136, v115);
            if ((v245 & 1) == 0) {
              goto LABEL_65;
            }
LABEL_75:
            uint64_t v141 = *v253;
            Swift::Int v114 = (Swift::Int)v233;
            if (!*v253) {
              goto LABEL_166;
            }
            uint64_t v142 = (char *)(v141 + v252 + v119);
            uint64_t v143 = *v116;
            (*v116)(v246, (char *)v233 + v141 + v119, v115);
            swift_arrayInitWithTakeFrontToBack();
            v143(v142, v246, v115);
            v119 -= (uint64_t)v232;
            uint64_t v120 = (void (*)(uint64_t, char *, uint64_t))((char *)v120 + 1);
            Swift::String v118 = v241;
            if (v241 == v120) {
              goto LABEL_66;
            }
            continue;
          }
          break;
        }
        if (v131 != v238) {
          goto LABEL_74;
        }
        int v134 = v130(v126, v129);
        if (v134 != v244) {
          goto LABEL_74;
        }
        ((void (*)(uint64_t, uint64_t))*v237)(v251, v129);
        Swift::String v117 = *v236;
        uint64_t v115 = v242;
        (*v236)(v250, v242);
        v117(v249, v115);
LABEL_65:
        Swift::String v118 = v241;
        Swift::Int v114 = (Swift::Int)v233;
LABEL_66:
        Swift::Int v58 = (Swift::Int)v118 + 1;
        v252 += (uint64_t)v232;
        v114 += (Swift::Int)v232;
        if (v58 != v215) {
          continue;
        }
        break;
      }
      Swift::Int v58 = v215;
      uint64_t v2 = v216;
      uint64_t v9 = v243;
      uint64_t v55 = v211;
      uint64_t v57 = (char *)v221;
LABEL_78:
      if (v58 < (uint64_t)v57) {
        goto LABEL_156;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v241 = (void (*)(uint64_t, char *, uint64_t))v58;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v55 = sub_100268068(0, *((void *)v55 + 2) + 1, 1, v55);
      }
      unint64_t v146 = *((void *)v55 + 2);
      unint64_t v145 = *((void *)v55 + 3);
      unint64_t v56 = v146 + 1;
      uint64_t v50 = v225;
      if (v146 >= v145 >> 1)
      {
        v196 = sub_100268068((char *)(v145 > 1), v146 + 1, 1, v55);
        uint64_t v50 = v225;
        uint64_t v55 = v196;
      }
      *((void *)v55 + 2) = v56;
      unint64_t v147 = v55 + 32;
      uint64_t v148 = &v55[16 * v146 + 32];
      uint64_t v149 = v241;
      *(void *)uint64_t v148 = v57;
      *((void *)v148 + 1) = v149;
      if (v146)
      {
        while (2)
        {
          unint64_t v150 = v56 - 1;
          if (v56 >= 4)
          {
            uint64_t v155 = &v147[16 * v56];
            uint64_t v156 = *((void *)v155 - 8);
            uint64_t v157 = *((void *)v155 - 7);
            BOOL v161 = __OFSUB__(v157, v156);
            uint64_t v158 = v157 - v156;
            if (v161) {
              goto LABEL_145;
            }
            uint64_t v160 = *((void *)v155 - 6);
            uint64_t v159 = *((void *)v155 - 5);
            BOOL v161 = __OFSUB__(v159, v160);
            uint64_t v153 = v159 - v160;
            char v154 = v161;
            if (v161) {
              goto LABEL_146;
            }
            unint64_t v162 = v56 - 2;
            uint64_t v163 = &v147[16 * v56 - 32];
            uint64_t v165 = *(void *)v163;
            uint64_t v164 = *((void *)v163 + 1);
            BOOL v161 = __OFSUB__(v164, v165);
            uint64_t v166 = v164 - v165;
            if (v161) {
              goto LABEL_148;
            }
            BOOL v161 = __OFADD__(v153, v166);
            uint64_t v167 = v153 + v166;
            if (v161) {
              goto LABEL_151;
            }
            if (v167 >= v158)
            {
              uint64_t v185 = &v147[16 * v150];
              uint64_t v187 = *(void *)v185;
              uint64_t v186 = *((void *)v185 + 1);
              BOOL v161 = __OFSUB__(v186, v187);
              uint64_t v188 = v186 - v187;
              if (v161) {
                goto LABEL_155;
              }
              BOOL v178 = v153 < v188;
            }
            else
            {
LABEL_97:
              if (v154) {
                goto LABEL_147;
              }
              unint64_t v162 = v56 - 2;
              os_log_t v168 = &v147[16 * v56 - 32];
              uint64_t v170 = *(void *)v168;
              uint64_t v169 = *((void *)v168 + 1);
              BOOL v171 = __OFSUB__(v169, v170);
              uint64_t v172 = v169 - v170;
              char v173 = v171;
              if (v171) {
                goto LABEL_150;
              }
              os_log_t v174 = &v147[16 * v150];
              uint64_t v176 = *(void *)v174;
              uint64_t v175 = *((void *)v174 + 1);
              BOOL v161 = __OFSUB__(v175, v176);
              uint64_t v177 = v175 - v176;
              if (v161) {
                goto LABEL_153;
              }
              if (__OFADD__(v172, v177)) {
                goto LABEL_154;
              }
              if (v172 + v177 < v153) {
                goto LABEL_109;
              }
              BOOL v178 = v153 < v177;
            }
            if (v178) {
              unint64_t v150 = v162;
            }
          }
          else
          {
            if (v56 == 3)
            {
              uint64_t v152 = *((void *)v55 + 4);
              uint64_t v151 = *((void *)v55 + 5);
              BOOL v161 = __OFSUB__(v151, v152);
              uint64_t v153 = v151 - v152;
              char v154 = v161;
              goto LABEL_97;
            }
            uint64_t v179 = *((void *)v55 + 4);
            uint64_t v180 = *((void *)v55 + 5);
            BOOL v161 = __OFSUB__(v180, v179);
            uint64_t v172 = v180 - v179;
            char v173 = v161;
LABEL_109:
            if (v173) {
              goto LABEL_149;
            }
            uint64_t v181 = &v147[16 * v150];
            uint64_t v183 = *(void *)v181;
            uint64_t v182 = *((void *)v181 + 1);
            BOOL v161 = __OFSUB__(v182, v183);
            uint64_t v184 = v182 - v183;
            if (v161) {
              goto LABEL_152;
            }
            if (v184 < v172) {
              goto LABEL_15;
            }
          }
          unint64_t v189 = v150 - 1;
          if (v150 - 1 >= v56)
          {
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
            goto LABEL_165;
          }
          if (!*v253) {
            goto LABEL_167;
          }
          uint64_t v190 = v55;
          uint64_t v191 = &v147[16 * v189];
          uint64_t v192 = *(void *)v191;
          v193 = &v147[16 * v150];
          uint64_t v194 = *((void *)v193 + 1);
          sub_100267458(*v253 + *(void *)(v50 + 72) * *(void *)v191, *v253 + *(void *)(v50 + 72) * *(void *)v193, *v253 + *(void *)(v50 + 72) * v194, v224);
          if (v2) {
            goto LABEL_138;
          }
          if (v194 < v192) {
            goto LABEL_142;
          }
          if (v150 > *((void *)v190 + 2)) {
            goto LABEL_143;
          }
          *(void *)uint64_t v191 = v192;
          *(void *)&v147[16 * v189 + 8] = v194;
          unint64_t v195 = *((void *)v190 + 2);
          if (v150 >= v195) {
            goto LABEL_144;
          }
          uint64_t v55 = v190;
          unint64_t v56 = v195 - 1;
          memmove(&v147[16 * v150], v193 + 16, 16 * (v195 - 1 - v150));
          *((void *)v190 + 2) = v195 - 1;
          BOOL v178 = v195 > 2;
          uint64_t v9 = v243;
          uint64_t v50 = v225;
          if (!v178) {
            goto LABEL_15;
          }
          continue;
        }
      }
      unint64_t v56 = 1;
LABEL_15:
      Swift::Int v45 = v253[1];
      Class v54 = (char *)v241;
      if ((uint64_t)v241 >= v45)
      {
        id v52 = v205;
        goto LABEL_127;
      }
      continue;
    }
    break;
  }
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100266DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  id v83 = a4;
  uint64_t v58 = a1;
  uint64_t v72 = sub_10005D034(&qword_1006B7B30);
  __chkstk_darwin(v72);
  uint64_t v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FMIPPartType();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v60 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v59 = (char *)&v56 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  int v71 = (char *)&v56 - v15;
  __chkstk_darwin(v14);
  int v70 = (char *)&v56 - v16;
  uint64_t v17 = type metadata accessor for FMIPItem();
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v80 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  unint64_t v85 = (char *)&v56 - v21;
  uint64_t result = __chkstk_darwin(v20);
  unint64_t v86 = (char *)&v56 - v24;
  uint64_t v76 = a3;
  uint64_t v57 = a2;
  if (a3 != a2)
  {
    uint64_t v25 = v8;
    uint64_t v26 = v7;
    uint64_t v28 = *(void (**)(void, void, void))(v23 + 16);
    uint64_t v27 = v23 + 16;
    uint64_t v29 = *(void *)(v27 + 56);
    uint64_t v67 = (void (**)(uint64_t, char *, uint64_t))(v9 + 32);
    CGRect v68 = (void (*)(char *, uint64_t, uint64_t))v28;
    uint64_t v66 = (uint64_t (**)(uint64_t, uint64_t))(v9 + 88);
    int v77 = enum case for FMIPPartType.leftBud(_:);
    int v64 = enum case for FMIPPartType.rightBud(_:);
    Swift::Int v63 = (void (**)(uint64_t, uint64_t))(v9 + 8);
    uint64_t v62 = (void (**)(char *, uint64_t))(v27 - 8);
    uint64_t v69 = v27;
    CGRect v79 = (void (**)(char *, uint64_t, uint64_t))(v27 + 16);
    uint64_t v30 = v29 * (v76 - 1);
    uint64_t v73 = v29;
    uint64_t v31 = v29 * v76;
    uint64_t v61 = v25;
    uint64_t v65 = v17;
LABEL_6:
    uint64_t v33 = 0;
    uint64_t v84 = v58;
    uint64_t v74 = v31;
    uint64_t v75 = v30;
    while (1)
    {
      uint64_t v34 = *v83;
      uint64_t v82 = v31 + v33;
      uint64_t v35 = v31 + v33 + v34;
      uint64_t v36 = v68;
      v68(v86, v35, v17);
      uint64_t v81 = v30 + v33;
      v36(v85, v30 + v33 + v34, v17);
      uint64_t v37 = (uint64_t)v26;
      uint64_t v38 = v70;
      FMIPItem.partType.getter();
      uint64_t v39 = v71;
      FMIPItem.partType.getter();
      uint64_t v40 = v37 + *(int *)(v72 + 48);
      uint64_t v41 = *v67;
      id v42 = v38;
      uint64_t v26 = (char *)v37;
      (*v67)(v37, v42, v25);
      v41(v40, v39, v25);
      uint64_t v43 = *v66;
      int v44 = (*v66)(v37, v25);
      if (v44 == v77)
      {
        int v45 = v43(v40, v25);
        if (v45 == v64)
        {
          (*v63)(v37, v25);
          id v46 = *v62;
          uint64_t v17 = v65;
          (*v62)(v85, v65);
          uint64_t result = ((uint64_t (*)(char *, uint64_t))v46)(v86, v17);
          uint64_t v31 = v74;
          uint64_t v30 = v75;
          goto LABEL_14;
        }
      }
      else if (v44 == v64)
      {
        int v47 = v43(v40, v25);
        if (v47 == v77)
        {
          (*v63)(v37, v25);
          uint64_t v32 = *v62;
          uint64_t v17 = v65;
          (*v62)(v85, v65);
          uint64_t result = ((uint64_t (*)(char *, uint64_t))v32)(v86, v17);
          uint64_t v25 = v61;
          uint64_t v31 = v74;
          uint64_t v30 = v75;
LABEL_5:
          v30 += v73;
          v31 += v73;
          if (++v76 == v57) {
            return result;
          }
          goto LABEL_6;
        }
      }
      uint64_t v48 = v59;
      FMIPItem.partType.getter();
      uint64_t v49 = v60;
      uint64_t v50 = v85;
      FMIPItem.partType.getter();
      int v78 = static FMIPPartType.< infix(_:_:)();
      unint64_t v51 = *v63;
      uint64_t v26 = (char *)v37;
      (*v63)((uint64_t)v49, v25);
      v51((uint64_t)v48, v25);
      sub_100003F10(v37, &qword_1006B7B30);
      id v52 = *v62;
      uint64_t v17 = v65;
      (*v62)(v50, v65);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v52)(v86, v17);
      uint64_t v31 = v74;
      uint64_t v30 = v75;
      if ((v78 & 1) == 0) {
        goto LABEL_5;
      }
LABEL_14:
      uint64_t v53 = *v83;
      if (!*v83)
      {
        __break(1u);
        return result;
      }
      uint64_t v54 = v53 + v30 + v33;
      uint64_t v55 = *v79;
      (*v79)(v80, v53 + v31 + v33, v17);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v55)(v54, v80, v17);
      v33 -= v73;
      ++v84;
      uint64_t v25 = v61;
      if (v76 == v84) {
        goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t sub_100267458(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v135 = sub_10005D034(&qword_1006B7B30);
  uint64_t v10 = __chkstk_darwin(v135);
  uint64_t v134 = (uint64_t)v116 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v119 = (char *)v116 - v12;
  uint64_t v138 = type metadata accessor for FMIPPartType();
  uint64_t v13 = *(void *)(v138 - 8);
  uint64_t v14 = __chkstk_darwin(v138);
  uint64_t v125 = (char *)v116 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  os_log_type_t v124 = (char *)v116 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v129 = (char *)v116 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v128 = (char *)v116 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  int v131 = (char *)v116 - v23;
  __chkstk_darwin(v22);
  uint64_t v130 = (char *)v116 - v24;
  uint64_t v139 = type metadata accessor for FMIPItem();
  uint64_t v25 = *(void *)(v139 - 8);
  uint64_t v26 = __chkstk_darwin(v139);
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v29 = (char *)v116 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v133 = (char *)v116 - v31;
  __chkstk_darwin(v30);
  uint64_t v34 = (char *)v116 - v33;
  uint64_t v36 = *(void *)(v35 + 72);
  if (!v36)
  {
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  if (a2 - a1 == 0x8000000000000000 && v36 == -1) {
    goto LABEL_76;
  }
  int64_t v37 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v36 == -1) {
    goto LABEL_77;
  }
  uint64_t v38 = (uint64_t)(a2 - a1) / v36;
  unint64_t v142 = a1;
  unint64_t v141 = a4;
  uint64_t v39 = v37 / v36;
  unint64_t v136 = a4;
  unint64_t v137 = a3;
  v116[1] = v5;
  if (v38 >= v37 / v36)
  {
    if (v39 < 0) {
      goto LABEL_78;
    }
    uint64_t v41 = v39 * v36;
    uint64_t v133 = v32;
    int v131 = v29;
    if (a4 < a2 || a2 + v41 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v78 = a4 + v41;
    unint64_t v140 = a4 + v41;
    unint64_t v142 = a2;
    BOOL v79 = v41 < 1 || a1 >= a2;
    unint64_t v80 = v137;
    if (v79)
    {
LABEL_74:
      sub_1002686B4(&v142, &v141, (uint64_t *)&v140, (uint64_t (*)(void))&type metadata accessor for FMIPItem);
      return 1;
    }
    uint64_t v81 = -v36;
    uint64_t v82 = *(void (**)(char *, unint64_t, uint64_t))(v25 + 16);
    uint64_t v121 = (void (**)(char *, uint64_t))(v13 + 32);
    Swift::String v122 = v82;
    uint64_t v120 = (uint64_t (**)(uint64_t, uint64_t))(v13 + 88);
    LODWORD(v127) = enum case for FMIPPartType.leftBud(_:);
    LODWORD(v119) = enum case for FMIPPartType.rightBud(_:);
    Swift::String v118 = (void (**)(uint64_t, uint64_t))(v13 + 8);
    uint64_t v132 = v25 + 16;
    Swift::String v117 = (void (**)(char *, uint64_t))(v25 + 8);
    unint64_t v123 = a1;
    uint64_t v126 = (void (*)(char *, unint64_t, uint64_t))v81;
    while (1)
    {
      unint64_t v137 = v80;
      uint64_t v83 = v139;
      uint64_t v84 = v122;
      v122(v131, v78 + v81, v139);
      v84(v133, a2 + v81, v83);
      unint64_t v85 = v124;
      FMIPItem.partType.getter();
      unint64_t v86 = v125;
      FMIPItem.partType.getter();
      uint64_t v87 = v134;
      uint64_t v88 = v134 + *(int *)(v135 + 48);
      uint64_t v89 = *v121;
      uint64_t v90 = v85;
      uint64_t v91 = v138;
      ((void (*)(uint64_t, char *, uint64_t))*v121)(v134, v90, v138);
      ((void (*)(uint64_t, char *, uint64_t))v89)(v88, v86, v91);
      uint64_t v92 = *v120;
      int v93 = (*v120)(v87, v91);
      uint64_t v130 = (char *)(a2 + v81);
      if (v93 == v127)
      {
        int v94 = v92(v88, v138);
        if (v94 != v119) {
          goto LABEL_58;
        }
        (*v118)(v134, v138);
        char v95 = 1;
      }
      else
      {
        if (v93 != v119 || (int v96 = v92(v88, v138), v96 != v127))
        {
LABEL_58:
          Swift::String v99 = v128;
          Swift::String_optional v98 = v131;
          FMIPItem.partType.getter();
          Swift::String v100 = v129;
          int v97 = v133;
          FMIPItem.partType.getter();
          char v95 = static FMIPPartType.< infix(_:_:)();
          unint64_t v101 = *v118;
          unint64_t v102 = v100;
          uint64_t v103 = v138;
          (*v118)((uint64_t)v102, v138);
          uint64_t v104 = v99;
          uint64_t v81 = (uint64_t)v126;
          v101((uint64_t)v104, v103);
          sub_100003F10(v134, &qword_1006B7B30);
          goto LABEL_59;
        }
        (*v118)(v134, v138);
        char v95 = 0;
      }
      int v97 = v133;
      Swift::String_optional v98 = v131;
LABEL_59:
      unint64_t v105 = v137;
      unint64_t v106 = v137 + v81;
      uint64_t v107 = *v117;
      uint64_t v108 = v97;
      uint64_t v109 = v81;
      uint64_t v110 = v139;
      (*v117)(v108, v139);
      v107(v98, v110);
      if (v95)
      {
        if (v105 < a2 || v106 >= a2)
        {
          Swift::Int v112 = v130;
          swift_arrayInitWithTakeFrontToBack();
          uint64_t v81 = (uint64_t)v126;
          unint64_t v113 = v136;
        }
        else
        {
          BOOL v111 = v105 == a2;
          uint64_t v81 = (uint64_t)v126;
          Swift::Int v112 = v130;
          unint64_t v113 = v136;
          if (!v111) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v142 += v81;
      }
      else
      {
        unint64_t v114 = v140;
        v140 += v109;
        uint64_t v81 = v109;
        if (v105 < v114 || v106 >= v114)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v105 != v114)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        Swift::Int v112 = (char *)a2;
        unint64_t v113 = v136;
      }
      unint64_t v78 = v140;
      if (v140 > v113)
      {
        a2 = (unint64_t)v112;
        unint64_t v80 = v106;
        if ((unint64_t)v112 > v123) {
          continue;
        }
      }
      goto LABEL_74;
    }
  }
  if ((v38 & 0x8000000000000000) == 0)
  {
    uint64_t v40 = v38 * v36;
    if (a4 < a1 || a1 + v40 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v127 = a4 + v40;
    unint64_t v140 = a4 + v40;
    BOOL v42 = v40 < 1 || a2 >= a3;
    uint64_t v43 = (uint64_t)v119;
    if (!v42)
    {
      int v44 = *(void (**)(char *, unint64_t, uint64_t))(v25 + 16);
      uint64_t v125 = (char *)(v13 + 32);
      uint64_t v126 = v44;
      os_log_type_t v124 = (char *)(v13 + 88);
      LODWORD(v134) = enum case for FMIPPartType.leftBud(_:);
      LODWORD(v123) = enum case for FMIPPartType.rightBud(_:);
      uint64_t v132 = v25 + 16;
      uint64_t v121 = (void (**)(char *, uint64_t))(v25 + 8);
      Swift::String v122 = (void (*)(char *, unint64_t, uint64_t))(v13 + 8);
      uint64_t v120 = (uint64_t (**)(uint64_t, uint64_t))v36;
      while (1)
      {
        uint64_t v45 = v139;
        id v46 = v126;
        v126(v34, a2, v139);
        v46(v133, v136, v45);
        int v47 = v130;
        FMIPItem.partType.getter();
        uint64_t v48 = v131;
        FMIPItem.partType.getter();
        uint64_t v49 = v43 + *(int *)(v135 + 48);
        uint64_t v50 = *(void (**)(uint64_t, char *, uint64_t))v125;
        unint64_t v51 = v47;
        uint64_t v52 = v138;
        (*(void (**)(uint64_t, char *, uint64_t))v125)(v43, v51, v138);
        v50(v49, v48, v52);
        uint64_t v53 = *(uint64_t (**)(uint64_t, uint64_t))v124;
        int v54 = (*(uint64_t (**)(uint64_t, uint64_t))v124)(v43, v52);
        if (v54 == v134)
        {
          int v55 = v53(v49, v138);
          if (v55 == v123)
          {
            (*(void (**)(uint64_t, uint64_t))v122)(v43, v138);
            uint64_t v56 = *v121;
            uint64_t v57 = v139;
            (*v121)(v133, v139);
            v56(v34, v57);
            unint64_t v58 = v137;
            goto LABEL_30;
          }
        }
        else if (v54 == v123)
        {
          int v59 = v53(v49, v138);
          if (v59 == v134)
          {
            (*(void (**)(uint64_t, uint64_t))v122)(v43, v138);
            uint64_t v60 = *v121;
            uint64_t v61 = v139;
            (*v121)(v133, v139);
            v60(v34, v61);
            unint64_t v58 = v137;
LABEL_34:
            unint64_t v74 = v142;
            uint64_t v75 = v120;
            unint64_t v77 = (unint64_t)v120 + v141;
            if (v142 < v141 || v142 >= v77)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v142 != v141)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v141 = v77;
            unint64_t v76 = a2;
            goto LABEL_41;
          }
        }
        uint64_t v62 = v128;
        FMIPItem.partType.getter();
        Swift::Int v63 = v129;
        int v64 = v133;
        FMIPItem.partType.getter();
        char v65 = static FMIPPartType.< infix(_:_:)();
        uint64_t v66 = *(void (**)(char *, uint64_t))v122;
        uint64_t v67 = v63;
        CGRect v68 = v34;
        unint64_t v58 = v137;
        uint64_t v69 = v138;
        (*(void (**)(char *, uint64_t))v122)(v67, v138);
        int v70 = v62;
        uint64_t v43 = (uint64_t)v119;
        uint64_t v71 = v69;
        uint64_t v34 = v68;
        v66(v70, v71);
        sub_100003F10(v43, &qword_1006B7B30);
        uint64_t v72 = *v121;
        uint64_t v73 = v139;
        (*v121)(v64, v139);
        v72(v34, v73);
        if ((v65 & 1) == 0) {
          goto LABEL_34;
        }
LABEL_30:
        unint64_t v74 = v142;
        uint64_t v75 = v120;
        unint64_t v76 = (unint64_t)v120 + a2;
        if (v142 < a2 || v142 >= v76)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v142 == a2)
        {
          unint64_t v74 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_41:
        unint64_t v142 = (unint64_t)v75 + v74;
        unint64_t v136 = v141;
        if (v141 < v127)
        {
          a2 = v76;
          if (v76 < v58) {
            continue;
          }
        }
        goto LABEL_74;
      }
    }
    goto LABEL_74;
  }
LABEL_78:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100268068(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10005D034(&qword_1006B7B38);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100268164(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1002686B4(a1, a2, a3, type metadata accessor for FMBeaconSharingModuleEntry);
}

char *sub_10026817C(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

uint64_t sub_100268238(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1002686B4(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel);
}

char *sub_100268250(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -40)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
    {
      return (char *)memmove(result, v3, 40 * v6);
    }
  }
  return result;
}

uint64_t sub_10026831C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1002686B4(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for FMPeopleCellViewModel);
}

uint64_t sub_100268334(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1002686B4(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for FMIPBeaconShare);
}

char *sub_10026834C(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

uint64_t sub_100268408(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1002686B4(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel);
}

uint64_t sub_100268420(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1002686B4(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for UUID);
}

char *sub_100268438(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 63;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -64)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 6;
    if (result != v3 || result >= &v3[64 * v7])
    {
      return (char *)memmove(result, v3, v7 << 6);
    }
  }
  return result;
}

uint64_t sub_1002684F8(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_10005D034(&qword_1006B2C20);
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

uint64_t sub_10026863C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1002686B4(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for FMIPUnknownItem);
}

uint64_t sub_100268654(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1002686B4(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for FMFLabel);
}

uint64_t sub_10026866C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1002686B4(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for FMFLocationAlert);
}

uint64_t sub_100268684(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1002686B4(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for FMFLabelledLocation);
}

uint64_t sub_10026869C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1002686B4(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for FMFFriend);
}

uint64_t sub_1002686B4(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = a4(0);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_1002687F8(uint64_t a1)
{
  return sub_100268068(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_10026880C(void *a1)
{
  return sub_10013EBC4(0, a1[2], 0, a1);
}

uint64_t sub_100268820(void *a1)
{
  return sub_10013EBE4(0, a1[2], 0, a1);
}

uint64_t sub_100268834(void *a1)
{
  return sub_10013EF3C(0, a1[2], 0, a1);
}

uint64_t sub_100268848(void *a1)
{
  return sub_10013F0C8(0, a1[2], 0, a1);
}

uint64_t sub_10026885C(uint64_t a1)
{
  return sub_10013EC44(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100268870(void *a1)
{
  return sub_10013EC24(0, a1[2], 0, a1);
}

uint64_t sub_100268884(void *a1)
{
  return sub_10013F108(0, a1[2], 0, a1);
}

uint64_t sub_100268898(void *a1)
{
  return sub_10013F11C(0, a1[2], 0, a1);
}

uint64_t sub_1002688AC(void *a1)
{
  return sub_10013F13C(0, a1[2], 0, a1);
}

uint64_t sub_1002688C0(void *a1)
{
  return sub_10013F15C(0, a1[2], 0, a1);
}

uint64_t sub_1002688D4(void *a1)
{
  return sub_10013F614(0, a1[2], 0, a1);
}

uint64_t sub_1002688E8(void *a1)
{
  return sub_10013EC04(0, a1[2], 0, a1);
}

uint64_t sub_1002688FC(void *a1)
{
  return sub_10013F9F8(0, a1[2], 0, a1);
}

uint64_t sub_100268910(void *a1)
{
  return sub_10013F0E8(0, a1[2], 0, a1);
}

uint64_t sub_100268924(void *a1)
{
  return sub_10013FE80(0, a1[2], 0, a1);
}

uint64_t sub_100268938(void *a1)
{
  return sub_10014000C(0, a1[2], 0, a1);
}

uint64_t sub_10026894C(void *a1)
{
  return sub_10013EDB0(0, a1[2], 0, a1);
}

void *sub_100268960(uint64_t a1, uint64_t a2, char a3, int a4)
{
  int v47 = a4;
  uint64_t v6 = sub_10005D034((uint64_t *)&unk_1006BB9C0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMIPAddress();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = 0;
  unint64_t v51 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v46 = self;
  id v13 = [v46 mainBundle];
  v52._object = (void *)0x800000010057ECE0;
  v14._uint64_t countAndFlagsBits = 0x45524444415F4F4ELL;
  v14._object = (void *)0xEA00000000005353;
  v15._uint64_t countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v52._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v52)._countAndFlagsBits;

  sub_100006AB0(a1, (uint64_t)v8, (uint64_t *)&unk_1006BB9C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100003F10((uint64_t)v8, (uint64_t *)&unk_1006BB9C0);
    if ((v47 & 1) == 0) {
      return (void *)countAndFlagsBits;
    }
    goto LABEL_21;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  uint64_t v17 = FMIPAddress.displayAddress.getter();
  if (!v18) {
    goto LABEL_20;
  }
  uint64_t v19 = v17;
  uint64_t v20 = v18;
  swift_bridgeObjectRelease();
  uint64_t v21 = FMIPAddress.label.getter();
  if (!v22) {
    goto LABEL_23;
  }
  unint64_t v23 = v22;
  if ((a3 & 1) == 0)
  {
    uint64_t countAndFlagsBits = v21;
    uint64_t v26 = FMIPAddress.streetAddress.getter();
    if (!v27) {
      goto LABEL_14;
    }
    uint64_t v28 = v26;
    uint64_t v29 = v27;
    uint64_t v30 = FMIPAddress.streetName.getter();
    if (!v31) {
      goto LABEL_26;
    }
    uint64_t v44 = v30;
    uint64_t v45 = v31;
    uint64_t v50 = countAndFlagsBits;
    unint64_t v51 = v23;
    uint64_t v48 = v28;
    uint64_t v49 = v29;
    sub_100059EB8();
    char v32 = StringProtocol.contains<A>(_:)();
    swift_bridgeObjectRelease();
    if ((v32 & 1) == 0)
    {
LABEL_26:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      swift_bridgeObjectRelease();
LABEL_15:
      swift_bridgeObjectRelease();
      if ((v47 & 1) == 0) {
        return (void *)countAndFlagsBits;
      }
      goto LABEL_21;
    }
    uint64_t v50 = countAndFlagsBits;
    unint64_t v51 = v23;
    uint64_t v48 = v44;
    uint64_t v49 = v45;
    char v33 = StringProtocol.contains<A>(_:)();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    swift_bridgeObjectRelease();
    if ((v33 & 1) == 0) {
      goto LABEL_15;
    }
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = FMIPAddress.mapItemFormattedAddress.getter();
  if (v25)
  {
    uint64_t countAndFlagsBits = v24;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_15;
  }
  uint64_t result = (void *)FMIPAddress.formattedAddressLines.getter();
  if (!result)
  {
LABEL_23:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
LABEL_24:
    uint64_t countAndFlagsBits = v19;
    if ((v47 & 1) == 0) {
      return (void *)countAndFlagsBits;
    }
    goto LABEL_21;
  }
  if (result[2])
  {
    uint64_t v35 = result[5];
    uint64_t v45 = result[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v50 = 0;
    unint64_t v51 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v36 = [v46 mainBundle];
    v53._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
    v53._object = (void *)0x800000010058A030;
    v37._object = (void *)0x800000010058A010;
    v37._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
    v38._uint64_t countAndFlagsBits = 0;
    v38._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v37, (Swift::String_optional)0, (NSBundle)v36, v38, v53);

    sub_10005D034((uint64_t *)&unk_1006AF790);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_10055B960;
    *(void *)(v39 + 56) = &type metadata for String;
    unint64_t v40 = sub_10007F2C8();
    *(void *)(v39 + 32) = v45;
    *(void *)(v39 + 40) = v35;
    *(void *)(v39 + 96) = &type metadata for String;
    *(void *)(v39 + 104) = v40;
    *(void *)(v39 + 64) = v40;
    *(void *)(v39 + 72) = v19;
    *(void *)(v39 + 80) = v20;
    uint64_t countAndFlagsBits = String.init(format:_:)();
    swift_bridgeObjectRelease();
LABEL_20:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    if ((v47 & 1) == 0) {
      return (void *)countAndFlagsBits;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    uint64_t v50 = 0;
    unint64_t v51 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v41 = [v46 mainBundle];
    v42._uint64_t countAndFlagsBits = 0xD000000000000019;
    v54._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
    v54._object = (void *)0x800000010058ED10;
    v42._object = (void *)0x800000010058ECF0;
    v43._uint64_t countAndFlagsBits = 0;
    v43._object = (void *)0xE000000000000000;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v42, (Swift::String_optional)0, (NSBundle)v41, v43, v54)._countAndFlagsBits;

    return (void *)countAndFlagsBits;
  }
  __break(1u);
  return result;
}

uint64_t sub_100268F40(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v136 = a3;
  uint64_t v125 = a2;
  uint64_t v115 = type metadata accessor for PublishedLocation.Label.Length();
  uint64_t v114 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  unint64_t v113 = &v110[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  Swift::String v116 = &v110[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __chkstk_darwin(v8);
  Swift::String v122 = &v110[-v11];
  __chkstk_darwin(v10);
  Swift::String v118 = &v110[-v12];
  uint64_t v121 = type metadata accessor for PublishedLocation.Label.DetailLevel();
  uint64_t v120 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  uint64_t v119 = &v110[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_10005D034((uint64_t *)&unk_1006BB9C0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  Swift::Int v112 = &v110[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __chkstk_darwin(v15);
  os_log_type_t v124 = &v110[-v18];
  uint64_t v19 = __chkstk_darwin(v17);
  Swift::String v117 = &v110[-v20];
  uint64_t v21 = __chkstk_darwin(v19);
  unint64_t v140 = &v110[-v22];
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = &v110[-v24];
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = &v110[-v27];
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v132 = &v110[-v30];
  uint64_t v31 = __chkstk_darwin(v29);
  char v33 = &v110[-v32];
  __chkstk_darwin(v31);
  uint64_t v35 = &v110[-v34];
  uint64_t v36 = type metadata accessor for PublishedLocation.Label();
  uint64_t v126 = *(void *)(v36 - 8);
  uint64_t v127 = v36;
  uint64_t v37 = __chkstk_darwin(v36);
  unint64_t v123 = &v110[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v37);
  uint64_t v139 = &v110[-v39];
  uint64_t countAndFlagsBits = 0;
  object = 0;
  int v111 = a4;
  if (a4)
  {
    uint64_t v142 = 0;
    unint64_t v143 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v42 = [self mainBundle];
    v144._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
    v144._object = (void *)0x800000010058ED10;
    v43._object = (void *)0x800000010058ECF0;
    v43._uint64_t countAndFlagsBits = 0xD000000000000019;
    v44._uint64_t countAndFlagsBits = 0;
    v44._object = (void *)0xE000000000000000;
    Swift::String v45 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, (Swift::String_optional)0, (NSBundle)v42, v44, v144);
    uint64_t countAndFlagsBits = v45._countAndFlagsBits;
    object = v45._object;
  }
  uint64_t v137 = countAndFlagsBits;
  uint64_t v138 = object;
  sub_100006AB0(a1, (uint64_t)v35, (uint64_t *)&unk_1006BB9C0);
  uint64_t v46 = type metadata accessor for FMIPAddress();
  uint64_t v47 = *(void *)(v46 - 8);
  uint64_t v48 = a1;
  uint64_t v49 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v47 + 48);
  int v50 = v49(v35, 1, v46);
  uint64_t v133 = (uint64_t)v28;
  uint64_t v141 = v47;
  if (v50 == 1)
  {
    sub_100003F10((uint64_t)v35, (uint64_t *)&unk_1006BB9C0);
    uint64_t v134 = 0;
    uint64_t v135 = 0;
    uint64_t v51 = (uint64_t)v140;
  }
  else
  {
    FMIPAddress.coarseAddressModern.getter();
    uint64_t v53 = v52;
    (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v35, v46);
    if (v53)
    {
      uint64_t v54 = String.nilIfEmpty.getter();
      uint64_t v134 = v55;
      uint64_t v135 = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v134 = 0;
      uint64_t v135 = 0;
    }
    uint64_t v51 = (uint64_t)v140;
    uint64_t v28 = (unsigned char *)v133;
  }
  uint64_t v56 = (uint64_t)v132;
  sub_100006AB0(a1, (uint64_t)v33, (uint64_t *)&unk_1006BB9C0);
  if (v49(v33, 1, v46) == 1)
  {
    sub_100003F10((uint64_t)v33, (uint64_t *)&unk_1006BB9C0);
    uint64_t v128 = 0;
    uint64_t v132 = 0;
  }
  else
  {
    FMIPAddress.streetAddressModern.getter();
    uint64_t v58 = v57;
    (*(void (**)(unsigned char *, uint64_t))(v141 + 8))(v33, v46);
    if (v58)
    {
      uint64_t v128 = String.nilIfEmpty.getter();
      uint64_t v132 = v59;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v128 = 0;
      uint64_t v132 = 0;
    }
    uint64_t v28 = (unsigned char *)v133;
  }
  sub_100006AB0(a1, v56, (uint64_t *)&unk_1006BB9C0);
  if (v49((unsigned char *)v56, 1, v46) == 1)
  {
    sub_100003F10(v56, (uint64_t *)&unk_1006BB9C0);
  }
  else
  {
    FMIPAddress.smallAddressModern.getter();
    uint64_t v61 = v60;
    (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v56, v46);
    if (v61)
    {
      uint64_t v62 = String.nilIfEmpty.getter();
      uint64_t v130 = v63;
      uint64_t v131 = v62;
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
  }
  uint64_t v130 = 0;
  uint64_t v131 = 0;
LABEL_20:
  sub_100006AB0(a1, (uint64_t)v28, (uint64_t *)&unk_1006BB9C0);
  if (v49(v28, 1, v46) == 1)
  {
    sub_100003F10((uint64_t)v28, (uint64_t *)&unk_1006BB9C0);
  }
  else
  {
    FMIPAddress.mediumAddressModern.getter();
    uint64_t v65 = v64;
    (*(void (**)(unsigned char *, uint64_t))(v141 + 8))(v28, v46);
    if (v65)
    {
      uint64_t v133 = String.nilIfEmpty.getter();
      uint64_t v129 = v66;
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
  }
  uint64_t v133 = 0;
  uint64_t v129 = 0;
LABEL_25:
  uint64_t v67 = v141;
  sub_100006AB0(a1, (uint64_t)v25, (uint64_t *)&unk_1006BB9C0);
  if (v49(v25, 1, v46) == 1)
  {
    sub_100003F10((uint64_t)v25, (uint64_t *)&unk_1006BB9C0);
  }
  else
  {
    FMIPAddress.largeAddressModern.getter();
    uint64_t v69 = v68;
    (*(void (**)(unsigned char *, uint64_t))(v67 + 8))(v25, v46);
    if (v69)
    {
      String.nilIfEmpty.getter();
      swift_bridgeObjectRelease();
    }
    uint64_t v51 = (uint64_t)v140;
  }
  sub_100006AB0(a1, v51, (uint64_t *)&unk_1006BB9C0);
  if (v49((unsigned char *)v51, 1, v46) == 1)
  {
    sub_100003F10(v51, (uint64_t *)&unk_1006BB9C0);
  }
  else
  {
    FMIPAddress.poiAddressModern.getter();
    uint64_t v70 = v51;
    uint64_t v72 = v71;
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v70, v46);
    if (v72)
    {
      String.nilIfEmpty.getter();
      swift_bridgeObjectRelease();
    }
  }
  unint64_t v74 = v138;
  uint64_t v73 = v139;
  uint64_t v75 = v137;
  char v76 = v136;
  swift_bridgeObjectRetain();
  PublishedLocation.Label.init(customLabel:coarseLabel:streetLabel:smallLabel:mediumLabel:largeLabel:poiLabel:)();
  if (v76)
  {
    swift_bridgeObjectRelease();
    uint64_t v77 = v120;
    unint64_t v78 = v119;
    uint64_t v79 = v121;
    (*(void (**)(unsigned char *, void, uint64_t))(v120 + 104))(v119, enum case for PublishedLocation.Label.DetailLevel.detailed(_:), v121);
    uint64_t v75 = PublishedLocation.Label.primaryAndSecondaryNoFallbackLabel(detailLevel:)();
    uint64_t v81 = v80;
    uint64_t v83 = v82;
    uint64_t v85 = v84;
    (*(void (**)(unsigned char *, uint64_t))(v77 + 8))(v78, v79);
    if (v81)
    {
      if (v85)
      {
        uint64_t v142 = 0;
        unint64_t v143 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease();
        id v86 = [self mainBundle];
        v87._uint64_t countAndFlagsBits = 0xD000000000000027;
        v145._uint64_t countAndFlagsBits = 0xD000000000000039;
        v145._object = (void *)0x8000000100589FD0;
        v87._object = (void *)0x8000000100589FA0;
        v88._uint64_t countAndFlagsBits = 0;
        v88._object = (void *)0xE000000000000000;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v87, (Swift::String_optional)0, (NSBundle)v86, v88, v145);

        sub_10005D034((uint64_t *)&unk_1006AF790);
        uint64_t v89 = swift_allocObject();
        *(_OWORD *)(v89 + 16) = xmmword_10055B960;
        *(void *)(v89 + 56) = &type metadata for String;
        unint64_t v90 = sub_10007F2C8();
        *(void *)(v89 + 32) = v75;
        *(void *)(v89 + 40) = v81;
        *(void *)(v89 + 96) = &type metadata for String;
        *(void *)(v89 + 104) = v90;
        *(void *)(v89 + 64) = v90;
        *(void *)(v89 + 72) = v83;
        *(void *)(v89 + 80) = v85;
        uint64_t v75 = String.init(format:_:)();
        swift_bridgeObjectRelease();
        (*(void (**)(unsigned char *, uint64_t))(v126 + 8))(v73, v127);
        return v75;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    int v97 = v117;
    sub_100006AB0(v48, (uint64_t)v117, (uint64_t *)&unk_1006BB9C0);
    Swift::String_optional v98 = v118;
    sub_100006AB0(v125, (uint64_t)v118, (uint64_t *)&unk_1006B2AE0);
    if (!v81) {
      uint64_t v75 = (uint64_t)sub_100268960((uint64_t)v97, (uint64_t)v98, 1, v111 & 1);
    }
    uint64_t v100 = v126;
    uint64_t v99 = v127;
    sub_100003F10((uint64_t)v98, (uint64_t *)&unk_1006B2AE0);
    sub_100003F10((uint64_t)v97, (uint64_t *)&unk_1006BB9C0);
    (*(void (**)(unsigned char *, uint64_t))(v100 + 8))(v73, v99);
  }
  else
  {
    uint64_t v92 = v126;
    uint64_t v91 = v127;
    int v93 = v123;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v126 + 16))(v123, v73, v127);
    int v94 = v124;
    sub_100006AB0(a1, (uint64_t)v124, (uint64_t *)&unk_1006BB9C0);
    char v95 = v122;
    sub_100006AB0(v125, (uint64_t)v122, (uint64_t *)&unk_1006B2AE0);
    if (v74)
    {
      sub_100003F10((uint64_t)v95, (uint64_t *)&unk_1006B2AE0);
      sub_100003F10((uint64_t)v94, (uint64_t *)&unk_1006BB9C0);
      int v96 = *(void (**)(unsigned char *, uint64_t))(v92 + 8);
      v96(v93, v91);
    }
    else
    {
      uint64_t v101 = v114;
      unint64_t v102 = v113;
      uint64_t v103 = v115;
      (*(void (**)(unsigned char *, void, uint64_t))(v114 + 104))(v113, enum case for PublishedLocation.Label.Length.small(_:), v115);
      uint64_t v75 = PublishedLocation.Label.combinedNoFallbackLabel(maxLength:)();
      uint64_t v105 = v104;
      (*(void (**)(unsigned char *, uint64_t))(v101 + 8))(v102, v103);
      unint64_t v106 = v124;
      uint64_t v107 = v112;
      sub_100006AB0((uint64_t)v124, (uint64_t)v112, (uint64_t *)&unk_1006BB9C0);
      uint64_t v108 = v116;
      sub_100006AB0((uint64_t)v95, (uint64_t)v116, (uint64_t *)&unk_1006B2AE0);
      if (!v105) {
        uint64_t v75 = (uint64_t)sub_100268960((uint64_t)v107, (uint64_t)v108, 0, v111 & 1);
      }
      sub_100003F10((uint64_t)v108, (uint64_t *)&unk_1006B2AE0);
      sub_100003F10((uint64_t)v107, (uint64_t *)&unk_1006BB9C0);
      sub_100003F10((uint64_t)v95, (uint64_t *)&unk_1006B2AE0);
      sub_100003F10((uint64_t)v106, (uint64_t *)&unk_1006BB9C0);
      int v96 = *(void (**)(unsigned char *, uint64_t))(v92 + 8);
      v96(v123, v91);
    }
    v96(v73, v91);
  }
  return v75;
}

uint64_t sub_100269CBC(uint64_t a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7, uint64_t a8, uint64_t a9)
{
  uint64_t v527 = a8;
  int v604 = a7;
  int v593 = a6;
  int v528 = a5;
  int v530 = a4;
  int v603 = a3;
  uint64_t v611 = a2;
  uint64_t v10 = sub_10005D034(&qword_1006B36B0);
  __chkstk_darwin(v10 - 8);
  v539 = (char *)&v523 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v558 = type metadata accessor for FMIPActionStatus();
  uint64_t v571 = *(void *)(v558 - 8);
  uint64_t v12 = __chkstk_darwin(v558);
  v557 = (char *)&v523 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v556 = (char *)&v523 - v14;
  uint64_t v15 = sub_10005D034(&qword_1006B7B40);
  __chkstk_darwin(v15 - 8);
  v564 = (char *)&v523 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v573 = type metadata accessor for FMIPEraseMetadata();
  uint64_t v572 = *(void *)(v573 - 8);
  __chkstk_darwin(v573);
  v560 = (char *)&v523 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v570 = type metadata accessor for Date.FormatStyle.TimeStyle();
  uint64_t v569 = *(void *)(v570 - 8);
  __chkstk_darwin(v570);
  v567 = (char *)&v523 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v568 = type metadata accessor for Date.FormatStyle.DateStyle();
  uint64_t v566 = *(void *)(v568 - 8);
  __chkstk_darwin(v568);
  v565 = (char *)&v523 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v542 = type metadata accessor for FormatStyleCapitalizationContext();
  uint64_t v543 = *(void *)(v542 - 8);
  __chkstk_darwin(v542);
  v541 = (char *)&v523 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  v524 = (char *)&v523 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  v535 = (char *)&v523 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v553 = (char *)&v523 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  v562 = (char *)&v523 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v585 = (uint64_t)&v523 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v590 = (uint64_t)&v523 - v33;
  __chkstk_darwin(v32);
  v548 = (char *)&v523 - v34;
  uint64_t v588 = type metadata accessor for Date();
  uint64_t v589 = *(void *)(v588 - 8);
  uint64_t v35 = __chkstk_darwin(v588);
  v532 = (char *)&v523 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v35);
  v540 = (char *)&v523 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  v561 = (char *)&v523 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  v546 = (char *)&v523 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  v563 = (char *)&v523 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  v551 = (char *)&v523 - v46;
  __chkstk_darwin(v45);
  v531 = (char *)&v523 - v47;
  uint64_t v620 = type metadata accessor for FMIPLocation();
  uint64_t v609 = *(void *)(v620 - 8);
  __chkstk_darwin(v620);
  v529 = (char *)&v523 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v544 = sub_10005D034(&qword_1006B7B48);
  __chkstk_darwin(v544);
  uint64_t v549 = (uint64_t)&v523 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_10005D034(&qword_1006B2AF0);
  __chkstk_darwin(v50 - 8);
  v577 = (char *)&v523 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_10005D034((uint64_t *)&unk_1006BB9C0);
  uint64_t v53 = __chkstk_darwin(v52 - 8);
  v526 = (char *)&v523 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __chkstk_darwin(v53);
  v602 = (char *)&v523 - v56;
  __chkstk_darwin(v55);
  uint64_t v612 = (uint64_t)&v523 - v57;
  uint64_t v58 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  uint64_t v59 = __chkstk_darwin(v58 - 8);
  v601 = (char *)&v523 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v59);
  uint64_t v610 = (uint64_t)&v523 - v61;
  uint64_t v62 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  uint64_t v63 = __chkstk_darwin(v62 - 8);
  uint64_t v525 = (uint64_t)&v523 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __chkstk_darwin(v63);
  uint64_t v536 = (uint64_t)&v523 - v66;
  uint64_t v67 = __chkstk_darwin(v65);
  uint64_t v537 = (uint64_t)&v523 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  uint64_t v559 = (uint64_t)&v523 - v70;
  uint64_t v71 = __chkstk_darwin(v69);
  uint64_t v550 = (uint64_t)&v523 - v72;
  uint64_t v73 = __chkstk_darwin(v71);
  uint64_t v545 = (uint64_t)&v523 - v74;
  uint64_t v75 = __chkstk_darwin(v73);
  uint64_t v538 = (uint64_t)&v523 - v76;
  uint64_t v77 = __chkstk_darwin(v75);
  uint64_t v533 = (uint64_t)&v523 - v78;
  uint64_t v79 = __chkstk_darwin(v77);
  uint64_t v547 = (uint64_t)&v523 - v80;
  uint64_t v81 = __chkstk_darwin(v79);
  uint64_t v555 = (uint64_t)&v523 - v82;
  uint64_t v83 = __chkstk_darwin(v81);
  uint64_t v600 = (uint64_t)&v523 - v84;
  uint64_t v85 = __chkstk_darwin(v83);
  Swift::String v87 = (char *)&v523 - v86;
  __chkstk_darwin(v85);
  uint64_t v613 = (uint64_t)&v523 - v88;
  uint64_t v607 = type metadata accessor for FMIPDeviceStatus();
  uint64_t v623 = *(void *)(v607 - 8);
  uint64_t v89 = __chkstk_darwin(v607);
  v584 = (char *)&v523 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __chkstk_darwin(v89);
  v583 = (char *)&v523 - v92;
  uint64_t v93 = __chkstk_darwin(v91);
  v608 = (char *)&v523 - v94;
  __chkstk_darwin(v93);
  int v96 = (char *)&v523 - v95;
  uint64_t v626 = type metadata accessor for FMIPDevice();
  uint64_t v614 = *(void *)(v626 - 8);
  uint64_t v97 = __chkstk_darwin(v626);
  v575 = (char *)&v523 - ((v98 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __chkstk_darwin(v97);
  v587 = (char *)&v523 - v100;
  uint64_t v101 = __chkstk_darwin(v99);
  v586 = (char *)&v523 - v102;
  uint64_t v103 = __chkstk_darwin(v101);
  v554 = (char *)&v523 - v104;
  uint64_t v105 = __chkstk_darwin(v103);
  v595 = (char *)&v523 - v106;
  uint64_t v107 = __chkstk_darwin(v105);
  uint64_t v109 = (char *)&v523 - v108;
  uint64_t v110 = __chkstk_darwin(v107);
  Swift::Int v112 = (char *)&v523 - v111;
  uint64_t v113 = __chkstk_darwin(v110);
  uint64_t v115 = (char *)&v523 - v114;
  __chkstk_darwin(v113);
  Swift::String v117 = (char *)&v523 - v116;
  v622 = (void *)type metadata accessor for FMIPDeviceState();
  uint64_t v118 = *(v622 - 1);
  uint64_t v119 = __chkstk_darwin(v622);
  v621 = (char *)&v523 - ((v120 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v119);
  v605 = (char *)&v523 - v121;
  uint64_t v618 = a1;
  uint64_t v122 = FMIPDevice.ownerIdentifier.getter();
  uint64_t v124 = v123;
  uint64_t v125 = FMIPDefaultOwnerIdentifier.getter();
  v597 = v115;
  v596 = v96;
  if (v122 == v125 && v124 == v126) {
    int v576 = 1;
  }
  else {
    int v576 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v127 = v605;
  uint64_t v128 = v618;
  FMIPDevice.state.getter();
  uint64_t v129 = v621;
  static FMIPDeviceState.isFamilySharedDevice.getter();
  uint64_t v130 = sub_10026EEA0((unint64_t *)&qword_1006C0390, (void (*)(uint64_t))&type metadata accessor for FMIPDeviceState);
  uint64_t v131 = v622;
  uint64_t v615 = v130;
  int v574 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  uint64_t v132 = *(void (**)(char *, void *))(v118 + 8);
  v132(v129, v131);
  v616 = v132;
  uint64_t v617 = v118 + 8;
  v132(v127, v131);
  uint64_t v133 = *(void (**)(char *, uint64_t, uint64_t))(v614 + 16);
  uint64_t v624 = v614 + 16;
  v625 = v133;
  v133(v117, v128, v626);
  v606 = v109;
  v599 = v112;
  v598 = v87;
  if (v604) {
    int v534 = 0;
  }
  else {
    int v534 = FMIPDevice.isLocating.getter();
  }
  uint64_t v134 = v607;
  uint64_t v135 = v614 + 8;
  v619 = *(void (**)(char *, uint64_t))(v614 + 8);
  v619(v117, v626);
  FMIPDevice.state.getter();
  int v136 = v621;
  static FMIPDeviceState.isLocationCapable.getter();
  uint64_t v137 = v622;
  int v552 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  uint64_t v138 = v616;
  v616(v136, v137);
  v138(v127, v137);
  FMIPDevice.state.getter();
  static FMIPDeviceState.isLocationEnabled.getter();
  int v582 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  v138(v136, v137);
  v138(v127, v137);
  uint64_t v139 = v596;
  FMIPDevice.status.getter();
  unint64_t v140 = *(void (**)(char *, void, uint64_t))(v623 + 104);
  uint64_t v141 = v608;
  uint64_t v581 = v623 + 104;
  v580 = v140;
  v140(v608, enum case for FMIPDeviceStatus.online(_:), v134);
  uint64_t v142 = sub_10026EEA0((unint64_t *)&unk_1006C03A0, (void (*)(uint64_t))&type metadata accessor for FMIPDeviceStatus);
  dispatch thunk of RawRepresentable.rawValue.getter();
  uint64_t v579 = v142;
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (v627 == v631 && v628 == v632) {
    int v594 = 1;
  }
  else {
    int v594 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v144 = v623 + 8;
  unint64_t v143 = *(void (**)(char *, uint64_t))(v623 + 8);
  v143(v141, v134);
  uint64_t v623 = v144;
  v578 = v143;
  v143(v139, v134);
  FMIPDevice.state.getter();
  Swift::String v145 = v621;
  static FMIPDeviceState.isThisDevice.getter();
  unint64_t v146 = v622;
  int v592 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  unint64_t v147 = v145;
  uint64_t v148 = v616;
  v616(v147, v146);
  v148(v127, v146);
  uint64_t v149 = v610;
  sub_100006AB0(v611, v610, (uint64_t *)&unk_1006AFE30);
  uint64_t v150 = type metadata accessor for FMIPItem();
  uint64_t v151 = *(void *)(v150 - 8);
  v596 = *(char **)(v151 + 48);
  int v152 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v596)(v149, 1, v150);
  uint64_t v591 = v151;
  uint64_t v153 = v135;
  if (v152 == 1)
  {
    sub_100003F10(v149, (uint64_t *)&unk_1006AFE30);
    uint64_t v154 = v609;
    uint64_t v155 = (uint64_t)v598;
    uint64_t v156 = v620;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v609 + 56))(v598, 1, 1, v620);
  }
  else
  {
    uint64_t v155 = (uint64_t)v598;
    FMIPItem.location.getter();
    (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v149, v150);
    uint64_t v156 = v620;
    uint64_t v154 = v609;
  }
  uint64_t v157 = v597;
  uint64_t v158 = v626;
  v625(v597, v128, v626);
  uint64_t v159 = *(char **)(v154 + 48);
  uint64_t v610 = v154 + 48;
  v608 = v159;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v159)(v155, 1, v156) == 1)
  {
    uint64_t v160 = v613;
    FMIPDevice.bestLocation.getter();
    uint64_t v156 = v620;
    uint64_t v161 = v153;
    v619(v157, v158);
    sub_100003F10(v155, (uint64_t *)&unk_1006B2AE0);
  }
  else
  {
    uint64_t v161 = v153;
    v619(v157, v158);
    uint64_t v160 = v613;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v154 + 32))(v613, v155, v156);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v154 + 56))(v160, 0, 1, v156);
  }
  uint64_t v162 = (uint64_t)v602;
  uint64_t v163 = v160;
  uint64_t v164 = v600;
  sub_100006AB0(v163, v600, (uint64_t *)&unk_1006B2AE0);
  int v165 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v608)(v164, 1, v156);
  uint64_t v166 = (uint64_t)v601;
  if (v165 == 1)
  {
    sub_100003F10(v164, (uint64_t *)&unk_1006B2AE0);
    char v167 = 0;
  }
  else
  {
    char v167 = FMIPLocation.isOld.getter();
    (*(void (**)(uint64_t, uint64_t))(v609 + 8))(v164, v620);
  }
  uint64_t v168 = v618;
  uint64_t v169 = v161;
  sub_100006AB0(v611, v166, (uint64_t *)&unk_1006AFE30);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v596)(v166, 1, v150) == 1)
  {
    sub_100003F10(v166, (uint64_t *)&unk_1006AFE30);
    uint64_t v170 = type metadata accessor for FMIPAddress();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v170 - 8) + 56))(v162, 1, 1, v170);
  }
  else
  {
    FMIPItem.address.getter();
    (*(void (**)(uint64_t, uint64_t))(v591 + 8))(v166, v150);
  }
  uint64_t v171 = v612;
  uint64_t v172 = v626;
  char v173 = v619;
  os_log_t v174 = v599;
  v625(v599, v168, v626);
  uint64_t v175 = type metadata accessor for FMIPAddress();
  uint64_t v176 = *(void *)(v175 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v176 + 48))(v162, 1, v175) == 1)
  {
    FMIPDevice.address.getter();
    v173(v174, v172);
    sub_100003F10(v162, (uint64_t *)&unk_1006BB9C0);
  }
  else
  {
    v173(v174, v172);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v176 + 32))(v171, v162, v175);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v176 + 56))(v171, 0, 1, v175);
  }
  uint64_t v177 = v606;
  uint64_t v178 = v168;
  uint64_t v179 = (void (*)(char *, char *, uint64_t))v625;
  v625(v606, v168, v172);
  if (v603)
  {
    char v180 = v594 & v167;
    uint64_t v181 = v595;
    v179(v595, v177, v172);
    if (v180)
    {
      v173(v181, v172);
      v173(v177, v172);
      char v182 = 1;
      uint64_t v178 = v618;
    }
    else
    {
      uint64_t v183 = v583;
      FMIPDevice.status.getter();
      uint64_t v184 = v584;
      uint64_t v185 = v607;
      v580(v584, enum case for FMIPDeviceStatus.pending(_:), v607);
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      if (v627 == v631 && v628 == v632) {
        char v186 = 1;
      }
      else {
        char v186 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      uint64_t v178 = v618;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v187 = v578;
      v578(v184, v185);
      v187(v183, v185);
      uint64_t v172 = v626;
      char v173 = v619;
      v619(v595, v626);
      v173(v606, v172);
      char v182 = v186 & v167;
    }
  }
  else
  {
    v173(v177, v172);
    char v182 = 0;
  }
  if (FMIPDevice.pairingIncomplete.getter())
  {
    uint64_t v627 = 0;
    unint64_t v628 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v188 = [self mainBundle];
    v633._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
    v633._unint64_t object = (void *)0x800000010058ED60;
    v189._unint64_t object = (void *)0x800000010058ED40;
    v189._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
    v190._uint64_t countAndFlagsBits = 0;
    v190._unint64_t object = (void *)0xE000000000000000;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v189, (Swift::String_optional)0, (NSBundle)v188, v190, v633)._countAndFlagsBits;

    uint64_t v192 = v613;
    goto LABEL_149;
  }
  LODWORD(v623) = v593;
  uint64_t v523 = v169;
  if (v592)
  {
    uint64_t v192 = v613;
    if ((v582 & 1) == 0)
    {
      uint64_t v206 = (uint64_t)v577;
      v193 = v625;
      v625(v577, v178, v172);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v614 + 56))(v206, 0, 1, v172);
      uint64_t v207 = sub_10022FDEC(0xD000000000000036, 0x800000010058F0E0, v206);
      v209 = v208;
      uint64_t v211 = v210;
      uint64_t v213 = v212;
      swift_bridgeObjectRetain();
      uint64_t countAndFlagsBits = sub_10022F23C(v207, v209, v211, v213, 0, 0);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      sub_100003F10(v206, &qword_1006B2AF0);
      uint64_t v214 = v587;
      goto LABEL_131;
    }
    v193 = v625;
    if (!(v576 & 1 | ((v574 & 1) == 0)) && ((v594 ^ 1) & 1) == 0)
    {
      uint64_t v194 = (uint64_t)v577;
      v625(v577, v178, v172);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v614 + 56))(v194, 0, 1, v172);
      uint64_t v195 = 0xD000000000000035;
      v196 = "DEVICE_LIST_SUBTITLE_THIS_DEVICE_NOT_SHARING_LOCATION";
LABEL_108:
      uint64_t v374 = sub_10022FDEC(v195, (unint64_t)(v196 - 32) | 0x8000000000000000, v194);
      v376 = v375;
      uint64_t v378 = v377;
      v380 = v379;
      swift_bridgeObjectRetain();
      uint64_t countAndFlagsBits = sub_10022F23C(v374, v376, v378, v380, 0, 0);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v381 = &qword_1006B2AF0;
      uint64_t v382 = v194;
LABEL_130:
      sub_100003F10(v382, v381);
      uint64_t v214 = v587;
      goto LABEL_131;
    }
    v236 = v625;
    uint64_t v237 = v555;
    sub_100006AB0(v613, v555, (uint64_t *)&unk_1006B2AE0);
    int v238 = v554;
    v236(v554, v178, v172);
    if ((v182 & 1) == 0)
    {
      v173(v238, v172);
      uint64_t v244 = v620;
      v246 = v548;
      goto LABEL_58;
    }
    uint64_t v239 = v547;
    FMIPDevice.crowdSourcedLocation.getter();
    uint64_t v240 = v549;
    uint64_t v241 = v549 + *(int *)(v544 + 48);
    sub_100006AB0(v237, v549, (uint64_t *)&unk_1006B2AE0);
    v622 = (void *)v241;
    sub_100006AB0(v239, v241, (uint64_t *)&unk_1006B2AE0);
    uint64_t v242 = v620;
    uint64_t v243 = (uint64_t (*)(void *, uint64_t, uint64_t))v608;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v608)(v240, 1, v620) == 1)
    {
      sub_100003F10(v239, (uint64_t *)&unk_1006B2AE0);
      v173(v238, v172);
      uint64_t v244 = v620;
      sub_100003F10(v237, (uint64_t *)&unk_1006B2AE0);
      int v245 = v243(v622, 1, v244);
      uint64_t v192 = v613;
      if (v245 == 1)
      {
        uint64_t v237 = v549;
        v246 = v548;
LABEL_58:
        sub_100003F10(v237, (uint64_t *)&unk_1006B2AE0);
LABEL_59:
        char v255 = FMIPShowCrowdSourcedLocationOnly.getter();
        v193 = v625;
        if ((v255 & 1) == 0)
        {
          uint64_t v194 = (uint64_t)v577;
          v625(v577, v178, v172);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v614 + 56))(v194, 0, 1, v172);
          uint64_t v195 = 0xD000000000000020;
          v196 = "DEVICE_LIST_SUBTITLE_THIS_DEVICE";
          goto LABEL_108;
        }
        uint64_t v256 = v538;
        sub_100006AB0(v192, v538, (uint64_t *)&unk_1006B2AE0);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v608)(v256, 1, v244) == 1)
        {
          sub_100003F10(v256, (uint64_t *)&unk_1006B2AE0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v589 + 56))(v246, 1, 1, v588);
          uint64_t v257 = (uint64_t)v246;
          uint64_t v214 = v587;
LABEL_98:
          sub_100003F10(v257, (uint64_t *)&unk_1006AF6E0);
          if (v534)
          {
            uint64_t v627 = 0;
            unint64_t v628 = 0xE000000000000000;
            _StringGuts.grow(_:)(20);
            swift_bridgeObjectRelease();
            id v340 = [self mainBundle];
            v638._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
            v638._unint64_t object = (void *)0x800000010058ED60;
            v341._unint64_t object = (void *)0x800000010058ED40;
            v341._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
            v342._uint64_t countAndFlagsBits = 0;
            v342._unint64_t object = (void *)0xE000000000000000;
            uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v341, (Swift::String_optional)0, (NSBundle)v340, v342, v638)._countAndFlagsBits;

            goto LABEL_131;
          }
          uint64_t v360 = (uint64_t)v577;
          v193(v577, v178, v172);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v614 + 56))(v360, 0, 1, v172);
          uint64_t v361 = sub_10022FDEC(0xD000000000000037, 0x800000010058F150, v360);
          v363 = v362;
          uint64_t v365 = v364;
          v367 = v366;
          swift_bridgeObjectRetain();
          uint64_t countAndFlagsBits = sub_10022F23C(v361, v363, v365, v367, 0, 0);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          v368 = &qword_1006B2AF0;
          uint64_t v369 = v360;
          uint64_t v214 = v587;
          goto LABEL_176;
        }
        uint64_t v328 = FMIPLocation.location.getter();
        uint64_t v329 = v256;
        v330 = (void *)v328;
        (*(void (**)(uint64_t, uint64_t))(v609 + 8))(v329, v244);
        id v331 = [v330 timestamp];

        v332 = v551;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        v333 = v193;
        uint64_t v334 = v589;
        v335 = *(void (**)(char *, char *, uint64_t))(v589 + 32);
        v336 = v332;
        uint64_t v337 = v588;
        v335(v246, v336, v588);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v334 + 56))(v246, 0, 1, v337);
        uint64_t v338 = v334;
        v193 = v333;
        int v339 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v338 + 48))(v246, 1, v337);
        uint64_t v257 = (uint64_t)v246;
        uint64_t v214 = v587;
        if (v339 == 1) {
          goto LABEL_98;
        }
        v335(v531, (char *)v257, v337);
        if (v623)
        {
          v395 = (void *)qword_1006D2650;
          char v396 = v530;
          if (qword_1006D2650)
          {
            id v397 = (id)qword_1006D2650;
          }
          else
          {
            id v469 = [objc_allocWithZone((Class)FMRelativeDateFormatter) init];
            [v469 setFormattingContext:2];
            v470 = (void *)qword_1006D2650;
            qword_1006D2650 = (uint64_t)v469;
            id v397 = v469;

            v395 = 0;
          }
          id v471 = v395;
          Class isa = Date._bridgeToObjectiveC()().super.isa;
          id v473 = [v397 stringFromDate:isa];

          uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v452 = v474;
        }
        else
        {
          uint64_t v450 = (uint64_t)v541;
          static FormatStyleCapitalizationContext.beginningOfSentence.getter();
          uint64_t countAndFlagsBits = sub_1000BC2AC(v450);
          uint64_t v452 = v451;
          (*(void (**)(uint64_t, uint64_t))(v543 + 8))(v450, v542);
          char v396 = v530;
        }
        if (v396)
        {
          int v475 = v623 & 1;
          uint64_t v476 = (uint64_t)v526;
          FMIPDevice.address.getter();
          uint64_t v477 = sub_100268F40(v476, v192, v475, v528 & 1);
          uint64_t v479 = v478;
          sub_100003F10(v476, (uint64_t *)&unk_1006BB9C0);
          uint64_t v627 = 0;
          unint64_t v628 = 0xE000000000000000;
          _StringGuts.grow(_:)(20);
          swift_bridgeObjectRelease();
          id v480 = [self mainBundle];
          v481._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
          v643._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
          v643._unint64_t object = (void *)0x800000010058A0D0;
          v481._unint64_t object = (void *)0x800000010058A0B0;
          v482._uint64_t countAndFlagsBits = 0;
          v482._unint64_t object = (void *)0xE000000000000000;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v481, (Swift::String_optional)0, (NSBundle)v480, v482, v643);

          sub_10005D034((uint64_t *)&unk_1006AF790);
          uint64_t v483 = swift_allocObject();
          *(_OWORD *)(v483 + 16) = xmmword_10055B960;
          *(void *)(v483 + 56) = &type metadata for String;
          unint64_t v484 = sub_10007F2C8();
          *(void *)(v483 + 32) = v477;
          *(void *)(v483 + 40) = v479;
          uint64_t v214 = v587;
          *(void *)(v483 + 96) = &type metadata for String;
          *(void *)(v483 + 104) = v484;
          *(void *)(v483 + 64) = v484;
          *(void *)(v483 + 72) = countAndFlagsBits;
          *(void *)(v483 + 80) = v452;
          uint64_t countAndFlagsBits = String.init(format:_:)();
          v193 = v625;
          swift_bridgeObjectRelease();
        }
        (*(void (**)(char *, uint64_t))(v589 + 8))(v531, v588);
LABEL_131:
        uint64_t My = type metadata accessor for Feature.FindMy();
        uint64_t v629 = My;
        uint64_t v630 = sub_10026EEA0((unint64_t *)&qword_1006B5A60, (void (*)(uint64_t))&type metadata accessor for Feature.FindMy);
        v427 = sub_100042804(&v627);
        (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(My - 8) + 104))(v427, enum case for Feature.FindMy.baAirpodsMultipartUI(_:), My);
        char v428 = isFeatureEnabled(_:)();
        sub_10002CEFC((uint64_t)&v627);
        int v429 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v608)(v192, 1, v620);
        if (v428)
        {
          uint64_t v430 = v626;
          v193(v586, v178, v626);
          if (v429 != 1 || (v623 & 1) != 0)
          {
            v433 = v619;
            v619(v586, v430);
            v625(v214, v178, v430);
          }
          else
          {
            v431 = v586;
            char v432 = FMIPDevice.hasLocation.getter();
            v433 = v619;
            v619(v431, v430);
            v625(v214, v178, v430);
            if (v432)
            {
              char v434 = FMIPDevice.shouldDisplaySeparatedLocation.getter();
              v433(v214, v430);
              if ((v434 & 1) == 0) {
                goto LABEL_149;
              }
              swift_bridgeObjectRelease();
              uint64_t v435 = (uint64_t)v539;
              FMIPDevice.itemGroup.getter();
              uint64_t v436 = type metadata accessor for FMIPItemGroup();
              uint64_t v437 = *(void *)(v436 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v437 + 48))(v435, 1, v436) == 1)
              {
                sub_100003F10(v435, &qword_1006B36B0);
LABEL_147:
                uint64_t v627 = 0;
                unint64_t v628 = 0xE000000000000000;
                _StringGuts.grow(_:)(20);
                swift_bridgeObjectRelease();
                id v442 = [self mainBundle];
                unint64_t v443 = 0xD000000000000019;
                unint64_t v444 = 0xD00000000000002BLL;
                unint64_t v522 = 0x800000010058EDB0;
                v445 = "ITEM_SUBTITLE_OUT_OF_CASE";
                goto LABEL_148;
              }
              char v446 = FMIPItemGroup.partsAtMultipleLocations.getter();
              (*(void (**)(uint64_t, uint64_t))(v437 + 8))(v435, v436);
              if ((v446 & 1) == 0) {
                goto LABEL_147;
              }
              uint64_t v627 = 0;
              unint64_t v628 = 0xE000000000000000;
              _StringGuts.grow(_:)(20);
              swift_bridgeObjectRelease();
              id v441 = [self mainBundle];
LABEL_141:
              id v442 = v441;
              unint64_t v443 = 0xD00000000000001FLL;
              unint64_t v444 = 0xD000000000000031;
              unint64_t v522 = 0x800000010058C500;
              v445 = "ITEM_SUBTITLE_MULTIPLE_LOCATION";
LABEL_148:
              unint64_t v447 = (unint64_t)(v445 - 32) | 0x8000000000000000;
              v448._uint64_t countAndFlagsBits = 0;
              v448._unint64_t object = (void *)0xE000000000000000;
              uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v443, (Swift::String_optional)0, (NSBundle)v442, v448, *(Swift::String *)&v444)._countAndFlagsBits;

              goto LABEL_149;
            }
          }
          v433(v214, v430);
          goto LABEL_149;
        }
        v438 = v575;
        uint64_t v439 = v626;
        v193(v575, v178, v626);
        if (v429 != 1)
        {
          v619(v438, v439);
          goto LABEL_149;
        }
        char v440 = FMIPDevice.shouldDisplaySeparatedLocation.getter();
        v619(v438, v439);
        if ((v440 & 1) == 0)
        {
LABEL_149:
          uint64_t v235 = v612;
          goto LABEL_150;
        }
        swift_bridgeObjectRelease();
        uint64_t v627 = 0;
        unint64_t v628 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease();
        id v441 = [self mainBundle];
        goto LABEL_141;
      }
    }
    else
    {
      uint64_t v307 = v533;
      sub_100006AB0(v240, v533, (uint64_t *)&unk_1006B2AE0);
      v308 = v622;
      if (v243(v622, 1, v242) != 1)
      {
        uint64_t v370 = v609;
        v371 = v529;
        (*(void (**)(char *, void *, uint64_t))(v609 + 32))(v529, v308, v242);
        sub_10026EEA0(&qword_1006B7B58, (void (*)(uint64_t))&type metadata accessor for FMIPLocation);
        char v372 = dispatch thunk of static Equatable.== infix(_:_:)();
        v373 = *(void (**)(char *, uint64_t))(v370 + 8);
        v373(v371, v620);
        sub_100003F10(v547, (uint64_t *)&unk_1006B2AE0);
        v619(v554, v626);
        sub_100003F10(v555, (uint64_t *)&unk_1006B2AE0);
        v373((char *)v307, v620);
        uint64_t v172 = v626;
        uint64_t v244 = v620;
        sub_100003F10(v240, (uint64_t *)&unk_1006B2AE0);
        uint64_t v192 = v613;
        v246 = v548;
        if (v372) {
          goto LABEL_59;
        }
LABEL_107:
        uint64_t v194 = (uint64_t)v577;
        v193 = v625;
        v625(v577, v178, v172);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v614 + 56))(v194, 0, 1, v172);
        uint64_t v195 = 0xD000000000000037;
        v196 = "DEVICE_LIST_SUBTITLE_THIS_DEVICE_LOCATION_NOT_AVAILABLE";
        goto LABEL_108;
      }
      sub_100003F10(v547, (uint64_t *)&unk_1006B2AE0);
      v173(v554, v172);
      sub_100003F10(v555, (uint64_t *)&unk_1006B2AE0);
      (*(void (**)(uint64_t, uint64_t))(v609 + 8))(v307, v242);
      uint64_t v192 = v613;
    }
    sub_100003F10(v549, &qword_1006B7B48);
    goto LABEL_107;
  }
  uint64_t v197 = v605;
  FMIPDevice.state.getter();
  unint64_t v198 = v621;
  static FMIPDeviceState.isDeviceInPendingRemove.getter();
  uint64_t v199 = v622;
  char v200 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  uint64_t v201 = v198;
  v202 = v616;
  v616(v201, v199);
  v202(v197, v199);
  if (v200)
  {
    uint64_t v203 = v590;
    FMIPDevice.pendingRemoveUntilTimestamp.getter();
    uint64_t v204 = v588;
    uint64_t v205 = v589;
  }
  else
  {
    uint64_t v205 = v589;
    uint64_t v203 = v590;
    uint64_t v204 = v588;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v589 + 56))(v590, 1, 1, v588);
  }
  uint64_t v215 = v585;
  sub_100006AB0(v203, v585, (uint64_t *)&unk_1006AF6E0);
  uint64_t v216 = (char *)(v205 + 48);
  v622 = *(void **)(v205 + 48);
  int v217 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v622)(v215, 1, v204);
  v193 = v625;
  if (v217 == 1)
  {
    sub_100003F10(v215, (uint64_t *)&unk_1006AF6E0);
    uint64_t v218 = (uint64_t)v564;
    FMIPDevice.eraseMetadata.getter();
    uint64_t v219 = v572;
    uint64_t v220 = v573;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v572 + 48))(v218, 1, v573) == 1)
    {
      sub_100003F10(v218, &qword_1006B7B40);
      uint64_t v192 = v613;
      uint64_t v221 = (uint64_t)v562;
      goto LABEL_65;
    }
    v621 = (char *)(v205 + 48);
    v247 = v560;
    (*(void (**)(char *, uint64_t, uint64_t))(v219 + 32))(v560, v218, v220);
    Swift::Int v248 = v556;
    FMIPEraseMetadata.status.getter();
    uint64_t v249 = v571;
    uint64_t v250 = v557;
    uint64_t v251 = v558;
    v616 = *(void (**)(char *, void *))(v571 + 104);
    uint64_t v617 = v571 + 104;
    ((void (*)(char *, void, uint64_t))v616)(v557, enum case for FMIPActionStatus.eraseCancelled(_:), v558);
    uint64_t v615 = sub_10026EEA0(&qword_1006B7B50, (void (*)(uint64_t))&type metadata accessor for FMIPActionStatus);
    char v252 = dispatch thunk of static Equatable.== infix(_:_:)();
    v253 = v250;
    uint64_t v254 = *(void (**)(char *, uint64_t))(v249 + 8);
    v254(v253, v251);
    uint64_t v571 = v249 + 8;
    v254(v248, v251);
    if (v252)
    {
      (*(void (**)(char *, uint64_t))(v219 + 8))(v247, v220);
      uint64_t v192 = v613;
      uint64_t v178 = v618;
      v193 = v625;
      uint64_t v221 = (uint64_t)v562;
      uint64_t v216 = v621;
      goto LABEL_65;
    }
    v258 = v546;
    FMIPEraseMetadata.timestamp.getter();
    Date.timeIntervalSince1970.getter();
    double v260 = v259;
    uint64_t v261 = v204;
    uint64_t v262 = *(void (**)(char *, uint64_t))(v589 + 8);
    v262(v258, v204);
    uint64_t v263 = v545;
    sub_100006AB0(v613, v545, (uint64_t *)&unk_1006B2AE0);
    uint64_t v264 = v620;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v608)(v263, 1, v620) == 1)
    {
      sub_100003F10(v263, (uint64_t *)&unk_1006B2AE0);
      uint64_t v221 = (uint64_t)v562;
      uint64_t v216 = v621;
      if (v260 <= 0.0)
      {
LABEL_64:
        (*(void (**)(char *, uint64_t))(v572 + 8))(v560, v573);
        uint64_t v192 = v613;
        uint64_t v178 = v618;
        v193 = v625;
LABEL_65:
        FMIPDevice.wipedTimestamp.getter();
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v622)(v221, 1, v204) == 1)
        {
          sub_100003F10(v221, (uint64_t *)&unk_1006AF6E0);
          uint64_t v265 = v620;
          goto LABEL_75;
        }
        uint64_t v266 = v589;
        (*(void (**)(char *, uint64_t, uint64_t))(v589 + 32))(v561, v221, v204);
        Date.timeIntervalSince1970.getter();
        double v268 = v267;
        uint64_t v269 = v550;
        sub_100006AB0(v192, v550, (uint64_t *)&unk_1006B2AE0);
        uint64_t v270 = v204;
        uint64_t v271 = v620;
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v608)(v269, 1, v620) == 1)
        {
          sub_100003F10(v269, (uint64_t *)&unk_1006B2AE0);
          if (v268 <= 0.0)
          {
            v272 = *(void (**)(char *, uint64_t))(v589 + 8);
LABEL_74:
            uint64_t v204 = v588;
            v193 = v625;
            v272(v561, v588);
            uint64_t v265 = v620;
LABEL_75:
            uint64_t v287 = v559;
            if (v576)
            {
              sub_100006AB0(v192, v559, (uint64_t *)&unk_1006B2AE0);
            }
            else
            {
              char v288 = v574 & v594;
              sub_100006AB0(v192, v559, (uint64_t *)&unk_1006B2AE0);
              if (v288)
              {
                uint64_t v289 = v537;
                sub_100006AB0(v287, v537, (uint64_t *)&unk_1006B2AE0);
                if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v608)(v289, 1, v265) == 1)
                {
                  sub_100003F10(v287, (uint64_t *)&unk_1006B2AE0);
                  sub_100003F10(v289, (uint64_t *)&unk_1006B2AE0);
                  uint64_t v627 = 0;
                  unint64_t v628 = 0xE000000000000000;
                  _StringGuts.grow(_:)(20);
                  swift_bridgeObjectRelease();
                  id v290 = [self mainBundle];
                  unint64_t v291 = 0xD000000000000030;
                  unint64_t v292 = 0xD000000000000042;
                  unint64_t v521 = 0x800000010058EF60;
                  unint64_t v293 = 0x800000010058EF20;
                  goto LABEL_128;
                }
                uint64_t v343 = v265;
                uint64_t v344 = v289;
                v345 = (void *)FMIPLocation.location.getter();
                sub_100003F10(v287, (uint64_t *)&unk_1006B2AE0);
                (*(void (**)(uint64_t, uint64_t))(v609 + 8))(v344, v343);

                uint64_t v204 = v588;
LABEL_81:
                uint64_t v294 = (uint64_t)v553;
                if (!(v552 & 1 | ((v594 & 1) == 0)))
                {
                  uint64_t countAndFlagsBits = sub_10022FAF4(0xD000000000000036, (void *)0x800000010058EEE0);
LABEL_129:
                  v381 = (uint64_t *)&unk_1006AF6E0;
                  uint64_t v382 = v590;
                  goto LABEL_130;
                }
                FMIPDevice.lockedTimestamp.getter();
                if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v622)(v294, 1, v204) != 1)
                {
                  v299 = v540;
                  (*(void (**)(char *, uint64_t, uint64_t))(v589 + 32))(v540, v294, v204);
                  uint64_t v627 = 0;
                  unint64_t v628 = 0xE000000000000000;
                  _StringGuts.grow(_:)(20);
                  swift_bridgeObjectRelease();
                  id v300 = [self mainBundle];
                  v301._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
                  v636._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
                  v636._unint64_t object = (void *)0x800000010058EEB0;
                  v301._unint64_t object = (void *)0x800000010058EE90;
                  v302._uint64_t countAndFlagsBits = 0;
                  v302._unint64_t object = (void *)0xE000000000000000;
                  NSLocalizedString(_:tableName:bundle:value:comment:)(v301, (Swift::String_optional)0, (NSBundle)v300, v302, v636);

                  sub_10005D034((uint64_t *)&unk_1006AF790);
                  uint64_t v303 = swift_allocObject();
                  *(_OWORD *)(v303 + 16) = xmmword_10055B970;
                  if (v623)
                  {
                    v304 = v193;
                    v305 = (void *)qword_1006D2648;
                    if (qword_1006D2648)
                    {
                      id v306 = (id)qword_1006D2648;
                    }
                    else
                    {
                      id v417 = [objc_allocWithZone((Class)FMRelativeDateFormatter) init];
                      [v417 setFormattingContext:5];
                      v418 = (void *)qword_1006D2648;
                      qword_1006D2648 = (uint64_t)v417;
                      id v306 = v417;

                      v305 = 0;
                    }
                    id v419 = v305;
                    v299 = v540;
                    Class v420 = Date._bridgeToObjectiveC()().super.isa;
                    id v421 = [v306 stringFromDate:v420];

                    uint64_t v422 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                    uint64_t v424 = v423;

                    *(void *)(v303 + 56) = &type metadata for String;
                    *(void *)(v303 + 64) = sub_10007F2C8();
                    *(void *)(v303 + 32) = v422;
                    *(void *)(v303 + 40) = v424;
                    uint64_t countAndFlagsBits = String.init(format:_:)();
                    v193 = v304;
                  }
                  else
                  {
                    uint64_t v356 = (uint64_t)v541;
                    static FormatStyleCapitalizationContext.middleOfSentence.getter();
                    uint64_t v357 = sub_1000BC2AC(v356);
                    uint64_t v359 = v358;
                    (*(void (**)(uint64_t, uint64_t))(v543 + 8))(v356, v542);
                    *(void *)(v303 + 56) = &type metadata for String;
                    *(void *)(v303 + 64) = sub_10007F2C8();
                    *(void *)(v303 + 32) = v357;
                    *(void *)(v303 + 40) = v359;
                    uint64_t countAndFlagsBits = String.init(format:_:)();
                  }
                  swift_bridgeObjectRelease();
                  (*(void (**)(char *, uint64_t))(v589 + 8))(v299, v588);
                  sub_100003F10(v590, (uint64_t *)&unk_1006AF6E0);
                  uint64_t v214 = v587;
                  uint64_t v192 = v613;
                  goto LABEL_131;
                }
                v621 = v216;
                sub_100003F10(v294, (uint64_t *)&unk_1006AF6E0);
                uint64_t v295 = v536;
                sub_100006AB0(v192, v536, (uint64_t *)&unk_1006B2AE0);
                uint64_t v296 = v620;
                if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v608)(v295, 1, v620) == 1)
                {
                  sub_100003F10(v295, (uint64_t *)&unk_1006B2AE0);
                  v297 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v589 + 56);
                  uint64_t v298 = (uint64_t)v535;
                  v297(v535, 1, 1, v588);
                }
                else
                {
                  v346 = (void *)FMIPLocation.location.getter();
                  (*(void (**)(uint64_t, uint64_t))(v609 + 8))(v295, v296);
                  id v347 = [v346 timestamp];

                  v348 = v551;
                  static Date._unconditionallyBridgeFromObjectiveC(_:)();

                  uint64_t v349 = v589;
                  v350 = *(void (**)(char *, char *, uint64_t))(v589 + 32);
                  uint64_t v298 = (uint64_t)v535;
                  v351 = v348;
                  uint64_t v352 = v588;
                  v350(v535, v351, v588);
                  v297 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v349 + 56);
                  v297((char *)v298, 0, 1, v352);
                  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v622)(v298, 1, v352) != 1)
                  {
                    v350(v532, (char *)v298, v588);
                    if (v604)
                    {
                      uint64_t v627 = 0;
                      unint64_t v628 = 0xE000000000000000;
                      _StringGuts.grow(_:)(20);
                      swift_bridgeObjectRelease();
                      id v406 = [self mainBundle];
                      v642._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
                      v642._unint64_t object = (void *)0x8000000100582EE0;
                      v407._unint64_t object = (void *)0x8000000100582EC0;
                      v407._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
                      v408._uint64_t countAndFlagsBits = 0;
                      v408._unint64_t object = (void *)0xE000000000000000;
                      Swift::String v409 = NSLocalizedString(_:tableName:bundle:value:comment:)(v407, (Swift::String_optional)0, (NSBundle)v406, v408, v642);
                      uint64_t countAndFlagsBits = v409._countAndFlagsBits;
                      unint64_t object = (unint64_t)v409._object;

                      v193 = v625;
                      char v411 = v530;
                    }
                    else
                    {
                      char v411 = v530;
                      if (a9)
                      {
                        swift_bridgeObjectRetain();
                        if (v623)
                        {
                          uint64_t v453 = sub_1000BC8A8();
                          v455 = v454;
                        }
                        else
                        {
                          uint64_t v486 = (uint64_t)v541;
                          static FormatStyleCapitalizationContext.beginningOfSentence.getter();
                          uint64_t v453 = sub_1000BC2AC(v486);
                          v455 = v487;
                          (*(void (**)(uint64_t, uint64_t))(v543 + 8))(v486, v542);
                        }
                        id v488 = [self mainBundle];
                        v489._uint64_t countAndFlagsBits = 0xD000000000000010;
                        v644._uint64_t countAndFlagsBits = 0xD000000000000015;
                        v644._unint64_t object = (void *)0x800000010058CEE0;
                        v489._unint64_t object = (void *)0x800000010058EE70;
                        v490.value._unint64_t object = (void *)0x800000010058CEC0;
                        v490.value._uint64_t countAndFlagsBits = 0xD000000000000010;
                        v491._uint64_t countAndFlagsBits = 0;
                        v491._unint64_t object = (void *)0xE000000000000000;
                        NSLocalizedString(_:tableName:bundle:value:comment:)(v489, v490, (NSBundle)v488, v491, v644);

                        sub_10005D034((uint64_t *)&unk_1006AF790);
                        uint64_t v492 = swift_allocObject();
                        *(_OWORD *)(v492 + 16) = xmmword_10055B970;
                        *(void *)(v492 + 56) = &type metadata for String;
                        *(void *)(v492 + 64) = sub_10007F2C8();
                        *(void *)(v492 + 32) = v527;
                        *(void *)(v492 + 40) = a9;
                        uint64_t v493 = String.init(format:_:)();
                        unint64_t v495 = v494;
                        swift_bridgeObjectRelease();
                        uint64_t v627 = v493;
                        unint64_t v628 = v495;
                        swift_bridgeObjectRetain();
                        v496._uint64_t countAndFlagsBits = 10;
                        v496._unint64_t object = (void *)0xE100000000000000;
                        String.append(_:)(v496);
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRetain();
                        v497._uint64_t countAndFlagsBits = v453;
                        v497._unint64_t object = v455;
                        String.append(_:)(v497);
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        uint64_t countAndFlagsBits = v627;
                        unint64_t object = v628;
                        v193 = v625;
                      }
                      else
                      {
                        v193 = v625;
                        if (v623)
                        {
                          uint64_t countAndFlagsBits = sub_1000BC8A8();
                          unint64_t object = v485;
                        }
                        else
                        {
                          uint64_t v510 = (uint64_t)v541;
                          static FormatStyleCapitalizationContext.beginningOfSentence.getter();
                          uint64_t countAndFlagsBits = sub_1000BC2AC(v510);
                          unint64_t object = v511;
                          (*(void (**)(uint64_t, uint64_t))(v543 + 8))(v510, v542);
                        }
                      }
                    }
                    if (v411)
                    {
                      uint64_t v512 = sub_100268F40(v612, v192, v623 & 1, v528 & 1);
                      uint64_t v514 = v513;
                      uint64_t v627 = 0;
                      unint64_t v628 = 0xE000000000000000;
                      _StringGuts.grow(_:)(20);
                      swift_bridgeObjectRelease();
                      id v515 = [self mainBundle];
                      v516._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
                      v646._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
                      v646._unint64_t object = (void *)0x800000010058A0D0;
                      v516._unint64_t object = (void *)0x800000010058A0B0;
                      v517._uint64_t countAndFlagsBits = 0;
                      v517._unint64_t object = (void *)0xE000000000000000;
                      NSLocalizedString(_:tableName:bundle:value:comment:)(v516, (Swift::String_optional)0, (NSBundle)v515, v517, v646);

                      sub_10005D034((uint64_t *)&unk_1006AF790);
                      uint64_t v518 = swift_allocObject();
                      *(_OWORD *)(v518 + 16) = xmmword_10055B960;
                      *(void *)(v518 + 56) = &type metadata for String;
                      unint64_t v519 = sub_10007F2C8();
                      *(void *)(v518 + 32) = v512;
                      *(void *)(v518 + 40) = v514;
                      *(void *)(v518 + 96) = &type metadata for String;
                      *(void *)(v518 + 104) = v519;
                      *(void *)(v518 + 64) = v519;
                      *(void *)(v518 + 72) = countAndFlagsBits;
                      *(void *)(v518 + 80) = object;
                      uint64_t countAndFlagsBits = String.init(format:_:)();
                      v193 = v625;
                      swift_bridgeObjectRelease();
                    }
                    uint64_t v214 = v587;
                    uint64_t v520 = v590;
                    (*(void (**)(char *, uint64_t))(v589 + 8))(v532, v588);
                    v368 = (uint64_t *)&unk_1006AF6E0;
                    uint64_t v369 = v520;
                    goto LABEL_176;
                  }
                }
                sub_100003F10(v298, (uint64_t *)&unk_1006AF6E0);
                if (v604)
                {
                  uint64_t v627 = 0;
                  unint64_t v628 = 0xE000000000000000;
                  _StringGuts.grow(_:)(20);
                  swift_bridgeObjectRelease();
                  id v353 = [self mainBundle];
                  v639._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
                  v639._unint64_t object = (void *)0x8000000100582EE0;
                  v354._unint64_t object = (void *)0x8000000100582EC0;
                  v354._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
                  v355._uint64_t countAndFlagsBits = 0;
                  v355._unint64_t object = (void *)0xE000000000000000;
                  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v354, (Swift::String_optional)0, (NSBundle)v353, v355, v639)._countAndFlagsBits;

                  sub_100003F10(v590, (uint64_t *)&unk_1006AF6E0);
                  uint64_t v214 = v587;
                  v193 = v625;
                  goto LABEL_131;
                }
                v193 = v625;
                if (v594)
                {
                  if (a9)
                  {
                    v389 = self;
                    swift_bridgeObjectRetain();
                    id v390 = [v389 mainBundle];
                    v391._uint64_t countAndFlagsBits = 0xD000000000000010;
                    v641._uint64_t countAndFlagsBits = 0xD000000000000015;
                    v641._unint64_t object = (void *)0x800000010058CEE0;
                    v391._unint64_t object = (void *)0x800000010058EE70;
                    v392.value._unint64_t object = (void *)0x800000010058CEC0;
                    v392.value._uint64_t countAndFlagsBits = 0xD000000000000010;
                    v393._uint64_t countAndFlagsBits = 0;
                    v393._unint64_t object = (void *)0xE000000000000000;
                    NSLocalizedString(_:tableName:bundle:value:comment:)(v391, v392, (NSBundle)v390, v393, v641);

                    sub_10005D034((uint64_t *)&unk_1006AF790);
                    uint64_t v394 = swift_allocObject();
                    *(_OWORD *)(v394 + 16) = xmmword_10055B970;
                    *(void *)(v394 + 56) = &type metadata for String;
                    *(void *)(v394 + 64) = sub_10007F2C8();
                    *(void *)(v394 + 32) = v527;
                    *(void *)(v394 + 40) = a9;
                    uint64_t countAndFlagsBits = String.init(format:_:)();
                    swift_bridgeObjectRelease();
                    goto LABEL_129;
                  }
                  uint64_t v466 = v525;
                  sub_100006AB0(v192, v525, (uint64_t *)&unk_1006B2AE0);
                  uint64_t v467 = v620;
                  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v608)(v466, 1, v620) == 1)
                  {
                    sub_100003F10(v466, (uint64_t *)&unk_1006B2AE0);
                    uint64_t v468 = (uint64_t)v524;
                    v297(v524, 1, 1, v588);
                    uint64_t v214 = v587;
                  }
                  else
                  {
                    uint64_t v498 = v467;
                    v499 = (void *)FMIPLocation.location.getter();
                    uint64_t v500 = v498;
                    v193 = v625;
                    (*(void (**)(uint64_t, uint64_t))(v609 + 8))(v466, v500);
                    id v501 = [v499 timestamp];

                    v502 = v551;
                    static Date._unconditionallyBridgeFromObjectiveC(_:)();

                    uint64_t v503 = (uint64_t)v524;
                    v504 = v502;
                    uint64_t v505 = v588;
                    (*(void (**)(char *, char *, uint64_t))(v589 + 32))(v524, v504, v588);
                    uint64_t v468 = v503;
                    v297((char *)v503, 0, 1, v505);
                    int v506 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v622)(v503, 1, v505);
                    uint64_t v214 = v587;
                    if (v506 != 1)
                    {
                      sub_100003F10(v503, (uint64_t *)&unk_1006AF6E0);
                      sub_100003F10(v590, (uint64_t *)&unk_1006AF6E0);
                      uint64_t countAndFlagsBits = 0;
                      goto LABEL_131;
                    }
                  }
                  sub_100003F10(v468, (uint64_t *)&unk_1006AF6E0);
                  uint64_t v627 = 0;
                  unint64_t v628 = 0xE000000000000000;
                  _StringGuts.grow(_:)(20);
                  swift_bridgeObjectRelease();
                  id v507 = [self mainBundle];
                  v508._uint64_t countAndFlagsBits = 0xD000000000000031;
                  v645._uint64_t countAndFlagsBits = 0xD000000000000043;
                  v645._unint64_t object = (void *)0x800000010058EE20;
                  v508._unint64_t object = (void *)0x800000010058EDE0;
                  v509._uint64_t countAndFlagsBits = 0;
                  v509._unint64_t object = (void *)0xE000000000000000;
                  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v508, (Swift::String_optional)0, (NSBundle)v507, v509, v645)._countAndFlagsBits;

                  uint64_t v369 = v590;
                  v368 = (uint64_t *)&unk_1006AF6E0;
LABEL_176:
                  sub_100003F10(v369, v368);
                  goto LABEL_131;
                }
                uint64_t v627 = 0;
                unint64_t v628 = 0xE000000000000000;
                _StringGuts.grow(_:)(20);
                swift_bridgeObjectRelease();
                id v290 = [self mainBundle];
                unint64_t v292 = 0xD00000000000002ELL;
                unint64_t v521 = 0x800000010058ED60;
                unint64_t v293 = 0x800000010058ED40;
                unint64_t v291 = 0xD00000000000001CLL;
LABEL_128:
                v425._uint64_t countAndFlagsBits = 0;
                v425._unint64_t object = (void *)0xE000000000000000;
                uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v291, (Swift::String_optional)0, (NSBundle)v290, v425, *(Swift::String *)&v292)._countAndFlagsBits;

                goto LABEL_129;
              }
            }
            sub_100003F10(v287, (uint64_t *)&unk_1006B2AE0);
            goto LABEL_81;
          }
        }
        else
        {
          uint64_t v273 = v269;
          v274 = (void *)FMIPLocation.location.getter();
          (*(void (**)(uint64_t, uint64_t))(v609 + 8))(v273, v271);
          id v275 = [v274 timestamp];

          v276 = v551;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          Date.timeIntervalSince1970.getter();
          double v278 = v277;
          v272 = *(void (**)(char *, uint64_t))(v266 + 8);
          v272(v276, v270);
          if (v278 >= v268) {
            goto LABEL_74;
          }
        }
        uint64_t v627 = 0;
        unint64_t v628 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease();
        id v279 = [self mainBundle];
        v280._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
        v635._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
        v635._unint64_t object = (void *)0x800000010058EFD0;
        v280._unint64_t object = (void *)0x800000010058EFB0;
        v281._uint64_t countAndFlagsBits = 0;
        v281._unint64_t object = (void *)0xE000000000000000;
        v282 = NSLocalizedString(_:tableName:bundle:value:comment:)(v280, (Swift::String_optional)0, (NSBundle)v279, v281, v635)._object;

        sub_10005D034((uint64_t *)&unk_1006AF790);
        uint64_t v283 = swift_allocObject();
        *(_OWORD *)(v283 + 16) = xmmword_10055B970;
        v193 = v625;
        if (v623)
        {
          v284 = (void *)qword_1006D2648;
          v285 = v561;
          if (qword_1006D2648)
          {
            id v286 = (id)qword_1006D2648;
          }
          else
          {
            id v398 = [objc_allocWithZone((Class)FMRelativeDateFormatter) init];
            [v398 setFormattingContext:5];
            v399 = (void *)qword_1006D2648;
            qword_1006D2648 = (uint64_t)v398;
            id v286 = v398;

            v284 = 0;
          }
          id v400 = v284;
          Class v401 = Date._bridgeToObjectiveC()().super.isa;
          id v402 = [v286 stringFromDate:v401];

          uint64_t v403 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v405 = v404;

          *(void *)(v283 + 56) = &type metadata for String;
          *(void *)(v283 + 64) = sub_10007F2C8();
          *(void *)(v283 + 32) = v403;
          *(void *)(v283 + 40) = v405;
          uint64_t countAndFlagsBits = String.init(format:_:)();
          v193 = v625;
        }
        else
        {
          uint64_t v323 = (uint64_t)v541;
          static FormatStyleCapitalizationContext.middleOfSentence.getter();
          v285 = v561;
          uint64_t v324 = sub_1000BC2AC(v323);
          v622 = v282;
          uint64_t v325 = v324;
          uint64_t v327 = v326;
          (*(void (**)(uint64_t, uint64_t))(v543 + 8))(v323, v542);
          *(void *)(v283 + 56) = &type metadata for String;
          *(void *)(v283 + 64) = sub_10007F2C8();
          *(void *)(v283 + 32) = v325;
          *(void *)(v283 + 40) = v327;
          uint64_t countAndFlagsBits = String.init(format:_:)();
        }
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v589 + 8))(v285, v588);
        goto LABEL_129;
      }
    }
    else
    {
      uint64_t v309 = v264;
      v310 = (void *)FMIPLocation.location.getter();
      (*(void (**)(uint64_t, uint64_t))(v609 + 8))(v263, v309);
      id v311 = [v310 timestamp];

      v312 = v551;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      Date.timeIntervalSince1970.getter();
      double v314 = v313;
      v262(v312, v261);
      uint64_t v204 = v261;
      uint64_t v221 = (uint64_t)v562;
      uint64_t v216 = v621;
      if (v314 >= v260) {
        goto LABEL_64;
      }
    }
    v315 = v556;
    v316 = v560;
    FMIPEraseMetadata.status.getter();
    v317 = v557;
    uint64_t v318 = v558;
    ((void (*)(char *, void, uint64_t))v616)(v557, enum case for FMIPActionStatus.pending(_:), v558);
    char v319 = dispatch thunk of static Equatable.== infix(_:_:)();
    v254(v317, v318);
    v254(v315, v318);
    if (v319)
    {
      uint64_t v627 = 0;
      unint64_t v628 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      id v320 = [self mainBundle];
      v321._uint64_t countAndFlagsBits = 0xD000000000000022;
      v637._uint64_t countAndFlagsBits = 0xD000000000000034;
      v637._unint64_t object = (void *)0x800000010058F030;
      v321._unint64_t object = (void *)0x800000010058F000;
      v322._uint64_t countAndFlagsBits = 0;
      v322._unint64_t object = (void *)0xE000000000000000;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v321, (Swift::String_optional)0, (NSBundle)v320, v322, v637)._countAndFlagsBits;

      uint64_t v192 = v613;
      uint64_t v178 = v618;
      uint64_t v214 = v587;
      v193 = v625;
    }
    else
    {
      uint64_t v627 = 0;
      unint64_t v628 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      id v383 = [self mainBundle];
      v384._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v640._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
      v640._unint64_t object = (void *)0x800000010058EFD0;
      v384._unint64_t object = (void *)0x800000010058EFB0;
      v385._uint64_t countAndFlagsBits = 0;
      v385._unint64_t object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v384, (Swift::String_optional)0, (NSBundle)v383, v385, v640);

      sub_10005D034((uint64_t *)&unk_1006AF790);
      uint64_t v386 = swift_allocObject();
      *(_OWORD *)(v386 + 16) = xmmword_10055B970;
      if (v623)
      {
        v387 = (void *)qword_1006D2648;
        uint64_t v178 = v618;
        if (qword_1006D2648)
        {
          id v388 = (id)qword_1006D2648;
        }
        else
        {
          id v456 = [objc_allocWithZone((Class)FMRelativeDateFormatter) init];
          [v456 setFormattingContext:5];
          v457 = v262;
          v458 = (void *)qword_1006D2648;
          qword_1006D2648 = (uint64_t)v456;
          id v388 = v456;

          uint64_t v262 = v457;
          v387 = 0;
        }
        id v459 = v387;
        v460 = v551;
        v316 = v560;
        FMIPEraseMetadata.timestamp.getter();
        Class v461 = Date._bridgeToObjectiveC()().super.isa;
        v262(v460, v588);
        id v462 = [v388 stringFromDate:v461];

        uint64_t v463 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v465 = v464;

        *(void *)(v386 + 56) = &type metadata for String;
        *(void *)(v386 + 64) = sub_10007F2C8();
        *(void *)(v386 + 32) = v463;
        *(void *)(v386 + 40) = v465;
        uint64_t countAndFlagsBits = String.init(format:_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        v412 = v551;
        v316 = v560;
        FMIPEraseMetadata.timestamp.getter();
        uint64_t v413 = (uint64_t)v541;
        static FormatStyleCapitalizationContext.middleOfSentence.getter();
        uint64_t v414 = sub_1000BC2AC(v413);
        uint64_t v416 = v415;
        (*(void (**)(uint64_t, uint64_t))(v543 + 8))(v413, v542);
        v262(v412, v588);
        *(void *)(v386 + 56) = &type metadata for String;
        *(void *)(v386 + 64) = sub_10007F2C8();
        *(void *)(v386 + 32) = v414;
        *(void *)(v386 + 40) = v416;
        uint64_t countAndFlagsBits = String.init(format:_:)();
        swift_bridgeObjectRelease();
        uint64_t v178 = v618;
      }
      uint64_t v214 = v587;
      v193 = v625;
      uint64_t v192 = v613;
    }
    (*(void (**)(char *, uint64_t))(v572 + 8))(v316, v573);
    sub_100003F10(v590, (uint64_t *)&unk_1006AF6E0);
    goto LABEL_131;
  }
  uint64_t v222 = v563;
  (*(void (**)(char *, uint64_t, uint64_t))(v205 + 32))(v563, v215, v204);
  uint64_t v223 = v205;
  id v224 = [self mainBundle];
  v225.value._uint64_t countAndFlagsBits = 0xD000000000000015;
  v634._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v226._uint64_t countAndFlagsBits = 0xD000000000000023;
  v634._unint64_t object = (void *)0x800000010058F0C0;
  v226._unint64_t object = (void *)0x800000010058F070;
  v225.value._unint64_t object = (void *)0x800000010058F0A0;
  v227._uint64_t countAndFlagsBits = 0;
  v227._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v226, v225, (NSBundle)v224, v227, v634);

  sub_10005D034((uint64_t *)&unk_1006AF790);
  uint64_t v228 = v204;
  uint64_t v229 = swift_allocObject();
  *(_OWORD *)(v229 + 16) = xmmword_10055B970;
  v230 = v565;
  static Date.FormatStyle.DateStyle.abbreviated.getter();
  char v231 = v567;
  static Date.FormatStyle.TimeStyle.omitted.getter();
  uint64_t v232 = Date.formatted(date:time:)();
  uint64_t v234 = v233;
  (*(void (**)(char *, uint64_t))(v569 + 8))(v231, v570);
  (*(void (**)(char *, uint64_t))(v566 + 8))(v230, v568);
  *(void *)(v229 + 56) = &type metadata for String;
  *(void *)(v229 + 64) = sub_10007F2C8();
  *(void *)(v229 + 32) = v232;
  *(void *)(v229 + 40) = v234;
  uint64_t countAndFlagsBits = String.init(format:_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v223 + 8))(v222, v228);
  sub_100003F10(v590, (uint64_t *)&unk_1006AF6E0);
  uint64_t v235 = v612;
  uint64_t v192 = v613;
LABEL_150:
  sub_100003F10(v235, (uint64_t *)&unk_1006BB9C0);
  sub_100003F10(v192, (uint64_t *)&unk_1006B2AE0);
  return countAndFlagsBits;
}

uint64_t sub_10026E628(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v74 = a3;
  uint64_t v78 = a2;
  uint64_t v6 = type metadata accessor for FMIPDevice();
  uint64_t v73 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v72 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10005D034(&qword_1006B7B28);
  __chkstk_darwin(v8 - 8);
  uint64_t v70 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMIPPartType();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v69 - v15;
  uint64_t v17 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v71 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v69 - v20;
  uint64_t v79 = type metadata accessor for FMIPItem();
  uint64_t v22 = *(void *)(v79 - 8);
  uint64_t v23 = __chkstk_darwin(v79);
  uint64_t v77 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v69 - v25;
  uint64_t v69 = a1;
  uint64_t result = FMIPDevice.name.getter();
  uint64_t v83 = result;
  uint64_t v84 = v28;
  if (a4)
  {
    uint64_t My = type metadata accessor for Feature.FindMy();
    v82[3] = (void *)My;
    v82[4] = (void *)sub_10026EEA0((unint64_t *)&qword_1006B5A60, (void (*)(uint64_t))&type metadata accessor for Feature.FindMy);
    uint64_t v30 = sub_100042804((uint64_t *)v82);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(My - 8) + 104))(v30, enum case for Feature.FindMy.baAirpodsMultipartUI(_:), My);
    LOBYTE(My) = isFeatureEnabled(_:)();
    sub_10002CEFC((uint64_t)v82);
    if ((My & 1) == 0) {
      return v83;
    }
    sub_100006AB0(v78, (uint64_t)v21, (uint64_t *)&unk_1006AFE30);
    uint64_t v31 = v79;
    uint64_t v75 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
    uint64_t v76 = v22 + 48;
    if (v75((uint64_t)v21, 1, v79) == 1)
    {
      sub_100003F10((uint64_t)v21, (uint64_t *)&unk_1006AFE30);
      if (!v74) {
        return v83;
      }
LABEL_18:
      v82[0] = v74;
      swift_bridgeObjectRetain();
      sub_1002657D8(v82);
      uint64_t v47 = v82[0][2];
      uint64_t v48 = (uint64_t)v71;
      uint64_t v49 = v77;
      if (v47)
      {
        uint64_t v51 = *(void **)(v22 + 16);
        uint64_t v50 = v22 + 16;
        uint64_t v52 = *(unsigned __int8 *)(v50 + 64);
        uint64_t v70 = (char *)v82[0];
        uint64_t v53 = (char *)v82[0] + ((v52 + 32) & ~v52);
        uint64_t v73 = *(void *)(v50 + 56);
        uint64_t v74 = v51;
        uint64_t v54 = (void (**)(uint64_t, uint64_t))(v50 - 8);
        uint64_t v72 = (char *)((v50 - 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
        uint64_t v55 = v79;
        while (1)
        {
          uint64_t v56 = v50;
          ((void (*)(char *, char *, uint64_t))v74)(v49, v53, v55);
          uint64_t v57 = FMIPItem.identifier.getter();
          uint64_t v59 = v58;
          sub_100006AB0(v78, v48, (uint64_t *)&unk_1006AFE30);
          if (v75(v48, 1, v55) == 1) {
            break;
          }
          uint64_t v63 = FMIPItem.identifier.getter();
          uint64_t v64 = v48;
          uint64_t v65 = v63;
          uint64_t v67 = v66;
          uint64_t v62 = *v54;
          (*v54)(v64, v55);
          if (v57 != v65 || v59 != v67)
          {
            char v68 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v48 = (uint64_t)v71;
            uint64_t v49 = v77;
            if (v68) {
              goto LABEL_21;
            }
            goto LABEL_24;
          }
          swift_bridgeObjectRelease_n();
          uint64_t v48 = (uint64_t)v71;
          uint64_t v49 = v77;
LABEL_21:
          uint64_t v55 = v79;
          v62((uint64_t)v49, v79);
          v53 += v73;
          --v47;
          uint64_t v50 = v56;
          if (!v47) {
            goto LABEL_29;
          }
        }
        sub_100003F10(v48, (uint64_t *)&unk_1006AFE30);
        swift_bridgeObjectRelease();
        uint64_t v49 = v77;
LABEL_24:
        v60._uint64_t countAndFlagsBits = 2108192;
        v60._unint64_t object = (void *)0xE300000000000000;
        String.append(_:)(v60);
        v61._uint64_t countAndFlagsBits = FMIPItem.name.getter();
        String.append(_:)(v61);
        swift_bridgeObjectRelease();
        uint64_t v62 = *v54;
        goto LABEL_21;
      }
LABEL_29:
      swift_release();
      return v83;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v26, v21, v31);
    FMIPItem.partType.getter();
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v14, enum case for FMIPPartType.case(_:), v10);
    sub_10026EEA0(&qword_1006B5E78, (void (*)(uint64_t))&type metadata accessor for FMIPPartType);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    if (v82[0] == v80 && v82[1] == v81)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v32 = *(void (**)(char *, uint64_t))(v11 + 8);
      v32(v14, v10);
      v32(v16, v10);
    }
    else
    {
      char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v34 = *(void (**)(char *, uint64_t))(v11 + 8);
      v34(v14, v10);
      v34(v16, v10);
      if ((v33 & 1) == 0)
      {
        uint64_t v38 = v6;
        uint64_t v39 = (uint64_t)v70;
        FMIPItem.partInfo.getter();
        uint64_t v40 = type metadata accessor for FMIPPartInfo();
        uint64_t v41 = *(void *)(v40 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40) == 1)
        {
          sub_100003F10(v39, &qword_1006B7B28);
          uint64_t v35 = 0;
          uint64_t v37 = 0;
        }
        else
        {
          uint64_t v35 = FMIPPartInfo.name.getter();
          uint64_t v37 = v42;
          (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v40);
        }
        uint64_t v44 = v72;
        uint64_t v43 = v73;
        (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v72, v69, v38);
        uint64_t v45 = v79;
        if (!v37)
        {
          uint64_t v35 = FMIPDevice.name.getter();
          uint64_t v37 = v46;
        }
        (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v38);
        (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v45);
LABEL_17:
        uint64_t v83 = v35;
        uint64_t v84 = v37;
        if (!v74) {
          return v83;
        }
        goto LABEL_18;
      }
    }
    uint64_t v35 = FMIPItem.name.getter();
    uint64_t v37 = v36;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v79);
    goto LABEL_17;
  }
  return result;
}

uint64_t sub_10026EEA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10026EEE8()
{
  uint64_t v1 = v0;
  id v2 = [v0 navigationController];
  if (v2)
  {
    unint64_t v3 = v2;
    sub_1004800D8();
  }
  id v4 = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithFrame:0.0, 0.0, 20.0, 20.0];
  unint64_t v5 = self;
  id v6 = [v5 grayColor];
  [v4 setColor:v6];

  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_tableView];
  [v7 setDataSource:v1];
  [v7 setDelegate:v1];
  [v7 setKeyboardDismissMode:2];
  [v7 setScrollEnabled:0];
  [v7 setAllowsSelection:0];
  id v8 = [v5 clearColor];
  [v7 setBackgroundColor:v8];

  type metadata accessor for FMEditableMessageTableViewCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v10 = String._bridgeToObjectiveC()();
  [v7 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v10];

  id v11 = [v1 contentView];
  [v11 addSubview:v7];
}

id sub_10026F0E8(void *a1)
{
  id v2 = v1;
  NSString v4 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v6 = [a1 dequeueReusableCellWithIdentifier:v4 forIndexPath:isa];

  type metadata accessor for FMEditableMessageTableViewCell();
  uint64_t v7 = swift_dynamicCastClass();
  if (v7)
  {
    uint64_t v8 = v7;
    swift_unknownObjectWeakAssign();
    *(unsigned char *)(v8 + OBJC_IVAR____TtC6FindMy30FMEditableMessageTableViewCell_textViewIsEnabled) = 1;
    id v9 = v6;
    sub_100387478();

    NSString v10 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x1F0);
    id v11 = (char *)*(id *)(v8 + OBJC_IVAR____TtC6FindMy30FMEditableMessageTableViewCell_textView);
    uint64_t v12 = v10();
    uint64_t v13 = &v11[OBJC_IVAR____TtC6FindMy17FMMessageTextView_maxCharacterLimit];
    *(void *)uint64_t v13 = v12;
    v13[8] = v14 & 1;
  }
  uint64_t v15 = *(void *)((char *)v2 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_message);
  unint64_t v16 = *(void *)((char *)v2 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_message + 8);
  swift_bridgeObjectRetain();
  sub_10026F488(v15, v16, v17, 0, 1);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_10026F28C(void *a1)
{
  id v2 = [a1 text];
  if (v2)
  {
    unint64_t v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  uint64_t v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_message);
  *uint64_t v7 = v4;
  v7[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v8 = *v7;
  unint64_t v9 = v7[1];
  swift_bridgeObjectRetain();
  sub_10026F488(v8, v9, v10, 0, 1);

  return swift_bridgeObjectRelease();
}

id sub_10026F334()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_tableView);
  IndexPath.init(row:section:)();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  id v7 = [v5 cellForRowAtIndexPath:isa];

  if (!v7) {
    return 0;
  }
  type metadata accessor for FMEditableMessageTableViewCell();
  uint64_t v8 = swift_dynamicCastClass();
  if (!v8)
  {

    return 0;
  }
  id v9 = *(id *)(v8 + OBJC_IVAR____TtC6FindMy30FMEditableMessageTableViewCell_textView);

  return v9;
}

uint64_t sub_10026F488(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  if (a2) {
    uint64_t v11 = String.characterCount.getter();
  }
  else {
    uint64_t v11 = 0;
  }
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v5) + 0x1F0))();
  if (v13) {
    return 0;
  }
  uint64_t v14 = result;
  uint64_t v15 = result - v11;
  if (__OFSUB__(result, v11))
  {
    __break(1u);
    goto LABEL_27;
  }
  int v16 = 0;
  if (a2 && (a5 & 1) == 0)
  {
    if (a4 >= 1)
    {
      uint64_t v17 = HIBYTE(a2) & 0xF;
      if ((a2 & 0x2000000000000000) == 0) {
        uint64_t v17 = a1 & 0xFFFFFFFFFFFFLL;
      }
      if (!v17)
      {
        BOOL v19 = __OFADD__(v15, a4);
        v15 += a4;
        if (v19)
        {
LABEL_28:
          __break(1u);
          return result;
        }
LABEL_19:
        int v16 = 1;
        goto LABEL_20;
      }
    }
    if (v11 >= result)
    {
      int v16 = 0;
      goto LABEL_20;
    }
    uint64_t v18 = String.characterCount.getter();
    BOOL v19 = __OFSUB__(v15, v18);
    v15 -= v18;
    if (!v19) {
      goto LABEL_19;
    }
    __break(1u);
    return 0;
  }
LABEL_20:
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v20 = [self mainBundle];
  v34._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  v34._unint64_t object = (void *)0x800000010058F330;
  v21._unint64_t object = (void *)0x800000010058F310;
  v21._uint64_t countAndFlagsBits = 0xD000000000000018;
  v22._uint64_t countAndFlagsBits = 0;
  v22._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v34);

  sub_10005D034((uint64_t *)&unk_1006AF790);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_10055B960;
  if (__OFSUB__(v14, v15))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v23 = (void *)result;
  unsigned int v33 = v16;
  uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v26 = v25;
  v23[7] = &type metadata for String;
  unint64_t v27 = sub_10007F2C8();
  v23[8] = v27;
  v23[4] = v24;
  v23[5] = v26;
  uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
  v23[12] = &type metadata for String;
  v23[13] = v27;
  v23[9] = v28;
  v23[10] = v29;
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void **)((char *)v6 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_remainingCharsLabel);
  if (v30)
  {
    id v31 = v30;
    String.init<A>(_:)();
    NSString v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v31 setText:v32];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v33;
}

UIFontTextStyle sub_10026F78C()
{
  qword_1006D1A68 = (uint64_t)UIFontTextStyleBody;
  *(_OWORD *)&qword_1006D1A70 = xmmword_1005622D0;
  return UIFontTextStyleBody;
}

char *sub_10026F7B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12 = &v9[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_passcode];
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;
  char v13 = &v9[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_phoneNumber];
  *(void *)char v13 = 0;
  *((void *)v13 + 1) = 0;
  uint64_t v14 = &v9[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_style];
  uint64_t v15 = qword_1006AE0A8;
  int v16 = v9;
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v17 = (void *)qword_1006D1A68;
  long long v18 = *(_OWORD *)&qword_1006D1A70;
  *(void *)uint64_t v14 = qword_1006D1A68;
  *(_OWORD *)(v14 + 8) = v18;
  uint64_t v19 = OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_tableView;
  id v20 = objc_allocWithZone((Class)type metadata accessor for OBTableView());
  id v21 = v17;
  *(void *)&v16[v19] = [v20 initWithFrame:2 style:0.0, 0.0, 0.0, 0.0];
  Swift::String v22 = &v16[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_message];
  *(void *)Swift::String v22 = 0;
  *((void *)v22 + 1) = 0;
  *(void *)&v16[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_remainingCharsLabel] = 0;
  uint64_t v23 = &v16[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_keyboardHeightScrollViewPadding];
  *(void *)uint64_t v23 = 0;
  v23[8] = 1;
  *(void *)&v16[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_keyboardWillShowObserver] = 0;
  *(void *)&v16[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_keyboardWillHideObserver] = 0;
  *(void *)&v16[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_rightBarButtonItem] = 0;
  *(void *)&v16[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_mediator] = a5;
  swift_retain();

  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a4)
  {
    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v25 = 0;
  }
  v33.receiver = v16;
  v33.super_class = (Class)type metadata accessor for FMEditableMessageViewController();
  uint64_t v26 = (char *)objc_msgSendSuper2(&v33, "initWithTitle:detailText:icon:contentLayout:", v24, v25, 0, 3);

  swift_release();
  unint64_t v27 = &v26[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_passcode];
  *(void *)unint64_t v27 = a6;
  *((void *)v27 + 1) = a7;
  swift_bridgeObjectRelease();
  uint64_t v28 = &v26[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_phoneNumber];
  *(void *)uint64_t v28 = a8;
  *((void *)v28 + 1) = a9;
  swift_bridgeObjectRelease();
  return v26;
}

void sub_10026FA00()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_tableView];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10055C200;
  id v3 = [v1 topAnchor];
  id v4 = [v0 contentView];
  id v5 = [v4 topAnchor];

  id v6 = [v3 constraintEqualToAnchor:v5 constant:*(double *)&v0[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_style + 8]];
  *(void *)(v2 + 32) = v6;
  id v7 = [v1 bottomAnchor];
  id v8 = [v0 contentView];
  id v9 = [v8 bottomAnchor];

  id v10 = [v7 constraintEqualToAnchor:v9];
  *(void *)(v2 + 40) = v10;
  id v11 = [v1 leadingAnchor];
  id v12 = [v0 contentView];
  id v13 = [v12 leadingAnchor];

  id v14 = [v11 constraintEqualToAnchor:v13];
  *(void *)(v2 + 48) = v14;
  id v15 = [v1 trailingAnchor];
  id v16 = [v0 contentView];
  id v17 = [v16 trailingAnchor];

  id v18 = [v15 constraintEqualToAnchor:v17];
  *(void *)(v2 + 56) = v18;
  id v19 = [v1 heightAnchor];
  id v20 = [v0 view];
  if (v20)
  {
    id v21 = v20;
    Swift::String v22 = self;
    id v23 = [v21 heightAnchor];

    id v24 = [v19 constraintEqualToAnchor:v23];
    LODWORD(v25) = 1132068864;
    [v24 setPriority:v25];
    *(void *)(v2 + 64) = v24;
    specialized Array._endMutation()();
    sub_10004FCE4();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v22 activateConstraints:isa];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10026FE54()
{
  uint64_t v1 = self;
  id v2 = [v1 defaultCenter];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v0;
  id v17 = sub_100271104;
  uint64_t v18 = v3;
  id v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  id v15 = sub_10046F7FC;
  id v16 = &unk_10062F690;
  id v4 = _Block_copy(&v13);
  id v5 = v0;
  swift_release();
  id v6 = [v2 addObserverForName:UIKeyboardWillShowNotification object:0 queue:0 usingBlock:v4];
  _Block_release(v4);

  *(void *)&v5[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_keyboardWillShowObserver] = v6;
  swift_unknownObjectRelease();
  id v7 = [v1 defaultCenter];
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v5;
  id v17 = sub_100271128;
  uint64_t v18 = v8;
  id v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  id v15 = sub_10046F7FC;
  id v16 = &unk_10062F6E0;
  id v9 = _Block_copy(&v13);
  id v10 = v5;
  swift_release();
  id v11 = [v7 addObserverForName:UIKeyboardWillHideNotification object:0 queue:0 usingBlock:v9];
  _Block_release(v9);

  *(void *)&v10[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_keyboardWillHideObserver] = v11;
  return swift_unknownObjectRelease();
}

void sub_100270100()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_keyboardWillHideObserver);
  if (v1)
  {
    id v2 = self;
    swift_unknownObjectRetain();
    id v3 = [v2 defaultCenter];
    [v3 removeObserver:v1];
    swift_unknownObjectRelease();
  }
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_keyboardWillShowObserver);
  if (v4)
  {
    id v5 = self;
    swift_unknownObjectRetain();
    id v6 = [v5 defaultCenter];
    [v6 removeObserver:v4];
    swift_unknownObjectRelease();
  }
}

id sub_100270700()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMEditableMessageViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for FMEditableMessageViewController()
{
  return self;
}

uint64_t initializeBufferWithCopyOfBuffer for FMEditableMessageViewStyle(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for FMEditableMessageViewStyle(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for FMEditableMessageViewStyle(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for FMEditableMessageViewStyle(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMEditableMessageViewStyle(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMEditableMessageViewStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMEditableMessageViewStyle()
{
  return &type metadata for FMEditableMessageViewStyle;
}

void sub_1002709A8()
{
  uint64_t v1 = v0;
  id v2 = sub_10026F334();
  if (!v2) {
    return;
  }
  id v3 = v2;
  [v2 bounds];
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;
  id v12 = [v0 view];
  [v3 convertRect:v12 toView:v5];
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  CGFloat v18 = v17;
  CGFloat v20 = v19;

  uint64_t v21 = Notification.userInfo.getter();
  if (!v21)
  {
    long long v51 = 0u;
    long long v52 = 0u;
LABEL_19:

    sub_100067244((uint64_t)&v51);
    return;
  }
  uint64_t v22 = v21;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v22 + 16) && (unint64_t v23 = sub_10002953C((uint64_t)v50), (v24 & 1) != 0))
  {
    sub_1000607C8(*(void *)(v22 + 56) + 32 * v23, (uint64_t)&v51);
  }
  else
  {
    long long v51 = 0u;
    long long v52 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1000294E8((uint64_t)v50);
  if (!*((void *)&v52 + 1)) {
    goto LABEL_19;
  }
  type metadata accessor for CGRect(0);
  if (swift_dynamicCast())
  {
    CGFloat v25 = *(double *)v50;
    CGFloat v26 = *(double *)&v50[1];
    CGFloat v27 = *(double *)&v50[2];
    CGFloat v28 = *(double *)&v50[3];
    id v29 = [self sharedApplication];
    id v30 = [v29 keyWindow];

    if (v30)
    {
      id v31 = [v30 rootViewController];

      if (v31)
      {
        id v32 = [v31 view];

        if (v32)
        {
          id v33 = [v1 view];
          if (v33)
          {
            Swift::String v34 = v33;
            v53.origin.x = v14;
            v53.origin.y = v16;
            v53.size.width = v18;
            v53.size.height = v20;
            [v33 convertPoint:v32 toCoordinateSpace:CGRectGetMaxY(v53)];
            double v36 = v35;

            [v32 frame];
            double v38 = v37;
            v54.origin.x = v25;
            v54.origin.y = v26;
            v54.size.width = v27;
            v54.size.height = v28;
            double v39 = v36 - (v38 - CGRectGetHeight(v54));
            if (v39 <= 0.0)
            {

              return;
            }
            id v40 = [v1 scrollView];
            if (v40)
            {
              uint64_t v41 = v40;
              [v40 contentOffset];
              double v43 = v42;

              id v44 = [v1 scrollView];
              if (v44)
              {
                uint64_t v45 = v44;
                v55.origin.x = v25;
                v55.origin.y = v26;
                v55.size.width = v27;
                v55.size.height = v28;
                CGRectGetHeight(v55);
                [v45 contentSize];
                [v45 setContentSize:];

                id v46 = [v1 scrollView];
                if (v46)
                {
                  uint64_t v47 = v46;
                  [v46 setContentOffset:1 animated:v39 + v43];

                  v56.origin.x = v25;
                  v56.origin.y = v26;
                  v56.size.width = v27;
                  v56.size.height = v28;
                  CGFloat Height = CGRectGetHeight(v56);

                  uint64_t v49 = (CGFloat *)&v1[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_keyboardHeightScrollViewPadding];
                  CGFloat *v49 = Height;
                  *((unsigned char *)v49 + 8) = 0;
                  return;
                }
                goto LABEL_26;
              }
LABEL_25:
              __break(1u);
LABEL_26:
              __break(1u);
              return;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
          goto LABEL_25;
        }
      }
    }
  }
}

void sub_100270D8C()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_keyboardHeightScrollViewPadding];
  if (v0[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_keyboardHeightScrollViewPadding + 8]) {
    goto LABEL_12;
  }
  id v2 = [v0 scrollView];
  if (!v2)
  {
    __break(1u);
    goto LABEL_14;
  }
  id v3 = v2;
  [v2 contentSize];
  [v3 setContentSize:];

  id v4 = [v0 scrollView];
  if (!v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  double v5 = v4;
  [v4 contentSize];
  double v7 = v6;

  id v8 = [v0 scrollView];
  if (!v8)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  double v9 = v8;
  [v8 bounds];
  double v11 = v10;

  if (v7 - v11 < 0.0) {
    double v12 = 0.0;
  }
  else {
    double v12 = v7 - v11;
  }
  id v13 = [v0 scrollView];
  if (!v13) {
    goto LABEL_16;
  }
  CGFloat v14 = v13;
  [v13 contentOffset];
  double v16 = v15;

  if (v12 >= v16)
  {
LABEL_12:
    *(void *)uint64_t v1 = 0;
    v1[8] = 1;
    return;
  }
  id v17 = [v0 scrollView];
  if (v17)
  {
    CGFloat v18 = v17;
    [v17 setContentOffset:1 animated:0.0];

    goto LABEL_12;
  }
LABEL_17:
  __break(1u);
}

char *sub_100270F18()
{
  uint64_t v1 = v0;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v2 = [self mainBundle];
  v15._uint64_t countAndFlagsBits = 0xD000000000000035;
  v15._unint64_t object = (void *)0x8000000100585F70;
  v3._unint64_t object = (void *)0x8000000100585F40;
  v3._uint64_t countAndFlagsBits = 0xD000000000000023;
  v4._uint64_t countAndFlagsBits = 0;
  v4._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v15);

  id v5 = [objc_allocWithZone((Class)type metadata accessor for FMMessageTableViewHeaderView()) initWithReuseIdentifier:0];
  [v5 setSectionHeader:1];
  double v6 = (char *)v5;
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v6 setText:v7];

  sub_100427B90();
  id v8 = *(void **)&v6[OBJC_IVAR____TtC6FindMy28FMMessageTableViewHeaderView_remainingCharsLabel];
  double v9 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_remainingCharsLabel);
  *(void *)(v1 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_remainingCharsLabel) = v8;
  id v10 = v8;

  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_message);
  unint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_message + 8);
  swift_bridgeObjectRetain();
  sub_10026F488(v11, v12, v13, 0, 1);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1002710CC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100271104()
{
}

void sub_100271128()
{
}

uint64_t sub_10027115C()
{
  uint64_t v1 = v0;
  id v2 = [v0 navigationBar];
  id v3 = [v2 backgroundColor];

  id v4 = [self systemBackgroundColor];
  id v5 = v4;
  if (v3)
  {
    if (!v4)
    {
      char v7 = 0;
      goto LABEL_8;
    }
    sub_100006060(0, (unint64_t *)&qword_1006B7C80);
    id v6 = v3;
    char v7 = static NSObject.== infix(_:_:)();

LABEL_6:
    id v3 = v5;
LABEL_8:

    goto LABEL_9;
  }
  if (v4)
  {
    char v7 = 0;
    goto LABEL_6;
  }
  char v7 = 1;
LABEL_9:
  id v8 = [v1 navigationBar];
  id v9 = [v8 backgroundImageForBarMetrics:0];

  id v10 = [v1 navigationBar];
  id v11 = [v10 shadowImage];

  if (!v11) {
    return v7 & (v9 == 0);
  }

  return 0;
}

void sub_1002713AC()
{
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for FMTransparentNavigationController();
  [super viewDidLoad];
  id v1 = [v0 navigationBar];
  [v1 setTranslucent:1];

  id v2 = [v0 navigationBar];
  id v3 = [objc_allocWithZone((Class)UIImage) init];
  [v2 setBackgroundImage:v3 forBarMetrics:0];

  id v4 = [v0 navigationBar];
  id v5 = [objc_allocWithZone((Class)UIImage) init];
  [v4 setShadowImage:v5];

  id v6 = [v0 navigationBar];
  id v7 = [self clearColor];
  [v6 setBackgroundColor:v7];
}

void sub_100271564(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = (void *)Strong;
    sub_1002715C0(a1);
  }
}

void sub_1002715C0(void *a1)
{
  [a1 adjustedContentInset];
  double v4 = -trunc(v3);
  [a1 contentOffset];
  if (v5 <= v4 || (sub_10027115C() & 1) != 0)
  {
    [a1 contentOffset];
    if (v6 > v4 || (sub_10027115C() & 1) == 0) {
      return;
    }
    id v7 = [v1 navigationBar];
    id v8 = [objc_allocWithZone((Class)UIImage) init];
    [v7 setBackgroundImage:v8 forBarMetrics:0];

    id v9 = [v1 navigationBar];
    id v10 = [self clearColor];
    [v9 setBackgroundColor:v10];

    id v11 = [v1 navigationBar];
    id v15 = [objc_allocWithZone((Class)UIImage) init];
    [v11 setShadowImage:];
  }
  else
  {
    id v12 = [v1 navigationBar];
    id v13 = [self systemBackgroundColor];
    [v12 setBackgroundColor:v13];

    id v14 = [v1 navigationBar];
    [v14 setBackgroundImage:0 forBarMetrics:0];

    id v15 = [v1 navigationBar];
    [v15 setShadowImage:0];
  }
}

id sub_10027182C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMTransparentNavigationController();
  return [super dealloc];
}

uint64_t type metadata accessor for FMTransparentNavigationController()
{
  return self;
}

uint64_t sub_1002718FC(void *a1)
{
  id v9 = a1;
  sub_100006060(0, (unint64_t *)&qword_1006B2928);
  id v2 = a1;
  sub_10005D034(&qword_1006B7C70);
  if (swift_dynamicCast())
  {
    sub_100042868(v7, (uint64_t)v10);
    uint64_t v3 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v4 = v11;
    uint64_t v5 = v12;
    sub_100271AB0((uint64_t)v10, v11);
    (*(void (**)(void (*)(void *), uint64_t, uint64_t, uint64_t))(v5 + 16))(sub_100271AA8, v3, v4, v5);
    return sub_10002CEFC((uint64_t)v10);
  }
  else
  {
    uint64_t v8 = 0;
    memset(v7, 0, sizeof(v7));
    return sub_100271A10((uint64_t)v7);
  }
}

uint64_t sub_100271A10(uint64_t a1)
{
  uint64_t v2 = sub_10005D034(&qword_1006B7C78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100271A70()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100271AA8(void *a1)
{
}

uint64_t sub_100271AB0(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void sub_100271B00()
{
  uint64_t v1 = v0;
  sub_100051430();
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_titleLabel);
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  uint64_t v3 = self;
  id v4 = [v3 mainBundle];
  v22._uint64_t countAndFlagsBits = 0xD000000000000021;
  v22._unint64_t object = (void *)0x800000010058F460;
  v5._uint64_t countAndFlagsBits = 0x43495645445F4F4ELL;
  v5._unint64_t object = (void *)0xEF454C5449545F45;
  v6._uint64_t countAndFlagsBits = 0;
  v6._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v22);

  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setText:v7];

  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_iconView);
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [self imageNamed:v9];

  [v8 setImage:v10];
  uint64_t v11 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_messageLabel);
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v12 = [v3 mainBundle];
  v23._uint64_t countAndFlagsBits = 0xD000000000000023;
  v23._unint64_t object = (void *)0x800000010058F4B0;
  v13._unint64_t object = (void *)0x800000010058F490;
  v13._uint64_t countAndFlagsBits = 0xD000000000000011;
  v14._uint64_t countAndFlagsBits = 0;
  v14._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v23);

  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v11 setText:v15];

  id v16 = objc_retain(*(id *)(*(void *)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButton)
                          + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label));
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v17 = [v3 mainBundle];
  v18._uint64_t countAndFlagsBits = 0xD000000000000016;
  v24._uint64_t countAndFlagsBits = 0xD000000000000028;
  v24._unint64_t object = (void *)0x800000010058F500;
  v18._unint64_t object = (void *)0x800000010058F4E0;
  v19._uint64_t countAndFlagsBits = 0;
  v19._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v24);

  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v16 setText:v20];
}

void sub_100271E54()
{
  uint64_t v1 = v0;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000606BC(v2, (uint64_t)qword_1006D1E98);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    Swift::String v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMNoDeviceView: action tapped", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButton);
  uint64_t v7 = OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label;
  id v8 = *(id *)(v6 + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label);
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v9 = [self mainBundle];
  v17._uint64_t countAndFlagsBits = 0xD000000000000031;
  v17._unint64_t object = (void *)0x800000010058F420;
  v10._unint64_t object = (void *)0x800000010058F400;
  v10._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v11._uint64_t countAndFlagsBits = 0;
  v11._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v17);

  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v8 setText:v12];

  *(unsigned char *)(v6 + OBJC_IVAR____TtC6FindMy17FMEmptyListButton_isEnabled) = 0;
  Swift::String v13 = *(void **)(v6 + v7);
  id v14 = [*(id *)(v6 + OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor) colorWithAlphaComponent:0.5];
  [v13 setTextColor:v14];

  id v15 = [self sharedInstance];
}

void *sub_10027212C(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return sub_10028D664(a1);
}

id sub_1002721A8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMNoDeviceView();
  return [super dealloc];
}

uint64_t type metadata accessor for FMNoDeviceView()
{
  return self;
}

uint64_t sub_100272200@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10005D034((uint64_t *)&unk_1006C0370);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v62 = (void (**)(char *, uint64_t))((char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __chkstk_darwin(v3);
  Swift::String v61 = (char *)&v59 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (char *)&v59 - v8;
  __chkstk_darwin(v7);
  Swift::String v11 = (char *)&v59 - v10;
  uint64_t v12 = sub_10005D034(&qword_1006B04D8);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  Swift::String v60 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  Swift::String v17 = (char *)&v59 - v16;
  __chkstk_darwin(v15);
  Swift::String v19 = (char *)&v59 - v18;
  uint64_t v20 = sub_10005D034(&qword_1006B36B0);
  __chkstk_darwin(v20 - 8);
  Swift::String v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for FMIPItemGroup();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  CGFloat v26 = (char *)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  FMIPDevice.itemGroup.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    sub_100003F10((uint64_t)v22, &qword_1006B36B0);
    FMIPDevice.lostMetadata.getter();
    uint64_t v27 = type metadata accessor for FMIPDeviceLostModeMetadata();
    uint64_t v28 = *(void *)(v27 - 8);
    id v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    if (v29(v11, 1, v27) == 1)
    {
      sub_100003F10((uint64_t)v11, (uint64_t *)&unk_1006C0370);
      uint64_t v65 = 0;
      uint64_t v66 = 0;
    }
    else
    {
      uint64_t v34 = FMIPDeviceLostModeMetadata.message.getter();
      uint64_t v65 = v35;
      uint64_t v66 = v34;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v27);
    }
    FMIPDevice.lostMetadata.getter();
    unsigned int v36 = v29(v9, 1, v27);
    uint64_t v37 = (uint64_t)v61;
    if (v36 == 1)
    {
      sub_100003F10((uint64_t)v9, (uint64_t *)&unk_1006C0370);
      uint64_t v63 = 0;
      uint64_t v64 = 0;
    }
    else
    {
      uint64_t v40 = FMIPDeviceLostModeMetadata.ownerNumber.getter();
      uint64_t v63 = v41;
      uint64_t v64 = (uint64_t (*)(char *, uint64_t, uint64_t))v40;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v27);
    }
    FMIPDevice.lostMetadata.getter();
    unsigned int v42 = v29((char *)v37, 1, v27);
    uint64_t v43 = (uint64_t)v62;
    if (v42 == 1)
    {
      sub_100003F10(v37, (uint64_t *)&unk_1006C0370);
      uint64_t v44 = 0;
      uint64_t v45 = 0;
    }
    else
    {
      uint64_t v52 = FMIPDeviceLostModeMetadata.email.getter();
      uint64_t v53 = v37;
      uint64_t v44 = v52;
      uint64_t v45 = v54;
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v53, v27);
    }
    FMIPDevice.lostMetadata.getter();
    if (v29((char *)v43, 1, v27) == 1)
    {
      uint64_t result = sub_100003F10(v43, (uint64_t *)&unk_1006C0370);
      char v55 = 0;
    }
    else
    {
      char v55 = FMIPDeviceLostModeMetadata.isEmailUpdatesEnabled.getter();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v43, v27);
    }
    uint64_t v50 = v66;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v26, v22, v23);
    FMIPItemGroup.lostMetadata.getter();
    uint64_t v30 = type metadata accessor for FMIPItemLostModeMetadata();
    id v31 = *(char **)(v30 - 8);
    id v32 = (uint64_t (*)(char *, uint64_t, uint64_t))*((void *)v31 + 6);
    int v33 = v32(v19, 1, v30);
    uint64_t v62 = (void (**)(char *, uint64_t))v31;
    if (v33 == 1)
    {
      sub_100003F10((uint64_t)v19, &qword_1006B04D8);
      uint64_t v65 = 0;
      uint64_t v66 = 0;
    }
    else
    {
      uint64_t v64 = v32;
      uint64_t v38 = FMIPItemLostModeMetadata.message.getter();
      uint64_t v65 = v39;
      uint64_t v66 = v38;
      id v32 = v64;
      (*((void (**)(char *, uint64_t))v31 + 1))(v19, v30);
    }
    FMIPItemGroup.lostMetadata.getter();
    if (v32(v17, 1, v30) == 1)
    {
      sub_100003F10((uint64_t)v17, &qword_1006B04D8);
      uint64_t v63 = 0;
      uint64_t v64 = 0;
    }
    else
    {
      uint64_t v46 = FMIPItemLostModeMetadata.ownerNumber.getter();
      uint64_t v63 = v47;
      uint64_t v64 = (uint64_t (*)(char *, uint64_t, uint64_t))v46;
      v62[1](v17, v30);
    }
    uint64_t v48 = (uint64_t)v60;
    FMIPItemGroup.lostMetadata.getter();
    int v49 = v32((char *)v48, 1, v30);
    uint64_t v50 = v66;
    if (v49 == 1)
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
      uint64_t result = sub_100003F10(v48, &qword_1006B04D8);
      uint64_t v44 = 0;
      uint64_t v45 = 0;
    }
    else
    {
      uint64_t v44 = FMIPItemLostModeMetadata.email.getter();
      uint64_t v45 = v56;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v62[1])(v48, v30);
    }
    char v55 = 0;
  }
  uint64_t v57 = v65;
  *(void *)a1 = v50;
  *(void *)(a1 + 8) = v57;
  uint64_t v58 = v63;
  *(void *)(a1 + 16) = v64;
  *(void *)(a1 + 24) = v58;
  *(void *)(a1 + 32) = v44;
  *(void *)(a1 + 40) = v45;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = v55 & 1;
  return result;
}

uint64_t sub_1002728AC(uint64_t a1, __int16 a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4 = a1;
  __int16 v5 = a2 & 0x1FF;
  return a3(&v4);
}

id sub_1002728F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPDevice();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  __int16 v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMLostModeTrackable();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + qword_1006B8240);
  sub_100109F60(v1 + qword_1006D1670, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = (uint64_t)&v8[*(int *)(sub_10005D034(&qword_1006AF350) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    char v11 = FMIPDevice.isConsideredAccessory.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    char v12 = v11 ^ 1;
    sub_100003F10(v10, (uint64_t *)&unk_1006AFE30);
  }
  else
  {
    sub_100109FC4((uint64_t)v8);
    char v12 = 0;
  }
  *(unsigned char *)(v9 + OBJC_IVAR____TtC6FindMy28FMLostModeSummaryContentView_shouldShowEmailUpdates) = v12 & 1;
  uint64_t v13 = *(char **)(v9 + OBJC_IVAR____TtC6FindMy28FMLostModeSummaryContentView_sendEmailUpdatesView);
  [v13 setHidden:(v12 & 1) == 0];
  uint64_t v14 = (void *)(v1 + qword_1006D1A80);
  [*(id *)&v13[OBJC_IVAR____TtC6FindMy27FMLostModeSummaryToggleView_toggle] setOn:*(unsigned __int8 *)(v1 + qword_1006D1A80 + 64) animated:0];
  uint64_t v15 = v14[3];
  uint64_t v16 = *(void **)(*(void *)(v9 + OBJC_IVAR____TtC6FindMy28FMLostModeSummaryContentView_phoneNumberView)
                 + OBJC_IVAR____TtC6FindMy25FMLostModeSummaryTextView_contentTextView);
  uint64_t v31 = v14[2];
  uint64_t v32 = OBJC_IVAR____TtC6FindMy28FMLostModeSummaryContentView_phoneNumberView;
  if (v15)
  {
    swift_bridgeObjectRetain();
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v17 = 0;
  }
  [v16 setText:v17, v31];

  sub_1002E55D0();
  uint64_t v18 = v14[5];
  uint64_t v19 = OBJC_IVAR____TtC6FindMy28FMLostModeSummaryContentView_emailView;
  uint64_t v20 = *(void **)(*(void *)(v9 + OBJC_IVAR____TtC6FindMy28FMLostModeSummaryContentView_emailView)
                 + OBJC_IVAR____TtC6FindMy25FMLostModeSummaryTextView_contentTextView);
  if (v18)
  {
    uint64_t v21 = v14[4];
    swift_bridgeObjectRetain();
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v20 setText:v22];

    sub_1002E55D0();
    if (v21 || v18 != 0xE000000000000000) {
      char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    else {
      char v23 = 1;
    }
  }
  else
  {
    [v20 setText:0];
    sub_1002E55D0();
    char v23 = 1;
  }
  uint64_t v24 = v32;
  if (v15 && (v31 || v15 != 0xE000000000000000))
  {
    char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
    BOOL v25 = 0;
    if ((v23 & 1) == 0) {
      BOOL v25 = v26;
    }
  }
  else
  {
    BOOL v25 = (v23 & 1) == 0;
  }
  uint64_t v27 = (unsigned char *)(v9 + OBJC_IVAR____TtC6FindMy28FMLostModeSummaryContentView_shouldShowEmail);
  *(unsigned char *)(v9 + OBJC_IVAR____TtC6FindMy28FMLostModeSummaryContentView_shouldShowEmail) = v25;
  [*(id *)(v9 + v24) setHidden:];
  [*(id *)(v9 + v19) setHidden:(*v27 & 1) == 0];
  uint64_t v28 = *(void **)(*(void *)(v9 + OBJC_IVAR____TtC6FindMy28FMLostModeSummaryContentView_messageView)
                 + OBJC_IVAR____TtC6FindMy25FMLostModeSummaryTextView_contentTextView);
  if (v14[1])
  {
    swift_bridgeObjectRetain();
    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v29 = 0;
  }
  [v28 setText:v29];

  return sub_1002E55D0();
}

void sub_100272D2C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3 = v2;
  if (a2 > 2u)
  {
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    uint64_t v9 = self;
    id v10 = [v9 mainBundle];
    v53._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
    v53._unint64_t object = (void *)0x800000010058F620;
    v11._uint64_t countAndFlagsBits = 0x5F4552554C494146;
    v11._unint64_t object = (void *)0xED0000454C544954;
    v12._uint64_t countAndFlagsBits = 0;
    v12._unint64_t object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v53);

    aBlock = 0;
    unint64_t v48 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v13 = [v9 mainBundle];
    v54._uint64_t countAndFlagsBits = 0xD000000000000021;
    v54._unint64_t object = (void *)0x8000000100582930;
    v14._uint64_t countAndFlagsBits = 0x5F4552554C494146;
    v14._unint64_t object = (void *)0xEF4547415353454DLL;
    v15._uint64_t countAndFlagsBits = 0;
    v15._unint64_t object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v54);

LABEL_16:
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v36 = [self alertControllerWithTitle:v34 message:v35 preferredStyle:1];

    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v37 = [self mainBundle];
    v57._uint64_t countAndFlagsBits = 0xD000000000000021;
    v57._unint64_t object = (void *)0x800000010057F840;
    v38._uint64_t countAndFlagsBits = 0x4F545455425F4B4FLL;
    v38._unint64_t object = (void *)0xEF454C5449545F4ELL;
    v39._uint64_t countAndFlagsBits = 0;
    v39._unint64_t object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v38, (Swift::String_optional)0, (NSBundle)v37, v39, v57);

    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v36;
    id v41 = v36;
    NSString v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    long long v51 = sub_1000BB004;
    uint64_t v52 = v40;
    aBlock = _NSConcreteStackBlock;
    unint64_t v48 = 1107296256;
    int v49 = sub_10000841C;
    uint64_t v50 = &unk_10062F9B0;
    uint64_t v43 = _Block_copy(&aBlock);
    swift_release();
    id v44 = [self actionWithTitle:v42 style:1 handler:v43];
    _Block_release(v43);

    [v41 addAction:v44];
    [v3 presentViewController:v41 animated:1 completion:0];

    return;
  }
  if (!a1) {
    goto LABEL_12;
  }
  aBlock = (void **)a1;
  sub_100276DC8(a1, a2);
  sub_10005D034((uint64_t *)&unk_1006AEEE0);
  sub_100006060(0, &qword_1006B7F88);
  if (!swift_dynamicCast()) {
    goto LABEL_12;
  }
  id v5 = [v46 domain];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  if (v6 == 0xD00000000000003BLL && v8 == 0x800000010058F5B0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {

      goto LABEL_12;
    }
  }
  id v17 = [v46 code];

  if (v17 != (id)1)
  {
LABEL_12:
    int v18 = a2;
    uint64_t v19 = self;
    id v20 = [v19 mainBundle];
    if (v18 == 1)
    {
      v21._uint64_t countAndFlagsBits = 0xD000000000000032;
      v55._unint64_t object = (void *)0x800000010057EF80;
      v21._unint64_t object = (void *)0x800000010058F640;
      v22.value._uint64_t countAndFlagsBits = 0xD000000000000013;
      v22.value._unint64_t object = (void *)0x800000010057EF60;
      v23._uint64_t countAndFlagsBits = 0;
      v23._unint64_t object = (void *)0xE000000000000000;
      v55._uint64_t countAndFlagsBits = 0xD000000000000018;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v55);

      id v24 = [v19 mainBundle];
      unint64_t v25 = 0xD000000000000034;
      unint64_t v45 = 0x800000010057EF80;
      char v26 = "ITEM_PERFORM_DISABLE_LOST_MODE_ACTION_FAILED_MESSAGE";
    }
    else
    {
      v27._uint64_t countAndFlagsBits = 0xD000000000000031;
      v56._unint64_t object = (void *)0x800000010057EF80;
      v27._unint64_t object = (void *)0x800000010058F6C0;
      v28.value._uint64_t countAndFlagsBits = 0xD000000000000013;
      v28.value._unint64_t object = (void *)0x800000010057EF60;
      v29._uint64_t countAndFlagsBits = 0;
      v29._unint64_t object = (void *)0xE000000000000000;
      v56._uint64_t countAndFlagsBits = 0xD000000000000018;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v20, v29, v56);

      id v24 = [v19 mainBundle];
      unint64_t v25 = 0xD000000000000033;
      unint64_t v45 = 0x800000010057EF80;
      char v26 = "ITEM_PERFORM_ENABLE_LOST_MODE_ACTION_FAILED_MESSAGE";
    }
    unint64_t v30 = (unint64_t)(v26 - 32) | 0x8000000000000000;
    v31.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v31.value._unint64_t object = (void *)0x800000010057EF60;
    v32._uint64_t countAndFlagsBits = 0;
    v32._unint64_t object = (void *)0xE000000000000000;
    unint64_t v33 = 0xD000000000000018;
    NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v25, v31, (NSBundle)v24, v32, *(Swift::String *)(&v45 - 1));

    goto LABEL_16;
  }
}

uint64_t sub_100273388(uint64_t a1)
{
  Swift::String_optional v28 = (char *)a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = type metadata accessor for FMIPItem();
  uint64_t v26 = *(void *)(v2 - 8);
  uint64_t v27 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FMIPAnalyticsActionType();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMIPDevice();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  Swift::String v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMLostModeTrackable();
  __chkstk_darwin(v13);
  Swift::String v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100109F60((uint64_t)v28, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    Swift::String_optional v28 = &v15[*(int *)(sub_10005D034(&qword_1006AF350) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for FMIPAnalyticsActionType.enableLostMode(_:), v5);
    sub_100273D6C((uint64_t)v12, (uint64_t)v8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v16 = *(_OWORD *)(v1 + qword_1006D1A80 + 48);
    long long v32 = *(_OWORD *)(v1 + qword_1006D1A80 + 32);
    long long v33 = v16;
    char v34 = *(unsigned char *)(v1 + qword_1006D1A80 + 64);
    long long v17 = *(_OWORD *)(v1 + qword_1006D1A80 + 16);
    long long v30 = *(_OWORD *)(v1 + qword_1006D1A80);
    long long v31 = v17;
    uint64_t v18 = *(void *)(*(void *)(v1 + qword_1006B8258) + 24);
    swift_retain();
    uint64_t v19 = sub_100274A10(1, (uint64_t)v12, (uint64_t)&v30, v18, v1);
    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_100003F10((uint64_t)v28, (uint64_t *)&unk_1006AFE30);
  }
  else
  {
    uint64_t v21 = v26;
    uint64_t v20 = v27;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v4, v15, v27);
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for FMIPAnalyticsActionType.enableLostMode(_:), v5);
    sub_100273DAC((uint64_t)v4, (uint64_t)v8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v22 = *(_OWORD *)(v1 + qword_1006D1A80 + 48);
    long long v32 = *(_OWORD *)(v1 + qword_1006D1A80 + 32);
    long long v33 = v22;
    char v34 = *(unsigned char *)(v1 + qword_1006D1A80 + 64);
    long long v23 = *(_OWORD *)(v1 + qword_1006D1A80 + 16);
    long long v30 = *(_OWORD *)(v1 + qword_1006D1A80);
    long long v31 = v23;
    uint64_t v24 = *(void *)(*(void *)(v1 + qword_1006B8258) + 24);
    swift_retain();
    uint64_t v19 = sub_100274850((uint64_t)v4, (uint64_t)&v30, v24);
    swift_release();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v20);
  }
  return v19;
}

uint64_t sub_1002737B0(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = type metadata accessor for FMIPItem();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&ObjectType - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FMIPDevice();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&ObjectType - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FMLostModeTrackable();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&ObjectType - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100109F60(a1, (uint64_t)v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = (uint64_t)&v14[*(int *)(sub_10005D034(&qword_1006AF350) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    uint64_t v16 = *(void *)(*(void *)(v2 + qword_1006B8258) + 24);
    swift_retain();
    uint64_t v17 = sub_100274A10(1, (uint64_t)v11, v21, v16, v2);
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_100003F10(v15, (uint64_t *)&unk_1006AFE30);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v14, v4);
    uint64_t v18 = *(void *)(*(void *)(v2 + qword_1006B8258) + 24);
    swift_retain();
    uint64_t v17 = sub_100274C74(1, (uint64_t)v7, v21, v18);
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v17;
}

uint64_t sub_100273A7C(uint64_t a1)
{
  uint64_t v2 = v1;
  v23[1] = swift_getObjectType();
  uint64_t v4 = type metadata accessor for FMIPItem();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FMIPDevice();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FMLostModeTrackable();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100109F60(a1, (uint64_t)v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = (uint64_t)&v14[*(int *)(sub_10005D034(&qword_1006AF350) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    long long v16 = *(_OWORD *)(v2 + qword_1006D1A80 + 48);
    void v24[2] = *(_OWORD *)(v2 + qword_1006D1A80 + 32);
    v24[3] = v16;
    char v25 = *(unsigned char *)(v2 + qword_1006D1A80 + 64);
    long long v17 = *(_OWORD *)(v2 + qword_1006D1A80 + 16);
    v24[0] = *(_OWORD *)(v2 + qword_1006D1A80);
    v24[1] = v17;
    uint64_t v18 = *(void *)(*(void *)(v2 + qword_1006B8258) + 24);
    swift_retain();
    uint64_t v19 = sub_100274A10(0, (uint64_t)v11, (uint64_t)v24, v18, v2);
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_100003F10(v15, (uint64_t *)&unk_1006AFE30);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v14, v4);
    uint64_t v20 = *(void *)(*(void *)(v2 + qword_1006B8258) + 24);
    swift_retain();
    uint64_t v19 = sub_100274E70((uint64_t)v7, v21, v20);
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v19;
}

uint64_t sub_100273D6C(uint64_t a1, uint64_t a2)
{
  return sub_100273DEC(a1, a2, (uint64_t (*)(void))&type metadata accessor for FMIPDevice, (uint64_t (*)(uint64_t))&FMIPDevice.isOwned.getter, (void (*)(char *))&FMIPAnalyticsProductType.init(device:));
}

uint64_t sub_100273DAC(uint64_t a1, uint64_t a2)
{
  return sub_100273DEC(a1, a2, (uint64_t (*)(void))&type metadata accessor for FMIPItem, (uint64_t (*)(uint64_t))&FMIPItem.isOwner.getter, (void (*)(char *))&FMIPAnalyticsProductType.init(item:));
}

uint64_t sub_100273DEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t), void (*a5)(char *))
{
  long long v32 = a5;
  uint64_t v28 = a1;
  Swift::String v29 = a4;
  uint64_t v26 = a2;
  uint64_t v5 = a3(0);
  uint64_t v30 = *(void *)(v5 - 8);
  uint64_t v31 = v5;
  __chkstk_darwin(v5);
  uint64_t v27 = (char *)&v25 - v6;
  uint64_t v7 = type metadata accessor for FMIPAnalyticsProductType();
  __chkstk_darwin(v7 - 8);
  uint64_t v25 = type metadata accessor for FMIPAnalyticsOwnerContext();
  uint64_t v8 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FMIPAnalyticsActionType();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FMIPActionEvent();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v26, v11);
  uint64_t v19 = swift_retain();
  uint64_t v20 = v28;
  char v21 = v29(v19);
  long long v22 = (unsigned int *)&enum case for FMIPAnalyticsOwnerContext.owner(_:);
  if ((v21 & 1) == 0) {
    long long v22 = (unsigned int *)&enum case for FMIPAnalyticsOwnerContext.shared(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *v22, v25);
  long long v23 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v27, v20, v31);
  v32(v23);
  FMIPActionEvent.init(type:ownerContext:productType:)();
  FMIPManager.enqueue(actionEvent:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t sub_100274150(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  long long v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  char v8 = *(unsigned char *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  char v10 = *(unsigned char *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_100275BA8((uint64_t)v7, (uint64_t)v9) & 1;
}

BOOL sub_1002741AC(uint64_t a1, unsigned __int8 a2)
{
  if (a2 > 2u || a1 == 0) {
    return 0;
  }
  sub_100276DC8(a1, a2);
  sub_10005D034((uint64_t *)&unk_1006AEEE0);
  sub_100006060(0, &qword_1006B7F88);
  char v4 = swift_dynamicCast();
  if (v4)
  {
    id v5 = [v11 domain];
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    if (v6 == 0xD00000000000003BLL && v8 == 0x800000010058F5B0)
    {
      swift_bridgeObjectRelease();
LABEL_12:
      id v10 = [v11 code];

      return v10 == (id)1;
    }
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_12;
    }
  }
  return 0;
}

void sub_100274304(char *a1, uint64_t a2, void *a3)
{
  *(void *)&a1[qword_1006B7CB8] = 0;
  *(void *)&a1[qword_1006B7CC0] = 0;
  id v4 = a3;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100274388(void *a1)
{
  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for FMLostModeSummaryViewController();
  id v1 = v2.receiver;
  [super viewDidLoad];
  sub_1002728F0();
}

id sub_1002743E4(void *a1)
{
  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for FMLostModeSummaryViewController();
  return [super viewDidLayoutSubviews];
}

uint64_t sub_100274428@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v3 = sub_10005D034(&qword_1006B7F78);
  uint64_t v18 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10005D034(&qword_1006B1EE8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10005D034(&qword_1006B1EF0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)a1;
  unsigned __int8 v15 = *(unsigned char *)(a1 + 8);
  if (sub_1002741AC(v14, v15))
  {
    Just.init(_:)();
    sub_10010A210();
    Just.setFailureType<A>(to:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1000450A0(&qword_1006B1F00, &qword_1006B1EF0);
    uint64_t v16 = Publisher.eraseToAnyPublisher()();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    uint64_t v20 = v14;
    unsigned __int8 v21 = v15;
    sub_100276DC8(v14, v15);
    sub_10010A210();
    Fail.init(error:)();
    sub_1000450A0(&qword_1006B7F80, &qword_1006B7F78);
    uint64_t v16 = Publisher.eraseToAnyPublisher()();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v5, v3);
  }
  *uint64_t v19 = v16;
  return result;
}

void sub_100274740(uint64_t a1@<X8>)
{
  *(void *)a1 = 1;
  *(unsigned char *)(a1 + 8) = 3;
}

void sub_100274754(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)a1;
  int v4 = *(unsigned __int8 *)(a1 + 8);
  sub_1003F0454(a1);
  if (v4 == 255)
  {
    id v5 = [a2 navigationController];
    if (v5)
    {
      id v6 = v5;
      [v5 dismissViewControllerAnimated:1 completion:0];
    }
  }
  else
  {
    sub_100276DC8(v3, v4);
    sub_100272D2C(v3, v4);
    sub_100276ED0(v3, v4);
  }
}

uint64_t sub_100274838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100274A10(1, a1, a2, a3, a4);
}

uint64_t sub_100274850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for FMIPItem();
  __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t))(v7 + 16))((char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  type metadata accessor for FMIPLostModeItemAction();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = FMIPLostModeItemAction.init(item:message:phoneNumber:email:trackingEnabled:emailUpdatesEnabled:)();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  *(void *)(v9 + 24) = v8;
  *(unsigned char *)(v9 + 32) = 1;
  *(void *)(v9 + 40) = v11[1];
  sub_10005D034(&qword_1006B1EE0);
  swift_allocObject();
  swift_retain();
  return Future.init(_:)();
}

uint64_t sub_100274A10(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v27 = a4;
  uint64_t v9 = type metadata accessor for FMIPDevice();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [objc_allocWithZone((Class)AKAppleIDAuthenticationInAppContext) init];
  [v13 setPresentingViewController:a5];
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  int v25 = a1;
  if (a1)
  {
    uint64_t v14 = *(void *)(a3 + 48);
    uint64_t v23 = *(void *)(a3 + 32);
    uint64_t v24 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v23 = 0;
    uint64_t v24 = 0;
  }
  type metadata accessor for FMIPLostModeAction();
  swift_allocObject();
  char v15 = v25 & 1;
  uint64_t v16 = FMIPLostModeAction.init(device:message:phoneNumber:email:passcode:trackingEnabled:emailUpdatesEnabled:)();
  swift_retain();
  id v17 = v13;
  dispatch thunk of FMIPDeviceAction.authenticationContext.setter();
  swift_release();
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v26;
  *(void *)(v18 + 16) = v27;
  *(void *)(v18 + 24) = v16;
  *(unsigned char *)(v18 + 32) = v15;
  *(void *)(v18 + 40) = v19;
  sub_10005D034(&qword_1006B1EE0);
  swift_allocObject();
  swift_retain();
  uint64_t v20 = Future.init(_:)();

  return v20;
}

uint64_t sub_100274C74(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for FMIPItem();
  __chkstk_darwin(v7);
  (*(void (**)(char *, uint64_t))(v9 + 16))((char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  if (a1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  type metadata accessor for FMIPLostModeItemAction();
  swift_allocObject();
  char v10 = a1 & 1;
  uint64_t v11 = FMIPLostModeItemAction.init(item:message:phoneNumber:email:trackingEnabled:emailUpdatesEnabled:)();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a4;
  *(void *)(v12 + 24) = v11;
  *(unsigned char *)(v12 + 32) = v10;
  *(void *)(v12 + 40) = v14[1];
  sub_10005D034(&qword_1006B1EE0);
  swift_allocObject();
  swift_retain();
  return Future.init(_:)();
}

uint64_t sub_100274E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100274A10(0, a1, a2, a3, a4);
}

uint64_t sub_100274E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for FMIPItem();
  __chkstk_darwin(v7);
  (*(void (**)(char *, uint64_t))(v9 + 16))((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  type metadata accessor for FMIPLostModeItemAction();
  swift_allocObject();
  uint64_t v10 = FMIPLostModeItemAction.init(item:message:phoneNumber:email:trackingEnabled:emailUpdatesEnabled:)();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  *(void *)(v11 + 24) = v10;
  *(unsigned char *)(v11 + 32) = 0;
  *(void *)(v11 + 40) = v4;
  sub_10005D034(&qword_1006B1EE0);
  swift_allocObject();
  swift_retain();
  return Future.init(_:)();
}

uint64_t sub_100274FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a5;
  *(void *)(v12 + 24) = sub_100276E3C;
  *(void *)(v12 + 32) = v11;
  *(void *)(v12 + 40) = a6;
  swift_retain();
  sub_1000C91DC(a4, (uint64_t)sub_100276F3C, v12);

  return swift_release();
}

uint64_t sub_1002750C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(uint64_t, uint64_t), uint64_t a6)
{
  if (a3) {
    unsigned __int8 v10 = (a4 & 1) == 0;
  }
  else {
    unsigned __int8 v10 = -1;
  }
  swift_errorRetain();
  sub_100275708(a5, a6, a1, a3, v10);

  return swift_errorRelease();
}

uint64_t sub_100275140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a5;
  *(void *)(v12 + 24) = sub_100276E3C;
  *(void *)(v12 + 32) = v11;
  *(void *)(v12 + 40) = a6;
  swift_retain();
  sub_1000C9A3C(a4, (uint64_t)sub_100276E78, v12);

  return swift_release();
}

uint64_t sub_10027521C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void (*a6)(uint64_t, uint64_t), uint64_t a7)
{
  if (a3) {
    unsigned __int8 v11 = (a5 & 1) == 0;
  }
  else {
    unsigned __int8 v11 = -1;
  }
  swift_errorRetain();
  sub_100275958(a6, a7, a1, a3, v11);

  return swift_errorRelease();
}

uint64_t sub_10027529C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

id sub_100275314()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMLostModeSummaryViewController();
  [super dealloc];
}

uint64_t sub_10027534C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t type metadata accessor for FMLostModeSummaryViewController()
{
  uint64_t result = qword_1006B7CF0;
  if (!qword_1006B7CF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100275414()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100275470()
{
  return type metadata accessor for FMLostModeSummaryViewController();
}

uint64_t initializeWithCopy for FMLostModeContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMLostModeContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

__n128 initializeWithTake for FMLostModeContext(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for FMLostModeContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMLostModeContext(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMLostModeContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMLostModeContext()
{
  return &type metadata for FMLostModeContext;
}

uint64_t sub_100275708(void (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  int v8 = ~a5;
  uint64_t v9 = type metadata accessor for FMIPItemActionStatus();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v20[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[3] = v11;
  unsigned char v21[4] = (uint64_t)&off_10062F730;
  sub_100042804(v21);
  (*(void (**)(void))(v10 + 16))();
  if (!v8)
  {
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v13, enum case for FMIPItemActionStatus.pending(_:), v9);
    sub_100276E88((unint64_t *)&qword_1006B5DE8, (void (*)(uint64_t))&type metadata accessor for FMIPItemActionStatus);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v14 = v20[0];
    uint64_t v15 = v20[5];
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    sub_10005FAA4((uint64_t)v21, (uint64_t)v20);
    if (v14 == v15)
    {
      sub_10002CEFC((uint64_t)v20);
    }
    else
    {
      sub_10002CEB8(v20, v20[3]);
      char v16 = FMIPItemActionStatus.isActionSuccessful.getter();
      sub_10002CEFC((uint64_t)v20);
      if ((v16 & 1) == 0)
      {
        uint64_t v17 = 259;
        goto LABEL_8;
      }
    }
    uint64_t v17 = 0;
LABEL_8:
    a1(0, v17);
    return sub_10002CEFC((uint64_t)v21);
  }
  sub_100276DC8(a4, a5);
  a1(a4, a5 | 0x100u);
  sub_100276ED0(a4, a5);
  return sub_10002CEFC((uint64_t)v21);
}

uint64_t sub_100275958(void (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  int v8 = ~a5;
  uint64_t v9 = type metadata accessor for FMIPActionStatus();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v20[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[3] = v11;
  unsigned char v21[4] = (uint64_t)&off_10062F748;
  sub_100042804(v21);
  (*(void (**)(void))(v10 + 16))();
  if (!v8)
  {
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v13, enum case for FMIPActionStatus.pending(_:), v9);
    sub_100276E88(&qword_1006C03C0, (void (*)(uint64_t))&type metadata accessor for FMIPActionStatus);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v14 = v20[0];
    uint64_t v15 = v20[5];
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    sub_10005FAA4((uint64_t)v21, (uint64_t)v20);
    if (v14 == v15)
    {
      sub_10002CEFC((uint64_t)v20);
    }
    else
    {
      sub_10002CEB8(v20, v20[3]);
      char v16 = FMIPActionStatus.isActionSuccessful.getter();
      sub_10002CEFC((uint64_t)v20);
      if ((v16 & 1) == 0)
      {
        uint64_t v17 = 259;
        goto LABEL_8;
      }
    }
    uint64_t v17 = 0;
LABEL_8:
    a1(0, v17);
    return sub_10002CEFC((uint64_t)v21);
  }
  sub_100276DC8(a4, a5);
  a1(a4, a5 | 0x100u);
  sub_100276ED0(a4, a5);
  return sub_10002CEFC((uint64_t)v21);
}

uint64_t sub_100275BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (!v4)
  {
    if (v5) {
      goto LABEL_31;
    }
    goto LABEL_10;
  }
  if (!v5) {
    goto LABEL_31;
  }
  BOOL v6 = *(void *)a1 == *(void *)a2 && v4 == v5;
  if (v6 || (char v7 = _stringCompareWithSmolCheck(_:_:expecting:)(), v8 = 0, (v7 & 1) != 0))
  {
LABEL_10:
    uint64_t v9 = *(void *)(a1 + 24);
    uint64_t v10 = *(void *)(a2 + 24);
    if (v9)
    {
      if (!v10) {
        goto LABEL_31;
      }
      if (*(void *)(a1 + 16) != *(void *)(a2 + 16) || v9 != v10)
      {
        char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
        char v8 = 0;
        if ((v11 & 1) == 0) {
          return v8 & 1;
        }
      }
    }
    else if (v10)
    {
      goto LABEL_31;
    }
    uint64_t v12 = *(void *)(a1 + 40);
    uint64_t v13 = *(void *)(a2 + 40);
    if (v12)
    {
      if (!v13) {
        goto LABEL_31;
      }
      if (*(void *)(a1 + 32) != *(void *)(a2 + 32) || v12 != v13)
      {
        char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
        char v8 = 0;
        if ((v14 & 1) == 0) {
          return v8 & 1;
        }
      }
    }
    else if (v13)
    {
      goto LABEL_31;
    }
    uint64_t v15 = *(void *)(a1 + 56);
    uint64_t v16 = *(void *)(a2 + 56);
    if (v15)
    {
      if (v16)
      {
        if (*(void *)(a1 + 48) != *(void *)(a2 + 48) || v15 != v16)
        {
          char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
          char v8 = 0;
          if ((v17 & 1) == 0) {
            return v8 & 1;
          }
        }
LABEL_33:
        char v8 = ((*(unsigned char *)(a1 + 64) & 1) == 0) ^ *(unsigned char *)(a2 + 64);
        return v8 & 1;
      }
    }
    else if (!v16)
    {
      goto LABEL_33;
    }
LABEL_31:
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_100275CE8(void *a1, void *a2, char a3)
{
  id v37 = a1;
  uint64_t v5 = sub_10005D034(&qword_1006B5A10);
  __chkstk_darwin(v5 - 8);
  Swift::String v38 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  __chkstk_darwin(v7);
  char v34 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10005D034(&qword_1006B7F90);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10005D034(&qword_1006B7F48);
  uint64_t v39 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  long long v33 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10005D034(&qword_1006B7F50);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v40 = v14;
  uint64_t v41 = v15;
  uint64_t v16 = __chkstk_darwin(v14);
  NSString v35 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100437D88(v16);
  id v44 = (id)sub_100273388((uint64_t)a2 + qword_1006D1670);
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a3;
  *(void *)(v18 + 24) = a2;
  id v19 = a2;
  static Subscribers.Demand.unlimited.getter();
  sub_10005D034(&qword_1006B1EE0);
  sub_10005D034(&qword_1006B7F58);
  sub_1000450A0(&qword_1006B1F08, &qword_1006B1EE0);
  sub_1000450A0(&qword_1006B7F60, &qword_1006B7F58);
  Publisher.flatMap<A, B>(maxPublishers:_:)();
  swift_release();
  swift_release();
  sub_1000450A0(&qword_1006B7F98, &qword_1006B7F90);
  uint64_t v20 = (void *)Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  id v44 = v20;
  unsigned __int8 v21 = v33;
  Publisher.catch<A>(_:)();
  swift_release();
  uint64_t v22 = v34;
  NSRunLoop.SchedulerTimeType.Stride.init(integerLiteral:)();
  id v44 = [self mainRunLoop];
  uint64_t v23 = type metadata accessor for NSRunLoop.SchedulerOptions();
  uint64_t v24 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v38, 1, 1, v23);
  sub_100006060(0, (unint64_t *)&qword_1006C1DE0);
  sub_1000450A0(&qword_1006B7F68, &qword_1006B7F48);
  sub_100150450();
  int v25 = v35;
  uint64_t v26 = v36;
  Publisher.timeout<A>(_:scheduler:options:customError:)();
  sub_100003F10(v24, &qword_1006B5A10);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v22, v43);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v21, v26);
  uint64_t v27 = swift_allocObject();
  uint64_t v28 = v37;
  *(void *)(v27 + 16) = v37;
  sub_1000450A0(&qword_1006B7F70, &qword_1006B7F50);
  Swift::String v29 = v28;
  uint64_t v30 = v40;
  uint64_t v31 = Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v25, v30);
  *(void *)&v29[qword_1006B7CB8] = v31;
  return swift_release();
}

uint64_t sub_100276358(void *a1, uint64_t a2, uint64_t a3)
{
  Swift::String v29 = a1;
  uint64_t v5 = sub_10005D034(&qword_1006B5A10);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  uint64_t v8 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10005D034(&qword_1006B7F48);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10005D034(&qword_1006B7F50);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  uint64_t v32 = v16;
  uint64_t v17 = __chkstk_darwin(v15);
  id v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100437D88(v17);
  id v33 = (id)sub_1002737B0(a2 + qword_1006D1670, a3);
  sub_10005D034(&qword_1006B1EE0);
  sub_1000450A0(&qword_1006B1F08, &qword_1006B1EE0);
  uint64_t v20 = (void *)Publisher.eraseToAnyPublisher()();
  swift_release();
  id v33 = v20;
  sub_10005D034(&qword_1006B7F58);
  sub_1000450A0(&qword_1006B7F60, &qword_1006B7F58);
  Publisher.catch<A>(_:)();
  swift_release();
  NSRunLoop.SchedulerTimeType.Stride.init(integerLiteral:)();
  id v33 = [self mainRunLoop];
  uint64_t v21 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v7, 1, 1, v21);
  sub_100006060(0, (unint64_t *)&qword_1006C1DE0);
  sub_1000450A0(&qword_1006B7F68, &qword_1006B7F48);
  sub_100150450();
  Publisher.timeout<A>(_:scheduler:options:customError:)();
  sub_100003F10((uint64_t)v7, &qword_1006B5A10);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v30);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v29;
  *(void *)(v22 + 16) = v29;
  sub_1000450A0(&qword_1006B7F70, &qword_1006B7F50);
  uint64_t v24 = v23;
  uint64_t v25 = v31;
  uint64_t v26 = Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v25);
  *(void *)&v24[qword_1006B7CB8] = v26;
  return swift_release();
}

uint64_t sub_100276874(void *a1, uint64_t a2)
{
  uint64_t v27 = a1;
  uint64_t v3 = sub_10005D034(&qword_1006B5A10);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  uint64_t v6 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10005D034(&qword_1006B7F48);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10005D034(&qword_1006B7F50);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v29 = v13;
  uint64_t v30 = v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100437D88(v15);
  id v31 = (id)sub_100273A7C(a2 + qword_1006D1670);
  sub_10005D034(&qword_1006B1EE0);
  sub_1000450A0(&qword_1006B1F08, &qword_1006B1EE0);
  uint64_t v18 = (void *)Publisher.eraseToAnyPublisher()();
  swift_release();
  id v31 = v18;
  sub_10005D034(&qword_1006B7F58);
  sub_1000450A0(&qword_1006B7F60, &qword_1006B7F58);
  Publisher.catch<A>(_:)();
  swift_release();
  NSRunLoop.SchedulerTimeType.Stride.init(integerLiteral:)();
  id v31 = [self mainRunLoop];
  uint64_t v19 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v5, 1, 1, v19);
  sub_100006060(0, (unint64_t *)&qword_1006C1DE0);
  sub_1000450A0(&qword_1006B7F68, &qword_1006B7F48);
  sub_100150450();
  Publisher.timeout<A>(_:scheduler:options:customError:)();
  sub_100003F10((uint64_t)v5, &qword_1006B5A10);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v28);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v27;
  *(void *)(v20 + 16) = v27;
  sub_1000450A0(&qword_1006B7F70, &qword_1006B7F50);
  uint64_t v22 = v21;
  uint64_t v23 = v29;
  uint64_t v24 = Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v23);
  *(void *)&v22[qword_1006B7CB8] = v24;
  return swift_release();
}

uint64_t sub_100276D88()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100276DC0(uint64_t a1)
{
  sub_100274754(a1, *(void **)(v1 + 16));
}

uint64_t sub_100276DC8(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 2u) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t sub_100276DDC(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 2u) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100276DF4(uint64_t a1, uint64_t a2)
{
  return sub_100275140(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_100276E04()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100276E40()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100276E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10027521C(a1, a2, a3, a4, *(unsigned char *)(v4 + 16), *(void (**)(uint64_t, uint64_t))(v4 + 24), *(void *)(v4 + 32));
}

uint64_t sub_100276E88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100276ED0(uint64_t a1, unsigned __int8 a2)
{
  if (a2 != 0xFF) {
    return sub_100276DDC(a1, a2);
  }
  return a1;
}

uint64_t sub_100276EE8(uint64_t a1, uint64_t a2)
{
  return sub_100274FE4(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_100276EF8(uint64_t a1, __int16 a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  __int16 v6 = a2 & 0x1FF;
  return v3(&v5);
}

uint64_t sub_100276F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002750C0(a1, a2, a3, *(unsigned char *)(v3 + 16), *(void (**)(uint64_t, uint64_t))(v3 + 24), *(void *)(v3 + 32));
}

uint64_t sub_100276F54()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100276F94()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100276FCC@<X0>(uint64_t *a1@<X8>)
{
  return sub_100108FF0(*(unsigned char *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t initializeBufferWithCopyOfBuffer for FMLostModeSummaryViewController.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_100276DC8(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for FMLostModeSummaryViewController.Error(uint64_t a1)
{
  return sub_100276DDC(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t assignWithCopy for FMLostModeSummaryViewController.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_100276DC8(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_100276DDC(v5, v6);
  return a1;
}

uint64_t initializeWithTake for FMLostModeSummaryViewController.Error(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for FMLostModeSummaryViewController.Error(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_100276DDC(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMLostModeSummaryViewController.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMLostModeSummaryViewController.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100277164(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_10027717C(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FMLostModeSummaryViewController.Error()
{
  return &type metadata for FMLostModeSummaryViewController.Error;
}

void sub_1002771C4()
{
  qword_1006D1A88 = 0xC079000000000000;
}

void sub_1002771D4(void *a1)
{
  unsigned int v3 = [a1 viewControllerForKey:UITransitionContextToViewControllerKey];
  if (!v3) {
    goto LABEL_16;
  }
  char v34 = v3;
  int v4 = [a1 viewForKey:UITransitionContextToViewKey];
  if (!v4)
  {

LABEL_16:
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_1000606BC(v21, (uint64_t)qword_1006D1E98);
    char v34 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v22, "FMCardPresentationTransition: Invalid presented view controller", v23, 2u);
      swift_slowDealloc();
    }
    goto LABEL_26;
  }
  unsigned __int8 v5 = v4;
  id v6 = [a1 viewControllerForKey:UITransitionContextFromViewControllerKey];
  if (!v6)
  {
LABEL_21:
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_1000606BC(v24, (uint64_t)qword_1006D1E98);
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "FMCardPresentationTransition: Invalid presenting view controller", v27, 2u);
      swift_slowDealloc();
    }

    goto LABEL_26;
  }
  uint64_t v7 = v6;
  swift_getObjectType();
  uint64_t v8 = swift_conformsToProtocol2();
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v8) {
    uint64_t v10 = (uint64_t)v7;
  }
  else {
    uint64_t v10 = 0;
  }
  if (!v10
    || (id v11 = [a1 viewControllerForKey:UITransitionContextFromViewControllerKey]) == 0
    || (uint64_t v12 = v11, v13 = [v11 view], v12, !v13))
  {

    goto LABEL_21;
  }
  sub_10038A578((uint64_t)a1, v5);
  [v13 bounds];
  CGRectGetWidth(v36);
  [v13 bounds];
  CGRectGetHeight(v37);
  [v13 frame];
  double v15 = v14;
  [v13 frame];
  [v5 setFrame:v15];
  id v16 = [a1 containerView];
  [v16 addSubview:v5];

  [v5 layoutIfNeeded];
  id v17 = [v13 window];
  if (v17)
  {
    uint64_t v18 = v17;
    [v17 bounds];
    double v20 = v19;
  }
  else
  {
    double v20 = 0.0;
  }
  if (qword_1006AE228 != -1) {
    swift_once();
  }
  if (qword_1006D20D0 == 1)
  {
    if (qword_1006AE0B0 != -1) {
      swift_once();
    }
    double v29 = v20 + fabs(*(double *)&qword_1006D1A88);
  }
  else
  {
    if (qword_1006AE0B0 != -1) {
      swift_once();
    }
    double v29 = *(double *)&qword_1006D1A88;
  }
  [v13 frame];
  [v5 setFrame:v29];
  double v30 = *(double *)(v1 + OBJC_IVAR____TtC6FindMy16FMCardTransition_duration);
  id v31 = [a1 viewControllerForKey:UITransitionContextFromViewControllerKey];
  uint64_t v32 = v31;
  if (v30 == 0.0)
  {
    if (v31)
    {
      [v31 viewWillDisappear:0];
    }
    sub_100277E64(v10, v9, v13, v34);
    [a1 completeTransition:1];

LABEL_26:
    uint64_t v28 = v34;
    goto LABEL_27;
  }
  if (v31)
  {
    [v31 viewWillDisappear:1];
  }
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = a1;
  swift_unknownObjectRetain();
  sub_1002777F0(v10, v9, v13, v34, (uint64_t)sub_1001A2FA8, v33);
  swift_release();

  uint64_t v28 = v5;
LABEL_27:
}

void sub_1002777F0(uint64_t a1, uint64_t a2, id a3, void *a4, uint64_t a5, uint64_t a6)
{
  [a3 bounds];
  CGFloat Width = CGRectGetWidth(v32);
  [a3 bounds];
  CGFloat Height = CGRectGetHeight(v33);
  double v14 = self;
  double v15 = *(double *)&v6[OBJC_IVAR____TtC6FindMy16FMCardTransition_duration];
  double v16 = *(double *)&v6[OBJC_IVAR____TtC6FindMy16FMCardTransition_delay];
  id v17 = (CGFloat *)swift_allocObject();
  *((void *)v17 + 2) = v6;
  *((void *)v17 + 3) = a1;
  *((void *)v17 + 4) = a2;
  *((void *)v17 + 5) = a4;
  *((void *)v17 + 6) = a3;
  v17[7] = Width;
  v17[8] = Height;
  v17[9] = 0.2;
  double v30 = sub_100278014;
  id v31 = v17;
  aBlock = _NSConcreteStackBlock;
  uint64_t v27 = 1107296256;
  uint64_t v28 = sub_10003C410;
  double v29 = &unk_10062FB08;
  uint64_t v18 = _Block_copy(&aBlock);
  double v19 = v6;
  swift_unknownObjectRetain();
  id v20 = a4;
  id v21 = a3;
  swift_release();
  os_log_type_t v22 = (CGFloat *)swift_allocObject();
  *((void *)v22 + 2) = v21;
  *((void *)v22 + 3) = a5;
  *((void *)v22 + 4) = a6;
  double v30 = sub_10027806C;
  id v31 = v22;
  aBlock = _NSConcreteStackBlock;
  uint64_t v27 = 1107296256;
  uint64_t v28 = sub_1002F8BC0;
  double v29 = &unk_10062FB58;
  uint64_t v23 = _Block_copy(&aBlock);
  id v24 = v21;
  swift_retain();
  swift_release();
  [v14 animateKeyframesWithDuration:0 delay:v18 options:v23 animations:v15 completion:v16];
  _Block_release(v23);
  _Block_release(v18);
}

void sub_100277A34(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, double a6, double a7, double a8)
{
  double v16 = self;
  uint64_t v17 = OBJC_IVAR____TtC6FindMy16FMCardTransition_duration;
  double v18 = *(double *)(a1 + OBJC_IVAR____TtC6FindMy16FMCardTransition_duration) / 1.5;
  double v19 = (void *)swift_allocObject();
  _OWORD v19[2] = a2;
  v19[3] = a3;
  long long v19[4] = a4;
  NSString v35 = sub_1002780E8;
  CGRect v36 = v19;
  id v31 = _NSConcreteStackBlock;
  uint64_t v32 = 1107296256;
  CGRect v33 = sub_10003C410;
  char v34 = &unk_10062FBA8;
  id v20 = _Block_copy(&v31);
  swift_unknownObjectRetain();
  id v21 = a4;
  swift_release();
  [v16 addKeyframeWithRelativeStartTime:v20 relativeDuration:0.0 animations:v18];
  _Block_release(v20);
  double v22 = *(double *)(a1 + v17);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v21;
  *(void *)(v23 + 24) = a5;
  *(double *)(v23 + 32) = a6;
  *(double *)(v23 + 40) = a7;
  NSString v35 = sub_100278188;
  CGRect v36 = (void *)v23;
  id v31 = _NSConcreteStackBlock;
  uint64_t v32 = 1107296256;
  CGRect v33 = sub_10003C410;
  char v34 = &unk_10062FBF8;
  id v24 = _Block_copy(&v31);
  id v25 = v21;
  id v26 = a5;
  swift_release();
  [v16 addKeyframeWithRelativeStartTime:v24 relativeDuration:0.0 animations:v22];
  _Block_release(v24);
  double v27 = *(double *)(a1 + v17);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v26;
  NSString v35 = sub_1002781CC;
  CGRect v36 = (void *)v28;
  id v31 = _NSConcreteStackBlock;
  uint64_t v32 = 1107296256;
  CGRect v33 = sub_10003C410;
  char v34 = &unk_10062FC48;
  double v29 = _Block_copy(&v31);
  id v30 = v26;
  swift_release();
  [v16 addKeyframeWithRelativeStartTime:v29 relativeDuration:v27 animations:a8];
  _Block_release(v29);
}

void sub_100277CE4(void *a1, void *a2)
{
  id v5 = [a1 view];
  if (v5)
  {
    [a2 frame];
    double v4 = v3;
    [a2 frame];
    [v5 setFrame:v4];
  }
  else
  {
    __break(1u);
  }
}

id sub_100277DD4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMCardPresentedRegularTransition();
  return [super dealloc];
}

uint64_t type metadata accessor for FMCardPresentedRegularTransition()
{
  return self;
}

uint64_t sub_100277E2C()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100277E64(uint64_t a1, uint64_t a2, id a3, void *a4)
{
  [a3 bounds];
  CGRectGetWidth(v14);
  [a3 bounds];
  CGRectGetHeight(v15);
  id v12 = [a4 view];
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t))(a2 + 16))(a1, a2, a4, ObjectType, a2);
  if (v12)
  {
    id v9 = v12;
    [a3 frame];
    double v11 = v10;
    [a3 frame];
    [v9 setFrame:v11];
  }
  [a3 setAlpha:0.0];
  [a3 setHidden:1];
}

uint64_t sub_100277FC4()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

void sub_100278014()
{
  sub_100277A34(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(double *)(v0 + 56), *(double *)(v0 + 64), *(double *)(v0 + 72));
}

uint64_t sub_10027802C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10027806C()
{
  return (*(uint64_t (**)(id))(v0 + 24))([*(id *)(v0 + 16) setHidden:1]);
}

uint64_t sub_1002780A8()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002780E8()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v2, v3, ObjectType, v2);
}

uint64_t sub_100278148()
{
  return _swift_deallocObject(v0, 48, 7);
}

void sub_100278188()
{
  sub_100277CE4(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100278194()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1002781CC()
{
  return [*(id *)(v0 + 16) setAlpha:0.0];
}

id sub_1002781F0()
{
  id v1 = [self defaultCenter];
  id v2 = v0;
  NSString v3 = String._bridgeToObjectiveC()();
  [v1 removeObserver:v2 name:v3 object:0];

  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for FMAccessoryDiscoveryCoordinator(0);
  return [super dealloc];
}

uint64_t sub_100278464()
{
  return type metadata accessor for FMAccessoryDiscoveryCoordinator(0);
}

uint64_t type metadata accessor for FMAccessoryDiscoveryCoordinator(uint64_t a1)
{
  return sub_1000201D0(a1, (uint64_t *)&unk_1006B8048);
}

uint64_t sub_10027848C(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = a2;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v20 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  objc_super v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMIPAccessoryError();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  sub_10005EC68();
  id v12 = (void *)static OS_dispatch_queue.main.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = sub_10027DCA4;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_10062FD30;
  CGRect v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10005FE54();
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_10005ECA8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v8, v19);
}

uint64_t sub_1002787D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for FMAccessoryDiscoveryCoordinator.Event(0);
  __chkstk_darwin(v3);
  objc_super v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v7 = (void *)result;
    uint64_t v8 = type metadata accessor for FMIPAccessoryError();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v5, a2, v8);
    swift_storeEnumTagMultiPayload();
    sub_1002792E0(v5);

    return sub_10027D21C((uint64_t)v5, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
  }
  return result;
}

uint64_t sub_1002789A8(uint64_t a1, uint64_t a2)
{
  uint64_t v68 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v69 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v73 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v72 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10005D034(&qword_1006B81A8);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v64 = (uint64_t)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v12 = (char *)&v62 - v11;
  uint64_t v66 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v65 = *(void *)(v66 - 8);
  uint64_t v13 = __chkstk_darwin(v66);
  uint64_t v63 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  double v16 = (char *)&v62 - v15;
  uint64_t v17 = sub_10005D034(&qword_1006B81B0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  double v22 = (char *)&v62 - v21;
  uint64_t v67 = type metadata accessor for FMAccessoryDiscoveryCoordinator.Event(0);
  uint64_t v70 = *(void *)(v67 - 8);
  uint64_t v23 = *(void *)(v70 + 64);
  uint64_t v24 = __chkstk_darwin(v67);
  uint64_t v74 = (uint64_t)&v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  id v26 = (char *)&v62 - v25;
  uint64_t v71 = a2;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v28 = (void *)Strong;
    uint64_t v62 = v6;
    uint64_t v29 = v4;
    uint64_t v30 = v3;
    uint64_t v31 = Strong + OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_state;
    swift_beginAccess();
    sub_10027D91C(v31, (uint64_t)v22, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);

    uint64_t v32 = type metadata accessor for FMAccessoryDiscoveryCoordinator.State(0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v22, 0, 1, v32);
    sub_10027D984((uint64_t)v22, (uint64_t)v20);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 5)
    {
      uint64_t v42 = v68;
      char v34 = v69;
      unint64_t v43 = *(void *)(v68 + 16);
      uint64_t v35 = v30;
      uint64_t v36 = v29;
      CGRect v37 = v26;
      if (v43 == 1)
      {
        uint64_t v64 = v29;
        uint64_t v44 = v68;
        sub_1000E779C(v68, (uint64_t)v12);
        uint64_t v45 = v65;
        uint64_t v46 = v66;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v12, 1, v66) != 1)
        {
          Swift::String v61 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
          v61(v16, v12, v46);
          v61(v37, v16, v46);
          swift_storeEnumTagMultiPayload();
          uint64_t v36 = v64;
          goto LABEL_15;
        }
        sub_100003F10((uint64_t)v12, &qword_1006B81A8);
        unint64_t v43 = *(void *)(v44 + 16);
        uint64_t v42 = v44;
        uint64_t v36 = v64;
      }
      if (v43 >= 2)
      {
        uint64_t v47 = v42;
        swift_bridgeObjectRetain();
        unint64_t v48 = sub_1004AF2F0(v47);
        swift_bridgeObjectRelease();
        *(void *)CGRect v37 = v48;
LABEL_14:
        swift_storeEnumTagMultiPayload();
LABEL_15:
        sub_100003F10((uint64_t)v22, &qword_1006B81B0);
        sub_10005EC68();
        long long v51 = (void *)static OS_dispatch_queue.main.getter();
        uint64_t v52 = v74;
        sub_10027D91C((uint64_t)v37, v74, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
        uint64_t v53 = (uint64_t)v37;
        unint64_t v54 = (*(unsigned __int8 *)(v70 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
        uint64_t v55 = swift_allocObject();
        *(void *)(v55 + 16) = v71;
        sub_10027DB48(v52, v55 + v54);
        aBlock[4] = sub_10027DBAC;
        aBlock[5] = v55;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10003C410;
        aBlock[3] = &unk_10062FCE0;
        Swift::String v56 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        Swift::String v57 = v72;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10005FE54();
        sub_10005D034((uint64_t *)&unk_1006AE4B0);
        sub_10005ECA8();
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v56);

        (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
        (*(void (**)(char *, uint64_t))(v73 + 8))(v57, v62);
        return sub_10027D21C(v53, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
      }
LABEL_13:
      *(void *)CGRect v37 = 0;
      uint64_t v49 = enum case for FMIPAccessoryError.unknownDiscoveryError(_:);
      uint64_t v50 = type metadata accessor for FMIPAccessoryError();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 104))(v37, v49, v50);
      goto LABEL_14;
    }
    if (EnumCaseMultiPayload == 6)
    {
      char v34 = v69;
      uint64_t v35 = v30;
      uint64_t v36 = v29;
      CGRect v37 = v26;
      if (*(void *)(v68 + 16) == 1)
      {
        uint64_t v38 = v64;
        sub_1000E779C(v68, v64);
        uint64_t v39 = v65;
        uint64_t v40 = v66;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v38, 1, v66) != 1)
        {
          uint64_t v59 = v63;
          (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v63, v38, v40);
          uint64_t v60 = v74;
          FMIPDiscoveredAccessory.identifier.getter();
          (*(void (**)(char *, uint64_t))(v39 + 8))(v59, v66);
          swift_storeEnumTagMultiPayload();
          sub_10027DB48(v60, (uint64_t)v37);
          goto LABEL_15;
        }
        sub_100003F10(v38, &qword_1006B81A8);
      }
      goto LABEL_13;
    }
    sub_10027D21C((uint64_t)v20, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
  }
  else
  {
    uint64_t v41 = type metadata accessor for FMAccessoryDiscoveryCoordinator.State(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v22, 1, 1, v41);
  }
  return sub_100003F10((uint64_t)v22, &qword_1006B81B0);
}

void sub_100279284(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_1002792E0(a2);
  }
}

uint64_t sub_1002792E0(uint64_t a1)
{
  uint64_t v146 = type metadata accessor for FMIPAccessoryError();
  uint64_t v145 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  unint64_t v143 = (char *)&v132 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10005D034(&qword_1006B4580);
  __chkstk_darwin(v3 - 8);
  uint64_t v137 = (uint64_t)&v132 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v154 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  int v136 = (char *)&v132 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = v7;
  __chkstk_darwin(v6);
  uint64_t v158 = (char *)&v132 - v8;
  uint64_t v141 = type metadata accessor for FMAccessoryPairingCoordinator.Event(0);
  __chkstk_darwin(v141);
  uint64_t v142 = (char *)&v132 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = type metadata accessor for Date();
  uint64_t v139 = *(void *)(v140 - 8);
  __chkstk_darwin(v140);
  uint64_t v138 = (char *)&v132 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v156 = *(void *)(v11 - 8);
  uint64_t v157 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v162 = (char *)&v132 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v155 = (char *)&v132 - v14;
  uint64_t v159 = type metadata accessor for FMAccessoryDiscoveryCoordinator.State(0);
  uint64_t v15 = __chkstk_darwin(v159);
  uint64_t v17 = (char *)&v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v132 - v18;
  uint64_t v160 = sub_10005D034(&qword_1006B81B8);
  __chkstk_darwin(v160);
  uint64_t v21 = (char *)&v132 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for FMAccessoryDiscoveryCoordinator.Event(0);
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v153 = (uint64_t)&v132 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v151 = (uint64_t)&v132 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v152 = (uint64_t)&v132 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v150 = (uint64_t)&v132 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v148 = (uint64_t)&v132 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v149 = (uint64_t)&v132 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v147 = (uint64_t)&v132 - v36;
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v132 - v37;
  uint64_t v161 = a1;
  sub_10027D91C(a1, (uint64_t)&v132 - v37, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
  os_log_type_t v39 = static os_log_type_t.default.getter();
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v40 = type metadata accessor for Logger();
  sub_1000606BC(v40, (uint64_t)qword_1006D1E98);
  uint64_t v41 = Logger.logObject.getter();
  if (os_log_type_enabled(v41, v39))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v134 = v19;
    unint64_t v43 = (uint8_t *)v42;
    uint64_t v44 = swift_slowAlloc();
    uint64_t v133 = v17;
    *(_DWORD *)unint64_t v43 = 136315138;
    uint64_t v170 = v44;
    uint64_t v144 = v5;
    uint64_t aBlock = 0;
    unint64_t v165 = 0xE000000000000000;
    _StringGuts.grow(_:)(18);
    v45._unint64_t object = (void *)0x8000000100584960;
    v45._uint64_t countAndFlagsBits = 0xD000000000000010;
    String.append(_:)(v45);
    _print_unlocked<A, B>(_:_:)();
    v46._uint64_t countAndFlagsBits = 0;
    v46._unint64_t object = (void *)0xE000000000000000;
    String.append(_:)(v46);
    uint64_t aBlock = sub_1000606F4(aBlock, v165, &v170);
    uint64_t v5 = v144;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v41, v39, "FMAccessoryDiscoveryCoordinator: %s", v43, 0xCu);
    swift_arrayDestroy();
    uint64_t v17 = v133;
    swift_slowDealloc();
    uint64_t v19 = v134;
    swift_slowDealloc();
  }

  uint64_t v47 = v162;
  sub_10027D21C((uint64_t)v38, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
  unint64_t v48 = &v163[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_state];
  swift_beginAccess();
  uint64_t v49 = (uint64_t)&v21[*(int *)(v160 + 48)];
  sub_10027D91C((uint64_t)v48, (uint64_t)v21, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
  sub_10027D91C(v161, v49, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v51 = v149;
      sub_10027D91C(v49, v149, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
      if (swift_getEnumCaseMultiPayload() == 5) {
        goto LABEL_14;
      }
      goto LABEL_16;
    case 2u:
      sub_10027D91C(v49, v148, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
      swift_bridgeObjectRelease();
      if (swift_getEnumCaseMultiPayload() == 5) {
        goto LABEL_36;
      }
      goto LABEL_22;
    case 3u:
      uint64_t v51 = v150;
      sub_10027D91C(v49, v150, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
      if (swift_getEnumCaseMultiPayload() != 7) {
        goto LABEL_16;
      }
LABEL_14:
      uint64_t v53 = v155;
      uint64_t v52 = v156;
      uint64_t v54 = v51;
      uint64_t v55 = v157;
      (*(void (**)(char *, uint64_t, uint64_t))(v156 + 32))(v155, v54, v157);
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v19, v53, v55);
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      sub_10027E244((uint64_t)v19, (uint64_t)v48);
      swift_endAccess();
      sub_10027D91C((uint64_t)v48, (uint64_t)v17, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
      sub_10027AC2C((uint64_t)v17);
      sub_10027D21C((uint64_t)v17, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
      sub_10027D21C((uint64_t)v19, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
      (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v55);
      goto LABEL_37;
    case 4u:
      uint64_t v51 = v152;
      sub_10027D91C(v49, v152, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
      if (swift_getEnumCaseMultiPayload())
      {
LABEL_16:
        sub_100003F10(v51, &qword_1006B81D0);
        goto LABEL_22;
      }
      uint64_t v132 = v21;
      uint64_t v71 = v156;
      uint64_t v70 = v157;
      (*(void (**)(char *, uint64_t, uint64_t))(v156 + 32))(v47, v51, v157);
      uint64_t v72 = v163;
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      uint64_t v74 = v47;
      uint64_t v75 = (void *)Strong;
      uint64_t v76 = *(void **)&v72[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_presenter];
      uint64_t v77 = *(void *)&v72[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_mediator];
      uint64_t v78 = *(void *)&v72[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_discoveryController];
      uint64_t v79 = (uint64_t)v155;
      (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v155, v74, v70);
      id v80 = objc_allocWithZone((Class)type metadata accessor for FMAccessoryPairingCoordinator(0));
      id v81 = v76;
      swift_retain();
      swift_retain();
      uint64_t v82 = (char *)sub_10011FB34((uint64_t)v75, (uint64_t)v81, v77, v78, v79);

      swift_release();
      swift_release();
      uint64_t v83 = v138;
      Date.init()();
      uint64_t v84 = &v82[OBJC_IVAR____TtC6FindMy29FMAccessoryPairingCoordinator_startDate];
      swift_beginAccess();
      (*(void (**)(char *, char *, uint64_t))(v139 + 40))(v84, v83, v140);
      swift_endAccess();
      uint64_t v85 = v82;
      os_log_type_t v86 = static os_log_type_t.default.getter();
      sub_10011FEB0(v86, (uint64_t)v85);

      uint64_t v87 = (uint64_t)v142;
      swift_storeEnumTagMultiPayload();
      sub_10011A1DC(v87);
      sub_10027D21C(v87, type metadata accessor for FMAccessoryPairingCoordinator.Event);
      uint64_t v88 = OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_pairingCoordinator;
      uint64_t v89 = *(void **)&v72[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_pairingCoordinator];
      *(void *)&v72[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_pairingCoordinator] = v85;
      uint64_t v90 = v85;

      uint64_t v91 = *(void *)&v72[v88];
      if (v91)
      {
        *(void *)(v91 + OBJC_IVAR____TtC6FindMy29FMAccessoryPairingCoordinator_delegate + 8) = &off_10062FC70;
        swift_unknownObjectWeakAssign();

        uint64_t v92 = *(void (**)(char *, uint64_t))(v71 + 8);
        v92(v162, v70);
      }
      else
      {
        uint64_t v92 = *(void (**)(char *, uint64_t))(v71 + 8);
        v92(v162, v70);
      }
      v92(v132, v70);
      goto LABEL_37;
    case 5u:
      uint64_t v56 = v151;
      sub_10027D91C(v49, v151, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
      uint64_t v57 = v154;
      uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t))(v154 + 32);
      uint64_t v59 = v158;
      v58(v158, v56, v5);
      if (*(void *)&v163[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_onboardingCoordinator])
      {
        os_log_type_t v60 = static os_log_type_t.default.getter();
        sub_10027DF94(v60, 0xD000000000000047, 0x800000010058FB10);
        (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v5);
LABEL_22:
        sub_10027D21C(v49, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
        uint64_t v64 = type metadata accessor for FMAccessoryDiscoveryCoordinator.State;
        uint64_t v65 = (uint64_t)v21;
      }
      else
      {
        uint64_t v144 = v5;
        uint64_t v93 = *(void **)&v163[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_sharingDefaults];
        uint64_t v132 = v21;
        if (v93
          && (NSString v94 = String._bridgeToObjectiveC()(),
              unsigned int v95 = [v93 BOOLForKey:v94],
              v94,
              v95))
        {
          os_log_type_t v96 = static os_log_type_t.default.getter();
          sub_10027DF94(v96, 0xD000000000000049, 0x800000010058FA50);
          uint64_t v97 = *(void **)&v163[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_presenter];
          id v98 = [v97 presentedViewController];
          if (!v98) {
            id v98 = v97;
          }
          uint64_t v99 = type metadata accessor for TaskPriority();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v137, 1, 1, v99);
          uint64_t v100 = v154;
          uint64_t v101 = v144;
          (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v136, v158, v144);
          type metadata accessor for MainActor();
          id v102 = v98;
          uint64_t v163 = v163;
          uint64_t v103 = static MainActor.shared.getter();
          unint64_t v104 = (*(unsigned __int8 *)(v100 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
          unint64_t v105 = (v135 + v104 + 7) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v106 = (char *)swift_allocObject();
          *((void *)v106 + 2) = v103;
          *((void *)v106 + 3) = &protocol witness table for MainActor;
          *((void *)v106 + 4) = v102;
          v58(&v106[v104], (uint64_t)v136, v101);
          *(void *)&v106[v105] = v163;
          sub_10016CC14(v137, (uint64_t)&unk_1006B81C8, (uint64_t)v106);

          swift_release();
          (*(void (**)(char *, uint64_t))(v100 + 8))(v158, v101);
          uint64_t v107 = v49;
        }
        else
        {
          uint64_t v162 = (char *)v49;
          os_log_type_t v108 = static os_log_type_t.default.getter();
          sub_10027DF94(v108, 0xD000000000000067, 0x800000010058FAA0);
          uint64_t v109 = self;
          uint64_t v110 = v163;
          id v111 = [v109 mainBundle];
          v112._uint64_t countAndFlagsBits = 0xD000000000000028;
          v171._unint64_t object = (void *)0x800000010058CEE0;
          v112._unint64_t object = (void *)0x800000010058F9D0;
          v113.value._uint64_t countAndFlagsBits = 0xD000000000000010;
          v113.value._unint64_t object = (void *)0x800000010058CEC0;
          v114._uint64_t countAndFlagsBits = 0;
          v114._unint64_t object = (void *)0xE000000000000000;
          v171._uint64_t countAndFlagsBits = 0xD000000000000015;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v112, v113, (NSBundle)v111, v114, v171);

          id v115 = [v109 mainBundle];
          v116._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
          v172._unint64_t object = (void *)0x800000010058CEE0;
          v116._unint64_t object = (void *)0x800000010058FA00;
          v117.value._uint64_t countAndFlagsBits = 0xD000000000000010;
          v117.value._unint64_t object = (void *)0x800000010058CEC0;
          v118._uint64_t countAndFlagsBits = 0;
          v118._unint64_t object = (void *)0xE000000000000000;
          v172._uint64_t countAndFlagsBits = 0xD000000000000015;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v116, v117, (NSBundle)v115, v118, v172);

          NSString v119 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          NSString v120 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v121 = [self alertControllerWithTitle:v119 message:v120 preferredStyle:1];

          uint64_t aBlock = 0;
          unint64_t v165 = 0xE000000000000000;
          _StringGuts.grow(_:)(20);
          swift_bridgeObjectRelease();
          id v122 = [v109 mainBundle];
          v173._uint64_t countAndFlagsBits = 0xD000000000000021;
          v173._unint64_t object = (void *)0x800000010057F840;
          v123._uint64_t countAndFlagsBits = 0x4F545455425F4B4FLL;
          v123._unint64_t object = (void *)0xEF454C5449545F4ELL;
          v124._uint64_t countAndFlagsBits = 0;
          v124._unint64_t object = (void *)0xE000000000000000;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v123, (Swift::String_optional)0, (NSBundle)v122, v124, v173);

          uint64_t v125 = swift_allocObject();
          swift_unknownObjectWeakInit();
          swift_retain();
          NSString v126 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          uint64_t v168 = sub_10027E2A8;
          uint64_t v169 = v125;
          uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
          unint64_t v165 = 1107296256;
          uint64_t v166 = sub_10000841C;
          char v167 = &unk_10062FD58;
          uint64_t v127 = _Block_copy(&aBlock);
          swift_release();
          id v128 = [self actionWithTitle:v126 style:1 handler:v127];
          _Block_release(v127);
          swift_release();

          [v121 addAction:v128];
          uint64_t v129 = *(void **)&v110[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_presenter];
          id v130 = [v129 presentedViewController];
          if (!v130) {
            id v130 = v129;
          }
          [v130 presentViewController:v121 animated:1 completion:0 v132];

          (*(void (**)(char *, uint64_t))(v154 + 8))(v158, v144);
          uint64_t v107 = (uint64_t)v162;
        }
        sub_10027D21C(v107, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
        uint64_t v64 = type metadata accessor for FMAccessoryDiscoveryCoordinator.State;
        uint64_t v65 = (uint64_t)v132;
      }
      return sub_10027D21C(v65, v64);
    case 6u:
      uint64_t v61 = v153;
      sub_10027D91C(v49, v153, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v62 = *(void (**)(char *, uint64_t))(v145 + 8);
        uint64_t v63 = v146;
        v62(v21, v146);
        v62((char *)v61, v63);
LABEL_37:
        uint64_t v64 = type metadata accessor for FMAccessoryDiscoveryCoordinator.Event;
        uint64_t v65 = v49;
      }
      else
      {
        uint64_t v66 = v145;
        uint64_t v67 = v61;
        uint64_t v68 = v143;
        uint64_t v69 = v146;
        (*(void (**)(char *, uint64_t, uint64_t))(v145 + 32))(v143, v67, v146);
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v19, v68, v69);
        swift_storeEnumTagMultiPayload();
        swift_beginAccess();
        sub_10027E244((uint64_t)v19, (uint64_t)v48);
        swift_endAccess();
        sub_10027D91C((uint64_t)v48, (uint64_t)v17, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
        sub_10027AC2C((uint64_t)v17);
        sub_10027D21C((uint64_t)v17, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
        sub_10027D21C((uint64_t)v19, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
        (*(void (**)(char *, uint64_t))(v66 + 8))(v68, v69);
        sub_10027D21C(v49, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
        uint64_t v65 = (uint64_t)v21;
        uint64_t v64 = type metadata accessor for FMAccessoryDiscoveryCoordinator.State;
      }
      return sub_10027D21C(v65, v64);
    case 7u:
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_22;
      }
      goto LABEL_36;
    default:
      sub_10027D91C(v49, v147, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload != 2 && EnumCaseMultiPayload != 3) {
        goto LABEL_22;
      }
LABEL_36:
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      sub_10027E244((uint64_t)v19, (uint64_t)v48);
      swift_endAccess();
      sub_10027D91C((uint64_t)v48, (uint64_t)v17, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
      sub_10027AC2C((uint64_t)v17);
      sub_10027D21C((uint64_t)v17, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
      sub_10027D21C((uint64_t)v19, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
      goto LABEL_37;
  }
}

void sub_10027A938()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (char *)Strong;
    os_log_type_t v2 = static os_log_type_t.default.getter();
    sub_10027DF94(v2, 0xD000000000000038, 0x800000010058F8F0);
    [*(id *)&v1[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_presenter] dismissViewControllerAnimated:1 completion:0];
    [v1 proxCardFlowDidDismiss];
  }
}

uint64_t sub_10027A9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  uint64_t v6[2] = a4;
  uint64_t v7 = type metadata accessor for UUID();
  v6[5] = v7;
  v6[6] = *(void *)(v7 - 8);
  v6[7] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[8] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_10027AAD0, v9, v8);
}

uint64_t sub_10027AAD0()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v5 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v6 = (void *)v0[2];
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5, v2);
  id v7 = v6;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [self imageNamed:v8];

  id v10 = objc_allocWithZone((Class)type metadata accessor for DiscoveredAccessory());
  DiscoveredAccessory.init(identifier:productType:productImage:)();
  id v11 = objc_allocWithZone((Class)type metadata accessor for AccessoryOnboardingCoordinator());
  uint64_t v12 = AccessoryOnboardingCoordinator.init(presenter:accessory:)();
  swift_unknownObjectRetain();
  AccessoryOnboardingCoordinator.delegate.setter();
  AccessoryOnboardingCoordinator.start()();
  uint64_t v13 = *(void **)(v4 + OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_onboardingCoordinator);
  *(void *)(v4 + OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_onboardingCoordinator) = v12;

  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

void sub_10027AC2C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v118 = type metadata accessor for FMAccessoryDiscoveryAndPairingFailedCard.ViewModel();
  __chkstk_darwin(v118);
  NSString v120 = (char *)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FMIPAccessoryError();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v123 = (char *)&v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = type metadata accessor for FMAccessoryDiscoveryAccessoryConfirmationCard.ViewModel(0);
  uint64_t v8 = __chkstk_darwin(v117);
  uint64_t v119 = (uint64_t)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v125 = (uint64_t)&v113 - v10;
  uint64_t v121 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v124 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  id v122 = (char *)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FMAccessoryDiscoveryCoordinator.State(0);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v113 - v16;
  uint64_t v126 = a1;
  sub_10027D91C(a1, (uint64_t)&v113 - v16, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_1000606BC(v19, (uint64_t)qword_1006D1E98);
  uint64_t v20 = Logger.logObject.getter();
  if (os_log_type_enabled(v20, v18))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v114 = v6;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    Swift::String v116 = v1;
    uint64_t v115 = v5;
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v127 = v23;
    uint64_t v131 = 0;
    unint64_t v132 = 0xE000000000000000;
    _StringGuts.grow(_:)(22);
    v24._unint64_t object = (void *)0x8000000100584920;
    v24._uint64_t countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v24);
    _print_unlocked<A, B>(_:_:)();
    v25._uint64_t countAndFlagsBits = 0;
    v25._unint64_t object = (void *)0xE000000000000000;
    String.append(_:)(v25);
    uint64_t v131 = sub_1000606F4(v131, v132, &v127);
    uint64_t v5 = v115;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v18, "FMAccessoryDiscoveryCoordinator: %s", v22, 0xCu);
    swift_arrayDestroy();
    uint64_t v2 = v116;
    swift_slowDealloc();
    uint64_t v6 = v114;
    swift_slowDealloc();
  }

  sub_10027D21C((uint64_t)v17, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
  sub_10027D91C(v126, (uint64_t)v15, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      Swift::String v45 = v123;
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v123, v15, v5);
      uint64_t v46 = v6;
      uint64_t v47 = (uint64_t)v120;
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v120, v45, v5);
      uint64_t v48 = v47 + *(int *)(v118 + 20);
      uint64_t v49 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 1, 1, v49);
      uint64_t v50 = (objc_class *)type metadata accessor for FMAccessoryDiscoveryFailedCard();
      id v51 = objc_allocWithZone(v50);
      swift_unknownObjectWeakInit();
      swift_unknownObjectWeakAssign();
      v134.receiver = v51;
      v134.super_class = v50;
      uint64_t v52 = v2;
      [super initWithContentView:0];
      [v53 setDismissalType:3];
      sub_100250BF4(v47);
      sub_100250E68(v47);

      sub_10027D21C(v47, (uint64_t (*)(void))type metadata accessor for FMAccessoryDiscoveryAndPairingFailedCard.ViewModel);
      id v54 = v53;
      os_log_type_t v55 = static os_log_type_t.default.getter();
      sub_10027DD50(v55, v54);

      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        id v57 = Strong;
        id v58 = [Strong navigationController];
        if (v58)
        {
          uint64_t v59 = v58;
          [v58 pushViewController:v54 animated:1];
        }
      }
      else
      {
        id v57 = [*(id *)&v52[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_presenter] presentProxCardFlowWithDelegate:v52 initialViewController:v54];
      }

      swift_unknownObjectWeakAssign();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v123, v5);
      return;
    case 2u:
      return;
    case 3u:
      os_log_type_t v60 = (objc_class *)type metadata accessor for FMAccessoryDiscoveryFlowSelectionCard();
      uint64_t v61 = (char *)objc_allocWithZone(v60);
      uint64_t v62 = OBJC_IVAR____TtC6FindMy37FMAccessoryDiscoveryFlowSelectionCard_imageViewContainer;
      id v63 = objc_allocWithZone((Class)UIView);
      uint64_t v64 = v2;
      uint64_t v65 = v61;
      *(void *)&v61[v62] = [v63 init];
      uint64_t v66 = OBJC_IVAR____TtC6FindMy37FMAccessoryDiscoveryFlowSelectionCard_imageView;
      *(void *)&v65[v66] = [objc_allocWithZone((Class)UIImageView) init];
      swift_unknownObjectWeakInit();
      swift_unknownObjectWeakAssign();

      v128.receiver = v65;
      v128.super_class = v60;
      id v67 = [super initWithContentView:0];

      uint64_t v68 = (char *)v67;
      os_log_type_t v69 = static os_log_type_t.default.getter();
      sub_10027DD50(v69, v68);

      uint64_t v70 = (void *)swift_unknownObjectWeakLoadStrong();
      if (!v70) {
        goto LABEL_37;
      }
      id v71 = v70;
      id v72 = [v70 navigationController];
      if (v72) {
        goto LABEL_23;
      }
      goto LABEL_38;
    case 4u:
      uint64_t v73 = *(void *)&v2[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_mediator];
      id v74 = objc_allocWithZone((Class)type metadata accessor for FMAccessoryDiscoveryItemSearchingCard());
      uint64_t v75 = v2;
      swift_retain();
      id v76 = sub_1003F9738((uint64_t)v2, v73);

      swift_release();
      id v77 = v76;
      os_log_type_t v78 = static os_log_type_t.default.getter();
      sub_10027DD50(v78, v77);

      uint64_t v79 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v79)
      {
        id v80 = v79;
        id v81 = [v79 navigationController];
        if (v81)
        {
          uint64_t v82 = v81;
          [v81 pushViewController:v77 animated:1];
        }
      }
      else
      {
        id v80 = [*(id *)&v75[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_presenter] presentProxCardFlowWithDelegate:v75 initialViewController:v77];
      }

      goto LABEL_36;
    case 5u:
      dispatch thunk of FMIPAccessoryDiscoveryController.startDiscovery(localFindable:completion:)();
      uint64_t v83 = (objc_class *)type metadata accessor for FMAccessoryDiscoverySearchingCard();
      id v84 = objc_allocWithZone(v83);
      swift_unknownObjectWeakInit();
      swift_unknownObjectWeakAssign();
      v129.receiver = v84;
      v129.super_class = v83;
      id v77 = [super initWithContentView:0];
      os_log_type_t v85 = static os_log_type_t.default.getter();
      sub_10027DD50(v85, v77);
      os_log_type_t v86 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v86)
      {
        id v87 = v86;
        id v88 = [v86 navigationController];
        if (v88)
        {
          uint64_t v89 = v88;
          [v88 pushViewController:v77 animated:1];
        }
      }
      else
      {
        id v87 = [*(id *)&v2[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_presenter] presentProxCardFlowWithDelegate:v2 initialViewController:v77];
      }

LABEL_36:
      swift_unknownObjectWeakAssign();

      return;
    case 6u:
      dispatch thunk of FMIPAccessoryDiscoveryController.startDiscovery(localFindable:completion:)();
      id v90 = [self defaultCenter];
      NSString v91 = String._bridgeToObjectiveC()();
      [v90 postNotificationName:v91 object:0 userInfo:0 deliverImmediately:1];

      uint64_t v92 = (objc_class *)type metadata accessor for FMAccessoryDiscoveryAttachCard();
      uint64_t v93 = (char *)objc_allocWithZone(v92);
      uint64_t v94 = OBJC_IVAR____TtC6FindMy30FMAccessoryDiscoveryAttachCard_imageViewContainer;
      id v95 = objc_allocWithZone((Class)UIView);
      uint64_t v64 = v2;
      os_log_type_t v96 = v93;
      *(void *)&v93[v94] = [v95 init];
      uint64_t v97 = OBJC_IVAR____TtC6FindMy30FMAccessoryDiscoveryAttachCard_imageView;
      *(void *)&v96[v97] = [objc_allocWithZone((Class)UIImageView) init];
      swift_unknownObjectWeakInit();
      swift_unknownObjectWeakAssign();

      v130.receiver = v96;
      v130.super_class = v92;
      id v98 = [super initWithContentView:0];

      uint64_t v68 = (char *)v98;
      os_log_type_t v99 = static os_log_type_t.default.getter();
      sub_10027DD50(v99, v68);

      uint64_t v100 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v100)
      {
        id v71 = v100;
        id v72 = [v100 navigationController];
        if (v72)
        {
LABEL_23:
          uint64_t v101 = v72;
          [v72 pushViewController:v68 animated:1];
        }
      }
      else
      {
LABEL_37:
        id v71 = [*(id *)&v64[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_presenter] presentProxCardFlowWithDelegate:v64 initialViewController:v68];
      }
LABEL_38:

      swift_unknownObjectWeakAssign();
      goto LABEL_41;
    case 7u:
      uint64_t v102 = *(void *)(*(void *)&v2[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_mediator] + 64);
      uint64_t v103 = *(void *)&v2[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_discoveryController];
      id v104 = objc_allocWithZone((Class)type metadata accessor for FMAccessoryDiscoveryFoundMultipleCard());
      swift_retain_n();
      swift_retain_n();
      unint64_t v105 = v2;
      uint64_t v106 = sub_10034D6F4(v105, v102, v103);
      swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_retain();
      uint64_t v107 = (void (*)(uint64_t *, void))dispatch thunk of FMIPAccessoryDiscoveryController.callbacks.modify();
      FMIPAccessoryDiscoveryController.Callbacks.errorHandler.setter();
      v107(&v131, 0);
      swift_release();
      uint64_t v68 = v106;
      os_log_type_t v108 = static os_log_type_t.default.getter();
      sub_10027DD50(v108, v68);

      uint64_t v109 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v109)
      {
        id v110 = v109;
        id v111 = [v109 navigationController];
        if (v111)
        {
          Swift::String v112 = v111;
          [v111 pushViewController:v68 animated:1];
        }
      }
      else
      {
        id v110 = [*(id *)&v105[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_presenter] presentProxCardFlowWithDelegate:v105 initialViewController:v68];
      }

      swift_unknownObjectWeakAssign();
      swift_release();
      swift_release();
LABEL_41:

      break;
    default:
      uint64_t v26 = v124;
      uint64_t v28 = v121;
      uint64_t v27 = v122;
      (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v122, v15, v121);
      dispatch thunk of FMIPAccessoryDiscoveryController.stopDiscovery(localFindable:completion:)();
      uint64_t v29 = *(void (**)(uint64_t, char *, uint64_t))(v26 + 16);
      uint64_t v30 = v125;
      v29(v125, v27, v28);
      *(void *)(v30 + *(int *)(v117 + 20)) = *(void *)(*(void *)&v2[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_mediator]
                                                         + 64);
      uint64_t v31 = v119;
      sub_10027D91C(v30, v119, type metadata accessor for FMAccessoryDiscoveryAccessoryConfirmationCard.ViewModel);
      uint64_t v32 = (objc_class *)type metadata accessor for FMAccessoryDiscoveryAccessoryConfirmationCard(0);
      uint64_t v33 = (char *)objc_allocWithZone(v32);
      *(void *)&v33[OBJC_IVAR____TtC6FindMy45FMAccessoryDiscoveryAccessoryConfirmationCard_imageFetchCancellable] = 0;
      uint64_t v34 = OBJC_IVAR____TtC6FindMy45FMAccessoryDiscoveryAccessoryConfirmationCard_imageView;
      id v35 = objc_allocWithZone((Class)UIImageView);
      uint64_t v36 = v2;
      swift_retain();
      uint64_t v37 = v33;
      *(void *)&v33[v34] = [v35 init];
      swift_unknownObjectWeakInit();
      sub_10027D91C(v31, (uint64_t)&v37[OBJC_IVAR____TtC6FindMy45FMAccessoryDiscoveryAccessoryConfirmationCard_viewModel], type metadata accessor for FMAccessoryDiscoveryAccessoryConfirmationCard.ViewModel);
      swift_unknownObjectWeakAssign();

      v133.receiver = v37;
      v133.super_class = v32;
      id v38 = [super initWithContentView:0];

      sub_10027D21C(v31, type metadata accessor for FMAccessoryDiscoveryAccessoryConfirmationCard.ViewModel);
      id v39 = v38;
      os_log_type_t v40 = static os_log_type_t.default.getter();
      sub_10027DD50(v40, v39);

      uint64_t v41 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v41)
      {
        id v42 = v41;
        id v43 = [v41 navigationController];
        if (v43)
        {
          uint64_t v44 = v43;
          [v43 pushViewController:v39 animated:1];
        }
      }
      else
      {
        id v42 = [*(id *)&v36[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_presenter] presentProxCardFlowWithDelegate:v36 initialViewController:v39];
      }

      swift_unknownObjectWeakAssign();
      sub_10027D21C(v125, type metadata accessor for FMAccessoryDiscoveryAccessoryConfirmationCard.ViewModel);
      (*(void (**)(char *, uint64_t))(v124 + 8))(v122, v28);
      break;
  }
}

uint64_t sub_10027BC98()
{
  uint64_t result = type metadata accessor for FMAccessoryDiscoveryCoordinator.State(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FMAccessoryDiscoveryCoordinator.Event(319);
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t type metadata accessor for FMAccessoryDiscoveryCoordinator.State(uint64_t a1)
{
  return sub_1000201D0(a1, qword_1006B8170);
}

uint64_t sub_10027BDC0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10005D034(&qword_1006AF090);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for FMAccessoryDiscoveryCoordinator.State(0);
  __chkstk_darwin(v5);
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  os_log_type_t v8 = static os_log_type_t.default.getter();
  sub_10027DF94(v8, 0xD000000000000037, 0x800000010058F970);
  uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_pairingCoordinator);
  if (v9)
  {
    [v9 proxCardFlowDidDismiss];
  }
  else if (swift_unknownObjectWeakLoadStrong())
  {
    sub_100483DEC();
    swift_unknownObjectRelease();
  }
  uint64_t v10 = v0 + OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_state;
  swift_beginAccess();
  sub_10027D91C(v10, (uint64_t)v7, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
  if (swift_getEnumCaseMultiPayload() == 6)
  {
    dispatch thunk of FMIPAccessoryDiscoveryController.stopDiscovery(localFindable:completion:)();
  }
  else
  {
    dispatch thunk of FMIPAccessoryDiscoveryController.stopDiscovery(localFindable:completion:)();
    sub_10027D21C((uint64_t)v7, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
  }
  uint64_t v11 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_onboardingCoordinator);
  *(void *)(v1 + OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_onboardingCoordinator) = 0;

  id v12 = [self defaultCenter];
  NSString v13 = String._bridgeToObjectiveC()();
  [v12 postNotificationName:v13 object:0 userInfo:0 deliverImmediately:1];

  uint64_t v14 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_mediator) + 56);
  uint64_t v15 = type metadata accessor for FMSelectionPendingAction(0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
  uint64_t v16 = v14 + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingAction;
  swift_beginAccess();
  swift_retain();
  sub_1000814C8((uint64_t)v4, v16);
  swift_endAccess();
  return swift_release();
}

uint64_t *sub_10027C158(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
      case 4u:
        uint64_t v7 = type metadata accessor for FMIPDiscoveredAccessory();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v10 = type metadata accessor for UUID();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v11 = type metadata accessor for FMIPAccessoryError();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_10027C3F0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
    case 3:
    case 4:
      uint64_t v3 = type metadata accessor for FMIPDiscoveredAccessory();
      goto LABEL_8;
    case 2:
      return swift_bridgeObjectRelease();
    case 5:
      uint64_t v3 = type metadata accessor for UUID();
      goto LABEL_8;
    case 6:
      uint64_t v3 = type metadata accessor for FMIPAccessoryError();
LABEL_8:
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_10027C4E0(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
    case 4u:
      uint64_t v6 = type metadata accessor for FMIPDiscoveredAccessory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_7;
    case 2u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 5u:
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_7;
    case 6u:
      uint64_t v8 = type metadata accessor for FMIPAccessoryError();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_10027C720(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10027D21C((uint64_t)a1, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
      case 4u:
        uint64_t v6 = type metadata accessor for FMIPDiscoveredAccessory();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v7 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v8 = type metadata accessor for FMIPAccessoryError();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *sub_10027C998(void *a1, const void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
    case 4u:
      uint64_t v6 = type metadata accessor for FMIPDiscoveredAccessory();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_6;
    case 5u:
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      goto LABEL_6;
    case 6u:
      uint64_t v8 = type metadata accessor for FMIPAccessoryError();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_10027CBBC(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10027D21C((uint64_t)a1, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
      case 4u:
        uint64_t v6 = type metadata accessor for FMIPDiscoveredAccessory();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_7;
      case 5u:
        uint64_t v7 = type metadata accessor for UUID();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        goto LABEL_7;
      case 6u:
        uint64_t v8 = type metadata accessor for FMIPAccessoryError();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t *sub_10027CE04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = type metadata accessor for FMIPAccessoryError();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = type metadata accessor for FMIPDiscoveredAccessory();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10027CF54(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = type metadata accessor for FMIPAccessoryError();
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v3 = type metadata accessor for FMIPDiscoveredAccessory();
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

void *sub_10027CFE0(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = type metadata accessor for FMIPAccessoryError();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for FMIPDiscoveredAccessory();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_10027D0EC(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10027D21C((uint64_t)a1, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = type metadata accessor for FMIPAccessoryError();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = type metadata accessor for FMIPDiscoveredAccessory();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10027D21C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_10027D27C(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = type metadata accessor for FMIPAccessoryError();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for FMIPDiscoveredAccessory();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_10027D388(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10027D21C((uint64_t)a1, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = type metadata accessor for FMIPAccessoryError();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = type metadata accessor for FMIPDiscoveredAccessory();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10027D4B8()
{
  uint64_t result = type metadata accessor for FMIPDiscoveredAccessory();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FMIPAccessoryError();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

id sub_10027D57C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)&v4[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_pairingCoordinator] = 0;
  *(void *)&v4[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_onboardingCoordinator] = 0;
  uint64_t v9 = OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_sharingDefaults;
  id v10 = objc_allocWithZone((Class)NSUserDefaults);
  uint64_t v11 = v4;
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v10 initWithSuiteName:v12];

  *(void *)&v4[v9] = v13;
  swift_unknownObjectWeakInit();
  *(void *)&v11[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for FMAccessoryDiscoveryCoordinator.State(0);
  swift_storeEnumTagMultiPayload();
  *(void *)&v11[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_mediator] = a2;
  *(void *)&v11[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_discoveryController] = a3;
  *(void *)&v11[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_presenter] = a1;
  sub_10027D91C(a4, (uint64_t)&v11[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_initialEvent], type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
  swift_retain();
  swift_retain();
  id v14 = a1;

  v23.receiver = v11;
  v23.super_class = (Class)type metadata accessor for FMAccessoryDiscoveryCoordinator(0);
  id v15 = [super init];
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v16 = v15;
  swift_retain();
  uint64_t v17 = (void (*)(unsigned char *, void))dispatch thunk of FMIPAccessoryDiscoveryController.callbacks.modify();
  FMIPAccessoryDiscoveryController.Callbacks.errorHandler.setter();
  v17(v22, 0);
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  os_log_type_t v18 = (void (*)(unsigned char *, void))dispatch thunk of FMIPAccessoryDiscoveryController.callbacks.modify();
  FMIPAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback.setter();
  v18(v22, 0);
  swift_release();
  id v19 = [self defaultCenter];
  NSString v20 = String._bridgeToObjectiveC()();
  [v19 addObserver:v16 selector:"systemOnboardingStarted" name:v20 object:0];

  sub_10027D21C(a4, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
  return v16;
}

void sub_10027D8B8(os_log_type_t a1)
{
}

uint64_t sub_10027D8D4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10027D90C(uint64_t a1)
{
  return sub_10027848C(a1, v1);
}

uint64_t sub_10027D914(uint64_t a1)
{
  return sub_1002789A8(a1, v1);
}

uint64_t sub_10027D91C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10027D984(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034(&qword_1006B81B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10027D9EC()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMAccessoryDiscoveryCoordinator.Event(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
    case 4u:
      uint64_t v5 = type metadata accessor for FMIPDiscoveredAccessory();
      goto LABEL_6;
    case 2u:
      swift_bridgeObjectRelease();
      break;
    case 5u:
      uint64_t v5 = type metadata accessor for UUID();
      goto LABEL_6;
    case 6u:
      uint64_t v5 = type metadata accessor for FMIPAccessoryError();
LABEL_6:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10027DB48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMAccessoryDiscoveryCoordinator.Event(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10027DBAC()
{
  return sub_10027DCD0(type metadata accessor for FMAccessoryDiscoveryCoordinator.Event, (uint64_t (*)(uint64_t, uint64_t))sub_100279284);
}

uint64_t sub_10027DBD8()
{
  uint64_t v1 = type metadata accessor for FMIPAccessoryError();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10027DCA4()
{
  return sub_10027DCD0((uint64_t (*)(void))&type metadata accessor for FMIPAccessoryError, sub_1002787D8);
}

uint64_t sub_10027DCD0(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a2(v4, v5);
}

void sub_10027DD50(os_log_type_t a1, void *a2)
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000606BC(v4, (uint64_t)qword_1006D1E98);
  os_log_type_t v5 = a1;
  log = Logger.logObject.getter();
  if (os_log_type_enabled(log, a1))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v16 = v7;
    _StringGuts.grow(_:)(27);
    v8._unint64_t object = (void *)0x8000000100584940;
    v8._uint64_t countAndFlagsBits = 0xD000000000000019;
    String.append(_:)(v8);
    id v9 = [a2 description];
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v12 = v11;

    v13._uint64_t countAndFlagsBits = v10;
    v13._unint64_t object = v12;
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    v14._uint64_t countAndFlagsBits = 0;
    v14._unint64_t object = (void *)0xE000000000000000;
    String.append(_:)(v14);
    sub_1000606F4(0, 0xE000000000000000, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v5, "FMAccessoryDiscoveryCoordinator: %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_10027DF94(os_log_type_t a1, uint64_t a2, unint64_t a3)
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000606BC(v6, (uint64_t)qword_1006D1E98);
  log = Logger.logObject.getter();
  if (os_log_type_enabled(log, a1))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    sub_1000606F4(a2, a3, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, log, a1, "FMAccessoryDiscoveryCoordinator: %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

id sub_10027E138()
{
  os_log_type_t v1 = static os_log_type_t.default.getter();
  sub_10027DF94(v1, 0xD00000000000003FLL, 0x800000010058F930);
  id v2 = [self defaultCenter];
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 postNotificationName:v3 object:0 userInfo:0 deliverImmediately:1];

  os_log_type_t v4 = static os_log_type_t.default.getter();
  sub_10027DF94(v4, 0xD000000000000038, 0x800000010058F8F0);
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_presenter] dismissViewControllerAnimated:1 completion:0];

  return [v0 proxCardFlowDidDismiss];
}

uint64_t sub_10027E244(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMAccessoryDiscoveryCoordinator.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_10027E2A8()
{
}

uint64_t sub_10027E2B0()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10027E3A0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1000D6E0C;
  return sub_10027A9D8(a1, v6, v7, v8, v9, v10);
}

unsigned char *storeEnumTagSinglePayload for FMAccessoryDiscoveryCoordinator.FlowType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10027E598);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMAccessoryDiscoveryCoordinator.FlowType()
{
  return &type metadata for FMAccessoryDiscoveryCoordinator.FlowType;
}

unint64_t sub_10027E5D4()
{
  unint64_t result = qword_1006B81D8;
  if (!qword_1006B81D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B81D8);
  }
  return result;
}

BOOL sub_10027E638()
{
  id v1 = [v0 domain];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;

  if (v2 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v7 & 1) == 0) {
      return result;
    }
  }
  return (uint64_t)[v0 code] >= 500 && (uint64_t)[v0 code] < 600;
}

id sub_10027E720(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  if (_getErrorEmbeddedNSError<A>(_:)())
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v6, v4, a1);
  }
  char v7 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  id v8 = [v7 code];

  return v8;
}

uint64_t sub_10027E880(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  if (_getErrorEmbeddedNSError<A>(_:)())
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v6, v4, a1);
  }
  char v7 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  id v8 = [v7 domain];

  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v9;
}

BOOL sub_10027EA00(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  if (_getErrorEmbeddedNSError<A>(_:)())
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v6, v4, a1);
  }
  char v7 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  BOOL v8 = sub_10027E638();

  return v8;
}

uint64_t sub_10027EC18(char a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for FMPopOverController();
  [super viewWillAppear:a1 & 1];
  uint64_t v3 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC6FindMy19FMPopOverController_mediator] + 56);
  type metadata accessor for FMSelectionSubscription();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber + 8) = 0;
  swift_unknownObjectWeakInit();
  swift_retain();
  uint64_t v5 = v1;
  UUID.init()();
  *(void *)(v4 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber + 8) = &off_10062FE38;
  swift_unknownObjectWeakAssign();

  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(v3 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v3 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  swift_release();
  *(void *)&v5[OBJC_IVAR____TtC6FindMy19FMPopOverController_selectionSubscription] = v4;
  return swift_release();
}

uint64_t sub_10027EDD0(char a1)
{
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for FMPopOverController();
  uint64_t result = (uint64_t)[super viewWillDisappear:a1 & 1];
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC6FindMy19FMPopOverController_selectionSubscription];
  if (v4)
  {
    uint64_t v5 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC6FindMy19FMPopOverController_mediator] + 56);
    swift_beginAccess();
    swift_retain();
    swift_retain();
    uint64_t result = sub_1003D6AB4((uint64_t *)(v5 + 16), v4);
    uint64_t v6 = result;
    unint64_t v7 = *(void *)(v5 + 16);
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 >= v6) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v8 >= result)
      {
LABEL_4:
        sub_1002586A8(v6, v8);
        swift_endAccess();
        swift_release();
        return swift_release();
      }
    }
    __break(1u);
  }
  return result;
}

void sub_10027F090()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy19FMPopOverController_sideBarView];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10055B950;
  id v3 = [v1 topAnchor];
  id v4 = [v0 view];
  if (!v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = v4;
  id v6 = [v4 topAnchor];

  id v7 = [v3 constraintEqualToAnchor:v6];
  *(void *)(v2 + 32) = v7;
  id v8 = [v1 bottomAnchor];
  id v9 = [v0 view];
  if (!v9)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v10 = v9;
  id v11 = [v9 bottomAnchor];

  id v12 = [v8 constraintEqualToAnchor:v11];
  *(void *)(v2 + 40) = v12;
  id v13 = [v1 leadingAnchor];
  id v14 = [v0 view];
  if (!v14)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v15 = v14;
  id v16 = [v14 leadingAnchor];

  id v17 = [v13 constraintEqualToAnchor:v16];
  *(void *)(v2 + 48) = v17;
  id v18 = [v1 trailingAnchor];
  id v19 = [v0 view];
  if (!v19)
  {
LABEL_11:
    __break(1u);
    return;
  }
  NSString v20 = v19;
  uint64_t v21 = self;
  id v22 = [v20 trailingAnchor];

  id v23 = [v18 constraintEqualToAnchor:v22];
  *(void *)(v2 + 56) = v23;
  specialized Array._endMutation()();
  sub_100006060(0, (unint64_t *)&qword_1006AEE60);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v21 activateConstraints:isa];
}

void sub_10027F388(void *a1)
{
  id v3 = [a1 view];
  if (!v3) {
    return;
  }
  id v4 = v3;
  sub_1000493BC();
  [v1 addChildViewController:a1];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v4 setPreservesSuperviewLayoutMargins:1];
  id v5 = [*(id *)(*(void *)&v1[OBJC_IVAR____TtC6FindMy19FMPopOverController_sideBarView]+ OBJC_IVAR____TtC6FindMy13FMSideBarView_blurredBackground) contentView];
  [v5 addSubview:v4];

  [a1 didMoveToParentViewController:v1];
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10055B950;
  id v7 = [v4 topAnchor];
  id v8 = [v1 view];
  if (!v8)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v9 = v8;
  id v10 = [v8 topAnchor];

  id v11 = [v7 constraintEqualToAnchor:v10];
  *(void *)(v6 + 32) = v11;
  id v12 = [v4 bottomAnchor];
  id v13 = [v1 view];
  if (!v13)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v14 = v13;
  id v15 = [v13 bottomAnchor];

  id v16 = [v12 constraintEqualToAnchor:v15];
  *(void *)(v6 + 40) = v16;
  id v17 = [v4 leadingAnchor];
  id v18 = [v1 view];
  if (!v18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v19 = v18;
  id v20 = [v18 leadingAnchor];

  id v21 = [v17 constraintEqualToAnchor:v20];
  *(void *)(v6 + 48) = v21;
  id v22 = [v4 trailingAnchor];
  id v23 = [v1 view];
  if (!v23)
  {
LABEL_13:
    __break(1u);
    return;
  }
  Swift::String v24 = v23;
  Swift::String v25 = self;
  id v26 = [v24 trailingAnchor];

  id v27 = [v22 constraintEqualToAnchor:v26];
  *(void *)(v6 + 56) = v27;
  specialized Array._endMutation()();
  sub_100006060(0, (unint64_t *)&qword_1006AEE60);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v25 activateConstraints:isa];
}

id sub_10027F774()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPopOverController();
  return [super dealloc];
}

uint64_t type metadata accessor for FMPopOverController()
{
  return self;
}

uint64_t sub_10027F838(uint64_t a1, uint64_t a2)
{
  return sub_10027F840(a2);
}

uint64_t sub_10027F840(uint64_t a1)
{
  objc_super v2 = v1;
  uint64_t v4 = type metadata accessor for FMSelectedSection();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100028164(a1, (uint64_t)v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      id v14 = objc_allocWithZone((Class)type metadata accessor for FMItemDetailContentViewController(0));
      uint64_t v15 = swift_retain();
      id v16 = (char *)sub_10038F7A0(v15);
      *(void *)&v16[OBJC_IVAR____TtC6FindMy33FMItemDetailContentViewController_playSoundDelegate + 8] = &off_100624CA8;
      swift_unknownObjectWeakAssign();
      sub_10027F388(v16);

      break;
    case 2:
      id v17 = objc_allocWithZone((Class)type metadata accessor for FMPersonDetailContentViewController());
      uint64_t v18 = swift_retain();
      id v19 = sub_1001344C8(v18);
      swift_release();
      sub_10027F388(v19);

      break;
    case 0:
      uint64_t v8 = (uint64_t)&v6[*(int *)(sub_10005D034(&qword_1006BAF00) + 48)];
      id v9 = objc_allocWithZone((Class)type metadata accessor for FMDeviceDetailContentViewController(0));
      uint64_t v10 = swift_retain();
      id v11 = sub_1001DB4C8(v10);
      *(void *)&v11[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundDelegate + 8] = &off_100624C90;
      swift_unknownObjectWeakAssign();
      sub_10027F388(v11);

      sub_100072358(v8);
      uint64_t v12 = type metadata accessor for FMIPDevice();
      return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v6, v12);
    default:
      [v2 dismissViewControllerAnimated:1 completion:0];
      break;
  }
  return sub_100028108((uint64_t)v6);
}

uint64_t sub_10027FA7C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10027FAF4(uint64_t a1, uint64_t a2)
{
  id v3 = (void *)(v2 + qword_1006B8260);
  uint64_t v4 = *(void *)(v2 + qword_1006B8260);
  void *v3 = a1;
  v3[1] = a2;
  return sub_100036B90(v4);
}

uint64_t sub_10027FB14()
{
  return *(unsigned __int8 *)(v0 + qword_1006B8268);
}

uint64_t sub_10027FB24(uint64_t result)
{
  *(unsigned char *)(v1 + qword_1006B8268) = result;
  return result;
}

void sub_10027FB34()
{
  sub_10027FC1C();
  sub_10027FB68();
  sub_10027FEEC();
  sub_10028061C();

  sub_100280700();
}

void sub_10027FB68()
{
  id v1 = [self defaultCenter];
  [v1 addObserver:v0 selector:"adjustForKeyboardWithNotification:" name:UIKeyboardWillHideNotification object:0];
  [v1 addObserver:v0 selector:"adjustForKeyboardWithNotification:" name:UIKeyboardWillChangeFrameNotification object:0];
}

void sub_10027FC1C()
{
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = *(char **)&v0[qword_1006B8230];
    [v1 addSubview:v3];

    uint64_t v4 = OBJC_IVAR____TtC6FindMy12FMScrollView_content;
    uint64_t v5 = *(void **)&v0[qword_1006B8238];
    [*(id *)&v3[OBJC_IVAR____TtC6FindMy12FMScrollView_content] addSubview:v5];
    [v3 setDelegate:v0];
    [v3 setPreservesSuperviewLayoutMargins:1];
    [v3 setContentInsetAdjustmentBehavior:3];
    [*(id *)&v3[v4] setPreservesSuperviewLayoutMargins:1];
    [v5 setAxis:1];
    [v5 setLayoutMarginsRelativeArrangement:1];
    [v5 setDirectionalLayoutMargins:0.0, 4.0, 0.0, 4.0];
    id v6 = [objc_allocWithZone((Class)UIView) init];
    LODWORD(v7) = 1132068864;
    [v6 setContentHuggingPriority:1 forAxis:v7];
    LODWORD(v8) = 1132068864;
    [v6 setContentCompressionResistancePriority:1 forAxis:v8];
    id v9 = *(void **)&v0[qword_1006B8240];
    uint64_t v10 = *(void **)&v0[qword_1006B8250];
    id v11 = *(void **)&v0[qword_1006B8238];
    id v12 = *(id *)&v0[qword_1006B8248];
    id v13 = v9;
    id v14 = v6;
    id v15 = v10;
    [v11 addArrangedSubview:v12];

    id v16 = *(void **)&v0[qword_1006B8238];
    id v17 = v13;
    [v16 addArrangedSubview:v17];

    uint64_t v18 = *(void **)&v0[qword_1006B8238];
    id v21 = v14;
    [v18 addArrangedSubview:v21];

    id v19 = *(void **)&v0[qword_1006B8238];
    id v20 = v15;
    [v19 addArrangedSubview:v20];

    [v5 setCustomSpacing:v17 afterView:0.0];
  }
  else
  {
    __break(1u);
  }
}

void sub_10027FEEC()
{
  id v1 = *(void **)&v0[qword_1006B8238];
  uint64_t v2 = *(void **)&v0[qword_1006B8248];
  id v3 = *(void **)&v0[qword_1006B8240];
  uint64_t v4 = *(void **)&v0[qword_1006B8250];
  uint64_t v5 = (char *)*(id *)&v0[qword_1006B8230];
  id v6 = v1;
  id v7 = v2;
  id v8 = v3;
  id v9 = v4;
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];

  sub_10005D034(&qword_1006AF2D0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10055B950;
  id v11 = [v5 leadingAnchor];
  id v12 = [v0 view];
  if (!v12)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v13 = v12;
  id v14 = [v12 leadingAnchor];

  id v15 = [v11 constraintEqualToAnchor:v14];
  *(void *)(v10 + 32) = v15;
  id v16 = [v5 trailingAnchor];
  id v17 = [v0 view];
  if (!v17)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v18 = v17;
  id v19 = [v17 trailingAnchor];

  id v20 = [v16 constraintEqualToAnchor:v19];
  *(void *)(v10 + 40) = v20;
  id v21 = [v5 topAnchor];
  id v22 = [v0 view];
  if (!v22)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v23 = v22;
  id v24 = [v22 topAnchor];

  id v25 = [v21 constraintEqualToAnchor:v24];
  *(void *)(v10 + 48) = v25;
  id v26 = [v5 bottomAnchor];
  id v27 = [v0 view];
  if (!v27)
  {
LABEL_11:
    __break(1u);
    return;
  }
  uint64_t v28 = v27;
  uint64_t v29 = self;
  id v30 = [v28 bottomAnchor];

  id v31 = [v26 constraintEqualToAnchor:v30];
  *(void *)(v10 + 56) = v31;
  specialized Array._endMutation()();
  sub_100006060(0, (unint64_t *)&qword_1006AEE60);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v33 = v29;
  id v60 = v29;
  [v29 activateConstraints:isa];

  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_10055C1E0;
  uint64_t v35 = OBJC_IVAR____TtC6FindMy12FMScrollView_content;
  id v36 = [*(id *)&v5[OBJC_IVAR____TtC6FindMy12FMScrollView_content] widthAnchor];
  id v37 = [v5 widthAnchor];
  id v38 = [v36 constraintEqualToAnchor:v37];

  *(void *)(v34 + 32) = v38;
  id v39 = [*(id *)&v5[v35] heightAnchor];
  id v40 = [v5 layoutMarginsGuide];
  id v41 = [v40 heightAnchor];

  id v42 = [v39 constraintEqualToAnchor:v41];
  LODWORD(v43) = 1132068864;
  [v42 setPriority:v43];
  *(void *)(v34 + 40) = v42;
  specialized Array._endMutation()();
  Class v44 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v33 activateConstraints:v44];

  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_10055B950;
  id v46 = [v6 leadingAnchor];
  id v47 = [*(id *)&v5[v35] layoutMarginsGuide];
  id v48 = [v47 leadingAnchor];

  id v49 = [v46 constraintEqualToAnchor:v48];
  *(void *)(v45 + 32) = v49;
  id v50 = [v6 trailingAnchor];
  id v51 = [*(id *)&v5[v35] layoutMarginsGuide];
  id v52 = [v51 trailingAnchor];

  id v53 = [v50 constraintEqualToAnchor:v52];
  *(void *)(v45 + 40) = v53;
  id v54 = [v6 topAnchor];
  id v55 = [*(id *)&v5[v35] topAnchor];
  id v56 = [v54 constraintEqualToAnchor:v55];

  *(void *)(v45 + 48) = v56;
  id v57 = [v6 bottomAnchor];
  id v58 = [*(id *)&v5[v35] bottomAnchor];
  id v59 = [v57 constraintEqualToAnchor:v58];

  *(void *)(v45 + 56) = v59;
  specialized Array._endMutation()();
  v61.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v60 activateConstraints:v61.super.isa];
}

void sub_10028061C()
{
  id v1 = objc_allocWithZone((Class)UIBarButtonItem);
  type metadata accessor for FMProductActionBaseViewController();
  id v2 = [v1 initWithBarButtonSystemItem:1 target:_bridgeAnythingToObjectiveC<A>(_:)() action:"cancelActionWithSender:"];
  swift_unknownObjectRelease();
  id v3 = [v0 navigationItem];
  [v3 setLeftBarButtonItem:v2];
}

void sub_100280700()
{
  id v1 = [v0 view];
  if (v1)
  {
    id v2 = v1;
    id v3 = [self systemBackgroundColor];
    [v2 setBackgroundColor:v3];
  }
  else
  {
    __break(1u);
  }
}

id sub_100280798()
{
  if (*(unsigned char *)(v0 + qword_1006B8268) == 1)
  {
    id result = [*(id *)(v0 + qword_1006B8230) flashScrollIndicators];
    *(unsigned char *)(v0 + qword_1006B8268) = 0;
  }
  return result;
}

uint64_t sub_1002807E8()
{
  id v1 = v0;
  uint64_t v2 = Notification.userInfo.getter();
  if (!v2)
  {
    long long v35 = 0u;
    long long v36 = 0u;
    return sub_100067244((uint64_t)&v35);
  }
  uint64_t v3 = v2;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_10002953C((uint64_t)v34), (v5 & 1) != 0))
  {
    sub_1000607C8(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v35);
  }
  else
  {
    long long v35 = 0u;
    long long v36 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1000294E8((uint64_t)v34);
  if (!*((void *)&v36 + 1)) {
    return sub_100067244((uint64_t)&v35);
  }
  sub_100006060(0, &qword_1006B82F8);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    id v7 = v34[0];
    [v34[0] CGRectValue];
    double v9 = v8;
    double v11 = v10;
    double v13 = v12;
    double v15 = v14;
    uint64_t result = (uint64_t)[v1 view];
    if (result)
    {
      id v16 = (void *)result;
      id v17 = [(id)result window];

      if (!v17
        || (id v18 = [v17 screen],
            v17,
            id v19 = [v18 coordinateSpace],
            v18,
            !v19))
      {
        id v20 = [self mainScreen];
        id v19 = [v20 coordinateSpace];
      }
      id v21 = *(void **)&v1[qword_1006B8230];
      objc_msgSend(v19, "convertRect:toCoordinateSpace:", objc_msgSend(v21, "coordinateSpace"), v9, v11, v13, v15);
      CGFloat v23 = v22;
      CGFloat v25 = v24;
      CGFloat v27 = v26;
      CGFloat v29 = v28;
      swift_unknownObjectRelease();
      [v21 bounds];
      v40.origin.x = v30;
      v40.origin.y = v31;
      v40.size.width = v32;
      v40.size.height = v33;
      v37.origin.x = v23;
      v37.origin.y = v25;
      v37.size.width = v27;
      v37.size.height = v29;
      if (CGRectIntersectsRect(v37, v40))
      {
        [v21 bounds];
        CGRectGetMaxY(v38);
        v39.origin.x = v23;
        v39.origin.y = v25;
        v39.size.width = v27;
        v39.size.height = v29;
        CGRectGetMinY(v39);
      }
      [v21 contentInset];
      [v21 setContentInset:];
      [v21 contentInset];
      [v21 setScrollIndicatorInsets:];

      return swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100280B0C(uint64_t result)
{
  uint64_t v2 = *(void (**)(uint64_t))(v1 + qword_1006B8260);
  if (v2)
  {
    uint64_t v3 = result;
    sub_1000B7838((uint64_t)v2);
    v2(v3);
    return sub_100036B90((uint64_t)v2);
  }
  return result;
}

void sub_100280B8C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_10028144C();
}

void sub_100280BB4()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for FMProductActionBaseViewController();
  [super viewDidLoad];
  sub_10027FB34();
}

void sub_100280C14(void *a1)
{
  id v1 = a1;
  sub_100280BB4();
}

id sub_100280C5C(char a1)
{
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for FMProductActionBaseViewController();
  id result = [super viewWillAppear:a1 & 1];
  unint64_t v4 = *(void (**)(uint64_t))&v1[qword_1006B8260];
  if (v4)
  {
    uint64_t v5 = *(void *)&v1[qword_1006B8230];
    sub_1000B7838((uint64_t)v4);
    v4(v5);
    return (id)sub_100036B90((uint64_t)v4);
  }
  return result;
}

void sub_100280D1C(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_100280C5C(a3);
}

id sub_100280D70(char a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for FMProductActionBaseViewController();
  id result = [super viewDidAppear:a1 & 1];
  if (v1[qword_1006B8268] == 1)
  {
    id result = [*(id *)&v1[qword_1006B8230] flashScrollIndicators];
    v1[qword_1006B8268] = 0;
  }
  return result;
}

void sub_100280E10(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_100280D70(a3);
}

void sub_100280E64()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for FMProductActionBaseViewController();
  [super viewLayoutMarginsDidChange];
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    [v1 safeAreaInsets];
    double v4 = v3;

    if (v4 == 0.0)
    {
      [v0 systemMinimumLayoutMargins];
      [v0 additionalSafeAreaInsets];
      [v0 setAdditionalSafeAreaInsets:];
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100280F48(void *a1)
{
  id v1 = a1;
  sub_100280E64();
}

id sub_100280F90()
{
  return sub_100281264((SEL *)&selRef_viewDidLayoutSubviews);
}

void sub_100280F9C(void *a1)
{
  id v1 = a1;
  sub_100281264((SEL *)&selRef_viewDidLayoutSubviews);
}

void sub_100280FF0(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_10028159C();
}

void sub_100281050(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1002813A4();
}

uint64_t sub_1002810B0(void *a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  id v6 = a1;
  sub_1002807E8();

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_100281198(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_100280B0C((uint64_t)v4);
}

void sub_100281200(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4 = a4;

  sub_1002815A0();
}

id sub_100281258()
{
  return sub_100281264((SEL *)&selRef_dealloc);
}

id sub_100281264(SEL *a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for FMProductActionBaseViewController();
  return [super a1];
}

uint64_t sub_1002812C8(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void *)(a1 + qword_1006B8260);

  return sub_100036B90(v2);
}

uint64_t type metadata accessor for FMProductActionBaseViewController()
{
  return sub_100040E58();
}

uint64_t sub_100281380(uint64_t a1, uint64_t a2)
{
  return sub_10027FAF4(a1, a2);
}

void sub_1002813A4()
{
  v2[4] = State.rawValue.getter;
  v2[5] = 0;
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 1107296256;
  v2[2] = sub_10003C410;
  v2[3] = &unk_10062FF38;
  id v1 = _Block_copy(v2);
  [v0 dismissViewControllerAnimated:1 completion:v1];
  _Block_release(v1);
}

void sub_10028144C()
{
  uint64_t v1 = qword_1006B8230;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)type metadata accessor for FMScrollView()) init];
  uint64_t v2 = qword_1006B8238;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v3 = qword_1006B8240;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v4 = qword_1006B8248;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)type metadata accessor for FMProductActionHeaderView()) init];
  uint64_t v5 = qword_1006B8250;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)UIView) init];
  id v6 = &v0[qword_1006B8260];
  *id v6 = 0;
  v6[1] = 0;
  v0[qword_1006B8268] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1002815A0()
{
}

uint64_t PushAlert.body.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void *FMItemShareViewModel.image.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

uint64_t FMItemShareViewModel.expiry.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMItemShareViewModel() + 28);

  return sub_1002816B8(v3, a1);
}

uint64_t type metadata accessor for FMItemShareViewModel()
{
  uint64_t result = qword_1006B8360;
  if (!qword_1006B8360) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002816B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void FMItemShareViewModel.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  double v9 = *(void **)(v0 + 32);
  if (v9)
  {
    Hasher._combine(_:)(1u);
    id v10 = v9;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  uint64_t v11 = type metadata accessor for FMItemShareViewModel();
  sub_1002816B8(v1 + *(int *)(v11 + 28), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    Hasher._combine(_:)(1u);
    sub_100282BB0(&qword_1006B0B30, (void (*)(uint64_t))&type metadata accessor for Date);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

Swift::Int FMItemShareViewModel.hashValue.getter()
{
  return Hasher._finalize()();
}

Swift::Int sub_1002819C8()
{
  return Hasher._finalize()();
}

uint64_t _s6FindMy20FMItemShareViewModelV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v54 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v50 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
  __chkstk_darwin(v6 - 8);
  uint64_t v51 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_10005D034((uint64_t *)&unk_1006AF7E0);
  __chkstk_darwin(v52);
  uint64_t v53 = (uint64_t)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMItemShareViewModel();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  double v15 = (char *)&v50 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  id v18 = (char *)&v50 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  id v21 = (char *)&v50 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  double v24 = (char *)&v50 - v23;
  __chkstk_darwin(v22);
  double v26 = (char *)&v50 - v25;
  uint64_t v27 = a1[1];
  uint64_t v28 = a2[1];
  BOOL v30 = *a1 == *a2;
  uint64_t v55 = v4;
  if (v30 && v27 == v28)
  {
    sub_100282AF0((uint64_t)a1, (uint64_t)&v50 - v25);
    sub_100282AF0((uint64_t)a2, (uint64_t)v24);
  }
  else
  {
    char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_100282AF0((uint64_t)a1, (uint64_t)v26);
    sub_100282AF0((uint64_t)a2, (uint64_t)v24);
    if ((v29 & 1) == 0)
    {
      sub_100282B54((uint64_t)v26);
      sub_100282B54((uint64_t)v24);
      sub_100282AF0((uint64_t)a1, (uint64_t)v21);
      sub_100282AF0((uint64_t)a2, (uint64_t)v18);
LABEL_18:
      sub_100282B54((uint64_t)v18);
      sub_100282B54((uint64_t)v21);
LABEL_26:
      sub_100282AF0((uint64_t)a1, (uint64_t)v15);
      sub_100282AF0((uint64_t)a2, (uint64_t)v12);
LABEL_27:
      sub_100282B54((uint64_t)v12);
      sub_100282B54((uint64_t)v15);
LABEL_28:
      char v45 = 0;
      return v45 & 1;
    }
  }
  BOOL v30 = *((void *)v26 + 2) == *((void *)v24 + 2) && *((void *)v26 + 3) == *((void *)v24 + 3);
  if (v30)
  {
    sub_100282B54((uint64_t)v26);
    sub_100282B54((uint64_t)v24);
    sub_100282AF0((uint64_t)a1, (uint64_t)v21);
    sub_100282AF0((uint64_t)a2, (uint64_t)v18);
  }
  else
  {
    char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_100282B54((uint64_t)v26);
    sub_100282B54((uint64_t)v24);
    sub_100282AF0((uint64_t)a1, (uint64_t)v21);
    sub_100282AF0((uint64_t)a2, (uint64_t)v18);
    if ((v31 & 1) == 0) {
      goto LABEL_18;
    }
  }
  CGFloat v32 = (void *)*((void *)v21 + 4);
  CGFloat v33 = (void *)*((void *)v18 + 4);
  if (!v32)
  {
    id v37 = v33;
    sub_100282B54((uint64_t)v18);
    sub_100282B54((uint64_t)v21);
    if (!v33)
    {
      sub_100282AF0((uint64_t)a1, (uint64_t)v15);
      sub_100282AF0((uint64_t)a2, (uint64_t)v12);
      goto LABEL_21;
    }
LABEL_25:

    goto LABEL_26;
  }
  if (!v33)
  {
    id v37 = v32;
    sub_100282B54((uint64_t)v18);
    sub_100282B54((uint64_t)v21);
    goto LABEL_25;
  }
  sub_10014B9EC();
  id v34 = v33;
  id v35 = v32;
  char v36 = static NSObject.== infix(_:_:)();
  sub_100282B54((uint64_t)v18);
  sub_100282B54((uint64_t)v21);

  sub_100282AF0((uint64_t)a1, (uint64_t)v15);
  sub_100282AF0((uint64_t)a2, (uint64_t)v12);
  if ((v36 & 1) == 0) {
    goto LABEL_27;
  }
LABEL_21:
  uint64_t v38 = *(int *)(v9 + 28);
  uint64_t v39 = (uint64_t)&v12[v38];
  uint64_t v40 = v53;
  uint64_t v41 = v53 + *(int *)(v52 + 48);
  sub_1002816B8((uint64_t)&v15[v38], v53);
  sub_1002816B8(v39, v41);
  uint64_t v43 = v54;
  uint64_t v42 = v55;
  Class v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
  if (v44(v40, 1, v55) != 1)
  {
    uint64_t v47 = v51;
    sub_1002816B8(v40, v51);
    if (v44(v41, 1, v42) != 1)
    {
      id v48 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v50, v41, v42);
      sub_100282BB0((unint64_t *)&qword_1006C0420, (void (*)(uint64_t))&type metadata accessor for Date);
      char v45 = dispatch thunk of static Equatable.== infix(_:_:)();
      id v49 = *(void (**)(char *, uint64_t))(v43 + 8);
      v49(v48, v42);
      sub_100282B54((uint64_t)v12);
      sub_100282B54((uint64_t)v15);
      v49((char *)v47, v42);
      sub_100003F10(v40, (uint64_t *)&unk_1006AF6E0);
      return v45 & 1;
    }
    sub_100282B54((uint64_t)v12);
    sub_100282B54((uint64_t)v15);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v47, v42);
    goto LABEL_32;
  }
  sub_100282B54((uint64_t)v12);
  sub_100282B54((uint64_t)v15);
  if (v44(v41, 1, v42) != 1)
  {
LABEL_32:
    sub_100003F10(v40, (uint64_t *)&unk_1006AF7E0);
    goto LABEL_28;
  }
  sub_100003F10(v40, (uint64_t *)&unk_1006AF6E0);
  char v45 = 1;
  return v45 & 1;
}

uint64_t sub_10028202C()
{
  return sub_100282BB0(&qword_1006B8300, (void (*)(uint64_t))type metadata accessor for FMItemShareViewModel);
}

uint64_t *initializeBufferWithCopyOfBuffer for FMItemShareViewModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v16 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = (void *)a2[4];
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    a1[4] = (uint64_t)v7;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v7;
    if (v13(v10, 1, v11))
    {
      uint64_t v15 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return v3;
}

uint64_t destroy for FMItemShareViewModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for FMItemShareViewModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = (void *)a2[4];
  a1[4] = v6;
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v13 = v6;
  if (v12(v9, 1, v10))
  {
    uint64_t v14 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

void *assignWithCopy for FMItemShareViewModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)a1[4];
  uint64_t v7 = (void *)a2[4];
  a1[4] = v7;
  id v8 = v7;

  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t initializeWithTake for FMItemShareViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithTake for FMItemShareViewModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)a1[4];
  a1[4] = a2[4];

  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMItemShareViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002828D8);
}

uint64_t sub_1002828D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FMItemShareViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002829A0);
}

uint64_t sub_1002829A0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100282A4C()
{
  sub_10006A494();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100282AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMItemShareViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100282B54(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMItemShareViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100282BB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100282BF8()
{
  unint64_t v0 = self;
  id v1 = [v0 defaultSessionConfiguration];
  [v1 setHTTPShouldUsePipelining:1];
  id v2 = [v0 defaultSessionConfiguration];
  id v3 = [self sessionWithConfiguration:v2];

  qword_1006B83A0 = (uint64_t)v3;
}

uint64_t sub_100282CA4()
{
  v1[8] = v0;
  uint64_t v2 = type metadata accessor for URL();
  v1[9] = v2;
  v1[10] = *(void *)(v2 - 8);
  v1[11] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URLRequest();
  v1[12] = v3;
  v1[13] = *(void *)(v3 - 8);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_100282DD0, 0, 0);
}

uint64_t sub_100282DD0()
{
  if (qword_1006AE0B8 != -1) {
    swift_once();
  }
  (*(void (**)(void, uint64_t, void))(v0[10] + 16))(v0[11], v0[8] + qword_1006B83A8, v0[9]);
  URLRequest.init(url:cachePolicy:timeoutInterval:)();
  id v1 = (void *)swift_task_alloc();
  v0[16] = v1;
  void *v1 = v0;
  v1[1] = sub_100282EF0;
  uint64_t v2 = v0[15];
  return NSURLSession.data(for:delegate:)(v2, 0);
}

uint64_t sub_100282EF0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (void *)*v4;
  uint64_t v6[2] = v4;
  v6[3] = a1;
  v6[4] = a2;
  v6[5] = a3;
  v6[6] = v3;
  v6[17] = v3;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v7 = sub_1002832C0;
  }
  else
  {

    uint64_t v7 = sub_100283018;
  }
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(v7, 0, 0);
}

uint64_t sub_100283018()
{
  id v18 = v0;
  (*(void (**)(void, void, void))(v0[13] + 16))(v0[14], v0[15], v0[12]);
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000606BC(v2, (uint64_t)qword_1006D1E98);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = v1;
  if (os_log_type_enabled(v3, v1))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    v17[0] = v6;
    v17[1] = 0;
    v17[2] = 0xE000000000000000;
    _StringGuts.grow(_:)(44);
    v7._unint64_t object = (void *)0x800000010058FDF0;
    v7._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
    String.append(_:)(v7);
    sub_1002837F4();
    v8._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v8);
    swift_bridgeObjectRelease();
    v9._uint64_t countAndFlagsBits = 0;
    v9._unint64_t object = (void *)0xE000000000000000;
    String.append(_:)(v9);
    v0[7] = sub_1000606F4(0, 0xE000000000000000, v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMDiscoveredAccessoryImageDownloadOperation: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v11 = v0[3];
  uint64_t v10 = v0[4];
  uint64_t v12 = v0[15];
  uint64_t v13 = v0[12];
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v0[13] + 8);
  v14(v0[14], v13);
  v14(v12, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v15 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v15(v11, v10);
}

uint64_t sub_1002832C0()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  swift_errorRetain();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  sub_1002835D0(v4);
  swift_errorRelease();
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

void sub_100283394()
{
}

uint64_t sub_1002833C4()
{
  return sub_1000C2E74(v0 + qword_1006B83A8);
}

id sub_1002833D4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAccessoryProductImageDownloadOperation();
  return [super dealloc];
}

uint64_t sub_10028340C(uint64_t a1)
{
  return sub_1000C2E74(a1 + qword_1006B83A8);
}

uint64_t sub_10028341C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  objc_super v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *objc_super v2 = v1;
  v2[1] = sub_1002834AC;
  return sub_100282CA4();
}

uint64_t sub_1002834AC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  if (!v2)
  {
    Swift::String v8 = *(void **)(v6 + 16);
    *Swift::String v8 = a1;
    v8[1] = a2;
  }
  Swift::String v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

uint64_t sub_1002835C8()
{
  return type metadata accessor for FMAccessoryProductImageDownloadOperation();
}

void sub_1002835D0(os_log_type_t a1)
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000606BC(v2, (uint64_t)qword_1006D1E98);
  os_log_type_t v3 = a1;
  log = Logger.logObject.getter();
  if (os_log_type_enabled(log, a1))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v9 = v5;
    _StringGuts.grow(_:)(41);
    v6._unint64_t object = (void *)0x800000010058FE20;
    v6._uint64_t countAndFlagsBits = 0xD000000000000027;
    String.append(_:)(v6);
    sub_10005D034((uint64_t *)&unk_1006AEEE0);
    _print_unlocked<A, B>(_:_:)();
    v7._uint64_t countAndFlagsBits = 0;
    v7._unint64_t object = (void *)0xE000000000000000;
    String.append(_:)(v7);
    sub_1000606F4(0, 0xE000000000000000, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v3, "FMDiscoveredAccessoryImageDownloadOperation: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

unint64_t sub_1002837F4()
{
  unint64_t result = qword_1006B8528;
  if (!qword_1006B8528)
  {
    type metadata accessor for URLRequest();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B8528);
  }
  return result;
}

void sub_100283874()
{
  id v1 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"handleStatusRowTap"];
  [*(id *)(v0 + OBJC_IVAR____TtC6FindMy22FMDeviceMarkAsLostView_lostStatusRow) addGestureRecognizer:v1];
}

uint64_t sub_1002838F4()
{
  uint64_t v1 = v0;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000606BC(v2, (uint64_t)qword_1006D1E98);
  os_log_type_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMDeviceMarkAsLostview: User pressed activate notify me", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = v1 + OBJC_IVAR____TtC6FindMy22FMDeviceMarkAsLostView_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v8 = *(void *)(v6 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 8))(v1, ObjectType, v8);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_100283B28()
{
  sub_100068760(v0 + OBJC_IVAR____TtC6FindMy22FMDeviceMarkAsLostView_delegate);
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy22FMDeviceMarkAsLostView_lostStatusRow);
}

id sub_100283B68()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMDeviceMarkAsLostView();
  return [super dealloc];
}

uint64_t type metadata accessor for FMDeviceMarkAsLostView()
{
  return self;
}

void sub_100283C0C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10005D034((uint64_t *)&unk_1006C0CE0);
  __chkstk_darwin(v2 - 8);
  os_log_type_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v1[OBJC_IVAR____TtC6FindMy22FMDeviceMarkAsLostView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v5 = OBJC_IVAR____TtC6FindMy22FMDeviceMarkAsLostView_lostStatusRow;
  uint64_t v6 = type metadata accessor for FMPlatterIcon();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  if (qword_1006AE228 != -1) {
    swift_once();
  }
  double v7 = *(double *)&qword_1006D20C8;
  id v8 = objc_allocWithZone((Class)type metadata accessor for FMMultiSettingsRowView());
  *(void *)&v1[v5] = sub_1004FC584(0, 0, 0, (uint64_t)v4, 1, 0, 1, v7);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

unint64_t sub_100283DEC(void *a1)
{
  uint64_t v2 = v1;
  if (IndexPath.row.getter()) {
    goto LABEL_2;
  }
  id v20 = [v1 navigationItem];
  uint64_t v21 = (uint64_t)[v20 searchController];

  if (v21)
  {
    id v22 = [(id)v21 searchBar];

    id v23 = [v22 text];
    if (v23)
    {
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v25 = v24;

      goto LABEL_27;
    }
    uint64_t v21 = 0;
  }
  unint64_t v25 = 0xE000000000000000;
LABEL_27:
  swift_bridgeObjectRelease();
  uint64_t v33 = HIBYTE(v25) & 0xF;
  if ((v25 & 0x2000000000000000) == 0) {
    uint64_t v33 = v21 & 0xFFFFFFFFFFFFLL;
  }
  if (v33)
  {
    NSString v34 = String._bridgeToObjectiveC()();
    uint64_t v6 = (char *)[a1 dequeueReusableCellWithIdentifier:v34];

    if (!v6)
    {
      id v35 = objc_allocWithZone((Class)UITableViewCell);
      NSString v36 = String._bridgeToObjectiveC()();
      uint64_t v6 = (char *)[v35 initWithStyle:0 reuseIdentifier:v36];
    }
    id v37 = [v6 textLabel];
    if (v37)
    {
      uint64_t v38 = v37;
      [v37 setText:0];
    }
    id v39 = [v6 detailTextLabel];
    if (v39)
    {
      uint64_t v40 = v39;
      [v39 setText:0];
    }
    [v6 setAccessoryView:0];
    id v41 = [v6 textLabel];
    if (v41)
    {
      uint64_t v42 = v41;
      id v43 = [v2 navigationItem];
      id v44 = [v43 searchController];

      if (v44)
      {
        id v45 = [v44 searchBar];

        id v46 = [v45 text];
        if (v46)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
      }
      NSString v47 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v42 setText:v47];
    }
    id v48 = [v6 imageView];
    if (v48)
    {
      id v49 = v48;
      NSString v50 = String._bridgeToObjectiveC()();
      id v51 = [self imageNamed:v50];

      [v49 setImage:v51];
    }
    return (unint64_t)v6;
  }
LABEL_2:
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [a1 dequeueReusableCellWithIdentifier:v4];

  if (!v5)
  {
LABEL_5:
    id v7 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapTableViewCell());
    NSString v8 = String._bridgeToObjectiveC()();
    uint64_t v6 = (char *)[v7 initWithStyle:3 reuseIdentifier:v8];

    goto LABEL_6;
  }
  type metadata accessor for FMFenceMapTableViewCell();
  uint64_t v6 = (char *)swift_dynamicCastClass();
  if (!v6)
  {

    goto LABEL_5;
  }
LABEL_6:
  id v9 = [v1 tableView:a1 numberOfRowsInSection:IndexPath.section.getter()];
  if (IndexPath.row.getter() >= (uint64_t)v9
    || (uint64_t v10 = *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_filteredSearchRecords]) == 0)
  {
    uint64_t v19 = *(void **)&v6[OBJC_IVAR____TtC6FindMy23FMFenceMapTableViewCell_record];
    *(void *)&v6[OBJC_IVAR____TtC6FindMy23FMFenceMapTableViewCell_record] = 0;

    sub_1003D9840();
    return (unint64_t)v6;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = IndexPath.row.getter();
  id v12 = [v2 navigationItem];
  id v13 = [v12 searchController];

  if (v13)
  {
    id v14 = [v13 searchBar];

    id v15 = [v14 text];
    if (v15)
    {
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v18 = v17;

      id v15 = (id)(v16 & 0xFFFFFFFFFFFFLL);
      goto LABEL_17;
    }
  }
  else
  {
    id v15 = 0;
  }
  unint64_t v18 = 0xE000000000000000;
LABEL_17:
  swift_bridgeObjectRelease();
  uint64_t v26 = HIBYTE(v18) & 0xF;
  if ((v18 & 0x2000000000000000) == 0) {
    uint64_t v26 = (uint64_t)v15;
  }
  BOOL v27 = v26 != 0;
  unint64_t result = v11 - v27;
  if (__OFSUB__(v11, v27))
  {
    __break(1u);
    goto LABEL_45;
  }
  if ((v10 & 0xC000000000000001) != 0)
  {
LABEL_45:
    id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_24;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v29 = *(id *)(v10 + 8 * result + 32);
LABEL_24:
    BOOL v30 = v29;
    swift_bridgeObjectRelease();
    char v31 = *(void **)&v6[OBJC_IVAR____TtC6FindMy23FMFenceMapTableViewCell_record];
    *(void *)&v6[OBJC_IVAR____TtC6FindMy23FMFenceMapTableViewCell_record] = v30;
    id v32 = v30;

    sub_1003D9840();
    return (unint64_t)v6;
  }
  __break(1u);
  return result;
}

void sub_1002845D4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v80 = *(void *)(v4 - 8);
  uint64_t v81 = v4;
  __chkstk_darwin(v4);
  uint64_t v79 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v77 = *(void *)(v6 - 8);
  uint64_t v78 = v6;
  __chkstk_darwin(v6);
  uint64_t v75 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for DispatchQoS();
  uint64_t v74 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  id v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)type metadata accessor for FMFLocationAlertAddressType();
  uint64_t v11 = *(v10 - 1);
  __chkstk_darwin(v10);
  id v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = (SEL *)&selRef_tableView_viewForFooterInSection_;
  id v15 = &selRef_handleFavorite;
  if (IndexPath.row.getter()) {
    goto LABEL_2;
  }
  id v26 = [v1 navigationItem];
  uint64_t v27 = (uint64_t)[v26 searchController];

  if (v27)
  {
    id v28 = [(id)v27 searchBar];

    id v29 = [v28 text];
    if (v29)
    {
      uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v31 = v30;

      goto LABEL_27;
    }
    uint64_t v27 = 0;
  }
  unint64_t v31 = 0xE000000000000000;
LABEL_27:
  id v14 = (SEL *)&selRef_tableView_viewForFooterInSection_;
  swift_bridgeObjectRelease();
  uint64_t v55 = HIBYTE(v31) & 0xF;
  if ((v31 & 0x2000000000000000) == 0) {
    uint64_t v55 = v27 & 0xFFFFFFFFFFFFLL;
  }
  id v15 = &selRef_handleFavorite;
  if (!v55)
  {
LABEL_2:
    id v16 = [v1 tableView:a1 numberOfRowsInSection:IndexPath.section.getter()];
    if (IndexPath.row.getter() >= (uint64_t)v16) {
      goto LABEL_40;
    }
    uint64_t v17 = *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_filteredSearchRecords];
    if (!v17) {
      goto LABEL_40;
    }
    swift_bridgeObjectRetain();
    uint64_t v18 = IndexPath.row.getter();
    id v19 = [v2 navigationItem];
    id v20 = [v19 searchController];

    if (v20)
    {
      id v21 = [v20 searchBar];

      id v22 = [v21 text];
      if (v22)
      {
        uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v25 = v24;

        id v22 = (id)(v23 & 0xFFFFFFFFFFFFLL);
        goto LABEL_12;
      }
    }
    else
    {
      id v22 = 0;
    }
    unint64_t v25 = 0xE000000000000000;
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v32 = HIBYTE(v25) & 0xF;
    if ((v25 & 0x2000000000000000) == 0) {
      uint64_t v32 = (uint64_t)v22;
    }
    BOOL v33 = v32 != 0;
    unint64_t v34 = v18 - v33;
    if (__OFSUB__(v18, v33))
    {
      __break(1u);
    }
    else if ((v17 & 0xC000000000000001) == 0)
    {
      if ((v34 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v34 < *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v35 = *(id *)(v17 + 8 * v34 + 32);
        goto LABEL_19;
      }
      __break(1u);
      goto LABEL_50;
    }
    id v35 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_19:
    uint64_t v10 = v35;
    swift_bridgeObjectRelease();
    NSString v36 = (void *)((char *)v10 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_coordinate);
    if ((*((unsigned char *)v10 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_coordinate + 16) & 1) == 0)
    {
      uint64_t v47 = *v36;
      uint64_t v46 = v36[1];
      uint64_t v81 = *(void *)((char *)v10 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_completedGeoWorkGroup);
      sub_10005EC68();
      id v48 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v49 = swift_allocObject();
      swift_unknownObjectWeakInit();
      NSString v50 = (void *)swift_allocObject();
      v50[2] = v49;
      v50[3] = v47;
      v50[4] = v46;
      void v50[5] = v10;
      os_log_type_t v86 = sub_10028549C;
      id v87 = v50;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      unint64_t v83 = 1107296256;
      id v84 = sub_10003C410;
      os_log_type_t v85 = &unk_10062FFB0;
      id v51 = _Block_copy(&aBlock);
      swift_retain();
      uint64_t v52 = v10;
      static DispatchQoS.unspecified.getter();
      id v88 = _swiftEmptyArrayStorage;
      sub_10005FE54();
      sub_10005D034((uint64_t *)&unk_1006AE4B0);
      sub_10005ECA8();
      uint64_t v53 = v75;
      uint64_t v54 = v78;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_group.notify(qos:flags:queue:execute:)();
      _Block_release(v51);

      (*(void (**)(char *, uint64_t))(v77 + 8))(v53, v54);
      (*(void (**)(char *, uint64_t))(v74 + 8))(v9, v76);

      swift_release();
      swift_release();
LABEL_36:
      id v15 = &selRef_handleFavorite;
      id v14 = (SEL *)&selRef_tableView_viewForFooterInSection_;
      goto LABEL_40;
    }
    if (qword_1006AE190 == -1)
    {
LABEL_21:
      uint64_t v37 = v81;
      uint64_t v38 = sub_1000606BC(v81, (uint64_t)qword_1006D1E98);
      uint64_t v40 = v79;
      uint64_t v39 = v80;
      (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v79, v38, v37);
      id v14 = v10;
      id v41 = Logger.logObject.getter();
      os_log_type_t v42 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v41, v42))
      {
        id v43 = (uint8_t *)swift_slowAlloc();
        uint64_t aBlock = swift_slowAlloc();
        *(_DWORD *)id v43 = 136315138;
        unint64_t v44 = *(unint64_t *)((char *)v14 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_displayAddress + 8);
        if (!v44) {
          goto LABEL_52;
        }
        uint64_t v45 = *(uint64_t *)((char *)v14 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_displayAddress);
        swift_bridgeObjectRetain();
        id v88 = (void *)sub_1000606F4(v45, v44, &aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v41, v42, "FMFenceMapViewController: Failed to geocode address string: %s", v43, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v80 + 8))(v79, v81);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v37);
      }
      uint64_t v62 = self;
      uint64_t aBlock = 0;
      unint64_t v83 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      id v63 = [self mainBundle];
      v89._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
      v89._unint64_t object = (void *)0x800000010058FF30;
      v64._unint64_t object = (void *)0x800000010058FF10;
      v64._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
      v65._uint64_t countAndFlagsBits = 0;
      v65._unint64_t object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v64, (Swift::String_optional)0, (NSBundle)v63, v65, v89);

      NSString v66 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v62 showSimpleAlertWithTitle:v66 message:0 sender:v2];

      goto LABEL_36;
    }
LABEL_50:
    swift_once();
    goto LABEL_21;
  }
  id v56 = [v1 navigationItem];
  id v57 = [v56 searchController];

  if (v57)
  {
    id v58 = [v57 searchBar];

    id v59 = [v58 text];
    if (v59)
    {
      id v57 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v61 = v60;
    }
    else
    {
      id v57 = 0;
      uint64_t v61 = 0xE000000000000000;
    }
    id v15 = &selRef_handleFavorite;
  }
  else
  {
    uint64_t v61 = 0xE000000000000000;
  }
  (*(void (**)(char *, void, void *))(v11 + 104))(v13, enum case for FMFLocationAlertAddressType.custom(_:), v10);
  sub_10046E108((uint64_t)v57, v61, (uint64_t)v13, 1);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void *))(v11 + 8))(v13, v10);
LABEL_40:
  id v67 = [v2 v14[190]];
  id v68 = [v67 v15[404]];

  if (v68)
  {
    id v69 = [v68 searchBar];

    [v69 resignFirstResponder];
  }
  id v70 = [v2 v14[190]];
  id v71 = [v70 v15[404]];

  if (v71)
  {
    [v71 setActive:0];
  }
  id v72 = *(void **)&v2[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView];
  if (v72)
  {
    [v72 setHidden:1];
    return;
  }
  __break(1u);
LABEL_52:

  __break(1u);
}

void sub_1002850A0(double a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_10005D034(&qword_1006AF730);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10005D034((uint64_t *)&unk_1006BF070);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v14 = (void *)Strong;
    if (*(void *)(a4 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_labelLocalizedValue + 8))
    {
      uint64_t v15 = *(void *)(a4 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_labelLocalizedValue);
      uint64_t v16 = *(void *)(a4 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_labelLocalizedValue + 8);
    }
    else
    {
      uint64_t v15 = *(void *)(a4 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_title);
      uint64_t v16 = *(void *)(a4 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_title + 8);
      swift_bridgeObjectRetain();
    }
    uint64_t v17 = a4 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_addressType;
    swift_beginAccess();
    sub_100006AB0(v17, (uint64_t)v12, (uint64_t *)&unk_1006BF070);
    uint64_t v18 = type metadata accessor for FMFLocationAlertAddressType();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v12, 1, v18) == 1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v19 = a4 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_fmfPlacemark;
      swift_beginAccess();
      sub_100006AB0(v19, (uint64_t)v9, &qword_1006AF730);
      uint64_t v20 = a4 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_radius;
      uint64_t v21 = *(void *)(a4 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_radius);
      char v22 = *(unsigned char *)(v20 + 8);
      objc_allocWithZone((Class)type metadata accessor for FMFenceMapAnnotation());
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1004841E4(v15, v16, 0, 0, 1, (uint64_t)v12, (uint64_t)v9, v21, a1, a2, v22);
      sub_100460BD8(v23);
    }
  }
}

uint64_t sub_100285424()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10028545C()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10028549C()
{
  sub_1002850A0(*(double *)(v0 + 24), *(double *)(v0 + 32), *(void *)(v0 + 16), *(void *)(v0 + 40));
}

uint64_t sub_1002854AC()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_filteredSearchRecords);
  if (v1)
  {
    if (v1 >> 62) {
      goto LABEL_15;
    }
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  else
  {
    uint64_t v2 = 0;
  }
  while (1)
  {
    id v3 = [(id)v0 navigationItem];
    id v4 = [v3 searchController];

    if (v4)
    {
      id v5 = [v4 searchBar];

      id v6 = [v5 text];
      if (v6)
      {
        uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v0 = v8;

        id v6 = (id)(v7 & 0xFFFFFFFFFFFFLL);
        goto LABEL_10;
      }
    }
    else
    {
      id v6 = 0;
    }
    unint64_t v0 = 0xE000000000000000;
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v9 = HIBYTE(v0) & 0xF;
    if ((v0 & 0x2000000000000000) == 0) {
      uint64_t v9 = (uint64_t)v6;
    }
    BOOL v10 = v9 != 0;
    uint64_t result = v2 + v10;
    if (!__OFADD__(v2, v10)) {
      return result;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
}

char *sub_1002855F4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryBackground;
  id v6 = objc_allocWithZone((Class)UIVisualEffectView);
  uint64_t v7 = v2;
  *(void *)&v2[v5] = [v6 init];
  uint64_t v8 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primarySeperator;
  *(void *)&v7[v8] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v9 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView;
  *(void *)&v7[v9] = [objc_allocWithZone((Class)type metadata accessor for FMScrollView()) init];
  uint64_t v10 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryLabel;
  *(void *)&v7[v10] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v11 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabel;
  type metadata accessor for FMCopyableLabel();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  *(void *)&v7[v11] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v13 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryLabel;
  *(void *)&v7[v13] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v14 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_actionBackground;
  *(void *)&v7[v14] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v15 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryRowStackView;
  *(void *)&v7[v15] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v16 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_headerBackground;
  *(void *)&v7[v16] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v17 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorView;
  type metadata accessor for FMBatteryWrapperView();
  *(void *)&v7[v17] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v7[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabelTopConstraint] = 0;
  *(void *)&v7[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_locatingIndicatorHeightConstraint] = 0;
  *(void *)&v7[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorHeightConstraint] = 0;
  *(void *)&v7[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollViewBottomConstraint] = 0;
  uint64_t v18 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_locatingIndicator;
  *(void *)&v7[v18] = [objc_allocWithZone((Class)UIActivityIndicatorView) init];
  v7[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_isLocating] = 0;
  *(void *)&v7[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] = a1;
  uint64_t v19 = &v7[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_styleGuide];
  long long v20 = *(_OWORD *)(a2 + 80);
  *((_OWORD *)v19 + 4) = *(_OWORD *)(a2 + 64);
  *((_OWORD *)v19 + 5) = v20;
  *((_OWORD *)v19 + 6) = *(_OWORD *)(a2 + 96);
  *((void *)v19 + 14) = *(void *)(a2 + 112);
  long long v21 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)a2;
  *((_OWORD *)v19 + 1) = v21;
  long long v22 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)v19 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)v19 + 3) = v22;
  swift_retain();

  v33.receiver = v7;
  v33.super_class = (Class)type metadata accessor for FMBaseContentViewController();
  uint64_t v23 = (char *)[v33 initWithNibName:0 bundle:0];
  uint64_t v24 = *(void **)&v23[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryLabel];
  unint64_t v25 = v23;
  id v26 = v24;
  NSString v27 = String._bridgeToObjectiveC()();
  [v26 setAccessibilityIdentifier:v27];

  id v28 = *(id *)&v25[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabel];
  NSString v29 = String._bridgeToObjectiveC()();
  [v28 setAccessibilityIdentifier:v29];

  id v30 = *(id *)&v25[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryLabel];
  NSString v31 = String._bridgeToObjectiveC()();
  [v30 setAccessibilityIdentifier:v31];

  swift_release();
  return v25;
}

id sub_100285964()
{
  unint64_t v1 = v0;
  id result = [v0 view];
  if (!result)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id v3 = result;
  [result setPreservesSuperviewLayoutMargins:1];

  id v4 = *(char **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView];
  uint64_t v5 = self;
  id v6 = [v5 clearColor];
  [v4 setBackgroundColor:v6];

  [v4 setAlwaysBounceVertical:1];
  if (qword_1006AE0C0 != -1) {
    swift_once();
  }
  uint64_t v60 = v4;
  [v4 setVerticalScrollIndicatorInsets:*(double *)&qword_1006D1AE0, 0.0, *(double *)algn_1006D1AE8, *(double *)&xmmword_1006D1AF0];
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_actionBackground];
  id v8 = [v7 layer];
  [v8 setShouldRasterize:1];

  id v9 = [v7 layer];
  id v10 = [self mainScreen];
  [v10 scale];
  double v12 = v11;

  [v9 setRasterizationScale:v12];
  id v13 = [v7 layer];
  [v13 setCornerRadius:_UISheetCornerRadius];

  id v14 = [v7 layer];
  [v14 setMasksToBounds:0];

  id v15 = [v7 layer];
  id v16 = [v5 blackColor];
  id v17 = [v16 CGColor];

  [v15 setShadowColor:v17];
  id v18 = [v7 layer];
  LODWORD(v19) = 1031127695;
  [v18 setShadowOpacity:v19];

  id v20 = [v7 layer];
  [v20 setShadowRadius:16.0];

  id v21 = [v7 layer];
  [v21 setShadowOffset:0.0, 0.0];

  id v22 = [v7 layer];
  id v23 = [v1 traitCollection];
  id v24 = [v23 userInterfaceStyle];

  unint64_t v25 = &selRef_clearColor;
  if (v24 != (id)2) {
    unint64_t v25 = &selRef_whiteColor;
  }
  id v26 = [v5 *v25];
  id v27 = [v26 CGColor];

  [v22 setBackgroundColor:v27];
  id v28 = *(void **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_locatingIndicator];
  CGAffineTransformMakeScale(&v62, 0.75, 0.75);
  uint64_t v61 = v28;
  [v28 setTransform:&v62];
  NSString v29 = *(void **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryBackground];
  id v30 = [self effectWithStyle:1100];
  [v29 setEffect:v30];

  NSString v31 = String._bridgeToObjectiveC()();
  [v29 _setGroupName:v31];

  if (qword_1006AE238 != -1) {
    swift_once();
  }
  [v29 _setCaptureView:qword_1006D2148];
  id v59 = v29;
  [v29 setAlpha:0.0];
  id v32 = [self sharedApplication];
  id v33 = [v32 preferredContentSizeCategory];

  char v34 = UIContentSizeCategory.isAccessibilityCategory.getter();
  id v35 = *(void **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryLabel];
  NSString v36 = self;
  id v37 = [v36 preferredFontForTextStyle:UIFontTextStyleTitle2];
  uint64_t v38 = (void *)sub_100042318(0x8000);

  uint64_t v39 = (void *)sub_100042318(2);
  [v35 setFont:v39];

  if (v34) {
    uint64_t v40 = 0;
  }
  else {
    uint64_t v40 = 2;
  }
  [v35 setNumberOfLines:v40];
  id v41 = [v5 labelColor];
  [v35 setTextColor:v41];

  [v35 setAdjustsFontForContentSizeCategory:1];
  os_log_type_t v42 = *(void **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primarySeperator];
  id v43 = [v5 separatorColor];
  [v42 setBackgroundColor:v43];

  id v58 = v42;
  [v42 setAlpha:0.0];
  unint64_t v44 = *(void **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabel];
  id v45 = [v36 preferredFontForTextStyle:UIFontTextStyleSubheadline];
  [v44 setFont:v45];

  [v44 setNumberOfLines:v40];
  id v46 = [v5 secondaryLabelColor];
  [v44 setTextColor:v46];

  id v57 = v44;
  [v44 setAdjustsFontForContentSizeCategory:1];
  uint64_t v47 = *(void **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryLabel];
  id v48 = [v36 preferredFontForTextStyle:UIFontTextStyleSubheadline];
  [v47 setFont:v48];

  [v47 setNumberOfLines:v40];
  id v49 = [v5 secondaryLabelColor];
  [v47 setTextColor:v49];

  [v47 setAdjustsFontForContentSizeCategory:1];
  LODWORD(v50) = 1148846080;
  [v47 setContentCompressionResistancePriority:0 forAxis:v50];
  id v51 = *(void **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryRowStackView];
  [v51 setAxis:0];
  [v51 setAlignment:3];
  [v51 setDistribution:2];
  [v51 setSpacing:*(double *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_styleGuide + 16]];
  [v51 addArrangedSubview:v47];
  [v51 addArrangedSubview:*(void *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorView]];
  [v51 addArrangedSubview:v61];
  id result = [v1 view];
  if (!result) {
    goto LABEL_17;
  }
  uint64_t v52 = result;
  [result addSubview:v60];

  id result = [v1 view];
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v53 = result;
  [result addSubview:v59];

  id result = [v1 view];
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v54 = result;
  [result addSubview:v35];

  id result = [v1 view];
  if (result)
  {
    uint64_t v55 = result;
    [result addSubview:v58];

    uint64_t v56 = OBJC_IVAR____TtC6FindMy12FMScrollView_content;
    [*(id *)&v60[OBJC_IVAR____TtC6FindMy12FMScrollView_content] addSubview:*(void *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_headerBackground]];
    [*(id *)&v60[v56] addSubview:v57];
    [*(id *)&v60[v56] addSubview:v51];
    return [*(id *)&v60[v56] addSubview:v7];
  }
LABEL_20:
  __break(1u);
  return result;
}

void sub_100286330()
{
  unint64_t v1 = v0;
  uint64_t v2 = *(char **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v203 = *(void **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryBackground];
  [v203 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v201 = *(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryLabel];
  [v201 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v197 = *(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primarySeperator];
  [v197 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v194 = *(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabel];
  [v194 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v195 = *(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryLabel];
  [v195 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v192 = *(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_locatingIndicator];
  [v192 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = *(char **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorView];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryRowStackView];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_headerBackground];
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v6 = [v2 bottomAnchor];
  id v7 = [v1 view];
  if (!v7)
  {
    __break(1u);
    goto LABEL_26;
  }
  id v8 = v7;
  id v200 = v4;
  id v9 = [v7 bottomAnchor];

  id v10 = [v6 constraintEqualToAnchor:v9];
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_10055B950;
  id v12 = [v2 topAnchor];
  id v13 = [v1 view];
  if (!v13)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v14 = v13;
  id v188 = v5;
  id v15 = [v13 topAnchor];

  id v16 = [v12 constraintEqualToAnchor:v15];
  *(void *)(v11 + 32) = v16;
  id v17 = [v2 leadingAnchor];
  id v18 = [v1 view];
  if (!v18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  double v19 = v18;
  Swift::String v190 = v3;
  id v20 = [v18 leadingAnchor];

  id v21 = [v17 constraintEqualToAnchor:v20];
  *(void *)(v11 + 40) = v21;
  id v22 = [v2 trailingAnchor];
  id v23 = [v1 view];
  if (!v23)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  id v24 = v23;
  unint64_t v25 = v2;
  id v26 = self;
  id v27 = [v24 trailingAnchor];

  id v28 = [v22 constraintEqualToAnchor:v27];
  *(void *)(v11 + 48) = v28;
  *(void *)(v11 + 56) = v10;
  specialized Array._endMutation()();
  sub_100006060(0, (unint64_t *)&qword_1006AEE60);
  id v29 = v10;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v31 = v26;
  [v26 activateConstraints:isa];

  id v32 = *(void **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollViewBottomConstraint];
  *(void *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollViewBottomConstraint] = v29;
  id v187 = v29;

  uint64_t v33 = OBJC_IVAR____TtC6FindMy12FMScrollView_content;
  id v34 = [*(id *)&v25[OBJC_IVAR____TtC6FindMy12FMScrollView_content] widthAnchor];
  id v35 = [v1 view];
  if (!v35)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  NSString v36 = v35;
  id v37 = [v35 widthAnchor];

  id v38 = [v34 constraintEqualToAnchor:v37];
  LODWORD(v39) = 1132068864;
  [v38 setPriority:v39];
  uint64_t v199 = v25;
  id v40 = [*(id *)&v25[v33] heightAnchor];
  id v41 = [v1 view];
  if (!v41)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  os_log_type_t v42 = v41;
  id v43 = [v41 heightAnchor];

  id v44 = [v40 constraintLessThanOrEqualToAnchor:v43];
  LODWORD(v45) = 1132068864;
  [v44 setPriority:v45];
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_10055C1E0;
  *(void *)(v46 + 32) = v38;
  *(void *)(v46 + 40) = v44;
  specialized Array._endMutation()();
  id v47 = v38;
  id v48 = v44;
  Class v49 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v205 = v31;
  [v31 activateConstraints:v49];

  id v50 = [v201 trailingAnchor];
  id v51 = [v1 view];
  if (!v51)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v52 = v51;
  uint64_t v185 = v48;
  char v186 = v47;
  id v53 = [v51 layoutMarginsGuide];

  id v54 = [v53 trailingAnchor];
  uint64_t v204 = (double *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_styleGuide];
  id v55 = [v50 constraintEqualToAnchor:v54 constant:-*(double *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_styleGuide]];

  LODWORD(v56) = 1144750080;
  Swift::String v189 = v55;
  [v55 setPriority:v56];
  uint64_t v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = xmmword_10055B950;
  id v58 = [v203 topAnchor];
  id v59 = [v1 view];
  if (!v59)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v60 = v59;
  id v61 = [v59 topAnchor];

  id v62 = [v58 constraintEqualToAnchor:v61];
  *(void *)(v57 + 32) = v62;
  id v63 = [v203 leadingAnchor];
  id v64 = [v1 view];
  if (!v64)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  Swift::String v65 = v64;
  id v66 = [v64 leadingAnchor];

  id v67 = [v63 constraintEqualToAnchor:v66];
  *(void *)(v57 + 40) = v67;
  id v68 = [v203 trailingAnchor];
  id v69 = [v1 view];
  if (!v69)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  id v70 = v69;
  id v71 = [v69 trailingAnchor];

  id v72 = [v68 constraintEqualToAnchor:v71];
  *(void *)(v57 + 48) = v72;
  id v73 = [v203 bottomAnchor];
  id v74 = [v201 bottomAnchor];
  double v75 = v204[8];
  id v76 = [v73 constraintEqualToAnchor:v74 constant:v75];

  *(void *)(v57 + 56) = v76;
  specialized Array._endMutation()();
  Class v77 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v205 activateConstraints:v77];

  uint64_t v78 = swift_allocObject();
  *(_OWORD *)(v78 + 16) = xmmword_10055B950;
  id v79 = [v197 topAnchor];
  id v80 = [v203 bottomAnchor];
  id v81 = [v79 constraintEqualToAnchor:v80];

  *(void *)(v78 + 32) = v81;
  id v82 = [v197 leadingAnchor];
  id v83 = [v1 view];
  if (!v83)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  id v84 = v83;
  id v85 = [v83 leadingAnchor];

  id v86 = [v82 constraintEqualToAnchor:v85];
  *(void *)(v78 + 40) = v86;
  id v87 = [v197 trailingAnchor];
  id v88 = [v1 view];
  if (!v88)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  Swift::String v89 = v88;
  id v90 = [v88 trailingAnchor];

  id v91 = [v87 constraintEqualToAnchor:v90];
  *(void *)(v78 + 48) = v91;
  id v92 = [v197 heightAnchor];
  id v93 = [self mainScreen];
  [v93 scale];
  double v95 = v94;

  id v96 = [v92 constraintEqualToConstant:1.0 / v95];
  *(void *)(v78 + 56) = v96;
  specialized Array._endMutation()();
  Class v97 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v205 activateConstraints:v97];

  uint64_t v98 = swift_allocObject();
  *(_OWORD *)(v98 + 16) = xmmword_10055C1F0;
  id v99 = [v201 topAnchor];
  id v100 = [v1 view];
  if (!v100)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v101 = v100;
  id v102 = [v100 topAnchor];

  double v103 = v204[7];
  id v104 = [v99 constraintEqualToAnchor:v102 constant:v103];

  *(void *)(v98 + 32) = v104;
  id v105 = [v201 leadingAnchor];
  id v106 = [v1 view];
  if (!v106)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v107 = v106;
  id v108 = [v106 layoutMarginsGuide];

  id v109 = [v108 leadingAnchor];
  id v110 = [v105 constraintEqualToAnchor:v109];

  *(void *)(v98 + 40) = v110;
  *(void *)(v98 + 48) = v189;
  specialized Array._endMutation()();
  id v111 = v189;
  Class v112 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v205 activateConstraints:v112];

  id v113 = [v195 font];
  if (!v113)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v114 = v113;
  id v198 = v111;
  [v113 lineHeight];
  double v116 = v115;

  id v117 = [v192 heightAnchor];
  id v118 = [v117 constraintEqualToConstant:v116];

  id v119 = [v190 heightAnchor];
  id v202 = [v119 constraintEqualToConstant:v116];

  uint64_t v120 = swift_allocObject();
  *(_OWORD *)(v120 + 16) = xmmword_10055C1E0;
  id v121 = [v192 widthAnchor];
  if (qword_1006AE078 != -1) {
    swift_once();
  }
  id v122 = [v121 constraintEqualToConstant:*(double *)&qword_1006D1928 + *(double *)&qword_1006D1928];

  *(void *)(v120 + 32) = v122;
  *(void *)(v120 + 40) = v118;
  specialized Array._endMutation()();
  id v196 = v118;
  Class v123 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v205 activateConstraints:v123];

  uint64_t v124 = swift_allocObject();
  *(_OWORD *)(v124 + 16) = xmmword_10055C1F0;
  uint64_t v125 = OBJC_IVAR____TtC6FindMy20FMBatteryWrapperView_batteryView;
  id v126 = [*(id *)&v190[OBJC_IVAR____TtC6FindMy20FMBatteryWrapperView_batteryView] widthAnchor];
  id v127 = [v126 constraintEqualToConstant:v204[13]];

  *(void *)(v124 + 32) = v127;
  id v128 = [*(id *)&v190[v125] heightAnchor];
  id v129 = [v128 constraintEqualToConstant:v204[14]];

  *(void *)(v124 + 40) = v129;
  *(void *)(v124 + 48) = v202;
  specialized Array._endMutation()();
  id v130 = v202;
  Class v131 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v205 activateConstraints:v131];

  id v132 = [v194 topAnchor];
  id v133 = [*(id *)&v199[v33] topAnchor];
  id v134 = [v132 constraintEqualToAnchor:v133];

  id v135 = [v194 trailingAnchor];
  id v136 = [v1 view];
  if (!v136) {
    goto LABEL_40;
  }
  uint64_t v137 = v136;
  id v138 = [v136 layoutMarginsGuide];

  id v139 = [v138 trailingAnchor];
  id v140 = [v135 constraintEqualToAnchor:v139 constant:-v103];

  LODWORD(v141) = 1144750080;
  [v140 setPriority:v141];
  uint64_t v142 = swift_allocObject();
  *(_OWORD *)(v142 + 16) = xmmword_10055C1F0;
  *(void *)(v142 + 32) = v134;
  *(void *)(v142 + 40) = v140;
  id v191 = v134;
  id v193 = v140;
  id v143 = [v194 leadingAnchor];
  id v144 = [v1 view];
  if (!v144)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v145 = v144;
  id v146 = [v144 layoutMarginsGuide];

  id v147 = [v146 leadingAnchor];
  id v148 = [v143 constraintEqualToAnchor:v147];

  *(void *)(v142 + 48) = v148;
  specialized Array._endMutation()();
  Class v149 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v205 activateConstraints:v149];

  uint64_t v150 = swift_allocObject();
  *(_OWORD *)(v150 + 16) = xmmword_10055C1F0;
  id v151 = [v200 topAnchor];
  id v152 = [v194 lastBaselineAnchor];
  id v153 = [v151 constraintEqualToAnchor:v152 constant:v204[2]];

  *(void *)(v150 + 32) = v153;
  id v154 = [v200 leadingAnchor];
  id v155 = [v1 view];
  if (!v155)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v156 = v155;
  id v157 = [v155 layoutMarginsGuide];

  id v158 = [v157 leadingAnchor];
  id v159 = [v154 constraintEqualToAnchor:v158];

  *(void *)(v150 + 40) = v159;
  id v160 = [v200 trailingAnchor];
  id v161 = [v1 view];
  if (!v161)
  {
LABEL_43:
    __break(1u);
    return;
  }
  uint64_t v162 = v161;
  id v163 = [v161 layoutMarginsGuide];

  id v164 = [v163 trailingAnchor];
  id v165 = [v160 constraintLessThanOrEqualToAnchor:v164];

  *(void *)(v150 + 48) = v165;
  specialized Array._endMutation()();
  Class v166 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v205 activateConstraints:v166];

  uint64_t v167 = swift_allocObject();
  *(_OWORD *)(v167 + 16) = xmmword_10055B950;
  id v168 = [v188 topAnchor];
  id v169 = [v199 topAnchor];
  id v170 = [v168 constraintEqualToAnchor:v169];

  *(void *)(v167 + 32) = v170;
  id v171 = [v188 leadingAnchor];
  id v172 = [v199 leadingAnchor];
  id v173 = [v171 constraintEqualToAnchor:v172];

  *(void *)(v167 + 40) = v173;
  id v174 = [v188 trailingAnchor];
  id v175 = [v199 trailingAnchor];
  id v176 = [v174 constraintEqualToAnchor:v175];

  *(void *)(v167 + 48) = v176;
  id v177 = [v188 bottomAnchor];
  id v178 = [v200 bottomAnchor];
  id v179 = [v177 constraintEqualToAnchor:v178 constant:v75];

  *(void *)(v167 + 56) = v179;
  specialized Array._endMutation()();
  Class v180 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v205 activateConstraints:v180];

  uint64_t v181 = *(void **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorHeightConstraint];
  *(void *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorHeightConstraint] = v130;
  id v182 = v130;

  uint64_t v183 = *(void **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_locatingIndicatorHeightConstraint];
  *(void *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_locatingIndicatorHeightConstraint] = v196;
  id v184 = v196;

  uint64_t v206 = *(void **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabelTopConstraint];
  *(void *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabelTopConstraint] = v191;
}

void *sub_100287998()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView);
  id v2 = v1;
  return v1;
}

id sub_1002879C8(id result)
{
  int v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_isLocating);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_isLocating) = (_BYTE)result;
  if (v2 != (result & 1))
  {
    char v3 = (char)result;
    id v4 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_locatingIndicator);
    [v4 setHidden:(result & 1) == 0];
    uint64_t v5 = &selRef_startAnimating;
    if ((v3 & 1) == 0) {
      uint64_t v5 = &selRef_stopAnimating;
    }
    [v4 *v5];
    id v6 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView);
    [v6 setNeedsLayout];
    return [v6 layoutIfNeeded];
  }
  return result;
}

uint64_t sub_100287A9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMSelectedSection();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v58 = (uint64_t)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v57 = (uint64_t)&v52 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (char *)&v52 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  id v12 = (char *)&v52 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  id v15 = (char *)&v52 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  id v18 = (char *)&v52 - v17;
  __chkstk_darwin(v16);
  id v20 = (char *)&v52 - v19;
  uint64_t v59 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
  uint64_t v21 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator) + 56)
      + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
  swift_beginAccess();
  sub_100028164(v21, (uint64_t)v20);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  uint64_t v23 = sub_1000606BC(v22, (uint64_t)qword_1006D1E98);
  sub_100028164((uint64_t)v20, (uint64_t)v18);
  uint64_t v60 = v23;
  id v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v53 = v1;
    uint64_t v26 = swift_slowAlloc();
    id v55 = v9;
    id v27 = (uint8_t *)v26;
    uint64_t v28 = swift_slowAlloc();
    double v56 = v20;
    id v54 = v12;
    *(_DWORD *)id v27 = 136315138;
    v61[0] = v28;
    uint64_t v62 = 0;
    unint64_t v63 = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)();
    uint64_t v62 = sub_1000606F4(v62, v63, v61);
    uint64_t v1 = v53;
    id v12 = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100028108((uint64_t)v18);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "FMBaseContentViewController: previousSelection %s", v27, 0xCu);
    swift_arrayDestroy();
    id v20 = v56;
    swift_slowDealloc();
    id v9 = v55;
    swift_slowDealloc();
  }
  else
  {
    sub_100028108((uint64_t)v18);
  }

  sub_100028164((uint64_t)v20, (uint64_t)v15);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 8)
  {
    id v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      NSString v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "FMBaseContentViewController: UT ignores previous selection", v36, 2u);
      swift_slowDealloc();
    }

    uint64_t v37 = (uint64_t)v20;
    goto LABEL_29;
  }
  if (EnumCaseMultiPayload != 18)
  {
    if (EnumCaseMultiPayload == 15)
    {
      id v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v30, v31))
      {
        id v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v32 = 0;
        uint64_t v33 = "FMBaseContentViewController: Map options ignores previous selection";
LABEL_16:
        _os_log_impl((void *)&_mh_execute_header, v30, v31, v33, v32, 2u);
        swift_slowDealloc();
        goto LABEL_17;
      }
      goto LABEL_17;
    }
    uint64_t v38 = *(void *)(v1 + v59);
    uint64_t v39 = *(void *)(v38 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess();
    sub_100028164(v39, (uint64_t)v12);
    sub_100028164((uint64_t)v12, (uint64_t)v9);
    int v40 = swift_getEnumCaseMultiPayload();
    if (v40 == 18)
    {
      id v44 = Logger.logObject.getter();
      os_log_type_t v45 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v46 = 0;
        _os_log_impl((void *)&_mh_execute_header, v44, v45, "FMBaseContentViewController: Ranging ignores previous selection", v46, 2u);
        swift_slowDealloc();
      }

      id v9 = v20;
    }
    else
    {
      if (v40 == 8)
      {
        id v41 = Logger.logObject.getter();
        os_log_type_t v42 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v41, v42))
        {
          id v43 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v43 = 0;
          _os_log_impl((void *)&_mh_execute_header, v41, v42, "FMBaseContentViewController: UT ignores previous selection", v43, 2u);
          swift_slowDealloc();
        }
      }
      else
      {
        uint64_t v47 = *(void *)(v38 + 56);
        uint64_t v48 = v57;
        sub_100028164((uint64_t)v20, v57);
        uint64_t v49 = v47 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
        swift_beginAccess();
        uint64_t v50 = v58;
        sub_100028164(v49, v58);
        swift_beginAccess();
        swift_retain();
        sub_100009A88(v48, v49);
        swift_endAccess();
        sub_100053CA0(v50);
        sub_100028108(v48);
        sub_100028108(v50);
        swift_release();
      }
      sub_100028108((uint64_t)v12);
      id v12 = v20;
    }
    sub_100028108((uint64_t)v12);
    uint64_t v37 = (uint64_t)v9;
LABEL_29:
    sub_100028108(v37);
    return sub_100028108((uint64_t)v15);
  }
  id v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v30, v31))
  {
    id v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v32 = 0;
    uint64_t v33 = "FMBaseContentViewController: Ranging ignores previous selection";
    goto LABEL_16;
  }
LABEL_17:

  id v15 = v20;
  return sub_100028108((uint64_t)v15);
}

uint64_t sub_100288160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v24 = a3;
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v28 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for DispatchQoS();
  uint64_t v14 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v26 = static OS_dispatch_queue.main.getter();
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a1;
  uint64_t v17[3] = a2;
  long long v17[4] = v24;
  v17[5] = a4;
  v17[6] = a5;
  v17[7] = a6;
  id v18 = v25;
  v17[8] = v25;
  aBlock[4] = sub_100289374;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_100630108;
  uint64_t v19 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v20 = v18;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10005FE54();
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_10005ECA8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v21 = (void *)v26;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v27);
}

id sub_100288434(void *a1)
{
  [a1 contentOffset];
  double v3 = v2;
  if (qword_1006AE0C0 != -1) {
    swift_once();
  }
  if (v3 / *((double *)&xmmword_1006D1AD0 + 1) > 0.0) {
    double v4 = v3 / *((double *)&xmmword_1006D1AD0 + 1);
  }
  else {
    double v4 = 0.0;
  }
  [*(id *)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryBackground) setAlpha:v4];
  [*(id *)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primarySeperator) setAlpha:v4];
  double v5 = 1.0 / v4;
  [*(id *)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabel) setAlpha:v5];
  [*(id *)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryLabel) setAlpha:v5];
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_locatingIndicator);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_isLocating)) {
    double v7 = v5;
  }
  else {
    double v7 = 0.0;
  }

  return [v6 setAlpha:v7];
}

double sub_100288550()
{
  xmmword_1006D1A90 = xmmword_100562930;
  unk_1006D1AA0 = xmmword_100562940;
  unk_1006D1AB0 = xmmword_100562950;
  unk_1006D1AC0 = xmmword_100562960;
  xmmword_1006D1AD0 = xmmword_100562970;
  *(_OWORD *)&qword_1006D1AE0 = xmmword_100562980;
  double result = 3.0;
  xmmword_1006D1AF0 = xmmword_100562990;
  qword_1006D1B00 = 0x4026000000000000;
  return result;
}

double sub_1002885AC()
{
  xmmword_1006D1B10 = xmmword_100562930;
  unk_1006D1B20 = xmmword_100562940;
  xmmword_1006D1B30 = xmmword_100562950;
  unk_1006D1B40 = xmmword_1005629A0;
  xmmword_1006D1B50 = xmmword_1005629B0;
  unk_1006D1B60 = xmmword_100562980;
  double result = 3.0;
  xmmword_1006D1B70 = xmmword_100562990;
  qword_1006D1B80 = 0x4026000000000000;
  return result;
}

id sub_100288630()
{
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for FMBaseContentViewController();
  [super viewDidLoad];
  uint64_t v2 = (*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x198))(v1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x1A0))(v2);
  (*(void (**)(uint64_t))((swift_isaMask & *v0) + 0x1A8))(v3);
  int v4 = *((unsigned __int8 *)v0 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_isLocating);
  double v5 = *(void **)((char *)v0 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_locatingIndicator);
  [v5 setHidden:v4 ^ 1u];
  uint64_t v6 = &selRef_startAnimating;
  if (!v4) {
    uint64_t v6 = &selRef_stopAnimating;
  }
  [v5 *v6];
  double v7 = *(void **)((char *)v0 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView);
  [v7 setNeedsLayout];
  [v7 layoutIfNeeded];
  return [v7 setDelegate:v0];
}

id sub_100288814()
{
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for FMBaseContentViewController();
  [super viewDidLayoutSubviews];
  id v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabelTopConstraint];
  if (v1)
  {
    uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryLabel];
    id v3 = v1;
    [v2 frame];
    double v5 = v4;
    [v2 frame];
    [v3 setConstant:v5 + v6 + *(double *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_styleGuide + 8]];
  }
  double v7 = *(void **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryLabel];
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryLabel] bounds];
  return [v7 setPreferredMaxLayoutWidth:CGRectGetWidth(v10)];
}

void sub_1002889BC(uint64_t a1)
{
  v17.receiver = v1;
  v17.super_class = (Class)type metadata accessor for FMBaseContentViewController();
  [super traitCollectionDidChange:a1];
  id v3 = [v1 traitCollection];
  id v4 = [v3 preferredContentSizeCategory];

  LOBYTE(v3) = UIContentSizeCategory.isAccessibilityCategory.getter();
  id v5 = self;
  UIFontTextStyle v6 = UIFontTextStyleSubheadline;
  if (v3)
  {
    id v5 = [v5 _preferredFontForTextStyle:UIFontTextStyleSubheadline maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
    if (v5) {
      goto LABEL_5;
    }
    __break(1u);
  }
  id v5 = [v5 preferredFontForTextStyle:v6];
LABEL_5:
  double v7 = v5;
  [v5 lineHeight];
  double v9 = v8;

  [*(id *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_locatingIndicatorHeightConstraint] setConstant:v9];
  [*(id *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorHeightConstraint] setConstant:v9];
  id v10 = [*(id *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_actionBackground] layer];
  id v11 = [v1 traitCollection];
  id v12 = [v11 userInterfaceStyle];

  uint64_t v13 = self;
  uint64_t v14 = &selRef_clearColor;
  if (v12 != (id)2) {
    uint64_t v14 = &selRef_whiteColor;
  }
  id v15 = [v13 *v14];
  id v16 = [v15 CGColor];

  [v10 setBackgroundColor:v16];
}

void sub_100288C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = [self alertControllerWithTitle:v8 message:v9 preferredStyle:1];

  swift_bridgeObjectRetain();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [self actionWithTitle:v11 style:0 handler:0];

  [v10 addAction:v12];
  [a7 presentViewController:v10 animated:1 completion:0];
}

id sub_100288DC8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMBaseContentViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for FMBaseContentViewController()
{
  return self;
}

__n128 initializeWithCopy for FMBaseContentViewStyle(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for FMBaseContentViewStyle(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 120)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FMBaseContentViewStyle(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 120) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FMBaseContentViewStyle()
{
  return &type metadata for FMBaseContentViewStyle;
}

uint64_t sub_100288FF0()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x158))();
}

double sub_10028902C()
{
  [*(id *)(v0 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primarySeperator) frame];
  return fabs(CGRectGetMinY(v2));
}

uint64_t sub_100289060()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1D0))();
}

uint64_t sub_10028909C()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1C0))();
}

uint64_t sub_1002890D8()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1C8))();
}

void sub_100289118()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryBackground;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIVisualEffectView) init];
  uint64_t v2 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primarySeperator;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v3 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)type metadata accessor for FMScrollView()) init];
  uint64_t v4 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryLabel;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v5 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabel;
  type metadata accessor for FMCopyableLabel();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  *(void *)&v0[v5] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v7 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryLabel;
  *(void *)&v0[v7] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v8 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_actionBackground;
  *(void *)&v0[v8] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v9 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryRowStackView;
  *(void *)&v0[v9] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v10 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_headerBackground;
  *(void *)&v0[v10] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v11 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorView;
  type metadata accessor for FMBatteryWrapperView();
  *(void *)&v0[v11] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabelTopConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_locatingIndicatorHeightConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorHeightConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollViewBottomConstraint] = 0;
  uint64_t v12 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_locatingIndicator;
  *(void *)&v0[v12] = [objc_allocWithZone((Class)UIActivityIndicatorView) init];
  v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_isLocating] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100289324()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_100289374()
{
  sub_100288C28(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void **)(v0 + 64));
}

id sub_100289388()
{
  uint64_t v1 = self;
  id v2 = [v1 mainBundle];
  v20._unint64_t object = (void *)0x80000001005889B0;
  v3._unint64_t object = (void *)0x8000000100590240;
  v3._uint64_t countAndFlagsBits = 0xD000000000000015;
  v4.value._uint64_t countAndFlagsBits = 0xD000000000000010;
  v4.value._unint64_t object = (void *)0x8000000100588990;
  v5._uint64_t countAndFlagsBits = 0;
  v5._unint64_t object = (void *)0xE000000000000000;
  v20._uint64_t countAndFlagsBits = 0xD000000000000015;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v20);

  id v6 = [v1 mainBundle];
  v7._uint64_t countAndFlagsBits = 0xD000000000000018;
  v21._unint64_t object = (void *)0x80000001005889B0;
  v7._unint64_t object = (void *)0x8000000100590260;
  v8.value._uint64_t countAndFlagsBits = 0xD000000000000010;
  v8.value._unint64_t object = (void *)0x8000000100588990;
  v9._uint64_t countAndFlagsBits = 0;
  v9._unint64_t object = (void *)0xE000000000000000;
  v21._uint64_t countAndFlagsBits = 0xD000000000000015;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v21);

  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [self systemImageNamed:v10];

  if (v11)
  {
    id v12 = [self systemBlueColor];
    id v13 = [v11 imageWithTintColor:v12 renderingMode:1];
  }
  else
  {
    id v13 = 0;
  }
  id v14 = objc_allocWithZone(v0);
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v17 = [v14 initWithTitle:v15 detailText:v16 icon:v13];

  id v18 = v17;
  sub_1002895E4();

  return v18;
}

void sub_1002895E4()
{
  uint64_t v1 = v0;
  id v2 = [self boldButton];
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v3 = [self mainBundle];
  v9._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  v9._unint64_t object = (void *)0x80000001005902A0;
  v4._unint64_t object = (void *)0x8000000100590280;
  v4._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  v5._uint64_t countAndFlagsBits = 0;
  v5._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v9);

  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setTitle:v6 forState:0];

  [v2 addTarget:v1 action:"continue" forControlEvents:64];
  id v7 = [v1 buttonTray];
  [v7 addButton:v2];
}

id sub_1002898BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a4)
  {
    NSString v13 = 0;
    if (a6) {
      goto LABEL_3;
    }
LABEL_5:
    NSString v14 = 0;
    goto LABEL_6;
  }
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a6) {
    goto LABEL_5;
  }
LABEL_3:
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_6:
  v17.receiver = v7;
  v17.super_class = ObjectType;
  id v15 = [super initWithTitle:v12 detailText:v13 symbolName:v14 contentLayout:a7];

  return v15;
}

uint64_t type metadata accessor for FMUTDisclaimerViewController()
{
  return self;
}

uint64_t sub_100289B8C(char a1)
{
  return sub_100289FB8(a1, 34, 0xD000000000000020, (void *)0x8000000100590510);
}

uint64_t sub_100289BAC(char a1)
{
  return sub_100289FB8(a1, 45, 0xD00000000000002BLL, (void *)0x80000001005904E0);
}

void sub_100289BCC(char a1)
{
  _StringGuts.grow(_:)(47);
  swift_bridgeObjectRelease();
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v2 = 0x8000000100590440;
    }
    else {
      unint64_t v2 = 0x8000000100590420;
    }
    unint64_t v3 = 0xD000000000000015;
  }
  else
  {
    unint64_t v2 = 0x8000000100590460;
    unint64_t v3 = 0xD000000000000018;
  }
  unint64_t v4 = v2;
  String.append(_:)(*(Swift::String *)&v3);
  swift_bridgeObjectRelease();
  id v5 = [self mainBundle];
  v6.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v27._unint64_t object = (void *)0x800000010057EF80;
  v6.value._unint64_t object = (void *)0x800000010057EF60;
  v7._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  v7._unint64_t object = (void *)0x8000000100590480;
  v8._uint64_t countAndFlagsBits = 0;
  v8._unint64_t object = (void *)0xE000000000000000;
  v27._uint64_t countAndFlagsBits = 0xD000000000000018;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v6, (NSBundle)v5, v8, v27);
  swift_bridgeObjectRelease();

  id v9 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [v9 initWithString:v10];

  id v12 = [v11 mutableString];
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v12 rangeOfString:v13];
  uint64_t v16 = v15;

  if (v14 != (id)NSNotFound.getter())
  {
    id v17 = [objc_allocWithZone((Class)NSTextAttachment) init];
    id v18 = [self preferredFontForTextStyle:UIFontTextStyleBody];
    id v19 = [self configurationWithFont:v18];

    id v20 = v19;
    NSString v21 = String._bridgeToObjectiveC()();
    id v22 = [self _systemImageNamed:v21 withConfiguration:v20];

    if (v22)
    {
      id v23 = [self labelColor];
      id v24 = [v22 imageWithTintColor:v23];

      id v25 = [v24 imageWithRenderingMode:1];
      [v17 setImage:v25];

      id v26 = [self attributedStringWithAttachment:v17];
      [v11 replaceCharactersInRange:v14 withAttributedString:v16];
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100289F98(char a1)
{
  return sub_100289FB8(a1, 35, 0xD000000000000021, (void *)0x80000001005903F0);
}

uint64_t sub_100289FB8(char a1, Swift::Int a2, uint64_t a3, void *a4)
{
  _StringGuts.grow(_:)(a2);
  swift_bridgeObjectRelease();
  uint64_t v16 = a3;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v7 = 0x8000000100590440;
    }
    else {
      unint64_t v7 = 0x8000000100590420;
    }
    unint64_t v8 = 0xD000000000000015;
  }
  else
  {
    unint64_t v7 = 0x8000000100590460;
    unint64_t v8 = 0xD000000000000018;
  }
  unint64_t v9 = v7;
  String.append(_:)(*(Swift::String *)&v8);
  swift_bridgeObjectRelease();
  id v10 = [self mainBundle];
  v11.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v17._unint64_t object = (void *)0x800000010057EF80;
  v11.value._unint64_t object = (void *)0x800000010057EF60;
  v12._uint64_t countAndFlagsBits = v16;
  v12._unint64_t object = a4;
  v13._uint64_t countAndFlagsBits = 0;
  v13._unint64_t object = (void *)0xE000000000000000;
  v17._uint64_t countAndFlagsBits = 0xD000000000000018;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v11, (NSBundle)v10, v13, v17)._countAndFlagsBits;
  swift_bridgeObjectRelease();

  return countAndFlagsBits;
}

id sub_10028A110()
{
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = [self imageNamed:v0];

  return v1;
}

char *sub_10028A1C4(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_contentStackView;
  id v4 = objc_allocWithZone((Class)UIStackView);
  id v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_contentContainerView;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v7 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_heroImageView;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v8 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_titleLabel;
  *(void *)&v5[v8] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v9 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_primarySubtitleLabel;
  *(void *)&v5[v9] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v10 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_secondarySubtitleLabel;
  *(void *)&v5[v10] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v11 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_searchButton;
  *(void *)&v5[v11] = [objc_allocWithZone((Class)UIButton) init];
  uint64_t v12 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_spacerView;
  *(void *)&v5[v12] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v13 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_searchButtonTopConstraint;
  *(void *)&v5[v13] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  v5[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_type] = 1;
  *(void *)&v5[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v5[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_cardChangeSubscription] = 0;
  v5[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_showsAdditionalContent] = 1;

  if (qword_1006AE0C8 != -1) {
    swift_once();
  }
  v15[4] = xmmword_1006D1B50;
  v15[5] = unk_1006D1B60;
  v15[6] = xmmword_1006D1B70;
  uint64_t v16 = qword_1006D1B80;
  v15[0] = xmmword_1006D1B10;
  v15[1] = unk_1006D1B20;
  v15[2] = xmmword_1006D1B30;
  void v15[3] = unk_1006D1B40;
  return sub_1002855F4(a1, (uint64_t)v15);
}

id sub_10028A5DC()
{
  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for FMUnknownItemsLandingViewController();
  [super viewLayoutMarginsDidChange];
  id result = [v0 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v2 = result;
  [result layoutMargins];
  double v4 = v3;

  [*(id *)&v0[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_contentStackView] setSpacing:v4];
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_contentContainerView] setLayoutMargins:v4, v4, v4, v4];
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_searchButtonTopConstraint] setConstant:v4];
  id result = [v0 view];
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v5 = result;
  [result safeAreaInsets];
  double v7 = v6;

  if (v7 != 0.0)
  {
    id result = [v0 view];
    if (result)
    {
      uint64_t v8 = result;
      [result safeAreaInsets];
      double v10 = v9;

      id result = [v0 systemMinimumLayoutMargins];
      if (v11 >= v10) {
        return result;
      }
      goto LABEL_7;
    }
LABEL_11:
    __break(1u);
    return result;
  }
  [v0 systemMinimumLayoutMargins];
LABEL_7:
  [v0 additionalSafeAreaInsets];
  return [v0 setAdditionalSafeAreaInsets:];
}

uint64_t sub_10028A840()
{
  id v1 = [self defaultCenter];
  if (qword_1006AE480 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1006D2978;
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  _OWORD v7[4] = sub_10028D45C;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  long long v7[2] = sub_10046F7FC;
  v7[3] = &unk_100630370;
  double v4 = _Block_copy(v7);
  swift_release();
  id v5 = [v1 addObserverForName:v2 object:0 queue:0 usingBlock:v4];
  _Block_release(v4);

  *(void *)(v0 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_cardChangeSubscription) = v5;
  return swift_unknownObjectRelease();
}

void sub_10028A9A4()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (!v0) {
    goto LABEL_12;
  }
  uint64_t v1 = v0;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v1 + 16) && (unint64_t v2 = sub_10002953C((uint64_t)v12), (v3 & 1) != 0))
  {
    sub_1000607C8(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v13);
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1000294E8((uint64_t)v12);
  if (!*((void *)&v14 + 1)) {
    goto LABEL_13;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  double v4 = *(double *)v12;
  uint64_t v5 = Notification.userInfo.getter();
  if (!v5)
  {
LABEL_12:
    long long v13 = 0u;
    long long v14 = 0u;
LABEL_13:
    sub_100003F10((uint64_t)&v13, &qword_1006AFE40);
    return;
  }
  uint64_t v6 = v5;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_10002953C((uint64_t)v12), (v8 & 1) != 0))
  {
    sub_1000607C8(*(void *)(v6 + 56) + 32 * v7, (uint64_t)&v13);
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1000294E8((uint64_t)v12);
  if (!*((void *)&v14 + 1)) {
    goto LABEL_13;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  if (v12[0] == 0x75747365476E6170 && v12[1] == 0xEA00000000006572)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      return;
    }
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v11 = (void *)Strong;
    sub_10028C35C(v4);
  }
}

uint64_t sub_10028AC00()
{
  uint64_t v1 = sub_10005D034((uint64_t *)&unk_1006C2290);
  __chkstk_darwin(v1 - 8);
  uint64_t v33 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10005D034(&qword_1006B86E8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v34 = (uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v33 - v6;
  uint64_t v8 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for AttributedString();
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  __chkstk_darwin(v9);
  double v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_super v12 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_heroImageView);
  uint64_t v13 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_type;
  id v14 = sub_10028A110();
  [v12 setImage:v14];

  uint64_t v15 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryLabel);
  id v16 = [self mainBundle];
  v17.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v40._unint64_t object = (void *)0x800000010057EF80;
  v18._unint64_t object = (void *)0x80000001005903D0;
  v17.value._unint64_t object = (void *)0x800000010057EF60;
  v18._uint64_t countAndFlagsBits = 0xD000000000000018;
  v19._uint64_t countAndFlagsBits = 0;
  v19._unint64_t object = (void *)0xE000000000000000;
  v40._uint64_t countAndFlagsBits = 0xD000000000000018;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v18, v17, (NSBundle)v16, v19, v40);

  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v15 setText:v20];

  NSString v21 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_titleLabel);
  sub_100289FB8(*(unsigned char *)(v0 + v13), 34, 0xD000000000000020, (void *)0x8000000100590510);
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v21 setText:v22];

  id v23 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_primarySubtitleLabel);
  sub_100289FB8(*(unsigned char *)(v0 + v13), 45, 0xD00000000000002BLL, (void *)0x80000001005904E0);
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v23 setText:v24];

  id v25 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_secondarySubtitleLabel);
  sub_100289BCC(*(unsigned char *)(v0 + v13));
  Swift::String v27 = v26;
  [v25 setAttributedText:v26];

  sub_100289FB8(*(unsigned char *)(v0 + v13), 35, 0xD000000000000021, (void *)0x80000001005903F0);
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v38 = 2;
  char v39 = 0;
  sub_10028D2C8();
  AttributedString.subscript.setter();
  UIButton.configuration.getter();
  uint64_t v28 = type metadata accessor for UIButton.Configuration();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v7, 1, v28))
  {
    sub_10028D3BC((uint64_t)v7, v34);
    UIButton.configuration.setter();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v36);
    return sub_100003F10((uint64_t)v7, &qword_1006B86E8);
  }
  else
  {
    uint64_t v31 = v35;
    uint64_t v30 = v36;
    id v32 = v33;
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v33, v11, v36);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v32, 0, 1, v30);
    UIButton.Configuration.attributedTitle.setter();
    UIButton.configuration.setter();
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v11, v30);
  }
}

uint64_t sub_10028B144()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

void sub_10028B224()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10005D034(&qword_1006B86E8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100285964();
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorView] setHidden:1];
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryBackground] setAlpha:1.0];
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primarySeperator] setAlpha:1.0];
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_contentContainerView];
  [*(id *)(*(void *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView]+ OBJC_IVAR____TtC6FindMy12FMScrollView_content) addSubview:*(void *)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_contentContainerView]];
  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_contentStackView];
  [v5 addSubview:v6];
  [v6 setAxis:1];
  id v31 = *(id *)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_heroImageView];
  [v31 setContentMode:1];
  unint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_titleLabel];
  uint64_t v8 = self;
  id v9 = [v8 preferredFontForTextStyle:UIFontTextStyleTitle1];
  uint64_t v10 = (void *)sub_100042318(2);

  [v7 setFont:v10];
  double v11 = *(void **)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_primarySubtitleLabel];
  id v12 = [v8 preferredFontForTextStyle:UIFontTextStyleBody];
  [v11 setFont:v12];

  uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_secondarySubtitleLabel];
  id v14 = [v8 preferredFontForTextStyle:UIFontTextStyleBody];
  [v13 setFont:v14];

  id v15 = v7;
  id v16 = v11;
  id v17 = v13;
  [v15 setNumberOfLines:0];
  [v15 setAdjustsFontForContentSizeCategory:1];
  [v15 setTextAlignment:1];

  id v18 = v16;
  [v18 setNumberOfLines:0];
  [v18 setAdjustsFontForContentSizeCategory:1];
  [v18 setTextAlignment:1];

  id v19 = v17;
  [v19 setNumberOfLines:0];
  [v19 setAdjustsFontForContentSizeCategory:1];
  [v19 setTextAlignment:1];

  NSString v20 = *(void **)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_searchButton];
  sub_10013BA50(2);
  uint64_t v21 = type metadata accessor for UIButton.Configuration();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v4, 0, 1, v21);
  UIButton.configuration.setter();
  [v20 addTarget:v1 action:"handleButtonTap:" forControlEvents:64];
  id v22 = [v1 view];
  if (v22)
  {
    id v23 = v22;
    [v22 addSubview:v20];

    NSString v24 = *(void **)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_spacerView];
    id v25 = v15;
    id v26 = v18;
    id v27 = v19;
    id v28 = v31;
    id v29 = v24;
    [v6 addArrangedSubview:v28];
    [v6 addArrangedSubview:v25];
    [v6 addArrangedSubview:v26];
    [v6 addArrangedSubview:v27];
    [v6 addArrangedSubview:v29];
  }
  else
  {
    __break(1u);
  }
}

void sub_10028B6BC()
{
  uint64_t v1 = v0;
  sub_100286330();
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_contentContainerView];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_contentStackView];
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_heroImageView];
  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_titleLabel];
  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_primarySubtitleLabel];
  unint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_secondarySubtitleLabel];
  uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_searchButton];
  id v9 = v2;
  id v10 = v3;
  id v11 = v4;
  id v12 = v5;
  id v13 = v6;
  id v14 = v7;
  id v15 = v8;
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v110 = v15;
  id v108 = v10;

  id v16 = [objc_allocWithZone((Class)UILayoutGuide) init];
  id v17 = [v1 view];
  if (!v17)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v18 = v17;
  [v17 addLayoutGuide:v16];

  sub_10005D034(&qword_1006AF2D0);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_10055B950;
  id v20 = [v16 topAnchor];
  id v21 = [*(id *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primarySeperator] topAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21];

  *(void *)(v19 + 32) = v22;
  id v23 = [v16 leadingAnchor];
  id v24 = [v1 view];
  if (!v24)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v25 = v24;
  id v107 = v11;
  id v26 = [v24 layoutMarginsGuide];

  id v27 = [v26 leadingAnchor];
  id v28 = [v23 constraintEqualToAnchor:v27];

  *(void *)(v19 + 40) = v28;
  id v29 = [v16 trailingAnchor];
  id v30 = [v1 view];
  if (!v30)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v31 = v30;
  id v32 = self;
  id v33 = [v31 layoutMarginsGuide];

  id v34 = [v33 trailingAnchor];
  id v35 = [v29 constraintEqualToAnchor:v34];

  *(void *)(v19 + 48) = v35;
  id v109 = v16;
  id v36 = [v16 bottomAnchor];
  id v37 = [v110 topAnchor];
  id v38 = [v36 constraintEqualToAnchor:v37];

  *(void *)(v19 + 56) = v38;
  specialized Array._endMutation()();
  sub_10004FCE4();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v111 = v32;
  [v32 activateConstraints:isa];

  uint64_t v40 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollViewBottomConstraint;
  [*(id *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollViewBottomConstraint] setActive:0];
  id v106 = *(char **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView];
  id v41 = [v106 bottomAnchor];
  id v42 = [v110 topAnchor];
  id v43 = [v41 constraintEqualToAnchor:v42];

  [v43 setActive:1];
  id v44 = *(void **)&v1[v40];
  *(void *)&v1[v40] = v43;
  id v45 = v43;

  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_10055C200;
  id v47 = [v9 topAnchor];
  id v48 = [*(id *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryLabel] bottomAnchor];
  id v49 = [v47 constraintEqualToAnchor:v48 constant:2.0];

  *(void *)(v46 + 32) = v49;
  id v50 = [v9 leadingAnchor];
  id v51 = [v1 view];
  if (!v51)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v52 = v51;
  id v53 = [v51 leadingAnchor];

  id v54 = [v50 constraintEqualToAnchor:v53];
  *(void *)(v46 + 40) = v54;
  id v55 = [v9 trailingAnchor];
  id v56 = [v1 view];
  if (!v56)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v57 = v56;
  id v58 = [v56 trailingAnchor];

  id v59 = [v55 constraintEqualToAnchor:v58];
  *(void *)(v46 + 48) = v59;
  id v60 = [v9 bottomAnchor];
  id v61 = [*(id *)&v106[OBJC_IVAR____TtC6FindMy12FMScrollView_content] bottomAnchor];
  id v62 = [v60 constraintEqualToAnchor:v61];

  *(void *)(v46 + 56) = v62;
  id v63 = [v9 heightAnchor];
  id v64 = [v109 heightAnchor];
  id v65 = [v63 constraintEqualToAnchor:v64];

  LODWORD(v66) = 1132068864;
  [v65 setPriority:v66];
  *(void *)(v46 + 64) = v65;
  specialized Array._endMutation()();
  Class v67 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v111 activateConstraints:v67];

  uint64_t v68 = swift_allocObject();
  *(_OWORD *)(v68 + 16) = xmmword_10055B950;
  id v69 = [v108 topAnchor];
  id v70 = [v9 layoutMarginsGuide];
  id v71 = [v70 topAnchor];

  id v72 = [v69 constraintEqualToAnchor:v71];
  *(void *)(v68 + 32) = v72;
  id v73 = [v108 bottomAnchor];
  id v74 = [v9 layoutMarginsGuide];
  id v75 = [v74 bottomAnchor];

  id v76 = [v73 constraintEqualToAnchor:v75];
  *(void *)(v68 + 40) = v76;
  id v77 = [v108 leadingAnchor];
  id v78 = [v9 layoutMarginsGuide];
  id v79 = [v78 leadingAnchor];

  id v80 = [v77 constraintEqualToAnchor:v79];
  *(void *)(v68 + 48) = v80;
  id v81 = [v108 trailingAnchor];
  id v82 = [v9 layoutMarginsGuide];
  id v83 = [v82 trailingAnchor];

  id v84 = [v81 constraintEqualToAnchor:v83];
  *(void *)(v68 + 56) = v84;
  specialized Array._endMutation()();
  Class v85 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v111 activateConstraints:v85];

  id v86 = [v110 topAnchor];
  id v87 = [v107 bottomAnchor];
  id v88 = [v86 constraintGreaterThanOrEqualToAnchor:v87];

  Swift::String v89 = *(void **)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_searchButtonTopConstraint];
  *(void *)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_searchButtonTopConstraint] = v88;
  id v90 = v88;

  uint64_t v91 = swift_allocObject();
  *(_OWORD *)(v91 + 16) = xmmword_10055B950;
  *(void *)(v91 + 32) = v90;
  id v92 = v90;
  id v93 = [v110 bottomAnchor];
  id v94 = [v1 view];
  if (!v94)
  {
LABEL_15:
    __break(1u);
    return;
  }
  double v95 = v94;
  id v96 = [v94 safeAreaLayoutGuide];

  id v97 = [v96 bottomAnchor];
  id v98 = [v93 constraintEqualToAnchor:v97];

  LODWORD(v99) = 1132068864;
  [v98 setPriority:v99];
  *(void *)(v91 + 40) = v98;
  id v100 = [v110 leadingAnchor];
  id v101 = [v109 leadingAnchor];
  id v102 = [v100 constraintEqualToAnchor:v101];

  *(void *)(v91 + 48) = v102;
  id v103 = [v110 trailingAnchor];
  id v104 = [v109 trailingAnchor];
  id v105 = [v103 constraintEqualToAnchor:v104];

  *(void *)(v91 + 56) = v105;
  specialized Array._endMutation()();
  Class v112 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v111 activateConstraints:v112];
}

void sub_10028C35C(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_contentStackView);
  [v4 spacing];
  double v6 = v5;
  [v4 bounds];
  double v8 = v7;
  double v10 = v9;
  [*(id *)(v2 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_spacerView) bounds];
  double Height = CGRectGetHeight(v33);
  sub_10005D034(&qword_1006AF2D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10055C1E0;
  id v13 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_titleLabel);
  *(void *)(inited + 32) = v13;
  id v14 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_secondarySubtitleLabel);
  *(void *)(inited + 40) = v14;
  uint64_t v32 = inited;
  specialized Array._endMutation()();
  unint64_t v15 = v32 & 0xC000000000000001;
  id v16 = v13;
  id v17 = v14;
  if ((v32 & 0xC000000000000001) != 0) {
    id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v18 = *(id *)(v32 + 32);
  }
  uint64_t v19 = v18;
  if ([v18 isHidden])
  {
    [v19 sizeThatFits:v8, v10];
    double v21 = v20;

    double v22 = v6 + v21 + 0.0;
    if (v15)
    {
LABEL_6:
      id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_9;
    }
  }
  else
  {

    double v22 = 0.0;
    if (v15) {
      goto LABEL_6;
    }
  }
  id v23 = *(id *)(v32 + 40);
LABEL_9:
  id v24 = v23;
  if ([v23 isHidden])
  {
    [v24 sizeThatFits:v8, v10];
    double v26 = v25;
    swift_bridgeObjectRelease();

    double v22 = v22 + v6 + v26;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  char v27 = a1 < 0.1 || v22 < Height;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  sub_1000606BC(v28, (uint64_t)qword_1006D1E98);
  id v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 134218240;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 12) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "FMUnknownItemsLandingViewController: updateContentVisibility: percent: %f show: %{BOOL}d", (uint8_t *)v31, 0x12u);
    swift_slowDealloc();
  }

  sub_10028C650(v27, 1);
}

void sub_10028C650(char a1, char a2)
{
  char v3 = a1 & 1;
  uint64_t v4 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_showsAdditionalContent;
  if (*((unsigned char *)v2 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_showsAdditionalContent) != (a1 & 1))
  {
    double v5 = v2;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v2;
    *(unsigned char *)(v8 + 24) = v3;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v2;
    *(unsigned char *)(v9 + 24) = v3;
    uint64_t v10 = qword_1006AE190;
    id v11 = v5;
    if (v10 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_1000606BC(v12, (uint64_t)qword_1006D1E98);
    id v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 67109376;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v15 + 8) = 1024;
      LODWORD(aBlock) = a2 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMUnknownItemsLandingViewController: Update additional content visibility: %{BOOL}d, animated: %{BOOL}d", (uint8_t *)v15, 0xEu);
      swift_slowDealloc();
    }

    BOOL v16 = (a1 & 1) == 0;
    if (a1) {
      id v17 = sub_10028D19C;
    }
    else {
      id v17 = sub_10028D128;
    }
    if (v16) {
      uint64_t v18 = v8;
    }
    else {
      uint64_t v18 = v9;
    }
    if (v16) {
      uint64_t v19 = sub_10028D19C;
    }
    else {
      uint64_t v19 = sub_10028D128;
    }
    if (v16) {
      uint64_t v20 = v9;
    }
    else {
      uint64_t v20 = v8;
    }
    *((unsigned char *)v5 + v4) = v3;
    double v21 = self;
    if (a2)
    {
      id v34 = v19;
      id v35 = (void *)v20;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v31 = 1107296256;
      uint64_t v32 = sub_10003C410;
      CGRect v33 = &unk_100630288;
      double v22 = _Block_copy(&aBlock);
      swift_retain_n();
      swift_retain();
      swift_release();
      id v23 = (void *)swift_allocObject();
      void v23[2] = 0x3FE0000000000000;
      v23[3] = 4;
      v23[4] = v17;
      v23[5] = v18;
      id v34 = sub_10028D298;
      id v35 = v23;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v31 = 1107296256;
      uint64_t v32 = sub_1002F8BC0;
      CGRect v33 = &unk_1006302D8;
      id v24 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v21 animateWithDuration:4 delay:v22 options:v24 animations:0.25 completion:0.0];
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _Block_release(v24);
      _Block_release(v22);
    }
    else
    {
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v19;
      *(void *)(v25 + 24) = v20;
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = sub_100024A68;
      *(void *)(v26 + 24) = v25;
      id v34 = sub_100024A90;
      id v35 = (void *)v26;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v31 = 1107296256;
      uint64_t v32 = sub_100024A40;
      CGRect v33 = &unk_100630260;
      char v27 = _Block_copy(&aBlock);
      swift_retain_n();
      swift_retain();
      swift_retain();
      swift_release();
      [v21 performWithoutAnimation:v27];
      _Block_release(v27);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      uint64_t v29 = swift_release();
      if (isEscapingClosureAtFileLocation)
      {
        __break(1u);
      }
      else
      {
        ((void (*)(uint64_t))v17)(v29);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
    }
  }
}

void sub_10028CB2C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  if (a1)
  {
    uint64_t v9 = self;
    v11[4] = a3;
    v11[5] = a4;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    void v11[2] = sub_10003C410;
    v11[3] = &unk_100630300;
    uint64_t v10 = _Block_copy(v11);
    swift_retain();
    swift_release();
    [v9 animateWithDuration:a2 delay:v10 options:0 animations:a5 * 0.5 completion:0.0];
    _Block_release(v10);
  }
}

void sub_10028CC2C(char a1)
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000606BC(v2, (uint64_t)qword_1006D1E98);
  char v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134218240;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 12) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMUnknownItemsLandingViewController: didLockCard: percent: %f show: %{BOOL}d", (uint8_t *)v5, 0x12u);
    swift_slowDealloc();
  }

  sub_10028C650((a1 & 7) == 0, 0);
}

uint64_t sub_10028CD90()
{
  sub_100068760(v0 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_delegate);

  return swift_unknownObjectRelease();
}

id sub_10028CE60()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMUnknownItemsLandingViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for FMUnknownItemsLandingViewController()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for FMUnknownItemsLandingViewType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *id result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10028D060);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMUnknownItemsLandingViewType()
{
  return &type metadata for FMUnknownItemsLandingViewType;
}

unint64_t sub_10028D09C()
{
  unint64_t result = qword_1006B86E0;
  if (!qword_1006B86E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B86E0);
  }
  return result;
}

uint64_t sub_10028D0F0()
{
  return _swift_deallocObject(v0, 25, 7);
}

id sub_10028D128()
{
  uint64_t v1 = *(void *)(v0 + 16);
  BOOL v2 = (*(unsigned char *)(v0 + 24) & 1) == 0;
  [*(id *)(v1 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_titleLabel) setHidden:v2];
  int v3 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_secondarySubtitleLabel);

  return [v3 setHidden:v2];
}

id sub_10028D19C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (*(unsigned char *)(v0 + 24)) {
    double v2 = 1.0;
  }
  else {
    double v2 = 0.0;
  }
  [*(id *)(v1 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_titleLabel) setAlpha:v2];
  int v3 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_secondarySubtitleLabel);

  return [v3 setAlpha:v2];
}

uint64_t sub_10028D218()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10028D250()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10028D260()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10028D298(char a1)
{
  sub_10028CB2C(a1, *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(double *)(v1 + 16));
}

void sub_10028D2A8()
{
}

unint64_t sub_10028D2C8()
{
  unint64_t result = qword_1006B86F0;
  if (!qword_1006B86F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B86F0);
  }
  return result;
}

void sub_10028D31C()
{
}

uint64_t sub_10028D344()
{
  return 8;
}

uint64_t sub_10028D350()
{
  return swift_release();
}

uint64_t sub_10028D358(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_10028D368()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

void *sub_10028D3B0(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10028D3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034(&qword_1006B86E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10028D424()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10028D45C()
{
}

void sub_10028D464()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_contentStackView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v2 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_contentContainerView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v3 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_heroImageView;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v4 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_titleLabel;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v5 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_primarySubtitleLabel;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v6 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_secondarySubtitleLabel;
  *(void *)&v0[v6] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v7 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_searchButton;
  *(void *)&v0[v7] = [objc_allocWithZone((Class)UIButton) init];
  uint64_t v8 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_spacerView;
  *(void *)&v0[v8] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v9 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_searchButtonTopConstraint;
  *(void *)&v0[v9] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  v0[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_type] = 1;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_cardChangeSubscription] = 0;
  v0[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_showsAdditionalContent] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

double sub_10028D64C()
{
  double result = 18.0;
  xmmword_1006D1BE0 = xmmword_100562C10;
  *(_OWORD *)&qword_1006D1BF0 = xmmword_100562C10;
  return result;
}

void *sub_10028D664(uint64_t a1)
{
  v1[OBJC_IVAR____TtC6FindMy15FMEmptyListView_isFirstLayout] = 1;
  uint64_t v3 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_iconView;
  id v4 = objc_allocWithZone((Class)UIImageView);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_iconViewContainer;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v7 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_titleLabel;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v8 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_messageLabel;
  *(void *)&v5[v8] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v9 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButton;
  uint64_t v10 = (char *)objc_allocWithZone((Class)type metadata accessor for FMEmptyListButton());
  uint64_t v11 = OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor;
  uint64_t v12 = self;
  id v13 = v10;
  *(void *)&v10[v11] = [v12 systemBlueColor];
  v13[OBJC_IVAR____TtC6FindMy17FMEmptyListButton_isEnabled] = 1;

  id v14 = [v12 tertiarySystemFillColor];
  id v15 = sub_10004E188(v14, 1, 1, 0);

  *(void *)&v5[v9] = v15;
  uint64_t v16 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_scrollView;
  *(void *)&v5[v16] = [objc_allocWithZone((Class)type metadata accessor for FMScrollView()) init];
  uint64_t v17 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_fixedContainerView;
  *(void *)&v5[v17] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v18 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_scrollableContainerView;
  *(void *)&v5[v18] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v19 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButtonsStackView;
  *(void *)&v5[v19] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v20 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButtonCenteringConstraint;
  *(void *)&v5[v20] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  *(void *)&v5[OBJC_IVAR____TtC6FindMy15FMEmptyListView_mediator] = a1;
  swift_retain();

  v28.receiver = v5;
  v28.super_class = (Class)type metadata accessor for FMEmptyListView();
  double v21 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  double v22 = *(uint64_t (**)(void))((swift_isaMask & *v21) + 0x110);
  id v23 = v21;
  uint64_t v24 = v22();
  uint64_t v25 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v23) + 0x118))(v24);
  uint64_t v26 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v23) + 0x120))(v25);
  (*(void (**)(uint64_t))((swift_isaMask & *v23) + 0x128))(v26);
  sub_10004E4B8();

  swift_release();
  return v23;
}

id sub_10028DA50()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMEmptyListView();
  return [super dealloc];
}

void sub_10028DA84()
{
  uint64_t v1 = v0;
  v0[OBJC_IVAR____TtC6FindMy15FMEmptyListView_isFirstLayout] = 1;
  uint64_t v2 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_iconView;
  *(void *)&v1[v2] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v3 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_iconViewContainer;
  *(void *)&v1[v3] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v4 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_titleLabel;
  *(void *)&v1[v4] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v5 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_messageLabel;
  *(void *)&v1[v5] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v6 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButton;
  uint64_t v7 = (char *)objc_allocWithZone((Class)type metadata accessor for FMEmptyListButton());
  uint64_t v8 = OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor;
  uint64_t v9 = self;
  uint64_t v10 = v7;
  *(void *)&v7[v8] = [v9 systemBlueColor];
  v10[OBJC_IVAR____TtC6FindMy17FMEmptyListButton_isEnabled] = 1;

  id v11 = [v9 tertiarySystemFillColor];
  id v12 = sub_10004E188(v11, 1, 1, 0);

  *(void *)&v1[v6] = v12;
  uint64_t v13 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_scrollView;
  *(void *)&v1[v13] = [objc_allocWithZone((Class)type metadata accessor for FMScrollView()) init];
  uint64_t v14 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_fixedContainerView;
  *(void *)&v1[v14] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v15 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_scrollableContainerView;
  *(void *)&v1[v15] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v16 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButtonsStackView;
  *(void *)&v1[v16] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v17 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButtonCenteringConstraint;
  *(void *)&v1[v17] = [objc_allocWithZone((Class)NSLayoutConstraint) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10028DCC8()
{
  return _swift_deallocObject(v0, 26, 7);
}

void sub_10028DD00()
{
  qword_1006D1C00 = 0x4034000000000000;
}

UIFontTextStyle sub_10028DD10()
{
  qword_1006D1C08 = (uint64_t)UIFontTextStyleBody;
  return UIFontTextStyleBody;
}

UIFontTextStyle sub_10028DD28()
{
  qword_1006D1C10 = (uint64_t)UIFontTextStyleBody;
  return UIFontTextStyleBody;
}

char *sub_10028DDC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7 = OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_imageView;
  id v8 = objc_allocWithZone((Class)UIImageView);
  uint64_t v9 = v5;
  *(void *)&v5[v7] = [v8 init];
  uint64_t v10 = OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_titleLabel;
  *(void *)&v9[v10] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v11 = OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_subtitleLabel;
  *(void *)&v9[v11] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v12 = OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_imageViewContainer;
  *(void *)&v9[v12] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v13 = OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_verticalStackView;
  *(void *)&v9[v13] = [objc_allocWithZone((Class)UIStackView) init];

  v21.receiver = v9;
  v21.super_class = (Class)type metadata accessor for FMSymbolBulletedListItemView();
  uint64_t v14 = (char *)[super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v15 = *(void **)&v14[OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_titleLabel];
  uint64_t v16 = v14;
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v15 setText:v17];

  uint64_t v18 = *(void **)&v16[OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_subtitleLabel];
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v18 setText:v19];

  [*(id *)&v16[OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_imageView] setImage:a5];
  sub_10028DFC8();

  return v16;
}

void sub_10028DFC8()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_titleLabel];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_subtitleLabel];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_imageViewContainer];
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_imageView];
  id v5 = *(id *)&v0[OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_verticalStackView];
  id v6 = v1;
  id v7 = v2;
  id v8 = v3;
  id v9 = v4;
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];

  [v0 setAxis:0];
  [v0 setAlignment:3];
  [v0 setDistribution:0];
  if (qword_1006AE0F8 != -1) {
    swift_once();
  }
  [v0 setSpacing:*(double *)&qword_1006D1C00];
  [v8 addSubview:v9];
  [v0 addArrangedSubview:v8];
  [v0 addArrangedSubview:v5];
  [v9 setContentMode:4];
  LODWORD(v10) = 1148846080;
  [v9 setContentHuggingPriority:0 forAxis:v10];
  LODWORD(v11) = 1148846080;
  [v9 setContentCompressionResistancePriority:0 forAxis:v11];
  uint64_t v12 = self;
  if (qword_1006AE100 != -1) {
    swift_once();
  }
  id v13 = [v12 preferredFontForTextStyle:qword_1006D1C08];
  uint64_t v14 = (void *)sub_100042318(2);

  [v6 setFont:v14];
  uint64_t v15 = self;
  id v16 = [v15 labelColor];
  [v6 setTextColor:v16];

  if (qword_1006AE108 != -1) {
    swift_once();
  }
  id v17 = [v12 preferredFontForTextStyle:qword_1006D1C10];
  [v7 setFont:v17];

  id v18 = [v15 secondaryLabelColor];
  [v7 setTextColor:v18];

  id v19 = v6;
  id v20 = v7;
  [v19 setNumberOfLines:0];
  [v19 setAdjustsFontForContentSizeCategory:1];

  id v21 = v20;
  [v21 setNumberOfLines:0];
  [v21 setAdjustsFontForContentSizeCategory:1];

  [v5 setAxis:1];
  [v5 addArrangedSubview:v19];
  [v5 addArrangedSubview:v21];
  double v22 = self;
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_10055C200;
  id v24 = [v9 leadingAnchor];
  id v25 = [v8 leadingAnchor];
  id v26 = [v24 constraintEqualToAnchor:v25];

  *(void *)(v23 + 32) = v26;
  id v27 = [v9 trailingAnchor];
  id v28 = [v8 trailingAnchor];
  id v29 = [v27 constraintEqualToAnchor:v28];

  *(void *)(v23 + 40) = v29;
  id v30 = [v9 topAnchor];
  id v31 = [v8 topAnchor];
  id v32 = [v30 constraintGreaterThanOrEqualToAnchor:v31];

  *(void *)(v23 + 48) = v32;
  id v33 = [v9 bottomAnchor];
  id v34 = [v8 bottomAnchor];
  id v35 = [v33 constraintLessThanOrEqualToAnchor:v34];

  *(void *)(v23 + 56) = v35;
  id v36 = [v9 centerYAnchor];
  id v37 = [v19 firstBaselineAnchor];
  id v38 = [v36 constraintEqualToAnchor:v37];

  *(void *)(v23 + 64) = v38;
  specialized Array._endMutation()();
  sub_10004FCE4();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v22 activateConstraints:isa];
}

id sub_10028E690()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMSymbolBulletedListItemView();
  return [super dealloc];
}

uint64_t type metadata accessor for FMSymbolBulletedListItemView()
{
  return self;
}

void sub_10028E764()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_imageView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v2 = OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_titleLabel;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v3 = OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_subtitleLabel;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v4 = OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_imageViewContainer;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v5 = OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_verticalStackView;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)UIStackView) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10028E99C()
{
  id v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label), "text"));
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v3 = 0;
  }
  swift_bridgeObjectRetain();
  v4._uint64_t countAndFlagsBits = 32;
  v4._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = v3;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v6 = [self mainBundle];
  v11._uint64_t countAndFlagsBits = 0xD000000000000026;
  v11._unint64_t object = (void *)0x8000000100590890;
  v7._unint64_t object = (void *)0x8000000100590870;
  v7._uint64_t countAndFlagsBits = 0xD000000000000014;
  v8._uint64_t countAndFlagsBits = 0;
  v8._unint64_t object = (void *)0xE000000000000000;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v11);

  swift_bridgeObjectRetain();
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

void sub_10028EB10()
{
}

id sub_10028EB20()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMEmptyListButton();
  return [super dealloc];
}

void sub_10028EB54()
{
  uint64_t v1 = v0;
  sub_10004C4F0();
  switch(*(unsigned char *)(v0 + OBJC_IVAR____TtC6FindMy14FMTerminalView_state))
  {
    case 2:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    default:
      char v2 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v2)
      {
LABEL_4:
        uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_titleLabel);
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease();
        Swift::String v4 = self;
        id v5 = [v4 mainBundle];
        v6._uint64_t countAndFlagsBits = 0xD000000000000018;
        v20._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
        v20._unint64_t object = (void *)0x8000000100590930;
        v6._unint64_t object = (void *)0x8000000100590910;
        v7._uint64_t countAndFlagsBits = 0;
        v7._unint64_t object = (void *)0xE000000000000000;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v20);

        NSString v8 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v3 setText:v8];

        Swift::String v9 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_messageLabel);
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease();
        id v10 = [v4 mainBundle];
        v11._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
        v21._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
        v21._unint64_t object = (void *)0x8000000100590980;
        v11._unint64_t object = (void *)0x8000000100590960;
        v12._uint64_t countAndFlagsBits = 0;
        v12._unint64_t object = (void *)0xE000000000000000;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v21);

        NSString v13 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v9 setText:v13];

        id v14 = objc_retain(*(id *)(*(void *)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButton)
                                + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label));
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease();
        id v15 = [v4 mainBundle];
        v22._uint64_t countAndFlagsBits = 0xD000000000000023;
        v22._unint64_t object = (void *)0x8000000100589710;
        v16._unint64_t object = (void *)0x80000001005896F0;
        v16._uint64_t countAndFlagsBits = 0xD000000000000011;
        v17._uint64_t countAndFlagsBits = 0;
        v17._unint64_t object = (void *)0xE000000000000000;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v22);

        NSString v18 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v14 setText:v18];
      }
      return;
  }
}

void *sub_10028EF80(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return sub_10041146C(a1);
}

id sub_10028EFFC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMDevicesTerminalView();
  [super dealloc];
}

uint64_t type metadata accessor for FMDevicesTerminalView()
{
  return self;
}

uint64_t *sub_10028F054(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for FMIPDevice();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = *(int *)(sub_10005D034(&qword_1006AF350) + 48);
      NSString v8 = (char *)a1 + v7;
      Swift::String v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for FMIPItem();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_10005D034((uint64_t *)&unk_1006AFE30);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else
    {
      uint64_t v14 = type metadata accessor for FMIPItem();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10028F270(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for FMIPDevice();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
    uint64_t v3 = a1 + *(int *)(sub_10005D034(&qword_1006AF350) + 48);
    uint64_t v4 = type metadata accessor for FMIPItem();
    uint64_t v10 = *(void *)(v4 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v3, 1, v4);
    if (result) {
      return result;
    }
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    uint64_t v9 = v3;
    uint64_t v8 = v4;
  }
  else
  {
    uint64_t v6 = type metadata accessor for FMIPItem();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }

  return v7(v9, v8);
}

uint64_t sub_10028F3B4(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for FMIPDevice();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    uint64_t v5 = *(int *)(sub_10005D034(&qword_1006AF350) + 48);
    uint64_t v6 = (void *)(a1 + v5);
    uint64_t v7 = (const void *)(a2 + v5);
    uint64_t v8 = type metadata accessor for FMIPItem();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      uint64_t v10 = sub_10005D034((uint64_t *)&unk_1006AFE30);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  else
  {
    uint64_t v11 = type metadata accessor for FMIPItem();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10028F580(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100109FC4(a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for FMIPDevice();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = *(int *)(sub_10005D034(&qword_1006AF350) + 48);
      uint64_t v6 = (void *)(a1 + v5);
      uint64_t v7 = (const void *)(a2 + v5);
      uint64_t v8 = type metadata accessor for FMIPItem();
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      {
        uint64_t v10 = sub_10005D034((uint64_t *)&unk_1006AFE30);
        memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v6, v7, v8);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      }
    }
    else
    {
      uint64_t v11 = type metadata accessor for FMIPItem();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for FMLostModeTrackable()
{
  uint64_t result = qword_1006B88A8;
  if (!qword_1006B88A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10028F7A8(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for FMIPDevice();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    uint64_t v5 = *(int *)(sub_10005D034(&qword_1006AF350) + 48);
    uint64_t v6 = (void *)(a1 + v5);
    uint64_t v7 = (const void *)(a2 + v5);
    uint64_t v8 = type metadata accessor for FMIPItem();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      uint64_t v10 = sub_10005D034((uint64_t *)&unk_1006AFE30);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  else
  {
    uint64_t v11 = type metadata accessor for FMIPItem();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10028F974(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100109FC4(a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for FMIPDevice();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      uint64_t v5 = *(int *)(sub_10005D034(&qword_1006AF350) + 48);
      uint64_t v6 = (void *)(a1 + v5);
      uint64_t v7 = (const void *)(a2 + v5);
      uint64_t v8 = type metadata accessor for FMIPItem();
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      {
        uint64_t v10 = sub_10005D034((uint64_t *)&unk_1006AFE30);
        memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      }
    }
    else
    {
      uint64_t v11 = type metadata accessor for FMIPItem();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_10028FB50()
{
  uint64_t v0 = type metadata accessor for FMIPItem();
  if (v1 <= 0x3F)
  {
    v4[4] = *(void *)(v0 - 8) + 64;
    type metadata accessor for FMIPDevice();
    if (v2 <= 0x3F)
    {
      sub_100004840();
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        v4[5] = v4;
        swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

uint64_t sub_10028FC60()
{
  uint64_t v1 = type metadata accessor for FMIPFeatures();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = type metadata accessor for FMIPDevice();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FMLostModeTrackable();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100109F60(v0, (uint64_t)v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = (uint64_t)&v14[*(int *)(sub_10005D034(&qword_1006AF350) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    if (FMIPDevice.isLocalFindable.getter())
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      sub_100003F10(v15, (uint64_t *)&unk_1006AFE30);
      char v16 = 0;
    }
    else
    {
      FMIPDevice.features.getter();
      static FMIPFeatures.isNotifyWhenDetachedSupported.getter();
      sub_100175B20();
      char v17 = dispatch thunk of SetAlgebra.isSuperset(of:)();
      NSString v18 = *(void (**)(char *, uint64_t))(v2 + 8);
      v18(v5, v1);
      v18(v7, v1);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      char v16 = v17 ^ 1;
      sub_100003F10(v15, (uint64_t *)&unk_1006AFE30);
    }
  }
  else
  {
    sub_100109FC4((uint64_t)v14);
    char v16 = 1;
  }
  return v16 & 1;
}

BOOL sub_10028FF28()
{
  uint64_t v48 = type metadata accessor for FMIPItem();
  uint64_t v51 = *(void *)(v48 - 8);
  uint64_t v0 = __chkstk_darwin(v48);
  id v50 = (char *)&v43 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v0);
  id v45 = (char *)&v43 - v2;
  uint64_t v3 = type metadata accessor for FMIPFeatures();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  uint64_t v47 = v4;
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v43 - v8;
  uint64_t v10 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v43 - v14;
  uint64_t v16 = type metadata accessor for FMIPDevice();
  uint64_t v49 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  NSString v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for FMLostModeTrackable();
  __chkstk_darwin(v19);
  Swift::String v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = [self currentNotificationCenter];
  id v23 = [v22 notificationSettings];

  unint64_t v24 = (unint64_t)[v23 authorizationStatus];
  if ((v24 | 2) == 3) {
    return 0;
  }
  uint64_t v28 = (uint64_t)v50;
  uint64_t v27 = v51;
  id v44 = v13;
  sub_100109F60(v52, (uint64_t)v21);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    id v31 = v21;
    uint64_t v32 = v48;
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v28, v31, v48);
    Swift::Bool v25 = FMIPItem.canEnableNotifyWhenFound()();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v32);
    return v25;
  }
  uint64_t v29 = (uint64_t)&v21[*(int *)(sub_10005D034(&qword_1006AF350) + 48)];
  uint64_t v30 = v49;
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v18, v21, v16);
  sub_100067E48(v29, (uint64_t)v15, (uint64_t *)&unk_1006AFE30);
  if (FMIPDevice.isLocalFindable.getter())
  {
    sub_100003F10((uint64_t)v15, (uint64_t *)&unk_1006AFE30);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v16);
    return 0;
  }
  id v50 = v15;
  uint64_t v52 = v16;
  FMIPDevice.features.getter();
  static FMIPFeatures.isNotifyWhenDetachedSupported.getter();
  sub_100175B20();
  uint64_t v33 = v46;
  char v34 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  id v35 = *(void (**)(char *, uint64_t))(v47 + 8);
  v35(v7, v33);
  v35(v9, v33);
  if (v34)
  {
    sub_100003F10((uint64_t)v50, (uint64_t *)&unk_1006AFE30);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v18, v52);
    return 0;
  }
  uint64_t v36 = (uint64_t)v50;
  uint64_t v37 = (uint64_t)v44;
  sub_10010A088((uint64_t)v50, (uint64_t)v44);
  uint64_t v38 = v48;
  int v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v37, 1, v48);
  uint64_t v40 = v49;
  uint64_t v41 = v52;
  if (v39 == 1)
  {
    sub_100003F10(v37, (uint64_t *)&unk_1006AFE30);
    Swift::Bool v25 = FMIPDevice.canEnableNotifyWhenFound()();
  }
  else
  {
    id v42 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v45, v37, v38);
    Swift::Bool v25 = FMIPItem.canEnableNotifyWhenFound()();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v42, v38);
  }
  sub_100003F10(v36, (uint64_t *)&unk_1006AFE30);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v18, v41);
  return v25;
}

uint64_t sub_1002904C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006AF820);
  __chkstk_darwin(v4 - 8);
  uint64_t v36 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMIPProductType();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMIPItem();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FMLostModeTrackable();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100109F60(v2, (uint64_t)v16);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = (uint64_t)&v16[*(int *)(sub_10005D034(&qword_1006AF350) + 48)];
    uint64_t v18 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
    sub_100003F10(v17, (uint64_t *)&unk_1006AFE30);
    uint64_t v19 = type metadata accessor for FMIPDevice();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v16, v19);
  }
  uint64_t v21 = a1;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v16, v10);
  FMIPItem.productType.getter();
  int v22 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v22 == enum case for FMIPProductType.b389(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    sub_100003F10((uint64_t)v9, &qword_1006B5280);
  }
  else
  {
    int v23 = v22;
    if (v22 != enum case for FMIPProductType.zeus(_:))
    {
      int v32 = enum case for FMIPProductType.hawkeye(_:);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      if (v23 == v32)
      {
        (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
        uint64_t v33 = type metadata accessor for URL();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v21, 1, 1, v33);
        return sub_100003F10((uint64_t)v9, &qword_1006B3700);
      }
      else
      {
        uint64_t v34 = type metadata accessor for URL();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v21, 1, 1, v34);
        return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      }
    }
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    uint64_t v24 = type metadata accessor for FMIPZeusProductInformation();
    (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v9, v24);
  }
  id v25 = [self mainBundle];
  NSString v26 = String._bridgeToObjectiveC()();
  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = [v25 URLForResource:v26 withExtension:v27];

  uint64_t v29 = (uint64_t)v36;
  if (v28)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v30 = type metadata accessor for URL();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 0, 1, v30);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v31 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v29, 1, 1, v31);
  }
  return sub_100067E48(v29, a1, (uint64_t *)&unk_1006AF820);
}

uint64_t sub_100290A94()
{
  uint64_t v1 = type metadata accessor for FMIPItem();
  uint64_t v22 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMIPDevice();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FMLostModeTrackable();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100109F60(v0, (uint64_t)v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = (uint64_t)&v13[*(int *)(sub_10005D034(&qword_1006AF350) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
    sub_100067E48(v14, (uint64_t)v6, (uint64_t *)&unk_1006AFE30);
    uint64_t v23 = 0;
    unint64_t v24 = 0xE000000000000000;
    _StringGuts.grow(_:)(46);
    v15._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    v15._unint64_t object = (void *)0x80000001005909D0;
    String.append(_:)(v15);
    _print_unlocked<A, B>(_:_:)();
    v16._uint64_t countAndFlagsBits = 0x61506D657469202CLL;
    v16._unint64_t object = (void *)0xEC000000203A7472;
    String.append(_:)(v16);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v17 = v23;
    sub_100003F10((uint64_t)v6, (uint64_t *)&unk_1006AFE30);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    uint64_t v18 = v22;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v3, v13, v1);
    uint64_t v23 = 0;
    unint64_t v24 = 0xE000000000000000;
    _StringGuts.grow(_:)(30);
    v19._unint64_t object = (void *)0x80000001005909B0;
    v19._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
    String.append(_:)(v19);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v17 = v23;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v3, v1);
  }
  return v17;
}

uint64_t FMFLocationAlert.localizedPlaceAndScheduleString.getter()
{
  sub_100290F94();
  uint64_t v0 = (void *)FMFLocationAlert.fence.getter();
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 localizedSubtitleStringWithLocationName:v1];

  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRelease();

  return v3;
}

Swift::String __swiftcall FMFLocationAlert.requestNotificationString(follower:)(Swift::String follower)
{
  sub_100290F94();
  NSString v1 = (void *)FMFLocationAlert.fence.getter();
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 localizedRequestNotificationStringForFollower:v2 locationName:v3];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();

  uint64_t v8 = v5;
  uint64_t v9 = v7;
  result._unint64_t object = v9;
  result._uint64_t countAndFlagsBits = v8;
  return result;
}

uint64_t sub_100290F94()
{
  uint64_t v0 = sub_10005D034((uint64_t *)&unk_1006AF710);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  NSString v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v26 - v4;
  uint64_t v6 = type metadata accessor for FMFLocation();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  NSString v27 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10005D034(&qword_1006B8930);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FMFLabel();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  Swift::String v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  FMFLocationAlert.label.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_100003F10((uint64_t)v11, &qword_1006B8930);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    uint64_t v16 = FMFLabel.value.getter();
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    uint64_t v19 = HIBYTE(v18) & 0xF;
    if ((v18 & 0x2000000000000000) == 0) {
      uint64_t v19 = v16 & 0xFFFFFFFFFFFFLL;
    }
    if (v19)
    {
      uint64_t countAndFlagsBits = FMFLabel.value.getter();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      return countAndFlagsBits;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  FMFLocationAlert.location.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100003F10((uint64_t)v5, (uint64_t *)&unk_1006AF710);
    uint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v21 = [self mainBundle];
    v30._uint64_t countAndFlagsBits = 0xD000000000000037;
    v30._unint64_t object = (void *)0x8000000100590A40;
    v22._unint64_t object = (void *)0x8000000100590A10;
    v22._uint64_t countAndFlagsBits = 0xD000000000000025;
    v23._uint64_t countAndFlagsBits = 0;
    v23._unint64_t object = (void *)0xE000000000000000;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v30)._countAndFlagsBits;
  }
  else
  {
    unint64_t v24 = v27;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v27, v5, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v3, v24, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v3, 0, 1, v6);
    uint64_t countAndFlagsBits = sub_10005BE00((uint64_t)v3, 0);
    sub_100003F10((uint64_t)v3, (uint64_t *)&unk_1006AF710);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v24, v6);
  }
  return countAndFlagsBits;
}

id sub_1002914D0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMMutableGestureView();
  return [super dealloc];
}

uint64_t type metadata accessor for FMMutableGestureView()
{
  return self;
}

void sub_1002915BC(void *a1, char *a2)
{
  id v267 = a1;
  uint64_t v247 = type metadata accessor for FMFLabelSourceType();
  uint64_t v249 = *(void *)(v247 - 8);
  __chkstk_darwin(v247);
  char v231 = (char *)&v226 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v245 = sub_10005D034(&qword_1006B8918);
  uint64_t v5 = __chkstk_darwin(v245);
  uint64_t v7 = (char *)&v226 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v246 = (uint64_t)&v226 - v8;
  uint64_t v9 = sub_10005D034((uint64_t *)&unk_1006B8920);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v230 = (uint64_t)&v226 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  v236 = (char *)&v226 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v237 = (char *)&v226 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v232 = (uint64_t)&v226 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v244 = (uint64_t)&v226 - v19;
  __chkstk_darwin(v18);
  uint64_t v250 = (uint64_t)&v226 - v20;
  uint64_t v257 = sub_10005D034(&qword_1006BFB00);
  __chkstk_darwin(v257);
  uint64_t v265 = (uint64_t)&v226 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10005D034(&qword_1006AF770);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  v258 = (char *)&v226 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v263 = (char *)&v226 - v26;
  __chkstk_darwin(v25);
  uint64_t v254 = (char *)&v226 - v27;
  uint64_t v260 = type metadata accessor for FMFLabel();
  uint64_t v253 = *(void *)(v260 - 8);
  __chkstk_darwin(v260);
  unint64_t v29 = (char *)&v226 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v238 = type metadata accessor for FMFDefaultLabel();
  uint64_t v234 = *(void *)(v238 - 8);
  __chkstk_darwin(v238);
  uint64_t v233 = (char *)&v226 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v261 = (void *)type metadata accessor for FMFLocation();
  uint64_t v252 = *(v261 - 1);
  uint64_t v31 = __chkstk_darwin(v261);
  uint64_t v239 = (char *)&v226 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v243 = (char *)&v226 - v34;
  __chkstk_darwin(v33);
  uint64_t v228 = (char *)&v226 - v35;
  uint64_t v36 = sub_10005D034((uint64_t *)&unk_1006AF710);
  uint64_t v37 = __chkstk_darwin(v36 - 8);
  uint64_t v248 = (uint64_t)&v226 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v251 = (uint64_t)&v226 - v40;
  __chkstk_darwin(v39);
  id v42 = (char *)&v226 - v41;
  uint64_t v43 = sub_10005D034(&qword_1006B8930);
  uint64_t v44 = __chkstk_darwin(v43 - 8);
  uint64_t v235 = (uint64_t)&v226 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v242 = (uint64_t)&v226 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  uint64_t v241 = (uint64_t)&v226 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  uint64_t v259 = (uint64_t)&v226 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v229 = (char *)&v226 - v53;
  __chkstk_darwin(v52);
  id v55 = (char *)&v226 - v54;
  uint64_t v56 = type metadata accessor for IndexPath();
  uint64_t v57 = *(void *)(v56 - 8);
  uint64_t v58 = __chkstk_darwin(v56);
  uint64_t v240 = (char *)&v226 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __chkstk_darwin(v58);
  uint64_t v269 = (char *)&v226 - v61;
  __chkstk_darwin(v60);
  id v63 = (char *)&v226 - v62;
  double v268 = v2;
  BOOL v64 = sub_1003DBCA0();
  uint64_t v65 = IndexPath.section.getter();
  double v66 = *(void (**)(uint64_t, char *, uint64_t))(v57 + 16);
  uint64_t v256 = (void (*)(char *, void, uint64_t))(v57 + 16);
  char v255 = v66;
  v66((uint64_t)v63, a2, v56);
  uint64_t v262 = v57;
  if (v65)
  {
    uint64_t v264 = *(void (**)(char *, uint64_t))(v57 + 8);
    v264(v63, v56);
  }
  else
  {
    uint64_t v67 = IndexPath.item.getter();
    uint64_t v264 = *(void (**)(char *, uint64_t))(v57 + 8);
    v264(v63, v56);
    if (!v67)
    {
      id v107 = objc_allocWithZone((Class)type metadata accessor for FMLabelTableViewLocationCell());
      id v108 = sub_10042F6A8(0xD00000000000001CLL, 0x8000000100590BC0);
      uint64_t v109 = *(void *)&v268[OBJC_IVAR____TtC6FindMy21FMLabelViewController_displayAddress + 8];
      __int16 v110 = *(_WORD *)&v268[OBJC_IVAR____TtC6FindMy21FMLabelViewController_displayAddress + 16];
      id v111 = &v108[OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_displayAddress];
      *(void *)id v111 = *(void *)&v268[OBJC_IVAR____TtC6FindMy21FMLabelViewController_displayAddress];
      *((void *)v111 + 1) = v109;
      *((_WORD *)v111 + 8) = v110;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_10042FF74();
      [v108 setSelectionStyle:0];
      return;
    }
  }
  Swift::String v227 = v7;
  uint64_t v68 = IndexPath.section.getter();
  uint64_t v69 = IndexPath.item.getter();
  if (!v68 && __OFSUB__(v69, 1))
  {
    __break(1u);
    goto LABEL_127;
  }
  IndexPath.section.getter();
  IndexPath.init(item:section:)();
  id v70 = v267;
  id v71 = [v267 allowsSelection];
  NSString v72 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v74 = [v70 dequeueReusableCellWithIdentifier:v72 forIndexPath:isa];

  [v74 setUserInteractionEnabled:v71];
  id v266 = v74;
  id v75 = [v74 textLabel];
  if (v75)
  {
    id v76 = v75;
    id v77 = self;
    id v78 = &selRef_labelColor;
    if (!v71) {
      id v78 = &selRef_secondaryLabelColor;
    }
    id v79 = [v77 *v78];
    [v76 setTextColor:v79];
  }
  id v80 = [v266 textLabel];
  if (v80)
  {
    id v81 = v80;
    id v82 = [self preferredFontForTextStyle:*(void *)&v268[OBJC_IVAR____TtC6FindMy21FMLabelViewController_style]];
    [v81 setFont:v82];
  }
  if (IndexPath.section.getter())
  {
    if (IndexPath.section.getter() == 1)
    {
      uint64_t v83 = OBJC_IVAR____TtC6FindMy21FMLabelViewController_customLabels;
      uint64_t v84 = *(void *)&v268[OBJC_IVAR____TtC6FindMy21FMLabelViewController_customLabels];
      uint64_t v86 = v262;
      uint64_t v85 = (uint64_t)v263;
      if (v84) {
        uint64_t v87 = *(void *)(v84 + 16);
      }
      else {
        uint64_t v87 = 0;
      }
      if (IndexPath.item.getter() == v87
        && v268[OBJC_IVAR____TtC6FindMy21FMLabelViewController_isShowingAddCustomLabel] == 1)
      {
        id v90 = v266;
        id v112 = [v266 textLabel];
        if (v112)
        {
          id v113 = v112;
          uint64_t v270 = 0;
          unint64_t v271 = 0xE000000000000000;
          _StringGuts.grow(_:)(20);
          swift_bridgeObjectRelease();
          id v114 = [self mainBundle];
          v115._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
          v273._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
          v273._unint64_t object = (void *)0x8000000100590B40;
          v115._unint64_t object = (void *)0x8000000100590B20;
          v116._uint64_t countAndFlagsBits = 0;
          v116._unint64_t object = (void *)0xE000000000000000;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v115, (Swift::String_optional)0, (NSBundle)v114, v116, v273);

          NSString v117 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v113 setText:v117];
        }
        id v118 = [v90 textLabel];
        if (v118)
        {
          id v119 = v118;
          id v120 = [self systemBlueColor];
          [v119 setTextColor:v120];
        }
        uint64_t v243 = 0;
        id v98 = 0;
        LODWORD(v251) = 0;
        uint64_t v93 = (uint64_t)v258;
        uint64_t v106 = (uint64_t)v254;
        uint64_t v99 = v86;
LABEL_67:
        id v156 = [v267 indexPathForSelectedRow];
        uint64_t v263 = v98;
        if (v156)
        {
          id v157 = v156;
          static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

          id v158 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v99 + 56);
          v158(v106, 0, 1, v56);
        }
        else
        {
          id v158 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v99 + 56);
          v158(v106, 1, 1, v56);
        }
        v255(v85, v269, v56);
        v158(v85, 0, 1, v56);
        uint64_t v159 = v265;
        uint64_t v160 = v265 + *(int *)(v257 + 48);
        sub_100006AB0(v106, v265, &qword_1006AF770);
        uint64_t v161 = v159;
        sub_100006AB0(v85, v160, &qword_1006AF770);
        uint64_t v162 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v99 + 48);
        if (v162(v159, 1, v56) == 1)
        {
          sub_100003F10(v85, &qword_1006AF770);
          uint64_t v161 = v265;
          sub_100003F10(v106, &qword_1006AF770);
          int v163 = v162(v160, 1, v56);
          id v164 = v263;
          if (v163 == 1)
          {
            sub_100003F10(v161, &qword_1006AF770);
            uint64_t v165 = 3;
            Class v166 = v261;
            int v167 = v251;
            goto LABEL_79;
          }
        }
        else
        {
          sub_100006AB0(v159, v93, &qword_1006AF770);
          if (v162(v160, 1, v56) != 1)
          {
            id v168 = v240;
            (*(void (**)(char *, uint64_t, uint64_t))(v99 + 32))(v240, v160, v56);
            sub_100296114((unint64_t *)&unk_1006B8940, (void (*)(uint64_t))&type metadata accessor for IndexPath);
            char v169 = dispatch thunk of static Equatable.== infix(_:_:)();
            id v170 = v168;
            id v171 = (void (*)(uint64_t, uint64_t))v264;
            v264(v170, v56);
            sub_100003F10(v85, &qword_1006AF770);
            sub_100003F10(v106, &qword_1006AF770);
            v171(v93, v56);
            sub_100003F10(v265, &qword_1006AF770);
            id v164 = v263;
            Class v166 = v261;
            int v167 = v251;
            if (v169)
            {
              uint64_t v165 = 3;
              goto LABEL_79;
            }
LABEL_78:
            uint64_t v165 = 0;
LABEL_79:
            id v172 = &selRef_tableView_viewForFooterInSection_;
            [v90 setSelectionStyle:v165];
            if (v167 && !*(void *)&v268[OBJC_IVAR____TtC6FindMy21FMLabelViewController_selectedLabelValue + 8]
              || v164
              && (id v173 = *(char **)&v268[OBJC_IVAR____TtC6FindMy21FMLabelViewController_selectedLabelValue + 8]) != 0
              && (*(char **)&v268[OBJC_IVAR____TtC6FindMy21FMLabelViewController_selectedLabelValue] == v243
               && v173 == v164
               || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
            {
              id v174 = [v90 accessoryView];

              if (!v174) {
                [v90 setAccessoryType:3];
              }
              swift_bridgeObjectRelease();
              goto LABEL_124;
            }
            LODWORD(v267) = [v267 allowsSelection];
            [v90 setAccessoryType:0];
            uint64_t v175 = (uint64_t)&v268[OBJC_IVAR____TtC6FindMy21FMLabelViewController_location];
            swift_beginAccess();
            uint64_t v176 = v248;
            sub_100006AB0(v175, v248, (uint64_t *)&unk_1006AF710);
            uint64_t v177 = v252;
            if ((*(unsigned int (**)(uint64_t, uint64_t, void *))(v252 + 48))(v176, 1, v166))
            {
              sub_100003F10(v176, (uint64_t *)&unk_1006AF710);
              uint64_t v178 = v259;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v253 + 56))(v259, 1, 1, v260);
            }
            else
            {
              id v179 = v239;
              (*(void (**)(char *, uint64_t, void *))(v177 + 16))(v239, v176, v166);
              sub_100003F10(v176, (uint64_t *)&unk_1006AF710);
              uint64_t v178 = v259;
              FMFLocation.label.getter();
              (*(void (**)(char *, void *))(v177 + 8))(v179, v166);
            }
            uint64_t v180 = v250;
            if (!v167)
            {
              uint64_t v189 = 3;
LABEL_123:
              [v90 v172[221] v189];
              swift_bridgeObjectRelease();
              sub_100003F10(v178, &qword_1006B8930);
LABEL_124:
              v264(v269, v56);
              return;
            }
            uint64_t v181 = v241;
            sub_100006AB0(v178, v241, &qword_1006B8930);
            uint64_t v182 = v253;
            uint64_t v183 = *(void **)(v253 + 48);
            uint64_t v184 = v260;
            uint64_t v265 = v253 + 48;
            uint64_t v261 = v183;
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v183)(v181, 1, v260) == 1)
            {
              sub_100003F10(v181, &qword_1006B8930);
              uint64_t v185 = v249;
              uint64_t v186 = v247;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v249 + 56))(v180, 1, 1, v247);
              uint64_t v187 = v246;
              uint64_t v188 = v244;
            }
            else
            {
              FMFLabel.labelSourceType.getter();
              (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v181, v184);
              uint64_t v185 = v249;
              uint64_t v187 = v246;
              uint64_t v188 = v244;
              uint64_t v186 = v247;
            }
            Swift::String v190 = *(void (**)(char *, void, uint64_t))(v185 + 104);
            v258 = (char *)(v185 + 104);
            uint64_t v256 = v190;
            v190((char *)v188, enum case for FMFLabelSourceType.friend(_:), v186);
            uint64_t v257 = *(void *)(v185 + 56);
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v257)(v188, 0, 1, v186);
            uint64_t v191 = v187 + *(int *)(v245 + 48);
            sub_100006AB0(v180, v187, (uint64_t *)&unk_1006B8920);
            uint64_t v192 = v249;
            sub_100006AB0(v188, v191, (uint64_t *)&unk_1006B8920);
            id v193 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v192 + 48);
            unsigned int v194 = v193(v187, 1, v186);
            double v268 = (char *)v193;
            if (v194 == 1)
            {
              sub_100003F10(v188, (uint64_t *)&unk_1006B8920);
              sub_100003F10(v180, (uint64_t *)&unk_1006B8920);
              id v195 = &selRef_tableView_viewForFooterInSection_;
              uint64_t v196 = v186;
              if (v193(v191, 1, v186) == 1)
              {
                sub_100003F10(v246, (uint64_t *)&unk_1006B8920);
                uint64_t v197 = v242;
                sub_100006AB0(v259, v242, &qword_1006B8930);
LABEL_104:
                sub_100003F10(v197, &qword_1006B8930);
                char v202 = 1;
                id v90 = v266;
                id v172 = &selRef_tableView_viewForFooterInSection_;
LABEL_116:
                id v219 = [v90 v195[232]];
                uint64_t v178 = v259;
                if (v219)
                {
                  uint64_t v220 = v219;
                  char v221 = v202 | ~(_BYTE)v267;
                  uint64_t v222 = self;
                  uint64_t v223 = &selRef_secondaryLabelColor;
                  if ((v221 & 1) == 0) {
                    uint64_t v223 = &selRef_labelColor;
                  }
                  id v224 = [v222 *v223];
                  [v220 setTextColor:v224];
                }
                if (v202) {
                  uint64_t v189 = 0;
                }
                else {
                  uint64_t v189 = 3;
                }
                goto LABEL_123;
              }
            }
            else
            {
              uint64_t v198 = v232;
              sub_100006AB0(v187, v232, (uint64_t *)&unk_1006B8920);
              if (v193(v191, 1, v186) != 1)
              {
                uint64_t v199 = v231;
                (*(void (**)(char *, uint64_t, uint64_t))(v192 + 32))(v231, v191, v186);
                sub_100296114(&qword_1006B8938, (void (*)(uint64_t))&type metadata accessor for FMFLabelSourceType);
                char v200 = dispatch thunk of static Equatable.== infix(_:_:)();
                id v201 = *(void (**)(char *, uint64_t))(v192 + 8);
                v201(v199, v247);
                sub_100003F10(v244, (uint64_t *)&unk_1006B8920);
                sub_100003F10(v250, (uint64_t *)&unk_1006B8920);
                v201((char *)v198, v247);
                uint64_t v196 = v247;
                sub_100003F10(v187, (uint64_t *)&unk_1006B8920);
                uint64_t v197 = v242;
                sub_100006AB0(v259, v242, &qword_1006B8930);
                id v195 = &selRef_tableView_viewForFooterInSection_;
                if (v200) {
                  goto LABEL_104;
                }
LABEL_105:
                uint64_t v203 = v235;
                sub_100006AB0(v197, v235, &qword_1006B8930);
                uint64_t v204 = v260;
                if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v261)(v203, 1, v260) == 1)
                {
                  sub_100003F10(v203, &qword_1006B8930);
                  uint64_t v205 = (uint64_t)v237;
                  uint64_t v206 = (void (*)(uint64_t, void, uint64_t, uint64_t))v257;
                  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v257)(v237, 1, 1, v196);
                  uint64_t v207 = v196;
                  uint64_t v208 = (uint64_t)v227;
                }
                else
                {
                  uint64_t v205 = (uint64_t)v237;
                  FMFLabel.labelSourceType.getter();
                  (*(void (**)(uint64_t, uint64_t))(v253 + 8))(v203, v204);
                  uint64_t v207 = v196;
                  uint64_t v208 = (uint64_t)v227;
                  uint64_t v206 = (void (*)(uint64_t, void, uint64_t, uint64_t))v257;
                }
                uint64_t v209 = (uint64_t)v236;
                v256(v236, enum case for FMFLabelSourceType.premises(_:), v207);
                v206(v209, 0, 1, v207);
                uint64_t v210 = v208 + *(int *)(v245 + 48);
                sub_100006AB0(v205, v208, (uint64_t *)&unk_1006B8920);
                sub_100006AB0(v209, v210, (uint64_t *)&unk_1006B8920);
                uint64_t v211 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v268;
                if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v268)(v208, 1, v207) == 1)
                {
                  sub_100003F10(v209, (uint64_t *)&unk_1006B8920);
                  sub_100003F10(v205, (uint64_t *)&unk_1006B8920);
                  sub_100003F10(v197, &qword_1006B8930);
                  unsigned int v212 = v211(v210, 1, v207);
                  id v172 = &selRef_tableView_viewForFooterInSection_;
                  id v195 = &selRef_tableView_viewForFooterInSection_;
                  if (v212 == 1)
                  {
                    sub_100003F10(v208, (uint64_t *)&unk_1006B8920);
                    char v202 = 1;
LABEL_114:
                    id v90 = v266;
                    goto LABEL_116;
                  }
                }
                else
                {
                  uint64_t v213 = v211;
                  uint64_t v214 = v230;
                  sub_100006AB0(v208, v230, (uint64_t *)&unk_1006B8920);
                  if (v213(v210, 1, v207) != 1)
                  {
                    uint64_t v215 = v209;
                    uint64_t v216 = v249;
                    int v217 = v231;
                    (*(void (**)(char *, uint64_t, uint64_t))(v249 + 32))(v231, v210, v207);
                    sub_100296114(&qword_1006B8938, (void (*)(uint64_t))&type metadata accessor for FMFLabelSourceType);
                    char v202 = dispatch thunk of static Equatable.== infix(_:_:)();
                    uint64_t v218 = *(void (**)(char *, uint64_t))(v216 + 8);
                    v218(v217, v207);
                    sub_100003F10(v215, (uint64_t *)&unk_1006B8920);
                    sub_100003F10(v205, (uint64_t *)&unk_1006B8920);
                    sub_100003F10(v242, &qword_1006B8930);
                    v218((char *)v214, v207);
                    sub_100003F10(v208, (uint64_t *)&unk_1006B8920);
                    id v90 = v266;
                    id v172 = &selRef_tableView_viewForFooterInSection_;
                    id v195 = &selRef_tableView_viewForFooterInSection_;
                    goto LABEL_116;
                  }
                  sub_100003F10(v209, (uint64_t *)&unk_1006B8920);
                  sub_100003F10(v205, (uint64_t *)&unk_1006B8920);
                  sub_100003F10(v197, &qword_1006B8930);
                  (*(void (**)(uint64_t, uint64_t))(v249 + 8))(v214, v207);
                  id v172 = &selRef_tableView_viewForFooterInSection_;
                  id v195 = &selRef_tableView_viewForFooterInSection_;
                }
                sub_100003F10(v208, &qword_1006B8918);
                char v202 = 0;
                goto LABEL_114;
              }
              sub_100003F10(v244, (uint64_t *)&unk_1006B8920);
              sub_100003F10(v250, (uint64_t *)&unk_1006B8920);
              (*(void (**)(uint64_t, uint64_t))(v192 + 8))(v198, v186);
              uint64_t v196 = v186;
            }
            sub_100003F10(v246, &qword_1006B8918);
            uint64_t v197 = v242;
            sub_100006AB0(v259, v242, &qword_1006B8930);
            goto LABEL_105;
          }
          sub_100003F10(v85, &qword_1006AF770);
          sub_100003F10(v106, &qword_1006AF770);
          v264((char *)v93, v56);
          id v164 = v263;
        }
        sub_100003F10(v161, &qword_1006BFB00);
        Class v166 = v261;
        int v167 = v251;
        goto LABEL_78;
      }
      uint64_t v121 = *(void *)&v268[v83];
      uint64_t v122 = v260;
      if (!v121)
      {
        uint64_t v243 = 0;
        id v98 = 0;
LABEL_47:
        uint64_t v106 = (uint64_t)v254;
        swift_bridgeObjectRetain();
        id v90 = v266;
        id v136 = [v266 textLabel];
        uint64_t v99 = v86;
        if (v136)
        {
          uint64_t v137 = v136;
          uint64_t v93 = (uint64_t)v258;
          if (v98)
          {
            NSString v138 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
          }
          else
          {
            NSString v138 = 0;
          }
          [v137 setText:v138];

          LODWORD(v251) = 0;
        }
        else
        {
          swift_bridgeObjectRelease();
          LODWORD(v251) = 0;
          uint64_t v93 = (uint64_t)v258;
        }
        goto LABEL_67;
      }
      swift_bridgeObjectRetain();
      unint64_t v123 = IndexPath.item.getter();
      if ((v123 & 0x8000000000000000) == 0)
      {
        if (v123 < *(void *)(v121 + 16))
        {
          uint64_t v124 = v253;
          (*(void (**)(char *, unint64_t, uint64_t))(v253 + 16))(v29, v121+ ((*(unsigned __int8 *)(v124 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80))+ *(void *)(v124 + 72) * v123, v122);
          swift_bridgeObjectRelease();
          uint64_t v243 = (char *)FMFLabel.localizedValue.getter();
          uint64_t v125 = v124;
          id v98 = v126;
          (*(void (**)(char *, uint64_t))(v125 + 8))(v29, v122);
          goto LABEL_47;
        }
        goto LABEL_129;
      }
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
      goto LABEL_130;
    }
    uint64_t v243 = 0;
    id v98 = 0;
    LODWORD(v251) = 0;
    uint64_t v99 = v262;
    id v90 = v266;
    goto LABEL_26;
  }
  BOOL v88 = v64;
  uint64_t v89 = *(void *)(static FMFLabel.defaultLabels(includingOther:)() + 16);
  swift_bridgeObjectRelease();
  if (__OFADD__(v89 + v88, 1))
  {
LABEL_127:
    __break(1u);
    goto LABEL_128;
  }
  if (IndexPath.item.getter() == 0 && v64)
  {
    id v90 = v266;
    id v91 = [v266 textLabel];
    id v92 = v261;
    uint64_t v93 = (uint64_t)v258;
    uint64_t v85 = (uint64_t)v263;
    if (v91)
    {
      id v94 = v91;
      uint64_t v95 = (uint64_t)&v268[OBJC_IVAR____TtC6FindMy21FMLabelViewController_location];
      swift_beginAccess();
      sub_100006AB0(v95, (uint64_t)v42, (uint64_t *)&unk_1006AF710);
      uint64_t v96 = v252;
      if ((*(unsigned int (**)(char *, uint64_t, void *))(v252 + 48))(v42, 1, v92))
      {
        sub_100003F10((uint64_t)v42, (uint64_t *)&unk_1006AF710);
        NSString v97 = 0;
      }
      else
      {
        id v139 = v228;
        (*(void (**)(char *, char *, void *))(v96 + 16))(v228, v42, v92);
        sub_100003F10((uint64_t)v42, (uint64_t *)&unk_1006AF710);
        FMFLocation.label.getter();
        (*(void (**)(char *, void *))(v96 + 8))(v139, v92);
        uint64_t v140 = v253;
        uint64_t v141 = v260;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v253 + 48))(v55, 1, v260) == 1)
        {
          sub_100003F10((uint64_t)v55, &qword_1006B8930);
          NSString v97 = 0;
        }
        else
        {
          FMFLabel.localizedValue.getter();
          (*(void (**)(char *, uint64_t))(v140 + 8))(v55, v141);
          NSString v97 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        uint64_t v85 = (uint64_t)v263;
      }
      [v94 setText:v97];

      id v92 = v261;
    }
    uint64_t v147 = (uint64_t)&v268[OBJC_IVAR____TtC6FindMy21FMLabelViewController_location];
    swift_beginAccess();
    uint64_t v148 = v251;
    sub_100006AB0(v147, v251, (uint64_t *)&unk_1006AF710);
    uint64_t v149 = v252;
    if ((*(unsigned int (**)(uint64_t, uint64_t, void *))(v252 + 48))(v148, 1, v92))
    {
      uint64_t v150 = (uint64_t *)&unk_1006AF710;
      uint64_t v151 = v148;
    }
    else
    {
      id v152 = v243;
      (*(void (**)(char *, uint64_t, void *))(v149 + 16))(v243, v148, v92);
      sub_100003F10(v148, (uint64_t *)&unk_1006AF710);
      id v153 = v229;
      FMFLocation.label.getter();
      (*(void (**)(char *, void *))(v149 + 8))(v152, v92);
      uint64_t v154 = v253;
      uint64_t v155 = v260;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v253 + 48))(v153, 1, v260) != 1)
      {
        uint64_t v243 = (char *)FMFLabel.value.getter();
        id v98 = v225;
        (*(void (**)(char *, uint64_t))(v154 + 8))(v153, v155);
        goto LABEL_66;
      }
      uint64_t v150 = &qword_1006B8930;
      uint64_t v151 = (uint64_t)v153;
    }
    sub_100003F10(v151, v150);
    uint64_t v243 = 0;
    id v98 = 0;
LABEL_66:
    LODWORD(v251) = 0;
    uint64_t v99 = v262;
    uint64_t v106 = (uint64_t)v254;
    goto LABEL_67;
  }
  if (IndexPath.item.getter() == v89 + v64)
  {
    id v90 = v266;
    id v100 = [v266 textLabel];
    uint64_t v99 = v262;
    if (v100)
    {
      id v101 = v100;
      uint64_t v270 = 0;
      unint64_t v271 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      id v102 = [self mainBundle];
      v103._uint64_t countAndFlagsBits = 0xD000000000000015;
      v272._uint64_t countAndFlagsBits = 0xD000000000000027;
      v272._unint64_t object = (void *)0x8000000100590B90;
      v103._unint64_t object = (void *)0x8000000100590B70;
      v104._uint64_t countAndFlagsBits = 0;
      v104._unint64_t object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v103, (Swift::String_optional)0, (NSBundle)v102, v104, v272);

      NSString v105 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v101 setText:v105];
    }
    uint64_t v243 = 0;
    id v98 = 0;
    LODWORD(v251) = 1;
LABEL_26:
    uint64_t v93 = (uint64_t)v258;
    goto LABEL_27;
  }
  uint64_t v127 = IndexPath.item.getter();
  unint64_t v128 = v127 - v88;
  id v90 = v266;
  if (__OFSUB__(v127, v88))
  {
LABEL_130:
    __break(1u);
    goto LABEL_131;
  }
  uint64_t v129 = static FMFLabel.defaultLabels(includingOther:)();
  id v130 = [v90 textLabel];
  uint64_t v131 = v238;
  if (!v130)
  {
    uint64_t v93 = (uint64_t)v258;
    if ((v128 & 0x8000000000000000) != 0)
    {
LABEL_131:
      __break(1u);
      goto LABEL_132;
    }
    goto LABEL_56;
  }
  uint64_t v93 = (uint64_t)v258;
  if ((v128 & 0x8000000000000000) != 0)
  {
LABEL_133:
    __break(1u);
    goto LABEL_134;
  }
  if (v128 < *(void *)(v129 + 16))
  {
    id v132 = v130;
    uint64_t v133 = v234;
    id v134 = v233;
    (*(void (**)(char *, unint64_t, uint64_t))(v234 + 16))(v233, v129+ ((*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80))+ *(void *)(v133 + 72) * v128, v238);
    FMFDefaultLabel.localizedLabel.getter();
    (*(void (**)(char *, uint64_t))(v133 + 8))(v134, v131);
    NSString v135 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v132 setText:v135];

LABEL_56:
    if (v128 >= *(void *)(v129 + 16))
    {
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    uint64_t v142 = v234;
    unint64_t v143 = v129
         + ((*(unsigned __int8 *)(v142 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80))
         + *(void *)(v142 + 72) * v128;
    id v144 = v233;
    uint64_t v145 = v238;
    (*(void (**)(char *, unint64_t, uint64_t))(v234 + 16))(v233, v143, v238);
    swift_bridgeObjectRelease();
    uint64_t v243 = (char *)FMFDefaultLabel.rawValue.getter();
    id v98 = v146;
    (*(void (**)(char *, uint64_t))(v142 + 8))(v144, v145);
    LODWORD(v251) = 0;
    uint64_t v99 = v262;
LABEL_27:
    uint64_t v106 = (uint64_t)v254;
    uint64_t v85 = (uint64_t)v263;
    goto LABEL_67;
  }
LABEL_134:
  __break(1u);
}

uint64_t sub_10029399C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v25 = a3;
  uint64_t v26 = a2;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v32 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v30 = *(void *)(v10 - 8);
  uint64_t v31 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchTime();
  uint64_t v29 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v25 - v18;
  sub_10005EC68();
  uint64_t v27 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v14 + 8);
  v28(v17, v13);
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = v25;
  v20[3] = a4;
  long long v20[4] = a5;
  v20[5] = v26;
  aBlock[4] = sub_100296108;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_100630450;
  uint64_t v21 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v22 = a5;
  swift_errorRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100296114((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_10005ECA8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v23 = (void *)v27;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v31);
  return ((uint64_t (*)(char *, uint64_t))v28)(v19, v29);
}

uint64_t sub_100293D58(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4 = &a3[OBJC_IVAR____TtC6FindMy21FMLabelViewController_selectedLabelValue];
  uint64_t v5 = *(void *)&a3[OBJC_IVAR____TtC6FindMy21FMLabelViewController_selectedLabelValue + 8];
  if (v5)
  {
    BOOL v6 = *(void *)v4 == a1 && v5 == a2;
    if (v6 || (int v7 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
    {
      *(void *)uint64_t v4 = 0;
      *((void *)v4 + 1) = 0;
      swift_bridgeObjectRelease();
      int v7 = 1;
    }
  }
  else
  {
    int v7 = 0;
  }
  uint64_t v8 = sub_1003DC9AC();
  uint64_t v9 = OBJC_IVAR____TtC6FindMy21FMLabelViewController_customLabels;
  *(void *)&a3[OBJC_IVAR____TtC6FindMy21FMLabelViewController_customLabels] = v8;
  swift_bridgeObjectRelease();
  sub_1003DD058();
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_1000606BC(v10, (uint64_t)qword_1006D1E98);
  swift_errorRetain();
  uint64_t v11 = a3;
  swift_errorRetain();
  uint64_t v12 = v11;
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    swift_errorRetain();
    sub_10005D034(&qword_1006B4220);
    uint64_t v16 = String.init<A>(describing:)();
    sub_1000606F4(v16, v17, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v15 + 12) = 2080;
    uint64_t v18 = *(void *)&a3[v9];
    unint64_t v19 = 0xE000000000000000;
    if (v18)
    {
      type metadata accessor for FMFLabel();
      swift_bridgeObjectRetain();
      Array.description.getter();
      swift_bridgeObjectRelease();
      sub_100059EB8();
      uint64_t v18 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      unint64_t v19 = v20;
      swift_bridgeObjectRelease();
    }
    sub_1000606F4(v18, v19, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "🏷 FMLabelViewController: remove label completed with error: %s, updated list is %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t result = sub_1003F0454(v21);
  if (v7) {
    return sub_1003DD114(0, 0);
  }
  return result;
}

uint64_t sub_1002941D0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v117 = a2;
  uint64_t v119 = type metadata accessor for FMFLabelSourceType();
  uint64_t v115 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  id v101 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_10005D034(&qword_1006B8918);
  uint64_t v4 = __chkstk_darwin(v112);
  Swift::String v103 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v114 = (uint64_t)&v93 - v6;
  uint64_t v7 = sub_10005D034((uint64_t *)&unk_1006B8920);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v100 = (uint64_t)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v106 = (uint64_t)&v93 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v105 = (uint64_t)&v93 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v102 = (uint64_t)&v93 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v109 = (uint64_t)&v93 - v17;
  __chkstk_darwin(v16);
  uint64_t v110 = (uint64_t)&v93 - v18;
  uint64_t v19 = type metadata accessor for FMFLocation();
  uint64_t v107 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10005D034((uint64_t *)&unk_1006AF710);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v93 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10005D034(&qword_1006B8930);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v104 = (uint64_t)&v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v111 = (uint64_t)&v93 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v93 - v31;
  __chkstk_darwin(v30);
  uint64_t v120 = (uint64_t)&v93 - v33;
  uint64_t v34 = type metadata accessor for IndexPath();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v93 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  uint64_t v40 = (char *)&v93 - v39;
  uint64_t v41 = IndexPath.section.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v40, a1, v34);
  if (v41)
  {
    Swift::String v116 = *(void (**)(char *, uint64_t))(v35 + 8);
    v116(v40, v34);
    uint64_t v42 = v34;
  }
  else
  {
    uint64_t v43 = IndexPath.item.getter();
    Swift::String v116 = *(void (**)(char *, uint64_t))(v35 + 8);
    v116(v40, v34);
    uint64_t v42 = v34;
    if (!v43)
    {
      uint64_t v73 = 1;
      uint64_t v74 = v117;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56))(v74, v73, 1, v42);
    }
  }
  uint64_t v113 = v42;
  uint64_t v44 = a1;
  uint64_t v45 = IndexPath.section.getter();
  uint64_t result = IndexPath.item.getter();
  uint64_t v47 = v120;
  if (!v45 && __OFSUB__(result, 1)) {
    goto LABEL_42;
  }
  uint64_t v108 = v44;
  IndexPath.section.getter();
  IndexPath.init(item:section:)();
  BOOL v48 = sub_1003DBCA0();
  uint64_t v49 = *(void *)(static FMFLabel.defaultLabels(includingOther:)() + 16);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v50 = v49 + v48;
  uint64_t v51 = v50 + 1;
  if (__OFADD__(v50, 1))
  {
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v52 = IndexPath.item.getter();
  if (IndexPath.section.getter() || v52 != v51 - 1) {
    goto LABEL_35;
  }
  uint64_t v53 = (uint64_t)v118 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_location;
  swift_beginAccess();
  sub_100006AB0(v53, (uint64_t)v24, (uint64_t *)&unk_1006AF710);
  uint64_t v54 = v107;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v24, 1, v19))
  {
    sub_100003F10((uint64_t)v24, (uint64_t *)&unk_1006AF710);
    uint64_t v55 = type metadata accessor for FMFLabel();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v47, 1, 1, v55);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v21, v24, v19);
    sub_100003F10((uint64_t)v24, (uint64_t *)&unk_1006AF710);
    FMFLocation.label.getter();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v21, v19);
  }
  uint64_t v56 = v119;
  uint64_t v57 = v115;
  uint64_t v58 = v110;
  sub_100006AB0(v47, (uint64_t)v32, &qword_1006B8930);
  uint64_t v59 = type metadata accessor for FMFLabel();
  uint64_t v60 = *(void *)(v59 - 8);
  uint64_t v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48);
  uint64_t v99 = v60 + 48;
  id v98 = v61;
  unsigned int v62 = v61((uint64_t)v32, 1, v59);
  uint64_t v107 = v59;
  uint64_t v94 = v60;
  if (v62 == 1)
  {
    sub_100003F10((uint64_t)v32, &qword_1006B8930);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56))(v58, 1, 1, v56);
  }
  else
  {
    FMFLabel.labelSourceType.getter();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v32, v59);
  }
  uint64_t v63 = v114;
  uint64_t v64 = v109;
  uint64_t v65 = *(void (**)(uint64_t, void, uint64_t))(v57 + 104);
  uint64_t v97 = v57 + 104;
  uint64_t v96 = v65;
  v65(v109, enum case for FMFLabelSourceType.friend(_:), v56);
  uint64_t v95 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56);
  v95(v64, 0, 1, v56);
  uint64_t v66 = v63 + *(int *)(v112 + 48);
  sub_100006AB0(v58, v63, (uint64_t *)&unk_1006B8920);
  uint64_t v67 = v119;
  sub_100006AB0(v64, v66, (uint64_t *)&unk_1006B8920);
  uint64_t v68 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
  unsigned int v69 = v68(v63, 1, v67);
  id v118 = v68;
  if (v69 == 1)
  {
    sub_100003F10(v64, (uint64_t *)&unk_1006B8920);
    uint64_t v67 = v119;
    sub_100003F10(v58, (uint64_t *)&unk_1006B8920);
    if (v68(v66, 1, v67) == 1)
    {
      sub_100003F10(v114, (uint64_t *)&unk_1006B8920);
      uint64_t v70 = v120;
      uint64_t v71 = v111;
      sub_100006AB0(v120, v111, &qword_1006B8930);
LABEL_23:
      sub_100003F10(v71, &qword_1006B8930);
      sub_100003F10(v70, &qword_1006B8930);
LABEL_34:
      uint64_t v73 = 1;
      uint64_t v74 = v117;
      uint64_t v42 = v113;
LABEL_39:
      v116(v38, v42);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56))(v74, v73, 1, v42);
    }
  }
  else
  {
    uint64_t v72 = v102;
    sub_100006AB0(v63, v102, (uint64_t *)&unk_1006B8920);
    if (v68(v66, 1, v67) != 1)
    {
      uint64_t v75 = v115;
      id v76 = v101;
      (*(void (**)(char *, uint64_t, uint64_t))(v115 + 32))(v101, v66, v67);
      sub_100296114(&qword_1006B8938, (void (*)(uint64_t))&type metadata accessor for FMFLabelSourceType);
      LODWORD(v114) = dispatch thunk of static Equatable.== infix(_:_:)();
      id v77 = *(void (**)(char *, uint64_t))(v75 + 8);
      id v78 = v76;
      uint64_t v70 = v120;
      v77(v78, v119);
      sub_100003F10(v109, (uint64_t *)&unk_1006B8920);
      sub_100003F10(v110, (uint64_t *)&unk_1006B8920);
      v77((char *)v72, v119);
      uint64_t v67 = v119;
      sub_100003F10(v63, (uint64_t *)&unk_1006B8920);
      uint64_t v71 = v111;
      sub_100006AB0(v70, v111, &qword_1006B8930);
      if (v114) {
        goto LABEL_23;
      }
      goto LABEL_24;
    }
    sub_100003F10(v109, (uint64_t *)&unk_1006B8920);
    sub_100003F10(v110, (uint64_t *)&unk_1006B8920);
    (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v72, v67);
  }
  sub_100003F10(v114, &qword_1006B8918);
  uint64_t v71 = v111;
  sub_100006AB0(v120, v111, &qword_1006B8930);
LABEL_24:
  uint64_t v79 = v71;
  uint64_t v80 = v104;
  sub_100006AB0(v79, v104, &qword_1006B8930);
  uint64_t v81 = v107;
  if (v98(v80, 1, v107) == 1)
  {
    sub_100003F10(v80, &qword_1006B8930);
    uint64_t v82 = v105;
    uint64_t v83 = v95;
    v95(v105, 1, 1, v67);
    uint64_t v84 = (uint64_t)v103;
  }
  else
  {
    uint64_t v82 = v105;
    FMFLabel.labelSourceType.getter();
    (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v80, v81);
    uint64_t v84 = (uint64_t)v103;
    uint64_t v83 = v95;
  }
  uint64_t v85 = v106;
  v96(v106, enum case for FMFLabelSourceType.premises(_:), v67);
  v83(v85, 0, 1, v67);
  uint64_t v86 = v84 + *(int *)(v112 + 48);
  sub_100006AB0(v82, v84, (uint64_t *)&unk_1006B8920);
  sub_100006AB0(v85, v86, (uint64_t *)&unk_1006B8920);
  uint64_t v87 = v118;
  if (v118(v84, 1, v67) == 1)
  {
    sub_100003F10(v85, (uint64_t *)&unk_1006B8920);
    sub_100003F10(v82, (uint64_t *)&unk_1006B8920);
    sub_100003F10(v111, &qword_1006B8930);
    sub_100003F10(v120, &qword_1006B8930);
    if (v87(v86, 1, v67) == 1)
    {
      sub_100003F10(v84, (uint64_t *)&unk_1006B8920);
      goto LABEL_34;
    }
  }
  else
  {
    uint64_t v88 = v100;
    sub_100006AB0(v84, v100, (uint64_t *)&unk_1006B8920);
    if (v87(v86, 1, v67) != 1)
    {
      uint64_t v89 = v115;
      id v90 = v101;
      (*(void (**)(char *, uint64_t, uint64_t))(v115 + 32))(v101, v86, v67);
      sub_100296114(&qword_1006B8938, (void (*)(uint64_t))&type metadata accessor for FMFLabelSourceType);
      char v91 = dispatch thunk of static Equatable.== infix(_:_:)();
      id v92 = *(void (**)(char *, uint64_t))(v89 + 8);
      v92(v90, v67);
      sub_100003F10(v106, (uint64_t *)&unk_1006B8920);
      sub_100003F10(v105, (uint64_t *)&unk_1006B8920);
      sub_100003F10(v111, &qword_1006B8930);
      sub_100003F10(v120, &qword_1006B8930);
      v92((char *)v88, v67);
      sub_100003F10(v84, (uint64_t *)&unk_1006B8920);
      if (v91) {
        goto LABEL_34;
      }
      goto LABEL_35;
    }
    sub_100003F10(v85, (uint64_t *)&unk_1006B8920);
    sub_100003F10(v82, (uint64_t *)&unk_1006B8920);
    sub_100003F10(v111, &qword_1006B8930);
    sub_100003F10(v120, &qword_1006B8930);
    (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v88, v67);
  }
  sub_100003F10(v84, &qword_1006B8918);
LABEL_35:
  if (IndexPath.section.getter())
  {
    IndexPath.item.getter();
    uint64_t v74 = v117;
LABEL_38:
    uint64_t v42 = v113;
    IndexPath.section.getter();
    IndexPath.init(item:section:)();
    uint64_t v73 = 0;
    goto LABEL_39;
  }
  uint64_t result = IndexPath.item.getter();
  uint64_t v74 = v117;
  if (!__OFADD__(result, 1)) {
    goto LABEL_38;
  }
LABEL_43:
  __break(1u);
  return result;
}

unint64_t sub_10029523C(void *a1)
{
  id v51 = a1;
  uint64_t v2 = type metadata accessor for FMFLabel();
  uint64_t v47 = *(void *)(v2 - 8);
  uint64_t v48 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FMFDefaultLabel();
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v50 - 8);
  uint64_t v9 = __chkstk_darwin(v50);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v44 - v12;
  uint64_t v14 = IndexPath.section.getter();
  unint64_t result = IndexPath.item.getter();
  if (!v14 && __OFSUB__(result, 1))
  {
    __break(1u);
    goto LABEL_33;
  }
  IndexPath.section.getter();
  IndexPath.init(item:section:)();
  uint64_t v49 = v1;
  BOOL v16 = sub_1003DBCA0();
  if (IndexPath.section.getter())
  {
    if (IndexPath.section.getter() == 1)
    {
      uint64_t v17 = OBJC_IVAR____TtC6FindMy21FMLabelViewController_customLabels;
      uint64_t v18 = v49;
      uint64_t v19 = *(void *)(v49 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_customLabels);
      if (v19) {
        uint64_t v20 = *(void *)(v19 + 16);
      }
      else {
        uint64_t v20 = 0;
      }
      if (IndexPath.item.getter() == v20)
      {
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        id v24 = [v51 cellForRowAtIndexPath:isa];

        if (v24)
        {
          type metadata accessor for FMLabelTableViewCell();
          uint64_t v25 = (char *)swift_dynamicCastClass();
          if (v25)
          {
            uint64_t v26 = v25;
            uint64_t v27 = v49;
            sub_1003DE5AC(v25);
            uint64_t v28 = *(void **)(v27 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_editingTableViewCellText);
            *(void *)(v27 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_editingTableViewCellText) = v26;
          }
          else
          {
          }
        }
        goto LABEL_27;
      }
      uint64_t v29 = *(void **)(v18 + v17);
      if (v29)
      {
        swift_bridgeObjectRetain();
        unint64_t result = IndexPath.item.getter();
        if ((result & 0x8000000000000000) != 0)
        {
LABEL_35:
          __break(1u);
          goto LABEL_36;
        }
        if (result >= v29[2])
        {
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
        uint64_t v31 = v47;
        uint64_t v30 = v48;
        (*(void (**)(char *, unint64_t, uint64_t))(v47 + 16))(v4, (unint64_t)v29+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * result, v48);
        swift_bridgeObjectRelease();
        uint64_t v32 = FMFLabel.localizedValue.getter();
        uint64_t v29 = v33;
        (*(void (**)(char *, uint64_t))(v31 + 8))(v4, v30);
      }
      else
      {
        uint64_t v32 = 0;
      }
      sub_1003DD114(v32, v29);
      goto LABEL_26;
    }
LABEL_27:
    if (IndexPath.section.getter())
    {
      IndexPath.item.getter();
LABEL_30:
      IndexPath.section.getter();
      IndexPath.init(item:section:)();
      Class v41 = IndexPath._bridgeToObjectiveC()().super.isa;
      uint64_t v42 = *(void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v43 = v50;
      v42(v11, v50);
      [v51 deselectRowAtIndexPath:v41 animated:1];

      return ((uint64_t (*)(char *, uint64_t))v42)(v13, v43);
    }
    unint64_t result = IndexPath.item.getter();
    if (!__OFADD__(result, 1)) {
      goto LABEL_30;
    }
    goto LABEL_34;
  }
  BOOL v21 = v16;
  uint64_t v22 = *(void *)(static FMFLabel.defaultLabels(includingOther:)() + 16);
  unint64_t result = swift_bridgeObjectRelease();
  if (__OFADD__(v22 + v21, 1))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (IndexPath.item.getter() == 0 && v16) {
    goto LABEL_27;
  }
  if (IndexPath.item.getter() == v22 + v16)
  {
    sub_1003DD114(0, 0);
    goto LABEL_27;
  }
  unint64_t result = IndexPath.item.getter();
  BOOL v34 = __OFSUB__(result, v21);
  unint64_t v35 = result - v21;
  if (v34)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  unint64_t result = static FMFLabel.defaultLabels(includingOther:)();
  if ((v35 & 0x8000000000000000) != 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (v35 < *(void *)(result + 16))
  {
    uint64_t v37 = v45;
    uint64_t v36 = v46;
    (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v7, result+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v35, v46);
    swift_bridgeObjectRelease();
    uint64_t v38 = FMFDefaultLabel.rawValue.getter();
    uint64_t v40 = v39;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v36);
    sub_1003DD114(v38, v40);
LABEL_26:
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_100295990(uint64_t a1)
{
  BOOL v3 = sub_1003DBCA0();
  if (a1 == 1)
  {
LABEL_10:
    uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_customLabels);
    if (v7) {
      uint64_t v7 = *(void *)(v7 + 16);
    }
    return v7 + *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_isShowingAddCustomLabel);
  }
  if (a1) {
    return 0;
  }
  if (v3) {
    uint64_t v4 = 2;
  }
  else {
    uint64_t v4 = 1;
  }
  uint64_t v1 = *(void *)(static FMFLabel.defaultLabels(includingOther:)() + 16);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = v4 + v1;
  if (__OFADD__(v4, v1))
  {
    __break(1u);
    return result;
  }
  uint64_t result = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_10;
  }
  return result;
}

void sub_100295A28(uint64_t a1, uint64_t a2)
{
  BOOL v3 = v2;
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMFLabel();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 != 1) {
    goto LABEL_10;
  }
  unint64_t v14 = *(void *)&v3[OBJC_IVAR____TtC6FindMy21FMLabelViewController_customLabels];
  if (!v14) {
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  unint64_t v15 = IndexPath.row.getter();
  if ((v15 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v15 >= *(void *)(v14 + 16))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v13, v14+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v15, v10);
  swift_bridgeObjectRelease();
  uint64_t v16 = FMFLabel.localizedValue.getter();
  unint64_t v14 = v17;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v11 = v16;
  sub_10005D034((uint64_t *)&unk_1006AEE90);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_10055B970;
  *(void *)(v18 + 32) = v16;
  *(void *)(v18 + 40) = v14;
  type metadata accessor for FMFRemoveLabelsAction();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v19 = FMFRemoveLabelsAction.init(labels:)();
  if (v19)
  {
    uint64_t v10 = v19;
    if (qword_1006AE190 == -1)
    {
LABEL_7:
      uint64_t v20 = type metadata accessor for Logger();
      sub_1000606BC(v20, (uint64_t)qword_1006D1E98);
      swift_bridgeObjectRetain_n();
      BOOL v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        uint64_t v34 = swift_slowAlloc();
        *(_DWORD *)uint64_t v23 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v33 = sub_1000606F4(v11, v14, &v34);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "🏷 FMLabelViewController: removing label '%s'...", v23, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v24 = swift_bridgeObjectRelease_n();
      }
      sub_100437D88(v24);
      if (*(void *)&v3[OBJC_IVAR____TtC6FindMy21FMLabelViewController_mediator])
      {
        uint64_t v31 = (void *)swift_allocObject();
        v31[2] = v11;
        uint64_t v31[3] = v14;
        v31[4] = v3;
        swift_retain();
        uint64_t v32 = v3;
        sub_1000F4F54(v10, (uint64_t)sub_1002960B4, (uint64_t)v31);
        swift_release();
        swift_release();
        swift_release();
      }
      else
      {
        __break(1u);
      }
      return;
    }
LABEL_21:
    swift_once();
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
LABEL_10:
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  sub_1000606BC(v25, (uint64_t)qword_1006D1E98);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 136315138;
    uint64_t v29 = IndexPath.description.getter();
    uint64_t v33 = sub_1000606F4(v29, v30, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "🏷 FMLabelViewController: could not label at %s...", v28, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_100296008()
{
  uint64_t result = IndexPath.section.getter();
  if (result)
  {
    if (IndexPath.section.getter() == 1)
    {
      uint64_t v2 = IndexPath.row.getter();
      uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_customLabels);
      if (v3)
      {
        if (v2 < *(void *)(v3 + 16)) {
          return 1;
        }
      }
      else if (v2 < 0)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_100296074()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002960B4(uint64_t a1, uint64_t a2)
{
  return sub_10029399C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1002960C0()
{
  swift_bridgeObjectRelease();

  swift_errorRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100296108()
{
  return sub_100293D58(*(void *)(v0 + 16), *(void *)(v0 + 24), *(char **)(v0 + 32));
}

uint64_t sub_100296114(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_10029626C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMEmailUpdatesTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for FMEmailUpdatesTableViewCell()
{
  return self;
}

id sub_100296304()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy21FMGradientMaskingView_gradientLayer;
  id v2 = objc_allocWithZone((Class)CAGradientLayer);
  uint64_t v3 = v0;
  *(void *)&v0[v1] = [v2 init];

  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for FMGradientMaskingView();
  id v4 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v5 = self;
  id v6 = v4;
  id v7 = [v5 clearColor];
  [v6 setBackgroundColor:v7];

  sub_1002964BC();
  return v6;
}

void sub_1002964BC()
{
  id v16 = [v0 layer];
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    id v2 = (void *)v1;
    sub_10005D034(&qword_1006B2B80);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_10055B960;
    id v4 = self;
    id v5 = [v4 whiteColor];
    id v6 = [v5 colorWithAlphaComponent:0.0];

    id v7 = [v6 CGColor];
    type metadata accessor for CGColor(0);
    uint64_t v9 = v8;
    *(void *)(v3 + 56) = v8;
    *(void *)(v3 + 32) = v7;
    id v10 = [v4 systemBackgroundColor];
    id v11 = [v10 CGColor];

    *(void *)(v3 + 88) = v9;
    *(void *)(v3 + 64) = v11;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v2 setColors:isa];

    sub_10005D034(&qword_1006AF2D0);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_10055C1E0;
    sub_100006060(0, &qword_1006AFC18);
    *(NSNumber *)(v13 + 32) = NSNumber.init(floatLiteral:)(0.0);
    *(NSNumber *)(v13 + 40) = NSNumber.init(floatLiteral:)(1.0);
    specialized Array._endMutation()();
    Class v14 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v2 setLocations:v14];

    Class v15 = v14;
  }
  else
  {
    Class v15 = (Class)v16;
  }
}

id sub_100296738()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMGradientMaskingView();
  return [super dealloc];
}

uint64_t type metadata accessor for FMGradientMaskingView()
{
  return self;
}

uint64_t sub_1002967A0()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  id v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v7 = (char *)&v16 - v6;
  uint64_t v8 = type metadata accessor for FMIPUnknownItem();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v0;
  uint64_t v12 = v0 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_selectedItem;
  swift_beginAccess();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v19 = v12;
  unint64_t v17 = v13;
  v13(v11, v12, v8);
  FMIPUnknownItem.identifier.getter();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v11, v8);
  FMIPUnknownItem.identifier.getter();
  sub_100045844((unint64_t *)&unk_1006BEAD0, (void (*)(uint64_t))&type metadata accessor for UUID);
  LOBYTE(v12) = dispatch thunk of static Equatable.== infix(_:_:)();
  Class v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v14(v5, v1);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v14)(v7, v1);
  if ((v12 & 1) == 0)
  {
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      v17(v11, v19, v8);
      sub_100317CAC((uint64_t)v11);
      swift_unknownObjectRelease();
      return ((uint64_t (*)(char *, uint64_t))v18)(v11, v8);
    }
  }
  return result;
}

void sub_100296A50()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v1[OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_updatesEnabled] != 1)
  {
    uint64_t v20 = *((void *)v1 + 5);
    if (!v20)
    {
      uint64_t v22 = 0;
      uint64_t v27 = *((void *)v1 + 6);
      if (!v27)
      {
LABEL_13:
        uint64_t v28 = *((void *)v1 + 7);
        if (!v28) {
          return;
        }
        goto LABEL_19;
      }
LABEL_16:
      uint64_t v29 = *(void *)(*((void *)v1 + 2) + 56);
      swift_beginAccess();
      swift_retain();
      swift_retain();
      uint64_t v30 = sub_1003D6AB4((uint64_t *)(v29 + 16), v27);
      uint64_t v24 = v30;
      unint64_t v31 = *(void *)(v29 + 16);
      if (!(v31 >> 62))
      {
        uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v32 >= v30) {
          goto LABEL_18;
        }
        goto LABEL_26;
      }
LABEL_25:
      swift_bridgeObjectRetain();
      uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v32 >= v24)
      {
LABEL_18:
        sub_1002586A8(v24, v32);
        swift_endAccess();
        swift_release();
        swift_release();
        uint64_t v28 = *((void *)v1 + 7);
        if (!v28) {
          return;
        }
LABEL_19:
        uint64_t v33 = *(char **)(*((void *)v1 + 2) + 16);
        uint64_t v34 = (uint64_t *)&v33[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
        swift_beginAccess();
        swift_retain();
        uint64_t v1 = v33;
        uint64_t v35 = sub_10006782C(v34, v28);
        uint64_t v22 = v35;
        if (!((unint64_t)*v34 >> 62))
        {
          uint64_t v36 = *(void *)((*v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v36 >= v35)
          {
LABEL_21:
            sub_1000675DC(v22, v36);
            swift_endAccess();
            swift_release();

            return;
          }
LABEL_28:
          __break(1u);
          return;
        }
LABEL_27:
        swift_bridgeObjectRetain();
        uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v36 >= v22) {
          goto LABEL_21;
        }
        goto LABEL_28;
      }
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    uint64_t v21 = *(void *)(*((void *)v1 + 2) + 24);
    swift_beginAccess();
    swift_retain();
    swift_retain();
    uint64_t v22 = 0;
    int64_t v23 = sub_10014040C((unint64_t *)(v21 + 16), v20);
    uint64_t v24 = v23;
    unint64_t v25 = *(void *)(v21 + 16);
    if (v25 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v26 >= v24)
      {
LABEL_12:
        sub_100258678(v24, v26);
        swift_endAccess();
        swift_release();
        swift_release();
        uint64_t v27 = *((void *)v1 + 6);
        if (!v27) {
          goto LABEL_13;
        }
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v26 >= v23) {
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v37 = v7;
  uint64_t v38 = v3;
  uint64_t v10 = (void *)*((void *)v1 + 2);
  uint64_t v11 = v10[3];
  type metadata accessor for FMDevicesSubscription();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber + 8) = 0;
  swift_unknownObjectWeakInit();
  swift_retain();
  swift_retain();
  UUID.init()();
  *(void *)(v12 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber + 8) = &off_100630530;
  swift_unknownObjectWeakAssign();
  swift_release();
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(v11 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v11 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  swift_release();
  *((void *)v1 + 5) = v12;
  swift_release();
  uint64_t v13 = v10[7];
  type metadata accessor for FMSelectionSubscription();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber + 8) = 0;
  swift_unknownObjectWeakInit();
  swift_retain();
  swift_retain();
  UUID.init()();
  *(void *)(v14 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber + 8) = &off_1006304F8;
  swift_unknownObjectWeakAssign();
  swift_release();
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(v13 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v13 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  swift_release();
  *((void *)v1 + 6) = v14;
  swift_release();
  Class v15 = (void *)v10[2];
  type metadata accessor for FMConditionSubscription();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber + 8) = 0;
  swift_unknownObjectWeakInit();
  swift_retain();
  unint64_t v17 = v15;
  UUID.init()();
  *(void *)(v16 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber + 8) = &off_100630478;
  swift_unknownObjectWeakAssign();
  swift_release();
  uint64_t v18 = &v17[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v18 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();

  *((void *)v1 + 7) = v16;
  swift_release();
  aBlock[4] = sub_10029B214;
  aBlock[5] = v1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_100630728;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v39 = _swiftEmptyArrayStorage;
  sub_100045844((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v6);
  swift_release();
}

uint64_t sub_100297268(uint64_t a1)
{
  uint64_t v3 = sub_10005D034(&qword_1006B8BD8);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_itemViewModel;
  swift_beginAccess();
  sub_10029B218(a1, v6);
  swift_endAccess();
  if (!swift_unknownObjectWeakLoadStrong()) {
    return sub_100003F10(a1, &qword_1006B8BD8);
  }
  sub_10029B280(v6, (uint64_t)v5);
  uint64_t v7 = type metadata accessor for FMUTDetailViewModel();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7);
  if (result != 1)
  {
    sub_1003182E8((uint64_t)v5);
    swift_unknownObjectRelease();
    sub_100057CF4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMUTDetailViewModel);
    return sub_100003F10(a1, &qword_1006B8BD8);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002973B4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v32 = a1;
  uint64_t v3 = type metadata accessor for FMIPUnknownItem();
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  __chkstk_darwin(v3);
  uint64_t v35 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for FMSelectedSection();
  uint64_t v5 = __chkstk_darwin(v34);
  uint64_t v33 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v31 = (char *)&v29 - v7;
  uint64_t v30 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v8 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v11);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v12 - 8);
  *((void *)v1 + 4) = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for FMItemAger();
  *((void *)v1 + 6) = 0;
  *((void *)v1 + 7) = 0;
  *((void *)v1 + 5) = 0;
  swift_allocObject();
  *((void *)v1 + 8) = sub_10004D3FC();
  sub_10005EC68();
  static DispatchQoS.userInitiated.getter();
  uint64_t v40 = _swiftEmptyArrayStorage;
  sub_100045844((unint64_t *)&unk_1006AE490, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10005D034((uint64_t *)&unk_1006B6C50);
  sub_100045050((unint64_t *)&unk_1006AE4A0, (uint64_t *)&unk_1006B6C50);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v30);
  uint64_t v14 = (uint64_t)v31;
  uint64_t v13 = v32;
  *((void *)v1 + 9) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *((void *)v1 + 10) = 0;
  v1[OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_isRangingServiceAvailable] = 1;
  v1[OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_updatesEnabled] = 0;
  Class v15 = &v1[OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_itemViewModel];
  uint64_t v16 = type metadata accessor for FMUTDetailViewModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  uint64_t v17 = *(void *)(v13 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  uint64_t v18 = v17;
  uint64_t v19 = (uint64_t)v33;
  sub_100057894(v18, v14, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_100057894(v14, v19, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload() == 8)
  {
    uint64_t v20 = v35;
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 32);
    uint64_t v22 = v37;
    v21(v35, v19, v37);
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_1000606BC(v23, (uint64_t)qword_1006D1E98);
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "FMUTDetailDataSource: initialized", v26, 2u);
      swift_slowDealloc();
    }

    sub_100057CF4(v14, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    v21(&v2[OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_selectedItem], (uint64_t)v20, v22);
    *((void *)v2 + 2) = v13;
    *(void *)(*((void *)v2 + 8) + 24) = &off_100630520;
    swift_unknownObjectWeakAssign();
    return (uint64_t)v2;
  }
  else
  {
    sub_100057CF4(v19, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    uint64_t v38 = 0;
    unint64_t v39 = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v28._uint64_t countAndFlagsBits = 0xD000000000000050;
    v28._unint64_t object = (void *)0x8000000100590D60;
    String.append(_:)(v28);
    _print_unlocked<A, B>(_:_:)();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1002979F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPUnknownItem();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v15[-v9];
  uint64_t v11 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16);
  v11(&v15[-v9], a2, v4);
  uint64_t v12 = a1 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_selectedItem;
  swift_beginAccess();
  v11(v8, v12, v4);
  swift_beginAccess();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v5 + 24))(v12, v10, v4);
  swift_endAccess();
  sub_1002967A0();
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v13(v10, v4);
  v13(v8, v4);
  return sub_100297B9C();
}

uint64_t sub_100297B9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10005D034(&qword_1006B8BD8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FMUTDetailViewModel();
  uint64_t v62 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for UUID();
  uint64_t v69 = *(void *)(v73 - 8);
  uint64_t v8 = __chkstk_darwin(v73);
  uint64_t v72 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v71 = (char *)v55 - v10;
  uint64_t v11 = sub_10005D034((uint64_t *)&unk_1006AEE50);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FMIPUnknownItem();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v63 = (char *)v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v74 = (char *)v55 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v64 = (char *)v55 - v21;
  __chkstk_darwin(v20);
  uint64_t v65 = (char *)v55 - v22;
  uint64_t v61 = *(void *)(v0 + 16);
  swift_retain();
  uint64_t v23 = FMIPManager.unknownItems.getter();
  swift_release();
  uint64_t v24 = *(void *)(v23 + 16);
  uint64_t v66 = v7;
  if (v24)
  {
    uint64_t v56 = v13;
    uint64_t v57 = v4;
    uint64_t v58 = v5;
    unint64_t v25 = v23 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v60 = v1;
    uint64_t v26 = v1 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_selectedItem;
    v55[1] = v23;
    swift_bridgeObjectRetain();
    uint64_t v70 = v26;
    swift_beginAccess();
    uint64_t v59 = v15;
    Swift::String v28 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v27 = v15 + 16;
    uint64_t v75 = (void (**)(char *, uint64_t))(v27 - 8);
    uint64_t v29 = (void (**)(char *, uint64_t))(v69 + 8);
    uint64_t v68 = v28;
    uint64_t v69 = v27;
    uint64_t v67 = *(void *)(v27 + 56);
    uint64_t v30 = v64;
    unint64_t v31 = v71;
    while (1)
    {
      uint64_t v32 = v68;
      v68(v30, v25, v14);
      FMIPUnknownItem.identifier.getter();
      uint64_t v33 = v74;
      v32(v74, v70, v14);
      uint64_t v34 = v72;
      FMIPUnknownItem.identifier.getter();
      uint64_t v35 = *v75;
      (*v75)(v33, v14);
      LOBYTE(v33) = static UUID.== infix(_:_:)();
      uint64_t v36 = v14;
      uint64_t v37 = *v29;
      uint64_t v38 = v34;
      uint64_t v39 = v73;
      (*v29)(v38, v73);
      v37(v31, v39);
      if (v33) {
        break;
      }
      v35(v30, v36);
      v25 += v67;
      --v24;
      uint64_t v14 = v36;
      if (!v24)
      {
        swift_bridgeObjectRelease();
        uint64_t v40 = 1;
        uint64_t v41 = v60;
        uint64_t v42 = (uint64_t)v66;
        uint64_t v15 = v59;
        uint64_t v5 = v58;
        uint64_t v4 = v57;
        uint64_t v13 = v56;
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = v59;
    uint64_t v13 = v56;
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v56, v30, v36);
    uint64_t v40 = 0;
    uint64_t v41 = v60;
    uint64_t v42 = (uint64_t)v66;
    uint64_t v14 = v36;
    uint64_t v5 = v58;
    uint64_t v4 = v57;
  }
  else
  {
    uint64_t v40 = 1;
    uint64_t v42 = (uint64_t)v7;
    uint64_t v41 = v1;
  }
LABEL_8:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, v40, 1, v14);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1) {
    return sub_100003F10((uint64_t)v13, (uint64_t *)&unk_1006AEE50);
  }
  uint64_t v44 = v42;
  uint64_t v45 = v65;
  (*(void (**)(void))(v15 + 32))();
  uint64_t v75 = *(void (***)(char *, uint64_t))(v15 + 16);
  uint64_t v46 = (uint64_t)v74;
  ((void (*)(char *, char *, uint64_t))v75)(v74, v45, v14);
  LODWORD(v45) = *(unsigned __int8 *)(v41 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_isRangingServiceAvailable);
  uint64_t v47 = swift_retain();
  sub_10050524C(v47, v46, (int)v45, v44);
  sub_100057894(v44, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMUTDetailViewModel);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v4, 0, 1, v5);
  sub_100297268((uint64_t)v4);
  sub_10005D034(&qword_1006B19B0);
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_10055B970;
  *(void *)(v48 + 56) = v5;
  *(void *)(v48 + 64) = &off_100643608;
  uint64_t v49 = sub_100042804((uint64_t *)(v48 + 32));
  sub_100057894(v44, (uint64_t)v49, (uint64_t (*)(void))type metadata accessor for FMUTDetailViewModel);
  sub_10005E24C(v48);
  swift_bridgeObjectRelease();
  uint64_t v50 = v65;
  id v51 = v75;
  ((void (*)(uint64_t, char *, uint64_t))v75)(v46, v65, v14);
  uint64_t v52 = v41 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_selectedItem;
  swift_beginAccess();
  uint64_t v53 = v63;
  ((void (*)(char *, uint64_t, uint64_t))v51)(v63, v52, v14);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 24))(v52, v46, v14);
  swift_endAccess();
  sub_1002967A0();
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v54(v46, v14);
  v54((uint64_t)v53, v14);
  sub_100057CF4((uint64_t)v66, (uint64_t (*)(void))type metadata accessor for FMUTDetailViewModel);
  return ((uint64_t (*)(char *, uint64_t))v54)(v50, v14);
}

uint64_t sub_100298368()
{
  swift_release();
  sub_100068760(v0 + 24);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  uint64_t v1 = v0 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_selectedItem;
  uint64_t v2 = type metadata accessor for FMIPUnknownItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100003F10(v0 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_itemViewModel, &qword_1006B8BD8);
  return v0;
}

uint64_t sub_100298424()
{
  sub_100298368();

  return swift_deallocClassInstance();
}

uint64_t sub_10029847C()
{
  return type metadata accessor for FMUTDetailDataSource();
}

uint64_t type metadata accessor for FMUTDetailDataSource()
{
  uint64_t result = qword_1006B89D8;
  if (!qword_1006B89D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1002984D0()
{
  type metadata accessor for FMIPUnknownItem();
  if (v0 <= 0x3F)
  {
    sub_1002985DC();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1002985DC()
{
  if (!qword_1006B89E8)
  {
    type metadata accessor for FMUTDetailViewModel();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1006B89E8);
    }
  }
}

uint64_t sub_100298634(uint64_t a1, uint64_t a2)
{
  return sub_100299C7C(a2, "FMUTDetailDataSource: didUpdate %ld unknownItems", (uint64_t)sub_10029B30C, (uint64_t)&unk_100630610);
}

uint64_t sub_100298674(uint64_t a1, uint64_t a2)
{
  return sub_100299C7C(a2, "FMUTDetailDataSource: didUpdate %ld shares", (uint64_t)sub_10029B30C, (uint64_t)&unk_1006305E8);
}

uint64_t sub_1002986B4()
{
  return sub_10029A01C();
}

void sub_1002986BC(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1002986C4(uint64_t a1, char a2)
{
  return sub_10029A574(a2);
}

uint64_t sub_1002986CC(uint64_t a1, char a2)
{
  return sub_10029A980(a2);
}

void sub_1002986D4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v102 = a1;
  uint64_t v92 = type metadata accessor for FMFindingType();
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v93 = (char *)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for FMExperienceType();
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v88 = (uint64_t)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for FMUTDetailViewModel();
  __chkstk_darwin(v100);
  uint64_t v101 = (uint64_t)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v110 - 8);
  uint64_t v7 = __chkstk_darwin(v110);
  uint64_t v108 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v109 = (char *)&v87 - v9;
  uint64_t v10 = sub_10005D034((uint64_t *)&unk_1006AEE50);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMIPUnknownItem();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v107 = (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v87 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v87 - v20;
  swift_retain();
  uint64_t v22 = FMIPManager.unknownItems.getter();
  swift_release();
  uint64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    uint64_t v95 = v12;
    uint64_t v97 = v21;
    unint64_t v24 = v22 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v99 = v2;
    uint64_t v25 = v2 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_selectedItem;
    uint64_t v94 = v22;
    swift_bridgeObjectRetain();
    uint64_t v106 = v25;
    swift_beginAccess();
    uint64_t v98 = v14;
    uint64_t v26 = v14 + 16;
    uint64_t v104 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    uint64_t v111 = (void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v96 = v6;
    uint64_t v27 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v105 = v26;
    uint64_t v103 = *(void *)(v26 + 56);
    Swift::String v28 = v109;
    while (1)
    {
      uint64_t v29 = v104;
      v104(v19, v24, v13);
      FMIPUnknownItem.identifier.getter();
      uint64_t v30 = v107;
      v29(v107, v106, v13);
      unint64_t v31 = v108;
      FMIPUnknownItem.identifier.getter();
      uint64_t v32 = *v111;
      (*v111)(v30, v13);
      LOBYTE(v30) = static UUID.== infix(_:_:)();
      uint64_t v33 = v13;
      uint64_t v34 = *v27;
      uint64_t v35 = v31;
      uint64_t v36 = v110;
      (*v27)(v35, v110);
      v34(v28, v36);
      if (v30) {
        break;
      }
      v32(v19, v33);
      v24 += v103;
      --v23;
      uint64_t v13 = v33;
      if (!v23)
      {
        swift_bridgeObjectRelease();
        uint64_t v37 = 1;
        uint64_t v38 = v99;
        uint64_t v14 = v98;
        uint64_t v21 = v97;
        uint64_t v39 = v102;
        uint64_t v6 = v96;
        uint64_t v12 = v95;
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = v98;
    uint64_t v12 = v95;
    (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v95, v19, v33);
    uint64_t v37 = 0;
    uint64_t v38 = v99;
    uint64_t v13 = v33;
    uint64_t v21 = v97;
    uint64_t v39 = v102;
    uint64_t v6 = v96;
  }
  else
  {
    uint64_t v37 = 1;
    uint64_t v38 = v2;
    uint64_t v39 = v102;
  }
LABEL_8:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, v37, 1, v13);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100003F10((uint64_t)v12, (uint64_t *)&unk_1006AEE50);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v21, v12, v13);
  uint64_t v40 = *(void *)(v39 + *(int *)(v100 + 56));
  if (*(void *)(v40 + 16)
    && (Hasher.init(_seed:)(),
        Hasher._combine(_:)(0),
        Swift::Int v41 = Hasher._finalize()(),
        uint64_t v42 = -1 << *(unsigned char *)(v40 + 32),
        unint64_t v43 = v41 & ~v42,
        ((*(void *)(v40 + 56 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43) & 1) != 0))
  {
    uint64_t v44 = ~v42;
    while (*(unsigned char *)(*(void *)(v40 + 48) + v43) != 2)
    {
      unint64_t v43 = (v43 + 1) & v44;
      if (((*(void *)(v40 + 56 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43) & 1) == 0) {
        goto LABEL_15;
      }
    }
    sub_100057894(v39, v101, (uint64_t (*)(void))type metadata accessor for FMUTDetailViewModel);
  }
  else
  {
LABEL_15:
    uint64_t v45 = v101;
    sub_100057894(v39, v101, (uint64_t (*)(void))type metadata accessor for FMUTDetailViewModel);
    uint64_t v46 = *(void *)(v45 + *(int *)(v100 + 56));
    if (!*(void *)(v46 + 16)
      || (Hasher.init(_seed:)(),
          Hasher._combine(_:)(1uLL),
          Swift::Int v47 = Hasher._finalize()(),
          uint64_t v48 = -1 << *(unsigned char *)(v46 + 32),
          unint64_t v49 = v47 & ~v48,
          ((*(void *)(v46 + 56 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0))
    {
LABEL_20:
      sub_100057CF4(v101, (uint64_t (*)(void))type metadata accessor for FMUTDetailViewModel);
      if (qword_1006AE190 != -1) {
        swift_once();
      }
      uint64_t v51 = type metadata accessor for Logger();
      sub_1000606BC(v51, (uint64_t)qword_1006D1E98);
      uint64_t v52 = Logger.logObject.getter();
      os_log_type_t v53 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v52, v53))
      {
        uint64_t v54 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v54 = 0;
        _os_log_impl((void *)&_mh_execute_header, v52, v53, "FMUTDetailDataSource: Attempting to prewarm, but finding is not supported", v54, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);
      return;
    }
    uint64_t v50 = ~v48;
    while (*(unsigned char *)(*(void *)(v46 + 48) + v49) != 3)
    {
      unint64_t v49 = (v49 + 1) & v50;
      if (((*(void *)(v46 + 56 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
        goto LABEL_20;
      }
    }
  }
  sub_100057CF4(v101, (uint64_t (*)(void))type metadata accessor for FMUTDetailViewModel);
  uint64_t v55 = *(void **)(v38 + 80);
  uint64_t v56 = (void *)&unk_1006D1000;
  if (v55)
  {
    id v57 = v55;
    uint64_t v58 = v109;
    FMIPUnknownItem.identifier.getter();
    uint64_t v59 = UUID.uuidString.getter();
    uint64_t v60 = v6;
    uint64_t v62 = v61;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v58, v110);
    uint64_t v63 = (void *)FMConnectionManager.identifiers.getter();
    LOBYTE(v59) = sub_100078284(v59, v62, v63);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v59)
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);

      return;
    }
    dispatch thunk of FMConnectionManager.disconnect()();
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v64 = type metadata accessor for Logger();
    sub_1000606BC(v64, (uint64_t)qword_1006D1E98);
    uint64_t v65 = Logger.logObject.getter();
    os_log_type_t v66 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v67 = 0;
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "FMUTDetailDataSource: Prewarming: Existing item connection manager was discarded due to item change", v67, 2u);
      swift_slowDealloc();
    }

    uint64_t v56 = &unk_1006D1000;
    *(unsigned char *)(v38 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_isRangingServiceAvailable) = 1;
    sub_100297B9C();
  }
  uint64_t v68 = v88;
  sub_100506650(*(unsigned __int8 *)(v38 + v56[389]), (uint64_t)v21, v88);
  int v69 = (*(uint64_t (**)(uint64_t, uint64_t))(v89 + 88))(v68, v90);
  if (v69 == enum case for FMExperienceType.r1(_:) || v69 == enum case for FMExperienceType.r1NoAR(_:))
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v71 = type metadata accessor for Logger();
    sub_1000606BC(v71, (uint64_t)qword_1006D1E98);
    uint64_t v72 = Logger.logObject.getter();
    os_log_type_t v73 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v74 = 0;
      _os_log_impl((void *)&_mh_execute_header, v72, v73, "FMUTDetailDataSource: Prewarming: Creating new instance of item connection manager for R1 connections.", v74, 2u);
      swift_slowDealloc();
    }

    sub_10005D034(&qword_1006B27E8);
    uint64_t v75 = swift_allocObject();
    *(_OWORD *)(v75 + 16) = xmmword_10055B970;
    *(void *)(v75 + 56) = v13;
    *(void *)(v75 + 64) = sub_100045844(&qword_1006B7A28, (void (*)(uint64_t))&type metadata accessor for FMIPUnknownItem);
    id v76 = sub_100042804((uint64_t *)(v75 + 32));
    (*(void (**)(uint64_t *, char *, uint64_t))(v14 + 16))(v76, v21, v13);
    (*(void (**)(char *, void, uint64_t))(v91 + 104))(v93, enum case for FMFindingType.ut(_:), v92);
    id v77 = objc_allocWithZone((Class)type metadata accessor for FMItemR1ConnectionManager());
    id v78 = (id)FMItemR1ConnectionManager.init(findables:connectionContext:)();
    sub_100045844(&qword_1006B8BD0, (void (*)(uint64_t))type metadata accessor for FMUTDetailDataSource);
    swift_unknownObjectRetain();
    dispatch thunk of FMItemR1ConnectionManager.delegate.setter();
    if (*(unsigned char *)(v38 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_updatesEnabled) == 1)
    {
      id v78 = v78;
      dispatch thunk of FMConnectionManager.connect()();
    }
    goto LABEL_51;
  }
  if (v69 == enum case for FMExperienceType.bt(_:))
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v79 = type metadata accessor for Logger();
    sub_1000606BC(v79, (uint64_t)qword_1006D1E98);
    uint64_t v80 = Logger.logObject.getter();
    os_log_type_t v81 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v80, v81))
    {
      uint64_t v82 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v82 = 0;
      _os_log_impl((void *)&_mh_execute_header, v80, v81, "FMUTDetailDataSource: Prewarming: Creating new instance of item connection manager for BT connections.", v82, 2u);
      swift_slowDealloc();
    }

    sub_10005D034(&qword_1006B27E8);
    uint64_t v83 = swift_allocObject();
    *(_OWORD *)(v83 + 16) = xmmword_10055B970;
    *(void *)(v83 + 56) = v13;
    *(void *)(v83 + 64) = sub_100045844(&qword_1006B7A28, (void (*)(uint64_t))&type metadata accessor for FMIPUnknownItem);
    uint64_t v84 = sub_100042804((uint64_t *)(v83 + 32));
    (*(void (**)(uint64_t *, char *, uint64_t))(v14 + 16))(v84, v21, v13);
    (*(void (**)(char *, void, uint64_t))(v91 + 104))(v93, enum case for FMFindingType.ut(_:), v92);
    id v85 = objc_allocWithZone((Class)type metadata accessor for FMItemBTConnectionManager());
    id v78 = (id)FMItemBTConnectionManager.init(findables:connectionContext:)();
LABEL_51:
    (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);
    uint64_t v86 = *(void **)(v38 + 80);
    *(void *)(v38 + 80) = v78;

    return;
  }
  _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
}

uint64_t sub_10029956C(uint64_t a1, int a2, uint64_t a3)
{
  return sub_10029AD8C(a2, a3);
}

void sub_100299578(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v50 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v48 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for DispatchQoS();
  uint64_t v47 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v45 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for FMIPUnknownItem();
  uint64_t v44 = *(void *)(v46 - 8);
  uint64_t v7 = __chkstk_darwin(v46);
  uint64_t v41 = v8;
  uint64_t v42 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v43 = (char *)&v37 - v9;
  uint64_t v10 = type metadata accessor for FMSelectedSection();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v37 - v14;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = sub_1000606BC(v16, (uint64_t)qword_1006D1E98);
  sub_100057894(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v39 = v2;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v37 = v17;
    uint64_t v21 = (uint8_t *)v20;
    uint64_t v22 = (void *)swift_slowAlloc();
    uint64_t v40 = v10;
    uint64_t v38 = v4;
    *(_DWORD *)uint64_t v21 = 136315138;
    uint64_t v51 = v22;
    uint64_t aBlock = 0;
    unint64_t v53 = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)();
    uint64_t aBlock = sub_1000606F4(aBlock, v53, (uint64_t *)&v51);
    uint64_t v4 = v38;
    uint64_t v2 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100057CF4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "FMUTDetailDataSource: didUpdate selectedSection %s", v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100057CF4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  }

  sub_100057894(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload() == 8)
  {
    unint64_t v24 = v43;
    uint64_t v23 = v44;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
    uint64_t v26 = v13;
    uint64_t v27 = v46;
    v25(v43, v26, v46);
    uint64_t v40 = *(void *)(v2 + 72);
    Swift::String v28 = v42;
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v42, v24, v27);
    unint64_t v29 = (*(unsigned __int8 *)(v23 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v2;
    v25((char *)(v30 + v29), v28, v27);
    uint64_t v56 = sub_10029A510;
    uint64_t v57 = v30;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    unint64_t v53 = 1107296256;
    uint64_t v54 = sub_10003C410;
    uint64_t v55 = &unk_100630688;
    unint64_t v31 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v32 = v45;
    static DispatchQoS.unspecified.getter();
    uint64_t v51 = _swiftEmptyArrayStorage;
    sub_100045844((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10005D034((uint64_t *)&unk_1006AE4B0);
    sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
    uint64_t v33 = v48;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v31);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v33, v4);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v32, v49);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v27);
    swift_release();
  }
  else
  {
    sub_100057CF4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "FMUTDetailDataSource: not updating selection...", v36, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_100299C7C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a2;
  uint64_t v7 = v4;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v28 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_1000606BC(v15, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = v12;
    uint64_t v19 = a3;
    uint64_t v20 = a4;
    uint64_t v21 = v18;
    *(_DWORD *)uint64_t v18 = 134217984;
    aBlock[0] = *(void *)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, v26, v21, 0xCu);
    a4 = v20;
    a3 = v19;
    uint64_t v12 = v25;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  aBlock[4] = a3;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = a4;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  unint64_t v29 = _swiftEmptyArrayStorage;
  sub_100045844((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v27);
  return swift_release();
}

uint64_t sub_10029A01C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v23 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v22 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1000606BC(v8, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v20 = v1;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v21 = v5;
    uint64_t v14 = (void *)v13;
    uint64_t v19 = v6;
    *(_DWORD *)uint64_t v12 = 138412290;
    sub_10005D034((uint64_t *)&unk_1006B2B30);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    aBlock[0] = isa;
    uint64_t v6 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v14 = isa;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMUTDetailDataSource: itemsDidAge %@", v12, 0xCu);
    sub_10005D034((uint64_t *)&unk_1006B5A50);
    swift_arrayDestroy();
    uint64_t v5 = v21;
    swift_slowDealloc();
    uint64_t v1 = v20;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  aBlock[4] = sub_10029B30C;
  aBlock[5] = v1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_100630638;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  os_log_type_t v17 = v22;
  static DispatchQoS.unspecified.getter();
  uint64_t v24 = _swiftEmptyArrayStorage;
  sub_100045844((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v6);
  return swift_release();
}

uint64_t sub_10029A444()
{
  uint64_t v1 = type metadata accessor for FMIPUnknownItem();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10029A510()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMIPUnknownItem() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1002979F4(v2, v3);
}

uint64_t sub_10029A574(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  __chkstk_darwin(v8);
  os_log_type_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_1000606BC(v11, (uint64_t)qword_1006D1E98);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v23 = v2;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v24 = v5;
    *(_DWORD *)uint64_t v15 = 136315138;
    aBlock[0] = v16;
    if (a1) {
      uint64_t v17 = 28239;
    }
    else {
      uint64_t v17 = 6710863;
    }
    if (a1) {
      unint64_t v18 = 0xE200000000000000;
    }
    else {
      unint64_t v18 = 0xE300000000000000;
    }
    uint64_t v27 = sub_1000606F4(v17, v18, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMUTDetailDataSource: Airplane Mode is %s", v15, 0xCu);
    swift_arrayDestroy();
    uint64_t v5 = v24;
    swift_slowDealloc();
    uint64_t v2 = v23;
    swift_slowDealloc();
  }

  sub_10005EC68();
  uint64_t v19 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = (uint64_t)sub_10029B30C;
  aBlock[5] = v2;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10003C410;
  aBlock[3] = (uint64_t)&unk_1006306D8;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100045844((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v10, v26);
}

uint64_t sub_10029A980(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  __chkstk_darwin(v8);
  os_log_type_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_1000606BC(v11, (uint64_t)qword_1006D1E98);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v23 = v2;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v24 = v5;
    *(_DWORD *)uint64_t v15 = 136315138;
    aBlock[0] = v16;
    if (a1) {
      uint64_t v17 = 6710863;
    }
    else {
      uint64_t v17 = 28239;
    }
    if (a1) {
      unint64_t v18 = 0xE300000000000000;
    }
    else {
      unint64_t v18 = 0xE200000000000000;
    }
    uint64_t v27 = sub_1000606F4(v17, v18, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMUTDetailDataSource: BT is %s", v15, 0xCu);
    swift_arrayDestroy();
    uint64_t v5 = v24;
    swift_slowDealloc();
    uint64_t v2 = v23;
    swift_slowDealloc();
  }

  sub_10005EC68();
  uint64_t v19 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = (uint64_t)sub_10029B30C;
  aBlock[5] = v2;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10003C410;
  aBlock[3] = (uint64_t)&unk_1006306B0;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100045844((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v10, v26);
}

uint64_t sub_10029AD8C(int a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v26 = *(void *)(v10 - 8);
  uint64_t v27 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_1000606BC(v13, (uint64_t)qword_1006D1E98);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v28 = v7;
  if (v16)
  {
    uint64_t v25 = v6;
    uint64_t v17 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 67109378;
    int v24 = a1;
    LODWORD(v29) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 8) = 2080;
    if (a2)
    {
      swift_getErrorValue();
      uint64_t v18 = Error.localizedDescription.getter();
      unint64_t v20 = v19;
    }
    else
    {
      unint64_t v20 = 0xE300000000000000;
      uint64_t v18 = 7104878;
    }
    unint64_t v29 = (void *)sub_1000606F4(v18, v20, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "FMUTDetailDataSource: isRangingServiceAvailable: %{BOOL}d, error: %s", (uint8_t *)v17, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v6 = v25;
    LOBYTE(a1) = v24;
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  *(unsigned char *)(v3 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_isRangingServiceAvailable) = a1 & 1;
  sub_100297B9C();
  aBlock[4] = (uint64_t)sub_10029B30C;
  aBlock[5] = v3;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10003C410;
  aBlock[3] = (uint64_t)&unk_100630700;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  unint64_t v29 = _swiftEmptyArrayStorage;
  sub_100045844((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);
  (*(void (**)(unsigned char *, uint64_t))(v28 + 8))(v9, v6);
  (*(void (**)(unsigned char *, uint64_t))(v26 + 8))(v12, v27);
  return swift_release();
}

uint64_t sub_10029B218(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034(&qword_1006B8BD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10029B280(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034(&qword_1006B8BD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_10029B368()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  id v3 = [v2 mainBundle];
  v4._uint64_t countAndFlagsBits = 0xD000000000000022;
  v19._unint64_t object = (void *)0x800000010057EF80;
  v4._unint64_t object = (void *)0x8000000100590DF0;
  v5.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v5.value._unint64_t object = (void *)0x800000010057EF60;
  v6._uint64_t countAndFlagsBits = 0;
  v6._unint64_t object = (void *)0xE000000000000000;
  v19._uint64_t countAndFlagsBits = 0xD000000000000018;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v19);

  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setTitle:v7];

  id v8 = [v2 mainBundle];
  v9._uint64_t countAndFlagsBits = 0xD000000000000025;
  v20._unint64_t object = (void *)0x800000010057EF80;
  v9._unint64_t object = (void *)0x8000000100590E20;
  v10.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v10.value._unint64_t object = (void *)0x800000010057EF60;
  v11._uint64_t countAndFlagsBits = 0;
  v11._unint64_t object = (void *)0xE000000000000000;
  v20._uint64_t countAndFlagsBits = 0xD000000000000018;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v20);

  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setSubtitle:v12];

  [v0 setDismissalType:3];
  uint64_t v13 = *(void *)&v0[OBJC_IVAR____TtC6FindMy29FMAccessoryDiscoveryVideoCard_videoPlayer];
  id v14 = [v1 traitCollection];
  id v15 = [v14 userInterfaceStyle];

  unint64_t v16 = 0xD000000000000017;
  if (v15 == (id)1) {
    unint64_t v16 = 0xD000000000000018;
  }
  unint64_t v17 = 0x8000000100590E70;
  uint64_t v18 = (unint64_t *)(v13 + OBJC_IVAR____TtC6FindMy14FMAVPlayerView_assetName);
  if (v15 != (id)1) {
    unint64_t v17 = 0x8000000100590E50;
  }
  *uint64_t v18 = v16;
  v18[1] = v17;
  swift_bridgeObjectRelease();
  sub_1002F6BB8();
}

void sub_10029B5A8(uint64_t a1)
{
  uint64_t v2 = v1;
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for FMAccessoryDiscoverySearchingCard();
  [super traitCollectionDidChange:a1];
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC6FindMy29FMAccessoryDiscoveryVideoCard_videoPlayer];
  id v5 = [v2 traitCollection];
  id v6 = [v5 userInterfaceStyle];

  unint64_t v7 = 0xD000000000000017;
  unint64_t v8 = 0x8000000100590E70;
  if (v6 != (id)1) {
    unint64_t v8 = 0x8000000100590E50;
  }
  Swift::String v9 = (unint64_t *)(v4 + OBJC_IVAR____TtC6FindMy14FMAVPlayerView_assetName);
  if (v6 == (id)1) {
    unint64_t v7 = 0xD000000000000018;
  }
  *Swift::String v9 = v7;
  v9[1] = v8;
  swift_bridgeObjectRelease();
  sub_1002F6BB8();
}

uint64_t sub_10029B72C()
{
  return swift_unknownObjectWeakDestroy();
}

id sub_10029B73C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAccessoryDiscoverySearchingCard();
  return [super dealloc];
}

uint64_t type metadata accessor for FMAccessoryDiscoverySearchingCard()
{
  return self;
}

void *sub_10029B7A4(uint64_t a1)
{
  uint64_t v3 = sub_10005D034(&qword_1006AF020);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  __chkstk_darwin(v5);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v8)
  {
    v26[1] = v1;
    os_log_type_t v35 = _swiftEmptyArrayStorage;
    uint64_t v30 = v7;
    unint64_t v31 = (char *)v26 - v6;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v33 = *(void *)(v4 + 72);
    uint64_t v32 = type metadata accessor for UUID();
    uint64_t v11 = *(void *)(v32 - 8);
    NSString v12 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v28 = v11 + 16;
    unint64_t v29 = v12;
    uint64_t v27 = (void (**)(uint64_t, char *, uint64_t))(v11 + 32);
    uint64_t v13 = v32;
    uint64_t v14 = v30;
    do
    {
      uint64_t v34 = v8;
      uint64_t v15 = *(int *)(v3 + 48);
      unint64_t v16 = v31;
      uint64_t v17 = (uint64_t)&v31[v15];
      uint64_t v18 = v10 + v15;
      uint64_t v19 = *(int *)(v3 + 64);
      v29(v31, v10, v13);
      sub_1002BCBDC(v18, v17, type metadata accessor for FMBeaconSharingModuleShareState);
      Swift::String v20 = *(void **)(v10 + v19);
      uint64_t v21 = v14 + *(int *)(v3 + 48);
      uint64_t v22 = *(int *)(v3 + 64);
      uint64_t v23 = v16;
      uint64_t v24 = v34;
      (*v27)(v14, v23, v13);
      sub_1002BCB74(v17, v21, type metadata accessor for FMBeaconSharingModuleShareState);
      *(void *)(v14 + v22) = v20;
      id v25 = v20;
      sub_100003F10(v14, &qword_1006AF020);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v10 += v33;
      uint64_t v8 = v24 - 1;
    }
    while (v8);
    return v35;
  }
  return result;
}

uint64_t sub_10029BA14(uint64_t a1)
{
  objc_super v2 = v1;
  sub_10005D034(&qword_1006B93A0);
  uint64_t v36 = swift_allocBox();
  sub_10005D034(&qword_1006B93A8);
  sub_1000450A0(&qword_1006B93B0, &qword_1006B93A8);
  NSDiffableDataSourceSnapshot.init()();
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_10061F0C0);
  sub_1002BEF8C();
  swift_getKeyPath();
  swift_retain();
  sub_1002BC75C(a1);
  swift_release_n();
  v44[0] = 0;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v5 = *(void *)&v1[qword_1006C11E0] + 16;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = *(unsigned __int8 *)(a1 + v6++ + 32);
      uint64_t v8 = 0xEA00000000006D65;
      uint64_t v9 = 0x7449656D616E6572;
      switch(v7)
      {
        case 1:
          uint64_t v9 = 0x744965766F6D6572;
          break;
        case 2:
          uint64_t v8 = 0x800000010057DEF0;
          uint64_t v9 = 0xD000000000000010;
          break;
        case 3:
          uint64_t v9 = 0xD000000000000015;
          uint64_t v8 = 0x800000010057DF10;
          break;
        default:
          break;
      }
      uint64_t v10 = *(void *)v5;
      if (*(void *)(*(void *)v5 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v11 = sub_100053708(v9, v8);
        if (v12)
        {
          uint64_t v13 = *(unsigned __int8 *)(*(void *)(v10 + 56) + v11);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v14 = 0xEA00000000006D65;
          unint64_t v15 = 0x7449656D616E6572;
          switch(v13)
          {
            case 1:
              unint64_t v15 = 0x744965766F6D6572;
              break;
            case 2:
              unint64_t v14 = 0x800000010057DEF0;
              unint64_t v15 = 0xD000000000000010;
              break;
            case 3:
              unint64_t v15 = 0xD000000000000015;
              unint64_t v14 = 0x800000010057DF10;
              break;
            default:
              break;
          }
          unint64_t v16 = 0x7449656D616E6572;
          unint64_t v17 = 0xEA00000000006D65;
          switch((int)v7)
          {
            case 1:
              if (v15 == 0x744965766F6D6572) {
                goto LABEL_21;
              }
              goto LABEL_24;
            case 2:
              unint64_t v17 = 0x800000010057DEF0;
              unint64_t v16 = 0xD000000000000010;
              goto LABEL_20;
            case 3:
              unint64_t v17 = 0x800000010057DF10;
              if (v15 != 0xD000000000000015) {
                goto LABEL_24;
              }
              goto LABEL_21;
            default:
LABEL_20:
              if (v15 != v16) {
                goto LABEL_24;
              }
LABEL_21:
              if (v14 == v17)
              {
                swift_bridgeObjectRelease_n();
                continue;
              }
LABEL_24:
              char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v18) {
                continue;
              }
              sub_1000E674C(v7, (uint64_t)v43);
              sub_1002BE9F0((uint64_t)v43);
              sub_1000E751C((uint64_t)v43, (uint64_t)v44);
              int v19 = v44[48];
              sub_10005D034((uint64_t *)&unk_1006AEE90);
              uint64_t v20 = swift_allocObject();
              *(_OWORD *)(v20 + 16) = xmmword_10055B970;
              unint64_t v21 = 0xEA00000000006D65;
              unint64_t v22 = 0x7449656D616E6572;
              if (v19 == 2)
              {
                switch((int)v7)
                {
                  case 1:
                    unint64_t v22 = 0x744965766F6D6572;
                    break;
                  case 2:
                    unint64_t v21 = 0x800000010057DEF0;
                    unint64_t v22 = 0xD000000000000010;
                    break;
                  case 3:
                    unint64_t v22 = 0xD000000000000015;
                    unint64_t v21 = 0x800000010057DF10;
                    break;
                  default:
                    break;
                }
                *(void *)(v20 + 32) = v22;
                *(void *)(v20 + 40) = v21;
                NSDiffableDataSourceSnapshot.reloadItems(_:)((Swift::OpaquePointer)v20);
              }
              else
              {
                switch((int)v7)
                {
                  case 1:
                    unint64_t v22 = 0x744965766F6D6572;
                    break;
                  case 2:
                    unint64_t v21 = 0x800000010057DEF0;
                    unint64_t v22 = 0xD000000000000010;
                    break;
                  case 3:
                    unint64_t v22 = 0xD000000000000015;
                    unint64_t v21 = 0x800000010057DF10;
                    break;
                  default:
                    break;
                }
                *(void *)(v20 + 32) = v22;
                *(void *)(v20 + 40) = v21;
                NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v20);
              }
              break;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
    }
    while (v4 != v6);
    swift_bridgeObjectRelease();
  }
  sub_1002B4FA4(a1);
  if (v2[qword_1006C1200]) {
    double v23 = 0.3;
  }
  else {
    double v23 = 0.0;
  }
  uint64_t v24 = *(void **)&v2[qword_1006C11F0];
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v2;
  *(void *)(v25 + 24) = v36;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v2;
  uint64_t v27 = self;
  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = v24;
  v28[3] = sub_1002BF024;
  v28[4] = v25;
  uint64_t v41 = sub_1002BF1A4;
  uint64_t v42 = v28;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v38 = 1107296256;
  uint64_t v39 = sub_10003C410;
  uint64_t v40 = &unk_100631010;
  unint64_t v29 = _Block_copy(&aBlock);
  uint64_t v30 = v2;
  swift_retain();
  id v31 = v24;
  swift_retain();
  swift_release();
  uint64_t v32 = (void *)swift_allocObject();
  void v32[2] = sub_1002BE9CC;
  v32[3] = v26;
  v32[4] = v31;
  uint64_t v41 = sub_1002BF128;
  uint64_t v42 = v32;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v38 = 1107296256;
  uint64_t v39 = sub_1002F8BC0;
  uint64_t v40 = &unk_100631060;
  uint64_t v33 = _Block_copy(&aBlock);
  id v34 = v31;
  swift_retain();
  swift_release();
  [v27 animateWithDuration:4 delay:v29 options:v33 animations:v23 completion:0.0];
  _Block_release(v33);
  _Block_release(v29);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10029C1BC(uint64_t a1)
{
  objc_super v2 = v1;
  uint64_t v99 = type metadata accessor for UUID();
  uint64_t v106 = *(char **)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v98 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10005D034(&qword_1006B9328);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  uint64_t v105 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v91 = (uint64_t)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v90 = (uint64_t)&v88 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v109 = (uint64_t)&v88 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  unint64_t v17 = (char *)&v88 - v16;
  __chkstk_darwin(v15);
  uint64_t v107 = (char *)&v88 - v18;
  uint64_t v19 = sub_10005D034(&qword_1006B9330);
  uint64_t v89 = swift_allocBox();
  uint64_t v21 = v20;
  sub_10005D034(&qword_1006B9338);
  sub_1000450A0(&qword_1006B9340, &qword_1006B9338);
  NSDiffableDataSourceSnapshot.init()();
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_10061F0E8);
  uint64_t v100 = v8;
  uint64_t v110 = v8;
  uint64_t v111 = sub_1002B4DB8(&qword_1006B9348, (void (*)(uint64_t))type metadata accessor for FMBeaconSharingModuleEntry);
  uint64_t v112 = &protocol witness table for String;
  swift_getKeyPath();
  swift_retain();
  sub_1002BC84C(a1);
  swift_release_n();
  v120[0] = 0;
  uint64_t v94 = v19;
  uint64_t v93 = v21;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22)
  {
    uint64_t v23 = *(void *)&v1[qword_1006C11E0] + 16;
    uint64_t v24 = v105;
    uint64_t v25 = a1 + ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80));
    uint64_t v88 = a1;
    swift_bridgeObjectRetain();
    uint64_t v104 = v23;
    swift_beginAccess();
    uint64_t v108 = *(void *)(v24 + 72);
    uint64_t v96 = (void (**)(char *, uint64_t, uint64_t))(v106 + 32);
    uint64_t v95 = (void (**)(char *, uint64_t))(v106 + 8);
    uint64_t v102 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
    uint64_t v103 = (unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    long long v92 = xmmword_10055B970;
    uint64_t v101 = v2;
    uint64_t v26 = v100;
    uint64_t v97 = v17;
    uint64_t v27 = (uint64_t)v107;
    do
    {
      sub_1002BCBDC(v25, v27, type metadata accessor for FMBeaconSharingModuleEntry);
      uint64_t v28 = v27;
      uint64_t v29 = v109;
      sub_1002BCBDC(v28, v109, type metadata accessor for FMBeaconSharingModuleEntry);
      uint64_t v30 = sub_10005D034(&qword_1006B9050);
      uint64_t v31 = *(void *)(v30 - 8);
      uint64_t v106 = *(char **)(v31 + 48);
      uint64_t v105 = v31 + 48;
      int v32 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v106)(v29, 2, v30);
      if (v32)
      {
        if (v32 == 1)
        {
          uint64_t v33 = 0xE200000000000000;
          uint64_t v34 = 25933;
        }
        else
        {
          uint64_t v34 = 0x6F73726550646441;
          uint64_t v33 = 0xE90000000000006ELL;
        }
      }
      else
      {
        uint64_t v35 = v109;
        uint64_t v36 = v109 + *(int *)(v30 + 48);
        uint64_t v37 = v98;
        uint64_t v38 = v7;
        uint64_t v39 = v99;
        (*v96)(v98, v109 + *(int *)(v30 + 64), v99);
        uint64_t v34 = UUID.uuidString.getter();
        uint64_t v33 = v40;
        uint64_t v41 = v39;
        uint64_t v7 = v38;
        uint64_t v26 = v100;
        (*v95)(v37, v41);
        uint64_t v42 = v36;
        objc_super v2 = v101;
        sub_1002BCB14(v42, type metadata accessor for FMBeaconSharingModuleShareState);
        uint64_t v43 = v35;
        unint64_t v17 = v97;
        sub_1002BCB14(v43, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      }
      uint64_t v44 = *(void *)v104;
      if (*(void *)(*(void *)v104 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v45 = sub_100053708(v34, v33);
        if (v46)
        {
          sub_1002BCBDC(*(void *)(v44 + 56) + v45 * v108, (uint64_t)v7, type metadata accessor for FMBeaconSharingModuleEntry);
          (*v102)(v7, 0, 1, v26);
        }
        else
        {
          (*v102)(v7, 1, 1, v26);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        (*v102)(v7, 1, 1, v26);
      }
      swift_bridgeObjectRelease();
      uint64_t v27 = (uint64_t)v107;
      if ((*v103)(v7, 1, v26) == 1)
      {
        sub_1002BCB14(v27, type metadata accessor for FMBeaconSharingModuleEntry);
        sub_100003F10((uint64_t)v7, &qword_1006B9328);
      }
      else
      {
        sub_1002BCB74((uint64_t)v7, (uint64_t)v17, type metadata accessor for FMBeaconSharingModuleEntry);
        if (sub_1002BB694((uint64_t)v17, v27))
        {
          sub_1002BCB14((uint64_t)v17, type metadata accessor for FMBeaconSharingModuleEntry);
          objc_super v2 = v101;
          sub_1002BCB14(v27, type metadata accessor for FMBeaconSharingModuleEntry);
        }
        else
        {
          sub_10029EEB4((uint64_t)v119);
          sub_1002BE9F0((uint64_t)v119);
          sub_1000E751C((uint64_t)v119, (uint64_t)v120);
          int v47 = v120[48];
          sub_10005D034((uint64_t *)&unk_1006AEE90);
          uint64_t v48 = swift_allocObject();
          *(_OWORD *)(v48 + 16) = v92;
          if (v47 == 2)
          {
            uint64_t v49 = v90;
            sub_1002BCBDC(v27, v90, type metadata accessor for FMBeaconSharingModuleEntry);
            int v50 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v106)(v49, 2, v30);
            if (v50)
            {
              if (v50 == 1)
              {
                unint64_t v51 = 0xE200000000000000;
                uint64_t v52 = 25933;
              }
              else
              {
                uint64_t v52 = 0x6F73726550646441;
                unint64_t v51 = 0xE90000000000006ELL;
              }
            }
            else
            {
              uint64_t v57 = v90;
              uint64_t v58 = v90 + *(int *)(v30 + 48);
              uint64_t v59 = v90 + *(int *)(v30 + 64);
              uint64_t v60 = v98;
              uint64_t v61 = v99;
              (*v96)(v98, v59, v99);
              uint64_t v52 = UUID.uuidString.getter();
              unint64_t v51 = v62;
              uint64_t v63 = v61;
              uint64_t v26 = v100;
              (*v95)(v60, v63);
              sub_1002BCB14(v58, type metadata accessor for FMBeaconSharingModuleShareState);
              uint64_t v64 = v57;
              unint64_t v17 = v97;
              sub_1002BCB14(v64, type metadata accessor for FMBeaconSharingModuleRelationshipType);
            }
            *(void *)(v48 + 32) = v52;
            *(void *)(v48 + 40) = v51;
            NSDiffableDataSourceSnapshot.reloadItems(_:)((Swift::OpaquePointer)v48);
          }
          else
          {
            uint64_t v53 = v91;
            sub_1002BCBDC(v27, v91, type metadata accessor for FMBeaconSharingModuleEntry);
            int v54 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v106)(v53, 2, v30);
            if (v54)
            {
              if (v54 == 1)
              {
                unint64_t v55 = 0xE200000000000000;
                uint64_t v56 = 25933;
              }
              else
              {
                uint64_t v56 = 0x6F73726550646441;
                unint64_t v55 = 0xE90000000000006ELL;
              }
            }
            else
            {
              uint64_t v65 = v91;
              uint64_t v66 = v91 + *(int *)(v30 + 48);
              uint64_t v67 = v91 + *(int *)(v30 + 64);
              uint64_t v68 = v98;
              uint64_t v69 = v99;
              (*v96)(v98, v67, v99);
              uint64_t v56 = UUID.uuidString.getter();
              unint64_t v55 = v70;
              uint64_t v71 = v69;
              uint64_t v26 = v100;
              (*v95)(v68, v71);
              sub_1002BCB14(v66, type metadata accessor for FMBeaconSharingModuleShareState);
              uint64_t v72 = v65;
              unint64_t v17 = v97;
              sub_1002BCB14(v72, type metadata accessor for FMBeaconSharingModuleRelationshipType);
            }
            *(void *)(v48 + 32) = v56;
            *(void *)(v48 + 40) = v55;
            NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v48);
          }
          uint64_t v27 = (uint64_t)v107;
          swift_bridgeObjectRelease();
          sub_1002BCB14((uint64_t)v17, type metadata accessor for FMBeaconSharingModuleEntry);
          sub_1002BCB14(v27, type metadata accessor for FMBeaconSharingModuleEntry);
          objc_super v2 = v101;
        }
      }
      v25 += v108;
      --v22;
    }
    while (v22);
    a1 = v88;
    swift_bridgeObjectRelease();
  }
  sub_1002B5230(a1);
  if (v2[qword_1006C1200]) {
    double v73 = 0.3;
  }
  else {
    double v73 = 0.0;
  }
  uint64_t v74 = *(void **)&v2[qword_1006C11F0];
  uint64_t v75 = v2;
  uint64_t v76 = swift_allocObject();
  uint64_t v77 = v89;
  *(void *)(v76 + 16) = v75;
  *(void *)(v76 + 24) = v77;
  uint64_t v78 = swift_allocObject();
  *(void *)(v78 + 16) = v75;
  uint64_t v79 = self;
  uint64_t v80 = (void *)swift_allocObject();
  v80[2] = v74;
  v80[3] = sub_1002BE9A8;
  v80[4] = v76;
  uint64_t v117 = sub_1002BE9D4;
  id v118 = v80;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v114 = 1107296256;
  uint64_t v115 = sub_10003C410;
  Swift::String v116 = &unk_100630E30;
  os_log_type_t v81 = _Block_copy(&aBlock);
  id v82 = v75;
  swift_retain();
  id v83 = v74;
  swift_retain();
  swift_release();
  uint64_t v84 = (void *)swift_allocObject();
  v84[2] = sub_1002BE9CC;
  v84[3] = v78;
  v84[4] = v83;
  uint64_t v117 = sub_1002BE9E4;
  id v118 = v84;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v114 = 1107296256;
  uint64_t v115 = sub_1002F8BC0;
  Swift::String v116 = &unk_100630E80;
  id v85 = _Block_copy(&aBlock);
  id v86 = v83;
  swift_retain();
  swift_release();
  [v79 animateWithDuration:4 delay:v81 options:v85 animations:v73 completion:0.0];
  _Block_release(v85);
  _Block_release(v81);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10029CF54()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPBeaconShareState();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for FMIPBeaconShareState.accepting(_:)
    || (int v7 = v6, v6 == enum case for FMIPBeaconShareState.declining(_:)))
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    swift_release();
    return 0;
  }
  if (v6 == enum case for FMIPBeaconShareState.unknown(_:))
  {
    id v9 = [self mainBundle];
    unint64_t v10 = 0xD000000000000018;
    unint64_t v11 = 0xD000000000000025;
    unint64_t v27 = 0x80000001005828D0;
    uint64_t v12 = "SHARE_ITEM_MODULE_SHARE_STATE_UNKNOWN";
LABEL_19:
    unint64_t v14 = (unint64_t)(v12 - 32) | 0x8000000000000000;
    v15.value._unint64_t object = (void *)0x80000001005828B0;
    v15.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v16._uint64_t countAndFlagsBits = 0;
    v16._unint64_t object = (void *)0xE000000000000000;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v11, v15, (NSBundle)v9, v16, *(Swift::String *)&v10)._countAndFlagsBits;

    return countAndFlagsBits;
  }
  if (v6 == enum case for FMIPBeaconShareState.invitationSent(_:))
  {
    id v9 = [self mainBundle];
    unint64_t v10 = 0xD000000000000018;
    unint64_t v11 = 0xD000000000000025;
    unint64_t v27 = 0x80000001005828D0;
    uint64_t v12 = "SHARE_ITEM_MODULE_SHARE_STATE_PENDING";
    goto LABEL_19;
  }
  if (v6 == enum case for FMIPBeaconShareState.invitationReceived(_:)
    || v6 == enum case for FMIPBeaconShareState.requestSent(_:))
  {
    return 0;
  }
  if (v6 == enum case for FMIPBeaconShareState.requestReceived(_:))
  {
    id v9 = [self mainBundle];
    unint64_t v10 = 0xD000000000000018;
    unint64_t v11 = 0xD00000000000002ELL;
    unint64_t v27 = 0x80000001005828D0;
    uint64_t v12 = "SHARE_ITEM_MODULE_SHARE_STATE_REQUEST_RECEIVED";
    goto LABEL_19;
  }
  if (v6 == enum case for FMIPBeaconShareState.accepted(_:))
  {
    id v9 = [self mainBundle];
    unint64_t v10 = 0xD000000000000018;
    unint64_t v11 = 0xD000000000000026;
    unint64_t v27 = 0x80000001005828D0;
    uint64_t v12 = "SHARE_ITEM_MODULE_SHARE_STATE_ACCEPTED";
    goto LABEL_19;
  }
  if (v6 == enum case for FMIPBeaconShareState.expired(_:))
  {
    id v9 = [self mainBundle];
    unint64_t v10 = 0xD000000000000018;
    unint64_t v11 = 0xD000000000000025;
    unint64_t v27 = 0x80000001005828D0;
    uint64_t v12 = "SHARE_ITEM_MODULE_SHARE_STATE_EXPIRED";
    goto LABEL_19;
  }
  if (v6 == enum case for FMIPBeaconShareState.withdrawing(_:)) {
    return 0;
  }
  int v18 = enum case for FMIPBeaconShareState.failed(_:);
  id v19 = [self mainBundle];
  unint64_t v20 = 0xD000000000000018;
  if (v7 == v18)
  {
    v21._uint64_t countAndFlagsBits = 0xD000000000000024;
    unint64_t v28 = 0x80000001005828D0;
    v21._unint64_t object = (void *)0x8000000100591080;
    v22.value._unint64_t object = (void *)0x80000001005828B0;
    v22.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v23._uint64_t countAndFlagsBits = 0;
    v23._unint64_t object = (void *)0xE000000000000000;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v19, v23, *(Swift::String *)&v20)._countAndFlagsBits;
  }
  else
  {
    v24._uint64_t countAndFlagsBits = 0xD000000000000025;
    unint64_t v29 = 0x80000001005828D0;
    v24._unint64_t object = (void *)0x8000000100591050;
    v25.value._unint64_t object = (void *)0x80000001005828B0;
    v25.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v26._uint64_t countAndFlagsBits = 0;
    v26._unint64_t object = (void *)0xE000000000000000;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, v25, (NSBundle)v19, v26, *(Swift::String *)&v20)._countAndFlagsBits;

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return countAndFlagsBits;
}

uint64_t sub_10029D444()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPBeaconShareState();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for FMIPBeaconShareState.accepting(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    swift_release();
    id v7 = [self mainBundle];
LABEL_8:
    id v10 = v7;
    unint64_t v11 = 0xD000000000000018;
    unint64_t v12 = 0xD000000000000025;
    unint64_t v24 = 0x80000001005828D0;
    uint64_t v13 = "SHARE_ITEM_MODULE_SHARE_ACTION_REMOVE";
    goto LABEL_9;
  }
  int v8 = v6;
  if (v6 == enum case for FMIPBeaconShareState.declining(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    swift_release();
    id v9 = [self mainBundle];
LABEL_5:
    id v10 = v9;
    unint64_t v11 = 0xD000000000000018;
    unint64_t v12 = 0xD000000000000026;
    unint64_t v24 = 0x80000001005828D0;
    uint64_t v13 = "SHARE_ITEM_MODULE_SHARE_ACTION_DECLINE";
LABEL_9:
    unint64_t v14 = (unint64_t)(v13 - 32) | 0x8000000000000000;
    v15.value._unint64_t object = (void *)0x80000001005828B0;
    v15.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v16._uint64_t countAndFlagsBits = 0;
    v16._unint64_t object = (void *)0xE000000000000000;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v12, v15, (NSBundle)v10, v16, *(Swift::String *)&v11)._countAndFlagsBits;

    return countAndFlagsBits;
  }
  if (v6 == enum case for FMIPBeaconShareState.unknown(_:))
  {
LABEL_7:
    id v7 = [self mainBundle];
    goto LABEL_8;
  }
  if (v6 == enum case for FMIPBeaconShareState.invitationSent(_:)) {
    goto LABEL_15;
  }
  if (v6 == enum case for FMIPBeaconShareState.invitationReceived(_:))
  {
LABEL_13:
    id v9 = [self mainBundle];
    goto LABEL_5;
  }
  if (v6 == enum case for FMIPBeaconShareState.requestSent(_:))
  {
LABEL_15:
    id v10 = [self mainBundle];
    unint64_t v11 = 0xD000000000000018;
    unint64_t v12 = 0xD000000000000027;
    unint64_t v24 = 0x80000001005828D0;
    uint64_t v13 = "SHARE_ITEM_MODULE_SHARE_ACTION_WITHDRAW";
    goto LABEL_9;
  }
  if (v6 == enum case for FMIPBeaconShareState.requestReceived(_:)) {
    goto LABEL_13;
  }
  if (v6 == enum case for FMIPBeaconShareState.accepted(_:)
    || v6 == enum case for FMIPBeaconShareState.expired(_:)
    || v6 == enum case for FMIPBeaconShareState.withdrawing(_:))
  {
    goto LABEL_7;
  }
  int v19 = enum case for FMIPBeaconShareState.failed(_:);
  id v20 = [self mainBundle];
  v26._uint64_t countAndFlagsBits = 0xD000000000000018;
  v21._uint64_t countAndFlagsBits = 0xD000000000000025;
  v26._unint64_t object = (void *)0x80000001005828D0;
  v21._unint64_t object = (void *)0x8000000100591300;
  v22.value._unint64_t object = (void *)0x80000001005828B0;
  v22.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v23._uint64_t countAndFlagsBits = 0;
  v23._unint64_t object = (void *)0xE000000000000000;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v26)._countAndFlagsBits;

  if (v8 != v19) {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return countAndFlagsBits;
}

uint64_t sub_10029D908()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPBeaconShareState();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  int v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  int v8 = (char *)&v21 - v7;
  uint64_t v9 = type metadata accessor for FMBeaconSharingModuleShareState(0);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002BCBDC(v1, (uint64_t)v11, type metadata accessor for FMBeaconSharingModuleShareState);
  uint64_t v12 = sub_10005D034(&qword_1006B9058);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v11, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    int v18 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
    if (v18 != enum case for FMIPBeaconShareState.accepting(_:)
      && v18 != enum case for FMIPBeaconShareState.declining(_:))
    {
      if (v18 == enum case for FMIPBeaconShareState.unknown(_:)) {
        goto LABEL_6;
      }
      if (v18 == enum case for FMIPBeaconShareState.invitationSent(_:)) {
        goto LABEL_20;
      }
      if (v18 == enum case for FMIPBeaconShareState.invitationReceived(_:)
        || v18 == enum case for FMIPBeaconShareState.requestSent(_:))
      {
        goto LABEL_6;
      }
      if (v18 == enum case for FMIPBeaconShareState.requestReceived(_:)) {
        goto LABEL_20;
      }
      if (v18 == enum case for FMIPBeaconShareState.accepted(_:)) {
        goto LABEL_6;
      }
      if (v18 == enum case for FMIPBeaconShareState.expired(_:)) {
        goto LABEL_20;
      }
      if (v18 == enum case for FMIPBeaconShareState.withdrawing(_:)) {
        goto LABEL_6;
      }
      if (v18 == enum case for FMIPBeaconShareState.failed(_:))
      {
LABEL_20:
        uint64_t countAndFlagsBits = sub_10029CF54();
        goto LABEL_7;
      }
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
LABEL_6:
    uint64_t countAndFlagsBits = 0;
LABEL_7:
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    return countAndFlagsBits;
  }
  id v13 = [self mainBundle];
  v22._uint64_t countAndFlagsBits = 0xD000000000000018;
  v14._uint64_t countAndFlagsBits = 0xD000000000000028;
  v22._unint64_t object = (void *)0x80000001005828D0;
  v14._unint64_t object = (void *)0x8000000100591020;
  v15.value._unint64_t object = (void *)0x80000001005828B0;
  v15.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v16._uint64_t countAndFlagsBits = 0;
  v16._unint64_t object = (void *)0xE000000000000000;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v22)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_10029DC9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPBeaconShareState();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMBeaconSharingModuleShareState(0);
  __chkstk_darwin(v6 - 8);
  int v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002BCBDC(v1, (uint64_t)v8, type metadata accessor for FMBeaconSharingModuleShareState);
  uint64_t v9 = sub_10005D034(&qword_1006B9058);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9) == 1)
  {
    id v10 = [self mainBundle];
    v17._uint64_t countAndFlagsBits = 0xD000000000000018;
    v11._uint64_t countAndFlagsBits = 0xD000000000000025;
    v17._unint64_t object = (void *)0x80000001005828D0;
    v11._unint64_t object = (void *)0x8000000100591300;
    v12.value._unint64_t object = (void *)0x80000001005828B0;
    v12.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v13._uint64_t countAndFlagsBits = 0;
    v13._unint64_t object = (void *)0xE000000000000000;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v17)._countAndFlagsBits;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    uint64_t countAndFlagsBits = sub_10029D444();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return countAndFlagsBits;
}

Swift::Int sub_10029DED4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPBeaconShareState();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMBeaconSharingModuleShareState(0);
  __chkstk_darwin(v6 - 8);
  int v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)();
  sub_1002BCBDC(v1, (uint64_t)v8, type metadata accessor for FMBeaconSharingModuleShareState);
  uint64_t v9 = sub_10005D034(&qword_1006B9058);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    Hasher._combine(_:)(1uLL);
    sub_1002B4DB8(&qword_1006B9280, (void (*)(uint64_t))&type metadata accessor for FMIPBeaconShareState);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return Hasher._finalize()();
}

void sub_10029E0E8()
{
  uint64_t v1 = type metadata accessor for FMIPBeaconShareState();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002BCBDC(v0, (uint64_t)v7, type metadata accessor for FMBeaconSharingModuleShareState);
  uint64_t v8 = sub_10005D034(&qword_1006B9058);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v7, v1);
    Hasher._combine(_:)(1uLL);
    sub_1002B4DB8(&qword_1006B9280, (void (*)(uint64_t))&type metadata accessor for FMIPBeaconShareState);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
}

Swift::Int sub_10029E2D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPBeaconShareState();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)();
  sub_1002BCBDC(v1, (uint64_t)v8, type metadata accessor for FMBeaconSharingModuleShareState);
  uint64_t v9 = sub_10005D034(&qword_1006B9058);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    Hasher._combine(_:)(1uLL);
    sub_1002B4DB8(&qword_1006B9280, (void (*)(uint64_t))&type metadata accessor for FMIPBeaconShareState);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return Hasher._finalize()();
}

uint64_t sub_10029E4E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMFFriend();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (void **)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1002BCBDC(v1, (uint64_t)v8, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = *v8;
    if (qword_1006ADF70 != -1) {
      swift_once();
    }
    id v10 = [(id)qword_1006D1508 stringFromContact:v9];
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {

      return 0;
    }
  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v3 + 32))(v5, v8, v2);
    uint64_t v12 = FMFFriend.name.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v12;
}

uint64_t sub_10029E6E4()
{
  uint64_t v1 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (id *)((char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1002BCBDC(v0, (uint64_t)v3, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    id v4 = [self mainBundle];
    v15._uint64_t countAndFlagsBits = 0xD000000000000018;
    v5._uint64_t countAndFlagsBits = 0xD000000000000026;
    v15._unint64_t object = (void *)0x80000001005828D0;
    v5._unint64_t object = (void *)0x80000001005912A0;
    v6.value._unint64_t object = (void *)0x80000001005828B0;
    v6.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v7._uint64_t countAndFlagsBits = 0;
    v7._unint64_t object = (void *)0xE000000000000000;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v15)._countAndFlagsBits;
  }
  else
  {
    id v9 = [self mainBundle];
    v16._uint64_t countAndFlagsBits = 0xD000000000000018;
    v10._uint64_t countAndFlagsBits = 0xD000000000000025;
    v16._unint64_t object = (void *)0x80000001005828D0;
    v10._unint64_t object = (void *)0x80000001005912D0;
    v11.value._unint64_t object = (void *)0x80000001005828B0;
    v11.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v12._uint64_t countAndFlagsBits = 0;
    v12._unint64_t object = (void *)0xE000000000000000;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v16)._countAndFlagsBits;

    sub_1002BCB14((uint64_t)v3, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  }
  return countAndFlagsBits;
}

void sub_10029E8DC()
{
  uint64_t v1 = type metadata accessor for FMFFriend();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  __chkstk_darwin(v5);
  Swift::String v7 = (void **)((char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1002BCBDC(v0, (uint64_t)v7, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = *v7;
    Hasher._combine(_:)(1uLL);
    NSObject.hash(into:)();
  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v2 + 32))(v4, v7, v1);
    Hasher._combine(_:)(0);
    sub_1002B4DB8(&qword_1006B1168, (void (*)(uint64_t))&type metadata accessor for FMFFriend);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

Swift::Int sub_10029EABC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMFFriend();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (void **)((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  Hasher.init(_seed:)();
  sub_1002BCBDC(v1, (uint64_t)v8, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = *v8;
    Hasher._combine(_:)(1uLL);
    NSObject.hash(into:)();
  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v3 + 32))(v5, v8, v2);
    Hasher._combine(_:)(0);
    sub_1002B4DB8(&qword_1006B1168, (void (*)(uint64_t))&type metadata accessor for FMFFriend);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return Hasher._finalize()();
}

Swift::Int sub_10029ECBC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMFFriend();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (void **)((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  Hasher.init(_seed:)();
  sub_1002BCBDC(v1, (uint64_t)v8, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = *v8;
    Hasher._combine(_:)(1uLL);
    NSObject.hash(into:)();
  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v3 + 32))(v6, v8, v2);
    Hasher._combine(_:)(0);
    sub_1002B4DB8(&qword_1006B1168, (void (*)(uint64_t))&type metadata accessor for FMFFriend);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return Hasher._finalize()();
}

void sub_10029EEB4(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMBeaconSharingModuleShareState(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002BCBDC(v1, (uint64_t)v11, type metadata accessor for FMBeaconSharingModuleEntry);
  uint64_t v12 = sub_10005D034(&qword_1006B9050);
  int v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 2, v12);
  if (v13)
  {
    if (v13 == 1)
    {
      id v14 = [self mainBundle];
      v35._uint64_t countAndFlagsBits = 0xD000000000000018;
      v15._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
      v35._unint64_t object = (void *)0x80000001005828D0;
      v15._unint64_t object = (void *)0x8000000100590FF0;
      v16.value._unint64_t object = (void *)0x80000001005828B0;
      v16.value._uint64_t countAndFlagsBits = 0xD000000000000013;
      v17._uint64_t countAndFlagsBits = 0;
      v17._unint64_t object = (void *)0xE000000000000000;
      Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v35);
      uint64_t countAndFlagsBits = v18._countAndFlagsBits;
      unint64_t object = v18._object;

      uint64_t v21 = 0;
      uint64_t v22 = 0;
      char v23 = 3;
    }
    else
    {
      id v29 = [self mainBundle];
      v36._uint64_t countAndFlagsBits = 0xD000000000000018;
      v30._uint64_t countAndFlagsBits = 0xD000000000000029;
      v36._unint64_t object = (void *)0x80000001005828D0;
      v30._unint64_t object = (void *)0x8000000100590FC0;
      v31.value._unint64_t object = (void *)0x80000001005828B0;
      v31.value._uint64_t countAndFlagsBits = 0xD000000000000013;
      v32._uint64_t countAndFlagsBits = 0;
      v32._unint64_t object = (void *)0xE000000000000000;
      Swift::String v33 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, v31, (NSBundle)v29, v32, v36);
      uint64_t countAndFlagsBits = v33._countAndFlagsBits;
      unint64_t object = v33._object;

      uint64_t v21 = 0;
      uint64_t v22 = 0;
      char v23 = 0;
    }
  }
  else
  {
    uint64_t v24 = (uint64_t)&v11[*(int *)(v12 + 48)];
    uint64_t v25 = &v11[*(int *)(v12 + 64)];
    sub_1002BCB74((uint64_t)v11, (uint64_t)v8, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    sub_1002BCB74(v24, (uint64_t)v5, type metadata accessor for FMBeaconSharingModuleShareState);
    uint64_t countAndFlagsBits = sub_10029E4E8();
    unint64_t object = v26;
    uint64_t v21 = sub_10029D908();
    uint64_t v22 = v27;
    sub_1002BCB14((uint64_t)v5, type metadata accessor for FMBeaconSharingModuleShareState);
    sub_1002BCB14((uint64_t)v8, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    uint64_t v28 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v25, v28);
    char v23 = 1;
  }
  *(void *)a1 = countAndFlagsBits;
  *(void *)(a1 + 8) = object;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = v21;
  *(void *)(a1 + 40) = v22;
  *(unsigned char *)(a1 + 48) = v23;
}

void sub_10029F25C(uint64_t a1)
{
  uint64_t v55 = a1;
  uint64_t v50 = type metadata accessor for FMIPBeaconShareState();
  uint64_t v52 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v53 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for FMFFriend();
  uint64_t v49 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for UUID();
  uint64_t v51 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FMBeaconSharingModuleShareState(0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  int v13 = (char *)&v44 - v12;
  uint64_t v14 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  uint64_t v15 = __chkstk_darwin(v14);
  Swift::String v17 = (void **)((char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  int v19 = (char *)&v44 - v18;
  uint64_t v20 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002BCBDC(v1, (uint64_t)v22, type metadata accessor for FMBeaconSharingModuleEntry);
  uint64_t v23 = sub_10005D034(&qword_1006B9050);
  int v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v22, 2, v23);
  if (v24)
  {
    if (v24 == 1) {
      Swift::UInt v25 = 0;
    }
    else {
      Swift::UInt v25 = 2;
    }
    Hasher._combine(_:)(v25);
  }
  else
  {
    unint64_t v45 = v5;
    char v46 = v11;
    uint64_t v26 = (uint64_t)&v22[*(int *)(v23 + 48)];
    uint64_t v27 = &v22[*(int *)(v23 + 64)];
    sub_1002BCB74((uint64_t)v22, (uint64_t)v19, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    int v47 = v13;
    sub_1002BCB74(v26, (uint64_t)v13, type metadata accessor for FMBeaconSharingModuleShareState);
    uint64_t v28 = v51;
    id v29 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
    uint64_t v48 = v7;
    v29(v7, v27, v54);
    Hasher._combine(_:)(1uLL);
    sub_1002BCBDC((uint64_t)v19, (uint64_t)v17, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v31 = v52;
    if (EnumCaseMultiPayload == 1)
    {
      Swift::String v32 = *v17;
      Hasher._combine(_:)(1uLL);
      NSObject.hash(into:)();
    }
    else
    {
      uint64_t v33 = v49;
      uint64_t v34 = v45;
      (*(void (**)(char *, void **, uint64_t))(v49 + 32))(v45, v17, v3);
      Hasher._combine(_:)(0);
      sub_1002B4DB8(&qword_1006B1168, (void (*)(uint64_t))&type metadata accessor for FMFFriend);
      dispatch thunk of Hashable.hash(into:)();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v3);
    }
    Swift::String v35 = v53;
    uint64_t v36 = (uint64_t)v46;
    uint64_t v37 = (uint64_t)v47;
    sub_1002BCBDC((uint64_t)v47, (uint64_t)v46, type metadata accessor for FMBeaconSharingModuleShareState);
    uint64_t v38 = sub_10005D034(&qword_1006B9058);
    int v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v36, 1, v38);
    uint64_t v40 = v48;
    if (v39 == 1)
    {
      Hasher._combine(_:)(0);
    }
    else
    {
      uint64_t v41 = v36;
      uint64_t v42 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v35, v41, v50);
      Hasher._combine(_:)(1uLL);
      sub_1002B4DB8(&qword_1006B9280, (void (*)(uint64_t))&type metadata accessor for FMIPBeaconShareState);
      dispatch thunk of Hashable.hash(into:)();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v35, v42);
    }
    sub_1002B4DB8((unint64_t *)&unk_1006C0B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v43 = v54;
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v40, v43);
    sub_1002BCB14(v37, type metadata accessor for FMBeaconSharingModuleShareState);
    sub_1002BCB14((uint64_t)v19, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  }
}

uint64_t sub_10029F8DC@<X0>(uint64_t a1@<X8>)
{
  sub_10029EEB4((uint64_t)v3);
  return sub_1000E751C((uint64_t)v3, a1);
}

uint64_t sub_10029F918(uint64_t a1)
{
  __chkstk_darwin(a1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002BCBDC(v1, (uint64_t)v3, type metadata accessor for FMBeaconSharingModuleEntry);
  uint64_t v4 = sub_10005D034(&qword_1006B9050);
  int v5 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 2, v4);
  if (v5)
  {
    if (v5 == 1) {
      return 0;
    }
  }
  else
  {
    uint64_t v7 = (uint64_t)&v3[*(int *)(v4 + 48)];
    uint64_t v8 = &v3[*(int *)(v4 + 64)];
    uint64_t v9 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    sub_1002BCB14(v7, type metadata accessor for FMBeaconSharingModuleShareState);
    sub_1002BCB14((uint64_t)v3, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  }
  return 1;
}

BOOL sub_10029FA7C(uint64_t a1, uint64_t a2)
{
  return (sub_1002BBCEC(a2, a1) & 1) == 0;
}

BOOL sub_10029FAA8(uint64_t a1, uint64_t a2)
{
  return (sub_1002BBCEC(a1, a2) & 1) == 0;
}

uint64_t sub_10029FAC8(uint64_t a1, uint64_t a2)
{
  return sub_1002BBCEC(a2, a1);
}

uint64_t sub_10029FAD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002BCBDC(v2, (uint64_t)v10, type metadata accessor for FMBeaconSharingModuleEntry);
  uint64_t v11 = sub_10005D034(&qword_1006B9050);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 2, v11);
  if (result)
  {
    if (result == 1)
    {
      unint64_t v13 = 0xE200000000000000;
      uint64_t v14 = 25933;
    }
    else
    {
      unint64_t v13 = 0xE90000000000006ELL;
      uint64_t v14 = 0x6F73726550646441;
    }
  }
  else
  {
    uint64_t v15 = (uint64_t)&v10[*(int *)(v11 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, &v10[*(int *)(v11 + 64)], v4);
    uint64_t v14 = UUID.uuidString.getter();
    unint64_t v13 = v16;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    sub_1002BCB14(v15, type metadata accessor for FMBeaconSharingModuleShareState);
    uint64_t result = sub_1002BCB14((uint64_t)v10, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  }
  *a1 = v14;
  a1[1] = v13;
  return result;
}

Swift::Int sub_10029FCF8()
{
  Hasher.init(_seed:)();
  sub_10029F25C((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_10029FD3C()
{
  Hasher.init(_seed:)();
  sub_10029F25C((uint64_t)v1);
  return Hasher._finalize()();
}

uint64_t sub_10029FD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(sub_10029FD98, a4, 0);
}

uint64_t sub_10029FD98()
{
  sub_1002A0078();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

int64_t sub_10029FDF8()
{
  uint64_t v1 = v0[15];
  if (!v1) {
    goto LABEL_5;
  }
  uint64_t v2 = *(void *)(v0[14] + 24);
  swift_beginAccess();
  swift_retain();
  swift_retain();
  int64_t result = sub_10014040C((unint64_t *)(v2 + 16), v1);
  uint64_t v4 = result;
  unint64_t v5 = *(void *)(v2 + 16);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    int64_t result = swift_bridgeObjectRelease();
    if (v6 >= v4) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6 >= result)
    {
LABEL_4:
      sub_100258678(v4, v6);
      swift_endAccess();
      swift_release();
      swift_release();
LABEL_5:
      swift_release();
      swift_release();
      sub_100036B90(v0[16]);
      sub_100003F10((uint64_t)v0 + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_beaconIdentifier, (uint64_t *)&unk_1006B1760);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_defaultActor_destroy();
      return (int64_t)v0;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10029FF5C()
{
  sub_10029FDF8();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_10029FF88()
{
  return type metadata accessor for FMBeaconSharingModuleDataSource(0);
}

uint64_t type metadata accessor for FMBeaconSharingModuleDataSource(uint64_t a1)
{
  return sub_1000201D0(a1, (uint64_t *)&unk_1006B8C68);
}

void sub_10029FFB0()
{
  sub_1002A64EC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1002A0078()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 112) + 24);
  type metadata accessor for FMDevicesSubscription();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber + 8) = 0;
  swift_unknownObjectWeakInit();
  swift_retain();
  swift_retain();
  UUID.init()();
  *(void *)(v2 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber + 8) = &off_100630840;
  swift_unknownObjectWeakAssign();
  swift_release();
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(v1 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v1 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  swift_release();
  *(void *)(v0 + 120) = v2;
  swift_release();
  id v3 = [self defaultCenter];
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  v8[4] = sub_1002BEF84;
  v8[5] = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10046F7FC;
  v8[3] = &unk_100630F70;
  unint64_t v5 = _Block_copy(v8);
  swift_release();
  id v6 = [v3 addObserverForName:CNContactStoreDidChangeNotification object:0 queue:0 usingBlock:v5];
  _Block_release(v5);

  return swift_unknownObjectRelease();
}

uint64_t sub_1002A02B4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1002A0F6C();
    return swift_release();
  }
  return result;
}

uint64_t sub_1002A030C(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(sub_1002A0330, v2, 0);
}

uint64_t sub_1002A0330()
{
  uint64_t v11 = v0;
  if (qword_1006AE408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000606BC(v1, (uint64_t)qword_1006D2760);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    v0[2] = sub_1000606F4(0xD000000000000012, 0x80000001005914B0, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "FMBeaconSharingModuleDataSource: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = *(void *)(v6 + 128);
  *(void *)(v6 + 128) = v0[3];
  *(void *)(v6 + 136) = v5;
  swift_retain();
  sub_100036B90(v7);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[6] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1002A053C;
  return sub_1002A1470(1);
}

uint64_t sub_1002A053C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1002A0630(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  v2[12] = sub_10005D034((uint64_t *)&unk_1006BEAC0);
  v2[13] = swift_task_alloc();
  sub_10005D034((uint64_t *)&unk_1006B1760);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for UUID();
  v2[18] = v3;
  v2[19] = *(void *)(v3 - 8);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(sub_1002A078C, v1, 0);
}

uint64_t sub_1002A078C()
{
  unint64_t v45 = v0;
  if (qword_1006AE408 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[21];
  uint64_t v4 = v0[18];
  uint64_t v3 = v0[19];
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000606BC(v5, (uint64_t)qword_1006D2760);
  uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v43(v2, v1, v4);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = v0[21];
  uint64_t v10 = v0[19];
  if (v8)
  {
    uint64_t v41 = v0[18];
    uint64_t v11 = swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    v0[8] = sub_1000606F4(0xD000000000000017, 0x8000000100591490, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 12) = 2080;
    uint64_t v12 = UUID.uuidString.getter();
    v0[9] = sub_1000606F4(v12, v13, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v14 = v41;
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v42(v9, v14);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMBeaconSharingModuleDataSource: %s - %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v42(v0[21], v0[18]);
  }

  uint64_t v15 = v0[18];
  uint64_t v16 = v0[19];
  uint64_t v17 = v0[17];
  uint64_t v19 = v0[12];
  uint64_t v18 = v0[13];
  uint64_t v20 = v0[10];
  uint64_t v21 = v0[11] + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_beaconIdentifier;
  swift_beginAccess();
  v43(v17, v20, v15);
  uint64_t v22 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56);
  v22(v17, 0, 1, v15);
  uint64_t v23 = v18 + *(int *)(v19 + 48);
  sub_100006AB0(v21, v18, (uint64_t *)&unk_1006B1760);
  sub_100006AB0(v17, v23, (uint64_t *)&unk_1006B1760);
  int v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  int v25 = v24(v18, 1, v15);
  uint64_t v26 = v0[18];
  if (v25 == 1)
  {
    sub_100003F10(v0[17], (uint64_t *)&unk_1006B1760);
    if (v24(v23, 1, v26) == 1)
    {
      sub_100003F10(v0[13], (uint64_t *)&unk_1006B1760);
LABEL_13:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v33 = (uint64_t (*)(void))v0[1];
      return v33();
    }
    goto LABEL_11;
  }
  sub_100006AB0(v0[13], v0[16], (uint64_t *)&unk_1006B1760);
  if (v24(v23, 1, v26) == 1)
  {
    uint64_t v27 = v0[18];
    uint64_t v28 = v0[16];
    sub_100003F10(v0[17], (uint64_t *)&unk_1006B1760);
    v42(v28, v27);
LABEL_11:
    sub_100003F10(v0[13], (uint64_t *)&unk_1006BEAC0);
    goto LABEL_16;
  }
  uint64_t v29 = v0[20];
  uint64_t v30 = v0[18];
  uint64_t v31 = v0[16];
  uint64_t v39 = v0[17];
  uint64_t v40 = v0[13];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[19] + 32))(v29, v23, v30);
  sub_1002B4DB8((unint64_t *)&unk_1006BEAD0, (void (*)(uint64_t))&type metadata accessor for UUID);
  char v32 = dispatch thunk of static Equatable.== infix(_:_:)();
  v42(v29, v30);
  sub_100003F10(v39, (uint64_t *)&unk_1006B1760);
  v42(v31, v30);
  sub_100003F10(v40, (uint64_t *)&unk_1006B1760);
  if (v32) {
    goto LABEL_13;
  }
LABEL_16:
  uint64_t v35 = v0[18];
  uint64_t v37 = v0[14];
  uint64_t v36 = v0[15];
  v43(v36, v0[10], v35);
  v22(v36, 0, 1, v35);
  sub_100067E48(v36, v37, (uint64_t *)&unk_1006B1760);
  swift_beginAccess();
  sub_1002BEEE4(v37, v21);
  swift_endAccess();
  uint64_t v38 = (void *)swift_task_alloc();
  v0[22] = v38;
  *uint64_t v38 = v0;
  v38[1] = sub_1002A0D9C;
  return sub_1002A1470(1);
}

uint64_t sub_1002A0D9C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1002A0F6C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10005D034(&qword_1006B4580);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  os_log_type_t v7 = (void *)swift_allocObject();
  long long v7[2] = 0;
  v7[3] = 0;
  _OWORD v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_100003F10((uint64_t)v4, &qword_1006B4580);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_1006B9380;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    void v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1002A11B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  sub_10005D034(&qword_1006B4580);
  *(void *)(v4 + 24) = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(sub_1002A1248, a4, 0);
}

uint64_t sub_1002A1248()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_currentUpdateTask;
  uint64_t v3 = v1;
  if (*(void *)(v1 + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_currentUpdateTask))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
    uint64_t v3 = v0[2];
  }
  uint64_t v4 = v0[3];
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = sub_1002B4DB8(&qword_1006B9390, (void (*)(uint64_t))type metadata accessor for FMBeaconSharingModuleDataSource);
  uint64_t v7 = (void *)swift_allocObject();
  long long v7[2] = v3;
  v7[3] = v6;
  _OWORD v7[4] = v3;
  swift_retain_n();
  *(void *)(v1 + v2) = sub_10016CC14(v4, (uint64_t)&unk_1006B9398, (uint64_t)v7);
  swift_release();
  swift_task_dealloc();
  int v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1002A13DC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1000E5A7C;
  return sub_1002A1470(0);
}

uint64_t sub_1002A1470(char a1)
{
  *(void *)(v2 + 88) = v1;
  *(unsigned char *)(v2 + 564) = a1;
  uint64_t v3 = type metadata accessor for FMItemCapabilities();
  *(void *)(v2 + 96) = v3;
  *(void *)(v2 + 104) = *(void *)(v3 - 8);
  *(void *)(v2 + 112) = swift_task_alloc();
  *(void *)(v2 + 120) = swift_task_alloc();
  uint64_t v4 = type metadata accessor for FMIPBeaconSharingLimits();
  *(void *)(v2 + 128) = v4;
  *(void *)(v2 + 136) = *(void *)(v4 - 8);
  *(void *)(v2 + 144) = swift_task_alloc();
  uint64_t v5 = sub_10005D034(&qword_1006AF020);
  *(void *)(v2 + 152) = v5;
  *(void *)(v2 + 160) = *(void *)(v5 - 8);
  *(void *)(v2 + 168) = swift_task_alloc();
  uint64_t v6 = sub_10005D034(&qword_1006AF010);
  *(void *)(v2 + 176) = v6;
  *(void *)(v2 + 184) = *(void *)(v6 - 8);
  *(void *)(v2 + 192) = swift_task_alloc();
  sub_10005D034(&qword_1006AF740);
  *(void *)(v2 + 200) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for FMFFriend();
  *(void *)(v2 + 208) = v7;
  *(void *)(v2 + 216) = *(void *)(v7 - 8);
  *(void *)(v2 + 224) = swift_task_alloc();
  type metadata accessor for FMBeaconSharingModuleShareState(0);
  *(void *)(v2 + 232) = swift_task_alloc();
  sub_10005D034((uint64_t *)&unk_1006AF820);
  *(void *)(v2 + 240) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for FMIPBeaconShare();
  *(void *)(v2 + 248) = v8;
  *(void *)(v2 + 256) = *(void *)(v8 - 8);
  *(void *)(v2 + 264) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for UUID();
  *(void *)(v2 + 272) = v9;
  *(void *)(v2 + 280) = *(void *)(v9 - 8);
  *(void *)(v2 + 288) = swift_task_alloc();
  *(void *)(v2 + 296) = swift_task_alloc();
  *(void *)(v2 + 304) = swift_task_alloc();
  *(void *)(v2 + 312) = swift_task_alloc();
  *(void *)(v2 + 320) = swift_task_alloc();
  sub_10005D034((uint64_t *)&unk_1006B1760);
  *(void *)(v2 + 328) = swift_task_alloc();
  *(void *)(v2 + 336) = swift_task_alloc();
  *(void *)(v2 + 344) = swift_task_alloc();
  sub_10005D034((uint64_t *)&unk_1006AFE30);
  *(void *)(v2 + 352) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for FMIPItem();
  *(void *)(v2 + 360) = v10;
  *(void *)(v2 + 368) = *(void *)(v10 - 8);
  *(void *)(v2 + 376) = swift_task_alloc();
  *(void *)(v2 + 384) = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(sub_1002A191C, v1, 0);
}

uint64_t sub_1002A191C()
{
  uint64_t v184 = v0;
  uint64_t v1 = *(void *)(v0 + 88);
  *(void *)(v0 + 392) = *(void *)(v1 + 112);
  swift_retain();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1002BC160(v2, v1);
  swift_release();
  swift_bridgeObjectRelease();
  v183[0] = (uint64_t)v3;
  swift_bridgeObjectRetain();
  sub_1002B5890(v183, (uint64_t (*)(void))&type metadata accessor for FMIPBeaconShare, (uint64_t (*)(uint64_t))sub_100268870, sub_1002B79E8);
  uint64_t v5 = *(void *)(v0 + 336);
  uint64_t v4 = *(void *)(v0 + 344);
  uint64_t v6 = *(void *)(v0 + 272);
  uint64_t v7 = *(void *)(v0 + 280);
  uint64_t v8 = *(void *)(v0 + 88);
  swift_bridgeObjectRelease();
  uint64_t v177 = v183[0];
  *(void *)(v0 + 400) = v183[0];
  uint64_t v9 = v8 + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_beaconIdentifier;
  swift_beginAccess();
  sub_100006AB0(v9, v4, (uint64_t *)&unk_1006B1760);
  sub_100006AB0(v4, v5, (uint64_t *)&unk_1006B1760);
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v10(v5, 1, v6) == 1)
  {
    uint64_t v11 = *(void *)(v0 + 360);
    uint64_t v12 = *(void *)(v0 + 368);
    uint64_t v13 = *(void *)(v0 + 352);
    sub_100003F10(*(void *)(v0 + 344), (uint64_t *)&unk_1006B1760);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v13, 1, 1, v11);
    goto LABEL_7;
  }
  id v170 = v10;
  uint64_t v173 = v9;
  uint64_t v14 = *(void *)(v0 + 336);
  uint64_t v15 = *(void *)(v0 + 344);
  uint64_t v16 = *(void *)(v0 + 320);
  uint64_t v18 = *(void *)(v0 + 272);
  uint64_t v17 = *(void *)(v0 + 280);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32);
  *(void *)(v0 + 408) = v19;
  *(void *)(v0 + 416) = (v17 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v19(v16, v14, v18);
  uint64_t v20 = UUID.uuidString.getter();
  uint64_t v22 = v21;
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  sub_100003F10(v15, (uint64_t *)&unk_1006B1760);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v23 = FMIPManager.items.getter();
  swift_bridgeObjectRetain();
  int v24 = sub_100140C38(v23, v20, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)v24 + 2))
  {
    (*(void (**)(void, char *, void))(*(void *)(v0 + 368) + 16))(*(void *)(v0 + 352), &v24[(*(unsigned __int8 *)(*(void *)(v0 + 368) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0 + 368) + 80)], *(void *)(v0 + 360));
    uint64_t v25 = 0;
  }
  else
  {
    uint64_t v25 = 1;
  }
  uint64_t v26 = *(void *)(v0 + 360);
  uint64_t v27 = *(void *)(v0 + 368);
  uint64_t v28 = *(void *)(v0 + 352);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v28, v25, 1, v26);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  int v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v28, 1, v26);
  uint64_t v9 = v173;
  uint64_t v10 = v170;
  if (v29 == 1)
  {
LABEL_7:
    uint64_t v30 = *(void *)(v0 + 352);
    uint64_t v31 = *(void *)(v0 + 328);
    uint64_t v32 = *(void *)(v0 + 272);
    swift_release();
    sub_100003F10(v30, (uint64_t *)&unk_1006AFE30);
    sub_100006AB0(v9, v31, (uint64_t *)&unk_1006B1760);
    if (v10(v31, 1, v32) == 1)
    {
      sub_100003F10(*(void *)(v0 + 328), (uint64_t *)&unk_1006B1760);
      if (qword_1006AE408 != -1) {
        swift_once();
      }
      uint64_t v33 = type metadata accessor for Logger();
      sub_1000606BC(v33, (uint64_t)qword_1006D2760);
      uint64_t v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v36 = 0;
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "FMBeaconSharingModuleDataSource: No beaconIdentifier when calling update", v36, 2u);
        swift_slowDealloc();
      }
    }
    else
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 280) + 32))(*(void *)(v0 + 296), *(void *)(v0 + 328), *(void *)(v0 + 272));
      if (qword_1006AE408 != -1) {
        swift_once();
      }
      uint64_t v37 = *(void *)(v0 + 288);
      uint64_t v38 = *(void *)(v0 + 296);
      uint64_t v39 = *(void *)(v0 + 272);
      uint64_t v40 = *(void *)(v0 + 280);
      uint64_t v41 = type metadata accessor for Logger();
      sub_1000606BC(v41, (uint64_t)qword_1006D2760);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v37, v38, v39);
      uint64_t v42 = Logger.logObject.getter();
      os_log_type_t v43 = static os_log_type_t.error.getter();
      BOOL v44 = os_log_type_enabled(v42, v43);
      uint64_t v45 = *(void *)(v0 + 288);
      uint64_t v46 = *(void *)(v0 + 296);
      uint64_t v48 = *(void *)(v0 + 272);
      uint64_t v47 = *(void *)(v0 + 280);
      if (v44)
      {
        uint64_t v178 = *(void *)(v0 + 296);
        uint64_t v49 = (uint8_t *)swift_slowAlloc();
        v183[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v49 = 136315138;
        uint64_t v50 = UUID.uuidString.getter();
        *(void *)(v0 + 64) = sub_1000606F4(v50, v51, v183);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
        v52(v45, v48);
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "FMBeaconSharingModuleDataSource: No item found for beacon: %s", v49, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v52(v178, v48);
      }
      else
      {

        uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
        v58(v45, v48);
        v58(v46, v48);
      }
    }
    goto LABEL_90;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 368) + 32))(*(void *)(v0 + 384), *(void *)(v0 + 352), *(void *)(v0 + 360));
  if (qword_1006AE408 != -1) {
    swift_once();
  }
  uint64_t v53 = type metadata accessor for Logger();
  *(void *)(v0 + 424) = sub_1000606BC(v53, (uint64_t)qword_1006D2760);
  uint64_t v54 = v177;
  swift_retain();
  uint64_t v55 = Logger.logObject.getter();
  os_log_type_t v56 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v55, v56))
  {
    uint64_t v57 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v57 = 134217984;
    uint64_t v54 = v177;
    *(void *)(v0 + 80) = *(void *)(v177 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v55, v56, "FMBeaconSharingModuleDataSource: Received shares updates: %ld", v57, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_release();
  }

  uint64_t v59 = FMIPItem.owner.getter();
  uint64_t v61 = v60;
  unint64_t v62 = self;
  *(void *)(v0 + 432) = v62;
  uint64_t v63 = (uint64_t)[v62 SPOwner];
  id v64 = [(id)v63 destination];

  uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v67 = v66;

  if (v59 == v65 && v61 == v67) {
    char v68 = 1;
  }
  else {
    char v68 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  *(unsigned char *)(v0 + 565) = v68 & 1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v69 = *(void *)(v54 + 16);
  *(void *)(v0 + 440) = v69;
  if (!v69)
  {
    int v171 = 0;
LABEL_57:
    uint64_t result = swift_release();
    uint64_t v100 = _swiftEmptyArrayStorage[2];
    BOOL v101 = __OFADD__(v100, v100);
    uint64_t v102 = 2 * v100;
    if (v101)
    {
      __break(1u);
    }
    else
    {
      uint64_t v180 = v102 + 1;
      if (!__OFADD__(v102, 1))
      {
        uint64_t v104 = *(void *)(v0 + 136);
        uint64_t v103 = *(void *)(v0 + 144);
        uint64_t v105 = *(void *)(v0 + 120);
        uint64_t v106 = *(void *)(v0 + 128);
        uint64_t v107 = *(void *)(v0 + 104);
        uint64_t v108 = *(void *)(v0 + 112);
        uint64_t v109 = *(void *)(v0 + 96);
        uint64_t v110 = *(void *)(*(void *)(v0 + 392) + 24) + OBJC_IVAR____TtC6FindMy17FMDevicesProvider_sharingLimits;
        swift_beginAccess();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v104 + 16))(v103, v110, v106);
        unint64_t v111 = FMIPBeaconSharingLimits.maxCircleMembers.getter();
        (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v103, v106);
        FMIPItem.capabilities.getter();
        static FMItemCapabilities.canEnableSharing.getter();
        sub_1002B4DB8((unint64_t *)&qword_1006B1128, (void (*)(uint64_t))&type metadata accessor for FMItemCapabilities);
        char v112 = dispatch thunk of SetAlgebra.isSuperset(of:)();
        uint64_t v113 = *(void (**)(uint64_t, uint64_t))(v107 + 8);
        v113(v108, v109);
        v113(v105, v109);
        BOOL v115 = v180 < 0 || v180 < v111;
        if ((v112 & 1) == 0) {
          BOOL v115 = 0;
        }
        BOOL v181 = v115;
        int v116 = *(unsigned __int8 *)(v0 + 565);
        (*(void (**)(void, void, void))(*(void *)(v0 + 368) + 16))(*(void *)(v0 + 376), *(void *)(v0 + 384), *(void *)(v0 + 360));
        uint64_t v117 = *(void *)(v0 + 368);
        uint64_t v118 = *(void *)(v0 + 376);
        if (v116 == 1)
        {
          uint64_t v120 = *(void *)(v0 + 112);
          uint64_t v119 = *(void *)(v0 + 120);
          uint64_t v121 = *(void *)(v0 + 96);
          uint64_t v175 = *(void *)(v0 + 360);
          FMIPItem.capabilities.getter();
          static FMItemCapabilities.canDisableSharing.getter();
          int v122 = dispatch thunk of SetAlgebra.isSuperset(of:)();
          v113(v120, v121);
          v113(v119, v121);
          unint64_t v123 = *(void (**)(uint64_t, uint64_t))(v117 + 8);
          v123(v118, v175);
        }
        else
        {
          unint64_t v123 = *(void (**)(uint64_t, uint64_t))(v117 + 8);
          v123(*(void *)(v0 + 376), *(void *)(v0 + 360));
          int v122 = 0;
        }
        *(void *)(v0 + 512) = v123;
        int v169 = *(unsigned __int8 *)(v0 + 564);
        uint64_t v124 = *(void *)(v0 + 88) + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_viewModel;
        uint64_t v126 = *(void *)v124;
        uint64_t v125 = *(void *)(v124 + 8);
        int v127 = *(unsigned __int8 *)(v124 + 16);
        int v128 = *(unsigned __int8 *)(v124 + 17);
        if (*(unsigned char *)(v124 + 17)) {
          int v129 = 256;
        }
        else {
          int v129 = 0;
        }
        int v130 = v129 | v127;
        int v172 = *(unsigned __int8 *)(v124 + 18);
        if (*(unsigned char *)(v124 + 18)) {
          int v131 = 0x10000;
        }
        else {
          int v131 = 0;
        }
        int v132 = v130 | v131;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v133 = sub_1002A4F5C(v126, v125, v132);
        if (v181) {
          int v134 = 256;
        }
        else {
          int v134 = 0;
        }
        unsigned int v135 = v134 & 0xFFFFFFFE | v171 & 1;
        int v176 = v122;
        int v136 = v122 & 1;
        if (v136) {
          int v137 = 0x10000;
        }
        else {
          int v137 = 0;
        }
        int v168 = v135 | v137;
        uint64_t v138 = sub_1002A4F5C((uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, v135 | v137);
        char v139 = sub_1002498B0(v133, v138);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (((v139 & 1) == 0 || ((v171 ^ v127) & 1) != 0
                              || ((v181 ^ v128) & 1) != 0
                              || ((v176 ^ v172) & 1) != 0
                              || v169)
          && (static Task<>.isCancelled.getter() & 1) == 0)
        {
          *(void *)uint64_t v124 = _swiftEmptyArrayStorage;
          *(void *)(v124 + 8) = _swiftEmptyArrayStorage;
          *(unsigned char *)(v124 + 16) = v171 & 1;
          *(unsigned char *)(v124 + 17) = v181;
          *(unsigned char *)(v124 + 18) = v136;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v141 = Logger.logObject.getter();
          os_log_type_t v142 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v141, v142))
          {
            unint64_t v143 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)unint64_t v143 = 134217984;
            uint64_t v144 = *(void *)(sub_1002A4F5C((uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, v168)
                             + 16);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            *(void *)(v0 + 72) = v144;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v141, v142, "FMBeaconSharingModuleDataSource: Received new rows: %ld", v143, 0xCu);
            swift_slowDealloc();
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          uint64_t v145 = *(void *)(v0 + 88);
          id v146 = *(int **)(v145 + 128);
          *(void *)(v0 + 520) = v146;
          if (v146)
          {
            *(void *)(v0 + 528) = *(void *)(v145 + 136);
            uint64_t v147 = *(void *)v124;
            *(void *)(v0 + 536) = *(void *)v124;
            uint64_t v148 = *(void *)(v124 + 8);
            *(void *)(v0 + 544) = v148;
            int v149 = *(unsigned __int8 *)(v124 + 16);
            int v150 = *(unsigned __int8 *)(v124 + 17);
            int v151 = *(unsigned __int8 *)(v124 + 18);
            sub_1000B7838((uint64_t)v146);
            uint64_t v182 = (int *)((char *)v146 + *v146);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v152 = (void *)swift_task_alloc();
            *(void *)(v0 + 552) = v152;
            if (v150) {
              int v153 = 256;
            }
            else {
              int v153 = 0;
            }
            int v154 = v153 | v149;
            if (v151) {
              int v155 = 0x10000;
            }
            else {
              int v155 = 0;
            }
            *id v152 = v0;
            v152[1] = sub_1002A4C40;
            return ((uint64_t (*)(uint64_t, uint64_t, void))v182)(v147, v148, v154 | v155);
          }
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
        (*(void (**)(void, void))(v0 + 512))(*(void *)(v0 + 384), *(void *)(v0 + 360));
LABEL_90:
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v140 = *(uint64_t (**)(void))(v0 + 8);
        return v140();
      }
    }
    __break(1u);
    return result;
  }
  int v171 = 0;
  unint64_t v70 = 0;
  *(_DWORD *)(v0 + 560) = *(_DWORD *)(*(void *)(v0 + 256) + 80);
  while (1)
  {
    *(void *)(v0 + 448) = _swiftEmptyArrayStorage;
    *(void *)(v0 + 456) = _swiftEmptyArrayStorage;
    uint64_t v71 = *(void *)(v0 + 400);
    if (v70 >= *(void *)(v71 + 16)) {
      goto LABEL_112;
    }
    uint64_t v72 = *(void *)(v0 + 256);
    unint64_t v73 = v70 + 1;
    id v174 = *(void (**)(void, unint64_t, void))(v72 + 16);
    uint64_t v179 = *(void *)(v72 + 72);
    v174(*(void *)(v0 + 264), v71 + ((*(unsigned __int8 *)(v0 + 560) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 560)) + v179 * v70, *(void *)(v0 + 248));
    if ((FMIPBeaconShare.otherShareeShouldBeHidden.getter() & 1) == 0)
    {
      uint64_t v74 = *(void **)(v0 + 432);
      uint64_t v75 = FMIPBeaconShare.shareeHandle.getter();
      uint64_t v77 = v76;
      uint64_t v63 = (uint64_t)[v74 SPOwner];
      id v78 = [(id)v63 destination];

      uint64_t v79 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v81 = v80;

      BOOL v82 = v75 == v79 && v77 == v81;
      if (v82)
      {
        swift_bridgeObjectRelease_n();
LABEL_38:
        uint64_t v83 = *(void *)(v0 + 440);
        uint64_t v54 = *(void *)(*(void *)(v0 + 256) + 8);
        ((void (*)(void, void))v54)(*(void *)(v0 + 264), *(void *)(v0 + 248));
        if (v73 == v83)
        {
          int v171 = 1;
          goto LABEL_57;
        }
        uint64_t v84 = v179 * v73;
        unint64_t v73 = v70 + 2;
        while (1)
        {
          uint64_t v86 = *(void *)(v0 + 400);
          if (v73 - 1 >= *(void *)(v86 + 16)) {
            break;
          }
          v174(*(void *)(v0 + 264), v86 + v84 + ((*(unsigned __int8 *)(v0 + 560) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 560)), *(void *)(v0 + 248));
          if (FMIPBeaconShare.otherShareeShouldBeHidden.getter())
          {
            int v171 = 1;
            goto LABEL_52;
          }
          uint64_t v87 = *(void **)(v0 + 432);
          uint64_t v88 = FMIPBeaconShare.shareeHandle.getter();
          uint64_t v90 = v89;
          uint64_t v63 = (uint64_t)[v87 SPOwner];
          id v91 = [(id)v63 destination];

          uint64_t v92 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v94 = v93;

          if (v88 == v92 && v90 == v94)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            uint64_t v63 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v63 & 1) == 0)
            {
              int v171 = 1;
              goto LABEL_50;
            }
          }
          uint64_t v85 = *(void *)(v0 + 440);
          ((void (*)(void, void))v54)(*(void *)(v0 + 264), *(void *)(v0 + 248));
          v84 += v179;
          BOOL v82 = v73++ == v85;
          if (v82)
          {
            int v171 = 1;
            goto LABEL_57;
          }
        }
LABEL_112:
        __break(1u);
        goto LABEL_113;
      }
      uint64_t v63 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v63) {
        goto LABEL_38;
      }
LABEL_50:
      *(unsigned char *)(v0 + 566) = v171 & 1;
      *(void *)(v0 + 464) = v73;
      uint64_t v63 = *(void *)(v0 + 240);
      FMIPBeaconShare.delegatedSharesURL.getter();
      uint64_t v96 = type metadata accessor for URL();
      int v97 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 48))(v63, 1, v96);
      sub_100003F10(v63, (uint64_t *)&unk_1006AF820);
      if (v97 == 1) {
        break;
      }
    }
    uint64_t v54 = *(void *)(*(void *)(v0 + 256) + 8);
LABEL_52:
    uint64_t v98 = *(void *)(v0 + 440);
    ((void (*)(void, void))v54)(*(void *)(v0 + 264), *(void *)(v0 + 248));
    unint64_t v70 = v73;
    if (v73 == v98) {
      goto LABEL_57;
    }
  }
  uint64_t v63 = FMIPBeaconShare.shareeHandle.getter();
  uint64_t v54 = v156;
  *(void *)(v0 + 472) = v63;
  *(void *)(v0 + 480) = v156;
  uint64_t v157 = FMIPBeaconShare.shareeHandle.getter();
  uint64_t v159 = v158;
  if (v157 == FMIPBeaconShare.ownerHandle.getter() && v159 == v160)
  {
    swift_bridgeObjectRelease_n();
LABEL_111:
    uint64_t v162 = *(void *)(v0 + 232);
    uint64_t v163 = sub_10005D034(&qword_1006B9058);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v163 - 8) + 56))(v162, 1, 1, v163);
    goto LABEL_114;
  }
  char v161 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v161) {
    goto LABEL_111;
  }
LABEL_113:
  uint64_t v164 = *(void *)(v0 + 232);
  FMIPBeaconShare.state.getter();
  uint64_t v165 = sub_10005D034(&qword_1006B9058);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v165 - 8) + 56))(v164, 0, 1, v165);
LABEL_114:
  Class v166 = (void *)swift_task_alloc();
  *(void *)(v0 + 488) = v166;
  void *v166 = v0;
  v166[1] = sub_1002A2D88;
  uint64_t v167 = *(void *)(v0 + 200);
  return sub_1002A57D8(v167, v63, v54);
}

uint64_t sub_1002A2D88()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 88);
  swift_task_dealloc();
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(sub_1002A2E98, v1, 0);
}

uint64_t sub_1002A2E98()
{
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 200);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100003F10(v3, &qword_1006AF740);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 496) = v4;
    void *v4 = v0;
    v4[1] = sub_1002A3D70;
    uint64_t v5 = *(void *)(v0 + 472);
    uint64_t v6 = *(void *)(v0 + 88);
    v4[3] = *(void *)(v0 + 480);
    v4[4] = v6;
    v4[2] = v5;
    uint64_t v7 = (uint64_t)sub_1002A6188;
    return ((uint64_t (*)(uint64_t))_swift_task_switch)(v7);
  }
  uint64_t v8 = *(void *)(v0 + 312);
  uint64_t v9 = *(void *)(v0 + 272);
  uint64_t v10 = *(void *)(v0 + 224);
  int v129 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 408);
  uint64_t v131 = *(void *)(v0 + 232);
  uint64_t v11 = *(void *)(v0 + 192);
  uint64_t v12 = *(void *)(v0 + 176);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v10, v3, v1);
  FMIPBeaconShare.identifier.getter();
  uint64_t v13 = v11 + *(int *)(v12 + 48);
  uint64_t v14 = v11 + *(int *)(v12 + 64);
  v129(v11, v8, v9);
  sub_1002BCBDC(v131, v13, type metadata accessor for FMBeaconSharingModuleShareState);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v14, v10, v1);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v16 = *(void *)(v0 + 456);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v16 = sub_10007D810(0, *(void *)(v16 + 16) + 1, 1, *(void *)(v0 + 456));
  }
  unint64_t v18 = *(void *)(v16 + 16);
  unint64_t v17 = *(void *)(v16 + 24);
  if (v18 >= v17 >> 1) {
    unint64_t v16 = sub_10007D810(v17 > 1, v18 + 1, 1, v16);
  }
  uint64_t v20 = *(void *)(v0 + 216);
  uint64_t v19 = *(void *)(v0 + 224);
  uint64_t v21 = *(void *)(v0 + 208);
  uint64_t v23 = *(void *)(v0 + 184);
  uint64_t v22 = *(void *)(v0 + 192);
  *(void *)(v16 + 16) = v18 + 1;
  sub_100067E48(v22, v16+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v18, &qword_1006AF010);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  uint64_t v24 = *(void *)(v0 + 448);
  sub_1002BCB14(*(void *)(v0 + 232), type metadata accessor for FMBeaconSharingModuleShareState);
  int v130 = *(unsigned __int8 *)(v0 + 566);
  unint64_t v25 = *(void *)(v0 + 464);
  uint64_t v26 = *(void *)(v0 + 440);
  (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
  uint64_t v132 = v24;
  uint64_t v133 = v16;
  if (v25 == v26)
  {
LABEL_39:
    uint64_t v7 = swift_release();
    uint64_t v63 = *(void *)(v16 + 16);
    uint64_t v64 = *(void *)(v24 + 16);
    BOOL v65 = __OFADD__(v63, v64);
    uint64_t v66 = v63 + v64;
    if (v65)
    {
      __break(1u);
    }
    else
    {
      BOOL v65 = __OFADD__(v66, 1);
      uint64_t v67 = v66 + 1;
      if (!v65)
      {
        uint64_t v135 = v67;
        uint64_t v69 = *(void *)(v0 + 136);
        uint64_t v68 = *(void *)(v0 + 144);
        uint64_t v70 = *(void *)(v0 + 120);
        uint64_t v71 = *(void *)(v0 + 128);
        uint64_t v72 = *(void *)(v0 + 104);
        uint64_t v73 = *(void *)(v0 + 112);
        uint64_t v74 = *(void *)(v0 + 96);
        uint64_t v75 = *(void *)(*(void *)(v0 + 392) + 24) + OBJC_IVAR____TtC6FindMy17FMDevicesProvider_sharingLimits;
        swift_beginAccess();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16))(v68, v75, v71);
        unint64_t v76 = FMIPBeaconSharingLimits.maxCircleMembers.getter();
        (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v68, v71);
        FMIPItem.capabilities.getter();
        static FMItemCapabilities.canEnableSharing.getter();
        sub_1002B4DB8((unint64_t *)&qword_1006B1128, (void (*)(uint64_t))&type metadata accessor for FMItemCapabilities);
        char v77 = dispatch thunk of SetAlgebra.isSuperset(of:)();
        id v78 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
        v78(v73, v74);
        v78(v70, v74);
        BOOL v80 = v135 < 0 || v135 < v76;
        if ((v77 & 1) == 0) {
          BOOL v80 = 0;
        }
        BOOL v136 = v80;
        int v81 = *(unsigned __int8 *)(v0 + 565);
        (*(void (**)(void, void, void))(*(void *)(v0 + 368) + 16))(*(void *)(v0 + 376), *(void *)(v0 + 384), *(void *)(v0 + 360));
        uint64_t v83 = *(void *)(v0 + 368);
        uint64_t v82 = *(void *)(v0 + 376);
        if (v81 == 1)
        {
          uint64_t v85 = *(void *)(v0 + 112);
          uint64_t v84 = *(void *)(v0 + 120);
          uint64_t v86 = *(void *)(v0 + 96);
          uint64_t v125 = *(void *)(v0 + 360);
          FMIPItem.capabilities.getter();
          static FMItemCapabilities.canDisableSharing.getter();
          int v127 = dispatch thunk of SetAlgebra.isSuperset(of:)();
          v78(v85, v86);
          v78(v84, v86);
          uint64_t v87 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
          v87(v82, v125);
        }
        else
        {
          uint64_t v87 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
          v87(*(void *)(v0 + 376), *(void *)(v0 + 360));
          int v127 = 0;
        }
        *(void *)(v0 + 512) = v87;
        int v126 = *(unsigned __int8 *)(v0 + 564);
        uint64_t v88 = *(void *)(v0 + 88) + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_viewModel;
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *(void *)(v88 + 8);
        int v91 = *(unsigned __int8 *)(v88 + 16);
        int v92 = *(unsigned __int8 *)(v88 + 17);
        if (*(unsigned char *)(v88 + 17)) {
          int v93 = 256;
        }
        else {
          int v93 = 0;
        }
        int v94 = v93 | v91;
        int v128 = *(unsigned __int8 *)(v88 + 18);
        if (*(unsigned char *)(v88 + 18)) {
          int v95 = 0x10000;
        }
        else {
          int v95 = 0;
        }
        int v96 = v94 | v95;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v97 = sub_1002A4F5C(v90, v89, v96);
        if (v136) {
          int v98 = 256;
        }
        else {
          int v98 = 0;
        }
        unsigned int v99 = v98 & 0xFFFFFFFE | v130 & 1;
        if (v127) {
          int v100 = 0x10000;
        }
        else {
          int v100 = 0;
        }
        int v124 = v99 | v100;
        uint64_t v101 = sub_1002A4F5C(v133, v132, v99 | v100);
        char v102 = sub_1002498B0(v97, v101);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (((v102 & 1) == 0 || ((v130 ^ v91) & 1) != 0 || ((v136 ^ v92) & 1) != 0 || ((v127 ^ v128) & 1) != 0 || v126)
          && (static Task<>.isCancelled.getter() & 1) == 0)
        {
          *(void *)uint64_t v88 = v133;
          *(void *)(v88 + 8) = v132;
          *(unsigned char *)(v88 + 16) = v130 & 1;
          *(unsigned char *)(v88 + 17) = v136;
          *(unsigned char *)(v88 + 18) = v127 & 1;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v104 = Logger.logObject.getter();
          os_log_type_t v105 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v104, v105))
          {
            uint64_t v106 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v106 = 134217984;
            uint64_t v107 = *(void *)(sub_1002A4F5C(v133, v132, v124) + 16);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(void *)(v0 + 72) = v107;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v104, v105, "FMBeaconSharingModuleDataSource: Received new rows: %ld", v106, 0xCu);
            swift_slowDealloc();
          }
          else
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
          }

          uint64_t v108 = *(void *)(v0 + 88);
          uint64_t v109 = *(int **)(v108 + 128);
          *(void *)(v0 + 520) = v109;
          if (v109)
          {
            *(void *)(v0 + 528) = *(void *)(v108 + 136);
            *(void *)(v0 + 536) = *(void *)v88;
            *(void *)(v0 + 544) = *(void *)(v88 + 8);
            sub_1000B7838((uint64_t)v109);
            int v137 = (char *)v109 + *v109;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v110 = (void *)swift_task_alloc();
            *(void *)(v0 + 552) = v110;
            *uint64_t v110 = v0;
            v110[1] = sub_1002A4C40;
            __asm { BRAA            X3, X16 }
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        (*(void (**)(void, void))(v0 + 512))(*(void *)(v0 + 384), *(void *)(v0 + 360));
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v103 = *(void *)(v0 + 8);
        __asm { BRAA            X1, X16 }
      }
    }
    __break(1u);
    return ((uint64_t (*)(uint64_t))_swift_task_switch)(v7);
  }
  while (1)
  {
    *(void *)(v0 + 448) = v24;
    *(void *)(v0 + 456) = v16;
    uint64_t v27 = *(void *)(v0 + 400);
    if (v25 >= *(void *)(v27 + 16)) {
      goto LABEL_86;
    }
    uint64_t v28 = *(void *)(v0 + 256);
    unint64_t v29 = v25 + 1;
    uint64_t v30 = *(void *)(v28 + 72);
    int v134 = *(void (**)(void, unint64_t, void))(v28 + 16);
    v134(*(void *)(v0 + 264), v27 + ((*(unsigned __int8 *)(v0 + 560) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 560)) + v30 * v25, *(void *)(v0 + 248));
    if (FMIPBeaconShare.otherShareeShouldBeHidden.getter())
    {
      unint64_t v16 = v133;
      goto LABEL_33;
    }
    uint64_t v31 = *(void **)(v0 + 432);
    uint64_t v32 = FMIPBeaconShare.shareeHandle.getter();
    uint64_t v34 = v33;
    id v35 = [v31 SPOwner];
    id v36 = [v35 destination];

    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v39 = v38;

    BOOL v40 = v32 == v37 && v34 == v39;
    if (v40)
    {
      swift_bridgeObjectRelease_n();
LABEL_20:
      uint64_t v42 = *(void *)(v0 + 440);
      os_log_type_t v43 = *(void (**)(void, void))(*(void *)(v0 + 256) + 8);
      v43(*(void *)(v0 + 264), *(void *)(v0 + 248));
      if (v29 == v42)
      {
LABEL_38:
        int v130 = 1;
        uint64_t v24 = v132;
        unint64_t v16 = v133;
        goto LABEL_39;
      }
      uint64_t v24 = v30 * v29;
      v25 += 2;
      while (1)
      {
        uint64_t v45 = *(void *)(v0 + 400);
        if (v25 - 1 >= *(void *)(v45 + 16)) {
          break;
        }
        v134(*(void *)(v0 + 264), v45 + v24 + ((*(unsigned __int8 *)(v0 + 560) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 560)), *(void *)(v0 + 248));
        if (FMIPBeaconShare.otherShareeShouldBeHidden.getter())
        {
          uint64_t v62 = *(void *)(v0 + 440);
          v43(*(void *)(v0 + 264), *(void *)(v0 + 248));
          int v130 = 1;
          BOOL v61 = v62 == v25;
          unint64_t v16 = v133;
          goto LABEL_34;
        }
        uint64_t v46 = *(void **)(v0 + 432);
        uint64_t v47 = FMIPBeaconShare.shareeHandle.getter();
        uint64_t v49 = v48;
        id v50 = [v46 SPOwner];
        id v51 = [v50 destination];

        uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v54 = v53;

        if (v47 == v52 && v49 == v54)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v56 & 1) == 0)
          {
            int v130 = 1;
            unint64_t v29 = v25;
            goto LABEL_32;
          }
        }
        uint64_t v44 = *(void *)(v0 + 440);
        v43(*(void *)(v0 + 264), *(void *)(v0 + 248));
        v24 += v30;
        BOOL v40 = v25++ == v44;
        if (v40) {
          goto LABEL_38;
        }
      }
LABEL_86:
      __break(1u);
      goto LABEL_87;
    }
    char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v41) {
      goto LABEL_20;
    }
LABEL_32:
    *(unsigned char *)(v0 + 566) = v130 & 1;
    *(void *)(v0 + 464) = v29;
    uint64_t v57 = *(void *)(v0 + 240);
    FMIPBeaconShare.delegatedSharesURL.getter();
    uint64_t v58 = type metadata accessor for URL();
    int v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 48))(v57, 1, v58);
    sub_100003F10(v57, (uint64_t *)&unk_1006AF820);
    unint64_t v16 = v133;
    if (v59 == 1) {
      break;
    }
LABEL_33:
    uint64_t v60 = *(void *)(v0 + 440);
    (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    unint64_t v25 = v29;
    BOOL v61 = v29 == v60;
LABEL_34:
    uint64_t v24 = v132;
    if (v61) {
      goto LABEL_39;
    }
  }
  uint64_t v24 = FMIPBeaconShare.shareeHandle.getter();
  unint64_t v25 = v111;
  *(void *)(v0 + 472) = v24;
  *(void *)(v0 + 480) = v111;
  uint64_t v112 = FMIPBeaconShare.shareeHandle.getter();
  uint64_t v114 = v113;
  if (v112 == FMIPBeaconShare.ownerHandle.getter() && v114 == v115)
  {
    swift_bridgeObjectRelease_n();
LABEL_85:
    uint64_t v117 = *(void *)(v0 + 232);
    uint64_t v118 = sub_10005D034(&qword_1006B9058);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 56))(v117, 1, 1, v118);
    goto LABEL_88;
  }
  char v116 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v116) {
    goto LABEL_85;
  }
LABEL_87:
  uint64_t v119 = *(void *)(v0 + 232);
  FMIPBeaconShare.state.getter();
  uint64_t v120 = sub_10005D034(&qword_1006B9058);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v119, 0, 1, v120);
LABEL_88:
  uint64_t v121 = (void *)swift_task_alloc();
  *(void *)(v0 + 488) = v121;
  *uint64_t v121 = v0;
  v121[1] = sub_1002A2D88;
  uint64_t v122 = *(void *)(v0 + 200);
  return sub_1002A57D8(v122, v24, v25);
}

uint64_t sub_1002A3D70(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 88);
  *(void *)(*(void *)v1 + 504) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(sub_1002A3EA4, v2, 0);
}

uint64_t sub_1002A3EA4()
{
  uint64_t v1 = *(void **)(v0 + 504);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 408);
  uint64_t v3 = *(void *)(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 272);
  uint64_t v5 = *(void *)(v0 + 232);
  uint64_t v6 = *(void *)(v0 + 168);
  uint64_t v7 = *(void *)(v0 + 152);
  FMIPBeaconShare.identifier.getter();
  uint64_t v8 = v6 + *(int *)(v7 + 48);
  uint64_t v9 = *(int *)(v7 + 64);
  v2(v6, v3, v4);
  sub_1002BCBDC(v5, v8, type metadata accessor for FMBeaconSharingModuleShareState);
  *(void *)(v6 + v9) = v1;
  id v10 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v12 = *(void *)(v0 + 448);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v12 = sub_10007D7FC(0, *(void *)(v12 + 16) + 1, 1, *(void *)(v0 + 448));
  }
  unint64_t v14 = *(void *)(v12 + 16);
  unint64_t v13 = *(void *)(v12 + 24);
  if (v14 >= v13 >> 1) {
    unint64_t v12 = sub_10007D7FC(v13 > 1, v14 + 1, 1, v12);
  }
  uint64_t v15 = *(void **)(v0 + 504);
  uint64_t v17 = *(void *)(v0 + 160);
  uint64_t v16 = *(void *)(v0 + 168);
  *(void *)(v12 + 16) = v14 + 1;
  sub_100067E48(v16, v12+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v14, &qword_1006AF020);

  uint64_t v18 = *(void *)(v0 + 456);
  sub_1002BCB14(*(void *)(v0 + 232), type metadata accessor for FMBeaconSharingModuleShareState);
  int v131 = *(unsigned __int8 *)(v0 + 566);
  unint64_t v19 = *(void *)(v0 + 464);
  uint64_t v20 = *(void *)(v0 + 440);
  (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
  uint64_t v132 = v18;
  uint64_t v133 = v12;
  if (v19 == v20)
  {
LABEL_35:
    uint64_t result = swift_release();
    uint64_t v58 = *(void *)(v18 + 16);
    uint64_t v59 = *(void *)(v12 + 16);
    BOOL v60 = __OFADD__(v58, v59);
    uint64_t v61 = v58 + v59;
    if (v60)
    {
      __break(1u);
    }
    else
    {
      BOOL v60 = __OFADD__(v61, 1);
      uint64_t v62 = v61 + 1;
      if (!v60)
      {
        uint64_t v135 = v62;
        uint64_t v64 = *(void *)(v0 + 136);
        uint64_t v63 = *(void *)(v0 + 144);
        uint64_t v65 = *(void *)(v0 + 120);
        uint64_t v66 = *(void *)(v0 + 128);
        uint64_t v67 = *(void *)(v0 + 104);
        uint64_t v68 = *(void *)(v0 + 112);
        uint64_t v69 = *(void *)(v0 + 96);
        uint64_t v70 = *(void *)(*(void *)(v0 + 392) + 24) + OBJC_IVAR____TtC6FindMy17FMDevicesProvider_sharingLimits;
        swift_beginAccess();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16))(v63, v70, v66);
        unint64_t v71 = FMIPBeaconSharingLimits.maxCircleMembers.getter();
        (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v66);
        FMIPItem.capabilities.getter();
        static FMItemCapabilities.canEnableSharing.getter();
        sub_1002B4DB8((unint64_t *)&qword_1006B1128, (void (*)(uint64_t))&type metadata accessor for FMItemCapabilities);
        char v72 = dispatch thunk of SetAlgebra.isSuperset(of:)();
        uint64_t v73 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
        v73(v68, v69);
        v73(v65, v69);
        BOOL v75 = v135 < 0 || v135 < v71;
        if ((v72 & 1) == 0) {
          BOOL v75 = 0;
        }
        BOOL v136 = v75;
        int v76 = *(unsigned __int8 *)(v0 + 565);
        (*(void (**)(void, void, void))(*(void *)(v0 + 368) + 16))(*(void *)(v0 + 376), *(void *)(v0 + 384), *(void *)(v0 + 360));
        uint64_t v78 = *(void *)(v0 + 368);
        uint64_t v77 = *(void *)(v0 + 376);
        if (v76 == 1)
        {
          uint64_t v80 = *(void *)(v0 + 112);
          uint64_t v79 = *(void *)(v0 + 120);
          uint64_t v81 = *(void *)(v0 + 96);
          uint64_t v127 = *(void *)(v0 + 360);
          FMIPItem.capabilities.getter();
          static FMItemCapabilities.canDisableSharing.getter();
          int v129 = dispatch thunk of SetAlgebra.isSuperset(of:)();
          v73(v80, v81);
          v73(v79, v81);
          uint64_t v82 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
          v82(v77, v127);
        }
        else
        {
          uint64_t v82 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
          v82(*(void *)(v0 + 376), *(void *)(v0 + 360));
          int v129 = 0;
        }
        *(void *)(v0 + 512) = v82;
        int v128 = *(unsigned __int8 *)(v0 + 564);
        uint64_t v83 = *(void *)(v0 + 88) + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_viewModel;
        uint64_t v85 = *(void *)v83;
        uint64_t v84 = *(void *)(v83 + 8);
        int v86 = *(unsigned __int8 *)(v83 + 16);
        int v87 = *(unsigned __int8 *)(v83 + 17);
        if (*(unsigned char *)(v83 + 17)) {
          int v88 = 256;
        }
        else {
          int v88 = 0;
        }
        int v89 = v88 | v86;
        int v130 = *(unsigned __int8 *)(v83 + 18);
        if (*(unsigned char *)(v83 + 18)) {
          int v90 = 0x10000;
        }
        else {
          int v90 = 0;
        }
        int v91 = v89 | v90;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v92 = sub_1002A4F5C(v85, v84, v91);
        if (v136) {
          int v93 = 256;
        }
        else {
          int v93 = 0;
        }
        unsigned int v94 = v93 & 0xFFFFFFFE | v131 & 1;
        if (v129) {
          int v95 = 0x10000;
        }
        else {
          int v95 = 0;
        }
        int v126 = v94 | v95;
        uint64_t v96 = sub_1002A4F5C(v132, v133, v94 | v95);
        char v97 = sub_1002498B0(v92, v96);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (((v97 & 1) == 0 || ((v131 ^ v86) & 1) != 0 || ((v136 ^ v87) & 1) != 0 || ((v129 ^ v130) & 1) != 0 || v128)
          && (static Task<>.isCancelled.getter() & 1) == 0)
        {
          *(void *)uint64_t v83 = v132;
          *(void *)(v83 + 8) = v133;
          *(unsigned char *)(v83 + 16) = v131 & 1;
          *(unsigned char *)(v83 + 17) = v136;
          *(unsigned char *)(v83 + 18) = v129 & 1;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unsigned int v99 = Logger.logObject.getter();
          os_log_type_t v100 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v99, v100))
          {
            uint64_t v101 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v101 = 134217984;
            uint64_t v102 = *(void *)(sub_1002A4F5C(v132, v133, v126) + 16);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(void *)(v0 + 72) = v102;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v99, v100, "FMBeaconSharingModuleDataSource: Received new rows: %ld", v101, 0xCu);
            swift_slowDealloc();
          }
          else
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
          }

          uint64_t v103 = *(void *)(v0 + 88);
          uint64_t v104 = *(int **)(v103 + 128);
          *(void *)(v0 + 520) = v104;
          if (v104)
          {
            *(void *)(v0 + 528) = *(void *)(v103 + 136);
            uint64_t v105 = *(void *)v83;
            *(void *)(v0 + 536) = *(void *)v83;
            uint64_t v106 = *(void *)(v83 + 8);
            *(void *)(v0 + 544) = v106;
            int v107 = *(unsigned __int8 *)(v83 + 16);
            int v108 = *(unsigned __int8 *)(v83 + 17);
            int v109 = *(unsigned __int8 *)(v83 + 18);
            sub_1000B7838((uint64_t)v104);
            int v137 = (int *)((char *)v104 + *v104);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v110 = (void *)swift_task_alloc();
            *(void *)(v0 + 552) = v110;
            if (v108) {
              int v111 = 256;
            }
            else {
              int v111 = 0;
            }
            int v112 = v111 | v107;
            if (v109) {
              int v113 = 0x10000;
            }
            else {
              int v113 = 0;
            }
            *uint64_t v110 = v0;
            v110[1] = sub_1002A4C40;
            return ((uint64_t (*)(uint64_t, uint64_t, void))v137)(v105, v106, v112 | v113);
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        (*(void (**)(void, void))(v0 + 512))(*(void *)(v0 + 384), *(void *)(v0 + 360));
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        int v98 = *(uint64_t (**)(void))(v0 + 8);
        return v98();
      }
    }
    __break(1u);
    return result;
  }
  while (1)
  {
    *(void *)(v0 + 448) = v12;
    *(void *)(v0 + 456) = v18;
    uint64_t v21 = *(void *)(v0 + 400);
    if (v19 >= *(void *)(v21 + 16)) {
      goto LABEL_88;
    }
    uint64_t v22 = *(void *)(v0 + 256);
    unint64_t v23 = v19 + 1;
    uint64_t v24 = *(void *)(v22 + 72);
    int v134 = *(void (**)(void, unint64_t, void))(v22 + 16);
    v134(*(void *)(v0 + 264), v21 + ((*(unsigned __int8 *)(v0 + 560) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 560)) + v24 * v19, *(void *)(v0 + 248));
    if (FMIPBeaconShare.otherShareeShouldBeHidden.getter())
    {
      unint64_t v12 = v133;
      goto LABEL_29;
    }
    unint64_t v25 = *(void **)(v0 + 432);
    uint64_t v26 = FMIPBeaconShare.shareeHandle.getter();
    uint64_t v28 = v27;
    id v29 = [v25 SPOwner];
    id v30 = [v29 destination];

    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v33 = v32;

    BOOL v34 = v26 == v31 && v28 == v33;
    if (v34)
    {
      swift_bridgeObjectRelease_n();
LABEL_16:
      uint64_t v36 = *(void *)(v0 + 440);
      uint64_t v37 = *(void (**)(void, void))(*(void *)(v0 + 256) + 8);
      v37(*(void *)(v0 + 264), *(void *)(v0 + 248));
      if (v23 == v36)
      {
LABEL_34:
        int v131 = 1;
        uint64_t v18 = v132;
        unint64_t v12 = v133;
        goto LABEL_35;
      }
      uint64_t v18 = v24 * v23;
      v19 += 2;
      while (1)
      {
        uint64_t v39 = *(void *)(v0 + 400);
        if (v19 - 1 >= *(void *)(v39 + 16)) {
          break;
        }
        v134(*(void *)(v0 + 264), v39 + v18 + ((*(unsigned __int8 *)(v0 + 560) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 560)), *(void *)(v0 + 248));
        if (FMIPBeaconShare.otherShareeShouldBeHidden.getter())
        {
          uint64_t v56 = *(void *)(v0 + 440);
          v37(*(void *)(v0 + 264), *(void *)(v0 + 248));
          int v131 = 1;
          BOOL v55 = v56 == v19;
          unint64_t v12 = v133;
          goto LABEL_30;
        }
        BOOL v40 = *(void **)(v0 + 432);
        uint64_t v41 = FMIPBeaconShare.shareeHandle.getter();
        uint64_t v43 = v42;
        id v44 = [v40 SPOwner];
        id v45 = [v44 destination];

        uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v48 = v47;

        if (v41 == v46 && v43 == v48)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v50 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v50 & 1) == 0)
          {
            int v131 = 1;
            unint64_t v23 = v19;
            goto LABEL_28;
          }
        }
        uint64_t v38 = *(void *)(v0 + 440);
        v37(*(void *)(v0 + 264), *(void *)(v0 + 248));
        v18 += v24;
        BOOL v34 = v19++ == v38;
        if (v34) {
          goto LABEL_34;
        }
      }
LABEL_88:
      __break(1u);
      goto LABEL_89;
    }
    char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v35) {
      goto LABEL_16;
    }
LABEL_28:
    *(unsigned char *)(v0 + 566) = v131 & 1;
    *(void *)(v0 + 464) = v23;
    uint64_t v51 = *(void *)(v0 + 240);
    FMIPBeaconShare.delegatedSharesURL.getter();
    uint64_t v52 = type metadata accessor for URL();
    int v53 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v51, 1, v52);
    sub_100003F10(v51, (uint64_t *)&unk_1006AF820);
    unint64_t v12 = v133;
    if (v53 == 1) {
      break;
    }
LABEL_29:
    uint64_t v54 = *(void *)(v0 + 440);
    (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    unint64_t v19 = v23;
    BOOL v55 = v23 == v54;
LABEL_30:
    uint64_t v18 = v132;
    if (v55) {
      goto LABEL_35;
    }
  }
  uint64_t v18 = FMIPBeaconShare.shareeHandle.getter();
  unint64_t v19 = v114;
  *(void *)(v0 + 472) = v18;
  *(void *)(v0 + 480) = v114;
  uint64_t v115 = FMIPBeaconShare.shareeHandle.getter();
  uint64_t v117 = v116;
  if (v115 == FMIPBeaconShare.ownerHandle.getter() && v117 == v118)
  {
    swift_bridgeObjectRelease_n();
LABEL_87:
    uint64_t v120 = *(void *)(v0 + 232);
    uint64_t v121 = sub_10005D034(&qword_1006B9058);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 56))(v120, 1, 1, v121);
    goto LABEL_90;
  }
  char v119 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v119) {
    goto LABEL_87;
  }
LABEL_89:
  uint64_t v122 = *(void *)(v0 + 232);
  FMIPBeaconShare.state.getter();
  uint64_t v123 = sub_10005D034(&qword_1006B9058);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v123 - 8) + 56))(v122, 0, 1, v123);
LABEL_90:
  int v124 = (void *)swift_task_alloc();
  *(void *)(v0 + 488) = v124;
  *int v124 = v0;
  v124[1] = sub_1002A2D88;
  uint64_t v125 = *(void *)(v0 + 200);
  return sub_1002A57D8(v125, v18, v19);
}

uint64_t sub_1002A4C40()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 520);
  uint64_t v2 = *(void *)(*(void *)v0 + 88);
  swift_task_dealloc();
  sub_100036B90(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(sub_1002A4DCC, v2, 0);
}

uint64_t sub_1002A4DCC()
{
  (*(void (**)(void, void))(v0 + 512))(*(void *)(v0 + 384), *(void *)(v0 + 360));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002A4F5C(uint64_t a1, uint64_t a2, int a3)
{
  int v57 = a3;
  uint64_t v5 = sub_10005D034(&qword_1006AF020);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  uint64_t v63 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v58 = (uint64_t)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v56 = (uint64_t)v53 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (void *)((char *)v53 - v15);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v53 - v17;
  uint64_t v19 = sub_10005D034(&qword_1006AF010);
  uint64_t v20 = __chkstk_darwin(v19);
  unint64_t v23 = (char *)v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(void *)(a1 + 16);
  uint64_t v59 = a2;
  if (v24)
  {
    uint64_t v54 = v5;
    uint64_t v55 = v6;
    uint64_t v62 = &v23[*(int *)(v20 + 48)];
    uint64_t v61 = &v23[*(int *)(v20 + 64)];
    uint64_t v25 = a1 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    uint64_t v60 = *(void *)(v21 + 72);
    v53[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v26 = _swiftEmptyArrayStorage;
    do
    {
      sub_100006AB0(v25, (uint64_t)v23, &qword_1006AF010);
      uint64_t v27 = sub_10005D034(&qword_1006B9050);
      uint64_t v28 = (uint64_t)&v18[*(int *)(v27 + 48)];
      id v29 = &v18[*(int *)(v27 + 64)];
      uint64_t v30 = type metadata accessor for FMFFriend();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v18, v61, v30);
      type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
      swift_storeEnumTagMultiPayload();
      sub_1002BCB74((uint64_t)v62, v28, type metadata accessor for FMBeaconSharingModuleShareState);
      uint64_t v31 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v23, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v18, 0, 2, v27);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v26 = (void *)sub_10007D224(0, v26[2] + 1, 1, (unint64_t)v26);
      }
      unint64_t v33 = v26[2];
      unint64_t v32 = v26[3];
      if (v33 >= v32 >> 1) {
        uint64_t v26 = (void *)sub_10007D224(v32 > 1, v33 + 1, 1, (unint64_t)v26);
      }
      void v26[2] = v33 + 1;
      sub_1002BCB74((uint64_t)v18, (uint64_t)v26+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v33, type metadata accessor for FMBeaconSharingModuleEntry);
      v25 += v60;
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease();
    a2 = v59;
    uint64_t v5 = v54;
    uint64_t v6 = v55;
    uint64_t v34 = *(void *)(v59 + 16);
    if (!v34)
    {
LABEL_9:
      __int16 v35 = v57;
      if ((v57 & 1) == 0) {
        goto LABEL_10;
      }
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v26 = _swiftEmptyArrayStorage;
    uint64_t v34 = *(void *)(a2 + 16);
    if (!v34) {
      goto LABEL_9;
    }
  }
  uint64_t v62 = &v8[*(int *)(v5 + 48)];
  uint64_t v61 = (char *)*(int *)(v5 + 64);
  uint64_t v36 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v37 = *(void *)(v6 + 72);
  swift_bridgeObjectRetain();
  do
  {
    sub_100006AB0(v36, (uint64_t)v8, &qword_1006AF020);
    uint64_t v38 = *(void **)&v61[(void)v8];
    uint64_t v39 = sub_10005D034(&qword_1006B9050);
    uint64_t v40 = (uint64_t)v16 + *(int *)(v39 + 48);
    uint64_t v41 = (char *)v16 + *(int *)(v39 + 64);
    *uint64_t v16 = v38;
    type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
    swift_storeEnumTagMultiPayload();
    sub_1002BCB74((uint64_t)v62, v40, type metadata accessor for FMBeaconSharingModuleShareState);
    uint64_t v42 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v41, v8, v42);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v16, 0, 2, v39);
    id v43 = v38;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v26 = (void *)sub_10007D224(0, v26[2] + 1, 1, (unint64_t)v26);
    }
    unint64_t v45 = v26[2];
    unint64_t v44 = v26[3];
    if (v45 >= v44 >> 1) {
      uint64_t v26 = (void *)sub_10007D224(v44 > 1, v45 + 1, 1, (unint64_t)v26);
    }
    void v26[2] = v45 + 1;
    sub_1002BCB74((uint64_t)v16, (uint64_t)v26+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v45, type metadata accessor for FMBeaconSharingModuleEntry);

    v36 += v37;
    --v34;
  }
  while (v34);
  swift_bridgeObjectRelease();
  __int16 v35 = v57;
  if ((v57 & 1) == 0)
  {
LABEL_10:
    if ((v35 & 0x100) == 0) {
      goto LABEL_30;
    }
    goto LABEL_25;
  }
LABEL_20:
  uint64_t v46 = sub_10005D034(&qword_1006B9050);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v56, 1, 2, v46);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v26 = (void *)sub_10007D224(0, v26[2] + 1, 1, (unint64_t)v26);
  }
  unint64_t v48 = v26[2];
  unint64_t v47 = v26[3];
  if (v48 >= v47 >> 1) {
    uint64_t v26 = (void *)sub_10007D224(v47 > 1, v48 + 1, 1, (unint64_t)v26);
  }
  void v26[2] = v48 + 1;
  sub_1002BCB74(v56, (uint64_t)v26+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v48, type metadata accessor for FMBeaconSharingModuleEntry);
  if ((v35 & 0x100) != 0)
  {
LABEL_25:
    uint64_t v49 = sub_10005D034(&qword_1006B9050);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v58, 2, 2, v49);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v26 = (void *)sub_10007D224(0, v26[2] + 1, 1, (unint64_t)v26);
    }
    unint64_t v51 = v26[2];
    unint64_t v50 = v26[3];
    if (v51 >= v50 >> 1) {
      uint64_t v26 = (void *)sub_10007D224(v50 > 1, v51 + 1, 1, (unint64_t)v26);
    }
    void v26[2] = v51 + 1;
    sub_1002BCB74(v58, (uint64_t)v26+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v51, type metadata accessor for FMBeaconSharingModuleEntry);
  }
LABEL_30:
  uint64_t v64 = v26;
  swift_bridgeObjectRetain();
  sub_1002B5890((uint64_t *)&v64, type metadata accessor for FMBeaconSharingModuleEntry, (uint64_t (*)(uint64_t))sub_10026880C, sub_1002B5954);
  swift_bridgeObjectRelease();
  return (uint64_t)v64;
}

uint64_t sub_1002A57D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  sub_10005D034((uint64_t *)&unk_1006BF090);
  void v4[6] = swift_task_alloc();
  sub_10005D034(&qword_1006AF740);
  v4[7] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for FMFFriend();
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  v4[12] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(sub_1002A5918, v3, 0);
}

uint64_t sub_1002A5918()
{
  v0[13] = *(void *)(v0[5] + 112);
  swift_retain();
  uint64_t v1 = dispatch thunk of FMFManager.friends.getter();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[9];
    uint64_t v5 = *(void (**)(void, unint64_t, void))(v3 + 16);
    uint64_t v4 = v3 + 16;
    unint64_t v36 = v1 + ((*(unsigned __int8 *)(v4 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 64));
    uint64_t v37 = v5;
    uint64_t v35 = *(void *)(v4 + 56);
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    do
    {
      v37(v0[11], v36 + v6 * v35, v0[8]);
      uint64_t v9 = FMFFriend.contactHandles.getter();
      if (*(void *)(v9 + 16))
      {
        Hasher.init(_seed:)();
        String.hash(into:)();
        Swift::Int v10 = Hasher._finalize()();
        uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
        unint64_t v12 = v10 & ~v11;
        if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
        {
          uint64_t v13 = *(void *)(v9 + 48);
          uint64_t v14 = (void *)(v13 + 16 * v12);
          BOOL v15 = *v14 == v0[3] && v14[1] == v0[4];
          if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
LABEL_18:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v20 = v0[8];
            uint64_t v19 = v0[9];
            uint64_t v21 = v0[7];
            (*(void (**)(uint64_t, void, uint64_t))(v19 + 32))(v21, v0[11], v20);
            uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
            v22(v21, 0, 1, v20);
            goto LABEL_21;
          }
          uint64_t v16 = ~v11;
          while (1)
          {
            unint64_t v12 = (v12 + 1) & v16;
            if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
              break;
            }
            uint64_t v17 = (void *)(v13 + 16 * v12);
            BOOL v18 = *v17 == v0[3] && v17[1] == v0[4];
            if (v18 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
              goto LABEL_18;
            }
          }
        }
      }
      ++v6;
      uint64_t v7 = v0[11];
      uint64_t v8 = v0[8];
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v4 - 8))(v7, v8);
    }
    while (v6 != v2);
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[9] + 56);
  v22(v0[7], 1, 1, v0[8]);
LABEL_21:
  v0[14] = v22;
  uint64_t v24 = v0[8];
  uint64_t v23 = v0[9];
  uint64_t v25 = v0[7];
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v25, 1, v24) != 1)
  {
    uint64_t v29 = v0[12];
    uint64_t v30 = v0[8];
    uint64_t v31 = v0[2];
    unint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[9] + 32);
    v32(v29, v0[7], v30);
    v32(v31, v29, v30);
    v22(v31, 0, 1, v30);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v33 = v0[1];
    __asm { BRAA            X1, X16 }
  }
  sub_100003F10(v0[7], &qword_1006AF740);
  uint64_t v26 = (void *)swift_task_alloc();
  v0[15] = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_1002A5D1C;
  uint64_t v27 = v0[5];
  uint64_t v28 = v0[3];
  v26[3] = v0[4];
  v26[4] = v27;
  void v26[2] = v28;
  return ((uint64_t (*)(uint64_t (*)()))_swift_task_switch)(sub_1002A6188);
}

uint64_t sub_1002A5D1C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 40);
  *(void *)(*(void *)v1 + 128) = a1;
  swift_task_dealloc();
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(sub_1002A5E34, v2, 0);
}

uint64_t sub_1002A5E34()
{
  swift_retain();
  uint64_t v1 = dispatch thunk of FMFManager.friends.getter();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
LABEL_16:
    uint64_t v21 = *(void **)(v0 + 128);
    (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 112))(*(void *)(v0 + 16), 1, 1, *(void *)(v0 + 64));
    goto LABEL_19;
  }
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v5 = *(void (**)(void, unint64_t, void))(v3 + 16);
  uint64_t v4 = v3 + 16;
  unint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 64));
  uint64_t v30 = *(void *)(v4 + 56);
  uint64_t v31 = v5;
  uint64_t v29 = v1;
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v7 = *(void *)(v0 + 48);
    v31(*(void *)(v0 + 80), v6, *(void *)(v0 + 64));
    FMFFriend.contact.getter();
    uint64_t v8 = type metadata accessor for FMFContact();
    uint64_t v9 = *(void *)(v8 - 8);
    int v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
    uint64_t v11 = *(void *)(v0 + 48);
    if (v10 == 1)
    {
      sub_100003F10(*(void *)(v0 + 48), (uint64_t *)&unk_1006BF090);
      uint64_t v12 = 0;
      uint64_t v13 = 0;
    }
    else
    {
      uint64_t v12 = FMFContact.storeUUID.getter();
      uint64_t v13 = v14;
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
    }
    id v15 = [*(id *)(v0 + 128) identifier:v29];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    if (!v13)
    {
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    if (v12 == v16 && v13 == v18) {
      break;
    }
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_18;
    }
LABEL_4:
    (*(void (**)(void, void))(v4 - 8))(*(void *)(v0 + 80), *(void *)(v0 + 64));
    v6 += v30;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_18:
  uint64_t v21 = *(void **)(v0 + 128);
  uint64_t v22 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 112);
  uint64_t v24 = *(void *)(v0 + 72);
  uint64_t v23 = *(void *)(v0 + 80);
  uint64_t v25 = *(void *)(v0 + 64);
  uint64_t v26 = *(void *)(v0 + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v26, v23, v25);
  v22(v26, 0, 1, v25);
LABEL_19:
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

uint64_t sub_1002A6164(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(sub_1002A6188, v2, 0);
}

uint64_t sub_1002A6188()
{
  if (qword_1006ADF70 != -1) {
    swift_once();
  }
  v0[5] = [(id)qword_1006D1508 descriptorForRequiredKeys];
  v0[6] = self;
  type metadata accessor for MainActor();
  v0[7] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_1002A627C, v2, v1);
}

uint64_t sub_1002A627C()
{
  uint64_t v1 = (void *)v0[6];
  uint64_t v2 = v0[4];
  swift_release();
  v0[8] = [v1 descriptorForRequiredKeys];
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(sub_1002A6304, v2, 0);
}

uint64_t sub_1002A6304()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[5];
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10055C1F0;
  *(void *)(v3 + 32) = v2;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = CNContactOrganizationNameKey;
  specialized Array._endMutation()();
  uint64_t v4 = CNContactOrganizationNameKey;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  dispatch thunk of FMFManager.contactsController.getter();
  swift_release();
  unint64_t v5 = dispatch thunk of FMFContactsDataController.searchInStore(handle:keysToFetch:)();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (!v5) {
    goto LABEL_10;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_4;
    }
    goto LABEL_9;
  }
  if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_9:
    swift_bridgeObjectRelease();
LABEL_10:
    id v8 = sub_1000DDBFC();
    goto LABEL_11;
  }
LABEL_4:
  if ((v5 & 0xC000000000000001) != 0)
  {
    id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    id v7 = *(id *)(v5 + 32);
  }
  id v8 = v7;
  swift_bridgeObjectRelease();
LABEL_11:

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  int v10 = (uint64_t (*)(id))v0[1];
  return v10(v8);
}

void sub_1002A64EC()
{
  if (!qword_1006BF4F0)
  {
    type metadata accessor for UUID();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1006BF4F0);
    }
  }
}

uint64_t sub_1002A6544()
{
  return v0;
}

uint64_t sub_1002A6554(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034(&qword_1006AF010);
  uint64_t v5 = __chkstk_darwin(v4);
  id v7 = (char *)v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  int v10 = (char *)v77 - v9;
  int v87 = _swiftEmptyArrayStorage;
  unint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    v77[1] = a2;
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v13 = *(void *)(v8 + 72);
    unint64_t v82 = (unint64_t)v7;
    uint64_t v83 = v13;
    uint64_t v81 = type metadata accessor for UUID();
    uint64_t v14 = *(void *)(v81 - 8);
    id v15 = *(void (**)(void, void, void))(v14 + 16);
    uint64_t v79 = (char *)(v14 + 16);
    unint64_t v80 = (unint64_t)v15;
    uint64_t v78 = (void *)(v14 + 32);
    v77[0] = a1;
    swift_bridgeObjectRetain();
    uint64_t v16 = v81;
    uint64_t v17 = v82;
    do
    {
      uint64_t v18 = *(int *)(v4 + 48);
      uint64_t v19 = (uint64_t)&v10[v18];
      uint64_t v20 = *(int *)(v4 + 64);
      uint64_t v21 = &v10[v20];
      uint64_t v84 = &v10[v20];
      unint64_t v85 = v11;
      uint64_t v22 = v10;
      uint64_t v23 = v12 + v18;
      uint64_t v24 = v12 + v20;
      ((void (*)(char *, uint64_t, uint64_t))v80)(v22, v12, v16);
      sub_1002BCBDC(v23, v19, type metadata accessor for FMBeaconSharingModuleShareState);
      uint64_t v25 = type metadata accessor for FMFFriend();
      uint64_t v26 = v4;
      uint64_t v27 = *(void *)(v25 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v21, v24, v25);
      uint64_t v28 = v17 + *(int *)(v26 + 48);
      uint64_t v29 = v17 + *(int *)(v26 + 64);
      ((void (*)(uint64_t, char *, uint64_t))*v78)(v17, v22, v16);
      sub_1002BCB74(v19, v28, type metadata accessor for FMBeaconSharingModuleShareState);
      uint64_t v30 = v25;
      int v10 = v22;
      (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v84, v30);
      uint64_t v4 = v26;
      unint64_t v31 = v85;
      uint64_t v32 = FMFFriend.contactHandles.getter();
      sub_100003F10(v17, &qword_1006AF010);
      sub_1004A1C84(v32);
      v12 += v83;
      unint64_t v11 = v31 - 1;
    }
    while (v11);
    swift_bridgeObjectRelease();
    uint64_t v78 = v87;
  }
  else
  {
    uint64_t v78 = _swiftEmptyArrayStorage;
  }
  uint64_t v33 = swift_bridgeObjectRetain();
  unint64_t v34 = (unint64_t)sub_10029B7A4(v33);
  swift_bridgeObjectRelease();
  int v87 = _swiftEmptyArrayStorage;
  unint64_t v80 = v34;
  if (v34 >> 62) {
    goto LABEL_44;
  }
  uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v35; uint64_t v35 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v36 = 0;
    uint64_t v81 = v35;
    unint64_t v82 = v80 & 0xC000000000000001;
    uint64_t v79 = (char *)(v80 + 32);
    while (1)
    {
      uint64_t v37 = v82 ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)() : (char *)*(id *)&v79[8 * v36];
      uint64_t v38 = v37;
      BOOL v39 = __OFADD__(v36, 1);
      uint64_t v40 = v36 + 1;
      if (v39) {
        break;
      }
      id v41 = [v37 emailAddresses];
      uint64_t v42 = sub_10005D034((uint64_t *)&unk_1006BF080);
      unint64_t v43 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v43 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v83 = v40;
        uint64_t v84 = v38;
        if (!v44)
        {
LABEL_26:
          swift_bridgeObjectRelease();
          uint64_t v46 = _swiftEmptyArrayStorage;
          goto LABEL_27;
        }
      }
      else
      {
        uint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v83 = v40;
        uint64_t v84 = v38;
        if (!v44) {
          goto LABEL_26;
        }
      }
      int v86 = _swiftEmptyArrayStorage;
      sub_10013E758(0, v44 & ~(v44 >> 63), 0);
      if (v44 < 0) {
        goto LABEL_42;
      }
      unint64_t v85 = v42;
      uint64_t v45 = 0;
      uint64_t v46 = v86;
      do
      {
        if ((v43 & 0xC000000000000001) != 0) {
          id v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v47 = *(id *)(v43 + 8 * v45 + 32);
        }
        id v48 = v47;
        id v49 = [v48 value];
        id v50 = [v49 stringValue];
        uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v53 = v52;

        int v86 = v46;
        unint64_t v55 = v46[2];
        unint64_t v54 = v46[3];
        if (v55 >= v54 >> 1)
        {
          sub_10013E758(v54 > 1, v55 + 1, 1);
          uint64_t v46 = v86;
        }
        ++v45;
        v46[2] = v55 + 1;
        uint64_t v56 = &v46[2 * v55];
        v56[4] = v51;
        void v56[5] = v53;
      }
      while (v44 != v45);
      swift_bridgeObjectRelease();
      uint64_t v38 = v84;
LABEL_27:
      id v57 = [v38 phoneNumbers];
      unint64_t v58 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v58 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v59 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v59)
        {
LABEL_39:
          swift_bridgeObjectRelease();
          uint64_t v61 = _swiftEmptyArrayStorage;
          goto LABEL_9;
        }
      }
      else
      {
        uint64_t v59 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v59) {
          goto LABEL_39;
        }
      }
      int v86 = _swiftEmptyArrayStorage;
      sub_10013E758(0, v59 & ~(v59 >> 63), 0);
      if (v59 < 0) {
        goto LABEL_43;
      }
      uint64_t v60 = 0;
      uint64_t v61 = v86;
      unint64_t v85 = v58 & 0xC000000000000001;
      unint64_t v62 = v58;
      uint64_t v63 = v59;
      do
      {
        if (v85) {
          id v64 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v64 = *(id *)(v58 + 8 * v60 + 32);
        }
        id v65 = v64;
        id v66 = [v65 value];
        id v67 = [v66 stringValue];
        uint64_t v68 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v70 = v69;

        int v86 = v61;
        unint64_t v72 = v61[2];
        unint64_t v71 = v61[3];
        if (v72 >= v71 >> 1)
        {
          sub_10013E758(v71 > 1, v72 + 1, 1);
          uint64_t v61 = v86;
        }
        ++v60;
        v61[2] = v72 + 1;
        uint64_t v73 = &v61[2 * v72];
        v73[4] = v68;
        v73[5] = v70;
        unint64_t v58 = v62;
      }
      while (v63 != v60);
      swift_bridgeObjectRelease();
      uint64_t v38 = v84;
LABEL_9:
      int v86 = v46;
      sub_1004A207C((uint64_t)v61);

      sub_1004A207C((uint64_t)v86);
      uint64_t v36 = v83;
      if (v83 == v81)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v74 = v87;
        goto LABEL_46;
      }
    }
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease_n();
  uint64_t v74 = _swiftEmptyArrayStorage;
LABEL_46:
  int v87 = v78;
  sub_1004A207C((uint64_t)v74);
  uint64_t v75 = sub_1000EE764((uint64_t)v87);
  swift_bridgeObjectRelease();
  return v75;
}

uint64_t sub_1002A6CA4(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a1 + 17);
  int v4 = *(unsigned __int8 *)(a1 + 18);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  int v8 = *(unsigned __int8 *)(a2 + 17);
  int v9 = *(unsigned __int8 *)(a2 + 18);
  if (*(unsigned char *)(a1 + 17)) {
    int v10 = 256;
  }
  else {
    int v10 = 0;
  }
  int v11 = v10 | v2;
  if (*(unsigned char *)(a1 + 18)) {
    int v12 = 0x10000;
  }
  else {
    int v12 = 0;
  }
  uint64_t v13 = sub_1002A4F5C(*(void *)a1, *(void *)(a1 + 8), v11 | v12);
  if (v8) {
    int v14 = 256;
  }
  else {
    int v14 = 0;
  }
  int v15 = v14 | v7;
  if (v9) {
    int v16 = 0x10000;
  }
  else {
    int v16 = 0;
  }
  uint64_t v17 = sub_1002A4F5C(v5, v6, v15 | v16);
  int v18 = sub_1002498B0(v13, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v18 & ~(v2 ^ v7) & ~(v3 ^ v8) & (v4 ^ v9 ^ 1u);
}

id sub_1002A6D98(uint64_t a1)
{
  uint64_t v3 = sub_10005D034(&qword_1006B4580);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  uint64_t v6 = qword_1006AE408;
  int v7 = v1;
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1000606BC(v8, (uint64_t)qword_1006D2760);
  int v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    int v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)int v11 = 136315138;
    uint64_t v21 = sub_1000606F4(0x64656D2874696E69, 0xEF293A726F746169, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMBeaconSharingModuleView: %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  *(void *)&v7[qword_1006B8E08] = a1;
  type metadata accessor for FMBeaconSharingModuleDataSource(0);
  int v12 = (void *)swift_allocObject();
  swift_retain_n();
  swift_defaultActor_initialize();
  v12[15] = 0;
  v12[16] = 0;
  v12[17] = 0;
  uint64_t v13 = (char *)v12 + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_beaconIdentifier;
  uint64_t v14 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  int v15 = (char *)v12 + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_viewModel;
  *(void *)int v15 = _swiftEmptyArrayStorage;
  *((void *)v15 + 1) = _swiftEmptyArrayStorage;
  *((_WORD *)v15 + 8) = 0;
  v15[18] = 0;
  *(void *)((char *)v12 + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_currentUpdateTask) = 0;
  v12[14] = a1;
  uint64_t v16 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 1, 1, v16);
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = 0;
  uint64_t v17[3] = 0;
  long long v17[4] = v12;
  swift_retain();
  sub_10016CC14((uint64_t)v5, (uint64_t)&unk_1006B9260, (uint64_t)v17);
  swift_release();
  *(void *)&v7[qword_1006B8E10] = v12;

  int v18 = (objc_class *)type metadata accessor for FMBeaconSharingModuleView(0);
  v23.receiver = v7;
  v23.super_class = v18;
  [super init];
  sub_1002A71A0();

  swift_release();
  return v19;
}

void sub_1002A711C(void *a1, uint64_t a2, void *a3)
{
  swift_unknownObjectWeakInit();
  id v5 = a3;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1002A71A0()
{
  uint64_t v1 = sub_10005D034(&qword_1006B4580);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FMIPProductType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FMSelectedSection();
  __chkstk_darwin(v8);
  os_log_type_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FMIPItem();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v56 = v0;
  id v57 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(*(void *)&v0[qword_1006B8E08] + 56)
      + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_1002BCBDC(v14, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v54 = v11;
    unint64_t v55 = v3;
    uint64_t v53 = v12;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v57, v10, v11);
    int v15 = self;
    id v16 = [v15 configurationWithTextStyle:UIFontTextStyleTitle2 scale:3];
    sub_10005D034(&qword_1006AF2D0);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_10055C1E0;
    int v18 = self;
    *(void *)(v17 + 32) = [v18 whiteColor];
    *(void *)(v17 + 40) = [v18 systemGreenColor];
    unint64_t v58 = v17;
    specialized Array._endMutation()();
    sub_100006060(0, (unint64_t *)&qword_1006B7C80);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v20 = [v15 configurationWithPaletteColors:isa];

    id v51 = v20;
    id v52 = v16;
    id v21 = [v16 configurationByApplyingConfiguration:v20];
    NSString v22 = String._bridgeToObjectiveC()();
    id v23 = [self systemImageNamed:v22 withConfiguration:v21];

    id v50 = v23;
    if (v23)
    {
      FMIPItem.productType.getter();
      char v24 = FMIPProductType.isAirTag.getter();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      if (v24) {
        uint64_t v25 = 0x4741545249415FLL;
      }
      else {
        uint64_t v25 = 0x4D4554495FLL;
      }
      if (v24) {
        uint64_t v26 = (void *)0xE700000000000000;
      }
      else {
        uint64_t v26 = (void *)0xE500000000000000;
      }
      char v27 = FMIPItem.isOwner.getter();
      if (v27) {
        uint64_t v28 = 0x52454E574F5FLL;
      }
      else {
        uint64_t v28 = 0x4545524148535FLL;
      }
      if (v27) {
        uint64_t v29 = (void *)0xE600000000000000;
      }
      else {
        uint64_t v29 = (void *)0xE700000000000000;
      }
      unint64_t v58 = 0xD000000000000012;
      unint64_t v59 = 0x8000000100591410;
      v30._uint64_t countAndFlagsBits = v25;
      v30._unint64_t object = v26;
      String.append(_:)(v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v31._uint64_t countAndFlagsBits = v28;
      v31._unint64_t object = v29;
      String.append(_:)(v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v32 = v58;
      uint64_t v33 = (void *)v59;
      id v34 = [self mainBundle];
      v35.value._uint64_t countAndFlagsBits = 0xD000000000000013;
      v60._uint64_t countAndFlagsBits = 0xD000000000000018;
      v60._unint64_t object = (void *)0x80000001005828D0;
      v35.value._unint64_t object = (void *)0x80000001005828B0;
      v36._uint64_t countAndFlagsBits = v32;
      v36._unint64_t object = v33;
      v37._uint64_t countAndFlagsBits = 0;
      v37._unint64_t object = (void *)0xE000000000000000;
      Swift::String v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(v36, v35, (NSBundle)v34, v37, v60);

      swift_bridgeObjectRelease();
      BOOL v39 = v56;
      uint64_t v40 = &v56[qword_1006C11D0];
      sub_100067E48((uint64_t)&v56[qword_1006C11D0], (uint64_t)&v58, &qword_1006B9350);
      id v41 = *(void **)v40;
      uint64_t v42 = v50;
      *(void *)uint64_t v40 = v50;
      *((void *)v40 + 1) = v38._countAndFlagsBits;
      *((void *)v40 + 3) = 0;
      *((void *)v40 + 4) = 0;
      *((void *)v40 + 2) = v38._object;
      v40[40] = 0;
      id v43 = v42;
      sub_1002BEABC((uint64_t)&v58, (void (*)(void, void, void, void, void, void))sub_1000E75E0);
      swift_bridgeObjectRetain();
      sub_1000E762C(v41);
      sub_1003E55D4((uint64_t)&v58);

      swift_bridgeObjectRelease();
      sub_1002BEABC((uint64_t)&v58, (void (*)(void, void, void, void, void, void))sub_1000E762C);
      uint64_t v44 = type metadata accessor for TaskPriority();
      uint64_t v45 = (uint64_t)v55;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v55, 1, 1, v44);
      type metadata accessor for MainActor();
      id v46 = v39;
      uint64_t v47 = static MainActor.shared.getter();
      id v48 = (void *)swift_allocObject();
      id v48[2] = v47;
      v48[3] = &protocol witness table for MainActor;
      v48[4] = v46;
      sub_10016CC14(v45, (uint64_t)&unk_1006B9360, (uint64_t)v48);
      swift_release();

      (*(void (**)(char *, uint64_t))(v53 + 8))(v57, v54);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_1002BCB14((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  }
}

uint64_t sub_1002A78C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  type metadata accessor for MainActor();
  v4[3] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[4] = v6;
  v4[5] = v5;
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_1002A795C, v6, v5);
}

uint64_t sub_1002A795C()
{
  uint64_t v1 = *(void *)(v0[2] + qword_1006B8E10);
  uint64_t v2 = swift_allocObject();
  v0[6] = v2;
  swift_unknownObjectWeakInit();
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  void *v3 = v0;
  v3[1] = sub_1002A7A64;
  v3[4] = v2;
  v3[5] = v1;
  v3[3] = &unk_1006B9370;
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(sub_1002A0330, v1, 0);
}

uint64_t sub_1002A7A64()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release_n();
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 32);
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_1002A7BAC, v3, v2);
}

uint64_t sub_1002A7BAC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002A7C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1002A7C2C, 0, 0);
}

uint64_t sub_1002A7C2C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[6] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[7] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1002A7D18;
    return sub_1002A7E24();
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1002A7D18()
{
  uint64_t v1 = *(void **)(*v0 + 48);
  uint64_t v4 = *v0;
  swift_task_dealloc();

  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_1002A7E24()
{
  v1[3] = v0;
  type metadata accessor for MainActor();
  v1[4] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[5] = v3;
  v1[6] = v2;
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_1002A7EBC, v3, v2);
}

uint64_t sub_1002A7EBC()
{
  *(void *)(v0 + 56) = *(void *)(*(void *)(v0 + 24) + qword_1006B8E10);
  return ((uint64_t (*)(uint64_t (*)()))_swift_task_switch)(sub_1002A7EE8);
}

uint64_t sub_1002A7EE8()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56) + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_viewModel;
  *(void *)(v0 + 64) = *(void *)v2;
  *(void *)(v0 + 72) = *(void *)(v2 + 8);
  *(unsigned char *)(v0 + 80) = *(unsigned char *)(v2 + 16);
  *(unsigned char *)(v0 + 81) = *(unsigned char *)(v2 + 17);
  *(unsigned char *)(v0 + 82) = *(unsigned char *)(v2 + 18);
  uint64_t v3 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_1002A7F9C, v3, v1);
}

uint64_t sub_1002A7F9C()
{
  uint64_t v1 = (void **)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 24);
  int v3 = *(unsigned __int8 *)(v0 + 82);
  int v4 = *(unsigned __int8 *)(v0 + 81);
  unsigned int v5 = *(unsigned __int8 *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 72);
  swift_release();
  if (v4) {
    int v8 = 256;
  }
  else {
    int v8 = 0;
  }
  if (v3) {
    int v9 = 0x10000;
  }
  else {
    int v9 = 0;
  }
  uint64_t v10 = sub_1002A4F5C(v7, v6, v8 | v9 | v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = qword_1006C11D8;
  uint64_t v12 = *(void *)(v2 + qword_1006C11D8);
  *(void *)(v2 + qword_1006C11D8) = v10;
  uint64_t v13 = swift_bridgeObjectRetain();
  char v14 = sub_1002498B0(v13, v12);
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    uint64_t v15 = swift_bridgeObjectRetain();
    sub_10029C1BC(v15);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (qword_1006AE408 != -1) {
    swift_once();
  }
  id v16 = *v1;
  uint64_t v17 = type metadata accessor for Logger();
  sub_1000606BC(v17, (uint64_t)qword_1006D2760);
  id v18 = v16;
  id v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  BOOL v21 = os_log_type_enabled(v19, v20);
  NSString v22 = *v1;
  if (v21)
  {
    id v23 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v23 = 134217984;
    *(void *)(v0 + 16) = *(void *)(*(void *)(v2 + v11) + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMBeaconSharingModuleView: Received new rows: %ld", v23, 0xCu);
    swift_slowDealloc();
  }
  else
  {
  }
  char v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_1002A81CC(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = type metadata accessor for UUID();
  void v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[9] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[10] = v5;
  v2[11] = v4;
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_1002A82C0, v5, v4);
}

uint64_t sub_1002A82C0()
{
  os_log_type_t v20 = v0;
  if (qword_1006AE408 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v4 = v0[6];
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000606BC(v5, (uint64_t)qword_1006D2760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v10 = v0[7];
  uint64_t v9 = v0[8];
  uint64_t v11 = v0[6];
  if (v8)
  {
    os_log_type_t type = v7;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    v0[2] = sub_1000606F4(0xD000000000000027, 0x80000001005913C0, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 12) = 2080;
    sub_1002B4DB8((unint64_t *)&qword_1006B6CC0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[3] = sub_1000606F4(v13, v14, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    _os_log_impl((void *)&_mh_execute_header, v6, type, "FMBeaconSharingModuleView: %s - %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v10 + 8))(v0[8], v0[6]);
  }

  uint64_t v15 = (void *)swift_task_alloc();
  v0[12] = v15;
  void *v15 = v0;
  v15[1] = sub_1002A85A8;
  uint64_t v16 = v0[4];
  return sub_1002A0630(v16);
}

uint64_t sub_1002A85A8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_1002A86C8, v3, v2);
}

uint64_t sub_1002A86C8()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002A8730(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10005D034(&qword_1006B4580);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  sub_1002BCBDC(a1, (uint64_t)v6, type metadata accessor for FMBeaconSharingModuleEntry);
  type metadata accessor for MainActor();
  id v11 = v1;
  uint64_t v12 = static MainActor.shared.getter();
  unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v14 = (v5 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v12;
  *(void *)(v15 + 24) = &protocol witness table for MainActor;
  sub_1002BCB74((uint64_t)v6, v15 + v13, type metadata accessor for FMBeaconSharingModuleEntry);
  *(void *)(v15 + v14) = v11;
  sub_10016CC14((uint64_t)v9, (uint64_t)&unk_1006B9290, v15);
  return swift_release();
}

uint64_t sub_1002A8928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  sub_10005D034(&qword_1006B4580);
  v5[9] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for IndexPath();
  v5[10] = v6;
  v5[11] = *(void *)(v6 - 8);
  v5[12] = swift_task_alloc();
  sub_10005D034(&qword_1006AF770);
  v5[13] = swift_task_alloc();
  v5[14] = type metadata accessor for FMSelectedSection();
  v5[15] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for FMIPItem();
  v5[16] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v5[17] = v8;
  v5[18] = *(void *)(v8 + 64);
  v5[19] = swift_task_alloc();
  v5[20] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for UUID();
  v5[21] = v9;
  v5[22] = *(void *)(v9 - 8);
  v5[23] = swift_task_alloc();
  uint64_t v10 = *(void *)(type metadata accessor for FMBeaconSharingModuleEntry(0) - 8);
  v5[24] = v10;
  v5[25] = *(void *)(v10 + 64);
  v5[26] = swift_task_alloc();
  v5[27] = swift_task_alloc();
  v5[28] = swift_task_alloc();
  v5[29] = swift_task_alloc();
  v5[30] = type metadata accessor for MainActor();
  v5[31] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[32] = v12;
  v5[33] = v11;
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_1002A8C08, v12, v11);
}

uint64_t sub_1002A8C08()
{
  uint64_t v79 = v0;
  if (qword_1006AE408 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[29];
  uint64_t v3 = type metadata accessor for Logger();
  sub_1000606BC(v3, (uint64_t)qword_1006D2760);
  sub_1002BCBDC(v1, v2, type metadata accessor for FMBeaconSharingModuleEntry);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[29];
  if (v6)
  {
    os_log_type_t v70 = v5;
    uint64_t v8 = v0[28];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v78 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    v0[5] = sub_1000606F4(0xD000000000000018, 0x8000000100591170, &v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 12) = 2080;
    sub_1002BCBDC(v7, v8, type metadata accessor for FMBeaconSharingModuleEntry);
    uint64_t v10 = sub_10005D034(&qword_1006B9050);
    int v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 2, v10);
    if (v11)
    {
      if (v11 == 1)
      {
        unint64_t v12 = 0xE200000000000000;
        uint64_t v13 = 25933;
      }
      else
      {
        unint64_t v12 = 0xE90000000000006ELL;
        uint64_t v13 = 0x6F73726550646441;
      }
    }
    else
    {
      uint64_t v14 = v0[28];
      uint64_t v15 = v0[22];
      uint64_t v16 = v0[23];
      uint64_t v17 = v0[21];
      uint64_t v68 = v14 + *(int *)(v10 + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v16, v14 + *(int *)(v10 + 64), v17);
      uint64_t v13 = UUID.uuidString.getter();
      unint64_t v12 = v18;
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v17);
      sub_1002BCB14(v68, type metadata accessor for FMBeaconSharingModuleShareState);
      sub_1002BCB14(v14, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    }
    uint64_t v19 = v0[29];
    v0[6] = sub_1000606F4(v13, v12, &v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1002BCB14(v19, type metadata accessor for FMBeaconSharingModuleEntry);
    _os_log_impl((void *)&_mh_execute_header, v4, v70, "FMBeaconSharingModuleView: %s - %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1002BCB14(v0[29], type metadata accessor for FMBeaconSharingModuleEntry);
  }
  uint64_t v20 = v0[15];
  uint64_t v21 = *(void *)(v0[8] + qword_1006B8E08);
  v0[34] = v21;
  uint64_t v22 = *(void *)(v21 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_1002BCBDC(v22, v20, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    uint64_t v44 = v0[15];
    swift_release();
    uint64_t v45 = (uint64_t (*)(void))type metadata accessor for FMSelectedSection;
    uint64_t v46 = v44;
LABEL_26:
    sub_1002BCB14(v46, v45);
LABEL_27:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v65 = v0[1];
    __asm { BRAA            X1, X16 }
  }
  uint64_t v23 = v0[20];
  uint64_t v24 = v0[16];
  uint64_t v25 = v0[17];
  uint64_t v26 = v0[15];
  uint64_t v27 = v0[8];
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32);
  v0[35] = v28;
  v0[36] = (v25 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v28(v23, v26, v24);
  int v76 = *(void **)(v27 + qword_1006C11F0);
  id v29 = [v76 indexPathsForSelectedRows];
  if (v29)
  {
    Swift::String v30 = v29;
    uint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v32 = *(void *)(v31 + 16);
    uint64_t v33 = v0[11];
    if (v32)
    {
      Swift::String_optional v35 = *(void (**)(uint64_t, unint64_t, uint64_t))(v33 + 16);
      uint64_t v34 = v33 + 16;
      unint64_t v36 = v31 + ((*(unsigned __int8 *)(v34 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 64));
      Swift::String v37 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 40);
      uint64_t v74 = v35;
      uint64_t v71 = *(void *)(v34 + 56);
      swift_bridgeObjectRetain();
      while (1)
      {
        uint64_t v38 = v0[13];
        uint64_t v39 = v0[10];
        v74(v38, v36, v39);
        uint64_t v40 = *v37;
        (*v37)(v38, 0, 1, v39);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v38, 1, v39) == 1) {
          break;
        }
        uint64_t v41 = v0[12];
        uint64_t v42 = v0[10];
        (*(void (**)(uint64_t, void, uint64_t))(v34 + 16))(v41, v0[13], v42);
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        [v76 deselectRowAtIndexPath:isa animated:1];

        (*(void (**)(uint64_t, uint64_t))(v34 - 8))(v41, v42);
        v36 += v71;
        if (!--v32) {
          goto LABEL_20;
        }
      }
    }
    else
    {
      uint64_t v40 = *(void (**)(void, uint64_t, uint64_t, void))(v33 + 56);
      swift_bridgeObjectRetain();
LABEL_20:
      v40(v0[13], 1, 1, v0[10]);
    }
    swift_bridgeObjectRelease_n();
  }
  uint64_t v47 = v0[27];
  sub_1002BCBDC(v0[7], v47, type metadata accessor for FMBeaconSharingModuleEntry);
  uint64_t v48 = sub_10005D034(&qword_1006B9050);
  int v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48))(v47, 2, v48);
  if (!v49)
  {
    uint64_t v54 = v0[26];
    uint64_t v53 = v0[27];
    uint64_t v67 = v0[24];
    uint64_t v55 = v0[22];
    uint64_t v77 = v0[21];
    uint64_t v56 = v0[17];
    uint64_t v72 = v0[16];
    uint64_t v73 = v0[20];
    id v57 = (void *)v0[8];
    uint64_t v58 = v0[9];
    uint64_t v59 = v0[7];
    swift_release();
    uint64_t v75 = v53 + *(int *)(v48 + 48);
    uint64_t v69 = v53 + *(int *)(v48 + 64);
    uint64_t v60 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v58, 1, 1, v60);
    sub_1002BCBDC(v59, v54, type metadata accessor for FMBeaconSharingModuleEntry);
    id v61 = v57;
    uint64_t v62 = static MainActor.shared.getter();
    unint64_t v63 = (*(unsigned __int8 *)(v67 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
    id v64 = (void *)swift_allocObject();
    v64[2] = v62;
    void v64[3] = &protocol witness table for MainActor;
    v64[4] = v61;
    sub_1002BCB74(v54, (uint64_t)v64 + v63, type metadata accessor for FMBeaconSharingModuleEntry);
    sub_10016CC14(v58, (uint64_t)&unk_1006B92A0, (uint64_t)v64);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v73, v72);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v69, v77);
    sub_1002BCB14(v75, type metadata accessor for FMBeaconSharingModuleShareState);
    uint64_t v45 = type metadata accessor for FMBeaconSharingModuleRelationshipType;
    uint64_t v46 = v53;
    goto LABEL_26;
  }
  if (v49 == 1)
  {
    uint64_t v50 = v0[20];
    uint64_t v51 = v0[16];
    uint64_t v52 = v0[17];
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v50, v51);
    goto LABEL_27;
  }
  v0[37] = *(void *)(v0[8] + qword_1006B8E10);
  return ((uint64_t (*)(uint64_t (*)()))_swift_task_switch)(sub_1002A9540);
}

uint64_t sub_1002A9540()
{
  uint64_t v1 = *(void *)(v0 + 296) + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_viewModel;
  *(void *)(v0 + 304) = *(void *)v1;
  *(void *)(v0 + 312) = *(void *)(v1 + 8);
  *(unsigned char *)(v0 + 320) = *(unsigned char *)(v1 + 16);
  *(unsigned char *)(v0 + 321) = *(unsigned char *)(v1 + 17);
  *(unsigned char *)(v0 + 322) = *(unsigned char *)(v1 + 18);
  uint64_t v3 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_1002A95F4, v3, v2);
}

uint64_t sub_1002A95F4()
{
  uint64_t v2 = v0[38];
  uint64_t v1 = v0[39];
  uint64_t v3 = v0[34];
  uint64_t v5 = v0[19];
  uint64_t v4 = v0[20];
  uint64_t v6 = v0[16];
  uint64_t v7 = v0[17];
  swift_release();
  uint64_t v29 = sub_1002A6554(v2, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v28(v5, v4, v6);
  id v8 = objc_allocWithZone((Class)type metadata accessor for FMItemSharingLandingViewController(0));
  swift_retain();
  id v9 = sub_1003D29D0(v5, v3, 0, 0);
  swift_release();
  objc_allocWithZone((Class)type metadata accessor for FMActivityIndicatingNavigationController());
  uint64_t v27 = (char *)v9;
  id v10 = sub_1000BE210(v27, 2);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v12 = Strong;
    [Strong presentViewController:v10 animated:1 completion:0];
  }
  uint64_t v26 = (void (*)(unint64_t, uint64_t, uint64_t))v0[35];
  uint64_t v14 = v0[19];
  uint64_t v13 = v0[20];
  uint64_t v16 = v0[17];
  uint64_t v15 = v0[18];
  uint64_t v17 = v0[16];
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v28(v14, v13, v17);
  unint64_t v19 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v20 = (v15 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v18;
  v26(v21 + v19, v14, v17);
  *(void *)(v21 + v20) = v29;
  *(void *)(v21 + ((v20 + 15) & 0xFFFFFFFFFFFFFFF8)) = v10;
  uint64_t v22 = (void (**)())&v27[qword_1006D2260];
  uint64_t v23 = *(void *)&v27[qword_1006D2260];
  *uint64_t v22 = sub_1002BD454;
  v22[1] = (void (*)())v21;
  swift_retain();
  sub_100036B90(v23);

  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v17);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
  return v24();
}

void sub_1002A98F4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v94 = a4;
  uint64_t v91 = a2;
  uint64_t v5 = type metadata accessor for FMFFriend();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMIPBeaconSharingLimits();
  uint64_t v82 = *(void *)(v9 - 8);
  uint64_t v83 = v9;
  __chkstk_darwin(v9);
  uint64_t v80 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ShareItemContactPickerView();
  uint64_t v87 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v84 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  int v86 = (char *)&v70 - v14;
  uint64_t v78 = type metadata accessor for FMIPProductType();
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  int v76 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for ContactPickerViewModel.Dependencies();
  uint64_t v85 = *(void *)(v93 - 8);
  uint64_t v16 = __chkstk_darwin(v93);
  uint64_t v81 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v92 = (char *)&v70 - v18;
  uint64_t v19 = type metadata accessor for FMIPItem();
  uint64_t v88 = *(void *)(v19 - 8);
  uint64_t v89 = v19;
  __chkstk_darwin(v19);
  uint64_t v79 = v20;
  int v90 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t MyUI = type metadata accessor for Feature.FindMyUI();
  uint64_t v22 = *(void *)(MyUI - 8);
  __chkstk_darwin(MyUI);
  uint64_t v24 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v26 = (char *)Strong;
    (*(void (**)(char *, void, uint64_t))(v22 + 104))(v24, enum case for Feature.FindMyUI.newContactPicker(_:), MyUI);
    sub_1002B4DB8((unint64_t *)&unk_1006C21D0, (void (*)(uint64_t))&type metadata accessor for Feature.FindMyUI);
    Swift::Bool v27 = FeatureFlagsKey.isEnabled()();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, MyUI);
    if (v27)
    {
      uint64_t v74 = v11;
      uint64_t v73 = v26;
      uint64_t v28 = *(void *)&v26[qword_1006B8E08];
      uint64_t Controller = type metadata accessor for QueryController();
      swift_retain();
      uint64_t v30 = QueryController.__allocating_init(serviceName:)();
      uint64_t v72 = v28;
      uint64_t v75 = v30;
      swift_retain();
      uint64_t v31 = dispatch thunk of FMFManager.friends.getter();
      int v95 = _swiftEmptyArrayStorage;
      uint64_t v32 = *(void *)(v31 + 16);
      if (v32)
      {
        uint64_t v71 = Controller;
        Swift::String_optional v35 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
        uint64_t v34 = v6 + 16;
        uint64_t v33 = v35;
        unint64_t v36 = (*(unsigned __int8 *)(v34 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 64);
        uint64_t v70 = v31;
        unint64_t v37 = v31 + v36;
        uint64_t v38 = *(void *)(v34 + 56);
        do
        {
          v33(v8, v37, v5);
          uint64_t v39 = FMFFriend.contactHandles.getter();
          (*(void (**)(char *, uint64_t))(v34 - 8))(v8, v5);
          sub_1004A1C84(v39);
          v37 += v38;
          --v32;
        }
        while (v32);
      }
      swift_bridgeObjectRelease();
      uint64_t v44 = v92;
      ContactPickerViewModel.Dependencies.init(isReachable:isHandlePartOfSignedInAccount:excludedSuggestedContactHandles:)();
      uint64_t v70 = QueryController.__allocating_init(serviceName:)();
      swift_retain();
      uint64_t v45 = v76;
      uint64_t v46 = v91;
      FMIPItem.productType.getter();
      LODWORD(v71) = FMIPProductType.isAirTag.getter();
      (*(void (**)(char *, uint64_t))(v77 + 8))(v45, v78);
      uint64_t v47 = v85;
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v81, v44, v93);
      uint64_t v48 = v72;
      uint64_t v49 = *(void *)(v72 + 24) + OBJC_IVAR____TtC6FindMy17FMDevicesProvider_sharingLimits;
      swift_beginAccess();
      uint64_t v50 = v82;
      uint64_t v51 = v80;
      uint64_t v52 = v49;
      uint64_t v53 = v83;
      (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v80, v52, v83);
      swift_retain();
      uint64_t v78 = FMIPBeaconSharingLimits.maxCircleMembers.getter();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v53);
      uint64_t v54 = v88;
      uint64_t v55 = v89;
      uint64_t v56 = v90;
      (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v90, v46, v89);
      unint64_t v57 = (*(unsigned __int8 *)(v54 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
      unint64_t v58 = (v79 + v57 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v59 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v54 + 32))(v59 + v57, v56, v55);
      uint64_t v60 = v73;
      *(void *)(v59 + v58) = v73;
      *(void *)(v59 + ((v58 + 15) & 0xFFFFFFFFFFFFFFF8)) = v48;
      uint64_t v61 = swift_allocObject();
      id v62 = v94;
      *(void *)(v61 + 16) = v94;
      swift_retain();
      id v63 = v60;
      id v64 = v62;
      uint64_t v65 = v86;
      ShareItemContactPickerView.init(dependencies:isCapabilityEnabled:isAirTag:maxCircleMembersSharingLimits:performAction:showOfferSuccess:)();
      uint64_t v66 = v87;
      uint64_t v67 = v74;
      (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v84, v65, v74);
      id v68 = objc_allocWithZone((Class)sub_10005D034(&qword_1006B92E0));
      uint64_t v69 = (void *)UIHostingController.init(rootView:)();
      [v64 pushViewController:v69 animated:1];

      swift_release();
      swift_release_n();
      swift_release();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v67);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v92, v93);
    }
    else
    {
      uint64_t v40 = (uint64_t)v90;
      (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v90, v91, v89);
      uint64_t v41 = *(void *)&v26[qword_1006B8E08];
      id v42 = objc_allocWithZone((Class)type metadata accessor for FMItemSharingContactPickerViewController());
      swift_bridgeObjectRetain();
      swift_retain();
      id v43 = sub_10014769C(v40, a3, v41);
      swift_release();
      [v94 pushViewController:v43 animated:1];
    }
  }
}

uint64_t sub_1002AA2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = type metadata accessor for FMIPItem();
  void v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1002AA39C, 0, 0);
}

uint64_t sub_1002AA39C()
{
  if (qword_1006AE408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000606BC(v1, (uint64_t)qword_1006D2760);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "FMItemSharingContactPickerViewController: Will perform sendShareInvite action", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = v0[7];
  uint64_t v5 = v0[8];
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[6];
  uint64_t v9 = v0[3];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v9, v8);
  type metadata accessor for FMIPShareItemAction();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v10 = FMIPShareItemAction.init(item:handles:)();
  v0[9] = v10;
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = (void *)swift_allocObject();
  v0[10] = v12;
  v12[2] = v7;
  v12[3] = v10;
  v12[4] = v11;
  swift_retain();
  swift_retain();
  uint64_t v13 = (void *)swift_task_alloc();
  v0[11] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1002AA5E8;
  return withTimeout<A>(_:block:)();
}

uint64_t sub_1002AA5E8()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1002AA770;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1002AA704;
  }
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(v2, 0, 0);
}

uint64_t sub_1002AA704()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002AA770()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002AA7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1002AA80C, 0, 0);
}

uint64_t sub_1002AA80C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  void *v3 = v0;
  v3[1] = sub_1002AA908;
  uint64_t v4 = *(void *)(v0 + 16);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000020, 0x80000001005911B0, sub_1002BDA24, v2, (char *)&type metadata for () + 8);
}

uint64_t sub_1002AA908()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 8);
    __asm { BRAA            X1, X16 }
  }
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1002AAA44, 0, 0);
}

uint64_t sub_1002AAA44()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002AAAA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_10005D034(&qword_1006B92F8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();
  swift_retain();

  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v8;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  swift_retain();
  sub_1000CB56C(a3, (uint64_t)sub_1002BDB00, v11);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1002AAC80(int64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int64_t a5)
{
  uint64_t v8 = type metadata accessor for FMIPItemActionStatus();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = (void *)Strong;
    if (qword_1006AE408 != -1) {
      goto LABEL_48;
    }
    while (1)
    {
      uint64_t v14 = type metadata accessor for Logger();
      sub_1000606BC(v14, (uint64_t)qword_1006D2760);
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        int64_t v55 = a1;
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "FMItemSharingContactPickerViewController: Did perform sendShareInvite action", v17, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for FMIPItemActionStatus.success(_:), v8);
      sub_1002B4DB8(&qword_1006B04E0, (void (*)(uint64_t))&type metadata accessor for FMIPItemActionStatus);
      char v18 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if (v18)
      {
        sub_10005D034(&qword_1006B92F8);
        CheckedContinuation.resume(returning:)();

        return;
      }
      uint64_t v60 = (char *)sub_100144978(a3);
      sub_10005D034(&qword_1006AFD50);
      sub_1000450A0((unint64_t *)&qword_1006BF3A0, &qword_1006AFD50);
      uint64_t v11 = (char *)BidirectionalCollection<>.joined(separator:)();
      unint64_t v23 = v22;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.error.getter();
      BOOL v26 = os_log_type_enabled(v24, v25);
      int64_t v56 = a5;
      id v51 = v13;
      if (v26)
      {
        Swift::Bool v27 = (uint8_t *)swift_slowAlloc();
        uint64_t v60 = (char *)swift_slowAlloc();
        *(_DWORD *)Swift::Bool v27 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v57 = sub_1000606F4((uint64_t)v11, v23, (uint64_t *)&v60);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "FMItemSharingContactPickerViewController: sendShareInvite - error: %s", v27, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v13 = (void *)(a3 + 64);
      uint64_t v28 = 1 << *(unsigned char *)(a3 + 32);
      uint64_t v29 = -1;
      if (v28 < 64) {
        uint64_t v29 = ~(-1 << v28);
      }
      uint64_t v9 = v29 & *(void *)(a3 + 64);
      a5 = (unint64_t)(v28 + 63) >> 6;
      uint64_t v8 = SPBeaconSharingErrorDomain;
      LODWORD(v55) = enum case for ShareItemError.sharingCircleSizeLimitReached(_:);
      unsigned int v54 = enum case for ShareItemError.pendingRequestLimitReached(_:);
      unsigned int v53 = enum case for ShareItemError.offerLimitReached(_:);
      unsigned int v52 = enum case for ShareItemError.sharedItemsCountLimitReached(_:);
      swift_bridgeObjectRetain();
      a1 = 0;
      while (1)
      {
        if (v9)
        {
          v9 &= v9 - 1;
          goto LABEL_35;
        }
        int64_t v32 = a1 + 1;
        if (__OFADD__(a1, 1)) {
          break;
        }
        if (v32 >= a5) {
          goto LABEL_46;
        }
        uint64_t v33 = *((void *)v13 + v32);
        ++a1;
        if (!v33)
        {
          a1 = v32 + 1;
          if (v32 + 1 >= a5) {
            goto LABEL_46;
          }
          uint64_t v33 = *((void *)v13 + a1);
          if (!v33)
          {
            a1 = v32 + 2;
            if (v32 + 2 >= a5) {
              goto LABEL_46;
            }
            uint64_t v33 = *((void *)v13 + a1);
            if (!v33)
            {
              a1 = v32 + 3;
              if (v32 + 3 >= a5) {
                goto LABEL_46;
              }
              uint64_t v33 = *((void *)v13 + a1);
              if (!v33)
              {
                int64_t v34 = v32 + 4;
                if (v34 >= a5) {
                  goto LABEL_46;
                }
                uint64_t v33 = *((void *)v13 + v34);
                if (!v33)
                {
                  while (1)
                  {
                    a1 = v34 + 1;
                    if (__OFADD__(v34, 1))
                    {
                      __break(1u);
                      JUMPOUT(0x1002AB678);
                    }
                    if (a1 >= a5) {
                      break;
                    }
                    uint64_t v33 = *((void *)v13 + a1);
                    ++v34;
                    if (v33) {
                      goto LABEL_34;
                    }
                  }
LABEL_46:
                  swift_release();
                  uint64_t v47 = type metadata accessor for ShareItemError();
                  sub_1002B4DB8(&qword_1006B9300, (void (*)(uint64_t))&type metadata accessor for ShareItemError);
                  uint64_t v48 = swift_allocError();
                  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v47 - 8) + 104))(v49, enum case for ShareItemError.generic(_:), v47);
                  uint64_t v60 = (char *)v48;
                  sub_10005D034(&qword_1006B92F8);
                  CheckedContinuation.resume(throwing:)();

                  return;
                }
                a1 = v34;
              }
            }
          }
        }
LABEL_34:
        uint64_t v9 = (v33 - 1) & v33;
LABEL_35:
        swift_getErrorValue();
        uint64_t v11 = v59;
        swift_errorRetain();
        uint64_t v35 = sub_10027E880((uint64_t)v11);
        unint64_t v37 = v36;
        if (v35 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v37 == v38)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          uint64_t v11 = v38;
          char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v40 & 1) == 0) {
            goto LABEL_16;
          }
        }
        swift_getErrorValue();
        switch((unint64_t)sub_10027E720(v58))
        {
          case 6uLL:
            uint64_t v41 = type metadata accessor for ShareItemError();
            sub_1002B4DB8(&qword_1006B9300, (void (*)(uint64_t))&type metadata accessor for ShareItemError);
            uint64_t v11 = (char *)swift_allocError();
            (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v41 - 8) + 104))(v42, v55, v41);
            goto LABEL_15;
          case 7uLL:
            uint64_t v30 = type metadata accessor for ShareItemError();
            sub_1002B4DB8(&qword_1006B9300, (void (*)(uint64_t))&type metadata accessor for ShareItemError);
            uint64_t v11 = (char *)swift_allocError();
            (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v30 - 8) + 104))(v31, v52, v30);
            goto LABEL_15;
          case 0xAuLL:
            uint64_t v43 = type metadata accessor for ShareItemError();
            sub_1002B4DB8(&qword_1006B9300, (void (*)(uint64_t))&type metadata accessor for ShareItemError);
            uint64_t v11 = (char *)swift_allocError();
            (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v43 - 8) + 104))(v44, v54, v43);
            goto LABEL_15;
          case 0xBuLL:
            uint64_t v45 = type metadata accessor for ShareItemError();
            sub_1002B4DB8(&qword_1006B9300, (void (*)(uint64_t))&type metadata accessor for ShareItemError);
            uint64_t v11 = (char *)swift_allocError();
            (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v45 - 8) + 104))(v46, v53, v45);
LABEL_15:
            uint64_t v60 = v11;
            sub_10005D034(&qword_1006B92F8);
            CheckedContinuation.resume(throwing:)();
            break;
          default:
            break;
        }
LABEL_16:
        swift_errorRelease();
      }
      __break(1u);
LABEL_48:
      swift_once();
    }
  }
  uint64_t v19 = type metadata accessor for ShareItemError();
  sub_1002B4DB8(&qword_1006B9300, (void (*)(uint64_t))&type metadata accessor for ShareItemError);
  uint64_t v20 = swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, enum case for ShareItemError.generic(_:), v19);
  uint64_t v60 = (char *)v20;
  sub_10005D034(&qword_1006B92F8);
  CheckedContinuation.resume(throwing:)();
}

uint64_t sub_1002AB690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  sub_10005D034(&qword_1006B4598);
  v3[5] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Destination();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1002AB784, 0, 0);
}

uint64_t sub_1002AB784()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[5];
  Person.Handle.rawValue.getter();
  Destination.init(string:)();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = (void *)v0[2];
    sub_100003F10(v0[5], &qword_1006B4598);
    void *v4 = 0;
    v4[1] = 0;
    uint64_t v5 = enum case for ContactPickerViewModel.Dependencies.ReachabilityResult.unreachable(_:);
    uint64_t v6 = type metadata accessor for ContactPickerViewModel.Dependencies.ReachabilityResult();
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v4, v5, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
  else
  {
    (*(void (**)(void, void, void))(v0[7] + 32))(v0[8], v0[5], v0[6]);
    uint64_t v11 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of QueryController.isRegistered(destination:)
                                          + async function pointer to dispatch thunk of QueryController.isRegistered(destination:));
    uint64_t v9 = (void *)swift_task_alloc();
    v0[9] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1002AB940;
    uint64_t v10 = v0[8];
    return v11(v10);
  }
}

uint64_t sub_1002AB940(char a1)
{
  *(unsigned char *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1002ABA40, 0, 0);
}

uint64_t sub_1002ABA40()
{
  int v1 = *(unsigned __int8 *)(v0 + 80);
  (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
  uint64_t v2 = *(void **)(v0 + 16);
  if (v1 == 1)
  {
    uint64_t v3 = (unsigned int *)&enum case for ContactPickerViewModel.Dependencies.ReachabilityResult.reachable(_:);
  }
  else
  {
    *uint64_t v2 = 0;
    v2[1] = 0;
    uint64_t v3 = (unsigned int *)&enum case for ContactPickerViewModel.Dependencies.ReachabilityResult.unreachable(_:);
  }
  uint64_t v4 = *v3;
  uint64_t v5 = type metadata accessor for ContactPickerViewModel.Dependencies.ReachabilityResult();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(v2, v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1002ABB30(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1002ABB50, 0, 0);
}

uint64_t sub_1002ABB50()
{
  type metadata accessor for FMContactsUtilities();
  uint64_t v1 = Person.Handle.rawValue.getter();
  char v3 = sub_100475960(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(v0 + 16);
  if (v3)
  {
    void *v4 = 0;
    v4[1] = 0;
    uint64_t v5 = (unsigned int *)&enum case for ContactPickerViewModel.Dependencies.PartOfSignedInAccountResult.yes(_:);
  }
  else
  {
    uint64_t v5 = (unsigned int *)&enum case for ContactPickerViewModel.Dependencies.PartOfSignedInAccountResult.no(_:);
  }
  uint64_t v6 = *v5;
  uint64_t v7 = type metadata accessor for ContactPickerViewModel.Dependencies.PartOfSignedInAccountResult();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v4, v6, v7);
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1002ABC3C(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = type metadata accessor for MessagingCapability();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  void v2[6] = swift_task_alloc();
  sub_10005D034(&qword_1006B4598);
  v2[7] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Destination();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[11] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[12] = v6;
  v2[13] = v5;
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_1002ABDBC, v6, v5);
}

uint64_t sub_1002ABDBC()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[7];
  Person.Handle.rawValue.getter();
  Destination.init(string:)();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = v0[7];
    swift_release();
    sub_100003F10(v4, &qword_1006B4598);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5(0);
  }
  else
  {
    uint64_t v8 = v0[5];
    uint64_t v7 = v0[6];
    uint64_t v9 = v0[4];
    (*(void (**)(void, void, void))(v0[9] + 32))(v0[10], v0[7], v0[8]);
    (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v7, enum case for MessagingCapability.supportsBeaconSharingV3(_:), v9);
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of QueryController.destinationHasCapabilityWithDataReloadIfRequired(destination:capability:)
                                                   + async function pointer to dispatch thunk of QueryController.destinationHasCapabilityWithDataReloadIfRequired(destination:capability:));
    uint64_t v10 = (void *)swift_task_alloc();
    v0[14] = v10;
    void *v10 = v0;
    v10[1] = sub_1002ABF70;
    uint64_t v11 = v0[10];
    uint64_t v12 = v0[6];
    return v13(v11, v12);
  }
}

uint64_t sub_1002ABF70(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 120) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v4 + 48);
  uint64_t v6 = *(void *)(v4 + 40);
  uint64_t v7 = *(void *)(v4 + 32);
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    uint64_t v8 = *(void *)(v4 + 96);
    uint64_t v9 = *(void *)(v4 + 104);
    uint64_t v10 = sub_1002AC1A8;
  }
  else
  {
    *(unsigned char *)(v4 + 128) = a1 & 1;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    uint64_t v8 = *(void *)(v4 + 96);
    uint64_t v9 = *(void *)(v4 + 104);
    uint64_t v10 = sub_1002AC0FC;
  }
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(v10, v8, v9);
}

uint64_t sub_1002AC0FC()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v4 = *(unsigned __int8 *)(v0 + 128);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v5(v4);
}

uint64_t sub_1002AC1A8()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4(0);
}

uint64_t sub_1002AC258(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v25 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v23 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v22 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v21 - v14;
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  os_log_type_t v16 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v10 + 8);
  v21(v13, v9);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  aBlock[4] = sub_1002BD910;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_100630A20;
  char v18 = _Block_copy(aBlock);
  id v19 = a2;
  static DispatchQoS.unspecified.getter();
  BOOL v26 = _swiftEmptyArrayStorage;
  sub_1002B4DB8((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v24);
  v21(v15, v22);
  return swift_release();
}

void sub_1002AC620(void *a1)
{
  v3[4] = State.rawValue.getter;
  v3[5] = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_10003C410;
  v3[3] = &unk_100630A48;
  uint64_t v2 = _Block_copy(v3);
  [a1 dismissViewControllerAnimated:1 completion:v2];
  _Block_release(v2);
}

void sub_1002AC6CC(uint64_t a1)
{
  BOOL v2 = sub_1000DDAA8();
  uint64_t v3 = self;
  uint64_t v4 = &selRef_viewControllerForUnknownContact_;
  if (!v2) {
    uint64_t v4 = &selRef_viewControllerForContact_;
  }
  id v15 = [v3 *v4 a1];
  [v15 setDisplayMode:1];
  [v15 setAllowsEditing:1];
  id v5 = [objc_allocWithZone((Class)CNContactStore) init];
  [v15 setContactStore:v5];

  id v6 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v15];
  [v6 setModalPresentationStyle:2];
  sub_100006060(0, (unint64_t *)&unk_1006C1470);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  id v8 = v6;
  uint64_t v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_100006060(0, &qword_1006AF860);
  id v10 = v9;
  v17.value.super.super.Class isa = (Class)v9;
  v17.is_nil = 0;
  v11.super.super.Class isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemCancel, v17, v18).super.super.isa;
  id v12 = [v15 navigationItem];
  [v12 setLeftBarButtonItem:v11.super.super.isa animated:1];

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v14 = Strong;
    [Strong presentViewController:v8 animated:1 completion:0];

    id v8 = v14;
  }
}

uint64_t sub_1002AC924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[17] = a4;
  v5[18] = a5;
  uint64_t v6 = type metadata accessor for FMIPProductType();
  v5[19] = v6;
  v5[20] = *(void *)(v6 - 8);
  v5[21] = swift_task_alloc();
  type metadata accessor for FMBeaconSharingModuleShareState(0);
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  uint64_t v7 = *(void *)(type metadata accessor for FMBeaconSharingModuleRelationshipType(0) - 8);
  v5[24] = v7;
  v5[25] = *(void *)(v7 + 64);
  v5[26] = swift_task_alloc();
  v5[27] = swift_task_alloc();
  type metadata accessor for FMBeaconSharingModuleEntry(0);
  v5[28] = swift_task_alloc();
  v5[29] = type metadata accessor for FMSelectedSection();
  v5[30] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for FMIPItem();
  v5[31] = v8;
  v5[32] = *(void *)(v8 - 8);
  v5[33] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[34] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[35] = v10;
  v5[36] = v9;
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_1002ACB7C, v10, v9);
}

uint64_t sub_1002ACB7C()
{
  uint64_t v1 = v0[30];
  uint64_t v2 = *(void *)(*(void *)(v0[17] + qword_1006B8E08) + 56)
     + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_1002BCBDC(v2, v1, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    uint64_t v9 = v0[30];
    swift_release();
    sub_1002BCB14(v9, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = v0[1];
    __asm { BRAA            X1, X16 }
  }
  uint64_t v3 = v0[28];
  uint64_t v4 = v0[18];
  (*(void (**)(void, void, void))(v0[32] + 32))(v0[33], v0[30], v0[31]);
  sub_1002BCBDC(v4, v3, type metadata accessor for FMBeaconSharingModuleEntry);
  uint64_t v5 = sub_10005D034(&qword_1006B9050);
  v0[37] = v5;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 2, v5))
  {
    uint64_t v6 = v0[33];
    uint64_t v7 = v0[31];
    uint64_t v8 = v0[32];
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    goto LABEL_5;
  }
  uint64_t v11 = v0[28];
  uint64_t v12 = v0[22];
  uint64_t v13 = v0[23];
  uint64_t v14 = v11 + *(int *)(v5 + 48);
  sub_1002BCB74(v11, v0[27], type metadata accessor for FMBeaconSharingModuleRelationshipType);
  sub_1002BCB74(v14, v13, type metadata accessor for FMBeaconSharingModuleShareState);
  uint64_t v15 = enum case for FMIPBeaconShareState.failed(_:);
  uint64_t v16 = type metadata accessor for FMIPBeaconShareState();
  UIAction_optional v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104);
  v17(v12, v15, v16);
  uint64_t v18 = sub_10005D034(&qword_1006B9058);
  id v19 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v12, 0, 1, v18);
  LOBYTE(v13) = sub_1002BB390(v13, v12);
  sub_1002BCB14(v12, type metadata accessor for FMBeaconSharingModuleShareState);
  if (v13)
  {
    uint64_t v21 = v0[20];
    uint64_t v20 = v0[21];
    uint64_t v22 = v0[19];
    FMIPItem.productType.getter();
    char v23 = FMIPProductType.isAirTag.getter();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    id v24 = [self mainBundle];
    unint64_t v25 = 0xD000000000000018;
    if (v23)
    {
      unint64_t v26 = 0xD00000000000002DLL;
      unint64_t v59 = 0x80000001005828D0;
      Swift::Bool v27 = "ITEM_DETAIL_SHARING_FAILED_DESCRIPTION_AIRTAG";
    }
    else
    {
      unint64_t v26 = 0xD00000000000002BLL;
      unint64_t v59 = 0x80000001005828D0;
      Swift::Bool v27 = "ITEM_DETAIL_SHARING_FAILED_DESCRIPTION_ITEM";
    }
    unint64_t v44 = (unint64_t)(v27 - 32) | 0x8000000000000000;
    v45.value._unint64_t object = (void *)0x80000001005828B0;
    v45.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v46._uint64_t countAndFlagsBits = 0;
    v46._unint64_t object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v26, v45, (NSBundle)v24, v46, *(Swift::String *)&v25);
    uint64_t v47 = v0[17];

    id v48 = [self mainBundle];
    v66._uint64_t countAndFlagsBits = 0xD000000000000018;
    v49._uint64_t countAndFlagsBits = 0xD000000000000020;
    v66._unint64_t object = (void *)0x80000001005828D0;
    v49._unint64_t object = (void *)0x8000000100591240;
    v50.value._unint64_t object = (void *)0x80000001005828B0;
    v50.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v51._uint64_t countAndFlagsBits = 0;
    v51._unint64_t object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v49, v50, (NSBundle)v48, v51, v66);

    NSString v52 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v53 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v54 = [self alertControllerWithTitle:v52 message:v53 preferredStyle:1];
    v0[38] = v54;

    uint64_t v55 = *(void *)(v47 + qword_1006B8E10);
    v0[39] = v55;
    id v56 = v54;
    uint64_t v57 = sub_1002AD3A4;
    uint64_t v58 = v55;
    goto LABEL_18;
  }
  uint64_t v29 = v0[26];
  uint64_t v28 = v0[27];
  id v63 = v19;
  uint64_t v30 = v0[24];
  uint64_t v31 = v0[25];
  uint64_t v64 = v0[23];
  uint64_t v62 = v0[22];
  int64_t v32 = (void *)v0[17];
  id v33 = [self alertControllerWithTitle:0 message:0 preferredStyle:0];
  v0[42] = v33;
  id v60 = v33;
  sub_10029E6E4();
  uint64_t v61 = v17;
  sub_1002BCBDC(v28, v29, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  unint64_t v34 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  unint64_t v35 = (v31 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  sub_1002BCB74(v29, v36 + v34, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  *(void *)(v36 + v35) = v32;
  id v37 = v32;
  NSString v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v0[6] = sub_1002BDCA8;
  v0[7] = v36;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10000841C;
  v0[5] = &unk_100630AE8;
  uint64_t v39 = _Block_copy(v0 + 2);
  swift_release();
  id v40 = [self actionWithTitle:v38 style:0 handler:v39];
  v0[43] = v40;
  _Block_release(v39);

  [v60 addAction:v40];
  v61(v62, enum case for FMIPBeaconShareState.requestReceived(_:), v16);
  v63(v62, 0, 1, v18);
  LOBYTE(v38) = sub_1002BB390(v64, v62);
  sub_1002BCB14(v62, type metadata accessor for FMBeaconSharingModuleShareState);
  if ((v38 & 1) == 0)
  {
    uint64_t v58 = *(void *)(v0[17] + qword_1006B8E10);
    v0[46] = v58;
    uint64_t v57 = sub_1002ADDAC;
LABEL_18:
    return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(v57, v58, 0);
  }
  uint64_t v41 = (void *)swift_task_alloc();
  v0[44] = v41;
  *uint64_t v41 = v0;
  v41[1] = sub_1002ADBF4;
  uint64_t v42 = v0[18];
  return sub_1002AED14(v42);
}

uint64_t sub_1002AD3A4()
{
  *(unsigned char *)(v0 + 392) = *(unsigned char *)(*(void *)(v0 + 312)
                                  + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_viewModel
                                  + 18);
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1002AD3D4, *(void *)(v0 + 280), *(void *)(v0 + 288));
}

uint64_t sub_1002AD3D4()
{
  if (*(unsigned char *)(v0 + 392) == 1)
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 320) = v1;
    void *v1 = v0;
    v1[1] = sub_1002AD780;
    uint64_t v2 = *(void *)(v0 + 144);
    return sub_1002AFD10(v2);
  }
  else
  {

    swift_release();
    uint64_t v4 = *(void **)(v0 + 304);
    uint64_t v5 = *(void *)(v0 + 216);
    uint64_t v6 = *(void *)(v0 + 224) + *(int *)(*(void *)(v0 + 296) + 64);
    sub_1002BCB14(*(void *)(v0 + 184), type metadata accessor for FMBeaconSharingModuleShareState);
    sub_1002BCB14(v5, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    id v8 = [self mainBundle];
    v23._uint64_t countAndFlagsBits = 0xD000000000000018;
    v9._uint64_t countAndFlagsBits = 0xD000000000000025;
    v23._unint64_t object = (void *)0x80000001005828D0;
    v9._unint64_t object = (void *)0x80000001005911E0;
    v10.value._unint64_t object = (void *)0x80000001005828B0;
    v10.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v11._uint64_t countAndFlagsBits = 0;
    v11._unint64_t object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v23);

    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 96) = State.rawValue.getter;
    *(void *)(v0 + 104) = 0;
    *(void *)(v0 + 64) = _NSConcreteStackBlock;
    *(void *)(v0 + 72) = 1107296256;
    *(void *)(v0 + 80) = sub_10000841C;
    *(void *)(v0 + 88) = &unk_100630B10;
    uint64_t v13 = _Block_copy((const void *)(v0 + 64));
    swift_release();
    id v14 = [self actionWithTitle:v12 style:1 handler:v13];
    _Block_release(v13);

    [v4 addAction:v14];
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v16 = (void *)Strong;
      id v17 = v4;
      [v16 presentViewController:v17 animated:1 completion:0];
    }
    uint64_t v19 = *(void *)(v0 + 256);
    uint64_t v18 = *(void *)(v0 + 264);
    uint64_t v20 = *(void *)(v0 + 248);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
    return v21();
  }
}

uint64_t sub_1002AD780(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 328) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 288);
  uint64_t v4 = *(void *)(v2 + 280);
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_1002AD8A8, v4, v3);
}

uint64_t sub_1002AD8A8()
{
  uint64_t v1 = v0[41];
  swift_release();
  if (v1)
  {
    uint64_t v2 = (void *)v0[41];
    uint64_t v3 = (void *)v0[38];
    [v3 addAction:v2];
  }
  else
  {
    uint64_t v3 = (void *)v0[38];
  }

  uint64_t v4 = (void *)v0[38];
  uint64_t v5 = v0[27];
  uint64_t v6 = v0[28] + *(int *)(v0[37] + 64);
  sub_1002BCB14(v0[23], type metadata accessor for FMBeaconSharingModuleShareState);
  sub_1002BCB14(v5, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  id v8 = [self mainBundle];
  v24._uint64_t countAndFlagsBits = 0xD000000000000018;
  v9._uint64_t countAndFlagsBits = 0xD000000000000025;
  v24._unint64_t object = (void *)0x80000001005828D0;
  v9._unint64_t object = (void *)0x80000001005911E0;
  v10.value._unint64_t object = (void *)0x80000001005828B0;
  v10.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v11._uint64_t countAndFlagsBits = 0;
  v11._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v24);

  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v0[12] = State.rawValue.getter;
  v0[13] = 0;
  v0[8] = _NSConcreteStackBlock;
  v0[9] = 1107296256;
  v0[10] = sub_10000841C;
  v0[11] = &unk_100630B10;
  uint64_t v13 = _Block_copy(v0 + 8);
  swift_release();
  id v14 = [self actionWithTitle:v12 style:1 handler:v13];
  _Block_release(v13);

  [v4 addAction:v14];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = (void *)Strong;
    id v17 = v4;
    [v16 presentViewController:v17 animated:1 completion:0];
  }
  uint64_t v19 = v0[32];
  uint64_t v18 = v0[33];
  uint64_t v20 = v0[31];

  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_1002ADBF4(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 360) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 288);
  uint64_t v4 = *(void *)(v2 + 280);
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_1002ADD1C, v4, v3);
}

uint64_t sub_1002ADD1C()
{
  uint64_t v1 = *(void **)(v0 + 360);
  if (v1)
  {
    [*(id *)(v0 + 336) addAction:*(void *)(v0 + 360)];
  }
  *(void *)(v0 + 368) = *(void *)(*(void *)(v0 + 136) + qword_1006B8E10);
  return ((uint64_t (*)(uint64_t (*)()))_swift_task_switch)(sub_1002ADDAC);
}

uint64_t sub_1002ADDAC()
{
  *(unsigned char *)(v0 + 393) = *(unsigned char *)(*(void *)(v0 + 368)
                                  + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_viewModel
                                  + 18);
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1002ADDDC, *(void *)(v0 + 280), *(void *)(v0 + 288));
}

uint64_t sub_1002ADDDC()
{
  if (*(unsigned char *)(v0 + 393) == 1)
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 376) = v1;
    void *v1 = v0;
    v1[1] = sub_1002AE190;
    uint64_t v2 = *(void *)(v0 + 144);
    return sub_1002AFD10(v2);
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 344);

    swift_release();
    uint64_t v5 = *(void **)(v0 + 336);
    uint64_t v6 = *(void *)(v0 + 216);
    uint64_t v7 = *(void *)(v0 + 224) + *(int *)(*(void *)(v0 + 296) + 64);
    sub_1002BCB14(*(void *)(v0 + 184), type metadata accessor for FMBeaconSharingModuleShareState);
    sub_1002BCB14(v6, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    id v9 = [self mainBundle];
    v24._uint64_t countAndFlagsBits = 0xD000000000000018;
    v10._uint64_t countAndFlagsBits = 0xD000000000000025;
    v24._unint64_t object = (void *)0x80000001005828D0;
    v10._unint64_t object = (void *)0x80000001005911E0;
    v11.value._unint64_t object = (void *)0x80000001005828B0;
    v11.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v12._uint64_t countAndFlagsBits = 0;
    v12._unint64_t object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v24);

    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 96) = State.rawValue.getter;
    *(void *)(v0 + 104) = 0;
    *(void *)(v0 + 64) = _NSConcreteStackBlock;
    *(void *)(v0 + 72) = 1107296256;
    *(void *)(v0 + 80) = sub_10000841C;
    *(void *)(v0 + 88) = &unk_100630B10;
    id v14 = _Block_copy((const void *)(v0 + 64));
    swift_release();
    id v15 = [self actionWithTitle:v13 style:1 handler:v14];
    _Block_release(v14);

    [v5 addAction:v15];
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v17 = (void *)Strong;
      id v18 = v5;
      [v17 presentViewController:v18 animated:1 completion:0];
    }
    uint64_t v20 = *(void *)(v0 + 256);
    uint64_t v19 = *(void *)(v0 + 264);
    uint64_t v21 = *(void *)(v0 + 248);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
}

uint64_t sub_1002AE190(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 384) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 288);
  uint64_t v4 = *(void *)(v2 + 280);
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_1002AE2B8, v4, v3);
}

uint64_t sub_1002AE2B8()
{
  uint64_t v1 = v0[48];
  swift_release();
  if (v1)
  {
    uint64_t v2 = (void *)v0[48];
    uint64_t v3 = (void *)v0[42];
    uint64_t v4 = (void *)v0[43];
    [v3 addAction:v2];
  }
  else
  {
    uint64_t v3 = (void *)v0[42];
    uint64_t v2 = (void *)v0[43];
  }

  uint64_t v5 = (void *)v0[42];
  uint64_t v6 = v0[27];
  uint64_t v7 = v0[28] + *(int *)(v0[37] + 64);
  sub_1002BCB14(v0[23], type metadata accessor for FMBeaconSharingModuleShareState);
  sub_1002BCB14(v6, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  id v9 = [self mainBundle];
  v25._uint64_t countAndFlagsBits = 0xD000000000000018;
  v10._uint64_t countAndFlagsBits = 0xD000000000000025;
  v25._unint64_t object = (void *)0x80000001005828D0;
  v10._unint64_t object = (void *)0x80000001005911E0;
  v11.value._unint64_t object = (void *)0x80000001005828B0;
  v11.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v12._uint64_t countAndFlagsBits = 0;
  v12._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v25);

  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v0[12] = State.rawValue.getter;
  v0[13] = 0;
  v0[8] = _NSConcreteStackBlock;
  v0[9] = 1107296256;
  v0[10] = sub_10000841C;
  v0[11] = &unk_100630B10;
  id v14 = _Block_copy(v0 + 8);
  swift_release();
  id v15 = [self actionWithTitle:v13 style:1 handler:v14];
  _Block_release(v14);

  [v5 addAction:v15];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v17 = (void *)Strong;
    id v18 = v5;
    [v17 presentViewController:v18 animated:1 completion:0];
  }
  uint64_t v20 = v0[32];
  uint64_t v19 = v0[33];
  uint64_t v21 = v0[31];

  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

void sub_1002AE60C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for FMFFriend();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v5);
  id v9 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  Swift::String_optional v11 = (char *)aBlock - v10;
  uint64_t v12 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  __chkstk_darwin(v12);
  id v14 = (void *)((char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1002BCBDC(a2, (uint64_t)v14, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v15 = (void *)*v14;
    sub_1002AC6CC(*v14);
  }
  else
  {
    uint64_t v16 = *(void (**)(char *, uint64_t *, uint64_t))(v6 + 32);
    v16(v11, v14, v5);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v18 = (void *)Strong;
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
      unint64_t v19 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = a3;
      v16((char *)(v20 + v19), (uint64_t *)v9, v5);
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = sub_1002BDDA0;
      *(void *)(v21 + 24) = v20;
      aBlock[4] = sub_10007245C;
      aBlock[5] = v21;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10003C410;
      aBlock[3] = &unk_100630B88;
      uint64_t v22 = _Block_copy(aBlock);
      id v23 = a3;
      swift_retain();
      swift_release();
      [v18 dismissViewControllerAnimated:1 completion:v22];
      _Block_release(v22);
      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
}

uint64_t sub_1002AE908(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMSelectedSection();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = &v28[-v9];
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = &v28[-v12];
  __chkstk_darwin(v11);
  id v15 = &v28[-v14];
  uint64_t v16 = *(void *)(a1 + qword_1006B8E08);
  uint64_t v17 = *(void *)(v16 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_1002BCBDC(v17, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_1002BCBDC((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  LODWORD(v17) = swift_getEnumCaseMultiPayload();
  sub_1002BCB14((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  if (v17 == 2)
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_1000606BC(v18, (uint64_t)qword_1006D1E98);
    unint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMURLHandler: ignoring currentSelection", v21, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v22 = *(void *)(v16 + 56);
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = v22 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess();
    sub_1002BCBDC(v23, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    swift_beginAccess();
    swift_retain();
    sub_100009A88((uint64_t)v10, v23);
    swift_endAccess();
    sub_100053CA0((unint64_t)v7);
    sub_1002BCB14((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    sub_1002BCB14((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    swift_release();
  }
  uint64_t v24 = *(void *)(v16 + 56);
  uint64_t v25 = type metadata accessor for FMFFriend();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v10, a2, v25);
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = v24 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_1002BCBDC(v26, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  swift_beginAccess();
  swift_retain();
  sub_100009A88((uint64_t)v10, v26);
  swift_endAccess();
  sub_100053CA0((unint64_t)v7);
  sub_1002BCB14((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_1002BCB14((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  swift_release();
  return sub_1002BCB14((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
}

uint64_t sub_1002AED14(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  type metadata accessor for FMBeaconSharingModuleEntry(0);
  v2[10] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for UUID();
  v2[11] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[12] = v4;
  v2[13] = *(void *)(v4 + 64);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[16] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[17] = v6;
  v2[18] = v5;
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_1002AEE4C, v6, v5);
}

uint64_t sub_1002AEE4C()
{
  *(void *)(v0 + 152) = *(void *)(*(void *)(v0 + 72) + qword_1006B8E10);
  return ((uint64_t (*)(uint64_t (*)()))_swift_task_switch)(sub_1002AEE78);
}

uint64_t sub_1002AEE78()
{
  uint64_t v1 = *(void *)(v0 + 144);
  *(unsigned char *)(v0 + 160) = *(unsigned char *)(*(void *)(v0 + 152)
                                  + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_viewModel
                                  + 17);
  return ((uint64_t (*)(uint64_t (*)(), void, uint64_t))_swift_task_switch)(sub_1002AEEA8, *(void *)(v0 + 136), v1);
}

uint64_t sub_1002AEEA8()
{
  int v1 = *(unsigned __int8 *)(v0 + 160);
  swift_release();
  if (v1 != 1) {
    goto LABEL_4;
  }
  uint64_t v2 = *(void *)(v0 + 80);
  sub_1002BCBDC(*(void *)(v0 + 64), v2, type metadata accessor for FMBeaconSharingModuleEntry);
  uint64_t v3 = sub_10005D034(&qword_1006B9050);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 2, v3))
  {
    sub_1002BCB14(*(void *)(v0 + 80), type metadata accessor for FMBeaconSharingModuleEntry);
LABEL_4:
    id v4 = 0;
    goto LABEL_6;
  }
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v6 = *(void *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 96);
  uint64_t v9 = *(void *)(v0 + 80);
  uint64_t v8 = *(void *)(v0 + 88);
  uint64_t v25 = *(void **)(v0 + 72);
  uint64_t v10 = v9 + *(int *)(v3 + 48);
  uint64_t v22 = *(void *)(v0 + 104);
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  uint64_t v24 = v6;
  v23(v6, v9 + *(int *)(v3 + 64), v8);
  sub_1002BCB14(v10, type metadata accessor for FMBeaconSharingModuleShareState);
  sub_1002BCB14(v9, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  id v11 = [self mainBundle];
  v27._uint64_t countAndFlagsBits = 0xD000000000000018;
  v12._uint64_t countAndFlagsBits = 0xD000000000000025;
  v27._unint64_t object = (void *)0x80000001005828D0;
  v12._unint64_t object = (void *)0x8000000100591390;
  v13.value._unint64_t object = (void *)0x80000001005828B0;
  v13.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v14._uint64_t countAndFlagsBits = 0;
  v14._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v27);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v6, v8);
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = swift_allocObject();
  v23(v16 + v15, v5, v8);
  *(void *)(v16 + ((v22 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
  id v17 = v25;
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 48) = sub_1002BE5F4;
  *(void *)(v0 + 56) = v16;
  *(void *)(v0 + 16) = _NSConcreteStackBlock;
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 32) = sub_10000841C;
  *(void *)(v0 + 40) = &unk_100630CF0;
  unint64_t v19 = _Block_copy((const void *)(v0 + 16));
  swift_release();
  id v4 = [self actionWithTitle:v18 style:0 handler:v19];
  _Block_release(v19);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v24, v8);
LABEL_6:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v20 = *(uint64_t (**)(id))(v0 + 8);
  return v20(v4);
}

uint64_t sub_1002AF244(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for UUID();
  __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t))(v7 + 16))((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  type metadata accessor for FMIPAcceptShareAction();
  swift_allocObject();
  uint64_t v8 = FMIPAcceptShareAction.init(shareIdentifier:)();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  swift_retain();
  id v10 = a3;
  sub_1000CBE40(v8, (uint64_t)sub_1002BE70C, v9);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1002AF39C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v20 = a2;
  uint64_t v5 = type metadata accessor for FMIPItemActionStatus();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10005D034(&qword_1006B4580);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  type metadata accessor for MainActor();
  swift_errorRetain();
  id v13 = a3;
  uint64_t v14 = static MainActor.shared.getter();
  unint64_t v15 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v16 = (v7 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v14;
  *(void *)(v17 + 24) = &protocol witness table for MainActor;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v17 + v15, v8, v5);
  *(void *)(v17 + v16) = v20;
  *(void *)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8)) = v13;
  sub_10016CC14((uint64_t)v11, (uint64_t)&unk_1006B9320, v17);
  return swift_release();
}

uint64_t sub_1002AF5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[17] = a5;
  v6[18] = a6;
  v6[16] = a4;
  uint64_t v7 = type metadata accessor for FMIPItemActionStatus();
  v6[19] = v7;
  v6[20] = *(void *)(v7 - 8);
  v6[21] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[22] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_1002AF6C0, v9, v8);
}

uint64_t sub_1002AF6C0()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[20];
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for FMIPItemActionStatus.success(_:), v2);
  sub_1002B4DB8(&qword_1006B04E0, (void (*)(uint64_t))&type metadata accessor for FMIPItemActionStatus);
  char v4 = dispatch thunk of static Equatable.== infix(_:_:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  if (v4) {
    goto LABEL_14;
  }
  uint64_t v5 = v0 + 2;
  uint64_t v6 = v0[17];
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  uint64_t v7 = self;
  id v8 = [v7 mainBundle];
  v43._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v43._unint64_t object = (void *)0x800000010058F620;
  v9._uint64_t countAndFlagsBits = 0x5F4552554C494146;
  v9._unint64_t object = (void *)0xED0000454C544954;
  v10._uint64_t countAndFlagsBits = 0;
  v10._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v43);

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v11 = [v7 mainBundle];
  v44._uint64_t countAndFlagsBits = 0xD000000000000021;
  v44._unint64_t object = (void *)0x8000000100582930;
  v12._uint64_t countAndFlagsBits = 0x5F4552554C494146;
  v12._unint64_t object = (void *)0xEF4547415353454DLL;
  v13._uint64_t countAndFlagsBits = 0;
  v13._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v44);

  if (v6)
  {
    swift_getErrorValue();
    uint64_t v14 = v0[9];
    swift_errorRetain();
    uint64_t v15 = sub_10027E880(v14);
    uint64_t v17 = v16;
    if (v15 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v17 == v18)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
      {
LABEL_10:
        swift_errorRelease();
        uint64_t v5 = v0 + 2;
        goto LABEL_11;
      }
    }
    swift_getErrorValue();
    unint64_t v20 = (unint64_t)sub_10027E720(v0[12]);
    if (v20 <= 0xD && ((1 << v20) & 0x3080) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v21 = [v7 mainBundle];
      v22._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
      v45._unint64_t object = (void *)0x80000001005828D0;
      v22._unint64_t object = (void *)0x8000000100586820;
      v23.value._uint64_t countAndFlagsBits = 0xD000000000000013;
      v23.value._unint64_t object = (void *)0x80000001005828B0;
      v24._uint64_t countAndFlagsBits = 0;
      v24._unint64_t object = (void *)0xE000000000000000;
      v45._uint64_t countAndFlagsBits = 0xD000000000000018;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v45);

      id v25 = [v7 mainBundle];
      v26._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
      v46._unint64_t object = (void *)0x80000001005828D0;
      v26._unint64_t object = (void *)0x8000000100586850;
      v27.value._uint64_t countAndFlagsBits = 0xD000000000000013;
      v27.value._unint64_t object = (void *)0x80000001005828B0;
      v28._uint64_t countAndFlagsBits = 0;
      v28._unint64_t object = (void *)0xE000000000000000;
      v46._uint64_t countAndFlagsBits = 0xD000000000000018;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v26, v27, (NSBundle)v25, v28, v46);
    }
    goto LABEL_10;
  }
LABEL_11:
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v31 = [self alertControllerWithTitle:v29 message:v30 preferredStyle:1];

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v32 = [v7 mainBundle];
  v47._unint64_t object = (void *)0x800000010057F840;
  v33._uint64_t countAndFlagsBits = 0x4F545455425F4B4FLL;
  v33._unint64_t object = (void *)0xEF454C5449545F4ELL;
  v34._uint64_t countAndFlagsBits = 0;
  v34._unint64_t object = (void *)0xE000000000000000;
  v47._uint64_t countAndFlagsBits = 0xD000000000000021;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v33, (Swift::String_optional)0, (NSBundle)v32, v34, v47);

  NSString v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v0[6] = State.rawValue.getter;
  v0[7] = 0;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10000841C;
  v0[5] = &unk_100630D68;
  uint64_t v36 = _Block_copy(v5);
  swift_release();
  id v37 = [self actionWithTitle:v35 style:0 handler:v36];
  _Block_release(v36);

  [v31 addAction:v37];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v39 = Strong;
    [Strong presentViewController:v31 animated:1 completion:0];
  }
LABEL_14:
  swift_task_dealloc();
  id v40 = (uint64_t (*)(void))v0[1];
  return v40();
}

uint64_t sub_1002AFD10(uint64_t a1)
{
  v2[11] = a1;
  v2[12] = v1;
  uint64_t v3 = type metadata accessor for FMFFriend();
  v2[13] = v3;
  v2[14] = *(void *)(v3 - 8);
  v2[15] = swift_task_alloc();
  sub_10005D034((uint64_t *)&unk_1006AFE30);
  v2[16] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for FMIPItem();
  v2[17] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[18] = v5;
  v2[19] = *(void *)(v5 + 64);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  sub_10005D034((uint64_t *)&unk_1006B1760);
  v2[23] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for FMIPBeaconShareState();
  v2[24] = v6;
  v2[25] = *(void *)(v6 - 8);
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  type metadata accessor for FMBeaconSharingModuleEntry(0);
  v2[28] = swift_task_alloc();
  v2[29] = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  type metadata accessor for FMBeaconSharingModuleShareState(0);
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  v2[36] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for UUID();
  v2[37] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[38] = v8;
  v2[39] = *(void *)(v8 + 64);
  v2[40] = swift_task_alloc();
  v2[41] = swift_task_alloc();
  v2[42] = swift_task_alloc();
  v2[43] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[44] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[45] = v10;
  v2[46] = v9;
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_1002B00A8, v10, v9);
}

uint64_t sub_1002B00A8()
{
  *(void *)(v0 + 376) = *(void *)(*(void *)(v0 + 96) + qword_1006B8E10);
  return ((uint64_t (*)(uint64_t (*)()))_swift_task_switch)(sub_1002B00D4);
}

uint64_t sub_1002B00D4()
{
  uint64_t v1 = *(void *)(v0 + 368);
  *(unsigned char *)(v0 + 424) = *(unsigned char *)(*(void *)(v0 + 376)
                                  + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_viewModel
                                  + 18);
  return ((uint64_t (*)(uint64_t (*)(), void, uint64_t))_swift_task_switch)(sub_1002B0104, *(void *)(v0 + 360), v1);
}

uint64_t sub_1002B0104()
{
  if (*(unsigned char *)(v0 + 424) != 1)
  {
    swift_release();
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(void *)(v0 + 8);
    __asm { BRAA            X2, X16 }
  }
  uint64_t v1 = *(void *)(v0 + 224);
  sub_1002BCBDC(*(void *)(v0 + 88), v1, type metadata accessor for FMBeaconSharingModuleEntry);
  uint64_t v2 = sub_10005D034(&qword_1006B9050);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 2, v2))
  {
    uint64_t v3 = *(void *)(v0 + 224);
    swift_release();
    sub_1002BCB14(v3, type metadata accessor for FMBeaconSharingModuleEntry);
    goto LABEL_5;
  }
  uint64_t v5 = *(void *)(v0 + 336);
  uint64_t v6 = *(void *)(v0 + 296);
  uint64_t v7 = *(void *)(v0 + 304);
  uint64_t v8 = *(void *)(v0 + 280);
  uint64_t v9 = *(void *)(v0 + 288);
  uint64_t v10 = *(void *)(v0 + 224);
  uint64_t v11 = v10 + *(int *)(v2 + 48);
  uint64_t v12 = v10 + *(int *)(v2 + 64);
  uint64_t v13 = *(void *)(v0 + 272);
  uint64_t v47 = *(void *)(v0 + 264);
  uint64_t v48 = *(void *)(v0 + 344);
  uint64_t v14 = *(void *)(v0 + 256);
  sub_1002BCB74(v10, v14, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  sub_1002BCB74(v11, v8, type metadata accessor for FMBeaconSharingModuleShareState);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  *(void *)(v0 + 384) = v15;
  *(void *)(v0 + 392) = (v7 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v15(v5, v12, v6);
  sub_1002BCBDC(v8, v9, type metadata accessor for FMBeaconSharingModuleShareState);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  *(void *)(v0 + 400) = v16;
  *(void *)(v0 + 408) = (v7 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v16(v48, v5, v6);
  sub_1002BCBDC(v14, v47, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  sub_1002BCBDC(v8, v13, type metadata accessor for FMBeaconSharingModuleShareState);
  uint64_t v17 = sub_10005D034(&qword_1006B9058);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v13, 1, v17) == 1)
  {
    uint64_t v18 = *(void *)(v0 + 280);
    uint64_t v19 = *(void *)(v0 + 256);
    unint64_t v20 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 304) + 8);
    v20(*(void *)(v0 + 336), *(void *)(v0 + 296));
    sub_1002BCB14(v18, type metadata accessor for FMBeaconSharingModuleShareState);
    sub_1002BCB14(v19, type metadata accessor for FMBeaconSharingModuleRelationshipType);
LABEL_13:
    char v34 = 0;
LABEL_14:
    *(unsigned char *)(v0 + 425) = v34;
    *(void *)(v0 + 416) = v20;
    uint64_t v35 = *(void *)(v0 + 376);
    return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(sub_1002B0834, v35, 0);
  }
  uint64_t v21 = *(void *)(v0 + 208);
  uint64_t v22 = *(void *)(v0 + 216);
  uint64_t v23 = *(void *)(v0 + 192);
  uint64_t v24 = *(void *)(v0 + 200);
  (*(void (**)(uint64_t, void, uint64_t))(v24 + 32))(v22, *(void *)(v0 + 272), v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v21, v22, v23);
  int v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 88))(v21, v23);
  if (v25 == enum case for FMIPBeaconShareState.accepting(_:)
    || v25 == enum case for FMIPBeaconShareState.declining(_:))
  {
    uint64_t v26 = *(void *)(v0 + 336);
    uint64_t v27 = *(void *)(v0 + 296);
    uint64_t v28 = *(void *)(v0 + 304);
    uint64_t v29 = *(void *)(v0 + 280);
    uint64_t v30 = *(void *)(v0 + 256);
    uint64_t v31 = *(void *)(v0 + 208);
    uint64_t v32 = *(void *)(v0 + 192);
    uint64_t v33 = *(void *)(v0 + 200);
    (*(void (**)(void, uint64_t))(v33 + 8))(*(void *)(v0 + 216), v32);
    unint64_t v20 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v20(v26, v27);
    sub_1002BCB14(v29, type metadata accessor for FMBeaconSharingModuleShareState);
    sub_1002BCB14(v30, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    (*(void (**)(uint64_t, uint64_t))(v33 + 96))(v31, v32);
    swift_release();
    goto LABEL_13;
  }
  if (v25 == enum case for FMIPBeaconShareState.unknown(_:))
  {
LABEL_18:
    uint64_t v36 = *(void *)(v0 + 336);
    uint64_t v37 = *(void *)(v0 + 296);
    uint64_t v38 = *(void *)(v0 + 304);
    uint64_t v39 = *(void *)(v0 + 280);
    uint64_t v40 = *(void *)(v0 + 256);
    (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 216), *(void *)(v0 + 192));
    unint64_t v20 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v20(v36, v37);
    sub_1002BCB14(v39, type metadata accessor for FMBeaconSharingModuleShareState);
    sub_1002BCB14(v40, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    goto LABEL_13;
  }
  if (v25 == enum case for FMIPBeaconShareState.invitationSent(_:)) {
    goto LABEL_20;
  }
  if (v25 == enum case for FMIPBeaconShareState.invitationReceived(_:)) {
    goto LABEL_18;
  }
  if (v25 == enum case for FMIPBeaconShareState.requestSent(_:)) {
    goto LABEL_20;
  }
  if (v25 == enum case for FMIPBeaconShareState.requestReceived(_:)
    || v25 == enum case for FMIPBeaconShareState.accepted(_:)
    || v25 == enum case for FMIPBeaconShareState.expired(_:)
    || v25 == enum case for FMIPBeaconShareState.withdrawing(_:))
  {
    goto LABEL_18;
  }
  if (v25 == enum case for FMIPBeaconShareState.failed(_:))
  {
LABEL_20:
    uint64_t v41 = *(void *)(v0 + 336);
    uint64_t v42 = *(void *)(v0 + 296);
    uint64_t v43 = *(void *)(v0 + 304);
    uint64_t v44 = *(void *)(v0 + 280);
    uint64_t v45 = *(void *)(v0 + 256);
    (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 216), *(void *)(v0 + 192));
    unint64_t v20 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    v20(v41, v42);
    sub_1002BCB14(v44, type metadata accessor for FMBeaconSharingModuleShareState);
    sub_1002BCB14(v45, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    char v34 = 1;
    goto LABEL_14;
  }
  return _diagnoseUnexpectedEnumCase<A>(type:)();
}

uint64_t sub_1002B0834()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[47] + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_beaconIdentifier;
  swift_beginAccess();
  sub_100006AB0(v2, v1, (uint64_t *)&unk_1006B1760);
  uint64_t v3 = v0[45];
  uint64_t v4 = v0[46];
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_1002B08CC, v3, v4);
}

uint64_t sub_1002B08CC()
{
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v3 = *(void *)(v0 + 184);
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v0 + 416);
    uint64_t v5 = *(void *)(v0 + 344);
    uint64_t v6 = *(void *)(v0 + 296);
    uint64_t v7 = *(void *)(v0 + 288);
    uint64_t v8 = *(void *)(v0 + 184);
    sub_1002BCB14(*(void *)(v0 + 264), type metadata accessor for FMBeaconSharingModuleRelationshipType);
    sub_1002BCB14(v7, type metadata accessor for FMBeaconSharingModuleShareState);
    v4(v5, v6);
    uint64_t v9 = (uint64_t *)&unk_1006B1760;
    uint64_t v10 = v8;
LABEL_8:
    sub_100003F10(v10, v9);
    id v79 = 0;
    goto LABEL_15;
  }
  uint64_t v11 = *(void *)(v0 + 96);
  (*(void (**)(void, void, void))(v0 + 384))(*(void *)(v0 + 328), *(void *)(v0 + 184), *(void *)(v0 + 296));
  uint64_t v12 = *(void *)(v11 + qword_1006B8E08);
  swift_retain();
  uint64_t v13 = UUID.uuidString.getter();
  uint64_t v15 = v14;
  uint64_t v16 = FMIPManager.items.getter();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_100140C38(v16, v13, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)v17 + 2))
  {
    (*(void (**)(void, char *, void))(*(void *)(v0 + 144) + 16))(*(void *)(v0 + 128), &v17[(*(unsigned __int8 *)(*(void *)(v0 + 144) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0 + 144) + 80)], *(void *)(v0 + 136));
    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v18 = 1;
  }
  uint64_t v19 = *(void *)(v0 + 136);
  uint64_t v20 = *(void *)(v0 + 144);
  uint64_t v21 = *(void *)(v0 + 128);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v21, v18, 1, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v21, 1, v19) == 1)
  {
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v0 + 416);
    uint64_t v23 = *(void *)(v0 + 344);
    uint64_t v24 = *(void *)(v0 + 296);
    uint64_t v25 = *(void *)(v0 + 288);
    uint64_t v26 = *(void *)(v0 + 264);
    uint64_t v27 = *(void *)(v0 + 128);
    v22(*(void *)(v0 + 328), v24);
    sub_1002BCB14(v26, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    sub_1002BCB14(v25, type metadata accessor for FMBeaconSharingModuleShareState);
    v22(v23, v24);
    uint64_t v9 = (uint64_t *)&unk_1006AFE30;
    uint64_t v10 = v27;
    goto LABEL_8;
  }
  uint64_t v28 = *(void *)(v0 + 264);
  uint64_t v29 = *(void *)(v0 + 248);
  uint64_t v31 = *(void *)(v0 + 168);
  uint64_t v30 = *(void *)(v0 + 176);
  uint64_t v32 = *(void *)(v0 + 136);
  uint64_t v33 = *(void *)(v0 + 144);
  uint64_t v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32);
  v84(v30, *(void *)(v0 + 128), v32);
  uint64_t v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16);
  v82(v31, v30, v32);
  sub_1002BCBDC(v28, v29, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v35 = *(void ***)(v0 + 248);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v36 = *v35;
    swift_retain();
    uint64_t v37 = sub_1000DD7E4();
    unint64_t v39 = v38;
  }
  else
  {
    uint64_t v41 = *(void *)(v0 + 112);
    uint64_t v40 = *(void *)(v0 + 120);
    uint64_t v42 = *(void *)(v0 + 104);
    (*(void (**)(uint64_t, void **, uint64_t))(v41 + 32))(v40, v35, v42);
    swift_retain();
    uint64_t v37 = FMFFriend.shortName.getter();
    unint64_t v39 = v43;
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
  }
  sub_1002BCBDC(*(void *)(v0 + 264), *(void *)(v0 + 240), type metadata accessor for FMBeaconSharingModuleRelationshipType);
  if (!v39)
  {
    uint64_t v37 = sub_10029E4E8();
    unint64_t v39 = v44;
  }
  char v80 = *(unsigned char *)(v0 + 425);
  uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 400);
  uint64_t v74 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 384);
  uint64_t v45 = *(void *)(v0 + 344);
  uint64_t v83 = v45;
  uint64_t v86 = *(void *)(v0 + 328);
  uint64_t v69 = *(void *)(v0 + 320);
  uint64_t v73 = *(void *)(v0 + 312);
  uint64_t v46 = *(void *)(v0 + 296);
  uint64_t v87 = *(void *)(v0 + 304);
  uint64_t v76 = *(void *)(v0 + 288);
  uint64_t v85 = *(void *)(v0 + 264);
  uint64_t v47 = *(void *)(v0 + 168);
  uint64_t v48 = *(void *)(v0 + 176);
  uint64_t v81 = v48;
  uint64_t v49 = *(void *)(v0 + 144);
  uint64_t v72 = *(void *)(v0 + 152);
  uint64_t v78 = v49;
  uint64_t v67 = *(void *)(v0 + 136);
  uint64_t v68 = *(void *)(v0 + 160);
  uint64_t v75 = *(void **)(v0 + 96);
  sub_1002BCB14(*(void *)(v0 + 240), type metadata accessor for FMBeaconSharingModuleRelationshipType);
  id v50 = objc_allocWithZone((Class)type metadata accessor for FMItemSharingLandingViewController(0));
  uint64_t v71 = (char *)sub_1003D29D0(v47, v12, v37, v39);
  swift_release();
  uint64_t v51 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v77 = v46;
  v70(v69, v45, v46);
  v82(v68, v48, v67);
  unint64_t v52 = (*(unsigned __int8 *)(v87 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
  unint64_t v53 = (v73 + *(unsigned __int8 *)(v49 + 80) + v52) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = v51;
  v74(v54 + v52, v69, v46);
  v84(v54 + v53, v68, v67);
  *(void *)(v54 + ((v72 + v53 + 7) & 0xFFFFFFFFFFFFFFF8)) = v71;
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = sub_1002BDFB0;
  *(void *)(v55 + 24) = v54;
  id v56 = (uint64_t (**)())&v71[qword_1006D2260];
  uint64_t v57 = *(void *)&v71[qword_1006D2260];
  *id v56 = sub_100024A68;
  v56[1] = (uint64_t (*)())v55;
  uint64_t v58 = v71;
  swift_retain();
  sub_100036B90(v57);
  sub_10029DC9C();
  uint64_t v59 = swift_allocObject();
  *(unsigned char *)(v59 + 16) = v80;
  *(void *)(v59 + 24) = sub_1002BDFB0;
  *(void *)(v59 + 32) = v54;
  *(void *)(v59 + 40) = v58;
  *(void *)(v59 + 48) = v75;
  id v60 = v58;
  swift_retain();
  id v61 = v75;
  NSString v62 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 48) = sub_1002BE12C;
  *(void *)(v0 + 56) = v59;
  *(void *)(v0 + 16) = _NSConcreteStackBlock;
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 32) = sub_10000841C;
  *(void *)(v0 + 40) = &unk_100630C28;
  id v63 = _Block_copy((const void *)(v0 + 16));
  swift_release();
  id v79 = [self actionWithTitle:v62 style:2 handler:v63];
  _Block_release(v63);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v81, v67);
  uint64_t v64 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
  v64(v86, v77);
  sub_1002BCB14(v85, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  sub_1002BCB14(v76, type metadata accessor for FMBeaconSharingModuleShareState);
  v64(v83, v77);
LABEL_15:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v65 = *(uint64_t (**)(id))(v0 + 8);
  return v65(v79);
}

void sub_1002B11A8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v19 = a4;
  uint64_t v6 = type metadata accessor for FMIPItem();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v14 = (void *)Strong;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
    type metadata accessor for FMIPWithdrawShareAction();
    swift_allocObject();
    uint64_t v15 = FMIPWithdrawShareAction.init(shareIdentifier:)();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
    unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v17 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v17 + v16, (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    *(void *)(v17 + ((v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8)) = v14;
    swift_retain();
    id v18 = v14;
    sub_1000CBE40(v15, (uint64_t)sub_1002BE154, v17);
    swift_release();
    swift_release();
    [v19 dismissViewControllerAnimated:1 completion:0];
    swift_release();
  }
}

uint64_t sub_1002B143C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v28 = a3;
  id v29 = a4;
  uint64_t v23 = a2;
  uint64_t v27 = a1;
  uint64_t v4 = type metadata accessor for FMIPItem();
  uint64_t v25 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v26 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMIPItemActionStatus();
  uint64_t v24 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10005D034(&qword_1006B4580);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v27, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v4);
  type metadata accessor for MainActor();
  swift_errorRetain();
  id v29 = v29;
  uint64_t v15 = static MainActor.shared.getter();
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v17 = (v9 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (*(unsigned __int8 *)(v5 + 80) + v17 + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v19 = (v6 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v15;
  *(void *)(v20 + 24) = &protocol witness table for MainActor;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v20 + v16, v10, v24);
  *(void *)(v20 + v17) = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v20 + v18, v26, v25);
  *(void *)(v20 + v19) = v29;
  sub_10016CC14((uint64_t)v13, (uint64_t)&unk_1006B9310, v20);
  return swift_release();
}

uint64_t sub_1002B1740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[18] = a6;
  v7[19] = a7;
  v7[16] = a4;
  v7[17] = a5;
  uint64_t v8 = type metadata accessor for FMIPProductType();
  v7[20] = v8;
  v7[21] = *(void *)(v8 - 8);
  v7[22] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for FMIPItemActionStatus();
  v7[23] = v9;
  v7[24] = *(void *)(v9 - 8);
  v7[25] = swift_task_alloc();
  type metadata accessor for MainActor();
  v7[26] = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_1002B1894, v11, v10);
}

uint64_t sub_1002B1894()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[24];
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for FMIPItemActionStatus.success(_:), v2);
  sub_1002B4DB8(&qword_1006B04E0, (void (*)(uint64_t))&type metadata accessor for FMIPItemActionStatus);
  char v4 = dispatch thunk of static Equatable.== infix(_:_:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  if ((v4 & 1) == 0)
  {
    if (!v0[17])
    {
LABEL_14:
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      uint64_t v22 = self;
      id v23 = [v22 mainBundle];
      v59._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
      v59._unint64_t object = (void *)0x800000010058F620;
      v24._uint64_t countAndFlagsBits = 0x5F4552554C494146;
      v24._unint64_t object = (void *)0xED0000454C544954;
      v25._uint64_t countAndFlagsBits = 0;
      v25._unint64_t object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v59);

      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      id v26 = [v22 mainBundle];
      v60._unint64_t object = (void *)0x8000000100582930;
      v27._uint64_t countAndFlagsBits = 0x5F4552554C494146;
      v27._unint64_t object = (void *)0xEF4547415353454DLL;
      v28._uint64_t countAndFlagsBits = 0;
      v28._unint64_t object = (void *)0xE000000000000000;
      v60._uint64_t countAndFlagsBits = 0xD000000000000021;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v26, v28, v60);

      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v31 = [self alertControllerWithTitle:v29 message:v30 preferredStyle:1];

      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      id v32 = [v22 mainBundle];
      v61._unint64_t object = (void *)0x800000010057F840;
      v33._uint64_t countAndFlagsBits = 0x4F545455425F4B4FLL;
      v33._unint64_t object = (void *)0xEF454C5449545F4ELL;
      v34._uint64_t countAndFlagsBits = 0;
      v34._unint64_t object = (void *)0xE000000000000000;
      v61._uint64_t countAndFlagsBits = 0xD000000000000021;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v33, (Swift::String_optional)0, (NSBundle)v32, v34, v61);

      NSString v35 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v0[6] = State.rawValue.getter;
      v0[7] = 0;
      v0[2] = _NSConcreteStackBlock;
      v0[3] = 1107296256;
      v0[4] = sub_10000841C;
      v0[5] = &unk_100630CA0;
      uint64_t v36 = _Block_copy(v0 + 2);
      swift_release();
      id v37 = [self actionWithTitle:v35 style:0 handler:v36];
      _Block_release(v36);

      [v31 addAction:v37];
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        unint64_t v39 = Strong;
        [Strong presentViewController:v31 animated:1 completion:0];

        goto LABEL_21;
      }

      goto LABEL_20;
    }
    swift_getErrorValue();
    uint64_t v5 = v0[9];
    swift_errorRetain();
    uint64_t v6 = sub_10027E880(v5);
    uint64_t v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0) {
        goto LABEL_13;
      }
    }
    swift_getErrorValue();
    if (sub_10027E720(v0[12]) != (id)15)
    {
LABEL_13:
      swift_errorRelease();
      goto LABEL_14;
    }
    uint64_t v12 = v0[21];
    uint64_t v13 = v0[22];
    uint64_t v56 = v0[20];
    uint64_t v14 = self;
    v15.super.Class isa = (Class)[v14 mainBundle];
    v58._uint64_t countAndFlagsBits = 0xD000000000000018;
    v16._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
    v58._unint64_t object = (void *)0x80000001005828D0;
    v16._unint64_t object = (void *)0x8000000100582A80;
    v17.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v17.value._unint64_t object = (void *)0x80000001005828B0;
    v18._uint64_t countAndFlagsBits = 0;
    v18._unint64_t object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, v15, v18, v58);

    FMIPItem.productType.getter();
    LOBYTE(v15.super.isa) = FMIPProductType.isAirTag.getter();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v56);
    id v19 = [v14 mainBundle];
    if ((uint64_t)v15.super.isa)
    {
      unint64_t v20 = 0xD00000000000002CLL;
      unint64_t v55 = 0x80000001005828D0;
      uint64_t v21 = "SHARE_AIRTAG_STOP_SHARE_ERROR_SUBTITLE_OWNER";
    }
    else
    {
      unint64_t v20 = 0xD00000000000002ALL;
      unint64_t v55 = 0x80000001005828D0;
      uint64_t v21 = "SHARE_ITEM_STOP_SHARE_ERROR_SUBTITLE_OWNER";
    }
    unint64_t v40 = (unint64_t)(v21 - 32) | 0x8000000000000000;
    v41.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v41.value._unint64_t object = (void *)0x80000001005828B0;
    v42._uint64_t countAndFlagsBits = 0;
    v42._unint64_t object = (void *)0xE000000000000000;
    unint64_t v43 = 0xD000000000000018;
    NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v20, v41, (NSBundle)v19, v42, *(Swift::String *)(&v55 - 1));

    NSString v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v46 = [self alertControllerWithTitle:v44 message:v45 preferredStyle:1];

    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v47 = [v14 mainBundle];
    v62._uint64_t countAndFlagsBits = 0xD000000000000021;
    v62._unint64_t object = (void *)0x800000010057F840;
    v48._uint64_t countAndFlagsBits = 0x4F545455425F4B4FLL;
    v48._unint64_t object = (void *)0xEF454C5449545F4ELL;
    v49._uint64_t countAndFlagsBits = 0;
    v49._unint64_t object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v48, (Swift::String_optional)0, (NSBundle)v47, v49, v62);

    NSString v50 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v51 = [self actionWithTitle:v50 style:0 handler:0];

    [v46 addAction:v51];
    unint64_t v52 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v52)
    {
      id v31 = v52;
      [v52 presentViewController:v46 animated:1 completion:0];

      swift_errorRelease();
LABEL_20:

      goto LABEL_21;
    }

    swift_errorRelease();
  }
LABEL_21:
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v53 = (uint64_t (*)(void))v0[1];
  return v53();
}

void sub_1002B20FC(uint64_t a1, char a2, void (*a3)(void), uint64_t a4, void *a5)
{
  if (a2)
  {
    a3();
  }
  else
  {
    objc_allocWithZone((Class)type metadata accessor for FMActivityIndicatingNavigationController());
    id v8 = sub_1000BE210(a5, 2);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v7 = Strong;
      [Strong presentViewController:v8 animated:1 completion:0];
    }
  }
}

void sub_1002B21C0()
{
}

uint64_t sub_1002B21F0()
{
  swift_release();
  swift_release();

  return swift_unknownObjectWeakDestroy();
}

id sub_1002B2240()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMBeaconSharingModuleView(0);
  return [super dealloc];
}

uint64_t sub_1002B2278()
{
  swift_release();
  swift_release();

  return swift_unknownObjectWeakDestroy();
}

uint64_t type metadata accessor for FMBeaconSharingModuleView(uint64_t a1)
{
  return sub_1000201D0(a1, (uint64_t *)&unk_1006B8E48);
}

uint64_t sub_1002B22F4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1002B2348()
{
  return type metadata accessor for FMBeaconSharingModuleView(0);
}

char *sub_1002B2350(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_10005D034(&qword_1006B9050);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v10 = *a2;
        *(void *)a1 = *a2;
        char v11 = v10;
      }
      else
      {
        uint64_t v12 = type metadata accessor for FMFFriend();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v13 = *(int *)(v7 + 48);
      uint64_t v14 = &a1[v13];
      NSBundle v15 = (char *)a2 + v13;
      uint64_t v16 = sub_10005D034(&qword_1006B9058);
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        uint64_t v18 = type metadata accessor for FMBeaconSharingModuleShareState(0);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        uint64_t v19 = type metadata accessor for FMIPBeaconShareState();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v14, v15, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      uint64_t v20 = *(int *)(v7 + 64);
      uint64_t v21 = &a1[v20];
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t type metadata accessor for FMBeaconSharingModuleRelationshipType(uint64_t a1)
{
  return sub_1000201D0(a1, qword_1006B91D0);
}

uint64_t type metadata accessor for FMBeaconSharingModuleShareState(uint64_t a1)
{
  return sub_1000201D0(a1, (uint64_t *)&unk_1006B9150);
}

uint64_t sub_1002B26A0(id *a1)
{
  uint64_t v2 = sub_10005D034(&qword_1006B9050);
  uint64_t result = (*(uint64_t (**)(id *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 2, v2);
  if (!result)
  {
    type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
    }
    else
    {
      uint64_t v4 = type metadata accessor for FMFFriend();
      (*(void (**)(id *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    }
    int v5 = (char *)a1 + *(int *)(v2 + 48);
    uint64_t v6 = sub_10005D034(&qword_1006B9058);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
    {
      uint64_t v7 = type metadata accessor for FMIPBeaconShareState();
      (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
    }
    uint64_t v8 = (char *)a1 + *(int *)(v2 + 64);
    uint64_t v9 = type metadata accessor for UUID();
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8);
    return v10(v8, v9);
  }
  return result;
}

void **sub_1002B2850(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = sub_10005D034(&qword_1006B9050);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = *a2;
      *a1 = *a2;
      id v9 = v8;
    }
    else
    {
      uint64_t v10 = type metadata accessor for FMFFriend();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = *(int *)(v6 + 48);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_10005D034(&qword_1006B9058);
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = type metadata accessor for FMBeaconSharingModuleShareState(0);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v17 = type metadata accessor for FMIPBeaconShareState();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v12, v13, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v18 = *(int *)(v6 + 64);
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    (*(void (**)(void **, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void **sub_1002B2B24(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = sub_10005D034(&qword_1006B9050);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_100003F10((uint64_t)a1, &qword_1006B9050);
      goto LABEL_7;
    }
    if (a1 != a2)
    {
      sub_1002BCB14((uint64_t)a1, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v13 = *a2;
        *a1 = *a2;
        id v14 = v13;
      }
      else
      {
        uint64_t v27 = type metadata accessor for FMFFriend();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
      }
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v28 = *(int *)(v6 + 48);
    NSString v29 = (char *)a1 + v28;
    NSString v30 = (char *)a2 + v28;
    uint64_t v31 = sub_10005D034(&qword_1006B9058);
    uint64_t v32 = *(void *)(v31 - 8);
    Swift::String v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
    int v34 = v33(v29, 1, v31);
    int v35 = v33(v30, 1, v31);
    if (v34)
    {
      if (!v35)
      {
        uint64_t v36 = type metadata accessor for FMIPBeaconShareState();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v29, v30, v36);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
LABEL_24:
        uint64_t v38 = *(int *)(v6 + 64);
        unint64_t v39 = (char *)a1 + v38;
        unint64_t v40 = (char *)a2 + v38;
        uint64_t v41 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 24))(v39, v40, v41);
        return a1;
      }
    }
    else
    {
      if (!v35)
      {
        uint64_t v43 = type metadata accessor for FMIPBeaconShareState();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 24))(v29, v30, v43);
        goto LABEL_24;
      }
      sub_100003F10((uint64_t)v29, &qword_1006B9058);
    }
    uint64_t v37 = type metadata accessor for FMBeaconSharingModuleShareState(0);
    memcpy(v29, v30, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_24;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    id v12 = v11;
  }
  else
  {
    uint64_t v15 = type metadata accessor for FMFFriend();
    (*(void (**)(void **, void **, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = *(int *)(v6 + 48);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_10005D034(&qword_1006B9058);
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = type metadata accessor for FMBeaconSharingModuleShareState(0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = type metadata accessor for FMIPBeaconShareState();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v17, v18, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v23 = *(int *)(v6 + 64);
  Swift::String v24 = (char *)a1 + v23;
  Swift::String v25 = (char *)a2 + v23;
  uint64_t v26 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  (*(void (**)(void **, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

char *sub_1002B30A8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10005D034(&qword_1006B9050);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v9 = type metadata accessor for FMFFriend();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v10 = *(int *)(v6 + 48);
    uint64_t v11 = &a1[v10];
    id v12 = &a2[v10];
    uint64_t v13 = sub_10005D034(&qword_1006B9058);
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = type metadata accessor for FMBeaconSharingModuleShareState(0);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v16 = type metadata accessor for FMIPBeaconShareState();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v11, v12, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    uint64_t v17 = *(int *)(v6 + 64);
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

char *sub_1002B3380(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10005D034(&qword_1006B9050);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_100003F10((uint64_t)a1, &qword_1006B9050);
      goto LABEL_7;
    }
    if (a1 != a2)
    {
      sub_1002BCB14((uint64_t)a1, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      uint64_t v12 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        uint64_t v25 = type metadata accessor for FMFFriend();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(a1, a2, v25);
        swift_storeEnumTagMultiPayload();
      }
    }
    uint64_t v26 = *(int *)(v6 + 48);
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    uint64_t v29 = sub_10005D034(&qword_1006B9058);
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
    int v32 = v31(v27, 1, v29);
    int v33 = v31(v28, 1, v29);
    if (v32)
    {
      if (!v33)
      {
        uint64_t v34 = type metadata accessor for FMIPBeaconShareState();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v27, v28, v34);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
LABEL_23:
        uint64_t v36 = *(int *)(v6 + 64);
        uint64_t v37 = &a1[v36];
        uint64_t v38 = &a2[v36];
        uint64_t v39 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 40))(v37, v38, v39);
        return a1;
      }
    }
    else
    {
      if (!v33)
      {
        uint64_t v41 = type metadata accessor for FMIPBeaconShareState();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 40))(v27, v28, v41);
        goto LABEL_23;
      }
      sub_100003F10((uint64_t)v27, &qword_1006B9058);
    }
    uint64_t v35 = type metadata accessor for FMBeaconSharingModuleShareState(0);
    memcpy(v27, v28, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_23;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v13 = type metadata accessor for FMFFriend();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v14 = *(int *)(v6 + 48);
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_10005D034(&qword_1006B9058);
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = type metadata accessor for FMBeaconSharingModuleShareState(0);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v20 = type metadata accessor for FMIPBeaconShareState();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v15, v16, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v21 = *(int *)(v6 + 64);
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_1002B390C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002B3920);
}

uint64_t sub_1002B3920(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034(&qword_1006B9050);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_1002B3990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002B39A4);
}

uint64_t sub_1002B39A4(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_10005D034(&qword_1006B9050);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_1002B3A2C(uint64_t a1, uint64_t a2)
{
  return sub_1002B447C(a1, a2, &qword_1006B9050, 2);
}

uint64_t sub_1002B3A3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002B44F8(a1, a2, a3, &qword_1006B9050, 2);
}

uint64_t type metadata accessor for FMBeaconSharingModuleEntry(uint64_t a1)
{
  return sub_1000201D0(a1, (uint64_t *)&unk_1006B90D0);
}

uint64_t sub_1002B3A6C()
{
  uint64_t result = type metadata accessor for FMBeaconSharingModuleRelationshipType(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FMBeaconSharingModuleShareState(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for UUID();
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout3();
        swift_initEnumMetadataSinglePayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_1002B3B78(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_10005D034(&qword_1006B9058);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for FMIPBeaconShareState();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1002B3CE4(uint64_t a1)
{
  uint64_t v2 = sub_10005D034(&qword_1006B9058);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for FMIPBeaconShareState();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *sub_1002B3D98(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10005D034(&qword_1006B9058);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for FMIPBeaconShareState();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1002B3EC8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10005D034(&qword_1006B9058);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = type metadata accessor for FMIPBeaconShareState();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_100003F10((uint64_t)a1, &qword_1006B9058);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = type metadata accessor for FMIPBeaconShareState();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *sub_1002B4074(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10005D034(&qword_1006B9058);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for FMIPBeaconShareState();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1002B41A4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10005D034(&qword_1006B9058);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = type metadata accessor for FMIPBeaconShareState();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_100003F10((uint64_t)a1, &qword_1006B9058);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = type metadata accessor for FMIPBeaconShareState();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1002B4350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002B4364);
}

uint64_t sub_1002B4364(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034(&qword_1006B9058);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1002B43D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002B43E8);
}

uint64_t sub_1002B43E8(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_10005D034(&qword_1006B9058);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_1002B446C(uint64_t a1, uint64_t a2)
{
  return sub_1002B447C(a1, a2, &qword_1006B9058, 1);
}

uint64_t sub_1002B447C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6 = sub_10005D034(a3);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);

  return v7(a1, a4, v6);
}

uint64_t sub_1002B44E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002B44F8(a1, a2, a3, &qword_1006B9058, 1);
}

uint64_t sub_1002B44F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v8 = sub_10005D034(a4);
  int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);

  return v9(a1, a2, a5, v8);
}

uint64_t sub_1002B4574()
{
  uint64_t result = type metadata accessor for FMIPBeaconShareState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

char *sub_1002B45EC(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = *a2;
      *(void *)a1 = *a2;
      uint64_t v7 = v6;
    }
    else
    {
      uint64_t v9 = type metadata accessor for FMFFriend();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1002B46EC(void **a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = *a1;
  }
  else
  {
    uint64_t v3 = type metadata accessor for FMFFriend();
    uint64_t v4 = *(void (**)(void **, uint64_t))(*(void *)(v3 - 8) + 8);
    v4(a1, v3);
  }
}

void **sub_1002B477C(void **a1, void **a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = *a2;
    *a1 = *a2;
    id v5 = v4;
  }
  else
  {
    uint64_t v6 = type metadata accessor for FMFFriend();
    (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **sub_1002B482C(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_1002BCB14((uint64_t)a1, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = *a2;
      *a1 = *a2;
      id v5 = v4;
    }
    else
    {
      uint64_t v6 = type metadata accessor for FMFFriend();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1002B4900(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for FMFFriend();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1002B49B4(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1002BCB14((uint64_t)a1, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for FMFFriend();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1002B4A8C()
{
  uint64_t result = type metadata accessor for FMFFriend();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t destroy for FMBeaconSharingModuleViewModel()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s6FindMy30FMBeaconSharingModuleViewModelVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMBeaconSharingModuleViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  return a1;
}

__n128 initializeWithTake for FMBeaconSharingModuleViewModel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FMBeaconSharingModuleViewModel(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMBeaconSharingModuleViewModel(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 19)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMBeaconSharingModuleViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 19) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 19) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMBeaconSharingModuleViewModel()
{
  return &type metadata for FMBeaconSharingModuleViewModel;
}

uint64_t sub_1002B4D28()
{
  return sub_1002B4DB8(&qword_1006B9208, (void (*)(uint64_t))type metadata accessor for FMBeaconSharingModuleRelationshipType);
}

uint64_t sub_1002B4D70()
{
  return sub_1002B4DB8(&qword_1006B9210, (void (*)(uint64_t))type metadata accessor for FMBeaconSharingModuleShareState);
}

uint64_t sub_1002B4DB8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002B4E00()
{
  return sub_1002B4DB8(&qword_1006B9218, (void (*)(uint64_t))type metadata accessor for FMBeaconSharingModuleEntry);
}

uint64_t sub_1002B4E48(uint64_t a1)
{
  uint64_t result = sub_1002B4DB8(&qword_1006B9248, (void (*)(uint64_t))type metadata accessor for FMBeaconSharingModuleEntry);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1002B4EA0(uint64_t a1)
{
  uint64_t result = sub_1002B4DB8(&qword_1006B9250, (void (*)(uint64_t))type metadata accessor for FMBeaconSharingModuleEntry);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1002B4EFC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1000E5A7C;
  v3[2] = v2;
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(sub_10029FD98, v2, 0);
}

uint64_t sub_1002B4FA4(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(a1 + 16);
  if (v24)
  {
    uint64_t v4 = (void *)(v1 + 16);
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v6 = *(unsigned __int8 *)(a1 + v5++ + 32);
      uint64_t v7 = 0xEA00000000006D65;
      uint64_t v8 = 0x7449656D616E6572;
      switch(v6)
      {
        case 1:
          uint64_t v8 = 0x744965766F6D6572;
          break;
        case 2:
          uint64_t v7 = 0x800000010057DEF0;
          uint64_t v8 = 0xD000000000000010;
          break;
        case 3:
          uint64_t v8 = 0xD000000000000015;
          uint64_t v7 = 0x800000010057DF10;
          break;
        default:
          break;
      }
      swift_beginAccess();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      int v10 = (void *)*v4;
      uint64_t v25 = (void *)*v4;
      void *v4 = 0x8000000000000000;
      unint64_t v12 = sub_100053708(v8, v7);
      uint64_t v13 = v10[2];
      BOOL v14 = (v11 & 1) == 0;
      uint64_t v15 = v13 + v14;
      if (__OFADD__(v13, v14))
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        JUMPOUT(0x1002B5220);
      }
      char v16 = v11;
      if (v10[3] >= v15)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v19 = v25;
          if ((v11 & 1) == 0) {
            goto LABEL_16;
          }
        }
        else
        {
          sub_1001BAED0();
          uint64_t v19 = v25;
          if ((v16 & 1) == 0) {
            goto LABEL_16;
          }
        }
      }
      else
      {
        sub_1001B2DCC(v15, isUniquelyReferenced_nonNull_native);
        unint64_t v17 = sub_100053708(v8, v7);
        if ((v16 & 1) != (v18 & 1)) {
          goto LABEL_24;
        }
        unint64_t v12 = v17;
        uint64_t v19 = v25;
        if ((v16 & 1) == 0)
        {
LABEL_16:
          v19[(v12 >> 6) + 8] |= 1 << v12;
          uint64_t v20 = (uint64_t *)(v19[6] + 16 * v12);
          uint64_t *v20 = v8;
          v20[1] = v7;
          *(unsigned char *)(v19[7] + v12) = v6;
          uint64_t v21 = v19[2];
          BOOL v22 = __OFADD__(v21, 1);
          uint64_t v23 = v21 + 1;
          if (v22) {
            goto LABEL_23;
          }
          _OWORD v19[2] = v23;
          swift_bridgeObjectRetain();
          goto LABEL_4;
        }
      }
      *(unsigned char *)(v19[7] + v12) = v6;
LABEL_4:
      void *v4 = v19;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      if (v24 == v5) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1002B5230(uint64_t a1)
{
  uint64_t v50 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  Swift::String v49 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5 - 8);
  uint64_t v53 = (uint64_t)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v52 = (uint64_t)&v46 - v10;
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v46 - v11;
  *(void *)(v1 + 24) = a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14) {
    return result;
  }
  uint64_t v15 = (void *)(v1 + 16);
  uint64_t v16 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v17 = *(void *)(v6 + 72);
  id v47 = (void (**)(char *, uint64_t))(v3 + 8);
  Swift::String v48 = (void (**)(char *, uint64_t, uint64_t))(v3 + 32);
  uint64_t v46 = a1;
  swift_bridgeObjectRetain();
  uint64_t v51 = v17;
  while (1)
  {
    sub_1002BCBDC(v16, (uint64_t)v12, type metadata accessor for FMBeaconSharingModuleEntry);
    uint64_t v20 = v52;
    sub_1002BCBDC((uint64_t)v12, v52, type metadata accessor for FMBeaconSharingModuleEntry);
    uint64_t v21 = sub_10005D034(&qword_1006B9050);
    int v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v20, 2, v21);
    if (v22)
    {
      uint64_t v23 = v22 == 1 ? 25933 : 0x6F73726550646441;
      uint64_t v24 = v22 == 1 ? 0xE200000000000000 : 0xE90000000000006ELL;
    }
    else
    {
      uint64_t v25 = v52;
      uint64_t v26 = v52 + *(int *)(v21 + 48);
      uint64_t v27 = v49;
      uint64_t v28 = v50;
      (*v48)(v49, v52 + *(int *)(v21 + 64), v50);
      uint64_t v23 = UUID.uuidString.getter();
      uint64_t v24 = v29;
      (*v47)(v27, v28);
      sub_1002BCB14(v26, type metadata accessor for FMBeaconSharingModuleShareState);
      sub_1002BCB14(v25, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    }
    swift_beginAccess();
    sub_1002BCBDC((uint64_t)v12, v53, type metadata accessor for FMBeaconSharingModuleEntry);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v54 = (void *)*v15;
    uint64_t v31 = v54;
    void *v15 = 0x8000000000000000;
    unint64_t v33 = sub_100053708(v23, v24);
    uint64_t v34 = v31[2];
    BOOL v35 = (v32 & 1) == 0;
    uint64_t v36 = v34 + v35;
    if (__OFADD__(v34, v35)) {
      break;
    }
    char v37 = v32;
    if (v31[3] >= v36)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        unint64_t v40 = v54;
        if (v32) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1001BC488();
        unint64_t v40 = v54;
        if (v37) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1001B5214(v36, isUniquelyReferenced_nonNull_native);
      unint64_t v38 = sub_100053708(v23, v24);
      if ((v37 & 1) != (v39 & 1)) {
        goto LABEL_28;
      }
      unint64_t v33 = v38;
      unint64_t v40 = v54;
      if (v37)
      {
LABEL_3:
        uint64_t v18 = v40[7] + v33 * v51;
        uint64_t v19 = v51;
        sub_1002BCC44(v53, v18);
        goto LABEL_4;
      }
    }
    v40[(v33 >> 6) + 8] |= 1 << v33;
    uint64_t v41 = (uint64_t *)(v40[6] + 16 * v33);
    *uint64_t v41 = v23;
    v41[1] = v24;
    uint64_t v42 = v40[7] + v33 * v51;
    uint64_t v19 = v51;
    sub_1002BCB74(v53, v42, type metadata accessor for FMBeaconSharingModuleEntry);
    uint64_t v43 = v40[2];
    BOOL v44 = __OFADD__(v43, 1);
    uint64_t v45 = v43 + 1;
    if (v44) {
      goto LABEL_27;
    }
    _OWORD v40[2] = v45;
    swift_bridgeObjectRetain();
LABEL_4:
    void *v15 = v40;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_1002BCB14((uint64_t)v12, type metadata accessor for FMBeaconSharingModuleEntry);
    v16 += v19;
    if (!--v14) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1002B5718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a3 + a2 - 16) + 8) + 32))(*(void *)(a3 + a2 - 24));
}

uint64_t sub_1002B575C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = sub_10005D034(a3);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = swift_projectBox();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1002B5890(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t), uint64_t (*a4)(void *))
{
  uint64_t v7 = *(void *)(a2(0) - 8);
  uint64_t v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v8 = a3(v8);
  }
  uint64_t v9 = *(void *)(v8 + 16);
  v11[0] = v8 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v11[1] = v9;
  uint64_t result = a4(v11);
  *a1 = v8;
  return result;
}

Swift::Int sub_1002B5954(unint64_t *a1)
{
  uint64_t v293 = type metadata accessor for FMFFriend();
  uint64_t v2 = *(void *)(v293 - 8);
  __chkstk_darwin(v293);
  unint64_t v292 = (char *)&v263 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v303 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  uint64_t v4 = __chkstk_darwin(v303);
  uint64_t v6 = (void **)((char *)&v263 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v289 = (void **)((char *)&v263 - v8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v308 = (uint64_t)&v263 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v300 = (uint64_t)&v263 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (void **)((char *)&v263 - v14);
  uint64_t v16 = __chkstk_darwin(v13);
  unint64_t v271 = (void **)((char *)&v263 - v17);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v277 = (uint64_t)&v263 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v275 = (uint64_t)&v263 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  id v266 = (void **)((char *)&v263 - v23);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v265 = (void **)((char *)&v263 - v25);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v270 = (uint64_t)&v263 - v27;
  __chkstk_darwin(v26);
  uint64_t v268 = (uint64_t)&v263 - v28;
  uint64_t v306 = sub_10005D034(&qword_1006B9268);
  uint64_t v29 = __chkstk_darwin(v306);
  uint64_t v31 = (char *)&v263 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v281 = (uint64_t)&v263 - v33;
  __chkstk_darwin(v32);
  uint64_t v272 = (uint64_t)&v263 - v34;
  uint64_t v295 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  uint64_t v286 = *(void *)(v295 - 8);
  uint64_t v35 = __chkstk_darwin(v295);
  uint64_t v280 = (uint64_t)&v263 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v310 = (uint64_t)&v263 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v294 = (uint64_t)&v263 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v43 = (char *)&v263 - v42;
  uint64_t v44 = __chkstk_darwin(v41);
  uint64_t v46 = (char *)&v263 - v45;
  uint64_t v47 = __chkstk_darwin(v44);
  uint64_t v276 = (uint64_t)&v263 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v284 = (uint64_t)&v263 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v283 = (uint64_t)&v263 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v269 = (uint64_t)&v263 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v274 = (uint64_t)&v263 - v56;
  __chkstk_darwin(v55);
  uint64_t v273 = (uint64_t)&v263 - v57;
  double v314 = a1;
  Swift::Int v58 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v58);
  if (result >= v58)
  {
    if ((v58 & 0x8000000000000000) == 0)
    {
      if (v58) {
        return sub_1002B8750(0, v58, 1, v314);
      }
      return result;
    }
    goto LABEL_224;
  }
  if (v58 >= 0) {
    uint64_t v60 = v58;
  }
  else {
    uint64_t v60 = v58 + 1;
  }
  if (v58 < -1) {
    goto LABEL_232;
  }
  char v288 = v6;
  Swift::Int v267 = result;
  if (v58 >= 2)
  {
    uint64_t v61 = v60 >> 1;
    uint64_t v62 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v62 + 16) = v61;
    uint64_t v63 = *(unsigned __int8 *)(v286 + 80);
    uint64_t v263 = (void *)v62;
    unint64_t v285 = v62 + ((v63 + 32) & ~v63);
LABEL_12:
    unint64_t v291 = (void (**)(char *, void **, uint64_t))(v2 + 32);
    id v290 = (void (**)(char *, uint64_t))(v2 + 8);
    uint64_t v64 = (char *)_swiftEmptyArrayStorage;
    uint64_t v264 = v15;
    Swift::Int v65 = 0;
    uint64_t v309 = v31;
    uint64_t v296 = v46;
    v297 = v43;
    while (1)
    {
      Swift::Int v67 = v65;
      Swift::Int v68 = v65 + 1;
      id v279 = v64;
      Swift::Int v282 = v65;
      if (v65 + 1 >= v58)
      {
        Swift::Int v82 = v65 + 1;
        goto LABEL_72;
      }
      Swift::Int v305 = v58;
      unint64_t v69 = *v314;
      Swift::Int v70 = *(void *)(v286 + 72);
      Swift::Int v71 = v65;
      uint64_t v72 = v273;
      sub_1002BCBDC(*v314 + v70 * v68, v273, type metadata accessor for FMBeaconSharingModuleEntry);
      unint64_t v299 = v69;
      Swift::Int v313 = v70;
      uint64_t v73 = v69 + v70 * v71;
      uint64_t v74 = v274;
      sub_1002BCBDC(v73, v274, type metadata accessor for FMBeaconSharingModuleEntry);
      uint64_t v75 = v272;
      uint64_t v76 = v272 + *(int *)(v306 + 48);
      sub_1002BCBDC(v72, v272, type metadata accessor for FMBeaconSharingModuleEntry);
      uint64_t v77 = v75;
      sub_1002BCBDC(v74, v76, type metadata accessor for FMBeaconSharingModuleEntry);
      uint64_t v78 = sub_10005D034(&qword_1006B9050);
      uint64_t v79 = *(void *)(v78 - 8);
      id v311 = *(uint64_t (**)(uint64_t, uint64_t))(v79 + 48);
      unint64_t v312 = v78;
      Swift::Int v307 = v79 + 48;
      int v80 = v311(v75, 2);
      uint64_t v81 = v281;
      if (!v80) {
        break;
      }
      if (v80 != 1)
      {
        sub_1002BCB14(v76, type metadata accessor for FMBeaconSharingModuleEntry);
        sub_1002BCB14(v272, type metadata accessor for FMBeaconSharingModuleEntry);
LABEL_23:
        LODWORD(v304) = 0;
        goto LABEL_24;
      }
      sub_1002BCB14(v76, type metadata accessor for FMBeaconSharingModuleEntry);
      sub_1002BCB14(v272, type metadata accessor for FMBeaconSharingModuleEntry);
      LODWORD(v304) = 1;
LABEL_24:
      Swift::Int v67 = v282;
      Swift::Int v58 = v305;
      sub_1002BCB14(v274, type metadata accessor for FMBeaconSharingModuleEntry);
      sub_1002BCB14(v273, type metadata accessor for FMBeaconSharingModuleEntry);
      uint64_t v46 = v296;
      if (v67 + 2 >= v58)
      {
        Swift::Int v82 = v67 + 2;
        goto LABEL_58;
      }
      unint64_t v87 = v299;
      Swift::Int v82 = v67 + 2;
      uint64_t v301 = v313 * (v67 + 2);
      uint64_t v302 = v313 * v68;
      do
      {
        uint64_t v88 = v283;
        sub_1002BCBDC(v87 + v301, v283, type metadata accessor for FMBeaconSharingModuleEntry);
        uint64_t v89 = v284;
        sub_1002BCBDC(v87 + v302, v284, type metadata accessor for FMBeaconSharingModuleEntry);
        uint64_t v90 = v81 + *(int *)(v306 + 48);
        sub_1002BCBDC(v88, v81, type metadata accessor for FMBeaconSharingModuleEntry);
        sub_1002BCBDC(v89, v90, type metadata accessor for FMBeaconSharingModuleEntry);
        int v91 = ((uint64_t (*)(uint64_t, uint64_t, unint64_t))v311)(v81, 2, v312);
        if (v91)
        {
          if (v91 == 1)
          {
            sub_1002BCB14(v90, type metadata accessor for FMBeaconSharingModuleEntry);
            sub_1002BCB14(v81, type metadata accessor for FMBeaconSharingModuleEntry);
            int v92 = 1;
            goto LABEL_33;
          }
          sub_1002BCB14(v90, type metadata accessor for FMBeaconSharingModuleEntry);
          sub_1002BCB14(v81, type metadata accessor for FMBeaconSharingModuleEntry);
          goto LABEL_32;
        }
        uint64_t v93 = v276;
        sub_1002BCBDC(v81, v276, type metadata accessor for FMBeaconSharingModuleEntry);
        uint64_t v94 = v93 + *(int *)(v312 + 48);
        uint64_t v95 = v93 + *(int *)(v312 + 64);
        if (v311(v90, 2))
        {
          uint64_t v96 = type metadata accessor for UUID();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v96 - 8) + 8))(v95, v96);
          sub_1002BCB14(v94, type metadata accessor for FMBeaconSharingModuleShareState);
          sub_1002BCB14(v93, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          sub_100003F10(v81, &qword_1006B9268);
LABEL_32:
          int v92 = 0;
          goto LABEL_33;
        }
        uint64_t v97 = v275;
        sub_1002BCB74(v93, v275, type metadata accessor for FMBeaconSharingModuleRelationshipType);
        sub_1002BCB74(v90, v277, type metadata accessor for FMBeaconSharingModuleRelationshipType);
        int v98 = v271;
        sub_1002BCBDC(v97, (uint64_t)v271, type metadata accessor for FMBeaconSharingModuleRelationshipType);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v298 = v94;
        if (EnumCaseMultiPayload == 1)
        {
          os_log_type_t v100 = *v98;
          if (qword_1006ADF70 != -1) {
            swift_once();
          }
          id v101 = [qword_1006D1508 stringFromContact:v100 v263];
          if (v101)
          {
            uint64_t v102 = v101;
            uint64_t v103 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v105 = v104;
          }
          else
          {

            uint64_t v103 = 0;
            unint64_t v105 = 0xE000000000000000;
          }
        }
        else
        {
          uint64_t v106 = v292;
          uint64_t v107 = v293;
          (*v291)(v292, v98, v293);
          uint64_t v103 = FMFFriend.name.getter();
          unint64_t v105 = v108;
          (*v290)(v106, v107);
        }
        int v109 = v264;
        sub_1002BCBDC(v277, (uint64_t)v264, type metadata accessor for FMBeaconSharingModuleRelationshipType);
        int v110 = swift_getEnumCaseMultiPayload();
        Swift::Int v278 = v95;
        if (v110 == 1)
        {
          int v111 = *v109;
          if (qword_1006ADF70 != -1) {
            swift_once();
          }
          id v112 = [qword_1006D1508 stringFromContact:v111 v263];
          if (v112)
          {
            int v113 = v112;
            uint64_t v114 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v116 = v115;

            if (v103 != v114) {
              goto LABEL_54;
            }
          }
          else
          {

            unint64_t v116 = 0xE000000000000000;
            if (v103) {
              goto LABEL_54;
            }
          }
        }
        else
        {
          uint64_t v117 = v109;
          uint64_t v118 = v292;
          uint64_t v119 = v293;
          (*v291)(v292, v117, v293);
          uint64_t v120 = FMFFriend.name.getter();
          unint64_t v116 = v121;
          (*v290)(v118, v119);
          if (v103 != v120) {
            goto LABEL_54;
          }
        }
        if (v105 != v116)
        {
LABEL_54:
          int v92 = _stringCompareWithSmolCheck(_:_:expecting:)();
          goto LABEL_55;
        }
        int v92 = 0;
LABEL_55:
        uint64_t v46 = v296;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v122 = v90 + *(int *)(v312 + 48);
        uint64_t v123 = v90 + *(int *)(v312 + 64);
        sub_1002BCB14(v277, type metadata accessor for FMBeaconSharingModuleRelationshipType);
        sub_1002BCB14(v275, type metadata accessor for FMBeaconSharingModuleRelationshipType);
        uint64_t v124 = type metadata accessor for UUID();
        uint64_t v125 = *(void (**)(uint64_t, uint64_t))(*(void *)(v124 - 8) + 8);
        v125(v123, v124);
        sub_1002BCB14(v122, type metadata accessor for FMBeaconSharingModuleShareState);
        v125(v278, v124);
        sub_1002BCB14(v298, type metadata accessor for FMBeaconSharingModuleShareState);
        sub_1002BCB14(v281, type metadata accessor for FMBeaconSharingModuleEntry);
        uint64_t v31 = v309;
LABEL_33:
        Swift::Int v58 = v305;
        sub_1002BCB14(v284, type metadata accessor for FMBeaconSharingModuleEntry);
        sub_1002BCB14(v283, type metadata accessor for FMBeaconSharingModuleEntry);
        if ((v304 ^ v92)) {
          goto LABEL_57;
        }
        v87 += v313;
        ++v82;
        uint64_t v81 = v281;
      }
      while (v58 != v82);
      Swift::Int v82 = v58;
LABEL_57:
      uint64_t v43 = v297;
      Swift::Int v67 = v282;
LABEL_58:
      if (v304)
      {
        if (v82 >= v67)
        {
          if (v67 < v82)
          {
            uint64_t v126 = 0;
            uint64_t v127 = v313 * (v82 - 1);
            Swift::Int v128 = v67;
            Swift::Int v129 = v82 * v313;
            Swift::Int v130 = v128;
            uint64_t v131 = v128 * v313;
            do
            {
              if (v130 != v82 + v126 - 1)
              {
                unint64_t v133 = v299;
                if (!v299) {
                  goto LABEL_230;
                }
                unint64_t v134 = v299 + v131;
                unint64_t v312 = v299 + v127;
                sub_1002BCB74(v299 + v131, v280, type metadata accessor for FMBeaconSharingModuleEntry);
                if (v131 < v127 || v134 >= v133 + v129)
                {
                  uint64_t v132 = v312;
                  swift_arrayInitWithTakeFrontToBack();
                }
                else
                {
                  uint64_t v132 = v312;
                  if (v131 != v127) {
                    swift_arrayInitWithTakeBackToFront();
                  }
                }
                sub_1002BCB74(v280, v132, type metadata accessor for FMBeaconSharingModuleEntry);
              }
              ++v130;
              --v126;
              v127 -= v313;
              v129 -= v313;
              v131 += v313;
            }
            while (v130 < v82 + v126);
            uint64_t v31 = v309;
            uint64_t v46 = v296;
            Swift::Int v67 = v282;
            Swift::Int v58 = v305;
          }
          goto LABEL_72;
        }
LABEL_225:
        __break(1u);
LABEL_226:
        __break(1u);
        goto LABEL_227;
      }
LABEL_72:
      if (v82 >= v58) {
        goto LABEL_117;
      }
      if (__OFSUB__(v82, v67)) {
        goto LABEL_223;
      }
      if (v82 - v67 >= v267) {
        goto LABEL_117;
      }
      if (__OFADD__(v67, v267)) {
        goto LABEL_226;
      }
      if (v67 + v267 >= v58) {
        Swift::Int v135 = v58;
      }
      else {
        Swift::Int v135 = v67 + v267;
      }
      if (v135 < v67)
      {
LABEL_227:
        __break(1u);
LABEL_228:
        __break(1u);
LABEL_229:
        __break(1u);
LABEL_230:
        __break(1u);
LABEL_231:
        __break(1u);
LABEL_232:
        Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        return result;
      }
      if (v82 == v135) {
        goto LABEL_117;
      }
      uint64_t v136 = *(void *)(v286 + 72);
      uint64_t v137 = v136 * (v82 - 1);
      uint64_t v304 = v136;
      Swift::Int v313 = v82 * v136;
      Swift::Int v278 = v135;
      while (2)
      {
        uint64_t v139 = 0;
        Swift::Int v140 = v282;
        Swift::Int v307 = v82;
        Swift::Int v305 = v137;
        while (2)
        {
          unint64_t v141 = *v314;
          unint64_t v312 = v313 + v139;
          sub_1002BCBDC(v313 + v139 + v141, (uint64_t)v46, type metadata accessor for FMBeaconSharingModuleEntry);
          id v311 = (uint64_t (*)(uint64_t, uint64_t))(v137 + v139);
          sub_1002BCBDC(v137 + v139 + v141, (uint64_t)v43, type metadata accessor for FMBeaconSharingModuleEntry);
          uint64_t v142 = (uint64_t)&v31[*(int *)(v306 + 48)];
          sub_1002BCBDC((uint64_t)v46, (uint64_t)v31, type metadata accessor for FMBeaconSharingModuleEntry);
          sub_1002BCBDC((uint64_t)v43, v142, type metadata accessor for FMBeaconSharingModuleEntry);
          uint64_t v143 = sub_10005D034(&qword_1006B9050);
          uint64_t v144 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v143 - 8) + 48);
          int v145 = v144(v31, 2, v143);
          if (v145)
          {
            if (v145 == 1)
            {
              sub_1002BCB14(v142, type metadata accessor for FMBeaconSharingModuleEntry);
              sub_1002BCB14((uint64_t)v31, type metadata accessor for FMBeaconSharingModuleEntry);
              sub_1002BCB14((uint64_t)v43, type metadata accessor for FMBeaconSharingModuleEntry);
              sub_1002BCB14((uint64_t)v46, type metadata accessor for FMBeaconSharingModuleEntry);
              uint64_t v137 = v305;
              goto LABEL_112;
            }
            sub_1002BCB14(v142, type metadata accessor for FMBeaconSharingModuleEntry);
            sub_1002BCB14((uint64_t)v31, type metadata accessor for FMBeaconSharingModuleEntry);
LABEL_83:
            uint64_t v137 = v305;
            sub_1002BCB14((uint64_t)v43, type metadata accessor for FMBeaconSharingModuleEntry);
            sub_1002BCB14((uint64_t)v46, type metadata accessor for FMBeaconSharingModuleEntry);
            goto LABEL_84;
          }
          uint64_t v146 = v294;
          sub_1002BCBDC((uint64_t)v31, v294, type metadata accessor for FMBeaconSharingModuleEntry);
          uint64_t v302 = v146 + *(int *)(v143 + 48);
          uint64_t v301 = v146 + *(int *)(v143 + 64);
          if (v144((char *)v142, 2, v143))
          {
            uint64_t v175 = type metadata accessor for UUID();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v175 - 8) + 8))(v301, v175);
            sub_1002BCB14(v302, type metadata accessor for FMBeaconSharingModuleShareState);
            sub_1002BCB14(v146, type metadata accessor for FMBeaconSharingModuleRelationshipType);
            sub_100003F10((uint64_t)v31, &qword_1006B9268);
            uint64_t v43 = v297;
            goto LABEL_83;
          }
          uint64_t v147 = v300;
          sub_1002BCB74(v146, v300, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          sub_1002BCB74(v142, v308, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          uint64_t v148 = v289;
          sub_1002BCBDC(v147, (uint64_t)v289, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            int v149 = *v148;
            if (qword_1006ADF70 != -1) {
              swift_once();
            }
            id v150 = [qword_1006D1508 stringFromContact:v149 v263];
            uint64_t v43 = v297;
            if (v150)
            {
              int v151 = v150;
              uint64_t v298 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v299 = v152;
            }
            else
            {

              uint64_t v298 = 0;
              unint64_t v299 = 0xE000000000000000;
            }
          }
          else
          {
            int v153 = v292;
            int v154 = v148;
            uint64_t v155 = v293;
            (*v291)(v292, v154, v293);
            uint64_t v298 = FMFFriend.name.getter();
            unint64_t v299 = v156;
            (*v290)(v153, v155);
            uint64_t v43 = v297;
          }
          uint64_t v157 = v288;
          sub_1002BCBDC(v308, (uint64_t)v288, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v158 = *v157;
            if (qword_1006ADF70 != -1) {
              swift_once();
            }
            id v159 = [qword_1006D1508 stringFromContact:v158, v263];
            unint64_t v160 = v299;
            if (v159)
            {
              char v161 = v159;
              uint64_t v162 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v164 = v163;
            }
            else
            {

              uint64_t v162 = 0;
              unint64_t v164 = 0xE000000000000000;
            }
            uint64_t v43 = v297;
          }
          else
          {
            uint64_t v165 = v292;
            uint64_t v166 = v293;
            (*v291)(v292, v157, v293);
            uint64_t v162 = FMFFriend.name.getter();
            unint64_t v164 = v167;
            (*v290)(v165, v166);
            unint64_t v160 = v299;
          }
          if (v298 == v162 && v160 == v164) {
            char v168 = 0;
          }
          else {
            char v168 = _stringCompareWithSmolCheck(_:_:expecting:)();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v169 = v142 + *(int *)(v143 + 48);
          uint64_t v170 = v142 + *(int *)(v143 + 64);
          sub_1002BCB14(v308, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          sub_1002BCB14(v300, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          uint64_t v171 = type metadata accessor for UUID();
          int v172 = *(void (**)(uint64_t, uint64_t))(*(void *)(v171 - 8) + 8);
          v172(v170, v171);
          sub_1002BCB14(v169, type metadata accessor for FMBeaconSharingModuleShareState);
          v172(v301, v171);
          sub_1002BCB14(v302, type metadata accessor for FMBeaconSharingModuleShareState);
          sub_1002BCB14((uint64_t)v309, type metadata accessor for FMBeaconSharingModuleEntry);
          sub_1002BCB14((uint64_t)v43, type metadata accessor for FMBeaconSharingModuleEntry);
          uint64_t v46 = v296;
          sub_1002BCB14((uint64_t)v296, type metadata accessor for FMBeaconSharingModuleEntry);
          uint64_t v137 = v305;
          if (v168)
          {
LABEL_112:
            unint64_t v173 = *v314;
            if (!*v314) {
              goto LABEL_228;
            }
            uint64_t v174 = v173 + v137 + v139;
            sub_1002BCB74(v173 + v313 + v139, v310, type metadata accessor for FMBeaconSharingModuleEntry);
            uint64_t v31 = v309;
            swift_arrayInitWithTakeFrontToBack();
            sub_1002BCB74(v310, v174, type metadata accessor for FMBeaconSharingModuleEntry);
            v139 -= v304;
            ++v140;
            Swift::Int v138 = v307;
            if (v307 == v140) {
              goto LABEL_85;
            }
            continue;
          }
          break;
        }
        uint64_t v31 = v309;
LABEL_84:
        Swift::Int v138 = v307;
LABEL_85:
        Swift::Int v82 = v138 + 1;
        v137 += v304;
        v313 += v304;
        if (v82 != v278) {
          continue;
        }
        break;
      }
      Swift::Int v82 = v278;
      Swift::Int v67 = v282;
LABEL_117:
      if (v82 < v67)
      {
LABEL_218:
        __break(1u);
LABEL_219:
        __break(1u);
LABEL_220:
        __break(1u);
LABEL_221:
        __break(1u);
LABEL_222:
        __break(1u);
LABEL_223:
        __break(1u);
LABEL_224:
        __break(1u);
        goto LABEL_225;
      }
      if (swift_isUniquelyReferenced_nonNull_native()) {
        uint64_t v64 = v279;
      }
      else {
        uint64_t v64 = sub_100268068(0, *((void *)v279 + 2) + 1, 1, v279);
      }
      unint64_t v177 = *((void *)v64 + 2);
      unint64_t v176 = *((void *)v64 + 3);
      unint64_t v66 = v177 + 1;
      Swift::Int v307 = v82;
      if (v177 >= v176 >> 1) {
        uint64_t v64 = sub_100268068((char *)(v176 > 1), v177 + 1, 1, v64);
      }
      *((void *)v64 + 2) = v66;
      uint64_t v178 = v64 + 32;
      uint64_t v179 = &v64[16 * v177 + 32];
      Swift::Int v180 = v307;
      *(void *)uint64_t v179 = v282;
      *((void *)v179 + 1) = v180;
      if (v177)
      {
        while (1)
        {
          unint64_t v181 = v66 - 1;
          if (v66 >= 4)
          {
            uint64_t v186 = &v178[16 * v66];
            uint64_t v187 = *((void *)v186 - 8);
            uint64_t v188 = *((void *)v186 - 7);
            BOOL v192 = __OFSUB__(v188, v187);
            uint64_t v189 = v188 - v187;
            if (v192) {
              goto LABEL_207;
            }
            uint64_t v191 = *((void *)v186 - 6);
            uint64_t v190 = *((void *)v186 - 5);
            BOOL v192 = __OFSUB__(v190, v191);
            uint64_t v184 = v190 - v191;
            char v185 = v192;
            if (v192) {
              goto LABEL_208;
            }
            unint64_t v193 = v66 - 2;
            unsigned int v194 = &v178[16 * v66 - 32];
            uint64_t v196 = *(void *)v194;
            uint64_t v195 = *((void *)v194 + 1);
            BOOL v192 = __OFSUB__(v195, v196);
            uint64_t v197 = v195 - v196;
            if (v192) {
              goto LABEL_210;
            }
            BOOL v192 = __OFADD__(v184, v197);
            uint64_t v198 = v184 + v197;
            if (v192) {
              goto LABEL_213;
            }
            if (v198 >= v189)
            {
              uint64_t v216 = &v178[16 * v181];
              uint64_t v218 = *(void *)v216;
              uint64_t v217 = *((void *)v216 + 1);
              BOOL v192 = __OFSUB__(v217, v218);
              uint64_t v219 = v217 - v218;
              if (v192) {
                goto LABEL_217;
              }
              BOOL v209 = v184 < v219;
              goto LABEL_154;
            }
          }
          else
          {
            if (v66 != 3)
            {
              uint64_t v210 = *((void *)v64 + 4);
              uint64_t v211 = *((void *)v64 + 5);
              BOOL v192 = __OFSUB__(v211, v210);
              uint64_t v203 = v211 - v210;
              char v204 = v192;
              goto LABEL_148;
            }
            uint64_t v183 = *((void *)v64 + 4);
            uint64_t v182 = *((void *)v64 + 5);
            BOOL v192 = __OFSUB__(v182, v183);
            uint64_t v184 = v182 - v183;
            char v185 = v192;
          }
          if (v185) {
            goto LABEL_209;
          }
          unint64_t v193 = v66 - 2;
          uint64_t v199 = &v178[16 * v66 - 32];
          uint64_t v201 = *(void *)v199;
          uint64_t v200 = *((void *)v199 + 1);
          BOOL v202 = __OFSUB__(v200, v201);
          uint64_t v203 = v200 - v201;
          char v204 = v202;
          if (v202) {
            goto LABEL_212;
          }
          uint64_t v205 = &v178[16 * v181];
          uint64_t v207 = *(void *)v205;
          uint64_t v206 = *((void *)v205 + 1);
          BOOL v192 = __OFSUB__(v206, v207);
          uint64_t v208 = v206 - v207;
          if (v192) {
            goto LABEL_215;
          }
          if (__OFADD__(v203, v208)) {
            goto LABEL_216;
          }
          if (v203 + v208 >= v184)
          {
            BOOL v209 = v184 < v208;
LABEL_154:
            if (v209) {
              unint64_t v181 = v193;
            }
            goto LABEL_156;
          }
LABEL_148:
          if (v204) {
            goto LABEL_211;
          }
          unsigned int v212 = &v178[16 * v181];
          uint64_t v214 = *(void *)v212;
          uint64_t v213 = *((void *)v212 + 1);
          BOOL v192 = __OFSUB__(v213, v214);
          uint64_t v215 = v213 - v214;
          if (v192) {
            goto LABEL_214;
          }
          if (v215 < v203) {
            goto LABEL_14;
          }
LABEL_156:
          unint64_t v220 = v181 - 1;
          if (v181 - 1 >= v66)
          {
            __break(1u);
LABEL_204:
            __break(1u);
LABEL_205:
            __break(1u);
LABEL_206:
            __break(1u);
LABEL_207:
            __break(1u);
LABEL_208:
            __break(1u);
LABEL_209:
            __break(1u);
LABEL_210:
            __break(1u);
LABEL_211:
            __break(1u);
LABEL_212:
            __break(1u);
LABEL_213:
            __break(1u);
LABEL_214:
            __break(1u);
LABEL_215:
            __break(1u);
LABEL_216:
            __break(1u);
LABEL_217:
            __break(1u);
            goto LABEL_218;
          }
          if (!*v314) {
            goto LABEL_229;
          }
          char v221 = v64;
          uint64_t v222 = &v178[16 * v220];
          uint64_t v223 = *(void *)v222;
          id v224 = &v178[16 * v181];
          uint64_t v225 = *((void *)v224 + 1);
          uint64_t v226 = v287;
          sub_1002B9554(*v314 + *(void *)(v286 + 72) * *(void *)v222, *v314 + *(void *)(v286 + 72) * *(void *)v224, *v314 + *(void *)(v286 + 72) * v225, v285);
          if (v226)
          {
            uint64_t v254 = v263;
LABEL_185:
            swift_bridgeObjectRelease();
            v254[2] = 0;
            return swift_bridgeObjectRelease();
          }
          if (v225 < v223) {
            goto LABEL_204;
          }
          if (v181 > *((void *)v221 + 2)) {
            goto LABEL_205;
          }
          *(void *)uint64_t v222 = v223;
          *(void *)&v178[16 * v220 + 8] = v225;
          unint64_t v227 = *((void *)v221 + 2);
          if (v181 >= v227) {
            goto LABEL_206;
          }
          uint64_t v287 = 0;
          unint64_t v66 = v227 - 1;
          memmove(&v178[16 * v181], v224 + 16, 16 * (v227 - 1 - v181));
          uint64_t v64 = v221;
          *((void *)v221 + 2) = v227 - 1;
          BOOL v209 = v227 > 2;
          uint64_t v31 = v309;
          uint64_t v46 = v296;
          if (!v209) {
            goto LABEL_14;
          }
        }
      }
      unint64_t v66 = 1;
LABEL_14:
      Swift::Int v58 = v314[1];
      Swift::Int v65 = v307;
      if (v307 >= v58) {
        goto LABEL_187;
      }
    }
    uint64_t v83 = v269;
    sub_1002BCBDC(v77, v269, type metadata accessor for FMBeaconSharingModuleEntry);
    uint64_t v84 = v83 + *(int *)(v312 + 48);
    uint64_t v85 = v83 + *(int *)(v312 + 64);
    if (!v311(v76, 2))
    {
      uint64_t v228 = v268;
      sub_1002BCB74(v83, v268, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      sub_1002BCB74(v76, v270, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      uint64_t v229 = v265;
      sub_1002BCBDC(v228, (uint64_t)v265, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v230 = *v229;
        if (qword_1006ADF70 != -1) {
          swift_once();
        }
        id v231 = [qword_1006D1508 stringFromContact:v230, v263];
        uint64_t v232 = v266;
        if (v231)
        {
          uint64_t v233 = v231;
          uint64_t v304 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v235 = v234;
        }
        else
        {

          uint64_t v304 = 0;
          unint64_t v235 = 0xE000000000000000;
        }
      }
      else
      {
        v236 = v292;
        uint64_t v237 = v229;
        uint64_t v238 = v293;
        (*v291)(v292, v237, v293);
        uint64_t v304 = FMFFriend.name.getter();
        unint64_t v235 = v239;
        (*v290)(v236, v238);
        uint64_t v232 = v266;
      }
      sub_1002BCBDC(v270, (uint64_t)v232, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      int v240 = swift_getEnumCaseMultiPayload();
      uint64_t v302 = v85;
      if (v240 == 1)
      {
        uint64_t v241 = *v232;
        if (qword_1006ADF70 != -1) {
          swift_once();
        }
        id v242 = [qword_1006D1508 stringFromContact:v241, v263];
        if (v242)
        {
          uint64_t v243 = v242;
          uint64_t v244 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v246 = v245;
        }
        else
        {

          uint64_t v244 = 0;
          unint64_t v246 = 0xE000000000000000;
        }
      }
      else
      {
        uint64_t v247 = v292;
        uint64_t v248 = v293;
        (*v291)(v292, v232, v293);
        uint64_t v244 = FMFFriend.name.getter();
        unint64_t v246 = v249;
        (*v290)(v247, v248);
      }
      if (v304 == v244 && v235 == v246) {
        LODWORD(v304) = 0;
      }
      else {
        LODWORD(v304) = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v250 = v76 + *(int *)(v312 + 48);
      uint64_t v251 = v76 + *(int *)(v312 + 64);
      sub_1002BCB14(v270, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      sub_1002BCB14(v268, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      uint64_t v252 = type metadata accessor for UUID();
      uint64_t v253 = *(void (**)(uint64_t, uint64_t))(*(void *)(v252 - 8) + 8);
      v253(v251, v252);
      sub_1002BCB14(v250, type metadata accessor for FMBeaconSharingModuleShareState);
      v253(v302, v252);
      sub_1002BCB14(v84, type metadata accessor for FMBeaconSharingModuleShareState);
      sub_1002BCB14(v272, type metadata accessor for FMBeaconSharingModuleEntry);
      uint64_t v31 = v309;
      uint64_t v81 = v281;
      goto LABEL_24;
    }
    uint64_t v86 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v86 - 8) + 8))(v85, v86);
    sub_1002BCB14(v84, type metadata accessor for FMBeaconSharingModuleShareState);
    sub_1002BCB14(v83, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    sub_100003F10(v77, &qword_1006B9268);
    goto LABEL_23;
  }
  unint64_t v285 = (unint64_t)_swiftEmptyArrayStorage
       + ((*(unsigned __int8 *)(v286 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v286 + 80));
  uint64_t v263 = _swiftEmptyArrayStorage;
  if (v58 == 1) {
    goto LABEL_12;
  }
  unint64_t v66 = _swiftEmptyArrayStorage[2];
  uint64_t v64 = (char *)_swiftEmptyArrayStorage;
LABEL_187:
  if (v66 >= 2)
  {
    unint64_t v255 = *v314;
    uint64_t v254 = v263;
    while (1)
    {
      unint64_t v256 = v66 - 2;
      if (v66 < 2) {
        goto LABEL_219;
      }
      if (!v255) {
        goto LABEL_231;
      }
      uint64_t v257 = v64;
      uint64_t v258 = *(void *)&v64[16 * v256 + 32];
      uint64_t v259 = *(void *)&v64[16 * v66 + 24];
      uint64_t v260 = v287;
      sub_1002B9554(v255 + *(void *)(v286 + 72) * v258, v255 + *(void *)(v286 + 72) * *(void *)&v64[16 * v66 + 16], v255 + *(void *)(v286 + 72) * v259, v285);
      if (v260) {
        goto LABEL_185;
      }
      if (v259 < v258) {
        goto LABEL_220;
      }
      uint64_t v287 = 0;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v257 = sub_1002687F8((uint64_t)v257);
      }
      if (v256 >= *((void *)v257 + 2)) {
        goto LABEL_221;
      }
      uint64_t v261 = &v257[16 * v256 + 32];
      *(void *)uint64_t v261 = v258;
      *((void *)v261 + 1) = v259;
      unint64_t v262 = *((void *)v257 + 2);
      if (v66 > v262) {
        goto LABEL_222;
      }
      memmove(&v257[16 * v66 + 16], &v257[16 * v66 + 32], 16 * (v262 - v66));
      uint64_t v64 = v257;
      *((void *)v257 + 2) = v262 - 1;
      unint64_t v66 = v262 - 1;
      if (v262 <= 2) {
        goto LABEL_200;
      }
    }
  }
  uint64_t v254 = v263;
LABEL_200:
  swift_bridgeObjectRelease();
  v254[2] = 0;
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1002B79E8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v170 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v170 - 8);
  uint64_t v5 = __chkstk_darwin(v170);
  uint64_t v169 = (char *)&v149 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v168 = (char *)&v149 - v7;
  uint64_t v8 = type metadata accessor for FMIPBeaconShare();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v155 = (char *)&v149 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v174 = (char *)&v149 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v167 = (char *)&v149 - v15;
  __chkstk_darwin(v14);
  uint64_t v166 = (char *)&v149 - v16;
  Swift::Int v17 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v17);
  if (result >= v17)
  {
    if (v17 < 0) {
      goto LABEL_137;
    }
    if (v17) {
      return sub_1002B9178(0, v17, 1, a1);
    }
    return result;
  }
  if (v17 >= 0) {
    uint64_t v19 = v17;
  }
  else {
    uint64_t v19 = v17 + 1;
  }
  if (v17 < -1) {
    goto LABEL_145;
  }
  Swift::Int v20 = result;
  int v172 = a1;
  uint64_t v158 = (void *)v9;
  if (v17 < 2)
  {
    uint64_t v25 = v4;
    uint64_t v26 = (char *)_swiftEmptyArrayStorage;
    unint64_t v157 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    int v149 = _swiftEmptyArrayStorage;
    if (v17 != 1)
    {
      unint64_t v29 = _swiftEmptyArrayStorage[2];
LABEL_103:
      if (v29 >= 2)
      {
        uint64_t v142 = *a1;
        do
        {
          unint64_t v143 = v29 - 2;
          if (v29 < 2) {
            goto LABEL_132;
          }
          if (!v142) {
            goto LABEL_144;
          }
          uint64_t v144 = v26;
          uint64_t v145 = *(void *)&v26[16 * v143 + 32];
          uint64_t v146 = *(void *)&v26[16 * v29 + 24];
          sub_1002BA8D8(v142 + v158[9] * v145, v142 + v158[9] * *(void *)&v26[16 * v29 + 16], v142 + v158[9] * v146, v157);
          if (v2) {
            break;
          }
          if (v146 < v145) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v144 = sub_1002687F8((uint64_t)v26);
          }
          if (v143 >= *((void *)v144 + 2)) {
            goto LABEL_134;
          }
          uint64_t v147 = &v144[16 * v143 + 32];
          *(void *)uint64_t v147 = v145;
          *((void *)v147 + 1) = v146;
          unint64_t v148 = *((void *)v144 + 2);
          if (v29 > v148) {
            goto LABEL_135;
          }
          memmove(&v144[16 * v29 + 16], &v144[16 * v29 + 32], 16 * (v148 - v29));
          *((void *)v144 + 2) = v148 - 1;
          unint64_t v29 = v148 - 1;
          uint64_t v26 = v144;
        }
        while (v148 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      v149[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v21 = 1;
    uint64_t v4 = v25;
  }
  else
  {
    uint64_t v21 = v17;
    uint64_t v22 = v19 >> 1;
    uint64_t v23 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v23 + 16) = v22;
    unint64_t v24 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    int v149 = (void *)v23;
    unint64_t v157 = v23 + v24;
  }
  uint64_t v27 = 0;
  unint64_t v164 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v165 = v9 + 16;
  unint64_t v163 = (void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v178 = (uint64_t *)(v9 + 32);
  uint64_t v26 = (char *)_swiftEmptyArrayStorage;
  uint64_t v173 = v8;
  Swift::Int v151 = v20;
  uint64_t v28 = v21;
  while (1)
  {
    uint64_t v30 = v27 + 1;
    uint64_t v156 = v27;
    if (v27 + 1 >= v28)
    {
      a1 = v172;
    }
    else
    {
      id v150 = v26;
      uint64_t v31 = *v172;
      uint64_t v152 = v31;
      uint64_t v32 = v158[9];
      uint64_t v176 = v32;
      uint64_t v177 = v27 + 1;
      uint64_t v33 = v31 + v32 * v30;
      uint64_t v34 = (void (*)(char *, uint64_t, uint64_t))v158[2];
      uint64_t v35 = v166;
      uint64_t v175 = (char *)v28;
      v34(v166, v33, v8);
      uint64_t v36 = v31 + v32 * v27;
      uint64_t v37 = v167;
      uint64_t v162 = v34;
      v34(v167, v36, v8);
      uint64_t v38 = v168;
      FMIPBeaconShare.creationDate.getter();
      uint64_t v39 = v169;
      FMIPBeaconShare.creationDate.getter();
      LODWORD(v171) = static Date.< infix(_:_:)();
      uint64_t v40 = (char *)*v164;
      uint64_t v41 = v170;
      (*v164)(v39, v170);
      char v161 = v40;
      ((void (*)(char *, uint64_t))v40)(v38, v41);
      uint64_t v42 = (void (*)(char *, uint64_t))v158[1];
      uint64_t v43 = v37;
      uint64_t v27 = v156;
      v42(v43, v8);
      unint64_t v160 = (char *)v42;
      v42(v35, v8);
      uint64_t v28 = (uint64_t)v175;
      uint64_t v30 = v27 + 2;
      if (v27 + 2 < (uint64_t)v175)
      {
        uint64_t v154 = v2;
        uint64_t v159 = v176 * v177;
        uint64_t v44 = v152;
        uint64_t v153 = v176 * v30;
        while (1)
        {
          uint64_t v45 = v30;
          uint64_t v46 = v166;
          uint64_t v47 = v173;
          uint64_t v48 = v162;
          v162(v166, v44 + v153, v173);
          uint64_t v49 = v167;
          v48(v167, v44 + v159, v47);
          uint64_t v50 = v168;
          FMIPBeaconShare.creationDate.getter();
          uint64_t v51 = v169;
          FMIPBeaconShare.creationDate.getter();
          LODWORD(v177) = static Date.< infix(_:_:)();
          uint64_t v52 = v51;
          uint64_t v53 = v170;
          uint64_t v54 = (void (*)(char *, uint64_t))v161;
          ((void (*)(char *, uint64_t))v161)(v52, v170);
          v54(v50, v53);
          uint64_t v55 = (void (*)(char *, uint64_t))v160;
          ((void (*)(char *, uint64_t))v160)(v49, v47);
          v55(v46, v47);
          if ((v171 ^ v177)) {
            break;
          }
          uint64_t v30 = v45 + 1;
          uint64_t v28 = (uint64_t)v175;
          v44 += v176;
          if (v175 == (char *)(v45 + 1))
          {
            uint64_t v30 = (uint64_t)v175;
            uint64_t v8 = v173;
            uint64_t v2 = v154;
            uint64_t v27 = v156;
            goto LABEL_24;
          }
        }
        uint64_t v8 = v173;
        uint64_t v2 = v154;
        uint64_t v30 = v45;
        uint64_t v27 = v156;
        uint64_t v28 = (uint64_t)v175;
      }
LABEL_24:
      a1 = v172;
      uint64_t v26 = v150;
      Swift::Int v20 = v151;
      if (v171)
      {
        if (v30 < v27) {
          goto LABEL_138;
        }
        if (v27 < v30)
        {
          uint64_t v56 = 0;
          uint64_t v57 = v176;
          uint64_t v58 = v176 * (v30 - 1);
          uint64_t v59 = v30 * v176;
          uint64_t v60 = v27 * v176;
          do
          {
            if (v27 != v30 + v56 - 1)
            {
              if (!v152) {
                goto LABEL_143;
              }
              uint64_t v154 = v2;
              unint64_t v62 = v152 + v60;
              uint64_t v63 = v152 + v58;
              uint64_t v64 = v152;
              uint64_t v177 = *v178;
              ((void (*)(char *, uint64_t, uint64_t))v177)(v155, v152 + v60, v173);
              if (v60 < v58 || v62 >= v64 + v59)
              {
                uint64_t v61 = v173;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v61 = v173;
                if (v60 != v58) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              ((void (*)(uint64_t, char *, uint64_t))v177)(v63, v155, v61);
              a1 = v172;
              uint64_t v2 = v154;
              uint64_t v57 = v176;
            }
            ++v27;
            --v56;
            v58 -= v57;
            v59 -= v57;
            v60 += v57;
          }
          while (v27 < v30 + v56);
          uint64_t v26 = v150;
          uint64_t v8 = v173;
          Swift::Int v20 = v151;
          uint64_t v27 = v156;
          uint64_t v28 = (uint64_t)v175;
        }
      }
    }
    if (v30 < v28)
    {
      if (__OFSUB__(v30, v27)) {
        goto LABEL_136;
      }
      if (v30 - v27 < v20) {
        break;
      }
    }
LABEL_55:
    if (v30 < v27) {
      goto LABEL_131;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v171 = v30;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v26 = sub_100268068(0, *((void *)v26 + 2) + 1, 1, v26);
    }
    unint64_t v90 = *((void *)v26 + 2);
    unint64_t v89 = *((void *)v26 + 3);
    unint64_t v29 = v90 + 1;
    if (v90 >= v89 >> 1) {
      uint64_t v26 = sub_100268068((char *)(v89 > 1), v90 + 1, 1, v26);
    }
    *((void *)v26 + 2) = v29;
    int v91 = v26 + 32;
    int v92 = &v26[16 * v90 + 32];
    uint64_t v93 = v171;
    *(void *)int v92 = v156;
    *((void *)v92 + 1) = v93;
    if (v90)
    {
      while (1)
      {
        unint64_t v94 = v29 - 1;
        if (v29 >= 4)
        {
          unsigned int v99 = &v91[16 * v29];
          uint64_t v100 = *((void *)v99 - 8);
          uint64_t v101 = *((void *)v99 - 7);
          BOOL v105 = __OFSUB__(v101, v100);
          uint64_t v102 = v101 - v100;
          if (v105) {
            goto LABEL_120;
          }
          uint64_t v104 = *((void *)v99 - 6);
          uint64_t v103 = *((void *)v99 - 5);
          BOOL v105 = __OFSUB__(v103, v104);
          uint64_t v97 = v103 - v104;
          char v98 = v105;
          if (v105) {
            goto LABEL_121;
          }
          unint64_t v106 = v29 - 2;
          uint64_t v107 = &v91[16 * v29 - 32];
          uint64_t v109 = *(void *)v107;
          uint64_t v108 = *((void *)v107 + 1);
          BOOL v105 = __OFSUB__(v108, v109);
          uint64_t v110 = v108 - v109;
          if (v105) {
            goto LABEL_123;
          }
          BOOL v105 = __OFADD__(v97, v110);
          uint64_t v111 = v97 + v110;
          if (v105) {
            goto LABEL_126;
          }
          if (v111 >= v102)
          {
            Swift::Int v129 = &v91[16 * v94];
            uint64_t v131 = *(void *)v129;
            uint64_t v130 = *((void *)v129 + 1);
            BOOL v105 = __OFSUB__(v130, v131);
            uint64_t v132 = v130 - v131;
            if (v105) {
              goto LABEL_130;
            }
            BOOL v122 = v97 < v132;
            goto LABEL_92;
          }
        }
        else
        {
          if (v29 != 3)
          {
            uint64_t v123 = *((void *)v26 + 4);
            uint64_t v124 = *((void *)v26 + 5);
            BOOL v105 = __OFSUB__(v124, v123);
            uint64_t v116 = v124 - v123;
            char v117 = v105;
            goto LABEL_86;
          }
          uint64_t v96 = *((void *)v26 + 4);
          uint64_t v95 = *((void *)v26 + 5);
          BOOL v105 = __OFSUB__(v95, v96);
          uint64_t v97 = v95 - v96;
          char v98 = v105;
        }
        if (v98) {
          goto LABEL_122;
        }
        unint64_t v106 = v29 - 2;
        id v112 = &v91[16 * v29 - 32];
        uint64_t v114 = *(void *)v112;
        uint64_t v113 = *((void *)v112 + 1);
        BOOL v115 = __OFSUB__(v113, v114);
        uint64_t v116 = v113 - v114;
        char v117 = v115;
        if (v115) {
          goto LABEL_125;
        }
        uint64_t v118 = &v91[16 * v94];
        uint64_t v120 = *(void *)v118;
        uint64_t v119 = *((void *)v118 + 1);
        BOOL v105 = __OFSUB__(v119, v120);
        uint64_t v121 = v119 - v120;
        if (v105) {
          goto LABEL_128;
        }
        if (__OFADD__(v116, v121)) {
          goto LABEL_129;
        }
        if (v116 + v121 >= v97)
        {
          BOOL v122 = v97 < v121;
LABEL_92:
          if (v122) {
            unint64_t v94 = v106;
          }
          goto LABEL_94;
        }
LABEL_86:
        if (v117) {
          goto LABEL_124;
        }
        uint64_t v125 = &v91[16 * v94];
        uint64_t v127 = *(void *)v125;
        uint64_t v126 = *((void *)v125 + 1);
        BOOL v105 = __OFSUB__(v126, v127);
        uint64_t v128 = v126 - v127;
        if (v105) {
          goto LABEL_127;
        }
        if (v128 < v116) {
          goto LABEL_15;
        }
LABEL_94:
        unint64_t v133 = v94 - 1;
        if (v94 - 1 >= v29)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        uint64_t v134 = *a1;
        if (!*a1) {
          goto LABEL_142;
        }
        Swift::Int v135 = v26;
        uint64_t v136 = &v91[16 * v133];
        uint64_t v137 = *(void *)v136;
        Swift::Int v138 = v91;
        uint64_t v139 = &v91[16 * v94];
        uint64_t v140 = *((void *)v139 + 1);
        sub_1002BA8D8(v134 + v158[9] * *(void *)v136, v134 + v158[9] * *(void *)v139, v134 + v158[9] * v140, v157);
        if (v2) {
          goto LABEL_114;
        }
        if (v140 < v137) {
          goto LABEL_117;
        }
        if (v94 > *((void *)v135 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v136 = v137;
        *(void *)&v138[16 * v133 + 8] = v140;
        unint64_t v141 = *((void *)v135 + 2);
        if (v94 >= v141) {
          goto LABEL_119;
        }
        uint64_t v26 = v135;
        unint64_t v29 = v141 - 1;
        memmove(v139, v139 + 16, 16 * (v141 - 1 - v94));
        int v91 = v138;
        *((void *)v135 + 2) = v141 - 1;
        a1 = v172;
        uint64_t v8 = v173;
        if (v141 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v29 = 1;
LABEL_15:
    uint64_t v28 = a1[1];
    uint64_t v27 = v171;
    Swift::Int v20 = v151;
    if (v171 >= v28) {
      goto LABEL_103;
    }
  }
  if (__OFADD__(v27, v20)) {
    goto LABEL_139;
  }
  if (v27 + v20 < v28) {
    uint64_t v28 = v27 + v20;
  }
  if (v28 >= v27)
  {
    if (v30 != v28)
    {
      id v150 = v26;
      uint64_t v154 = v2;
      Swift::Int v65 = (char *)v158[9];
      uint64_t v159 = v158[2];
      unint64_t v160 = v65;
      uint64_t v66 = (void)v65 * (v30 - 1);
      Swift::Int v67 = (char *)(v30 * (void)v65);
      uint64_t v153 = v28;
      do
      {
        uint64_t v69 = 0;
        uint64_t v70 = v156;
        uint64_t v171 = v30;
        char v161 = v67;
        uint64_t v162 = (void (*)(char *, uint64_t, uint64_t))v66;
        while (1)
        {
          uint64_t v176 = v70;
          uint64_t v71 = *a1;
          uint64_t v175 = &v67[v69];
          uint64_t v72 = &v67[v69 + v71];
          uint64_t v73 = v166;
          uint64_t v74 = (void (*)(char *, uint64_t, uint64_t))v159;
          ((void (*)(char *, char *, uint64_t))v159)(v166, v72, v8);
          uint64_t v75 = v66 + v69 + v71;
          uint64_t v76 = v167;
          v74(v167, v75, v8);
          uint64_t v77 = v168;
          FMIPBeaconShare.creationDate.getter();
          uint64_t v78 = a1;
          uint64_t v79 = v169;
          FMIPBeaconShare.creationDate.getter();
          LODWORD(v177) = static Date.< infix(_:_:)();
          int v80 = *v164;
          uint64_t v81 = v79;
          uint64_t v82 = v170;
          (*v164)(v81, v170);
          uint64_t v83 = v77;
          uint64_t v8 = v173;
          v80(v83, v82);
          uint64_t v84 = *v163;
          (*v163)(v76, v8);
          v84(v73, v8);
          if ((v177 & 1) == 0) {
            break;
          }
          uint64_t v85 = *v78;
          if (!*v78) {
            goto LABEL_141;
          }
          Swift::Int v67 = v161;
          uint64_t v66 = (uint64_t)v162;
          uint64_t v86 = (char *)v162 + v85 + v69;
          unint64_t v87 = (void (*)(char *, char *, uint64_t))*v178;
          ((void (*)(char *, char *, uint64_t))*v178)(v174, &v161[v85 + v69], v8);
          swift_arrayInitWithTakeFrontToBack();
          v87(v86, v174, v8);
          v69 -= (uint64_t)v160;
          uint64_t v70 = v176 + 1;
          uint64_t v68 = v171;
          a1 = v172;
          if (v171 == v176 + 1) {
            goto LABEL_48;
          }
        }
        uint64_t v68 = v171;
        a1 = v78;
        Swift::Int v67 = v161;
        uint64_t v66 = (uint64_t)v162;
LABEL_48:
        uint64_t v30 = v68 + 1;
        v66 += (uint64_t)v160;
        Swift::Int v67 = &v160[(void)v67];
      }
      while (v30 != v153);
      uint64_t v30 = v153;
      uint64_t v2 = v154;
      uint64_t v26 = v150;
      uint64_t v27 = v156;
    }
    goto LABEL_55;
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002B8750(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v69 = a1;
  uint64_t v76 = type metadata accessor for FMFFriend();
  uint64_t v7 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v75 = &v67[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v82 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  uint64_t v9 = __chkstk_darwin(v82);
  uint64_t v73 = (void **)&v67[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v74 = (void **)&v67[-v12];
  uint64_t v13 = __chkstk_darwin(v11);
  unint64_t v90 = &v67[-v14];
  __chkstk_darwin(v13);
  uint64_t v81 = &v67[-v15];
  uint64_t v86 = sub_10005D034(&qword_1006B9268);
  __chkstk_darwin(v86);
  uint64_t v79 = &v67[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v77 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  uint64_t v17 = __chkstk_darwin(v77);
  int v91 = &v67[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v78 = &v67[-v20];
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = &v67[-v22];
  uint64_t result = __chkstk_darwin(v21);
  unint64_t v94 = &v67[-v26];
  uint64_t v89 = a3;
  uint64_t v68 = a2;
  if (a3 != a2)
  {
    uint64_t v27 = *(void *)(v25 + 72);
    uint64_t v71 = (void (**)(unsigned char *, void **, uint64_t))(v7 + 32);
    uint64_t v70 = (void (**)(unsigned char *, uint64_t))(v7 + 8);
    uint64_t v28 = v27 * (v89 - 1);
    uint64_t v87 = v27;
    uint64_t v95 = v27 * v89;
    uint64_t v72 = a4;
    uint64_t v85 = v23;
LABEL_7:
    uint64_t v29 = 0;
    uint64_t v30 = v69;
    uint64_t v31 = v79;
    uint64_t v88 = v28;
    while (1)
    {
      uint64_t v32 = *a4;
      uint64_t v93 = v95 + v29;
      uint64_t v33 = v94;
      sub_1002BCBDC(v95 + v29 + v32, (uint64_t)v94, type metadata accessor for FMBeaconSharingModuleEntry);
      uint64_t v92 = v28 + v29;
      sub_1002BCBDC(v28 + v29 + v32, (uint64_t)v23, type metadata accessor for FMBeaconSharingModuleEntry);
      uint64_t v34 = (uint64_t)&v31[*(int *)(v86 + 48)];
      sub_1002BCBDC((uint64_t)v33, (uint64_t)v31, type metadata accessor for FMBeaconSharingModuleEntry);
      sub_1002BCBDC((uint64_t)v23, v34, type metadata accessor for FMBeaconSharingModuleEntry);
      uint64_t v35 = sub_10005D034(&qword_1006B9050);
      uint64_t v36 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48);
      int v37 = v36(v31, 2, v35);
      if (v37)
      {
        if (v37 != 1)
        {
          sub_1002BCB14(v34, type metadata accessor for FMBeaconSharingModuleEntry);
          sub_1002BCB14((uint64_t)v31, type metadata accessor for FMBeaconSharingModuleEntry);
LABEL_5:
          uint64_t v23 = v85;
          sub_1002BCB14((uint64_t)v85, type metadata accessor for FMBeaconSharingModuleEntry);
          uint64_t result = sub_1002BCB14((uint64_t)v94, type metadata accessor for FMBeaconSharingModuleEntry);
          uint64_t v28 = v88;
LABEL_6:
          v28 += v87;
          v95 += v87;
          if (++v89 == v68) {
            return result;
          }
          goto LABEL_7;
        }
        sub_1002BCB14(v34, type metadata accessor for FMBeaconSharingModuleEntry);
        sub_1002BCB14((uint64_t)v31, type metadata accessor for FMBeaconSharingModuleEntry);
        uint64_t v23 = v85;
        sub_1002BCB14((uint64_t)v85, type metadata accessor for FMBeaconSharingModuleEntry);
        uint64_t result = sub_1002BCB14((uint64_t)v94, type metadata accessor for FMBeaconSharingModuleEntry);
        uint64_t v28 = v88;
      }
      else
      {
        uint64_t v38 = v78;
        sub_1002BCBDC((uint64_t)v31, (uint64_t)v78, type metadata accessor for FMBeaconSharingModuleEntry);
        uint64_t v84 = &v38[*(int *)(v35 + 48)];
        uint64_t v83 = &v38[*(int *)(v35 + 64)];
        if (v36((unsigned char *)v34, 2, v35))
        {
          uint64_t v66 = type metadata accessor for UUID();
          (*(void (**)(unsigned char *, uint64_t))(*(void *)(v66 - 8) + 8))(v83, v66);
          sub_1002BCB14((uint64_t)v84, type metadata accessor for FMBeaconSharingModuleShareState);
          sub_1002BCB14((uint64_t)v38, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          sub_100003F10((uint64_t)v31, &qword_1006B9268);
          goto LABEL_5;
        }
        uint64_t v39 = v81;
        sub_1002BCB74((uint64_t)v38, (uint64_t)v81, type metadata accessor for FMBeaconSharingModuleRelationshipType);
        sub_1002BCB74(v34, (uint64_t)v90, type metadata accessor for FMBeaconSharingModuleRelationshipType);
        uint64_t v40 = v74;
        sub_1002BCBDC((uint64_t)v39, (uint64_t)v74, type metadata accessor for FMBeaconSharingModuleRelationshipType);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v41 = *v40;
          if (qword_1006ADF70 != -1) {
            swift_once();
          }
          id v42 = [(id)qword_1006D1508 stringFromContact:v41];
          if (v42)
          {
            uint64_t v43 = v42;
            uint64_t v80 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v45 = v44;
          }
          else
          {

            uint64_t v80 = 0;
            unint64_t v45 = 0xE000000000000000;
          }
        }
        else
        {
          uint64_t v46 = v75;
          uint64_t v47 = v76;
          (*v71)(v75, v40, v76);
          uint64_t v80 = FMFFriend.name.getter();
          unint64_t v45 = v48;
          (*v70)(v46, v47);
        }
        uint64_t v49 = v73;
        sub_1002BCBDC((uint64_t)v90, (uint64_t)v73, type metadata accessor for FMBeaconSharingModuleRelationshipType);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v50 = *v49;
          if (qword_1006ADF70 != -1) {
            swift_once();
          }
          id v51 = [(id)qword_1006D1508 stringFromContact:v50];
          if (v51)
          {
            uint64_t v52 = v51;
            uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v55 = v54;
          }
          else
          {

            uint64_t v53 = 0;
            unint64_t v55 = 0xE000000000000000;
          }
        }
        else
        {
          uint64_t v57 = v75;
          uint64_t v56 = v76;
          (*v71)(v75, v49, v76);
          uint64_t v53 = FMFFriend.name.getter();
          unint64_t v55 = v58;
          (*v70)(v57, v56);
        }
        if (v80 == v53 && v45 == v55) {
          char v59 = 0;
        }
        else {
          char v59 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v60 = v34 + *(int *)(v35 + 48);
        uint64_t v61 = v34 + *(int *)(v35 + 64);
        sub_1002BCB14((uint64_t)v90, type metadata accessor for FMBeaconSharingModuleRelationshipType);
        sub_1002BCB14((uint64_t)v81, type metadata accessor for FMBeaconSharingModuleRelationshipType);
        uint64_t v62 = type metadata accessor for UUID();
        uint64_t v63 = *(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8);
        v63(v61, v62);
        sub_1002BCB14(v60, type metadata accessor for FMBeaconSharingModuleShareState);
        v63((uint64_t)v83, v62);
        sub_1002BCB14((uint64_t)v84, type metadata accessor for FMBeaconSharingModuleShareState);
        uint64_t v31 = v79;
        sub_1002BCB14((uint64_t)v79, type metadata accessor for FMBeaconSharingModuleEntry);
        uint64_t v23 = v85;
        sub_1002BCB14((uint64_t)v85, type metadata accessor for FMBeaconSharingModuleEntry);
        uint64_t result = sub_1002BCB14((uint64_t)v94, type metadata accessor for FMBeaconSharingModuleEntry);
        a4 = v72;
        uint64_t v28 = v88;
        if ((v59 & 1) == 0) {
          goto LABEL_6;
        }
      }
      uint64_t v64 = *a4;
      if (!*a4)
      {
        __break(1u);
        return result;
      }
      uint64_t v65 = v64 + v28 + v29;
      sub_1002BCB74(v64 + v95 + v29, (uint64_t)v91, type metadata accessor for FMBeaconSharingModuleEntry);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_1002BCB74((uint64_t)v91, v65, type metadata accessor for FMBeaconSharingModuleEntry);
      v29 -= v87;
      if (v89 == ++v30) {
        goto LABEL_6;
      }
    }
  }
  return result;
}

uint64_t sub_1002B9178(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v46 = a1;
  uint64_t v56 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v56 - 8);
  uint64_t v8 = __chkstk_darwin(v56);
  unint64_t v55 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v54 = (char *)&v44 - v10;
  uint64_t v11 = type metadata accessor for FMIPBeaconShare();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v62 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v53 = (char *)&v44 - v15;
  uint64_t result = __chkstk_darwin(v14);
  uint64_t v52 = (char *)&v44 - v18;
  uint64_t v60 = a3;
  uint64_t v45 = a2;
  if (a3 != a2)
  {
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    uint64_t v19 = v17 + 16;
    uint64_t v21 = *(void *)(v19 + 56);
    unint64_t v48 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v49 = v20;
    uint64_t v47 = (void (**)(char *, uint64_t))(v19 - 8);
    uint64_t v50 = v11;
    uint64_t v51 = v19;
    uint64_t v61 = (void (**)(char *, uint64_t, uint64_t))(v19 + 16);
    uint64_t v22 = v21 * (v60 - 1);
    uint64_t v57 = v21;
    uint64_t v23 = v21 * v60;
LABEL_5:
    uint64_t v24 = 0;
    uint64_t v64 = v46;
    uint64_t v58 = v23;
    uint64_t v59 = v22;
    while (1)
    {
      uint64_t v25 = *a4;
      uint64_t v63 = v23 + v24;
      uint64_t v26 = v23 + v24 + v25;
      uint64_t v27 = v52;
      uint64_t v28 = v49;
      v49(v52, v26, v11);
      uint64_t v29 = v22 + v24 + v25;
      uint64_t v30 = v53;
      v28(v53, v29, v11);
      uint64_t v31 = v54;
      FMIPBeaconShare.creationDate.getter();
      uint64_t v32 = a4;
      uint64_t v33 = v55;
      FMIPBeaconShare.creationDate.getter();
      int v65 = static Date.< infix(_:_:)();
      uint64_t v34 = *v48;
      uint64_t v35 = v33;
      uint64_t v36 = v56;
      (*v48)(v35, v56);
      uint64_t v37 = v36;
      a4 = v32;
      uint64_t v11 = v50;
      v34(v31, v37);
      uint64_t v38 = *v47;
      uint64_t v39 = v30;
      uint64_t v22 = v59;
      (*v47)(v39, v11);
      uint64_t v40 = v27;
      uint64_t v23 = v58;
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v38)(v40, v11);
      if ((v65 & 1) == 0)
      {
LABEL_4:
        v22 += v57;
        v23 += v57;
        if (++v60 == v45) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v41 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v42 = v41 + v22 + v24;
      uint64_t v43 = *v61;
      (*v61)(v62, v41 + v23 + v24, v11);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v43)(v42, v62, v11);
      v24 -= v57;
      if (v60 == ++v64) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B9554(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v159 = type metadata accessor for FMFFriend();
  uint64_t v10 = *(void *)(v159 - 8);
  __chkstk_darwin(v159);
  uint64_t v158 = (char *)&v149 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  uint64_t v12 = __chkstk_darwin(v162);
  uint64_t v155 = (void **)((char *)&v149 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v154 = (void **)((char *)&v149 - v15);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v161 = (uint64_t)&v149 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v157 = (uint64_t)&v149 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v153 = (void **)((char *)&v149 - v21);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v152 = (void **)((char *)&v149 - v23);
  uint64_t v24 = __chkstk_darwin(v22);
  unint64_t v164 = (unint64_t)&v149 - v25;
  __chkstk_darwin(v24);
  unint64_t v163 = (unint64_t)&v149 - v26;
  uint64_t v171 = sub_10005D034(&qword_1006B9268);
  uint64_t v27 = __chkstk_darwin(v171);
  uint64_t v167 = (uint64_t)&v149 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v149 - v29;
  uint64_t v168 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  uint64_t v31 = __chkstk_darwin(v168);
  uint64_t v32 = __chkstk_darwin(v31);
  unint64_t v170 = (unint64_t)&v149 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v169 = (char *)&v149 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v149 - v37;
  uint64_t v39 = __chkstk_darwin(v36);
  uint64_t v41 = (char *)&v149 - v40;
  __chkstk_darwin(v39);
  uint64_t v44 = (char *)&v149 - v43;
  uint64_t v172 = *(void *)(v45 + 72);
  if (!v172)
  {
    __break(1u);
LABEL_115:
    __break(1u);
LABEL_116:
    __break(1u);
    goto LABEL_117;
  }
  if (a2 - a1 == 0x8000000000000000 && v172 == -1) {
    goto LABEL_115;
  }
  int64_t v46 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v172 == -1) {
    goto LABEL_116;
  }
  uint64_t v47 = (uint64_t)(a2 - a1) / v172;
  unint64_t v176 = a1;
  unint64_t v175 = a4;
  uint64_t v48 = v46 / v172;
  uint64_t v151 = v5;
  unint64_t v173 = a3;
  if (v47 >= v46 / v172)
  {
    if (v48 < 0) {
      goto LABEL_117;
    }
    uint64_t v50 = v48 * v172;
    uint64_t v51 = v167;
    unint64_t v160 = (char *)v42;
    if (a4 < a2 || a2 + v50 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v92 = a4 + v50;
    unint64_t v174 = a4 + v50;
    unint64_t v176 = a2;
    if (v50 < 1 || a1 >= a2)
    {
LABEL_71:
      sub_100268164(&v176, &v175, (uint64_t *)&v174);
      return 1;
    }
    uint64_t v95 = -v172;
    uint64_t v152 = (void **)(v10 + 32);
    id v150 = (void (**)(char *, uint64_t))(v10 + 8);
    unint64_t v165 = a1;
    unint64_t v166 = a4;
    uint64_t v172 = -v172;
    while (1)
    {
      uint64_t v96 = (uint64_t)v169;
      sub_1002BCBDC(v92 + v95, (uint64_t)v169, type metadata accessor for FMBeaconSharingModuleEntry);
      unint64_t v97 = a2 + v95;
      uint64_t v98 = v170;
      sub_1002BCBDC(a2 + v95, v170, type metadata accessor for FMBeaconSharingModuleEntry);
      uint64_t v99 = v51 + *(int *)(v171 + 48);
      sub_1002BCBDC(v96, v51, type metadata accessor for FMBeaconSharingModuleEntry);
      sub_1002BCBDC(v98, v99, type metadata accessor for FMBeaconSharingModuleEntry);
      uint64_t v100 = sub_10005D034(&qword_1006B9050);
      uint64_t v101 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 48);
      int v102 = v101(v51, 2, v100);
      if (v102)
      {
        unint64_t v103 = v173;
        if (v102 == 1)
        {
          sub_1002BCB14(v99, type metadata accessor for FMBeaconSharingModuleEntry);
          uint64_t v51 = v167;
          sub_1002BCB14(v167, type metadata accessor for FMBeaconSharingModuleEntry);
          char v104 = 1;
        }
        else
        {
          sub_1002BCB14(v99, type metadata accessor for FMBeaconSharingModuleEntry);
          uint64_t v51 = v167;
          sub_1002BCB14(v167, type metadata accessor for FMBeaconSharingModuleEntry);
          char v104 = 0;
        }
        goto LABEL_98;
      }
      unint64_t v163 = v97;
      unint64_t v164 = a2;
      uint64_t v51 = v167;
      uint64_t v105 = (uint64_t)v160;
      sub_1002BCBDC(v167, (uint64_t)v160, type metadata accessor for FMBeaconSharingModuleEntry);
      uint64_t v106 = v105 + *(int *)(v100 + 48);
      uint64_t v107 = (char *)(v105 + *(int *)(v100 + 64));
      int v108 = v101(v99, 2, v100);
      unint64_t v103 = v173;
      if (!v108) {
        break;
      }
      uint64_t v109 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t))(*(void *)(v109 - 8) + 8))(v107, v109);
      sub_1002BCB14(v106, type metadata accessor for FMBeaconSharingModuleShareState);
      sub_1002BCB14(v105, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      sub_100003F10(v51, &qword_1006B9268);
      char v104 = 0;
      unint64_t v97 = v163;
      a2 = v164;
LABEL_98:
      uint64_t v143 = v172;
      unint64_t v144 = v103 + v172;
      sub_1002BCB14(v170, type metadata accessor for FMBeaconSharingModuleEntry);
      sub_1002BCB14((uint64_t)v169, type metadata accessor for FMBeaconSharingModuleEntry);
      unint64_t v145 = v166;
      if (v104)
      {
        if (v103 < a2 || v144 >= a2)
        {
          swift_arrayInitWithTakeFrontToBack();
          unint64_t v147 = v165;
          uint64_t v95 = v172;
        }
        else
        {
          BOOL v146 = v103 == a2;
          unint64_t v147 = v165;
          uint64_t v95 = v172;
          if (!v146) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v176 += v95;
      }
      else
      {
        unint64_t v148 = v174;
        v174 += v143;
        uint64_t v95 = v143;
        if (v103 < v148 || v144 >= v148)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v103 != v148)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v97 = a2;
        unint64_t v147 = v165;
      }
      unint64_t v92 = v174;
      if (v174 > v145)
      {
        a2 = v97;
        unint64_t v173 = v144;
        if (v97 > v147) {
          continue;
        }
      }
      goto LABEL_71;
    }
    uint64_t v156 = (char *)v106;
    uint64_t v110 = v157;
    sub_1002BCB74(v105, v157, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    sub_1002BCB74(v99, v161, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    uint64_t v111 = v110;
    id v112 = v154;
    sub_1002BCBDC(v111, (uint64_t)v154, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v153 = (void **)v107;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v114 = *v112;
      BOOL v115 = v155;
      a2 = v164;
      if (qword_1006ADF70 != -1) {
        swift_once();
      }
      id v116 = [(id)qword_1006D1508 stringFromContact:v114];
      unint64_t v97 = v163;
      if (v116)
      {
        char v117 = v116;
        uint64_t v118 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v120 = v119;
      }
      else
      {

        uint64_t v118 = 0;
        unint64_t v120 = 0xE000000000000000;
      }
    }
    else
    {
      uint64_t v121 = v158;
      BOOL v122 = v112;
      uint64_t v123 = v159;
      ((void (*)(char *, void **, uint64_t))*v152)(v158, v122, v159);
      uint64_t v118 = FMFFriend.name.getter();
      unint64_t v120 = v124;
      (*v150)(v121, v123);
      BOOL v115 = v155;
      unint64_t v97 = v163;
      a2 = v164;
    }
    sub_1002BCBDC(v161, (uint64_t)v115, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v125 = *v115;
      if (qword_1006ADF70 != -1) {
        swift_once();
      }
      id v126 = [(id)qword_1006D1508 stringFromContact:v125];
      if (v126)
      {
        uint64_t v127 = v126;
        uint64_t v128 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        Swift::Int v129 = v125;
        unint64_t v131 = v130;

        if (v118 != v128) {
          goto LABEL_96;
        }
      }
      else
      {

        unint64_t v131 = 0xE000000000000000;
        if (v118) {
          goto LABEL_96;
        }
      }
    }
    else
    {
      uint64_t v132 = v158;
      unint64_t v133 = v115;
      uint64_t v134 = v159;
      ((void (*)(char *, void **, uint64_t))*v152)(v158, v133, v159);
      uint64_t v135 = FMFFriend.name.getter();
      unint64_t v131 = v136;
      uint64_t v137 = v134;
      uint64_t v138 = v135;
      (*v150)(v132, v137);
      if (v118 != v138) {
        goto LABEL_96;
      }
    }
    if (v120 == v131)
    {
      char v104 = 0;
LABEL_97:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v139 = v99 + *(int *)(v100 + 48);
      uint64_t v140 = v99 + *(int *)(v100 + 64);
      sub_1002BCB14(v161, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      sub_1002BCB14(v157, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      uint64_t v141 = type metadata accessor for UUID();
      uint64_t v142 = *(void (**)(uint64_t, uint64_t))(*(void *)(v141 - 8) + 8);
      v142(v140, v141);
      sub_1002BCB14(v139, type metadata accessor for FMBeaconSharingModuleShareState);
      v142((uint64_t)v153, v141);
      sub_1002BCB14((uint64_t)v156, type metadata accessor for FMBeaconSharingModuleShareState);
      uint64_t v51 = v167;
      sub_1002BCB14(v167, type metadata accessor for FMBeaconSharingModuleEntry);
      unint64_t v103 = v173;
      goto LABEL_98;
    }
LABEL_96:
    char v104 = _stringCompareWithSmolCheck(_:_:expecting:)();
    goto LABEL_97;
  }
  if ((v47 & 0x8000000000000000) == 0)
  {
    uint64_t v49 = v47 * v172;
    uint64_t v169 = v38;
    if (a4 < a1 || a1 + v49 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v170 = a4 + v49;
    unint64_t v174 = a4 + v49;
    if (v49 >= 1 && a2 < a3)
    {
      uint64_t v155 = (void **)(v10 + 32);
      uint64_t v154 = (void **)(v10 + 8);
      unint64_t v160 = v44;
      uint64_t v156 = v41;
      while (1)
      {
        sub_1002BCBDC(a2, (uint64_t)v44, type metadata accessor for FMBeaconSharingModuleEntry);
        sub_1002BCBDC(a4, (uint64_t)v41, type metadata accessor for FMBeaconSharingModuleEntry);
        uint64_t v53 = (uint64_t)&v30[*(int *)(v171 + 48)];
        sub_1002BCBDC((uint64_t)v44, (uint64_t)v30, type metadata accessor for FMBeaconSharingModuleEntry);
        sub_1002BCBDC((uint64_t)v41, v53, type metadata accessor for FMBeaconSharingModuleEntry);
        uint64_t v54 = sub_10005D034(&qword_1006B9050);
        unint64_t v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48);
        int v56 = v55(v30, 2, v54);
        if (v56)
        {
          if (v56 != 1)
          {
            sub_1002BCB14(v53, type metadata accessor for FMBeaconSharingModuleEntry);
            sub_1002BCB14((uint64_t)v30, type metadata accessor for FMBeaconSharingModuleEntry);
            goto LABEL_33;
          }
          sub_1002BCB14(v53, type metadata accessor for FMBeaconSharingModuleEntry);
          sub_1002BCB14((uint64_t)v30, type metadata accessor for FMBeaconSharingModuleEntry);
          sub_1002BCB14((uint64_t)v41, type metadata accessor for FMBeaconSharingModuleEntry);
          sub_1002BCB14((uint64_t)v44, type metadata accessor for FMBeaconSharingModuleEntry);
        }
        else
        {
          uint64_t v59 = (uint64_t)v169;
          sub_1002BCBDC((uint64_t)v30, (uint64_t)v169, type metadata accessor for FMBeaconSharingModuleEntry);
          uint64_t v60 = v59 + *(int *)(v54 + 48);
          uint64_t v61 = v59 + *(int *)(v54 + 64);
          if (v55((char *)v53, 2, v54))
          {
            uint64_t v62 = type metadata accessor for UUID();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v61, v62);
            sub_1002BCB14(v60, type metadata accessor for FMBeaconSharingModuleShareState);
            sub_1002BCB14(v59, type metadata accessor for FMBeaconSharingModuleRelationshipType);
            sub_100003F10((uint64_t)v30, &qword_1006B9268);
            uint64_t v41 = v156;
            uint64_t v44 = v160;
LABEL_33:
            sub_1002BCB14((uint64_t)v41, type metadata accessor for FMBeaconSharingModuleEntry);
            sub_1002BCB14((uint64_t)v44, type metadata accessor for FMBeaconSharingModuleEntry);
LABEL_34:
            unint64_t v57 = v176;
            unint64_t v63 = v175 + v172;
            if (v176 < v175 || v176 >= v63)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v176 != v175)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v175 = v63;
            unint64_t v58 = a2;
            goto LABEL_47;
          }
          unint64_t v166 = v61;
          uint64_t v167 = v60;
          uint64_t v64 = v163;
          sub_1002BCB74(v59, v163, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          sub_1002BCB74(v53, v164, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          uint64_t v65 = v64;
          uint64_t v66 = v152;
          sub_1002BCBDC(v65, (uint64_t)v152, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            Swift::Int v67 = *v66;
            uint64_t v41 = v156;
            if (qword_1006ADF70 != -1) {
              swift_once();
            }
            id v68 = [(id)qword_1006D1508 stringFromContact:v67];
            uint64_t v69 = v153;
            uint64_t v44 = v160;
            if (v68)
            {
              uint64_t v70 = v68;
              uint64_t v161 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v165 = v71;
            }
            else
            {

              uint64_t v161 = 0;
              unint64_t v165 = 0xE000000000000000;
            }
          }
          else
          {
            uint64_t v72 = v158;
            uint64_t v73 = v66;
            uint64_t v74 = v159;
            ((void (*)(char *, void **, uint64_t))*v155)(v158, v73, v159);
            uint64_t v161 = FMFFriend.name.getter();
            unint64_t v165 = v75;
            ((void (*)(char *, uint64_t))*v154)(v72, v74);
            uint64_t v69 = v153;
            uint64_t v41 = v156;
            uint64_t v44 = v160;
          }
          sub_1002BCBDC(v164, (uint64_t)v69, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v76 = *v69;
            if (qword_1006ADF70 != -1) {
              swift_once();
            }
            id v77 = [(id)qword_1006D1508 stringFromContact:v76];
            unint64_t v78 = v165;
            if (v77)
            {
              uint64_t v79 = v77;
              uint64_t v157 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v80 = v76;
              unint64_t v82 = v81;

              uint64_t v83 = v157;
            }
            else
            {

              uint64_t v83 = 0;
              unint64_t v82 = 0xE000000000000000;
            }
          }
          else
          {
            uint64_t v84 = v158;
            uint64_t v85 = v69;
            uint64_t v86 = v159;
            ((void (*)(char *, void **, uint64_t))*v155)(v158, v85, v159);
            uint64_t v157 = FMFFriend.name.getter();
            unint64_t v82 = v87;
            ((void (*)(char *, uint64_t))*v154)(v84, v86);
            uint64_t v83 = v157;
            unint64_t v78 = v165;
          }
          if (v161 == v83 && v78 == v82) {
            LODWORD(v165) = 0;
          }
          else {
            LODWORD(v165) = _stringCompareWithSmolCheck(_:_:expecting:)();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v88 = v53 + *(int *)(v54 + 48);
          uint64_t v89 = v53 + *(int *)(v54 + 64);
          sub_1002BCB14(v164, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          sub_1002BCB14(v163, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          uint64_t v90 = type metadata accessor for UUID();
          int v91 = *(void (**)(uint64_t, uint64_t))(*(void *)(v90 - 8) + 8);
          v91(v89, v90);
          sub_1002BCB14(v88, type metadata accessor for FMBeaconSharingModuleShareState);
          v91(v166, v90);
          sub_1002BCB14(v167, type metadata accessor for FMBeaconSharingModuleShareState);
          sub_1002BCB14((uint64_t)v30, type metadata accessor for FMBeaconSharingModuleEntry);
          sub_1002BCB14((uint64_t)v41, type metadata accessor for FMBeaconSharingModuleEntry);
          sub_1002BCB14((uint64_t)v44, type metadata accessor for FMBeaconSharingModuleEntry);
          if ((v165 & 1) == 0) {
            goto LABEL_34;
          }
        }
        unint64_t v57 = v176;
        unint64_t v58 = a2 + v172;
        if (v176 < a2 || v176 >= v58)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v176 == a2)
        {
          unint64_t v57 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_47:
        unint64_t v176 = v57 + v172;
        a4 = v175;
        if (v175 < v170)
        {
          a2 = v58;
          if (v58 < v173) {
            continue;
          }
        }
        goto LABEL_71;
      }
    }
    goto LABEL_71;
  }
LABEL_117:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002BA8D8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v75 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v75 - 8);
  uint64_t v9 = __chkstk_darwin(v75);
  uint64_t v74 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v73 = (char *)&v61 - v11;
  uint64_t v77 = type metadata accessor for FMIPBeaconShare();
  uint64_t v12 = *(void *)(v77 - 8);
  uint64_t v13 = __chkstk_darwin(v77);
  uint64_t v72 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  unint64_t v71 = (char *)&v61 - v15;
  uint64_t v17 = *(void *)(v16 + 72);
  if (!v17)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v17 == -1) {
    goto LABEL_61;
  }
  int64_t v18 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v17 == -1) {
    goto LABEL_62;
  }
  uint64_t v19 = (uint64_t)(a2 - a1) / v17;
  unint64_t v80 = a1;
  unint64_t v79 = a4;
  uint64_t v20 = v18 / v17;
  if (v19 >= v18 / v17)
  {
    if ((v20 & 0x8000000000000000) == 0)
    {
      uint64_t v22 = v20 * v17;
      if (a4 < a2 || a2 + v22 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v41 = a4 + v22;
      unint64_t v78 = a4 + v22;
      unint64_t v80 = a2;
      if (v22 >= 1 && a1 < a2)
      {
        uint64_t v43 = -v17;
        uint64_t v44 = *(void (**)(void))(v12 + 16);
        unint64_t v63 = (void (**)(char *, uint64_t))(v8 + 8);
        uint64_t v64 = (void (*)(char *))v44;
        uint64_t v70 = v12 + 16;
        uint64_t v62 = (void (**)(char *, uint64_t))(v12 + 8);
        uint64_t v65 = (void (**)(char *, uint64_t))a1;
        unint64_t v66 = a4;
        uint64_t v45 = v71;
        do
        {
          uint64_t v76 = (void (**)(char *, uint64_t))a3;
          id v68 = (void (**)(char *, uint64_t))a2;
          unint64_t v69 = a3 + v43;
          uint64_t v46 = v77;
          uint64_t v47 = v64;
          ((void (*)(char *, unint64_t, uint64_t))v64)(v45, v41 + v43, v77);
          uint64_t v48 = v72;
          Swift::Int v67 = (void (**)(char *, uint64_t))(a2 + v43);
          v47(v72);
          uint64_t v49 = v73;
          FMIPBeaconShare.creationDate.getter();
          uint64_t v50 = v74;
          FMIPBeaconShare.creationDate.getter();
          LOBYTE(v47) = static Date.< infix(_:_:)();
          uint64_t v51 = v43;
          uint64_t v52 = *v63;
          uint64_t v53 = v50;
          uint64_t v54 = v75;
          (*v63)(v53, v75);
          v52(v49, v54);
          unint64_t v55 = *v62;
          (*v62)(v48, v46);
          v55(v45, v46);
          if (v47)
          {
            a3 = v69;
            if (v76 < v68 || v69 >= (unint64_t)v68)
            {
              unint64_t v58 = v67;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v57 = v65;
              unint64_t v56 = v66;
              uint64_t v43 = v51;
            }
            else
            {
              unint64_t v57 = v65;
              unint64_t v56 = v66;
              uint64_t v43 = v51;
              unint64_t v58 = v67;
              if (v76 != v68) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v80 += v43;
          }
          else
          {
            unint64_t v58 = v68;
            a3 = v69;
            unint64_t v59 = v78;
            v78 += v51;
            uint64_t v43 = v51;
            if ((unint64_t)v76 < v59 || v69 >= v59)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v57 = v65;
              unint64_t v56 = v66;
            }
            else
            {
              unint64_t v57 = v65;
              unint64_t v56 = v66;
              if (v76 != (void (**)(char *, uint64_t))v59) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
          }
          unint64_t v41 = v78;
          if (v78 <= v56) {
            break;
          }
          a2 = (unint64_t)v58;
        }
        while (v58 > v57);
      }
      goto LABEL_59;
    }
  }
  else if ((v19 & 0x8000000000000000) == 0)
  {
    uint64_t v21 = v19 * v17;
    if (a4 < a1 || a1 + v21 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v69 = a4 + v21;
    unint64_t v78 = a4 + v21;
    if (v21 >= 1 && a2 < a3)
    {
      uint64_t v24 = *(void (***)(char *, uint64_t))(v12 + 16);
      Swift::Int v67 = (void (**)(char *, uint64_t))(v8 + 8);
      id v68 = v24;
      uint64_t v70 = v12 + 16;
      uint64_t v64 = (void (*)(char *))v17;
      uint64_t v65 = (void (**)(char *, uint64_t))(v12 + 8);
      uint64_t v76 = (void (**)(char *, uint64_t))a3;
      uint64_t v26 = v71;
      uint64_t v25 = v72;
      do
      {
        unint64_t v27 = a4;
        uint64_t v28 = v77;
        uint64_t v29 = v68;
        ((void (*)(char *, unint64_t, uint64_t))v68)(v26, a2, v77);
        ((void (*)(char *, unint64_t, uint64_t))v29)(v25, v27, v28);
        uint64_t v30 = v73;
        FMIPBeaconShare.creationDate.getter();
        uint64_t v31 = v74;
        FMIPBeaconShare.creationDate.getter();
        LOBYTE(v27) = static Date.< infix(_:_:)();
        uint64_t v32 = *v67;
        uint64_t v33 = v31;
        uint64_t v34 = v75;
        (*v67)(v33, v75);
        v32(v30, v34);
        uint64_t v35 = *v65;
        (*v65)(v25, v28);
        v35(v26, v28);
        unint64_t v36 = v80;
        if (v27)
        {
          uint64_t v37 = (void (*)(void))v64;
          unint64_t v38 = (unint64_t)v64 + a2;
          if (v80 < a2 || v80 >= v38)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v39 = (unint64_t)v76;
          }
          else
          {
            unint64_t v39 = (unint64_t)v76;
            if (v80 == a2) {
              unint64_t v36 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          uint64_t v37 = (void (*)(void))v64;
          unint64_t v40 = (unint64_t)v64 + v79;
          if (v80 < v79 || v80 >= v40)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v39 = (unint64_t)v76;
          }
          else
          {
            unint64_t v39 = (unint64_t)v76;
            if (v80 != v79) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v79 = v40;
          unint64_t v38 = a2;
        }
        unint64_t v80 = (unint64_t)v37 + v36;
        a4 = v79;
        if (v79 >= v69) {
          break;
        }
        a2 = v38;
      }
      while (v38 < v39);
    }
LABEL_59:
    sub_100268334(&v80, &v79, (uint64_t *)&v78);
    return 1;
  }
LABEL_63:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002BAFE0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1002BB068(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = type metadata accessor for FMFFriend();
  uint64_t v4 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  unsigned int v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  uint64_t v8 = __chkstk_darwin(v7);
  unint64_t v10 = (void **)((char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v24 - v11;
  uint64_t v13 = sub_10005D034(&qword_1006B9278);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (void **)&v16[*(int *)(v14 + 56)];
  sub_1002BCBDC(a1, (uint64_t)v16, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  sub_1002BCBDC(a2, (uint64_t)v17, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1002BCBDC((uint64_t)v16, (uint64_t)v10, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    int64_t v18 = *v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = *v17;
      sub_100006060(0, (unint64_t *)&qword_1006B3E40);
      char v20 = static NSObject.== infix(_:_:)();

LABEL_9:
      sub_1002BCB14((uint64_t)v16, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      return v20 & 1;
    }
  }
  else
  {
    sub_1002BCBDC((uint64_t)v16, (uint64_t)v12, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v21 = v25;
      (*(void (**)(char *, void **, uint64_t))(v4 + 32))(v6, v17, v25);
      char v20 = static FMFFriend.== infix(_:_:)();
      uint64_t v22 = *(void (**)(char *, uint64_t))(v4 + 8);
      v22(v6, v21);
      v22(v12, v21);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v12, v25);
  }
  sub_100003F10((uint64_t)v16, &qword_1006B9278);
  char v20 = 0;
  return v20 & 1;
}

uint64_t sub_1002BB390(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPBeaconShareState();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FMBeaconSharingModuleShareState(0);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10005D034(&qword_1006B9270);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_1002BCBDC(a1, (uint64_t)v14, type metadata accessor for FMBeaconSharingModuleShareState);
  sub_1002BCBDC(a2, v15, type metadata accessor for FMBeaconSharingModuleShareState);
  uint64_t v16 = sub_10005D034(&qword_1006B9058);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  if (v17((uint64_t)v14, 1, v16) != 1)
  {
    sub_1002BCBDC((uint64_t)v14, (uint64_t)v10, type metadata accessor for FMBeaconSharingModuleShareState);
    if (v17(v15, 1, v16) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      char v18 = static FMIPBeaconShareState.== infix(_:_:)();
      uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19(v7, v4);
      v19(v10, v4);
      sub_1002BCB14((uint64_t)v14, type metadata accessor for FMBeaconSharingModuleShareState);
      return v18 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_6;
  }
  if (v17(v15, 1, v16) != 1)
  {
LABEL_6:
    sub_100003F10((uint64_t)v14, &qword_1006B9270);
    char v18 = 0;
    return v18 & 1;
  }
  sub_1002BCB14((uint64_t)v14, type metadata accessor for FMBeaconSharingModuleShareState);
  char v18 = 1;
  return v18 & 1;
}

uint64_t sub_1002BB694(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v57 = *(void *)(v4 - 8);
  uint64_t v58 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  unint64_t v55 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v56 = (char *)&v49 - v7;
  uint64_t v8 = type metadata accessor for FMBeaconSharingModuleShareState(0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v49 - v12;
  uint64_t v14 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10005D034(&qword_1006B9268);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = (uint64_t)&v23[*(int *)(v21 + 56)];
  sub_1002BCBDC(a1, (uint64_t)v23, type metadata accessor for FMBeaconSharingModuleEntry);
  sub_1002BCBDC(a2, v24, type metadata accessor for FMBeaconSharingModuleEntry);
  uint64_t v25 = sub_10005D034(&qword_1006B9050);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48);
  int v27 = v26(v23, 2, v25);
  if (!v27)
  {
    uint64_t v52 = v11;
    uint64_t v53 = v16;
    uint64_t v54 = v13;
    sub_1002BCBDC((uint64_t)v23, (uint64_t)v19, type metadata accessor for FMBeaconSharingModuleEntry);
    uint64_t v28 = *(int *)(v25 + 48);
    uint64_t v29 = *(int *)(v25 + 64);
    uint64_t v30 = &v19[v29];
    if (!v26((char *)v24, 2, v25))
    {
      uint64_t v50 = v24 + v28;
      uint64_t v51 = (char *)(v24 + v29);
      uint64_t v33 = (uint64_t)v53;
      sub_1002BCB74(v24, (uint64_t)v53, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      sub_1002BCB74((uint64_t)&v19[v28], (uint64_t)v54, type metadata accessor for FMBeaconSharingModuleShareState);
      uint64_t v34 = v57;
      uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
      uint64_t v36 = v58;
      v35(v56, v30, v58);
      uint64_t v37 = (uint64_t)v52;
      sub_1002BCB74(v50, (uint64_t)v52, type metadata accessor for FMBeaconSharingModuleShareState);
      unint64_t v38 = v55;
      v35(v55, v51, v36);
      uint64_t v39 = v33;
      char v40 = sub_1002BB068((uint64_t)v19, v33);
      sub_1002BCB14((uint64_t)v19, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      if (v40)
      {
        uint64_t v41 = (uint64_t)v54;
        char v42 = sub_1002BB390((uint64_t)v54, v37);
        uint64_t v43 = v37;
        uint64_t v44 = v56;
        if (v42)
        {
          char v31 = static UUID.== infix(_:_:)();
          uint64_t v45 = *(void (**)(char *, uint64_t))(v34 + 8);
          v45(v38, v36);
          sub_1002BCB14(v43, type metadata accessor for FMBeaconSharingModuleShareState);
          v45(v44, v36);
          sub_1002BCB14(v41, type metadata accessor for FMBeaconSharingModuleShareState);
          sub_1002BCB14(v39, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          sub_1002BCB14((uint64_t)v23, type metadata accessor for FMBeaconSharingModuleEntry);
          return v31 & 1;
        }
        uint64_t v48 = *(void (**)(char *, uint64_t))(v34 + 8);
        v48(v38, v36);
        sub_1002BCB14(v43, type metadata accessor for FMBeaconSharingModuleShareState);
        v48(v44, v36);
        uint64_t v47 = v41;
      }
      else
      {
        uint64_t v46 = *(void (**)(char *, uint64_t))(v34 + 8);
        v46(v38, v36);
        sub_1002BCB14(v37, type metadata accessor for FMBeaconSharingModuleShareState);
        v46(v56, v36);
        uint64_t v47 = (uint64_t)v54;
      }
      sub_1002BCB14(v47, type metadata accessor for FMBeaconSharingModuleShareState);
      sub_1002BCB14(v39, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      sub_1002BCB14((uint64_t)v23, type metadata accessor for FMBeaconSharingModuleEntry);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v57 + 8))(&v19[v29], v58);
    sub_1002BCB14((uint64_t)&v19[v28], type metadata accessor for FMBeaconSharingModuleShareState);
    sub_1002BCB14((uint64_t)v19, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    goto LABEL_9;
  }
  if (v27 != 1)
  {
    if (v26((char *)v24, 2, v25) == 2) {
      goto LABEL_8;
    }
LABEL_9:
    sub_100003F10((uint64_t)v23, &qword_1006B9268);
LABEL_10:
    char v31 = 0;
    return v31 & 1;
  }
  if (v26((char *)v24, 2, v25) != 1) {
    goto LABEL_9;
  }
LABEL_8:
  sub_1002BCB14((uint64_t)v23, type metadata accessor for FMBeaconSharingModuleEntry);
  char v31 = 1;
  return v31 & 1;
}

uint64_t sub_1002BBCEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v34 - v8;
  uint64_t v10 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10005D034(&qword_1006B9268);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (uint64_t)&v16[*(int *)(v14 + 56)];
  sub_1002BCBDC(a1, (uint64_t)v16, type metadata accessor for FMBeaconSharingModuleEntry);
  sub_1002BCBDC(a2, v17, type metadata accessor for FMBeaconSharingModuleEntry);
  uint64_t v18 = sub_10005D034(&qword_1006B9050);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  int v20 = v19(v16, 2, v18);
  if (v20)
  {
    if (v20 == 1)
    {
      sub_1002BCB14(v17, type metadata accessor for FMBeaconSharingModuleEntry);
      sub_1002BCB14((uint64_t)v16, type metadata accessor for FMBeaconSharingModuleEntry);
      char v21 = 1;
      return v21 & 1;
    }
    sub_1002BCB14(v17, type metadata accessor for FMBeaconSharingModuleEntry);
    sub_1002BCB14((uint64_t)v16, type metadata accessor for FMBeaconSharingModuleEntry);
LABEL_7:
    char v21 = 0;
    return v21 & 1;
  }
  sub_1002BCBDC((uint64_t)v16, (uint64_t)v12, type metadata accessor for FMBeaconSharingModuleEntry);
  uint64_t v22 = (uint64_t)&v12[*(int *)(v18 + 48)];
  uint64_t v23 = &v12[*(int *)(v18 + 64)];
  if (v19((char *)v17, 2, v18))
  {
    uint64_t v24 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
    sub_1002BCB14(v22, type metadata accessor for FMBeaconSharingModuleShareState);
    sub_1002BCB14((uint64_t)v12, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    sub_100003F10((uint64_t)v16, &qword_1006B9268);
    goto LABEL_7;
  }
  uint64_t v35 = v22;
  sub_1002BCB74((uint64_t)v12, (uint64_t)v9, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  sub_1002BCB74(v17, (uint64_t)v7, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  uint64_t v26 = sub_10029E4E8();
  uint64_t v28 = v27;
  if (v26 == sub_10029E4E8() && v28 == v29) {
    char v21 = 0;
  }
  else {
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = v17 + *(int *)(v18 + 48);
  uint64_t v31 = v17 + *(int *)(v18 + 64);
  sub_1002BCB14((uint64_t)v7, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  sub_1002BCB14((uint64_t)v9, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  uint64_t v32 = type metadata accessor for UUID();
  uint64_t v33 = *(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8);
  v33(v31, v32);
  sub_1002BCB14(v30, type metadata accessor for FMBeaconSharingModuleShareState);
  v33((uint64_t)v23, v32);
  sub_1002BCB14(v35, type metadata accessor for FMBeaconSharingModuleShareState);
  sub_1002BCB14((uint64_t)v16, type metadata accessor for FMBeaconSharingModuleEntry);
  return v21 & 1;
}

char *sub_1002BC160(uint64_t a1, uint64_t a2)
{
  uint64_t v56 = a2;
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v39 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10005D034((uint64_t *)&unk_1006BEAC0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10005D034((uint64_t *)&unk_1006B1760);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v45 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v37 - v12;
  uint64_t v58 = type metadata accessor for FMIPBeaconShare();
  uint64_t v14 = *(void *)(v58 - 8);
  uint64_t v15 = __chkstk_darwin(v58);
  uint64_t v44 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v57 = (char *)&v37 - v17;
  uint64_t v18 = _swiftEmptyArrayStorage;
  unint64_t v59 = (char *)_swiftEmptyArrayStorage;
  uint64_t v19 = *(void *)(a1 + 16);
  uint64_t v53 = v56 + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_beaconIdentifier;
  swift_beginAccess();
  if (v19)
  {
    uint64_t v56 = v19;
    char v21 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    uint64_t v20 = v14 + 16;
    uint64_t v51 = v21;
    unint64_t v40 = (*(unsigned __int8 *)(v20 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 64);
    uint64_t v22 = a1 + v40;
    uint64_t v49 = (unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
    uint64_t v50 = (void (**)(char *, void, uint64_t, uint64_t))(v4 + 56);
    uint64_t v23 = *(void *)(v20 + 56);
    unint64_t v38 = (void (**)(char *, uint64_t, uint64_t))(v4 + 32);
    uint64_t v41 = (void (**)(uint64_t, uint64_t))(v4 + 8);
    char v42 = (void (**)(char *, uint64_t))(v20 - 8);
    uint64_t v43 = (void (**)(char *, char *, uint64_t))(v20 + 16);
    uint64_t v54 = v6;
    unint64_t v55 = v13;
    uint64_t v24 = (uint64_t)v45;
    uint64_t v47 = v23;
    uint64_t v48 = v3;
    uint64_t v46 = v8;
    uint64_t v52 = v20;
    v21(v57, a1 + v40, v58);
    while (1)
    {
      FMIPBeaconShare.beaconIdentifier.getter();
      (*v50)(v13, 0, 1, v3);
      uint64_t v26 = (uint64_t)&v8[*(int *)(v6 + 48)];
      sub_100006AB0((uint64_t)v13, (uint64_t)v8, (uint64_t *)&unk_1006B1760);
      sub_100006AB0(v53, v26, (uint64_t *)&unk_1006B1760);
      uint64_t v27 = *v49;
      if ((*v49)(v8, 1, v3) == 1)
      {
        sub_100003F10((uint64_t)v13, (uint64_t *)&unk_1006B1760);
        if (v27((char *)v26, 1, v3) != 1) {
          goto LABEL_4;
        }
        sub_100003F10((uint64_t)v8, (uint64_t *)&unk_1006B1760);
      }
      else
      {
        sub_100006AB0((uint64_t)v8, v24, (uint64_t *)&unk_1006B1760);
        if (v27((char *)v26, 1, v3) == 1)
        {
          sub_100003F10((uint64_t)v55, (uint64_t *)&unk_1006B1760);
          (*v41)(v24, v3);
LABEL_4:
          sub_100003F10((uint64_t)v8, (uint64_t *)&unk_1006BEAC0);
          uint64_t v6 = v54;
LABEL_5:
          (*v42)(v57, v58);
          uint64_t v25 = v47;
          uint64_t v3 = v48;
          uint64_t v13 = v55;
          goto LABEL_6;
        }
        uint64_t v28 = v39;
        (*v38)(v39, v26, v3);
        sub_1002B4DB8((unint64_t *)&unk_1006BEAD0, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v29 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v30 = *v41;
        (*v41)((uint64_t)v28, v3);
        sub_100003F10((uint64_t)v55, (uint64_t *)&unk_1006B1760);
        v30((uint64_t)v45, v3);
        uint64_t v24 = (uint64_t)v45;
        sub_100003F10((uint64_t)v8, (uint64_t *)&unk_1006B1760);
        uint64_t v6 = v54;
        if ((v29 & 1) == 0) {
          goto LABEL_5;
        }
      }
      uint64_t v31 = *v43;
      (*v43)(v44, v57, v58);
      uint64_t v32 = v59;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v3 = v48;
      uint64_t v13 = v55;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10013E71C(0, *((void *)v32 + 2) + 1, 1);
        uint64_t v32 = v59;
      }
      unint64_t v35 = *((void *)v32 + 2);
      unint64_t v34 = *((void *)v32 + 3);
      if (v35 >= v34 >> 1)
      {
        sub_10013E71C(v34 > 1, v35 + 1, 1);
        uint64_t v32 = v59;
      }
      *((void *)v32 + 2) = v35 + 1;
      uint64_t v25 = v47;
      v31(&v32[v40 + v35 * v47], v44, v58);
      unint64_t v59 = v32;
      uint64_t v6 = v54;
      uint64_t v24 = (uint64_t)v45;
LABEL_6:
      v22 += v25;
      --v56;
      uint64_t v8 = v46;
      if (!v56) {
        return v59;
      }
      v51(v57, v22, v58);
    }
  }
  return (char *)v18;
}

void *sub_1002BC75C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10013E758(0, v1, 0);
    uint64_t v3 = a1 + 32;
    do
    {
      ++v3;
      swift_getAtKeyPath();
      unint64_t v5 = _swiftEmptyArrayStorage[2];
      unint64_t v4 = _swiftEmptyArrayStorage[3];
      if (v5 >= v4 >> 1) {
        sub_10013E758(v4 > 1, v5 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v5 + 1;
      uint64_t v6 = &_swiftEmptyArrayStorage[2 * v5];
      v6[4] = v8;
      v6[5] = v9;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_1002BC84C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10013E758(0, v1, 0);
    uint64_t v3 = *(void *)(type metadata accessor for FMBeaconSharingModuleEntry(0) - 8);
    uint64_t v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    do
    {
      swift_getAtKeyPath();
      unint64_t v7 = _swiftEmptyArrayStorage[2];
      unint64_t v6 = _swiftEmptyArrayStorage[3];
      if (v7 >= v6 >> 1) {
        sub_10013E758(v6 > 1, v7 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v7 + 1;
      uint64_t v8 = &_swiftEmptyArrayStorage[2 * v7];
      v8[4] = v10;
      v8[5] = v11;
      v4 += v5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1002BC98C()
{
  if (qword_1006AE408 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000606BC(v0, (uint64_t)qword_1006D2760);
  int64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    sub_1000606F4(0xD000000000000024, 0x8000000100590F90, &v5);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "FMBeaconSharingModuleDataSource: %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return sub_1002A0F6C();
}

uint64_t sub_1002BCB14(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1002BCB74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002BCBDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002BCC44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002BCCA8()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMBeaconSharingModuleEntry(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  uint64_t v5 = (id *)(v0 + v3);
  uint64_t v6 = sub_10005D034(&qword_1006B9050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v0 + v3, 2, v6))
  {
    type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
    }
    else
    {
      uint64_t v7 = type metadata accessor for FMFFriend();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
    }
    uint64_t v8 = (char *)v5 + *(int *)(v6 + 48);
    uint64_t v9 = sub_10005D034(&qword_1006B9058);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
    {
      uint64_t v10 = type metadata accessor for FMIPBeaconShareState();
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
    }
    uint64_t v11 = (char *)v5 + *(int *)(v6 + 64);
    uint64_t v12 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  unint64_t v13 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = v13 + 8;

  return _swift_deallocObject(v0, v14, v2 | 7);
}

uint64_t sub_1002BCEE0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FMBeaconSharingModuleEntry(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_1000E5A7C;
  return sub_1002A8928(a1, v6, v7, v8, v9);
}

uint64_t sub_1002BD004()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMBeaconSharingModuleEntry(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();

  unint64_t v5 = (id *)(v0 + v3);
  uint64_t v6 = sub_10005D034(&qword_1006B9050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v0 + v3, 2, v6))
  {
    type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
    }
    else
    {
      uint64_t v7 = type metadata accessor for FMFFriend();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
    }
    uint64_t v8 = (char *)v5 + *(int *)(v6 + 48);
    uint64_t v9 = sub_10005D034(&qword_1006B9058);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
    {
      uint64_t v10 = type metadata accessor for FMIPBeaconShareState();
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
    }
    uint64_t v11 = (char *)v5 + *(int *)(v6 + 64);
    uint64_t v12 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1002BD228(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FMBeaconSharingModuleEntry(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000D6E0C;
  return sub_1002AC924(a1, v5, v6, v7, v8);
}

uint64_t sub_1002BD324()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002BD35C()
{
  uint64_t v1 = type metadata accessor for FMIPItem();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_1002BD454()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMIPItem() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + v3);
  unint64_t v6 = *(void **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_1002A98F4(v4, v0 + v2, v5, v6);
}

uint64_t sub_1002BD4F0(uint64_t a1, uint64_t a2)
{
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *unint64_t v6 = v3;
  v6[1] = sub_1000E5A7C;
  return sub_1002AB690(a1, a2, v2);
}

uint64_t sub_1002BD59C(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_1002BD634;
  return sub_1002ABC3C(a1, v1);
}

uint64_t sub_1002BD634(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_1002BD730()
{
  uint64_t v1 = type metadata accessor for FMIPItem();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release();

  return _swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_1002BD7EC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FMIPItem() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + v6);
  uint64_t v9 = *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_1000D6E0C;
  return sub_1002AA2D8(a1, v7, v8, v9);
}

uint64_t sub_1002BD908(uint64_t a1)
{
  return sub_1002AC258(a1, *(void **)(v1 + 16));
}

void sub_1002BD910()
{
  sub_1002AC620(*(void **)(v0 + 16));
}

uint64_t sub_1002BD918()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002BD960(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_1000E5A7C;
  *(void *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(void *)(v5 + 16) = a1;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1002AA80C, 0, 0);
}

uint64_t sub_1002BDA24(uint64_t a1)
{
  return sub_1002AAAA8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1002BDA30()
{
  uint64_t v1 = sub_10005D034(&qword_1006B92F8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1002BDB00(int64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_10005D034(&qword_1006B92F8) - 8);
  uint64_t v8 = *(void *)(v3 + 16);
  int64_t v9 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  sub_1002AAC80(a1, a2, a3, v8, v9);
}

uint64_t sub_1002BDB90()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMBeaconSharingModuleRelationshipType(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
  }
  else
  {
    uint64_t v5 = type metadata accessor for FMFFriend();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  unint64_t v6 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = v6 + 8;

  return _swift_deallocObject(v0, v7, v2 | 7);
}

uint64_t sub_1002BDCA8(uint64_t a1)
{
  return sub_1002BE620(a1, type metadata accessor for FMBeaconSharingModuleRelationshipType, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1002AE60C);
}

uint64_t sub_1002BDCD4()
{
  uint64_t v1 = type metadata accessor for FMFFriend();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002BDDA0()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMFFriend() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1002AE908(v2, v3);
}

uint64_t sub_1002BDE04()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002BDE44()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for FMIPItem();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = (*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v11 + 8, v10);
}

void sub_1002BDFB0()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for FMIPItem() - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = *(void **)(v0 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_1002B11A8(v6, v0 + v2, v0 + v5, v7);
}

uint64_t sub_1002BE0AC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002BE0E4()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_1002BE12C(uint64_t a1)
{
  sub_1002B20FC(a1, *(unsigned char *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1002BE13C()
{
  return sub_1002BE548((uint64_t (*)(void))&type metadata accessor for FMIPItem);
}

uint64_t sub_1002BE154(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for FMIPItem() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void **)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1002B143C(a1, a2, v2 + v6, v7);
}

uint64_t sub_1002BE200()
{
  uint64_t v1 = type metadata accessor for FMIPItemActionStatus();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = type metadata accessor for FMIPItem();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 8) & ~v8;
  uint64_t v12 = v3 | v8 | 7;
  unint64_t v10 = (*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10 + 8, v12);
}

uint64_t sub_1002BE38C(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(type metadata accessor for FMIPItemActionStatus() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(type metadata accessor for FMIPItem() - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = *(void *)(v1 + v7);
  uint64_t v13 = v1 + v6;
  uint64_t v14 = v1 + v9;
  uint64_t v15 = *(void *)(v1 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v16;
  *uint64_t v16 = v3;
  v16[1] = sub_1000E5A7C;
  return sub_1002B1740(a1, v10, v11, v13, v12, v14, v15);
}

uint64_t sub_1002BE530()
{
  return sub_1002BE548((uint64_t (*)(void))&type metadata accessor for UUID);
}

uint64_t sub_1002BE548(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = (*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v7 + 8, v6);
}

uint64_t sub_1002BE5F4(uint64_t a1)
{
  return sub_1002BE620(a1, (uint64_t (*)(void))&type metadata accessor for UUID, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1002AF244);
}

uint64_t sub_1002BE620(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v3 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a3(a1, v3 + v6, v7);
}

uint64_t sub_1002BE6D4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002BE70C(uint64_t a1, uint64_t a2)
{
  return sub_1002AF39C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1002BE714()
{
  uint64_t v1 = type metadata accessor for FMIPItemActionStatus();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_errorRelease();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1002BE80C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FMIPItemActionStatus() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = v1 + v5;
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_1000E5A7C;
  return sub_1002AF5C8(a1, v7, v8, v9, v10, v11);
}

uint64_t sub_1002BE940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a3 + a2 - 16) + 8) + 32))(*(void *)(a3 + a2 - 24));
}

uint64_t sub_1002BE984()
{
  return 24;
}

__n128 sub_1002BE990(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_1002BE9A8()
{
  return sub_1002B575C(*(void *)(v0 + 16), *(void *)(v0 + 24), &qword_1006B9330);
}

void sub_1002BE9D4()
{
  sub_1004F87F4(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

void sub_1002BE9E4(uint64_t a1)
{
  sub_1004F8844(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1002BE9F0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1002BEA2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result = a2;
  switch(a7)
  {
    case 0:
      goto LABEL_4;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      goto LABEL_3;
    case 2:
LABEL_3:
      swift_bridgeObjectRelease();
LABEL_4:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1002BEABC(uint64_t a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1002BEAFC()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002BEB3C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000E5A7C;
  return sub_1002A78C4(a1, v4, v5, v6);
}

uint64_t sub_1002BEBF0()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1000E5A7C;
  v2[5] = v0;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1002A7C2C, 0, 0);
}

uint64_t sub_1002BEC9C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000E5A7C;
  return sub_1002A11B0(a1, v4, v5, v6);
}

uint64_t sub_1002BED50(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000E5A7C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1006B3860 + dword_1006B3860);
  return v6(a1, v4);
}

uint64_t sub_1002BEE0C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1000E5A7C;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1000E5A7C;
  return sub_1002A1470(0);
}

uint64_t sub_1002BEEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006B1760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002BEF4C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002BEF84()
{
  return sub_1002A02B4();
}

unint64_t sub_1002BEF8C()
{
  unint64_t result = qword_1006B93B8;
  if (!qword_1006B93B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006B93B8);
  }
  return result;
}

uint64_t sub_1002BEFE4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002BF024()
{
  return sub_1002B575C(*(void *)(v0 + 16), *(void *)(v0 + 24), &qword_1006B93A0);
}

uint64_t sub_1002BF048(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 16);
  if (result)
  {
    if (*(void *)(*(void *)(v2 + qword_1006C11D8) + 16)) {
      BOOL v3 = 1;
    }
    else {
      BOOL v3 = *(void *)(v2 + qword_1006C11D0) != 0;
    }
  }
  else
  {
    BOOL v3 = 0;
  }
  *(unsigned char *)(v2 + qword_1006C1200) = v3;
  return result;
}

uint64_t sub_1002BF0A4()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002BF0E8()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

Swift::Int sub_1002BF1A8()
{
  return Hasher._finalize()();
}

uint64_t sub_1002BF268()
{
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_1002BF318()
{
  return Hasher._finalize()();
}

uint64_t sub_1002BF3D4(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }

  return static FMIPHawkeyeProductInformation.AssetType.== infix(_:_:)();
}

uint64_t sub_1002BF458(void *a1, uint64_t a2)
{
  uint64_t v90 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  unint64_t v87 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for DispatchQoS();
  uint64_t v86 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v85 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context();
  uint64_t v82 = *(void *)(v99 - 8);
  uint64_t v6 = __chkstk_darwin(v99);
  uint64_t v84 = (uint64_t)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = v7;
  __chkstk_darwin(v6);
  uint64_t v107 = (uint64_t *)((char *)&v81 - v8);
  uint64_t v9 = type metadata accessor for FMIPHawkeyeProductInformation();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v101 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v81 - v13;
  uint64_t v15 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType();
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v100 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v81 - v18;
  uint64_t v105 = v20;
  uint64_t v106 = v21;
  uint64_t v22 = v21 + 16;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v21 + 16);
  v23((char *)&v81 - v18, a2);
  uint64_t v24 = *(void (**)(char *, void *, uint64_t))(v10 + 16);
  char v104 = a1;
  uint64_t v95 = v10 + 16;
  unint64_t v94 = v24;
  v24(v14, a1, v9);
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  unint64_t v97 = v23;
  uint64_t v98 = v22;
  uint64_t v96 = a2;
  uint64_t v26 = type metadata accessor for Logger();
  uint64_t v93 = sub_1000606BC(v26, (uint64_t)qword_1006D1E98);
  uint64_t v27 = Logger.logObject.getter();
  if (os_log_type_enabled(v27, v25))
  {
    uint64_t v28 = swift_slowAlloc();
    unint64_t v92 = (void (*)(char *, uint64_t))v9;
    char v29 = (uint8_t *)v28;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v81 = v30;
    uint64_t v103 = v10;
    *(_DWORD *)char v29 = 136315138;
    v115[0] = v30;
    int v91 = (void (*)(char *, uint64_t))(v29 + 4);
    uint64_t aBlock = 0;
    unint64_t v110 = 0xE000000000000000;
    _StringGuts.grow(_:)(46);
    v31._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
    v31._unint64_t object = (void *)0x8000000100591610;
    String.append(_:)(v31);
    uint64_t v32 = v105;
    _print_unlocked<A, B>(_:_:)();
    v33._uint64_t countAndFlagsBits = 0x6F727020726F6620;
    v33._unint64_t object = (void *)0xEE00203A74637564;
    String.append(_:)(v33);
    _print_unlocked<A, B>(_:_:)();
    v34._uint64_t countAndFlagsBits = 0;
    v34._unint64_t object = (void *)0xE000000000000000;
    String.append(_:)(v34);
    uint64_t aBlock = sub_1000606F4(aBlock, v110, v115);
    uint64_t v10 = v103;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v27, v25, "FMDiscoveredAccessoryImageFetchingCoordinator: %s", v29, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v9 = (uint64_t)v92;
    swift_slowDealloc();
  }
  else
  {

    uint64_t v32 = v105;
  }
  uint64_t v35 = v106 + 8;
  unint64_t v92 = *(void (**)(char *, uint64_t))(v106 + 8);
  v92(v19, v32);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v103 = v10 + 8;
  int v91 = v36;
  v36(v14, v9);
  uint64_t v37 = FMIPHawkeyeProductInformation.identifier.getter();
  uint64_t v39 = v38;
  unint64_t v40 = v107;
  uint64_t v41 = v96;
  char v42 = (void (*)(char *, uint64_t, uint64_t))v97;
  uint64_t v43 = ((uint64_t (*)(char *, uint64_t, uint64_t))v97)((char *)v107 + *(int *)(v99 + 20), v96, v32);
  *unint64_t v40 = v37;
  v40[1] = v39;
  uint64_t v44 = v102[3];
  __chkstk_darwin(v43);
  *(&v81 - 2) = v45;
  *(&v81 - 1) = (uint64_t)v40;
  sub_10005D034(&qword_1006B9568);
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v46 = (void *)v115[0];
  if (v115[0])
  {
    uint64_t v106 = v35;
    uint64_t v47 = v115[1];
    uint64_t v48 = v101;
    v94(v101, v104, v9);
    uint64_t v49 = v100;
    uint64_t v50 = v41;
    uint64_t v51 = v47;
    uint64_t v52 = v105;
    v42(v100, v50, v105);
    char v104 = v46;
    id v53 = v46;
    swift_retain();
    os_log_type_t v54 = static os_log_type_t.default.getter();
    unint64_t v55 = Logger.logObject.getter();
    if (os_log_type_enabled(v55, v54))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      uint64_t v57 = (void *)swift_slowAlloc();
      int v102 = v57;
      *(_DWORD *)uint64_t v56 = 136315138;
      int v108 = v57;
      uint64_t aBlock = 0;
      uint64_t v99 = (uint64_t)(v56 + 4);
      unint64_t v110 = 0xE000000000000000;
      _StringGuts.grow(_:)(62);
      v58._unint64_t object = (void *)0x80000001005915D0;
      v58._uint64_t countAndFlagsBits = 0xD000000000000015;
      String.append(_:)(v58);
      _print_unlocked<A, B>(_:_:)();
      v59._uint64_t countAndFlagsBits = 0x7974206874697720;
      v59._unint64_t object = (void *)0xEC000000203A6570;
      String.append(_:)(v59);
      uint64_t v48 = v101;
      _print_unlocked<A, B>(_:_:)();
      v60._uint64_t countAndFlagsBits = 0xD000000000000019;
      v60._unint64_t object = (void *)0x80000001005915F0;
      String.append(_:)(v60);
      uint64_t aBlock = sub_1000606F4(aBlock, v110, (uint64_t *)&v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v55, v54, "FMDiscoveredAccessoryImageFetchingCoordinator: %s", v56, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v51 = v47;
      uint64_t v49 = v100;
      uint64_t v52 = v105;
      swift_slowDealloc();
    }

    uint64_t v61 = v92;
    v91(v48, v9);
    v61(v49, v52);
    uint64_t aBlock = v51;
    sub_10005D034(&qword_1006B51E8);
    sub_1000450A0(&qword_1006B51F0, &qword_1006B51E8);
    uint64_t aBlock = Publisher.share()();
    sub_10005D034(&qword_1006B9570);
    sub_1000450A0(&qword_1006B9578, &qword_1006B9570);
    uint64_t v62 = Publisher.eraseToAnyPublisher()();
    swift_release();

    sub_1002C2234(v104);
    swift_release();
    sub_1002C21D4((uint64_t)v107, (uint64_t (*)(void))type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context);
  }
  else
  {
    uint64_t v63 = (uint64_t)v107;
    uint64_t v64 = v102;
    id v65 = sub_1002C0578((uint64_t)v104, (uint64_t)v107);
    uint64_t v62 = v66;
    uint64_t v67 = swift_allocObject();
    swift_weakInit();
    uint64_t v68 = v84;
    sub_1002C1984(v63, v84);
    uint64_t v69 = *(unsigned __int8 *)(v82 + 80);
    uint64_t v106 = v44;
    uint64_t v70 = (v69 + 24) & ~v69;
    unint64_t v71 = (v83 + v70 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v72 = swift_allocObject();
    *(void *)(v72 + 16) = v67;
    sub_1002C1AEC(v68, v72 + v70);
    uint64_t v73 = (void *)(v72 + v71);
    *uint64_t v73 = v65;
    v73[1] = v62;
    uint64_t v113 = sub_1002C23AC;
    uint64_t v114 = v72;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    unint64_t v110 = 1107296256;
    uint64_t v111 = sub_10003C410;
    id v112 = &unk_100631220;
    uint64_t v74 = _Block_copy(&aBlock);
    swift_retain();
    id v75 = v65;
    swift_retain();
    uint64_t v76 = v85;
    static DispatchQoS.unspecified.getter();
    int v108 = _swiftEmptyArrayStorage;
    sub_100067FE8((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10005D034((uint64_t *)&unk_1006AE4B0);
    uint64_t v77 = v64;
    sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
    unint64_t v78 = v87;
    uint64_t v79 = v90;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v74);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v78, v79);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v76, v88);
    swift_release();
    swift_release();
    [(id)v77[2] addOperation:v75];
    sub_1002C21D4((uint64_t)v107, (uint64_t (*)(void))type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context);
  }
  return v62;
}

uint64_t sub_1002C012C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 40);
  if (*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1001AFC18(a2);
    if (v9)
    {
      uint64_t v10 = *(void *)(v7 + 56) + 16 * v8;
      id v12 = *(id *)v10;
      uint64_t v11 = *(void *)(v10 + 8);
      id v13 = *(id *)v10;
      swift_retain();
    }
    else
    {
      id v12 = 0;
      uint64_t v11 = 0;
    }
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    id v12 = 0;
    uint64_t v11 = 0;
  }
  *a3 = v12;
  a3[1] = v11;
  return result;
}

uint64_t sub_1002C01E4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (void *)((char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  id v12 = (char *)v25 - v11;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v28 = a2;
    sub_1002C1984(a2, (uint64_t)v12);
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_1000606BC(v14, (uint64_t)qword_1006D1E98);
    uint64_t v15 = Logger.logObject.getter();
    if (os_log_type_enabled(v15, v13))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v27 = a4;
      uint64_t v17 = (uint8_t *)v16;
      uint64_t v18 = swift_slowAlloc();
      v25[2] = v18;
      uint64_t v26 = a3;
      *(_DWORD *)uint64_t v17 = 136315138;
      v30[0] = v18;
      v25[1] = v17 + 4;
      uint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      _StringGuts.grow(_:)(49);
      v19._unint64_t object = (void *)0x8000000100591630;
      v19._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
      String.append(_:)(v19);
      _print_unlocked<A, B>(_:_:)();
      v20._uint64_t countAndFlagsBits = 0;
      v20._unint64_t object = (void *)0xE000000000000000;
      String.append(_:)(v20);
      uint64_t v31 = sub_1000606F4(v31, v32, v30);
      a3 = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v13, "FMDiscoveredAccessoryImageFetchingCoordinator: %s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      a4 = v27;
      swift_slowDealloc();
    }
    swift_release();

    sub_1002C21D4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context);
    a2 = v28;
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    sub_1002C1984(a2, (uint64_t)v10);
    swift_beginAccess();
    id v23 = a3;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *(void *)(v22 + 40);
    *(void *)(v22 + 40) = 0x8000000000000000;
    sub_1001B9580((uint64_t)v23, a4, v10, isUniquelyReferenced_nonNull_native);
    *(void *)(v22 + 40) = v29;
    swift_bridgeObjectRelease();
    sub_1002C21D4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

id sub_1002C0578(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v26 = a1;
  uint64_t v5 = type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context();
  uint64_t v6 = v5 - 8;
  uint64_t v29 = *(void *)(v5 - 8);
  uint64_t v28 = *(void *)(v29 + 64);
  __chkstk_darwin(v5);
  uint64_t v27 = (uint64_t)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType();
  uint64_t v8 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FMIPHawkeyeProductInformation();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FMAccessoryProductImageRequest();
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a2 + *(int *)(v6 + 28);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v26, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v18, v25);
  sub_100500ADC((uint64_t)v14, (uint64_t)v10, (uint64_t)v17);
  id v19 = sub_1000BFFE8((uint64_t)v17);
  sub_1002C21D4((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMAccessoryProductImageRequest);
  uint64_t v20 = v27;
  sub_1002C1984(a2, v27);
  unint64_t v21 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v19;
  *(void *)(v22 + 24) = v3;
  sub_1002C1AEC(v20, v22 + v21);
  sub_10005D034(&qword_1006B9550);
  swift_allocObject();
  id v23 = v19;
  swift_retain();
  uint64_t v30 = Future.init(_:)();
  sub_1000450A0(&qword_1006B9558, &qword_1006B9550);
  Publisher.eraseToAnyPublisher()();
  swift_release();
  return v23;
}

uint64_t sub_1002C08E8(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  sub_1002C1984(a5, (uint64_t)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = (uint64_t (*)(uint64_t))swift_allocObject();
  *((void *)v15 + 2) = v13;
  *((void *)v15 + 3) = a3;
  *((void *)v15 + 4) = sub_1001BF1B0;
  *((void *)v15 + 5) = v12;
  sub_1002C1AEC((uint64_t)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v15 + v14);
  uint64_t v16 = (uint64_t (**)(uint64_t))&a3[qword_1006B14F8];
  uint64_t v17 = *(void *)&a3[qword_1006B14F8];
  *uint64_t v16 = sub_1002C1D50;
  v16[1] = v15;
  swift_retain();
  uint64_t v18 = a3;
  return sub_100036B90(v17);
}

uint64_t sub_1002C0A80(uint64_t a1, uint64_t a2, void *a3, void (*a4)(void *, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v30 = a6;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  __chkstk_darwin(v9);
  unint64_t v32 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for DispatchQoS();
  uint64_t v31 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context();
  uint64_t v29 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v29 + 64);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = *(void **)a1;
  int v16 = *(unsigned __int8 *)(a1 + 8);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    id v17 = a3;
    sub_1000B6BA8(v15, v16);
    os_log_type_t v18 = static os_log_type_t.default.getter();
    sub_1002C1DC8(v18, v17);
    sub_1000B6BB4(v15, v16);
    swift_release();
  }
  if (v16)
  {
    swift_errorRetain();
    uint64_t v19 = 1;
  }
  else
  {
    id v20 = v15;
    uint64_t v19 = 0;
  }
  a4(v15, v19);
  sub_1000B6BB4(v15, v16);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v22 = *(id *)(result + 24);
    swift_release();
    uint64_t v23 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    sub_1002C1984(v30, (uint64_t)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v24 = (*(unsigned __int8 *)(v29 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v23;
    sub_1002C1AEC((uint64_t)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24);
    aBlock[4] = sub_1002C2170;
    aBlock[5] = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003C410;
    aBlock[3] = &unk_1006311D0;
    uint64_t v26 = _Block_copy(aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v36 = _swiftEmptyArrayStorage;
    sub_100067FE8((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10005D034((uint64_t *)&unk_1006AE4B0);
    sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
    uint64_t v27 = v32;
    uint64_t v28 = v35;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v28);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v33);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1002C0F44(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1002C1984((uint64_t)a2, (uint64_t)v5);
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_1000606BC(v7, (uint64_t)qword_1006D1E98);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = v6;
    if (os_log_type_enabled(v8, v6))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      id v17 = a2;
      v18[0] = v11;
      *(_DWORD *)uint64_t v10 = 136315138;
      v16[1] = v10 + 4;
      uint64_t v19 = 0;
      unint64_t v20 = 0xE000000000000000;
      _StringGuts.grow(_:)(46);
      v12._unint64_t object = (void *)0x8000000100591580;
      v12._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
      String.append(_:)(v12);
      _print_unlocked<A, B>(_:_:)();
      v13._uint64_t countAndFlagsBits = 0;
      v13._unint64_t object = (void *)0xE000000000000000;
      String.append(_:)(v13);
      uint64_t v19 = sub_1000606F4(v19, v20, v18);
      a2 = v17;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMDiscoveredAccessoryImageFetchingCoordinator: %s", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    swift_release();

    sub_1002C21D4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context);
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_beginAccess();
    uint64_t v15 = (void *)sub_1001B1428(a2);
    swift_endAccess();
    sub_1002C2234(v15);
    return swift_release();
  }
  return result;
}

uint64_t sub_1002C123C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void *initializeBufferWithCopyOfBuffer for FMAccessoryProductImageFetchingCoordinator.FetchItem(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for FMAccessoryProductImageFetchingCoordinator.FetchItem(id *a1)
{
  return swift_release();
}

uint64_t assignWithCopy for FMAccessoryProductImageFetchingCoordinator.FetchItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

id *assignWithTake for FMAccessoryProductImageFetchingCoordinator.FetchItem(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMAccessoryProductImageFetchingCoordinator.FetchItem(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMAccessoryProductImageFetchingCoordinator.FetchItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t *sub_1002C1420(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_1002C1508(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_1002C1580(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_1002C1618(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_1002C16B4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1002C1730(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1002C17BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002C17D0);
}

uint64_t sub_1002C17D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1002C1880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002C1894);
}

uint64_t sub_1002C1894(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1002C193C()
{
  return sub_100067FE8(&qword_1006B9548, (void (*)(uint64_t))type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context);
}

uint64_t sub_1002C1984(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002C19E8()
{
  uint64_t v1 = (int *)(type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;

  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[7];
  uint64_t v7 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1002C1AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002C1B50(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context() - 8);
  uint64_t v6 = *(char **)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1002C08E8(a1, a2, v6, v7, v8);
}

uint64_t sub_1002C1BD4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002C1C0C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002C1C44()
{
  uint64_t v1 = (int *)(type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[7];
  uint64_t v7 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1002C1D50(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context() - 8);
  uint64_t v4 = v1[2];
  uint64_t v5 = (void *)v1[3];
  uint64_t v6 = (void (*)(void *, uint64_t))v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1002C0A80(a1, v4, v5, v6, v7, v8);
}

void sub_1002C1DC8(os_log_type_t a1, void *a2)
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000606BC(v4, (uint64_t)qword_1006D1E98);
  os_log_type_t v5 = a1;
  log = Logger.logObject.getter();
  if (os_log_type_enabled(log, a1))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v17 = v7;
    _StringGuts.grow(_:)(38);
    v8._unint64_t object = (void *)0x80000001005915B0;
    v8._uint64_t countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v8);
    id v9 = [a2 description];
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    Swift::String v12 = v11;

    v13._uint64_t countAndFlagsBits = v10;
    v13._unint64_t object = v12;
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    v14._uint64_t countAndFlagsBits = 0x6572206874697720;
    v14._unint64_t object = (void *)0xEE00203A746C7573;
    String.append(_:)(v14);
    sub_10005D034(&qword_1006B9560);
    _print_unlocked<A, B>(_:_:)();
    v15._uint64_t countAndFlagsBits = 0;
    v15._unint64_t object = (void *)0xE000000000000000;
    String.append(_:)(v15);
    sub_1000606F4(0, 0xE000000000000000, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v5, "FMDiscoveredAccessoryImageFetchingCoordinator: %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}