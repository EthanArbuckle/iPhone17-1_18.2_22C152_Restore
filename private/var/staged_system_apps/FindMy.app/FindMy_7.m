uint64_t sub_1004D15A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  char *v38;
  int v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;

  v3 = type metadata accessor for FMIPDeviceState();
  v43 = *(void *)(v3 - 8);
  v44 = v3;
  v4 = __chkstk_darwin(v3);
  v42 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v41 = (char *)&v38 - v6;
  v7 = type metadata accessor for FMIPSafeLocationType();
  v47 = *(void *)(v7 - 8);
  v48 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10005D034((uint64_t *)&unk_1006BEB20);
  __chkstk_darwin(v10 - 8);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FMIPSafeLocation();
  v45 = *(void *)(v13 - 8);
  v46 = v13;
  __chkstk_darwin(v13);
  v38 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  v16 = __chkstk_darwin(v15 - 8);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v38 - v19;
  v21 = type metadata accessor for FMIPLocation();
  v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v38 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_1004D636C();
  v39 = *(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) + 40)
                           + OBJC_IVAR____TtC6FindMy18FMLocationProvider_limitedPrecision);
  v40 = a1;
  FMIPDevice.bestLocation.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    v25 = (uint64_t *)&unk_1006B2AE0;
    v26 = (uint64_t)v20;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v21);
    v28 = v47;
    v27 = v48;
    (*(void (**)(char *, void, uint64_t))(v47 + 104))(v9, enum case for FMIPSafeLocationType.home(_:), v48);
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v18, v24, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
    swift_retain();
    sub_1000D95CC((uint64_t)v9, (uint64_t)v18, (uint64_t)v12);
    swift_release();
    sub_100003F10((uint64_t)v18, (uint64_t *)&unk_1006B2AE0);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v27);
    v30 = v45;
    v29 = v46;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v12, 1, v46) != 1)
    {
      v36 = v38;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v38, v12, v29);
      v31 = FMIPSafeLocation.identifier.getter();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v29);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
      return v31;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    v25 = (uint64_t *)&unk_1006BEB20;
    v26 = (uint64_t)v12;
  }
  sub_100003F10(v26, v25);
  if ((v49 & 1) == 0)
  {
    v32 = v41;
    FMIPDevice.state.getter();
    v33 = v42;
    static FMIPDeviceState.isThisDevice.getter();
    sub_100045D0C((unint64_t *)&qword_1006C0390, (void (*)(uint64_t))&type metadata accessor for FMIPDeviceState);
    v34 = v44;
    dispatch thunk of SetAlgebra.isSuperset(of:)();
    v35 = *(void (**)(char *, uint64_t))(v43 + 8);
    v35(v33, v34);
    v35(v32, v34);
  }
  return 0;
}

uint64_t sub_1004D1B64(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)(v2 + 88);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v2;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_1004DDAE4;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_100641E68;
  v13 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  v15[1] = _swiftEmptyArrayStorage;
  sub_100045D0C((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

uint64_t sub_1004D1E30(uint64_t a1)
{
  uint64_t v2 = sub_10005D034(&qword_1006C0A78);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10005D034(&qword_1006C0A80);
  v18[0] = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_1004C134C(v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1000EEA50((uint64_t)v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = swift_bridgeObjectRetain();
  v13 = sub_1004DC7B8(v12, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain();
  v14 = sub_1004DBE4C((uint64_t)v13, a1);
  swift_bridgeObjectRelease();
  swift_release();
  if (v14[2])
  {
    v18[1] = v14;
    sub_10005D034(&qword_1006C0A88);
    sub_10005D034(&qword_1006C0A90);
    sub_1000450A0(&qword_1006C0A98, &qword_1006C0A88);
    sub_1000450A0(&qword_1006C0AA0, &qword_1006C0A90);
    Publishers.MergeMany.init<A>(_:)();
    sub_1000450A0(&qword_1006C0AA8, &qword_1006C0A78);
    Publisher.collect()();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1000450A0((unint64_t *)&unk_1006C0AB0, &qword_1006C0A80);
    swift_retain();
    uint64_t v15 = Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v18[0] + 8))(v8, v6);
    *(void *)(a1 + 96) = v15;
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v17 = sub_10014CD84((uint64_t)_swiftEmptyArrayStorage);
    sub_10003C81C(v17, (uint64_t)_swiftEmptyArrayStorage);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1004D21BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v27 = *(void *)(v12 - 8);
  uint64_t v28 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  Date.init()();
  v32 = v14;
  if (v15 < 0 || (v15 & 0x4000000000000000) != 0)
  {
    unint64_t v25 = swift_bridgeObjectRetain();
    uint64_t v16 = (uint64_t)sub_1004AF3B4(v25);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  aBlock[0] = v16;
  sub_1004D6AB8((uint64_t (*)(void **, void **))sub_1004DDAF4);
  uint64_t v17 = aBlock[0];
  uint64_t v30 = v8;
  uint64_t v31 = v5;
  uint64_t v29 = v9;
  if ((aBlock[0] & 0x8000000000000000) != 0 || (aBlock[0] & 0x4000000000000000) != 0)
  {
    type metadata accessor for FMAnnotation();
    swift_bridgeObjectRetain();
    uint64_t v18 = _bridgeCocoaArray<A>(_:)();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for FMAnnotation();
    uint64_t v18 = v17;
  }
  swift_release();
  uint64_t v19 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  v20 = sub_1004DDB14(v18, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a2;
  *(void *)(v21 + 24) = v20;
  aBlock[4] = sub_1004DDCB0;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_100641EB8;
  v22 = _Block_copy(aBlock);
  swift_retain();
  id v23 = v20;
  static DispatchQoS.unspecified.getter();
  v33 = _swiftEmptyArrayStorage;
  sub_100045D0C((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v30);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v28);
  return swift_release();
}

uint64_t sub_1004D261C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v120 = a3;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v113 = *(void *)(v5 - 8);
  uint64_t v114 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v102 = (char *)&v92 - v9;
  uint64_t v10 = type metadata accessor for FMIPUnknownItem();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  v111 = (char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  v101 = (char *)&v92 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  v109 = (char *)&v92 - v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v92 - v18;
  uint64_t v20 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  v110 = (char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v24 = (char *)&v92 - v23;
  uint64_t v25 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  v99 = (char *)&v92 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v105 = (char *)&v92 - v28;
  uint64_t v29 = type metadata accessor for Date();
  uint64_t v115 = *(void *)(v29 - 8);
  uint64_t v30 = __chkstk_darwin(v29);
  v98 = (char *)&v92 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  v100 = (char *)&v92 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  v36 = (char *)&v92 - v35;
  uint64_t v37 = __chkstk_darwin(v34);
  v96 = (char *)&v92 - v38;
  __chkstk_darwin(v37);
  uint64_t v116 = (uint64_t)&v92 - v39;
  uint64_t v40 = *a1;
  uint64_t v104 = *a2;
  uint64_t v41 = v40 + OBJC_IVAR____TtC6FindMy23FMUnknownItemAnnotation_item;
  swift_beginAccess();
  v42 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v97 = v41;
  v118 = v42;
  uint64_t v119 = v11 + 16;
  v42(v19, v41, v10);
  uint64_t v43 = FMIPUnknownItem.locations.getter();
  v44 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v122 = v10;
  uint64_t v121 = v11 + 8;
  v117 = v44;
  v44(v19, v10);
  uint64_t v45 = *(void *)(v43 + 16);
  uint64_t v46 = type metadata accessor for FMIPLocation();
  uint64_t v47 = *(void *)(v46 - 8);
  uint64_t v48 = v47;
  v112 = v8;
  if (v45)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v47 + 16))(v24, v43 + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80)), v46);
    uint64_t v49 = 0;
  }
  else
  {
    uint64_t v49 = 1;
  }
  v107 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56);
  v107(v24, v49, 1, v46);
  swift_bridgeObjectRelease();
  v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
  unsigned int v51 = v50(v24, 1, v46);
  uint64_t v108 = v48 + 56;
  v106 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v50;
  if (v51 == 1)
  {
    sub_100003F10((uint64_t)v24, (uint64_t *)&unk_1006B2AE0);
    uint64_t v52 = v115;
    v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v115 + 56);
    uint64_t v54 = (uint64_t)v105;
    v55 = v105;
    uint64_t v56 = 1;
  }
  else
  {
    v57 = (void *)FMIPLocation.location.getter();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v24, v46);
    id v58 = [v57 timestamp];

    v59 = v96;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v52 = v115;
    uint64_t v54 = (uint64_t)v105;
    (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v105, v59, v29);
    v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56);
    v55 = (char *)v54;
    uint64_t v56 = 0;
  }
  v94 = v53;
  v53(v55, v56, 1, v29);
  v95 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 16);
  v95(v36, v120, v29);
  v105 = *(char **)(v52 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v105)(v54, 1, v29) == 1)
  {
    v93 = *(void (**)(uint64_t, char *, uint64_t))(v52 + 32);
    v93(v116, v36, v29);
    sub_100003F10(v54, (uint64_t *)&unk_1006AF6E0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v52 + 8))(v36, v29);
    v93 = *(void (**)(uint64_t, char *, uint64_t))(v52 + 32);
    v93(v116, (char *)v54, v29);
  }
  uint64_t v60 = v104 + OBJC_IVAR____TtC6FindMy23FMUnknownItemAnnotation_item;
  swift_beginAccess();
  v61 = v109;
  uint64_t v104 = v60;
  uint64_t v62 = v60;
  uint64_t v63 = v122;
  v118(v109, v62, v122);
  uint64_t v64 = FMIPUnknownItem.locations.getter();
  v117(v61, v63);
  if (*(void *)(v64 + 16))
  {
    uint64_t v65 = (uint64_t)v110;
    (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))(v110, v64 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80)), v46);
    uint64_t v66 = 0;
  }
  else
  {
    uint64_t v66 = 1;
    uint64_t v65 = (uint64_t)v110;
  }
  v107((char *)v65, v66, 1, v46);
  swift_bridgeObjectRelease();
  if (v106(v65, 1, v46) == 1)
  {
    sub_100003F10(v65, (uint64_t *)&unk_1006B2AE0);
    v67 = v101;
    uint64_t v68 = (uint64_t)v99;
    v69 = v98;
    uint64_t v70 = v115;
    v71 = v95;
    v72 = (void (*)(char *, char *, uint64_t))v93;
    v94(v99, 1, 1, v29);
  }
  else
  {
    v73 = (void *)FMIPLocation.location.getter();
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v65, v46);
    id v74 = [v73 timestamp];

    v75 = v96;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v70 = v115;
    uint64_t v68 = (uint64_t)v99;
    v72 = (void (*)(char *, char *, uint64_t))v93;
    v93((uint64_t)v99, v75, v29);
    v67 = v101;
    v69 = v98;
    v71 = v95;
    v94((char *)v68, 0, 1, v29);
  }
  v71(v69, v120, v29);
  int v76 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v105)(v68, 1, v29);
  uint64_t v103 = v29;
  if (v76 == 1)
  {
    v77 = v69;
    uint64_t v78 = (uint64_t)v100;
    v72(v100, v77, v29);
    sub_100003F10(v68, (uint64_t *)&unk_1006AF6E0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v70 + 8))(v69, v29);
    uint64_t v78 = (uint64_t)v100;
    v72(v100, (char *)v68, v29);
  }
  uint64_t v79 = (uint64_t)v102;
  uint64_t v80 = v122;
  v81 = v118;
  v118(v67, v97, v122);
  FMIPUnknownItem.identifier.getter();
  v82 = v117;
  v117(v67, v80);
  v83 = v111;
  v81(v111, v104, v80);
  uint64_t v84 = (uint64_t)v112;
  FMIPUnknownItem.identifier.getter();
  v82(v83, v80);
  uint64_t v85 = v116;
  LOBYTE(v83) = sub_1004C1AC4(v116, v79, v78, v84);
  uint64_t v86 = v114;
  v87 = *(void (**)(uint64_t, uint64_t))(v113 + 8);
  v87(v84, v114);
  v87(v79, v86);
  v88 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
  uint64_t v89 = v78;
  uint64_t v90 = v103;
  v88(v89, v103);
  v88(v85, v90);
  return v83 & 1;
}

uint64_t sub_1004D3130(uint64_t a1, void *a2)
{
  sub_10005D034((uint64_t *)&unk_1006C0AE0);
  uint64_t v3 = (int *)(sub_10005D034(&qword_1006B2FA0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10055B970;
  uint64_t v6 = v3[14];
  type metadata accessor for FMAnnotationIdentifier();
  OS_dispatch_queue.sync<A>(execute:)();
  *(void *)(v5 + v4 + v6) = a2;
  id v7 = a2;
  unint64_t v8 = sub_10014CD84(v5);
  sub_10003C81C(v8, (uint64_t)_swiftEmptyArrayStorage);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004D3274(uint64_t a1)
{
  uint64_t v58 = a1;
  uint64_t v51 = *v1;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v56 = *(void *)(v2 - 8);
  uint64_t v57 = v2;
  __chkstk_darwin(v2);
  uint64_t v54 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for DispatchQoS();
  uint64_t v53 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v52 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FMIPUnknownItem();
  uint64_t v60 = *(void *)(v5 - 8);
  uint64_t v61 = v5;
  uint64_t v6 = *(void *)(v60 + 64);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v49 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v59 = (char *)&v44 - v8;
  uint64_t v9 = type metadata accessor for FMSelectedSection();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v50 = (uint64_t)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v44 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v44 - v15;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = _swiftEmptyArrayStorage;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = &_swiftEmptyDictionarySingleton;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = _swiftEmptyArrayStorage;
  uint64_t v20 = *(void *)(v1[2] + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100057A34(v20, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  uint64_t v62 = v16;
  sub_100057A34((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload() == 8)
  {
    uint64_t v21 = v60;
    uint64_t v46 = v1;
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v60 + 32);
    uint64_t v22 = v59;
    uint64_t v23 = v61;
    v45(v59, v14, v61);
    uint64_t v50 = v1[11];
    v24 = v49;
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v49, v22, v23);
    unint64_t v25 = (*(unsigned __int8 *)(v21 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    unint64_t v26 = (v6 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v44 = v17;
    unint64_t v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v48 = v18;
    unint64_t v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v47 = v19;
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v58;
    v45((char *)(v30 + v25), v24, v23);
    *(void *)(v30 + v26) = v44;
    *(void *)(v30 + v27) = v48;
    *(void *)(v30 + v28) = v46;
    *(void *)(v30 + v29) = v47;
    *(void *)(v30 + ((v29 + 15) & 0xFFFFFFFFFFFFFFF8)) = v51;
    v67 = sub_1004DD9BC;
    uint64_t v68 = v30;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    unint64_t v64 = 1107296256;
    uint64_t v65 = sub_10003C410;
    uint64_t v66 = &unk_100641D78;
    uint64_t v31 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v32 = v52;
    static DispatchQoS.unspecified.getter();
    v69 = _swiftEmptyArrayStorage;
    sub_100045D0C((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10005D034((uint64_t *)&unk_1006AE4B0);
    sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
    uint64_t v33 = v54;
    uint64_t v34 = v57;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v31);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v33, v34);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v32, v55);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v61);
    sub_100057E74((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v35 = (uint64_t)v62;
    sub_100057E74((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v36 = type metadata accessor for Logger();
    sub_1000606BC(v36, (uint64_t)qword_1006D1E98);
    uint64_t v37 = v50;
    sub_100057A34(v35, v50, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v48 = v18;
      uint64_t v40 = swift_slowAlloc();
      uint64_t v47 = v19;
      uint64_t v41 = (uint8_t *)v40;
      v42 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 136315138;
      v69 = v42;
      uint64_t aBlock = 0;
      unint64_t v64 = 0xE000000000000000;
      _print_unlocked<A, B>(_:_:)();
      uint64_t aBlock = sub_1000606F4(aBlock, v64, (uint64_t *)&v69);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100057E74(v37, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "FMMapViewDataSource: cannot fetch unknown item value from selected section %s", v41, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100057E74((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    }
    else
    {

      sub_100057E74(v37, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
      sub_100057E74(v35, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    }
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1004D3B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v263 = a5;
  uint64_t v246 = a2;
  uint64_t v260 = type metadata accessor for FMAnnotationIdentifier();
  uint64_t v255 = *(void *)(v260 - 8);
  uint64_t v10 = __chkstk_darwin(v260);
  uint64_t v273 = (uint64_t)&v219 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v264 = (uint64_t *)((char *)&v219 - v12);
  uint64_t v272 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v272 - 8);
  __chkstk_darwin(v272);
  v271 = (char *)&v219 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v233 = type metadata accessor for FMIPLocation();
  uint64_t v15 = *(void *)(v233 - 8);
  __chkstk_darwin(v233);
  uint64_t v17 = (char *)&v219 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v222 = sub_10005D034(&qword_1006C0A78);
  uint64_t v221 = *(void *)(v222 - 8);
  __chkstk_darwin(v222);
  v220 = (char *)&v219 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v225 = sub_10005D034(&qword_1006C0A80);
  uint64_t v224 = *(void *)(v225 - 8);
  __chkstk_darwin(v225);
  v223 = (char *)&v219 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v249 = type metadata accessor for UUID();
  uint64_t v20 = *(void *)(v249 - 8);
  uint64_t v21 = __chkstk_darwin(v249);
  v245 = (char *)&v219 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v248 = (char *)&v219 - v23;
  uint64_t v24 = type metadata accessor for FMIPUnknownItem();
  uint64_t v25 = __chkstk_darwin(v24);
  v236 = (char *)&v219 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  v237 = (char *)&v219 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v253 = (uint64_t)&v219 - v31;
  v235 = (uint64_t *)(a6 + 16);
  uint64_t v244 = *(void *)(a1 + 16);
  if (!v244) {
    goto LABEL_139;
  }
  uint64_t v254 = v29;
  v229 = (void *)(a3 + 16);
  uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
  uint64_t v32 = v30 + 16;
  v251 = v33;
  v270 = (void *)(a4 + 16);
  uint64_t v243 = a1 + ((*(unsigned __int8 *)(v32 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 64));
  uint64_t v242 = *(void *)(v32 + 56);
  v247 = (void (**)(char *, uint64_t))(v20 + 8);
  uint64_t v252 = v32;
  v250 = (void (**)(uint64_t, uint64_t))(v32 - 8);
  v267 = (void (**)(char *, uint64_t))(v13 + 8);
  v257 = (void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v219 = a1;
  swift_bridgeObjectRetain();
  uint64_t v34 = 0;
  uint64_t v265 = 0;
  *(void *)&long long v35 = 136315138;
  long long v227 = v35;
  v226 = (char *)&type metadata for Any + 8;
  *(void *)&long long v35 = 134217984;
  long long v228 = v35;
  long long v258 = xmmword_10055BD30;
  uint64_t v240 = a3;
  uint64_t v239 = a4;
  uint64_t v268 = v15;
  v232 = v17;
  uint64_t v231 = v15 + 16;
  v230 = (void (**)(char *, uint64_t))(v15 + 8);
  while (1)
  {
    uint64_t v36 = v15;
    uint64_t v256 = v34;
    uint64_t v37 = v253;
    uint64_t v38 = v254;
    v251(v253, v243 + v242 * v34, v254);
    os_log_type_t v39 = v248;
    FMIPUnknownItem.identifier.getter();
    uint64_t v40 = v245;
    FMIPUnknownItem.identifier.getter();
    char v41 = static UUID.== infix(_:_:)();
    v42 = *v247;
    uint64_t v43 = v40;
    uint64_t v44 = v249;
    (*v247)(v43, v249);
    v42(v39, v44);
    if (v41) {
      break;
    }
    (*v250)(v37, v38);
LABEL_4:
    uint64_t v15 = v36;
LABEL_5:
    uint64_t v34 = v256 + 1;
    if (v256 + 1 == v244)
    {
      swift_bridgeObjectRelease();
LABEL_139:
      v210 = v235;
      swift_beginAccess();
      uint64_t v277 = *v210;
      swift_bridgeObjectRetain();
      sub_10005D034(&qword_1006C0A88);
      sub_10005D034(&qword_1006C0A90);
      sub_1000450A0(&qword_1006C0A98, &qword_1006C0A88);
      sub_1000450A0(&qword_1006C0AA0, &qword_1006C0A90);
      v211 = v220;
      Publishers.MergeMany.init<A>(_:)();
      sub_1000450A0(&qword_1006C0AA8, &qword_1006C0A78);
      v212 = v223;
      uint64_t v213 = v222;
      Publisher.collect()();
      (*(void (**)(char *, uint64_t))(v221 + 8))(v211, v213);
      v214 = (void *)swift_allocObject();
      uint64_t v215 = v263;
      v214[2] = a4;
      v214[3] = v215;
      v214[4] = a3;
      sub_1000450A0((unint64_t *)&unk_1006C0AB0, &qword_1006C0A80);
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v216 = v225;
      uint64_t v217 = Publisher<>.sink(receiveValue:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v224 + 8))(v212, v216);
      *(void *)(v215 + 96) = v217;
      return swift_release();
    }
  }
  uint64_t v45 = *(void *)(FMIPUnknownItem.locations.getter() + 16);
  swift_bridgeObjectRelease();
  if (!v45)
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v54 = type metadata accessor for Logger();
    sub_1000606BC(v54, (uint64_t)qword_1006D1E98);
    uint64_t v55 = v236;
    uint64_t v56 = v254;
    v251((uint64_t)v236, v37, v254);
    uint64_t v57 = Logger.logObject.getter();
    os_log_type_t v58 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = swift_slowAlloc();
      uint64_t v269 = swift_slowAlloc();
      uint64_t v278 = v269;
      *(_DWORD *)uint64_t v59 = v227;
      uint64_t v60 = v248;
      FMIPUnknownItem.identifier.getter();
      sub_100045D0C((unint64_t *)&qword_1006B6CC0, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v61 = v249;
      uint64_t v62 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v64 = v63;
      v42(v60, v61);
      *(void *)(v59 + 4) = sub_1000606F4(v62, v64, &v278);
      swift_bridgeObjectRelease();
      uint64_t v65 = *v250;
      (*v250)((uint64_t)v236, v56);
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "FMMapViewDataSource: No locations provided for %s", (uint8_t *)v59, 0xCu);
      swift_arrayDestroy();
      a4 = v239;
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v66 = v253;
    }
    else
    {

      v139 = v55;
      uint64_t v65 = *v250;
      (*v250)((uint64_t)v139, v56);
      uint64_t v66 = v37;
    }
    v65(v66, v56);
    a3 = v240;
    goto LABEL_4;
  }
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v46 = type metadata accessor for Logger();
  sub_1000606BC(v46, (uint64_t)qword_1006D1E98);
  uint64_t v47 = v237;
  uint64_t v48 = v254;
  v251((uint64_t)v237, v37, v254);
  uint64_t v49 = Logger.logObject.getter();
  os_log_type_t v50 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = swift_slowAlloc();
    *(_DWORD *)uint64_t v51 = v228;
    uint64_t v52 = v47;
    uint64_t v53 = *(void *)(FMIPUnknownItem.locations.getter() + 16);
    swift_bridgeObjectRelease();
    v241 = *v250;
    v241((uint64_t)v52, v48);
    *(void *)(v51 + 4) = v53;
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "FMMapViewDataSource: computing %ld location tracks", (uint8_t *)v51, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    v241 = *v250;
    v241((uint64_t)v47, v48);
  }

  v67 = (void *)FMIPUnknownItem.locations.getter();
  uint64_t v68 = v67[2];
  if (v68)
  {
    uint64_t v278 = (uint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    unint64_t v69 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    id v266 = v67;
    uint64_t v70 = (char *)v67 + v69;
    uint64_t v269 = *(void *)(v15 + 72);
    v71 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
    v72 = v232;
    v73 = v230;
    uint64_t v74 = v233;
    do
    {
      v71(v72, v70, v74);
      FMIPLocation.location.getter();
      (*v73)(v72, v74);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v70 += v269;
      --v68;
    }
    while (v68);
    uint64_t v75 = v278;
    swift_bridgeObjectRelease();
    a4 = v239;
    uint64_t v15 = v268;
    if (v75 < 0)
    {
LABEL_129:
      unint64_t v205 = swift_bridgeObjectRetain();
      uint64_t v76 = (uint64_t)sub_1004AF518(v205);
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v75 = (uint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_129;
    }
  }
  if ((v75 & 0x4000000000000000) != 0) {
    goto LABEL_129;
  }
  uint64_t v76 = v75 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
LABEL_25:
  uint64_t v278 = v76;
  uint64_t v77 = v265;
  sub_1004D6B50(&v278);
  uint64_t v265 = v77;
  if (v77) {
    goto LABEL_152;
  }
  swift_bridgeObjectRelease();
  uint64_t v78 = v278;
  uint64_t v277 = (uint64_t)_swiftEmptyArrayStorage;
  if ((v278 & 0x8000000000000000) == 0 && (v278 & 0x4000000000000000) == 0)
  {
    uint64_t v79 = *(void *)(v278 + 16);
    swift_retain();
    if (v79) {
      goto LABEL_29;
    }
    goto LABEL_131;
  }
  swift_retain();
  uint64_t v79 = _CocoaArrayWrapper.endIndex.getter();
  if (!v79)
  {
LABEL_131:
    swift_bridgeObjectRelease();
    swift_release_n();
    v241(v253, v254);
    a3 = v240;
    goto LABEL_5;
  }
LABEL_29:
  uint64_t v269 = v78 & 0xC000000000000001;
  uint64_t v80 = v78;
  if ((v78 & 0xC000000000000001) != 0)
  {
    id v81 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_release();
    uint64_t v82 = v79 - 1;
    if (v79 < 1) {
      goto LABEL_149;
    }
LABEL_32:
    uint64_t v238 = v82;
    uint64_t v234 = v78 + 32;
    swift_retain();
    uint64_t v83 = 0;
    uint64_t v84 = _swiftEmptyArrayStorage;
    uint64_t v259 = v78;
    do
    {
      if (v269) {
        id v88 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v88 = *(id *)(v80 + 8 * v83 + 32);
      }
      uint64_t v89 = v88;
      [v88 distanceFromLocation:v81];
      if (v90 >= 25.0)
      {
        uint64_t v92 = v81;
        uint64_t v93 = v277;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v84 = sub_10007E09C(0, v84[2] + 1, 1, v84);
        }
        unint64_t v95 = v84[2];
        unint64_t v94 = v84[3];
        if (v95 >= v94 >> 1) {
          uint64_t v84 = sub_10007E09C((void *)(v94 > 1), v95 + 1, 1, v84);
        }
        v84[2] = v95 + 1;
        v84[v95 + 4] = v93;
        sub_10005D034(&qword_1006AF2D0);
        uint64_t v85 = swift_allocObject();
        *(_OWORD *)(v85 + 16) = v258;
        *(void *)(v85 + 32) = v89;
        uint64_t v278 = v85;
        specialized Array._endMutation()();
        uint64_t v86 = v278;
        id v87 = v89;

        uint64_t v277 = v86;
        id v81 = v87;
        uint64_t v80 = v259;
      }
      else
      {
        id v91 = v89;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v277 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v277 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      ++v83;
    }
    while (v79 != v83);
    swift_release();
    unint64_t v276 = (unint64_t)_swiftEmptyArrayStorage;
    unint64_t v262 = v84[2];
    if (v262)
    {
      v261 = v84 + 4;
      swift_bridgeObjectRetain();
      unint64_t v96 = 0;
      while (1)
      {
        if (v96 >= v84[2])
        {
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
          goto LABEL_149;
        }
        unint64_t v97 = v261[v96];
        if (v97 >> 62)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v98 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v98)
          {
LABEL_48:
            swift_bridgeObjectRelease();
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v98 = *(void *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v98) {
            goto LABEL_48;
          }
        }
        unint64_t v99 = v98 - 1;
        if (__OFSUB__(v98, 1)) {
          goto LABEL_143;
        }
        id v266 = v81;
        if ((v97 & 0xC000000000000001) != 0)
        {
          id v100 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v99 & 0x8000000000000000) != 0) {
            goto LABEL_144;
          }
          if (v99 >= *(void *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_145;
          }
          id v100 = *(id *)(v97 + 8 * v99 + 32);
        }
        v101 = v100;
        if (v97 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v102 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v102)
          {
LABEL_60:
            uint64_t v278 = (uint64_t)_swiftEmptyArrayStorage;
            sub_10013EBA4(0, v102 & ~(v102 >> 63), 0);
            if (v102 < 0) {
              goto LABEL_147;
            }
            uint64_t v103 = 0;
            uint64_t v104 = (double *)v278;
            do
            {
              if ((v97 & 0xC000000000000001) != 0) {
                id v105 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v105 = *(id *)(v97 + 8 * v103 + 32);
              }
              v106 = v105;
              [v105 coordinate];
              uint64_t v108 = v107;
              uint64_t v110 = v109;

              uint64_t v278 = (uint64_t)v104;
              unint64_t v112 = *((void *)v104 + 2);
              unint64_t v111 = *((void *)v104 + 3);
              uint64_t v113 = v112 + 1;
              if (v112 >= v111 >> 1)
              {
                sub_10013EBA4(v111 > 1, v112 + 1, 1);
                uint64_t v104 = (double *)v278;
              }
              ++v103;
              *((void *)v104 + 2) = v113;
              uint64_t v114 = &v104[2 * v112];
              *((void *)v114 + 4) = v108;
              *((void *)v114 + 5) = v110;
            }
            while (v102 != v103);
            goto LABEL_71;
          }
        }
        else
        {
          uint64_t v102 = *(void *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v102) {
            goto LABEL_60;
          }
        }
        uint64_t v104 = (double *)_swiftEmptyArrayStorage;
        uint64_t v113 = _swiftEmptyArrayStorage[2];
LABEL_71:
        if ((unint64_t)v113 > 1)
        {
          uint64_t v115 = v104 + 5;
          double v116 = 0.0;
          uint64_t v117 = v113;
          double v118 = 0.0;
          double v119 = 0.0;
          do
          {
            double v120 = *v115 * 3.14159265 / 180.0;
            __double2 v121 = __sincos_stret(*(v115 - 1) * 3.14159265 / 180.0);
            __double2 v122 = __sincos_stret(v120);
            double v119 = v119 + v121.__cosval * v122.__cosval;
            double v118 = v118 + v121.__cosval * v122.__sinval;
            double v116 = v116 + v121.__sinval;
            v115 += 2;
            --v117;
          }
          while (v117);
          swift_bridgeObjectRelease();
          long double v123 = v116 / (double)v113;
          double v124 = atan2(v118 / (double)v113, v119 / (double)v113);
          double v125 = atan2(v123, sqrt(v119 / (double)v113 * (v119 / (double)v113) + v118 / (double)v113 * (v118 / (double)v113)))* 180.0/ 3.14159265;
          double v126 = v124 * 180.0 / 3.14159265;
LABEL_77:
          uint64_t v127 = v265;
          v128 = sub_1004C1694(v97);
          uint64_t v129 = v128[2];
          uint64_t v265 = v127;
          if (v129)
          {
            v130 = (double *)(v128 + 4);
            double v131 = 0.0;
            uint64_t v15 = v268;
            do
            {
              double v132 = *v130++;
              double v131 = v131 + v132;
              --v129;
            }
            while (v129);
          }
          else
          {
            double v131 = 0.0;
            uint64_t v15 = v268;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v133 = [v101 timestamp];
          v134 = v271;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          id v135 = objc_allocWithZone((Class)CLLocation);
          Class isa = Date._bridgeToObjectiveC()().super.isa;
          id v137 = [v135 initWithCoordinate:isa, v125, v126, v131 / (double)v102, 12.5, 12.5];

          (*v267)(v134, v272);
          id v138 = v137;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          id v81 = v266;
          if (*(void *)((v276 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v276 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          goto LABEL_49;
        }
        if (v113)
        {
          double v125 = v104[4];
          double v126 = v104[5];
          swift_bridgeObjectRelease();
          goto LABEL_77;
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v15 = v268;
        id v81 = v266;
LABEL_49:
        if (++v96 == v262)
        {
          id v266 = v81;
          swift_bridgeObjectRelease();
          goto LABEL_93;
        }
      }
    }
    id v266 = v81;
LABEL_93:
    unint64_t v140 = swift_bridgeObjectRetain();
    uint64_t v141 = v265;
    v142 = sub_1004C1534(v140);
    uint64_t v265 = v141;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v269)
    {
      v143 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_release();
      v144 = v264;
      v145 = v229;
    }
    else
    {
      v144 = v264;
      v145 = v229;
      if (v238 >= *(void *)(v259 + 16)) {
        goto LABEL_150;
      }
      v143 = *(id *)(v234 + 8 * v238);
      swift_release();
    }
    BOOL v146 = v142[2] >= 2uLL;
    v261 = v143;
    if (v146)
    {
      [v143 coordinate];
      uint64_t v148 = v147;
      uint64_t v150 = v149;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v142 = sub_10007DF8C(0, v142[2] + 1, 1, v142);
      }
      unint64_t v152 = v142[2];
      unint64_t v151 = v142[3];
      if (v152 >= v151 >> 1) {
        v142 = sub_10007DF8C((void *)(v151 > 1), v152 + 1, 1, v142);
      }
      v142[2] = v152 + 1;
      v153 = &v142[2 * v152 + 4];
      void *v153 = v148;
      v153[1] = v150;
      id v154 = [self polylineWithCoordinates:v142 + 4 count:v152 + 1];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      id v155 = v154;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*v145 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v145 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();

      v144 = v264;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unint64_t v156 = v276;
    if (!(v276 >> 62))
    {
      uint64_t v157 = *(void *)((v276 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v157) {
        goto LABEL_108;
      }
      goto LABEL_135;
    }
    swift_bridgeObjectRetain();
    uint64_t v157 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v157)
    {
LABEL_135:
      swift_bridgeObjectRelease();
      uint64_t v206 = *(void *)(v263 + 48);
      swift_bridgeObjectRetain();
      uint64_t v207 = v253;
      v208 = v261;
      sub_1004DBA68(v253, v261, v206);
      swift_bridgeObjectRelease();
      v209 = v235;
      swift_beginAccess();
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(*v209 + 16) >= *(void *)(*v209 + 24) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();

      swift_release();
      v241(v207, v254);
      a3 = v240;
      a4 = v239;
      goto LABEL_5;
    }
LABEL_108:
    uint64_t v269 = v156 & 0xC000000000000001;
    uint64_t v158 = 4;
    unint64_t v262 = v156;
    while (1)
    {
      if (v269) {
        id v161 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v161 = *(id *)(v156 + 8 * v158);
      }
      v162 = v161;
      uint64_t v163 = v158 - 3;
      if (__OFADD__(v158 - 4, 1)) {
        goto LABEL_141;
      }
      uint64_t v278 = 0;
      unint64_t v279 = 0xE000000000000000;
      [v161 coordinate];
      Double.write<A>(to:)();
      v164._countAndFlagsBits = 45;
      v164._object = (void *)0xE100000000000000;
      String.append(_:)(v164);
      [v162 coordinate];
      Double.write<A>(to:)();
      v165._countAndFlagsBits = 45;
      v165._object = (void *)0xE100000000000000;
      String.append(_:)(v165);
      id v166 = [v162 timestamp];
      v167 = v271;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      Date.timeIntervalSinceReferenceDate.getter();
      (*v267)(v167, v272);
      Double.write<A>(to:)();
      unint64_t v168 = v279;
      void *v144 = v278;
      v144[1] = v168;
      swift_storeEnumTagMultiPayload();
      sub_100057A34((uint64_t)v144, v273, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
      uint64_t v169 = *(void *)(v263 + 48);
      if (*(void *)(v169 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v170 = sub_1001B0040((uint64_t)v144);
        if (v171)
        {
          id v172 = *(id *)(*(void *)(v169 + 56) + 8 * v170);
          swift_bridgeObjectRelease();
          goto LABEL_120;
        }
        swift_bridgeObjectRelease();
      }
      v173 = (char *)objc_allocWithZone((Class)type metadata accessor for FMTrackAnnotation());
      uint64_t v174 = OBJC_IVAR____TtC6FindMy17FMTrackAnnotation_noImage;
      id v175 = objc_allocWithZone((Class)UIImage);
      id v176 = v162;
      v177 = v173;
      *(void *)&v173[v174] = [v175 init];
      *(void *)&v177[OBJC_IVAR____TtC6FindMy17FMTrackAnnotation_location] = v176;
      id v178 = v176;
      id v179 = [v178 timestamp];
      v180 = v271;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      (*v257)(&v177[OBJC_IVAR____TtC6FindMy17FMTrackAnnotation_timestamp], v180, v272);
      [v178 coordinate];
      uint64_t v182 = v181;
      uint64_t v184 = v183;
      [v178 horizontalAccuracy];
      v185 = &v177[OBJC_IVAR____TtC6FindMy12FMAnnotation_title];
      *(void *)v185 = 0;
      *((void *)v185 + 1) = 0;
      *(void *)&v177[OBJC_IVAR____TtC6FindMy12FMAnnotation_badgeImage] = 0;
      *(void *)&v177[OBJC_IVAR____TtC6FindMy12FMAnnotation_stewieBadgeImage] = 0;
      v186 = &v177[OBJC_IVAR____TtC6FindMy12FMAnnotation_fmClusterIdentifier];
      *(void *)v186 = 0;
      *((void *)v186 + 1) = 0;
      v187 = &v177[OBJC_IVAR____TtC6FindMy12FMAnnotation_coordinate];
      *(void *)v187 = v182;
      *((void *)v187 + 1) = v184;
      *(void *)&v177[OBJC_IVAR____TtC6FindMy12FMAnnotation_horizontalAccuracy] = v188;
      v177[OBJC_IVAR____TtC6FindMy12FMAnnotation_isWithYou] = 0;
      v177[OBJC_IVAR____TtC6FindMy12FMAnnotation_isInaccurate] = 0;
      v177[OBJC_IVAR____TtC6FindMy12FMAnnotation_isLive] = 0;
      v189 = (objc_class *)type metadata accessor for FMAnnotation();
      v275.receiver = v177;
      v275.super_class = v189;
      id v172 = [super init];

LABEL_120:
      v190 = v270;
      swift_beginAccess();
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v274 = (void *)*v190;
      v192 = v274;
      void *v190 = 0x8000000000000000;
      unint64_t v194 = sub_1001B0040(v273);
      uint64_t v195 = v192[2];
      BOOL v196 = (v193 & 1) == 0;
      uint64_t v197 = v195 + v196;
      if (__OFADD__(v195, v196)) {
        goto LABEL_142;
      }
      char v198 = v193;
      if (v192[3] >= v197)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1001BCED0();
        }
      }
      else
      {
        sub_1001B6400(v197, isUniquelyReferenced_nonNull_native);
        unint64_t v199 = sub_1001B0040(v273);
        if ((v198 & 1) != (v200 & 1)) {
          goto LABEL_151;
        }
        unint64_t v194 = v199;
      }
      uint64_t v15 = v268;
      v201 = v274;
      if (v198)
      {
        uint64_t v159 = v274[7];
        uint64_t v160 = 8 * v194;

        *(void *)(v159 + v160) = v172;
      }
      else
      {
        v274[(v194 >> 6) + 8] |= 1 << v194;
        sub_100057A34(v273, v201[6] + *(void *)(v255 + 72) * v194, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
        *(void *)(v201[7] + 8 * v194) = v172;
        uint64_t v202 = v201[2];
        BOOL v203 = __OFADD__(v202, 1);
        uint64_t v204 = v202 + 1;
        if (v203) {
          goto LABEL_146;
        }
        v201[2] = v204;
      }
      void *v270 = v201;
      swift_bridgeObjectRelease();
      sub_100057E74(v273, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
      swift_endAccess();

      v144 = v264;
      sub_100057E74((uint64_t)v264, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
      ++v158;
      unint64_t v156 = v262;
      if (v163 == v157) {
        goto LABEL_135;
      }
    }
  }
  if (!*(void *)(v78 + 16)) {
    goto LABEL_148;
  }
  id v81 = *(id *)(v78 + 32);
  swift_release();
  uint64_t v82 = v79 - 1;
  if (v79 >= 1) {
    goto LABEL_32;
  }
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
LABEL_152:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1004D598C(id *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v44 = a3;
  uint64_t v48 = a2;
  uint64_t v53 = type metadata accessor for FMAnnotationIdentifier();
  uint64_t v49 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v7 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v47 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v46 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v45 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = (unint64_t)*a1;
  if ((unint64_t)*a1 >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain_n();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14)
    {
LABEL_3:
      uint64_t v40 = a4;
      uint64_t v41 = v11;
      uint64_t v42 = v9;
      unint64_t v43 = v8;
      uint64_t v15 = (void **)(v48 + 16);
      uint64_t v51 = v14;
      unint64_t v52 = v13 & 0xC000000000000001;
      uint64_t v11 = 4;
      unint64_t v50 = v13;
      while (1)
      {
        a4 = (void *)(v11 - 4);
        if (v52) {
          id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v17 = *(id *)(v13 + 8 * v11);
        }
        uint64_t v18 = v17;
        uint64_t v19 = v11 - 3;
        if (__OFADD__(a4, 1))
        {
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
        __chkstk_darwin(v17);
        *(&v39 - 2) = (uint64_t)v18;
        OS_dispatch_queue.sync<A>(execute:)();
        swift_beginAccess();
        unint64_t v13 = v18;
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v21 = v7;
        uint64_t v7 = isUniquelyReferenced_nonNull_native;
        uint64_t v55 = *v15;
        a4 = v55;
        *uint64_t v15 = (void *)0x8000000000000000;
        uint64_t v9 = v21;
        unint64_t v8 = sub_1001B0040(v21);
        uint64_t v23 = a4[2];
        BOOL v24 = (v22 & 1) == 0;
        uint64_t v25 = v23 + v24;
        if (__OFADD__(v23, v24)) {
          goto LABEL_22;
        }
        char v26 = v22;
        if (a4[3] >= v25)
        {
          if ((v7 & 1) == 0) {
            sub_1001BCED0();
          }
          uint64_t v7 = v9;
          a4 = v55;
          if (v26) {
            goto LABEL_4;
          }
        }
        else
        {
          sub_1001B6400(v25, v7);
          uint64_t v7 = v9;
          unint64_t v27 = sub_1001B0040(v9);
          if ((v26 & 1) != (v28 & 1))
          {
            uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
            __break(1u);
            return result;
          }
          unint64_t v8 = v27;
          a4 = v55;
          if (v26)
          {
LABEL_4:
            uint64_t v16 = a4[7];
            v8 *= 8;

            *(void *)(v16 + v8) = v13;
            goto LABEL_5;
          }
        }
        a4[(v8 >> 6) + 8] |= 1 << v8;
        sub_100057A34(v7, a4[6] + *(void *)(v49 + 72) * v8, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
        *(void *)(a4[7] + 8 * v8) = v13;
        uint64_t v29 = a4[2];
        BOOL v30 = __OFADD__(v29, 1);
        uint64_t v31 = v29 + 1;
        if (v30) {
          goto LABEL_23;
        }
        a4[2] = v31;
LABEL_5:
        *uint64_t v15 = a4;
        swift_bridgeObjectRelease();
        sub_100057E74(v7, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
        swift_endAccess();

        ++v11;
        unint64_t v13 = v50;
        if (v19 == v51)
        {
          swift_bridgeObjectRelease();
          uint64_t v9 = v42;
          unint64_t v8 = v43;
          uint64_t v11 = v41;
          a4 = v40;
          goto LABEL_26;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_26:
  uint64_t v32 = v44;
  uint64_t v33 = (void *)swift_allocObject();
  uint64_t v34 = v48;
  v33[2] = v32;
  v33[3] = v34;
  v33[4] = a4;
  aBlock[4] = sub_1004DDAC0;
  aBlock[5] = v33;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_100641E18;
  long long v35 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v36 = v45;
  static DispatchQoS.unspecified.getter();
  uint64_t v55 = _swiftEmptyArrayStorage;
  sub_100045D0C((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  uint64_t v37 = v47;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v35);
  (*(void (**)(char *, unint64_t))(v9 + 8))(v37, v8);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v36, v11);
  return swift_release();
}

uint64_t sub_1004D5FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(a2 + 16);
  swift_beginAccess();
  uint64_t v6 = *(void *)(a3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10003C81C(v5, v6);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1004D6068(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v37 = a5;
  uint64_t v9 = type metadata accessor for FMIPUnknownItem();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMAnnotationIdentifier();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a1;
  FMIPUnknownItem.identifier.getter();
  swift_storeEnumTagMultiPayload();
  if (!*(void *)(a2 + 16) || (unint64_t v17 = sub_1001B0040((uint64_t)v15), (v18 & 1) == 0))
  {
    sub_100057E74((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
LABEL_6:
    [a4 coordinate];
    double v28 = v27;
    double v30 = v29;
    [a4 horizontalAccuracy];
    double v32 = v31;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
    id v33 = objc_allocWithZone((Class)type metadata accessor for FMUnknownItemAnnotation());
    id v34 = v16;
    sub_10038697C((uint64_t)v12, v16, 0, 3, v28, v30, v32);
    uint64_t v21 = v35;

    goto LABEL_7;
  }
  id v19 = *(id *)(*(void *)(a2 + 56) + 8 * v17);
  sub_100057E74((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
  type metadata accessor for FMUnknownItemAnnotation();
  uint64_t v20 = swift_dynamicCastClass();
  if (!v20)
  {

    goto LABEL_6;
  }
  uint64_t v21 = v20;
  [a4 coordinate];
  double v23 = v22;
  double v25 = v24;
  [a4 horizontalAccuracy];
  sub_100386DB8(a3, v16, 0, 3uLL, v23, v25, v26);
LABEL_7:
  *uint64_t v37 = v21;
}

uint64_t sub_1004D6314()
{
  unint64_t v0 = sub_10014CD84((uint64_t)_swiftEmptyArrayStorage);
  sub_10003C81C(v0, (uint64_t)_swiftEmptyArrayStorage);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1004D636C()
{
  uint64_t v1 = type metadata accessor for FMSelectedSection();
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v13 - v5;
  uint64_t v7 = *(void *)(*(void *)(v0 + 16) + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100057A34(v7, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_100057A34((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload() != 6)
  {
    sub_100057E74((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    sub_100057E74((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
LABEL_6:
    char v11 = 0;
    return v11 & 1;
  }
  unint64_t v8 = (void *)*v4;
  sub_100083358(v4[1], v4[2]);
  uint64_t v9 = FMIPDevice.baIdentifier.getter();
  if (!v10)
  {
    sub_100057E74((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  char v11 = sub_100078284(v9, v10, v8);
  sub_100057E74((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1004D6538()
{
  swift_release();
  sub_100068760(v0 + 24);

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return v0;
}

uint64_t sub_1004D6598()
{
  sub_1004D6538();

  return swift_deallocClassInstance();
}

unsigned char *storeEnumTagSinglePayload for FMMapViewAnimation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004D6698);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMMapViewAnimation()
{
  return &type metadata for FMMapViewAnimation;
}

unsigned char *storeEnumTagSinglePayload for FMMapViewMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004D679CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMMapViewMode()
{
  return &type metadata for FMMapViewMode;
}

unint64_t sub_1004D67D8()
{
  unint64_t result = qword_1006C0A68;
  if (!qword_1006C0A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C0A68);
  }
  return result;
}

unint64_t sub_1004D6830()
{
  unint64_t result = qword_1006C0A70;
  if (!qword_1006C0A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C0A70);
  }
  return result;
}

uint64_t sub_1004D6884(uint64_t a1, uint64_t a2)
{
  return sub_100044944(a2, "FMMapViewDataSource: didUpdate %ld devices", (uint64_t)&unk_100641BA8, (uint64_t)sub_1004DD6F0, (uint64_t)&unk_100641BC0);
}

uint64_t sub_1004D68D0(uint64_t a1, uint64_t a2)
{
  return sub_100044944(a2, "FMMapViewDataSource: didUpdate %ld unknownItems", (uint64_t)&unk_100641B58, (uint64_t)sub_1004DD6D0, (uint64_t)&unk_100641B70);
}

uint64_t sub_1004D6918(uint64_t a1, uint64_t a2)
{
  return sub_100044944(a2, "FMMapViewDataSource: didUpdate %ld items", (uint64_t)&unk_100641B08, (uint64_t)sub_1004DD6B0, (uint64_t)&unk_100641B20);
}

uint64_t sub_1004D6960()
{
  return sub_1004DD1F8();
}

uint64_t sub_1004D6970(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1004DCC50(a2, a3);
}

Swift::Int sub_1004D697C(uint64_t (*a1)(char *, unint64_t), uint64_t a2)
{
  type metadata accessor for FMIPUnknownItem();
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = (void *)sub_1002688E8(v5);
  }
  Swift::Int result = sub_1004D6BCC(a1, a2);
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1004D6A3C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_1000653DC(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1004D7914(v6);
  return specialized ContiguousArray._endMutation()();
}

uint64_t sub_1004D6AB8(uint64_t (*a1)(void **, void **))
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    *uint64_t v2 = sub_1000653D8(v4);
  }
  sub_1004D8358(a1);
  return specialized ContiguousArray._endMutation()();
}

uint64_t sub_1004D6B50(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_1000653D8(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1004D8B2C(v6);
  return specialized ContiguousArray._endMutation()();
}

Swift::Int sub_1004D6BCC(uint64_t (*a1)(char *, unint64_t), uint64_t a2)
{
  uint64_t v168 = a2;
  v167 = (uint64_t (*)(char *, char *))a1;
  uint64_t v4 = type metadata accessor for FMIPUnknownItem();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  id v154 = (char *)&v139 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  id v161 = (char *)&v139 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v139 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v139 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v147 = (char *)&v139 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v139 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  double v23 = (char *)&v139 - v22;
  __chkstk_darwin(v21);
  double v25 = (char *)&v139 - v24;
  id v166 = v2;
  Swift::Int v26 = v2[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v26);
  if (result >= v26)
  {
    if (v26 < 0) {
      goto LABEL_144;
    }
    if (v26) {
      return sub_1004D94C4(0, v26, 1, v167, v168);
    }
    return result;
  }
  if (v26 >= 0) {
    uint64_t v28 = v26;
  }
  else {
    uint64_t v28 = v26 + 1;
  }
  if (v26 <= -2) {
    goto LABEL_153;
  }
  uint64_t v164 = v5;
  uint64_t v165 = v4;
  v144 = v23;
  v143 = v25;
  Swift::Int v142 = result;
  if (v26 < 2)
  {
    uint64_t v31 = v5;
    id v33 = _swiftEmptyArrayStorage;
    unint64_t v162 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    if (v26 != 1)
    {
      unint64_t v83 = _swiftEmptyArrayStorage[2];
      uint64_t v35 = (char *)_swiftEmptyArrayStorage;
      uint64_t v36 = v3;
LABEL_110:
      v145 = v33;
      if (v83 >= 2)
      {
        uint64_t v132 = *v166;
        do
        {
          unint64_t v133 = v83 - 2;
          if (v83 < 2) {
            goto LABEL_139;
          }
          if (!v132) {
            goto LABEL_152;
          }
          uint64_t v134 = *(void *)&v35[16 * v133 + 32];
          uint64_t v135 = *(void *)&v35[16 * v83 + 24];
          sub_1004D9B40(v132 + *(void *)(v164 + 72) * v134, v132 + *(void *)(v164 + 72) * *(void *)&v35[16 * v83 + 16], v132 + *(void *)(v164 + 72) * v135, v162, (uint64_t (*)(char *, unint64_t))v167, v168);
          if (v36) {
            break;
          }
          if (v135 < v134) {
            goto LABEL_140;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v35 = sub_1002687F8((uint64_t)v35);
          }
          if (v133 >= *((void *)v35 + 2)) {
            goto LABEL_141;
          }
          v136 = &v35[16 * v133 + 32];
          *(void *)v136 = v134;
          *((void *)v136 + 1) = v135;
          unint64_t v137 = *((void *)v35 + 2);
          if (v83 > v137) {
            goto LABEL_142;
          }
          memmove(&v35[16 * v83 + 16], &v35[16 * v83 + 32], 16 * (v137 - v83));
          *((void *)v35 + 2) = v137 - 1;
          unint64_t v83 = v137 - 1;
        }
        while (v137 > 2);
      }
LABEL_123:
      swift_bridgeObjectRelease();
      v145[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v148 = v20;
    unint64_t v152 = v15;
    v153 = v12;
    v145 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v148 = v20;
    unint64_t v152 = v15;
    v153 = v12;
    uint64_t v29 = v28 >> 1;
    uint64_t v30 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    uint64_t v31 = v5;
    *(void *)(v30 + 16) = v29;
    unint64_t v32 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v145 = (void *)v30;
    unint64_t v162 = v30 + v32;
  }
  id v34 = 0;
  uint64_t v158 = v31 + 16;
  uint64_t v159 = (void (**)(unint64_t, uint64_t))(v31 + 8);
  uint64_t v163 = (void (**)(char *, char *, uint64_t))(v31 + 32);
  uint64_t v35 = (char *)_swiftEmptyArrayStorage;
  uint64_t v36 = v3;
  while (1)
  {
    Swift::Int v37 = (Swift::Int)v34;
    Swift::Int v38 = (Swift::Int)(v34 + 1);
    if ((uint64_t)(v34 + 1) >= v26) {
      goto LABEL_57;
    }
    Swift::Int v156 = v26;
    uint64_t v39 = *v166;
    uint64_t v40 = *(void *)(v31 + 72);
    uint64_t v151 = (uint64_t)(v34 + 1);
    uint64_t v41 = v39 + v40 * v38;
    uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
    unint64_t v43 = v143;
    Swift::Int v44 = (Swift::Int)v34;
    uint64_t v45 = v165;
    v42(v143, v41, v165);
    uint64_t v160 = v40;
    uint64_t v46 = v39 + v40 * v44;
    unint64_t v47 = (unint64_t)v144;
    uint64_t v157 = (char *)v42;
    v42(v144, v46, v45);
    LODWORD(v155) = v167(v43, (char *)v47);
    if (v36)
    {
      id v138 = *v159;
      (*v159)(v47, v45);
      v138((unint64_t)v43, v45);
      goto LABEL_123;
    }
    BOOL v146 = v35;
    uint64_t v48 = *v159;
    (*v159)(v47, v45);
    v48((unint64_t)v43, v45);
    Swift::Int v49 = v44 + 2;
    Swift::Int v50 = v156;
    uint64_t v149 = v39;
    Swift::Int v37 = v44;
    if (v44 + 2 >= v156)
    {
      Swift::Int v38 = v44 + 2;
    }
    else
    {
      uint64_t v141 = (char *)v44;
      uint64_t v51 = v39;
      uint64_t v150 = v160 * v49;
      v151 *= v160;
      unint64_t v52 = (unint64_t)v147;
      while (1)
      {
        uint64_t v53 = v148;
        uint64_t v54 = v165;
        uint64_t v55 = v157;
        ((void (*)(char *, uint64_t, uint64_t))v157)(v148, v51 + v150, v165);
        ((void (*)(unint64_t, uint64_t, uint64_t))v55)(v52, v51 + v151, v54);
        int v56 = v167(v53, (char *)v52);
        v48(v52, v54);
        v48((unint64_t)v53, v54);
        if ((v155 ^ v56)) {
          break;
        }
        ++v49;
        v51 += v160;
        if (v156 == v49)
        {
          Swift::Int v50 = v156;
          Swift::Int v38 = v156;
          Swift::Int v37 = (Swift::Int)v141;
          goto LABEL_24;
        }
      }
      Swift::Int v38 = v49;
      Swift::Int v37 = (Swift::Int)v141;
      Swift::Int v50 = v156;
    }
LABEL_24:
    uint64_t v35 = v146;
    uint64_t v57 = v164;
    if ((v155 & 1) == 0)
    {
      uint64_t v58 = v165;
      goto LABEL_38;
    }
    if (v38 < v37) {
      goto LABEL_148;
    }
    uint64_t v58 = v165;
    if (v37 < v38) {
      break;
    }
LABEL_38:
    if (v38 < v50) {
      goto LABEL_39;
    }
LABEL_57:
    if (v38 < v37) {
      goto LABEL_143;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v35 = sub_100268068(0, *((void *)v35 + 2) + 1, 1, v35);
    }
    unint64_t v82 = *((void *)v35 + 2);
    unint64_t v81 = *((void *)v35 + 3);
    unint64_t v83 = v82 + 1;
    if (v82 >= v81 >> 1) {
      uint64_t v35 = sub_100268068((char *)(v81 > 1), v82 + 1, 1, v35);
    }
    *((void *)v35 + 2) = v83;
    uint64_t v84 = v35 + 32;
    uint64_t v85 = &v35[16 * v82 + 32];
    *(void *)uint64_t v85 = v37;
    *((void *)v85 + 1) = v38;
    uint64_t v157 = (char *)v38;
    if (v82)
    {
      while (1)
      {
        unint64_t v86 = v83 - 1;
        if (v83 >= 4)
        {
          id v91 = &v84[16 * v83];
          uint64_t v92 = *((void *)v91 - 8);
          uint64_t v93 = *((void *)v91 - 7);
          BOOL v97 = __OFSUB__(v93, v92);
          uint64_t v94 = v93 - v92;
          if (v97) {
            goto LABEL_128;
          }
          uint64_t v96 = *((void *)v91 - 6);
          uint64_t v95 = *((void *)v91 - 5);
          BOOL v97 = __OFSUB__(v95, v96);
          uint64_t v89 = v95 - v96;
          char v90 = v97;
          if (v97) {
            goto LABEL_129;
          }
          unint64_t v98 = v83 - 2;
          unint64_t v99 = &v84[16 * v83 - 32];
          uint64_t v101 = *(void *)v99;
          uint64_t v100 = *((void *)v99 + 1);
          BOOL v97 = __OFSUB__(v100, v101);
          uint64_t v102 = v100 - v101;
          if (v97) {
            goto LABEL_131;
          }
          BOOL v97 = __OFADD__(v89, v102);
          uint64_t v103 = v89 + v102;
          if (v97) {
            goto LABEL_134;
          }
          if (v103 >= v94)
          {
            __double2 v121 = &v84[16 * v86];
            uint64_t v123 = *(void *)v121;
            uint64_t v122 = *((void *)v121 + 1);
            BOOL v97 = __OFSUB__(v122, v123);
            uint64_t v124 = v122 - v123;
            if (v97) {
              goto LABEL_138;
            }
            BOOL v114 = v89 < v124;
            goto LABEL_94;
          }
        }
        else
        {
          if (v83 != 3)
          {
            uint64_t v115 = *((void *)v35 + 4);
            uint64_t v116 = *((void *)v35 + 5);
            BOOL v97 = __OFSUB__(v116, v115);
            uint64_t v108 = v116 - v115;
            char v109 = v97;
            goto LABEL_88;
          }
          uint64_t v88 = *((void *)v35 + 4);
          uint64_t v87 = *((void *)v35 + 5);
          BOOL v97 = __OFSUB__(v87, v88);
          uint64_t v89 = v87 - v88;
          char v90 = v97;
        }
        if (v90) {
          goto LABEL_130;
        }
        unint64_t v98 = v83 - 2;
        uint64_t v104 = &v84[16 * v83 - 32];
        uint64_t v106 = *(void *)v104;
        uint64_t v105 = *((void *)v104 + 1);
        BOOL v107 = __OFSUB__(v105, v106);
        uint64_t v108 = v105 - v106;
        char v109 = v107;
        if (v107) {
          goto LABEL_133;
        }
        uint64_t v110 = &v84[16 * v86];
        uint64_t v112 = *(void *)v110;
        uint64_t v111 = *((void *)v110 + 1);
        BOOL v97 = __OFSUB__(v111, v112);
        uint64_t v113 = v111 - v112;
        if (v97) {
          goto LABEL_136;
        }
        if (__OFADD__(v108, v113)) {
          goto LABEL_137;
        }
        if (v108 + v113 >= v89)
        {
          BOOL v114 = v89 < v113;
LABEL_94:
          if (v114) {
            unint64_t v86 = v98;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v109) {
          goto LABEL_132;
        }
        uint64_t v117 = &v84[16 * v86];
        uint64_t v119 = *(void *)v117;
        uint64_t v118 = *((void *)v117 + 1);
        BOOL v97 = __OFSUB__(v118, v119);
        uint64_t v120 = v118 - v119;
        if (v97) {
          goto LABEL_135;
        }
        if (v120 < v108) {
          goto LABEL_105;
        }
LABEL_96:
        unint64_t v125 = v86 - 1;
        if (v86 - 1 >= v83)
        {
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
          goto LABEL_147;
        }
        if (!*v166) {
          goto LABEL_149;
        }
        double v126 = v35;
        uint64_t v127 = &v84[16 * v125];
        uint64_t v128 = *(void *)v127;
        uint64_t v129 = &v84[16 * v86];
        uint64_t v130 = *((void *)v129 + 1);
        sub_1004D9B40(*v166 + *(void *)(v164 + 72) * *(void *)v127, *v166 + *(void *)(v164 + 72) * *(void *)v129, *v166 + *(void *)(v164 + 72) * v130, v162, (uint64_t (*)(char *, unint64_t))v167, v168);
        if (v36) {
          goto LABEL_123;
        }
        if (v130 < v128) {
          goto LABEL_125;
        }
        if (v86 > *((void *)v126 + 2)) {
          goto LABEL_126;
        }
        *(void *)uint64_t v127 = v128;
        *(void *)&v84[16 * v125 + 8] = v130;
        unint64_t v131 = *((void *)v126 + 2);
        if (v86 >= v131) {
          goto LABEL_127;
        }
        uint64_t v35 = v126;
        unint64_t v83 = v131 - 1;
        memmove(&v84[16 * v86], v129 + 16, 16 * (v131 - 1 - v86));
        *((void *)v35 + 2) = v131 - 1;
        if (v131 <= 2) {
          goto LABEL_105;
        }
      }
    }
    unint64_t v83 = 1;
LABEL_105:
    Swift::Int v26 = v166[1];
    id v34 = v157;
    uint64_t v31 = v164;
    if ((uint64_t)v157 >= v26)
    {
      id v33 = v145;
      goto LABEL_110;
    }
  }
  uint64_t v59 = 0;
  uint64_t v60 = v160 * (v38 - 1);
  uint64_t v61 = v38 * v160;
  uint64_t v141 = (char *)v37;
  uint64_t v62 = v37 * v160;
  uint64_t v157 = (char *)v38;
  do
  {
    if (v37 != v38 + v59 - 1)
    {
      uint64_t v63 = v149;
      if (!v149) {
        goto LABEL_151;
      }
      unint64_t v64 = v149 + v62;
      uint64_t v65 = (char *)(v149 + v60);
      id v155 = *v163;
      v155(v154, (char *)(v149 + v62), v165);
      if (v62 < v60 || v64 >= v63 + v61)
      {
        uint64_t v58 = v165;
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        uint64_t v58 = v165;
        if (v62 != v60) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      v155(v65, v154, v58);
      uint64_t v57 = v164;
      Swift::Int v38 = (Swift::Int)v157;
    }
    ++v37;
    --v59;
    v60 -= v160;
    v61 -= v160;
    v62 += v160;
  }
  while (v37 < v38 + v59);
  uint64_t v35 = v146;
  Swift::Int v37 = (Swift::Int)v141;
  Swift::Int v50 = v156;
  if (v38 >= v156) {
    goto LABEL_57;
  }
LABEL_39:
  if (__OFSUB__(v38, v37)) {
    goto LABEL_145;
  }
  if (v38 - v37 >= v142) {
    goto LABEL_57;
  }
  if (__OFADD__(v37, v142)) {
    goto LABEL_146;
  }
  if (v37 + v142 >= v50) {
    Swift::Int v66 = v50;
  }
  else {
    Swift::Int v66 = v37 + v142;
  }
  if (v66 >= v37)
  {
    if (v38 != v66)
    {
      BOOL v146 = v35;
      v67 = *(void (**)(void, void, void))(v57 + 16);
      uint64_t v149 = *(void *)(v57 + 72);
      uint64_t v150 = (uint64_t)v67;
      uint64_t v160 = v149 * (v38 - 1);
      Swift::Int v68 = v38 * v149;
      uint64_t v141 = (char *)v37;
      Swift::Int v140 = v66;
      do
      {
        uint64_t v69 = 0;
        uint64_t v157 = (char *)v38;
        uint64_t v151 = v68;
        while (1)
        {
          uint64_t v71 = *v166;
          id v155 = (void (*)(char *, char *, uint64_t))(v68 + v69);
          Swift::Int v156 = v37;
          v72 = v152;
          v73 = (void (*)(char *, uint64_t, uint64_t))v150;
          ((void (*)(char *, Swift::Int, uint64_t))v150)(v152, v68 + v69 + v71, v58);
          unint64_t v74 = (unint64_t)v153;
          v73(v153, v160 + v69 + v71, v58);
          char v75 = v167(v72, (char *)v74);
          uint64_t v76 = *v159;
          (*v159)(v74, v58);
          v76((unint64_t)v72, v58);
          if ((v75 & 1) == 0) {
            break;
          }
          uint64_t v77 = *v166;
          if (!*v166) {
            goto LABEL_150;
          }
          Swift::Int v68 = v151;
          uint64_t v78 = (char *)(v77 + v160 + v69);
          uint64_t v79 = *v163;
          uint64_t v80 = v165;
          (*v163)(v161, (char *)(v77 + v151 + v69), v165);
          uint64_t v58 = v80;
          swift_arrayInitWithTakeFrontToBack();
          v79(v78, v161, v80);
          v69 -= v149;
          uint64_t v70 = v157;
          Swift::Int v37 = v156 + 1;
          uint64_t v36 = 0;
          if (v157 == (char *)(v156 + 1)) {
            goto LABEL_54;
          }
        }
        uint64_t v58 = v165;
        uint64_t v36 = 0;
        uint64_t v70 = v157;
        Swift::Int v68 = v151;
LABEL_54:
        Swift::Int v38 = (Swift::Int)(v70 + 1);
        v160 += v149;
        v68 += v149;
        Swift::Int v37 = (Swift::Int)v141;
      }
      while (v38 != v140);
      Swift::Int v38 = v140;
      uint64_t v35 = v146;
    }
    goto LABEL_57;
  }
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

Swift::Int sub_1004D7914(uint64_t *a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v4);
  Swift::Int v137 = v4;
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_179;
    }
    if ((unint64_t)v4 < 2) {
      return result;
    }
    uint64_t v9 = *a1;
    uint64_t v10 = -1;
    uint64_t v11 = 1;
    uint64_t v146 = *a1;
    while (1)
    {
      uint64_t v141 = v11;
      uint64_t v14 = *(char **)(v146 + 8 * v11);
      uint64_t v142 = v10;
      uint64_t v138 = v9;
      while (1)
      {
        if (*(void *)&v14[OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8])
        {
          uint64_t v15 = *(void *)&v14[OBJC_IVAR____TtC6FindMy12FMAnnotation_title];
          unint64_t v16 = *(void *)&v14[OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8];
        }
        else
        {
          uint64_t v15 = 0;
          unint64_t v16 = 0xE000000000000000;
        }
        uint64_t v17 = *(void **)v9;
        uint64_t v18 = (void *)(*(void *)v9 + OBJC_IVAR____TtC6FindMy12FMAnnotation_title);
        if (!v18[1]) {
          break;
        }
        unint64_t v19 = v18[1];
        if (v15 == *v18) {
          goto LABEL_21;
        }
LABEL_22:
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRetain();
        uint64_t v21 = v14;
        id v22 = v17;
        swift_bridgeObjectRetain();

        swift_bridgeObjectRelease();
        Swift::Int result = swift_bridgeObjectRelease();
        if (v20)
        {
          if (!v146) {
            goto LABEL_183;
          }
          double v23 = *(void **)v9;
          uint64_t v14 = *(char **)(v9 + 8);
          *(void *)uint64_t v9 = v14;
          *(void *)(v9 + 8) = v23;
          v9 -= 8;
          if (!__CFADD__(v10++, 1)) {
            continue;
          }
        }
        goto LABEL_12;
      }
      unint64_t v19 = 0xE000000000000000;
      if (v15) {
        goto LABEL_22;
      }
LABEL_21:
      if (v16 != v19) {
        goto LABEL_22;
      }
      swift_bridgeObjectRetain();
      uint64_t v12 = v14;
      id v13 = v17;
      swift_bridgeObjectRetain();

      Swift::Int result = swift_bridgeObjectRelease_n();
LABEL_12:
      uint64_t v11 = v141 + 1;
      uint64_t v9 = v138 + 8;
      uint64_t v10 = v142 - 1;
      if (v141 + 1 == v137) {
        return result;
      }
    }
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_188;
  }
  Swift::Int v132 = result;
  uint64_t v129 = a1;
  if (v4 < 2)
  {
    double v25 = (char *)_swiftEmptyArrayStorage;
    uint64_t v148 = (uint64_t)_swiftEmptyArrayStorage;
    Swift::Int v140 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      unint64_t v28 = _swiftEmptyArrayStorage[2];
LABEL_145:
      if (v28 >= 2)
      {
        uint64_t v123 = *v129;
        do
        {
          unint64_t v124 = v28 - 2;
          if (v28 < 2) {
            goto LABEL_174;
          }
          if (!v123) {
            goto LABEL_187;
          }
          uint64_t v125 = *(void *)&v25[16 * v124 + 32];
          uint64_t v126 = *(void *)&v25[16 * v28 + 24];
          sub_1004DA204((void **)(v123 + 8 * v125), (void **)(v123 + 8 * *(void *)&v25[16 * v28 + 16]), v123 + 8 * v126, v140);
          if (v2) {
            break;
          }
          if (v126 < v125) {
            goto LABEL_175;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v25 = sub_1002687F8((uint64_t)v25);
          }
          if (v124 >= *((void *)v25 + 2)) {
            goto LABEL_176;
          }
          uint64_t v127 = &v25[16 * v124 + 32];
          *(void *)uint64_t v127 = v125;
          *((void *)v127 + 1) = v126;
          unint64_t v128 = *((void *)v25 + 2);
          if (v28 > v128) {
            goto LABEL_177;
          }
          memmove(&v25[16 * v28 + 16], &v25[16 * v28 + 32], 16 * (v128 - v28));
          *((void *)v25 + 2) = v128 - 1;
          unint64_t v28 = v128 - 1;
        }
        while (v128 > 2);
      }
LABEL_156:
      swift_bridgeObjectRelease();
      *(void *)((v148 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    type metadata accessor for FMAnnotation();
    uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    Swift::Int v140 = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v148 = v8;
  }
  Swift::Int v26 = 0;
  uint64_t v27 = *a1;
  uint64_t v130 = *a1 - 8;
  uint64_t v131 = *a1 + 16;
  double v25 = (char *)_swiftEmptyArrayStorage;
  uint64_t v147 = *a1;
LABEL_31:
  Swift::Int v29 = v26 + 1;
  uint64_t v135 = v25;
  Swift::Int v136 = v26;
  if (v26 + 1 >= v4)
  {
    Swift::Int v33 = v26;
    goto LABEL_69;
  }
  uint64_t v133 = v2;
  uint64_t v30 = *(char **)(v27 + 8 * v29);
  if (*(void *)&v30[OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8])
  {
    uint64_t v31 = *(void *)&v30[OBJC_IVAR____TtC6FindMy12FMAnnotation_title];
    unint64_t v32 = *(void *)&v30[OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8];
  }
  else
  {
    uint64_t v31 = 0;
    unint64_t v32 = 0xE000000000000000;
  }
  id v34 = *(char **)(v27 + 8 * v26);
  uint64_t v35 = &v34[OBJC_IVAR____TtC6FindMy12FMAnnotation_title];
  if (*(void *)&v34[OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8])
  {
    unint64_t v36 = *((void *)v35 + 1);
    if (v31 != *(void *)v35) {
      goto LABEL_42;
    }
  }
  else
  {
    unint64_t v36 = 0xE000000000000000;
    if (v31)
    {
LABEL_42:
      int v143 = _stringCompareWithSmolCheck(_:_:expecting:)();
      goto LABEL_43;
    }
  }
  if (v32 != v36) {
    goto LABEL_42;
  }
  int v143 = 0;
LABEL_43:
  swift_bridgeObjectRetain();
  Swift::Int v37 = v30;
  Swift::Int v38 = v34;
  swift_bridgeObjectRetain();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Swift::Int v33 = v136;
  Swift::Int v4 = v137;
  Swift::Int v29 = v136 + 2;
  if (v136 + 2 >= v137)
  {
    uint64_t v27 = v147;
  }
  else
  {
    uint64_t v39 = (void **)(v131 + 8 * v136);
    while (1)
    {
      uint64_t v40 = *v39;
      uint64_t v41 = (uint64_t *)((char *)*v39 + OBJC_IVAR____TtC6FindMy12FMAnnotation_title);
      if (v41[1])
      {
        uint64_t v42 = *v41;
        unint64_t v43 = v41[1];
      }
      else
      {
        uint64_t v42 = 0;
        unint64_t v43 = 0xE000000000000000;
      }
      Swift::Int v44 = (char *)*(v39 - 1);
      uint64_t v45 = &v44[OBJC_IVAR____TtC6FindMy12FMAnnotation_title];
      if (*(void *)&v44[OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8])
      {
        uint64_t v46 = *(void *)v45;
        unint64_t v47 = *((void *)v45 + 1);
      }
      else
      {
        uint64_t v46 = 0;
        unint64_t v47 = 0xE000000000000000;
      }
      Swift::Int v48 = v29;
      if (v42 == v46 && v43 == v47) {
        int v49 = 0;
      }
      else {
        int v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRetain();
      id v50 = v40;
      uint64_t v51 = v44;
      swift_bridgeObjectRetain();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v143 ^ v49)) {
        break;
      }
      Swift::Int v29 = v48 + 1;
      ++v39;
      Swift::Int v4 = v137;
      double v25 = v135;
      uint64_t v27 = v147;
      if (v137 == v48 + 1)
      {
        Swift::Int v29 = v137;
        goto LABEL_60;
      }
    }
    Swift::Int v4 = v137;
    double v25 = v135;
    uint64_t v27 = v147;
    Swift::Int v29 = v48;
LABEL_60:
    Swift::Int v33 = v136;
  }
  uint64_t v2 = v133;
  if (v143)
  {
    if (v29 < v33) {
      goto LABEL_180;
    }
    if (v33 < v29)
    {
      unint64_t v52 = (uint64_t *)(v130 + 8 * v29);
      Swift::Int v53 = v29;
      Swift::Int v54 = v33;
      uint64_t v55 = (uint64_t *)(v27 + 8 * v33);
      do
      {
        if (v54 != --v53)
        {
          if (!v27) {
            goto LABEL_186;
          }
          uint64_t v56 = *v55;
          uint64_t *v55 = *v52;
          *unint64_t v52 = v56;
        }
        ++v54;
        --v52;
        ++v55;
      }
      while (v54 < v53);
    }
  }
LABEL_69:
  if (v29 >= v4) {
    goto LABEL_96;
  }
  if (__OFSUB__(v29, v33)) {
    goto LABEL_178;
  }
  if (v29 - v33 >= v132) {
    goto LABEL_96;
  }
  if (__OFADD__(v33, v132)) {
    goto LABEL_181;
  }
  if (v33 + v132 >= v4) {
    Swift::Int v57 = v4;
  }
  else {
    Swift::Int v57 = v33 + v132;
  }
  if (v57 >= v33)
  {
    if (v29 == v57) {
      goto LABEL_96;
    }
    Swift::Int v134 = v57;
    uint64_t v58 = v130 + 8 * v29;
LABEL_82:
    Swift::Int v144 = v29;
    uint64_t v62 = *(char **)(v27 + 8 * v29);
    Swift::Int v63 = v33;
    uint64_t v139 = v58;
    while (1)
    {
      if (*(void *)&v62[OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8])
      {
        uint64_t v64 = *(void *)&v62[OBJC_IVAR____TtC6FindMy12FMAnnotation_title];
        unint64_t v65 = *(void *)&v62[OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8];
      }
      else
      {
        uint64_t v64 = 0;
        unint64_t v65 = 0xE000000000000000;
      }
      Swift::Int v66 = *(void **)v58;
      v67 = (void *)(*(void *)v58 + OBJC_IVAR____TtC6FindMy12FMAnnotation_title);
      if (v67[1])
      {
        unint64_t v68 = v67[1];
        if (v64 != *v67) {
          goto LABEL_91;
        }
      }
      else
      {
        unint64_t v68 = 0xE000000000000000;
        if (v64) {
          goto LABEL_91;
        }
      }
      if (v65 == v68)
      {
        swift_bridgeObjectRetain();
        uint64_t v59 = v62;
        id v60 = v66;
        swift_bridgeObjectRetain();

        swift_bridgeObjectRelease_n();
LABEL_80:
        Swift::Int v61 = v144;
        uint64_t v27 = v147;
LABEL_81:
        Swift::Int v29 = v61 + 1;
        uint64_t v58 = v139 + 8;
        Swift::Int v33 = v136;
        if (v29 != v134) {
          goto LABEL_82;
        }
        Swift::Int v29 = v134;
        double v25 = v135;
LABEL_96:
        if (v29 < v33) {
          goto LABEL_173;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          double v25 = sub_100268068(0, *((void *)v25 + 2) + 1, 1, v25);
        }
        unint64_t v74 = *((void *)v25 + 2);
        unint64_t v73 = *((void *)v25 + 3);
        unint64_t v28 = v74 + 1;
        uint64_t v27 = v147;
        if (v74 >= v73 >> 1)
        {
          uint64_t v122 = sub_100268068((char *)(v73 > 1), v74 + 1, 1, v25);
          uint64_t v27 = v147;
          double v25 = v122;
        }
        *((void *)v25 + 2) = v28;
        char v75 = v25 + 32;
        uint64_t v76 = &v25[16 * v74 + 32];
        *(void *)uint64_t v76 = v33;
        *((void *)v76 + 1) = v29;
        Swift::Int v145 = v29;
        if (v74)
        {
LABEL_102:
          unint64_t v77 = v28 - 1;
          if (v28 >= 4)
          {
            unint64_t v82 = &v75[16 * v28];
            uint64_t v83 = *((void *)v82 - 8);
            uint64_t v84 = *((void *)v82 - 7);
            BOOL v88 = __OFSUB__(v84, v83);
            uint64_t v85 = v84 - v83;
            if (v88) {
              goto LABEL_162;
            }
            uint64_t v87 = *((void *)v82 - 6);
            uint64_t v86 = *((void *)v82 - 5);
            BOOL v88 = __OFSUB__(v86, v87);
            uint64_t v80 = v86 - v87;
            char v81 = v88;
            if (v88) {
              goto LABEL_163;
            }
            unint64_t v89 = v28 - 2;
            char v90 = &v75[16 * v28 - 32];
            uint64_t v92 = *(void *)v90;
            uint64_t v91 = *((void *)v90 + 1);
            BOOL v88 = __OFSUB__(v91, v92);
            uint64_t v93 = v91 - v92;
            if (v88) {
              goto LABEL_165;
            }
            BOOL v88 = __OFADD__(v80, v93);
            uint64_t v94 = v80 + v93;
            if (v88) {
              goto LABEL_168;
            }
            if (v94 >= v85)
            {
              uint64_t v112 = &v75[16 * v77];
              uint64_t v114 = *(void *)v112;
              uint64_t v113 = *((void *)v112 + 1);
              BOOL v88 = __OFSUB__(v113, v114);
              uint64_t v115 = v113 - v114;
              if (v88) {
                goto LABEL_172;
              }
              BOOL v105 = v80 < v115;
            }
            else
            {
LABEL_115:
              if (v81) {
                goto LABEL_164;
              }
              unint64_t v89 = v28 - 2;
              uint64_t v95 = &v75[16 * v28 - 32];
              uint64_t v97 = *(void *)v95;
              uint64_t v96 = *((void *)v95 + 1);
              BOOL v98 = __OFSUB__(v96, v97);
              uint64_t v99 = v96 - v97;
              char v100 = v98;
              if (v98) {
                goto LABEL_167;
              }
              uint64_t v101 = &v75[16 * v77];
              uint64_t v103 = *(void *)v101;
              uint64_t v102 = *((void *)v101 + 1);
              BOOL v88 = __OFSUB__(v102, v103);
              uint64_t v104 = v102 - v103;
              if (v88) {
                goto LABEL_170;
              }
              if (__OFADD__(v99, v104)) {
                goto LABEL_171;
              }
              if (v99 + v104 < v80) {
                goto LABEL_127;
              }
              BOOL v105 = v80 < v104;
            }
            if (v105) {
              unint64_t v77 = v89;
            }
          }
          else
          {
            if (v28 == 3)
            {
              uint64_t v79 = *((void *)v25 + 4);
              uint64_t v78 = *((void *)v25 + 5);
              BOOL v88 = __OFSUB__(v78, v79);
              uint64_t v80 = v78 - v79;
              char v81 = v88;
              goto LABEL_115;
            }
            uint64_t v106 = *((void *)v25 + 4);
            uint64_t v107 = *((void *)v25 + 5);
            BOOL v88 = __OFSUB__(v107, v106);
            uint64_t v99 = v107 - v106;
            char v100 = v88;
LABEL_127:
            if (v100) {
              goto LABEL_166;
            }
            uint64_t v108 = &v75[16 * v77];
            uint64_t v110 = *(void *)v108;
            uint64_t v109 = *((void *)v108 + 1);
            BOOL v88 = __OFSUB__(v109, v110);
            uint64_t v111 = v109 - v110;
            if (v88) {
              goto LABEL_169;
            }
            if (v111 < v99) {
              goto LABEL_30;
            }
          }
          unint64_t v116 = v77 - 1;
          if (v77 - 1 >= v28)
          {
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            __break(1u);
LABEL_175:
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
            break;
          }
          if (!v27) {
            goto LABEL_185;
          }
          uint64_t v117 = &v75[16 * v116];
          uint64_t v118 = *(void *)v117;
          uint64_t v119 = &v75[16 * v77];
          uint64_t v120 = *((void *)v119 + 1);
          sub_1004DA204((void **)(v27 + 8 * *(void *)v117), (void **)(v27 + 8 * *(void *)v119), v27 + 8 * v120, v140);
          if (v2) {
            goto LABEL_156;
          }
          if (v120 < v118) {
            goto LABEL_159;
          }
          if (v77 > *((void *)v25 + 2)) {
            goto LABEL_160;
          }
          *(void *)uint64_t v117 = v118;
          *(void *)&v75[16 * v116 + 8] = v120;
          unint64_t v121 = *((void *)v25 + 2);
          if (v77 >= v121) {
            goto LABEL_161;
          }
          unint64_t v28 = v121 - 1;
          memmove(&v75[16 * v77], v119 + 16, 16 * (v121 - 1 - v77));
          *((void *)v25 + 2) = v121 - 1;
          uint64_t v27 = v147;
          if (v121 <= 2) {
            goto LABEL_30;
          }
          goto LABEL_102;
        }
        unint64_t v28 = 1;
LABEL_30:
        Swift::Int v26 = v145;
        Swift::Int v4 = v137;
        if (v145 >= v137) {
          goto LABEL_145;
        }
        goto LABEL_31;
      }
LABEL_91:
      char v69 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRetain();
      uint64_t v70 = v62;
      id v71 = v66;
      swift_bridgeObjectRetain();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v69 & 1) == 0) {
        goto LABEL_80;
      }
      Swift::Int v61 = v144;
      uint64_t v27 = v147;
      if (!v147) {
        goto LABEL_184;
      }
      v72 = *(void **)v58;
      uint64_t v62 = *(char **)(v58 + 8);
      *(void *)uint64_t v58 = v62;
      *(void *)(v58 + 8) = v72;
      v58 -= 8;
      if (v144 == ++v63) {
        goto LABEL_81;
      }
    }
  }
  __break(1u);
LABEL_183:
  __break(1u);
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1004D8358(uint64_t (*a1)(void **, void **))
{
  Swift::Int v3 = v1[1];
  Swift::Int v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_144;
    }
    if (v3) {
      sub_1004D9800(0, v3, 1, a1);
    }
    return;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 <= -2) {
    goto LABEL_153;
  }
  Swift::Int v112 = v4;
  uint64_t v108 = v1;
  if (v3 < 2)
  {
    uint64_t v8 = (char *)_swiftEmptyArrayStorage;
    uint64_t v121 = (uint64_t)_swiftEmptyArrayStorage;
    unint64_t v116 = (id *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v34 = _swiftEmptyArrayStorage[2];
LABEL_105:
      if (v34 >= 2)
      {
        uint64_t v97 = *v108;
        do
        {
          unint64_t v98 = v34 - 2;
          if (v34 < 2) {
            goto LABEL_139;
          }
          if (!v97) {
            goto LABEL_152;
          }
          uint64_t v99 = (uint64_t)v8;
          uint64_t v100 = *(void *)&v8[16 * v98 + 32];
          uint64_t v101 = *(void *)&v8[16 * v34 + 24];
          sub_1004DA664((id *)(v97 + 8 * v100), (id *)(v97 + 8 * *(void *)&v8[16 * v34 + 16]), v97 + 8 * v101, v116, a1);
          if (v2) {
            break;
          }
          if (v101 < v100) {
            goto LABEL_140;
          }
          if (swift_isUniquelyReferenced_nonNull_native()) {
            uint64_t v102 = (char *)v99;
          }
          else {
            uint64_t v102 = sub_1002687F8(v99);
          }
          if (v98 >= *((void *)v102 + 2)) {
            goto LABEL_141;
          }
          uint64_t v103 = &v102[16 * v98 + 32];
          *(void *)uint64_t v103 = v100;
          *((void *)v103 + 1) = v101;
          unint64_t v104 = *((void *)v102 + 2);
          if (v34 > v104) {
            goto LABEL_142;
          }
          BOOL v105 = v102;
          memmove(&v102[16 * v34 + 16], &v102[16 * v34 + 32], 16 * (v104 - v34));
          uint64_t v8 = v105;
          *((void *)v105 + 2) = v104 - 1;
          unint64_t v34 = v104 - 1;
        }
        while (v104 > 2);
      }
LABEL_121:
      swift_bridgeObjectRelease();
      goto LABEL_122;
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    type metadata accessor for FMUnknownItemAnnotation();
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    unint64_t v116 = (id *)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v121 = v7;
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *v1;
  uint64_t v109 = *v1 + 16;
  uint64_t v107 = *v1 - 8;
  uint64_t v8 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v113 = v3;
  uint64_t v117 = *v1;
LABEL_13:
  Swift::Int v11 = v9++;
  if (v9 < v3)
  {
    uint64_t v12 = v8;
    id v13 = *(void **)(v10 + 8 * v9);
    uint64_t v119 = *(void **)(v10 + 8 * v11);
    uint64_t v14 = v119;
    uint64_t v120 = v13;
    id v15 = v13;
    id v16 = v14;
    int v17 = a1(&v120, &v119);
    if (v2)
    {
      swift_bridgeObjectRelease();

      goto LABEL_122;
    }
    int v18 = v17;

    Swift::Int v9 = v11 + 2;
    if (v11 + 2 < v3)
    {
      Swift::Int v110 = v11;
      unint64_t v19 = (void **)(v109 + 8 * v11);
      while (1)
      {
        char v20 = *v19;
        uint64_t v119 = *(v19 - 1);
        uint64_t v21 = v119;
        uint64_t v120 = v20;
        id v22 = v20;
        id v23 = v21;
        int v24 = a1(&v120, &v119);

        if ((v18 ^ v24)) {
          break;
        }
        ++v9;
        ++v19;
        Swift::Int v3 = v113;
        if (v113 == v9)
        {
          Swift::Int v9 = v113;
          goto LABEL_21;
        }
      }
      Swift::Int v3 = v113;
LABEL_21:
      Swift::Int v11 = v110;
    }
    uint64_t v8 = v12;
    uint64_t v10 = v117;
    if (v18)
    {
      if (v9 < v11) {
        goto LABEL_148;
      }
      if (v11 < v9)
      {
        double v25 = (uint64_t *)(v107 + 8 * v9);
        Swift::Int v26 = v9;
        Swift::Int v27 = v11;
        unint64_t v28 = (uint64_t *)(v117 + 8 * v11);
        do
        {
          if (v27 != --v26)
          {
            if (!v117) {
              goto LABEL_151;
            }
            uint64_t v29 = *v28;
            *unint64_t v28 = *v25;
            *double v25 = v29;
          }
          ++v27;
          --v25;
          ++v28;
        }
        while (v27 < v26);
      }
    }
  }
  if (v9 >= v3) {
    goto LABEL_40;
  }
  if (__OFSUB__(v9, v11)) {
    goto LABEL_145;
  }
  if (v9 - v11 >= v112)
  {
LABEL_40:
    if (v9 < v11) {
      goto LABEL_143;
    }
    goto LABEL_41;
  }
  if (__OFADD__(v11, v112)) {
    goto LABEL_146;
  }
  if (v11 + v112 >= v3) {
    Swift::Int v30 = v3;
  }
  else {
    Swift::Int v30 = v11 + v112;
  }
  if (v30 >= v11)
  {
    if (v9 == v30) {
      goto LABEL_40;
    }
    uint64_t v106 = v8;
    uint64_t v85 = (void **)(v107 + 8 * v9);
    Swift::Int v111 = v11;
    Swift::Int v115 = v30;
    while (1)
    {
      uint64_t v86 = *(void **)(v10 + 8 * v9);
      Swift::Int v87 = v11;
      BOOL v88 = v85;
      unint64_t v89 = v85;
      while (1)
      {
        uint64_t v119 = *v89;
        char v90 = v119;
        uint64_t v120 = v86;
        id v91 = v86;
        id v92 = v90;
        char v93 = a1(&v120, &v119);
        if (v2)
        {
          swift_bridgeObjectRelease();

LABEL_122:
          *(void *)((v121 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
          specialized Array._endMutation()();
          swift_bridgeObjectRelease();
          return;
        }
        char v94 = v93;

        if ((v94 & 1) == 0) {
          break;
        }
        uint64_t v10 = v117;
        if (!v117) {
          goto LABEL_150;
        }
        uint64_t v95 = *v89;
        uint64_t v86 = v89[1];
        *unint64_t v89 = v86;
        v89[1] = v95;
        --v89;
        if (v9 == ++v87) {
          goto LABEL_99;
        }
      }
      uint64_t v10 = v117;
LABEL_99:
      ++v9;
      uint64_t v85 = v88 + 1;
      Swift::Int v11 = v111;
      if (v9 == v115)
      {
        Swift::Int v9 = v115;
        uint64_t v8 = v106;
        if (v115 < v111) {
          goto LABEL_143;
        }
LABEL_41:
        uint64_t v31 = v8;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v8 = v31;
        }
        else {
          uint64_t v8 = sub_100268068(0, *((void *)v31 + 2) + 1, 1, v31);
        }
        unint64_t v33 = *((void *)v8 + 2);
        unint64_t v32 = *((void *)v8 + 3);
        unint64_t v34 = v33 + 1;
        uint64_t v10 = v117;
        if (v33 >= v32 >> 1)
        {
          uint64_t v96 = sub_100268068((char *)(v32 > 1), v33 + 1, 1, v8);
          uint64_t v10 = v117;
          uint64_t v8 = v96;
        }
        *((void *)v8 + 2) = v34;
        uint64_t v35 = v8 + 32;
        unint64_t v36 = &v8[16 * v33 + 32];
        *(void *)unint64_t v36 = v11;
        *((void *)v36 + 1) = v9;
        if (v33)
        {
          Swift::Int v114 = v9;
          while (1)
          {
            unint64_t v37 = v34 - 1;
            if (v34 >= 4)
            {
              uint64_t v42 = &v35[16 * v34];
              uint64_t v43 = *((void *)v42 - 8);
              uint64_t v44 = *((void *)v42 - 7);
              BOOL v48 = __OFSUB__(v44, v43);
              uint64_t v45 = v44 - v43;
              if (v48) {
                goto LABEL_128;
              }
              uint64_t v47 = *((void *)v42 - 6);
              uint64_t v46 = *((void *)v42 - 5);
              BOOL v48 = __OFSUB__(v46, v47);
              uint64_t v40 = v46 - v47;
              char v41 = v48;
              if (v48) {
                goto LABEL_129;
              }
              unint64_t v49 = v34 - 2;
              id v50 = &v35[16 * v34 - 32];
              uint64_t v52 = *(void *)v50;
              uint64_t v51 = *((void *)v50 + 1);
              BOOL v48 = __OFSUB__(v51, v52);
              uint64_t v53 = v51 - v52;
              if (v48) {
                goto LABEL_131;
              }
              BOOL v48 = __OFADD__(v40, v53);
              uint64_t v54 = v40 + v53;
              if (v48) {
                goto LABEL_134;
              }
              if (v54 >= v45)
              {
                v72 = &v35[16 * v37];
                uint64_t v74 = *(void *)v72;
                uint64_t v73 = *((void *)v72 + 1);
                BOOL v48 = __OFSUB__(v73, v74);
                uint64_t v75 = v73 - v74;
                if (v48) {
                  goto LABEL_138;
                }
                BOOL v65 = v40 < v75;
                goto LABEL_78;
              }
            }
            else
            {
              if (v34 != 3)
              {
                uint64_t v66 = *((void *)v8 + 4);
                uint64_t v67 = *((void *)v8 + 5);
                BOOL v48 = __OFSUB__(v67, v66);
                uint64_t v59 = v67 - v66;
                char v60 = v48;
                goto LABEL_72;
              }
              uint64_t v39 = *((void *)v8 + 4);
              uint64_t v38 = *((void *)v8 + 5);
              BOOL v48 = __OFSUB__(v38, v39);
              uint64_t v40 = v38 - v39;
              char v41 = v48;
            }
            if (v41) {
              goto LABEL_130;
            }
            unint64_t v49 = v34 - 2;
            uint64_t v55 = &v35[16 * v34 - 32];
            uint64_t v57 = *(void *)v55;
            uint64_t v56 = *((void *)v55 + 1);
            BOOL v58 = __OFSUB__(v56, v57);
            uint64_t v59 = v56 - v57;
            char v60 = v58;
            if (v58) {
              goto LABEL_133;
            }
            Swift::Int v61 = &v35[16 * v37];
            uint64_t v63 = *(void *)v61;
            uint64_t v62 = *((void *)v61 + 1);
            BOOL v48 = __OFSUB__(v62, v63);
            uint64_t v64 = v62 - v63;
            if (v48) {
              goto LABEL_136;
            }
            if (__OFADD__(v59, v64)) {
              goto LABEL_137;
            }
            if (v59 + v64 >= v40)
            {
              BOOL v65 = v40 < v64;
LABEL_78:
              if (v65) {
                unint64_t v37 = v49;
              }
              goto LABEL_80;
            }
LABEL_72:
            if (v60) {
              goto LABEL_132;
            }
            unint64_t v68 = &v35[16 * v37];
            uint64_t v70 = *(void *)v68;
            uint64_t v69 = *((void *)v68 + 1);
            BOOL v48 = __OFSUB__(v69, v70);
            uint64_t v71 = v69 - v70;
            if (v48) {
              goto LABEL_135;
            }
            if (v71 < v59) {
              goto LABEL_89;
            }
LABEL_80:
            unint64_t v76 = v37 - 1;
            if (v37 - 1 >= v34)
            {
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              goto LABEL_147;
            }
            if (!v10) {
              goto LABEL_149;
            }
            unint64_t v77 = v8;
            uint64_t v78 = &v35[16 * v76];
            uint64_t v79 = *(void *)v78;
            uint64_t v80 = v35;
            unint64_t v81 = v37;
            unint64_t v82 = &v35[16 * v37];
            uint64_t v83 = *((void *)v82 + 1);
            sub_1004DA664((id *)(v10 + 8 * *(void *)v78), (id *)(v10 + 8 * *(void *)v82), v10 + 8 * v83, v116, a1);
            if (v2) {
              goto LABEL_121;
            }
            if (v83 < v79) {
              goto LABEL_125;
            }
            if (v81 > *((void *)v77 + 2)) {
              goto LABEL_126;
            }
            *(void *)uint64_t v78 = v79;
            *(void *)&v80[16 * v76 + 8] = v83;
            unint64_t v84 = *((void *)v77 + 2);
            if (v81 >= v84) {
              goto LABEL_127;
            }
            unint64_t v34 = v84 - 1;
            memmove(v82, v82 + 16, 16 * (v84 - 1 - v81));
            uint64_t v35 = v80;
            uint64_t v8 = v77;
            *((void *)v77 + 2) = v84 - 1;
            uint64_t v10 = v117;
            Swift::Int v9 = v114;
            if (v84 <= 2) {
              goto LABEL_89;
            }
          }
        }
        unint64_t v34 = 1;
LABEL_89:
        Swift::Int v3 = v113;
        if (v9 >= v113) {
          goto LABEL_105;
        }
        goto LABEL_13;
      }
    }
  }
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1004D8B2C(uint64_t *a1)
{
  uint64_t v136 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v136 - 8);
  uint64_t v3 = __chkstk_darwin(v136);
  uint64_t v135 = (char *)&v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  Swift::Int v134 = (char *)&v121 - v5;
  Swift::Int v6 = a1[1];
  Swift::Int v7 = _minimumMergeRunLength(_:)(v6);
  if (v7 >= v6)
  {
    if (v6 < 0) {
      goto LABEL_134;
    }
    if (v6) {
      sub_1004D9908(0, v6, 1, a1);
    }
    return;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_142;
  }
  Swift::Int v126 = v7;
  if (v6 < 2)
  {
    Swift::Int v11 = (char *)_swiftEmptyArrayStorage;
    uint64_t v139 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v131 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v6 != 1)
    {
      unint64_t v14 = _swiftEmptyArrayStorage[2];
LABEL_100:
      uint64_t v112 = v132;
      if (v14 >= 2)
      {
        uint64_t v113 = *a1;
        do
        {
          unint64_t v114 = v14 - 2;
          if (v14 < 2) {
            goto LABEL_129;
          }
          if (!v113) {
            goto LABEL_141;
          }
          Swift::Int v115 = v11;
          unint64_t v116 = v11 + 32;
          uint64_t v117 = *(void *)&v11[16 * v114 + 32];
          uint64_t v118 = *(void *)&v11[16 * v14 + 24];
          sub_1004DA9D4(v113 + 8 * v117, (id *)(v113 + 8 * *(void *)&v116[16 * v14 - 16]), (id *)(v113 + 8 * v118), v131);
          if (v112) {
            break;
          }
          if (v118 < v117) {
            goto LABEL_130;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            Swift::Int v115 = sub_1002687F8((uint64_t)v115);
          }
          if (v114 >= *((void *)v115 + 2)) {
            goto LABEL_131;
          }
          uint64_t v119 = &v115[16 * v114 + 32];
          *(void *)uint64_t v119 = v117;
          *((void *)v119 + 1) = v118;
          unint64_t v120 = *((void *)v115 + 2);
          if (v14 > v120) {
            goto LABEL_132;
          }
          Swift::Int v11 = v115;
          memmove(&v115[16 * v14 + 16], &v115[16 * v14 + 32], 16 * (v120 - v14));
          *((void *)v115 + 2) = v120 - 1;
          unint64_t v14 = v120 - 1;
        }
        while (v120 > 2);
      }
LABEL_111:
      swift_bridgeObjectRelease();
      *(void *)((v139 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    sub_100006060(0, (unint64_t *)&unk_1006BEAA0);
    uint64_t v10 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    uint64_t v131 = (void **)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v139 = v10;
  }
  uint64_t v12 = 0;
  uint64_t v13 = *a1;
  uint64_t v133 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v124 = v13 + 16;
  uint64_t v122 = a1;
  uint64_t v123 = v13 - 8;
  Swift::Int v11 = (char *)_swiftEmptyArrayStorage;
  uint64_t v129 = v6;
  uint64_t v137 = v13;
  while (1)
  {
    uint64_t v15 = v12;
    Swift::Int v16 = v12 + 1;
    uint64_t v128 = v12;
    if (v12 + 1 < v6)
    {
      int v17 = *(void **)(v13 + 8 * v12);
      id v18 = *(id *)(v13 + 8 * v16);
      id v19 = v17;
      id v20 = [v18 timestamp];
      uint64_t v21 = v134;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      id v22 = [v19 timestamp];
      id v23 = v135;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      LODWORD(v138) = static Date.< infix(_:_:)();
      int v24 = *v133;
      double v25 = v23;
      uint64_t v26 = v136;
      (*v133)(v25, v136);
      v24(v21, v26);

      Swift::Int v6 = v129;
      Swift::Int v16 = v15 + 2;
      if (v15 + 2 < v6)
      {
        uint64_t v125 = v11;
        Swift::Int v27 = (id *)(v124 + 8 * v15);
        while (1)
        {
          unint64_t v28 = *(v27 - 1);
          id v29 = *v27;
          id v30 = v28;
          id v31 = [v29 timestamp];
          unint64_t v32 = v134;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          id v33 = [v30 timestamp];
          unint64_t v34 = v135;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          LODWORD(v33) = static Date.< infix(_:_:)();
          uint64_t v35 = v34;
          uint64_t v36 = v136;
          v24(v35, v136);
          v24(v32, v36);

          if ((v138 ^ v33)) {
            break;
          }
          ++v27;
          Swift::Int v6 = v129;
          if (v129 == ++v16)
          {
            Swift::Int v16 = v129;
            Swift::Int v11 = v125;
            goto LABEL_22;
          }
        }
        Swift::Int v11 = v125;
        Swift::Int v6 = v129;
LABEL_22:
        uint64_t v15 = v128;
      }
      uint64_t v13 = v137;
      if (v138)
      {
        if (v16 < v15) {
          goto LABEL_135;
        }
        if (v15 < v16)
        {
          unint64_t v37 = (uint64_t *)(v123 + 8 * v16);
          Swift::Int v38 = v16;
          uint64_t v39 = v15;
          uint64_t v40 = (uint64_t *)(v137 + 8 * v15);
          do
          {
            if (v39 != --v38)
            {
              if (!v13) {
                goto LABEL_140;
              }
              uint64_t v41 = *v40;
              *uint64_t v40 = *v37;
              *unint64_t v37 = v41;
            }
            ++v39;
            --v37;
            ++v40;
          }
          while (v39 < v38);
        }
      }
    }
    if (v16 >= v6) {
      goto LABEL_50;
    }
    if (__OFSUB__(v16, v15)) {
      goto LABEL_133;
    }
    if (v16 - v15 >= v126) {
      goto LABEL_50;
    }
    if (__OFADD__(v15, v126)) {
      goto LABEL_136;
    }
    Swift::Int v42 = v15 + v126 >= v6 ? v6 : v15 + v126;
    if (v42 < v15) {
      break;
    }
    if (v16 != v42)
    {
      uint64_t v125 = v11;
      uint64_t v43 = v123 + 8 * v16;
      Swift::Int v127 = v42;
      do
      {
        uint64_t v44 = *(void **)(v13 + 8 * v16);
        uint64_t v45 = v15;
        uint64_t v130 = v43;
        while (1)
        {
          Swift::Int v46 = v16;
          uint64_t v47 = *(void **)v43;
          id v48 = v44;
          id v138 = v48;
          id v49 = v47;
          id v50 = [v48 timestamp];
          uint64_t v51 = v134;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          id v52 = [v49 timestamp];
          uint64_t v53 = v135;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          LOBYTE(v52) = static Date.< infix(_:_:)();
          uint64_t v54 = *v133;
          uint64_t v55 = v53;
          uint64_t v56 = v136;
          (*v133)(v55, v136);
          v54(v51, v56);

          if ((v52 & 1) == 0) {
            break;
          }
          uint64_t v13 = v137;
          if (!v137) {
            goto LABEL_138;
          }
          Swift::Int v16 = v46;
          uint64_t v57 = *(void **)v43;
          uint64_t v44 = *(void **)(v43 + 8);
          *(void *)uint64_t v43 = v44;
          *(void *)(v43 + 8) = v57;
          v43 -= 8;
          if (v46 == ++v45) {
            goto LABEL_43;
          }
        }
        uint64_t v13 = v137;
        Swift::Int v16 = v46;
LABEL_43:
        ++v16;
        uint64_t v43 = v130 + 8;
        uint64_t v15 = v128;
      }
      while (v16 != v127);
      Swift::Int v16 = v127;
      Swift::Int v11 = v125;
    }
LABEL_50:
    if (v16 < v15) {
      goto LABEL_128;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v138 = (id)v16;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      Swift::Int v11 = sub_100268068(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v60 = *((void *)v11 + 2);
    unint64_t v59 = *((void *)v11 + 3);
    unint64_t v14 = v60 + 1;
    uint64_t v13 = v137;
    if (v60 >= v59 >> 1)
    {
      Swift::Int v111 = sub_100268068((char *)(v59 > 1), v60 + 1, 1, v11);
      uint64_t v13 = v137;
      Swift::Int v11 = v111;
    }
    *((void *)v11 + 2) = v14;
    Swift::Int v61 = v11 + 32;
    uint64_t v62 = &v11[16 * v60 + 32];
    id v63 = v138;
    *(void *)uint64_t v62 = v15;
    *((void *)v62 + 1) = v63;
    if (v60)
    {
      while (1)
      {
        unint64_t v64 = v14 - 1;
        if (v14 >= 4)
        {
          uint64_t v69 = &v61[16 * v14];
          uint64_t v70 = *((void *)v69 - 8);
          uint64_t v71 = *((void *)v69 - 7);
          BOOL v75 = __OFSUB__(v71, v70);
          uint64_t v72 = v71 - v70;
          if (v75) {
            goto LABEL_117;
          }
          uint64_t v74 = *((void *)v69 - 6);
          uint64_t v73 = *((void *)v69 - 5);
          BOOL v75 = __OFSUB__(v73, v74);
          uint64_t v67 = v73 - v74;
          char v68 = v75;
          if (v75) {
            goto LABEL_118;
          }
          unint64_t v76 = v14 - 2;
          unint64_t v77 = &v61[16 * v14 - 32];
          uint64_t v79 = *(void *)v77;
          uint64_t v78 = *((void *)v77 + 1);
          BOOL v75 = __OFSUB__(v78, v79);
          uint64_t v80 = v78 - v79;
          if (v75) {
            goto LABEL_120;
          }
          BOOL v75 = __OFADD__(v67, v80);
          uint64_t v81 = v67 + v80;
          if (v75) {
            goto LABEL_123;
          }
          if (v81 >= v72)
          {
            uint64_t v99 = &v61[16 * v64];
            uint64_t v101 = *(void *)v99;
            uint64_t v100 = *((void *)v99 + 1);
            BOOL v75 = __OFSUB__(v100, v101);
            uint64_t v102 = v100 - v101;
            if (v75) {
              goto LABEL_127;
            }
            BOOL v92 = v67 < v102;
            goto LABEL_87;
          }
        }
        else
        {
          if (v14 != 3)
          {
            uint64_t v93 = *((void *)v11 + 4);
            uint64_t v94 = *((void *)v11 + 5);
            BOOL v75 = __OFSUB__(v94, v93);
            uint64_t v86 = v94 - v93;
            char v87 = v75;
            goto LABEL_81;
          }
          uint64_t v66 = *((void *)v11 + 4);
          uint64_t v65 = *((void *)v11 + 5);
          BOOL v75 = __OFSUB__(v65, v66);
          uint64_t v67 = v65 - v66;
          char v68 = v75;
        }
        if (v68) {
          goto LABEL_119;
        }
        unint64_t v76 = v14 - 2;
        unint64_t v82 = &v61[16 * v14 - 32];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v85 = __OFSUB__(v83, v84);
        uint64_t v86 = v83 - v84;
        char v87 = v85;
        if (v85) {
          goto LABEL_122;
        }
        BOOL v88 = &v61[16 * v64];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v75 = __OFSUB__(v89, v90);
        uint64_t v91 = v89 - v90;
        if (v75) {
          goto LABEL_125;
        }
        if (__OFADD__(v86, v91)) {
          goto LABEL_126;
        }
        if (v86 + v91 >= v67)
        {
          BOOL v92 = v67 < v91;
LABEL_87:
          if (v92) {
            unint64_t v64 = v76;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v87) {
          goto LABEL_121;
        }
        uint64_t v95 = &v61[16 * v64];
        uint64_t v97 = *(void *)v95;
        uint64_t v96 = *((void *)v95 + 1);
        BOOL v75 = __OFSUB__(v96, v97);
        uint64_t v98 = v96 - v97;
        if (v75) {
          goto LABEL_124;
        }
        if (v98 < v86) {
          goto LABEL_14;
        }
LABEL_89:
        unint64_t v103 = v64 - 1;
        if (v64 - 1 >= v14)
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
        if (!v13) {
          goto LABEL_139;
        }
        unint64_t v104 = v11;
        BOOL v105 = &v61[16 * v103];
        uint64_t v106 = *(void *)v105;
        uint64_t v107 = &v61[16 * v64];
        uint64_t v108 = *((void *)v107 + 1);
        uint64_t v109 = v132;
        sub_1004DA9D4(v13 + 8 * *(void *)v105, (id *)(v13 + 8 * *(void *)v107), (id *)(v13 + 8 * v108), v131);
        uint64_t v132 = v109;
        if (v109) {
          goto LABEL_111;
        }
        if (v108 < v106) {
          goto LABEL_114;
        }
        if (v64 > *((void *)v104 + 2)) {
          goto LABEL_115;
        }
        *(void *)BOOL v105 = v106;
        *(void *)&v61[16 * v103 + 8] = v108;
        unint64_t v110 = *((void *)v104 + 2);
        if (v64 >= v110) {
          goto LABEL_116;
        }
        Swift::Int v11 = v104;
        unint64_t v14 = v110 - 1;
        memmove(&v61[16 * v64], v107 + 16, 16 * (v110 - 1 - v64));
        *((void *)v104 + 2) = v110 - 1;
        uint64_t v13 = v137;
        if (v110 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v14 = 1;
LABEL_14:
    Swift::Int v6 = v129;
    uint64_t v12 = (uint64_t)v138;
    if ((uint64_t)v138 >= v129)
    {
      a1 = v122;
      goto LABEL_100;
    }
  }
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1004D94C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, char *), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v47 = a4;
  uint64_t v48 = a5;
  uint64_t v10 = type metadata accessor for FMIPUnknownItem();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  id v52 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v44 = (char *)&v36 - v15;
  uint64_t result = __chkstk_darwin(v14);
  uint64_t v38 = a2;
  if (a3 != a2)
  {
    uint64_t v43 = (char *)&v36 - v17;
    id v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v18 = v11 + 16;
    uint64_t v20 = *(void *)(v18 + 56);
    uint64_t v41 = (void (**)(char *, uint64_t))(v18 - 8);
    Swift::Int v42 = v19;
    id v49 = (void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    uint64_t v54 = v20 * (a3 - 1);
    uint64_t v39 = v18;
    uint64_t v40 = v20;
    uint64_t v21 = v20 * a3;
    id v23 = (char *)&v36 - v17;
    id v22 = v44;
    uint64_t v37 = a1;
    while (2)
    {
      uint64_t v24 = 0;
      uint64_t v45 = v21;
      uint64_t v46 = a3;
      while (1)
      {
        uint64_t v26 = *v53;
        uint64_t v50 = v21 + v24;
        uint64_t v51 = a1;
        uint64_t v27 = v21 + v24 + v26;
        unint64_t v28 = v42;
        v42(v23, v27, v10);
        v28(v22, v54 + v24 + v26, v10);
        char v29 = v47(v23, v22);
        if (v6)
        {
          uint64_t v35 = *v41;
          (*v41)(v22, v10);
          return ((uint64_t (*)(char *, uint64_t))v35)(v23, v10);
        }
        char v30 = v29;
        id v31 = *v41;
        (*v41)(v22, v10);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v31)(v23, v10);
        if ((v30 & 1) == 0) {
          break;
        }
        uint64_t v32 = *v53;
        if (!*v53)
        {
          __break(1u);
          return result;
        }
        uint64_t v6 = 0;
        uint64_t v21 = v45;
        uint64_t v33 = v32 + v54 + v24;
        unint64_t v34 = *v49;
        (*v49)(v52, v32 + v45 + v24, v10);
        swift_arrayInitWithTakeFrontToBack();
        uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v34)(v33, v52, v10);
        v24 -= v40;
        a1 = v51 + 1;
        uint64_t v25 = v46;
        id v22 = v44;
        if (v46 == v51 + 1) {
          goto LABEL_10;
        }
      }
      uint64_t v6 = 0;
      uint64_t v21 = v45;
      uint64_t v25 = v46;
LABEL_10:
      a3 = v25 + 1;
      v54 += v40;
      v21 += v40;
      a1 = v37;
      if (a3 != v38) {
        continue;
      }
      break;
    }
  }
  return result;
}

void sub_1004D9800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void **, void **))
{
  if (a3 != a2)
  {
    uint64_t v6 = a3;
    uint64_t v7 = a1;
    uint64_t v8 = *v4;
    uint64_t v9 = (void **)(*v4 + 8 * a3 - 8);
LABEL_4:
    uint64_t v10 = *(void **)(v8 + 8 * v6);
    uint64_t v18 = v9;
    while (1)
    {
      uint64_t v21 = v10;
      uint64_t v20 = *v9;
      uint64_t v11 = v20;
      id v12 = v10;
      id v13 = v11;
      char v14 = a4(&v21, &v20);

      if (v5) {
        break;
      }
      if (v14)
      {
        if (!v8)
        {
          __break(1u);
          return;
        }
        uint64_t v15 = *v9;
        uint64_t v10 = v9[1];
        *uint64_t v9 = v10;
        v9[1] = v15;
        --v9;
        if (v6 != ++v7) {
          continue;
        }
      }
      ++v6;
      uint64_t v9 = v18 + 1;
      uint64_t v7 = a1;
      if (v6 != a2) {
        goto LABEL_4;
      }
      return;
    }
  }
}

void sub_1004D9908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v30 = a1;
  uint64_t v35 = type metadata accessor for Date();
  uint64_t v7 = __chkstk_darwin(v35);
  unint64_t v34 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v33 = (char *)&v28 - v10;
  uint64_t v29 = a2;
  if (a3 != a2)
  {
    uint64_t v11 = *a4;
    uint64_t v32 = v9 + 8;
    uint64_t v36 = v11;
    uint64_t v12 = v11 + 8 * a3 - 8;
    id v13 = (void (**)(char *, uint64_t))(v9 + 8);
LABEL_5:
    char v14 = *(void **)(v36 + 8 * a3);
    uint64_t v15 = v30;
    uint64_t v31 = v12;
    while (1)
    {
      Swift::Int v16 = *(void **)v12;
      id v17 = v14;
      id v37 = v17;
      id v18 = v16;
      id v19 = [v17 timestamp];
      uint64_t v20 = v33;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      id v21 = [v18 timestamp];
      id v22 = v34;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v21) = static Date.< infix(_:_:)();
      uint64_t v23 = a3;
      uint64_t v24 = *v13;
      uint64_t v25 = v22;
      uint64_t v26 = v35;
      (*v13)(v25, v35);
      v24(v20, v26);
      a3 = v23;

      if ((v21 & 1) == 0)
      {
LABEL_4:
        a3 = v23 + 1;
        uint64_t v12 = v31 + 8;
        if (v23 + 1 == v29) {
          return;
        }
        goto LABEL_5;
      }
      if (!v36) {
        break;
      }
      uint64_t v27 = *(void **)v12;
      char v14 = *(void **)(v12 + 8);
      *(void *)uint64_t v12 = v14;
      *(void *)(v12 + 8) = v27;
      v12 -= 8;
      if (v23 == ++v15) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1004D9B40(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t (*a5)(char *, unint64_t), uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v75 = a6;
  unint64_t v76 = a5;
  uint64_t v12 = type metadata accessor for FMIPUnknownItem();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v15 = __chkstk_darwin(v14);
  id v17 = (char *)&v66 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v66 - v19;
  __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v66 - v22;
  uint64_t v77 = *(void *)(v24 + 72);
  if (!v77)
  {
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  if (a2 - a1 == 0x8000000000000000 && v77 == -1) {
    goto LABEL_77;
  }
  int64_t v25 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v77 == -1) {
    goto LABEL_78;
  }
  uint64_t v26 = (uint64_t)(a2 - a1) / v77;
  unint64_t v82 = a1;
  unint64_t v81 = a4;
  uint64_t v27 = v25 / v77;
  unint64_t v78 = a3;
  if (v26 >= v25 / v77)
  {
    if ((v27 & 0x8000000000000000) == 0)
    {
      unint64_t v30 = a1;
      uint64_t v31 = v27 * v77;
      unint64_t v71 = v21;
      if (a4 < a2 || a2 + v31 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v45 = a4 + v31;
      unint64_t v80 = a4 + v31;
      unint64_t v82 = a2;
      if (v31 >= 1 && v30 < a2)
      {
        uint64_t v47 = -v77;
        uint64_t v48 = *(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 16);
        uint64_t v74 = v13 + 16;
        uint64_t v69 = v48;
        uint64_t v70 = (void (**)(unint64_t, uint64_t))(v13 + 8);
        uint64_t v66 = -v77;
        unint64_t v67 = a4;
        uint64_t v72 = v12;
        unint64_t v68 = v30;
        while (1)
        {
          uint64_t v49 = v47;
          uint64_t v50 = v69;
          v69((unint64_t)v17, v45 + v47, v12);
          uint64_t v77 = a2;
          unint64_t v51 = a2 + v49;
          id v52 = v17;
          unint64_t v53 = v71;
          v50(v71, v51, v12);
          char v54 = v76(v52, v53);
          if (v7) {
            break;
          }
          char v55 = v54;
          uint64_t v79 = 0;
          unint64_t v56 = v78;
          uint64_t v73 = (char *)(v78 + v49);
          uint64_t v57 = *v70;
          (*v70)(v53, v12);
          v57((unint64_t)v52, v12);
          id v17 = v52;
          if (v55)
          {
            BOOL v58 = v73;
            if (v56 < v77 || (unint64_t)v73 >= v77)
            {
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v7 = v79;
              unint64_t v60 = v68;
            }
            else
            {
              BOOL v59 = v56 == v77;
              uint64_t v7 = v79;
              unint64_t v60 = v68;
              if (!v59) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            uint64_t v47 = v66;
            v82 += v66;
          }
          else
          {
            unint64_t v61 = v80;
            v80 += v49;
            BOOL v58 = v73;
            BOOL v62 = v56 < v61 || (unint64_t)v73 >= v61;
            unint64_t v51 = v77;
            if (v62)
            {
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v47 = v66;
              uint64_t v7 = v79;
              unint64_t v60 = v68;
            }
            else
            {
              BOOL v59 = v56 == v61;
              uint64_t v7 = v79;
              unint64_t v60 = v68;
              if (v59)
              {
                uint64_t v47 = v49;
              }
              else
              {
                swift_arrayInitWithTakeBackToFront();
                uint64_t v47 = v66;
              }
            }
          }
          unint64_t v45 = v80;
          if (v80 > v67)
          {
            a2 = v51;
            unint64_t v78 = (unint64_t)v58;
            uint64_t v12 = v72;
            if (v51 > v60) {
              continue;
            }
          }
          goto LABEL_75;
        }
        unint64_t v64 = *v70;
        (*v70)(v53, v12);
        v64((unint64_t)v52, v12);
      }
      goto LABEL_75;
    }
  }
  else if ((v26 & 0x8000000000000000) == 0)
  {
    unint64_t v28 = a1;
    uint64_t v29 = v26 * v77;
    uint64_t v73 = v20;
    if (a4 < v28 || v28 + v29 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v28)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v71 = a4 + v29;
    unint64_t v80 = a4 + v29;
    BOOL v32 = v29 < 1 || a2 >= v78;
    if (!v32)
    {
      uint64_t v70 = *(void (***)(unint64_t, uint64_t))(v13 + 16);
      uint64_t v74 = v13 + 16;
      uint64_t v33 = (void (**)(char *, uint64_t))(v13 + 8);
      while (1)
      {
        unint64_t v34 = v70;
        ((void (*)(char *, unint64_t, uint64_t))v70)(v23, a2, v12);
        uint64_t v35 = v23;
        uint64_t v36 = v73;
        ((void (*)(char *, unint64_t, uint64_t))v34)(v73, a4, v12);
        char v37 = v76(v35, (unint64_t)v36);
        if (v7) {
          break;
        }
        char v38 = v37;
        uint64_t v79 = 0;
        uint64_t v39 = *v33;
        (*v33)(v36, v12);
        v39(v35, v12);
        unint64_t v40 = v82;
        uint64_t v23 = v35;
        if (v38)
        {
          unint64_t v41 = a2 + v77;
          if (v82 < a2 || v82 >= v41)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v82 == a2)
          {
            unint64_t v40 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v43 = v81 + v77;
          if (v82 < v81 || v82 >= v43)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v82 != v81)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v81 = v43;
          unint64_t v41 = a2;
        }
        unint64_t v82 = v40 + v77;
        a4 = v81;
        if (v81 < v71)
        {
          a2 = v41;
          BOOL v32 = v41 >= v78;
          uint64_t v7 = v79;
          if (!v32) {
            continue;
          }
        }
        goto LABEL_75;
      }
      id v63 = *v33;
      (*v33)(v36, v12);
      v63(v35, v12);
    }
LABEL_75:
    sub_10026863C(&v82, &v81, (uint64_t *)&v80);
    return 1;
  }
LABEL_79:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004DA204(void **__src, void **a2, unint64_t a3, void **a4)
{
  uint64_t v4 = a2;
  uint64_t v5 = __src;
  int64_t v6 = (char *)a2 - (char *)__src;
  int64_t v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v7 = (char *)a2 - (char *)__src;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v10 = a3 - (void)a2;
  }
  uint64_t v11 = v10 >> 3;
  char v54 = __src;
  unint64_t v53 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != a2 || &a2[v11] <= a4) {
        memmove(a4, a2, 8 * v11);
      }
      unint64_t v28 = (char *)&a4[v11];
      id v52 = v28;
      char v54 = v4;
      if (v5 < v4 && v9 >= 8)
      {
        uint64_t v29 = (void **)(a3 - 8);
        uint64_t v49 = v5;
        do
        {
          unint64_t v30 = (char *)*((void *)v28 - 1);
          unint64_t v47 = (unint64_t)v28;
          unint64_t v43 = v28 - 8;
          if (*(void *)&v30[OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8])
          {
            uint64_t v31 = *(void *)&v30[OBJC_IVAR____TtC6FindMy12FMAnnotation_title];
            unint64_t v32 = *(void *)&v30[OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8];
          }
          else
          {
            uint64_t v31 = 0;
            unint64_t v32 = 0xE000000000000000;
          }
          unint64_t v34 = v4 - 1;
          uint64_t v33 = (char *)*(v4 - 1);
          uint64_t v35 = &v33[OBJC_IVAR____TtC6FindMy12FMAnnotation_title];
          if (*(void *)&v33[OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8])
          {
            uint64_t v36 = *(void *)v35;
            unint64_t v37 = *((void *)v35 + 1);
          }
          else
          {
            uint64_t v36 = 0;
            unint64_t v37 = 0xE000000000000000;
          }
          unint64_t v51 = v4;
          if (v31 == v36 && v32 == v37) {
            char v45 = 0;
          }
          else {
            char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
          }
          char v38 = v29 + 1;
          swift_bridgeObjectRetain();
          uint64_t v39 = v30;
          unint64_t v40 = v33;
          swift_bridgeObjectRetain();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v45)
          {
            unint64_t v28 = (char *)v47;
            if (v38 != v51 || v29 >= v51) {
              *uint64_t v29 = *v34;
            }
            char v54 = v34;
          }
          else
          {
            unint64_t v28 = v43;
            id v52 = v43;
            if ((unint64_t)v38 < v47 || (unint64_t)v29 >= v47)
            {
              *uint64_t v29 = *(void **)v43;
              unint64_t v34 = v51;
            }
            else
            {
              unint64_t v34 = v51;
              if (v38 != (void **)v47) {
                *uint64_t v29 = *(void **)v43;
              }
            }
          }
          if (v34 <= v49) {
            break;
          }
          --v29;
          uint64_t v4 = v34;
        }
        while (v28 > (char *)a4);
      }
LABEL_62:
      sub_1002684F4(&v54, &v53, &v52);
      return 1;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != __src || &__src[v8] <= a4) {
      memmove(a4, __src, 8 * v8);
    }
    uint64_t v44 = (char *)&a4[v8];
    id v52 = v44;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      uint64_t v12 = a4;
      while (1)
      {
        uint64_t v13 = *v4;
        uint64_t v14 = (uint64_t *)((char *)*v4 + OBJC_IVAR____TtC6FindMy12FMAnnotation_title);
        uint64_t v50 = v4;
        if (v14[1])
        {
          uint64_t v15 = *v14;
          unint64_t v16 = v14[1];
        }
        else
        {
          uint64_t v15 = 0;
          unint64_t v16 = 0xE000000000000000;
        }
        id v17 = *v12;
        uint64_t v18 = (uint64_t *)((char *)*v12 + OBJC_IVAR____TtC6FindMy12FMAnnotation_title);
        if (v18[1])
        {
          uint64_t v19 = *v18;
          unint64_t v20 = v18[1];
        }
        else
        {
          uint64_t v19 = 0;
          unint64_t v20 = 0xE000000000000000;
        }
        uint64_t v48 = v5;
        if (v15 == v19 && v16 == v20)
        {
          swift_bridgeObjectRetain();
          id v21 = v13;
          id v22 = v17;
          swift_bridgeObjectRetain();

          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRetain();
          id v24 = v13;
          id v25 = v17;
          swift_bridgeObjectRetain();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v23)
          {
            uint64_t v26 = v48;
            uint64_t v27 = v50 + 1;
            if (v48 < v50 || v48 >= v27 || v48 != v50) {
              *uint64_t v48 = *v50;
            }
            goto LABEL_30;
          }
        }
        uint64_t v26 = v48;
        if (v48 != v12) {
          *uint64_t v48 = *v12;
        }
        unint64_t v53 = ++v12;
        uint64_t v27 = v50;
LABEL_30:
        uint64_t v5 = v26 + 1;
        if (v12 < (void **)v44)
        {
          uint64_t v4 = v27;
          if ((unint64_t)v27 < a3) {
            continue;
          }
        }
        char v54 = v5;
        goto LABEL_62;
      }
    }
    goto LABEL_62;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004DA664(id *__src, id *a2, unint64_t a3, id *a4, uint64_t (*a5)(id *, void **))
{
  uint64_t v6 = v5;
  int64_t v7 = a2;
  uint64_t v8 = __src;
  int64_t v9 = (char *)a2 - (char *)__src;
  int64_t v10 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v10 = (char *)a2 - (char *)__src;
  }
  uint64_t v11 = v10 >> 3;
  uint64_t v12 = a3 - (void)a2;
  uint64_t v13 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v13 = a3 - (void)a2;
  }
  uint64_t v14 = v13 >> 3;
  uint64_t v48 = __src;
  unint64_t v47 = a4;
  if (v11 >= v13 >> 3)
  {
    if (v12 <= -8) {
      goto LABEL_50;
    }
    if (a4 != a2 || &a2[v14] <= a4) {
      memmove(a4, a2, 8 * v14);
    }
    id v25 = (char *)&a4[v14];
    uint64_t v46 = v25;
    uint64_t v48 = v7;
    if (v8 >= v7 || v12 < 8)
    {
LABEL_49:
      sub_1002684F4(&v48, &v47, &v46);
      return 1;
    }
    uint64_t v26 = (id *)(a3 - 8);
    uint64_t v27 = v7;
    uint64_t v39 = v8;
    while (1)
    {
      Swift::Int v42 = v7;
      unint64_t v28 = (unint64_t)v25;
      uint64_t v29 = v25 - 8;
      id v45 = (id)*((void *)v25 - 1);
      unint64_t v30 = *--v27;
      uint64_t v44 = v30;
      id v31 = v45;
      id v32 = v30;
      char v33 = a5(&v45, &v44);
      if (v6)
      {

        goto LABEL_49;
      }
      char v34 = v33;
      uint64_t v35 = v26 + 1;

      if (v34)
      {
        id v25 = (char *)v28;
        if (v35 != v42 || v26 >= v42) {
          *uint64_t v26 = *v27;
        }
        uint64_t v48 = v27;
      }
      else
      {
        uint64_t v46 = v29;
        if ((unint64_t)v35 >= v28 && (unint64_t)v26 < v28)
        {
          unint64_t v36 = (unint64_t)v39;
          if (v35 != (id *)v28) {
            *uint64_t v26 = *(id *)v29;
          }
          unint64_t v37 = (char *)a4;
          uint64_t v27 = v42;
          id v25 = v29;
          uint64_t v6 = 0;
          goto LABEL_44;
        }
        *uint64_t v26 = *(id *)v29;
        uint64_t v27 = v42;
        id v25 = v29;
      }
      uint64_t v6 = 0;
      unint64_t v36 = (unint64_t)v39;
      unint64_t v37 = (char *)a4;
LABEL_44:
      if ((unint64_t)v27 > v36)
      {
        --v26;
        int64_t v7 = v27;
        if (v25 > v37) {
          continue;
        }
      }
      goto LABEL_49;
    }
  }
  if (v9 > -8)
  {
    uint64_t v15 = a4;
    if (a4 != __src || &__src[v11] <= a4) {
      memmove(a4, __src, 8 * v11);
    }
    unint64_t v16 = (char *)&a4[v11];
    uint64_t v46 = v16;
    if ((unint64_t)v7 < a3 && v9 >= 8)
    {
      while (1)
      {
        id v17 = v8;
        id v45 = *v7;
        uint64_t v44 = *v15;
        uint64_t v18 = v44;
        id v19 = v45;
        id v20 = v18;
        char v21 = a5(&v45, &v44);
        if (v5) {
          break;
        }
        char v22 = v21;

        if (v22)
        {
          char v23 = v7 + 1;
          id v24 = v17;
          if (v17 < v7 || v17 >= v23 || v17 != v7) {
            *id v17 = *v7;
          }
        }
        else
        {
          id v24 = v17;
          if (v17 != v15) {
            *id v17 = *v15;
          }
          unint64_t v47 = ++v15;
          char v23 = v7;
        }
        uint64_t v8 = v24 + 1;
        uint64_t v48 = v8;
        if (v15 < (void **)v16)
        {
          int64_t v7 = v23;
          if ((unint64_t)v23 < a3) {
            continue;
          }
        }
        goto LABEL_49;
      }
    }
    goto LABEL_49;
  }
LABEL_50:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004DA9D4(uint64_t a1, id *a2, id *a3, void **a4)
{
  uint64_t v57 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v57 - 8);
  uint64_t v9 = __chkstk_darwin(v57);
  unint64_t v56 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v54 = a3;
  char v55 = (char *)&v48 - v12;
  uint64_t v13 = (uint64_t)a2 - a1;
  uint64_t v14 = v13 / 8;
  uint64_t v15 = a2;
  uint64_t v16 = (char *)a3 - (char *)a2;
  uint64_t v17 = v16 / 8;
  unint64_t v61 = v11;
  unint64_t v60 = a4;
  BOOL v58 = v11;
  if (v13 / 8 >= v16 / 8)
  {
    if (v16 < -7) {
      goto LABEL_41;
    }
    if (a4 != v15 || &v15[v17] <= a4)
    {
      memmove(a4, v15, 8 * v17);
      uint64_t v11 = v58;
    }
    id v31 = &a4[v17];
    BOOL v59 = v31;
    unint64_t v61 = v15;
    if (v16 < 8 || v11 >= v15) {
      goto LABEL_40;
    }
    uint64_t v49 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v50 = a4;
    id v32 = v54 - 1;
    char v33 = v15;
    while (1)
    {
      char v54 = v15;
      id v52 = v31;
      unint64_t v53 = v32 + 1;
      uint64_t v35 = v31 - 1;
      unint64_t v36 = *--v33;
      id v37 = *(v31 - 1);
      id v51 = v37;
      id v38 = v36;
      id v39 = [v37 timestamp];
      unint64_t v40 = v55;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      id v41 = [v38 timestamp];
      Swift::Int v42 = v56;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v41) = static Date.< infix(_:_:)();
      unint64_t v43 = *v49;
      uint64_t v44 = v42;
      uint64_t v45 = v57;
      (*v49)(v44, v57);
      v43(v40, v45);

      if (v41) {
        break;
      }
      BOOL v59 = v35;
      if (v53 < v52 || v32 >= v52)
      {
        id *v32 = *v35;
        char v33 = v54;
        id v31 = v35;
        goto LABEL_28;
      }
      unint64_t v46 = (unint64_t)v50;
      char v34 = v58;
      char v33 = v54;
      if (v53 != v52) {
        id *v32 = *v35;
      }
      id v31 = v35;
      if ((unint64_t)v35 <= v46) {
        goto LABEL_40;
      }
LABEL_29:
      --v32;
      uint64_t v15 = v33;
      if (v33 <= v34) {
        goto LABEL_40;
      }
    }
    id v31 = v52;
    if (v53 != v54 || v32 >= v54) {
      id *v32 = *v33;
    }
    unint64_t v61 = v33;
LABEL_28:
    char v34 = v58;
    if (v31 <= v50) {
      goto LABEL_40;
    }
    goto LABEL_29;
  }
  if (v13 >= -7)
  {
    if (a4 != v11 || &v11[v14] <= a4)
    {
      memmove(a4, v58, 8 * v14);
      uint64_t v11 = v58;
    }
    unint64_t v53 = &a4[v14];
    BOOL v59 = v53;
    if (v13 >= 8 && v15 < v54)
    {
      id v52 = (void **)(v8 + 8);
      uint64_t v18 = v55;
      do
      {
        BOOL v58 = v11;
        id v19 = *a4;
        id v20 = *v15;
        id v21 = v19;
        char v22 = a4;
        id v23 = [v20 timestamp];
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        id v24 = [v21 timestamp];
        id v25 = v56;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        LOBYTE(v24) = static Date.< infix(_:_:)();
        uint64_t v26 = (void (*)(char *, uint64_t))*v52;
        uint64_t v27 = v25;
        uint64_t v28 = v57;
        ((void (*)(char *, uint64_t))*v52)(v27, v57);
        v26(v18, v28);

        if (v24)
        {
          a4 = v22;
          unint64_t v29 = (unint64_t)(v15 + 1);
          unint64_t v30 = v58;
          if (v58 < v15 || (unint64_t)v58 >= v29 || v58 != v15) {
            *BOOL v58 = *v15;
          }
        }
        else
        {
          unint64_t v30 = v58;
          if (v58 != v22) {
            *BOOL v58 = *v22;
          }
          a4 = v22 + 1;
          unint64_t v60 = v22 + 1;
          unint64_t v29 = (unint64_t)v15;
        }
        uint64_t v11 = v30 + 1;
        unint64_t v61 = v11;
        if (a4 >= v53) {
          break;
        }
        uint64_t v15 = (id *)v29;
      }
      while (v29 < (unint64_t)v54);
    }
LABEL_40:
    sub_1002684F4(&v61, &v60, &v59);
    return 1;
  }
LABEL_41:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t (*sub_1004DAEE4(void *a1, unsigned __int8 a2))()
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_1004DB890(v4);
  v4[9] = sub_1004DB2B0((uint64_t)(v4 + 4), a2, isUniquelyReferenced_nonNull_native);
  return sub_1004DAF74;
}

void (*sub_1004DAF78(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1004DB8CC(v6);
  v6[10] = sub_1004DB400(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1004DB024;
}

void sub_1004DB024(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);

  free(v1);
}

uint64_t (*sub_1004DB098(void *a1, unsigned __int8 a2))()
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_1004DB8CC(v4);
  v4[9] = sub_1004DB560((uint64_t)(v4 + 4), a2, isUniquelyReferenced_nonNull_native);
  return sub_1004DAF74;
}

void sub_1004DB128(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  v2(v1, 0);

  free(v1);
}

void (*sub_1004DB188(void *a1, uint64_t a2, unint64_t a3))(uint64_t a1)
{
  uint64_t v6 = malloc(0x60uLL);
  *a1 = v6;
  v6[8] = a2;
  v6[9] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100083344(a2, a3);
  v6[10] = sub_1004DB8CC(v6);
  v6[11] = sub_1004DB6D8(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1004DB238;
}

void sub_1004DB238(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 80);
  uint64_t v4 = *(void *)(*(void *)a1 + 64);
  unint64_t v3 = *(void *)(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 88))();
  sub_100083358(v4, v3);
  v2(v1, 0);

  free(v1);
}

uint64_t (*sub_1004DB2B0(uint64_t a1, unsigned __int8 a2, char a3))(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 24) = a2;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1001AF868(a2);
  *(unsigned char *)(a1 + 25) = v9 & 1;
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    char v14 = v9;
    uint64_t v15 = *(void *)(v8 + 24);
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      *(void *)(a1 + 16) = v10;
      if (v14)
      {
LABEL_8:
        uint64_t v16 = *(void *)(*(void *)(*v4 + 56) + 8 * v10);
LABEL_12:
        *(void *)a1 = v16;
        return sub_1004DB3D4;
      }
LABEL_11:
      uint64_t v16 = 0;
      goto LABEL_12;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1001BA24C();
      goto LABEL_7;
    }
    sub_1001B1838(v13, a3 & 1);
    unint64_t v17 = sub_1001AF868(a2);
    if ((v14 & 1) == (v18 & 1))
    {
      unint64_t v10 = v17;
      *(void *)(a1 + 16) = v17;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (uint64_t (*)(uint64_t, uint64_t))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1004DB3D4(uint64_t a1, uint64_t a2)
{
  return sub_1004DB684(a1, a2, (uint64_t (*)(void, void))sub_1001B9A6C, (uint64_t (*)(void, void))sub_1001B67E0);
}

void (*sub_1004DB400(void *a1, uint64_t a2, uint64_t a3, char a4))(void *a1, uint64_t a2)
{
  uint64_t v5 = v4;
  unint64_t v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  v10[3] = v4;
  v10[1] = a2;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_100053708(a2, a3);
  *((unsigned char *)v10 + 40) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*(void *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *unint64_t v10 = v19;
        return sub_1004DB548;
      }
LABEL_11:
      uint64_t v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_1001BA258();
      goto LABEL_7;
    }
    sub_1001B1B0C(v16, a4 & 1);
    unint64_t v20 = sub_100053708(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      unint64_t v13 = v20;
      v10[4] = v20;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(void *, uint64_t))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_1004DB548(void *a1, uint64_t a2)
{
}

uint64_t (*sub_1004DB560(uint64_t a1, unsigned __int8 a2, char a3))(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 24) = a2;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1001AF868(a2);
  *(unsigned char *)(a1 + 25) = v9 & 1;
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    char v14 = v9;
    uint64_t v15 = *(void *)(v8 + 24);
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      *(void *)(a1 + 16) = v10;
      if (v14)
      {
LABEL_8:
        uint64_t v16 = *(void *)(*(void *)(*v4 + 56) + 8 * v10);
LABEL_12:
        *(void *)a1 = v16;
        return sub_1004DB3D4;
      }
LABEL_11:
      uint64_t v16 = 0;
      goto LABEL_12;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1001BC2E0();
      goto LABEL_7;
    }
    sub_1001B4F40(v13, a3 & 1);
    unint64_t v17 = sub_1001AF868(a2);
    if ((v14 & 1) == (v18 & 1))
    {
      unint64_t v10 = v17;
      *(void *)(a1 + 16) = v17;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (uint64_t (*)(uint64_t, uint64_t))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1004DB684(uint64_t result, uint64_t a2, uint64_t (*a3)(void, void), uint64_t (*a4)(void, void))
{
  if (*(void *)result)
  {
    if (*(unsigned char *)(result + 25)) {
      *(void *)(*(void *)(**(void **)(result + 8) + 56) + 8 * *(void *)(result + 16)) = *(void *)result;
    }
    else {
      return a3(*(void *)(result + 16), *(unsigned __int8 *)(result + 24));
    }
  }
  else if (*(unsigned char *)(result + 25))
  {
    return a4(*(void *)(result + 16), **(void **)(result + 8));
  }
  return result;
}

void (*sub_1004DB6D8(void *a1, uint64_t a2, unint64_t a3, char a4))(void *a1, uint64_t a2)
{
  uint64_t v5 = v4;
  unint64_t v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  v10[3] = v4;
  v10[1] = a2;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_1001B00AC(a2, a3);
  *((unsigned char *)v10 + 40) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*(void *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *unint64_t v10 = v19;
        return sub_1004DB820;
      }
LABEL_11:
      uint64_t v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_1001BCD18();
      goto LABEL_7;
    }
    sub_1001B6084(v16, a4 & 1);
    unint64_t v20 = sub_1001B00AC(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      unint64_t v13 = v20;
      v10[4] = v20;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(void *, uint64_t))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_1004DB820(void *a1, uint64_t a2)
{
}

void sub_1004DB838(void *a1, uint64_t a2, void (*a3)(void, void, void, void, void, void))
{
  unint64_t v3 = (void *)*a1;
  a3(*a1, *(unsigned __int8 *)(*a1 + 40), *(void *)(*a1 + 24), *(void *)(*a1 + 32), *(void *)(*a1 + 8), *(void *)(*a1 + 16));
  swift_bridgeObjectRelease();

  free(v3);
}

uint64_t (*sub_1004DB890(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_1004DB8C0;
}

uint64_t sub_1004DB8C0(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t (*sub_1004DB8CC(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_1004DE754;
}

uint64_t sub_1004DB8FC(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *a1;
  if (*a1)
  {
    if (a2)
    {
      *(void *)(*(void *)(*a3 + 56) + 8 * a4) = v8;
    }
    else
    {
      sub_1001B9A70(a4, a5, a6, v8, (void *)*a3);
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_1001B699C(a4, *a3);
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1004DB9AC(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8 = *a1;
  if (*a1)
  {
    unint64_t v10 = (void *)*a3;
    if (a2)
    {
      *(void *)(v10[7] + 8 * a4) = v8;
    }
    else
    {
      sub_1001B9A70(a4, a5, a6, v8, v10);
      sub_100083344(a5, a6);
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_1001B7E10(a4, *a3);
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1004DBA68(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v25 = a3;
  uint64_t v27 = a2;
  uint64_t v24 = type metadata accessor for FMIPUnknownItem();
  uint64_t v4 = *(void *)(v24 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v24);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10005D034(&qword_1006B6C78);
  uint64_t v29 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10005D034((uint64_t *)&unk_1006C0AC0);
  uint64_t v30 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  unint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v11 = sub_1001AB4F8(a1, 4u);
  swift_release();
  uint64_t v32 = v11;
  id v12 = [objc_allocWithZone((Class)UIImage) init];
  id v31 = v12;
  sub_10005D034(&qword_1006B31A0);
  sub_1000450A0((unint64_t *)&unk_1006B4250, &qword_1006B31A0);
  Publisher.replaceError(with:)();
  swift_release();

  uint64_t v13 = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v24);
  unint64_t v14 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v15 = (v5 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v16 + v14, v6, v13);
  char v17 = v27;
  *(void *)(v16 + v15) = v27;
  type metadata accessor for FMUnknownItemAnnotation();
  sub_1000450A0(&qword_1006B6C98, &qword_1006B6C78);
  swift_bridgeObjectRetain();
  id v18 = v17;
  uint64_t v19 = v26;
  Publisher.map<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v19);
  sub_1000450A0((unint64_t *)&unk_1006C0AD0, (uint64_t *)&unk_1006C0AC0);
  uint64_t v20 = v28;
  uint64_t v21 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v20);
  return v21;
}

void *sub_1004DBE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v53 = a2;
  uint64_t v52 = type metadata accessor for FMIPUnknownItem();
  uint64_t v4 = *(void *)(v52 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v52);
  id v51 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_10005D034(&qword_1006B6C78);
  uint64_t v6 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v49 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_10005D034((uint64_t *)&unk_1006C0AC0);
  uint64_t v8 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  unint64_t v47 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = a1;
  uint64_t v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v57 = _swiftEmptyArrayStorage;
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    v36[2] = v2;
    uint64_t v16 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v17 = v11 + ((v16 + 32) & ~v16);
    uint64_t v18 = *(void *)(v4 + 72);
    uint64_t v42 = v16 | 7;
    uint64_t v43 = (v16 + 24) & ~v16;
    uint64_t v44 = (void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    unint64_t v41 = (v5 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
    id v39 = (void (**)(uint64_t, char *, uint64_t))(v4 + 32);
    unint64_t v40 = v41 + 8;
    id v37 = (void (**)(char *, uint64_t))(v8 + 8);
    id v38 = (void (**)(char *, uint64_t))(v6 + 8);
    v36[1] = v11;
    swift_bridgeObjectRetain();
    uint64_t v45 = v18;
    unint64_t v46 = v13;
    do
    {
      uint64_t v19 = FMIPUnknownItem.locations.getter();
      uint64_t v20 = *(void *)(v19 + 16);
      if (v20)
      {
        uint64_t v21 = v20 - 1;
        uint64_t v22 = type metadata accessor for FMIPLocation();
        uint64_t v23 = *(void *)(v22 - 8);
        (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v13, v19+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v21, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v13, 0, 1, v22);
      }
      else
      {
        uint64_t v22 = type metadata accessor for FMIPLocation();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v13, 1, 1, v22);
      }
      swift_bridgeObjectRelease();
      type metadata accessor for FMIPLocation();
      uint64_t v24 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v13, 1, v22) == 1)
      {
        sub_100003F10((uint64_t)v13, (uint64_t *)&unk_1006B2AE0);
      }
      else
      {
        uint64_t v25 = (void *)FMIPLocation.location.getter();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v22);
        uint64_t v26 = *(void *)(v53 + 48);
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v27 = sub_1001AB4F8(v17, 4u);
        swift_release();
        uint64_t v56 = v27;
        id v28 = [objc_allocWithZone((Class)UIImage) init];
        id v55 = v28;
        sub_10005D034(&qword_1006B31A0);
        sub_1000450A0((unint64_t *)&unk_1006B4250, &qword_1006B31A0);
        uint64_t v29 = v49;
        Publisher.replaceError(with:)();
        swift_release();

        id v31 = v51;
        uint64_t v30 = v52;
        (*v44)(v51, v17, v52);
        uint64_t v32 = swift_allocObject();
        *(void *)(v32 + 16) = v26;
        (*v39)(v32 + v43, v31, v30);
        *(void *)(v32 + v41) = v25;
        type metadata accessor for FMUnknownItemAnnotation();
        sub_1000450A0(&qword_1006B6C98, &qword_1006B6C78);
        swift_bridgeObjectRetain();
        id v54 = v25;
        char v33 = v47;
        uint64_t v34 = v50;
        Publisher.map<A>(_:)();
        swift_release();
        (*v38)(v29, v34);
        sub_1000450A0((unint64_t *)&unk_1006C0AD0, (uint64_t *)&unk_1006C0AC0);
        uint64_t v35 = v48;
        Publisher.eraseToAnyPublisher()();
        (*v37)(v33, v35);
        swift_bridgeObjectRelease();

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (v57[2] >= v57[3] >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        uint64_t v18 = v45;
        uint64_t v13 = v46;
      }
      v17 += v18;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    return v57;
  }
  return result;
}

char *sub_1004DC53C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a2;
  uint64_t v31 = type metadata accessor for FMIPDevice();
  uint64_t v6 = *(void *)(v31 - 8);
  uint64_t v7 = __chkstk_darwin(v31);
  uint64_t v29 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v23 - v9;
  uint64_t result = (char *)_swiftEmptyArrayStorage;
  uint64_t v32 = (char *)_swiftEmptyArrayStorage;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    unint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v13 = v6 + 16;
    uint64_t v15 = *(void *)(v13 + 56);
    unint64_t v25 = (*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64);
    uint64_t v26 = a3;
    uint64_t v16 = a1 + v25;
    v23[1] = v3;
    uint64_t v24 = (void (**)(char *, uint64_t))(v13 - 8);
    uint64_t v27 = v14;
    id v28 = (void (**)(char *, char *, uint64_t))(v13 + 16);
    v14(v10, a1 + v25, v31);
    while (1)
    {
      if (FMIPDevice.identifier.getter() == v30 && v17 == a3)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v18 & 1) == 0)
        {
          (*v24)(v10, v31);
          goto LABEL_4;
        }
      }
      uint64_t v19 = *v28;
      (*v28)(v29, v10, v31);
      uint64_t v20 = v32;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10013E5F0(0, *((void *)v20 + 2) + 1, 1);
        uint64_t v20 = v32;
      }
      unint64_t v22 = *((void *)v20 + 2);
      unint64_t v21 = *((void *)v20 + 3);
      if (v22 >= v21 >> 1)
      {
        sub_10013E5F0(v21 > 1, v22 + 1, 1);
        uint64_t v20 = v32;
      }
      *((void *)v20 + 2) = v22 + 1;
      v19(&v20[v25 + v22 * v15], v29, v31);
      uint64_t v32 = v20;
      a3 = v26;
LABEL_4:
      v16 += v15;
      if (!--v12) {
        return v32;
      }
      v27(v10, v16, v31);
    }
  }
  return result;
}

char *sub_1004DC7B8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v52 = (char *)v34 - v10;
  uint64_t v11 = type metadata accessor for FMIPUnknownItem();
  uint64_t v12 = __chkstk_darwin(v11);
  id v39 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v34 - v14;
  uint64_t result = (char *)_swiftEmptyArrayStorage;
  uint64_t v53 = (char *)_swiftEmptyArrayStorage;
  uint64_t v46 = *(void *)(a1 + 16);
  if (v46)
  {
    uint64_t v18 = 0;
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v19 = v15 + 16;
    unint64_t v21 = (*(unsigned __int8 *)(v19 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 64);
    v34[1] = v2;
    unint64_t v35 = v21;
    uint64_t v43 = a1 + v21;
    uint64_t v44 = v20;
    uint64_t v47 = *(void *)(v19 + 56);
    uint64_t v49 = v6 + 16;
    uint64_t v50 = a2 + 56;
    id v51 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v37 = v6;
    id v38 = (void (**)(char *, char *, uint64_t))(v19 + 16);
    unint64_t v40 = (void (**)(char *, uint64_t))(v19 - 8);
    unint64_t v41 = (char *)v34 - v14;
    uint64_t v42 = v11;
    uint64_t v45 = v19;
    do
    {
      uint64_t v48 = v18;
      v44(v16, v43 + v47 * v18, v11);
      FMIPUnknownItem.identifier.getter();
      if (*(void *)(a2 + 16)
        && (sub_100045D0C((unint64_t *)&unk_1006C0B10, (void (*)(uint64_t))&type metadata accessor for UUID), v22 = dispatch thunk of Hashable._rawHashValue(seed:)(), uint64_t v23 = -1 << *(unsigned char *)(a2 + 32), v24 = v22 & ~v23, ((*(void *)(v50 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) != 0))
      {
        uint64_t v25 = ~v23;
        uint64_t v26 = *(void *)(v37 + 72);
        uint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
        while (1)
        {
          uint64_t v28 = a2;
          v27(v9, *(void *)(a2 + 48) + v26 * v24, v5);
          sub_100045D0C((unint64_t *)&unk_1006BEAD0, (void (*)(uint64_t))&type metadata accessor for UUID);
          char v29 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v30 = *v51;
          (*v51)(v9, v5);
          if (v29) {
            break;
          }
          unint64_t v24 = (v24 + 1) & v25;
          a2 = v28;
          if (((*(void *)(v50 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
            goto LABEL_3;
          }
        }
        v30(v52, v5);
        uint64_t v16 = v41;
        uint64_t v11 = v42;
        unint64_t v36 = *v38;
        v36(v39, v41, v42);
        uint64_t v31 = v53;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10013E6E0(0, *((void *)v31 + 2) + 1, 1);
          uint64_t v31 = v53;
        }
        a2 = v28;
        unint64_t v33 = *((void *)v31 + 2);
        unint64_t v32 = *((void *)v31 + 3);
        if (v33 >= v32 >> 1)
        {
          sub_10013E6E0(v32 > 1, v33 + 1, 1);
          uint64_t v31 = v53;
        }
        *((void *)v31 + 2) = v33 + 1;
        v36(&v31[v35 + v33 * v47], v39, v11);
        uint64_t v53 = v31;
      }
      else
      {
LABEL_3:
        (*v51)(v52, v5);
        uint64_t v16 = v41;
        uint64_t v11 = v42;
        (*v40)(v41, v42);
      }
      uint64_t v18 = v48 + 1;
    }
    while (v48 + 1 != v46);
    return v53;
  }
  return result;
}

uint64_t sub_1004DCC50(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v39 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v37 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for DispatchQoS();
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  unint64_t v35 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMFFriend();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_1000606BC(v13, (uint64_t)qword_1006D1E98);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  id v14 = a1;
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v34 = v6;
    uint64_t v18 = v17;
    uint64_t v30 = (void *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v40 = (uint64_t)v14;
    aBlock[0] = v33;
    *(_DWORD *)uint64_t v18 = 138412546;
    uint64_t v32 = v9;
    id v19 = v14;
    os_log_t v31 = v15;
    id v20 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v30 = v14;

    *(_WORD *)(v18 + 12) = 2080;
    uint64_t v21 = FMFFriend.debugDescription.getter();
    uint64_t v40 = sub_1000606F4(v21, v22, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v32);
    os_log_t v23 = v31;
    _os_log_impl((void *)&_mh_execute_header, v31, v16, "FMMapViewDataSource: didUpdate image %@ person %s", (uint8_t *)v18, 0x16u);
    sub_10005D034((uint64_t *)&unk_1006B5A50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v6 = v34;
    swift_slowDealloc();
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  unint64_t v24 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = (uint64_t)sub_1004DD6F8;
  aBlock[5] = v3;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10003C410;
  aBlock[3] = (uint64_t)&unk_100641BE8;
  uint64_t v25 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  uint64_t v26 = v35;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100045D0C((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  uint64_t v27 = v37;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v26, v38);
}

uint64_t sub_1004DD1F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v28 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v27 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1000606BC(v8, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain_n();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v24 = v1;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v25 = v5;
    aBlock[0] = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    v23[1] = v12 + 4;
    type metadata accessor for FMIPUnknownItem();
    swift_bridgeObjectRetain();
    uint64_t v14 = Array.description.getter();
    uint64_t v26 = v6;
    uint64_t v15 = v3;
    uint64_t v16 = v2;
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_1000606F4(v14, v18, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    uint64_t v2 = v16;
    uint64_t v3 = v15;
    uint64_t v6 = v26;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMMapViewDataSource: didDetect unknownItems %s", v12, 0xCu);
    swift_arrayDestroy();
    uint64_t v5 = v25;
    swift_slowDealloc();
    uint64_t v1 = v24;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  id v19 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = (uint64_t)sub_1004DD690;
  aBlock[5] = v1;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10003C410;
  aBlock[3] = (uint64_t)&unk_100641AD0;
  id v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  uint64_t v21 = v27;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100045D0C((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v21, v6);
}

uint64_t sub_1004DD690()
{
  return sub_1004C3EFC(v0);
}

uint64_t sub_1004DD698()
{
  return sub_100008C94((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004DD6B0()
{
  return sub_1004C23F8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1004DD6B8()
{
  return sub_100008C94((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004DD6D0()
{
  return sub_1004C25C8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1004DD6D8()
{
  return sub_100008C94((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004DD6F0()
{
  return sub_1004C1DE8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1004DD6F8()
{
  return sub_1004C40A8(v0);
}

uint64_t sub_1004DD700()
{
  uint64_t v1 = *(void *)(sub_10005D034((uint64_t *)&unk_1006AF710) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v5 = type metadata accessor for FMFLocation();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1004DD828()
{
  return sub_100008C94((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004DD840()
{
  return sub_1004D6314();
}

uint64_t sub_1004DD85C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004DD894()
{
  uint64_t v1 = type metadata accessor for FMIPUnknownItem();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1004DD9BC()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMIPUnknownItem() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + v3);
  uint64_t v8 = *(void *)(v0 + v4);
  uint64_t v9 = *(void *)(v0 + v5);
  uint64_t v10 = *(void *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_1004D3B6C(v6, v0 + v2, v7, v8, v9, v10);
}

uint64_t sub_1004DDA7C()
{
  return sub_10001032C((void (*)(void))&_swift_release);
}

uint64_t sub_1004DDA94(id *a1)
{
  return sub_1004D598C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1004DDAA8()
{
  return sub_10001032C((void (*)(void))&_swift_release);
}

uint64_t sub_1004DDAC0()
{
  return sub_1004D5FC4(v0[2], v0[3], v0[4]);
}

uint64_t sub_1004DDACC()
{
  return sub_100008C94((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004DDAE4()
{
  return sub_1004D1E30(*(void *)(v0 + 16));
}

uint64_t sub_1004DDAEC(uint64_t *a1)
{
  return sub_1004D21BC(a1, v1);
}

uint64_t sub_1004DDAF4(uint64_t *a1, uint64_t *a2)
{
  return sub_1004D261C(a1, a2, *(void *)(v2 + 16)) & 1;
}

void *sub_1004DDB14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMAnnotationIdentifier();
  __chkstk_darwin(v4);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v7 = objc_allocWithZone((Class)type metadata accessor for FMClusterAnnotation());
  unint64_t v8 = swift_bridgeObjectRetain();
  sub_1003FA2A0(v8);
  uint64_t v10 = v9;
  unint64_t v18 = v9;
  OS_dispatch_queue.sync<A>(execute:)();
  if (*(void *)(a2 + 16) && (unint64_t v11 = sub_1001B0040((uint64_t)v6), (v12 & 1) != 0))
  {
    id v13 = *(id *)(*(void *)(a2 + 56) + 8 * v11);
    sub_100057E74((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
    uint64_t v14 = swift_dynamicCastClass();
    if (v14)
    {
      uint64_t v15 = v14;
      sub_1003FA64C(a1);

      return (void *)v15;
    }
    else
    {
    }
  }
  else
  {
    sub_100057E74((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMAnnotationIdentifier);
  }
  return v10;
}

uint64_t sub_1004DDC98()
{
  return sub_1004DE650((void (*)(void))&_swift_release);
}

uint64_t sub_1004DDCB0()
{
  return sub_1004D3130(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1004DDCBC()
{
  uint64_t v1 = type metadata accessor for FMIPUnknownItem();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_1004DDDA4(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for FMIPUnknownItem() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  unint64_t v8 = *(void **)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_1004D6068(a1, v7, v2 + v6, v8, a2);
}

uint64_t sub_1004DDE54()
{
  uint64_t v1 = type metadata accessor for FMIPItem();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = *(void *)(v2 + 64);
  uint64_t v7 = v4 | 7;
  unint64_t v8 = (v4 + ((((((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v4;
  uint64_t v9 = v6 + v8 + 1;
  v3(v0 + v5, v1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v3(v0 + v8, v1);

  return _swift_deallocObject(v0, v9, v7);
}

uint64_t sub_1004DDF58()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMIPItem() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  unint64_t v5 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = (v2 + v7 + 8) & ~v2;
  uint64_t v9 = *(void *)(v0 + v5);
  uint64_t v10 = *(void *)(v0 + v6);
  uint64_t v11 = *(void *)(v0 + v7);
  int v12 = *(unsigned __int8 *)(v0 + v8 + v4);

  return sub_1004CF508(v0 + v3, v9, v10, v11, v0 + v8, v12);
}

uint64_t sub_1004DE014()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004DE064()
{
  return sub_1004CDA28(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1004DE074()
{
  return sub_1004DE650((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004DE08C()
{
  uint64_t v1 = type metadata accessor for FMFFriend();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + 7;
  unint64_t v7 = (v6 + v4) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v3 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v3;
  unint64_t v9 = (v6 + v8) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  unint64_t v10 = v0 + v4;
  uint64_t v11 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v11(v10, v1);

  swift_bridgeObjectRelease();
  v11(v0 + v8, v1);
  swift_release();

  return _swift_deallocObject(v0, v9 + 8, v5);
}

uint64_t sub_1004DE1BC()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMFFriend() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64) + 7;
  unint64_t v5 = (v4 + v3) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = (v2 + v6 + 8) & ~v2;
  uint64_t v8 = *(void *)(v0 + 16);
  unint64_t v9 = *(void **)(v0 + v5);
  uint64_t v10 = *(void *)(v0 + v6);
  uint64_t v11 = *(void *)(v0 + ((v4 + v7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1004CC4F4(v8, v0 + v3, v9, v10, v0 + v7, v11);
}

uint64_t sub_1004DE274()
{
  return sub_10001032C((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004DE28C()
{
  uint64_t v1 = type metadata accessor for FMIPDevice();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1004DE39C()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMIPDevice() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + v3);
  uint64_t v7 = *(void *)(v0 + v4);
  int64_t v8 = *(void *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_1004C8708(v5, v0 + v2, v6, v7, v8);
}

uint64_t sub_1004DE444()
{
  uint64_t v1 = type metadata accessor for FMIPDevice();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = *(void *)(v2 + 64);
  uint64_t v7 = v4 | 7;
  uint64_t v8 = (v6 + v4 + v5) & ~v4;
  unint64_t v9 = (((v6 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v3(v0 + v5, v1);
  v3(v0 + v8, v1);
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v9 + 8, v7);
}

uint64_t sub_1004DE534()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMIPDevice() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (v4 + v2 + v3) & ~v2;
  unint64_t v6 = (v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v0 + v6);
  uint64_t v8 = *(void *)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_1004C6BB4((char *)(v0 + v3), (char *)(v0 + v5), v7, v8);
}

uint64_t sub_1004DE5DC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004DE62C()
{
  return sub_1004C446C(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1004DE638()
{
  return sub_1004DE650((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004DE650(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));

  return _swift_deallocObject(v1, 32, 7);
}

uint64_t sub_1004DE698()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004DE6F0()
{
  return sub_100008C94((void (*)(void))&_swift_release);
}

uint64_t sub_1004DE708()
{
  return sub_1004C3C6C(*(void *)(v0 + 16));
}

uint64_t sub_1004DE710()
{
  return sub_100008C94((void (*)(void))&_swift_release);
}

uint64_t sub_1004DE728()
{
  return sub_1004C3504(*(void *)(v0 + 16));
}

uint64_t sub_1004DE730()
{
  return sub_100008C94((void (*)(void))&_swift_release);
}

uint64_t sub_1004DE748()
{
  return sub_1004C2D48(*(void *)(v0 + 16));
}

id sub_1004DE808()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentView];
  if (qword_1006AE228 != -1) {
    swift_once();
  }
  id v2 = [v0 traitCollection];
  id v3 = [v2 userInterfaceStyle];
  uint64_t v4 = self;
  uint64_t v5 = &selRef_tertiarySystemFillColor;
  if (v3 != (id)2) {
    uint64_t v5 = &selRef_whiteColor;
  }
  id v6 = [v4 *v5];

  [v1 setBackgroundColor:v6];
  id v7 = [v1 layer];
  [v7 setShouldRasterize:1];

  id v8 = [v1 layer];
  id v9 = [self mainScreen];
  [v9 scale];
  double v11 = v10;

  [v8 setRasterizationScale:v11];
  id v12 = [v1 layer];
  [v12 setCornerRadius:_UISheetCornerRadius];

  id v13 = [v1 layer];
  [v13 setMasksToBounds:0];

  id v14 = [v1 layer];
  uint64_t v15 = self;
  id v16 = [v15 blackColor];
  id v17 = [v16 CGColor];

  [v14 setShadowColor:v17];
  id v18 = [v1 layer];
  LODWORD(v19) = 1031127695;
  [v18 setShadowOpacity:v19];

  id v20 = [v1 layer];
  [v20 setShadowRadius:16.0];

  id v21 = [v1 layer];
  [v21 setShadowOffset:0.0, 0.0];

  uint64_t v30 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentStackView];
  [v30 setAxis:1];
  unint64_t v22 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_sectionLabel];
  os_log_t v23 = self;
  id v24 = [v23 preferredFontForTextStyle:UIFontTextStyleFootnote];
  [v22 setFont:v24];

  [v22 setNumberOfLines:0];
  id v25 = [v15 secondaryLabelColor];
  [v22 setTextColor:v25];

  [v22 setAdjustsFontForContentSizeCategory:1];
  uint64_t v26 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_footerLabel];
  id v27 = [v23 preferredFontForTextStyle:UIFontTextStyleFootnote];
  [v26 setFont:v27];

  [v26 setNumberOfLines:0];
  id v28 = [v15 secondaryLabelColor];
  [v26 setTextColor:v28];

  [v26 setAdjustsFontForContentSizeCategory:1];
  [v0 addSubview:v22];
  [v0 addSubview:v26];
  [v0 addSubview:v1];

  return [v0 addSubview:v30];
}

void sub_1004DECC8()
{
  uint64_t v1 = v0;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_sectionLabel];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentView];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentStackView];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v57 = *(id *)&v0[OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_footerLabel];
  [v57 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v5 = self;
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10055C1F0;
  id v7 = [v2 topAnchor];
  id v8 = [v1 topAnchor];
  if (qword_1006AE438 != -1) {
    swift_once();
  }
  id v9 = [v7 constraintEqualToAnchor:v8 constant:*((double *)&xmmword_1006D2800 + 1)];

  *(void *)(v6 + 32) = v9;
  id v10 = [v2 leadingAnchor];
  id v11 = [v1 leadingAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11];

  *(void *)(v6 + 40) = v12;
  id v13 = [v2 trailingAnchor];
  id v14 = [v1 trailingAnchor];
  if (qword_1006AE460 != -1) {
    swift_once();
  }
  if (qword_1006AE228 != -1) {
    swift_once();
  }
  id v15 = [v13 constraintEqualToAnchor:v14 constant:-*(double *)&qword_1006D20C8];

  *(void *)(v6 + 48) = v15;
  specialized Array._endMutation()();
  sub_10004FCE4();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v5 activateConstraints:isa];

  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_10055B950;
  id v18 = [v3 topAnchor];
  id v19 = [v4 topAnchor];
  id v20 = v5;
  id v56 = v5;
  id v21 = [v18 constraintEqualToAnchor:v19];

  *(void *)(v17 + 32) = v21;
  id v22 = [v3 leadingAnchor];
  id v23 = [v4 leadingAnchor];
  id v24 = [v22 constraintEqualToAnchor:v23 constant:-*(double *)&qword_1006D20C8];

  *(void *)(v17 + 40) = v24;
  id v25 = [v3 trailingAnchor];
  id v26 = [v4 trailingAnchor];
  id v27 = [v25 constraintEqualToAnchor:v26 constant:*(double *)&qword_1006D20C8];

  *(void *)(v17 + 48) = v27;
  id v28 = [v3 bottomAnchor];
  id v29 = [v4 bottomAnchor];
  id v30 = [v28 constraintEqualToAnchor:v29];

  *(void *)(v17 + 56) = v30;
  specialized Array._endMutation()();
  Class v31 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v20 activateConstraints:v31];

  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_10055B950;
  id v33 = [v4 topAnchor];
  id v34 = [v2 bottomAnchor];
  id v35 = [v33 constraintEqualToAnchor:v34 constant:*(double *)&qword_1006D2810];

  *(void *)(v32 + 32) = v35;
  id v36 = [v4 leadingAnchor];
  id v37 = [v1 leadingAnchor];
  id v38 = [v36 constraintEqualToAnchor:v37 constant:*(double *)&qword_1006D20C8];

  *(void *)(v32 + 40) = v38;
  id v39 = [v4 trailingAnchor];
  id v40 = [v1 trailingAnchor];
  id v41 = [v39 constraintEqualToAnchor:v40 constant:-*(double *)&qword_1006D20C8];

  *(void *)(v32 + 48) = v41;
  id v42 = [v4 bottomAnchor];
  id v43 = [v57 topAnchor];
  id v44 = [v42 constraintEqualToAnchor:v43 constant:-*(double *)&qword_1006D2818];

  *(void *)(v32 + 56) = v44;
  specialized Array._endMutation()();
  Class v45 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v56 activateConstraints:v45];

  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_10055C1F0;
  id v47 = [v57 leadingAnchor];
  id v48 = [v1 leadingAnchor];
  id v49 = [v47 constraintEqualToAnchor:v48];

  *(void *)(v46 + 32) = v49;
  id v50 = [v57 trailingAnchor];
  id v51 = [v1 trailingAnchor];
  id v52 = [v50 constraintEqualToAnchor:v51 constant:-*(double *)&qword_1006D20C8];

  *(void *)(v46 + 40) = v52;
  id v53 = [v57 bottomAnchor];
  id v54 = [v1 bottomAnchor];
  id v55 = [v53 constraintEqualToAnchor:v54];

  *(void *)(v46 + 48) = v55;
  specialized Array._endMutation()();
  Class v58 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v56 activateConstraints:v58];
}

double sub_1004DF574()
{
  double result = 2.0;
  xmmword_1006D2800 = xmmword_1005621A0;
  *(_OWORD *)&qword_1006D2810 = xmmword_10056A350;
  return result;
}

void *sub_1004DF594()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_sectionLabel;
  id v2 = objc_allocWithZone((Class)UILabel);
  id v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  uint64_t v4 = OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_footerLabel;
  *(void *)&v3[v4] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v5 = OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentStackView;
  *(void *)&v3[v5] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v6 = OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentView;
  *(void *)&v3[v6] = [objc_allocWithZone((Class)UIView) init];

  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for FMSectionPlatterGroupView();
  id v7 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v8 = *(void (**)(void))((swift_isaMask & *v7) + 0x70);
  id v9 = v7;
  v8();
  sub_1004DECC8();

  (*(void (**)(void))((swift_isaMask & *v9) + 0x80))();
  return v9;
}

void sub_1004DF748(uint64_t a1)
{
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for FMSectionPlatterGroupView();
  [super traitCollectionDidChange:a1];
  id v3 = *(void **)&v1[OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentView];
  if (qword_1006AE228 != -1) {
    swift_once();
  }
  id v4 = [v1 traitCollection];
  id v5 = [v4 userInterfaceStyle];
  uint64_t v6 = self;
  id v7 = &selRef_tertiarySystemFillColor;
  if (v5 != (id)2) {
    id v7 = &selRef_whiteColor;
  }
  id v8 = [v6 *v7];

  [v3 setBackgroundColor:v8];
}

id sub_1004DF8EC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMSectionPlatterGroupView();
  [super dealloc];
}

uint64_t type metadata accessor for FMSectionPlatterGroupView()
{
  return self;
}

void sub_1004DF9B0()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_sectionLabel;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v2 = OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_footerLabel;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v3 = OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentStackView;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v4 = OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentView;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UIView) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1004DFA98()
{
  sub_1004E7950();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

char *sub_1004DFB74(uint64_t a1, char a2)
{
  id v5 = objc_allocWithZone(v2);
  return sub_1004E0110(a1, a2);
}

double sub_1004DFBB8()
{
  double result = 8.0;
  xmmword_1006D2820 = xmmword_100561390;
  return result;
}

uint64_t sub_1004DFBCC(uint64_t a1)
{
  *(void *)(v1 + qword_1006C0C10) = a1;
  return swift_release();
}

uint64_t sub_1004DFBE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_1006C0C20;
  swift_beginAccess();
  return sub_100006AB0(v3, a1, &qword_1006C0D00);
}

uint64_t sub_1004DFC40(uint64_t a1)
{
  uint64_t v3 = v1 + qword_1006C0C20;
  swift_beginAccess();
  sub_1000AE7D4(a1, v3, &qword_1006C0D00);
  return swift_endAccess();
}

uint64_t (*sub_1004DFCA4())()
{
  return j__swift_endAccess;
}

uint64_t sub_1004DFD00()
{
  return *(unsigned __int8 *)(v0 + qword_1006C0C30);
}

id sub_1004DFD10()
{
  if (*(unsigned char *)(v0 + qword_1006C0C40))
  {
    uint64_t v1 = &qword_1006C0BF0;
LABEL_5:
    uint64_t v0 = *(void *)(v0 + *v1);
    uint64_t v2 = &OBJC_IVAR____TtC6FindMy15FMEmptyListView_scrollView;
    goto LABEL_7;
  }
  if (sub_1004E594C())
  {
    uint64_t v1 = &qword_1006C0BE8;
    goto LABEL_5;
  }
  uint64_t v2 = &qword_1006C0BF8;
LABEL_7:
  uint64_t v3 = *(void **)(v0 + *v2);

  return v3;
}

uint64_t sub_1004DFD8C()
{
  return *(unsigned __int8 *)(v0 + qword_1006C0C40);
}

void sub_1004DFD9C(char a1)
{
  *((unsigned char *)v1 + qword_1006C0C40) = a1;
  sub_1004E5E1C(*(void *)((char *)v1 + qword_1006C0BE0), *(void *)((swift_isaMask & *v1) + 0x78));
}

uint64_t sub_1004DFDDC(uint64_t result)
{
  if (*((unsigned char *)v1 + qword_1006C0C48) != (result & 1)) {
    return sub_1004E5E1C(*(void *)((char *)v1 + qword_1006C0BE0), *(void *)((swift_isaMask & *v1) + 0x78));
  }
  return result;
}

uint64_t sub_1004DFE40()
{
  return *(unsigned __int8 *)(v0 + qword_1006C0C48);
}

uint64_t sub_1004DFE50(char a1)
{
  uint64_t v2 = *(unsigned __int8 *)(v1 + qword_1006C0C48);
  *(unsigned char *)(v1 + qword_1006C0C48) = a1;
  return sub_1004DFDDC(v2);
}

uint64_t sub_1004DFE68()
{
  return *(unsigned __int8 *)(v0 + qword_1006D2838);
}

uint64_t sub_1004DFE78()
{
  return *(unsigned __int8 *)(v0 + qword_1006D2840);
}

void sub_1004DFE88(char a1)
{
  *(unsigned char *)(v1 + qword_1006D2840) = a1;
  sub_1004E693C();
}

uint64_t sub_1004DFE98()
{
  return *(unsigned __int8 *)(v0 + qword_1006D2848);
}

void sub_1004DFEA8(char a1)
{
  *(unsigned char *)(v1 + qword_1006D2848) = a1;
  sub_1004E693C();
}

void sub_1004DFEB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)((char *)v2 + qword_1006D2850);
  *uint64_t v3 = a1;
  v3[1] = a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)((char *)v2 + qword_1006C0BE0);
  uint64_t v5 = *(void *)((swift_isaMask & *v2) + 0x78);

  sub_1004E5E1C(v4, v5);
}

uint64_t sub_1004DFF28()
{
  uint64_t v1 = type metadata accessor for FMSelectedSection();
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)&v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = (uint64_t *)&v12[-v5];
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator);
  uint64_t v8 = *(void *)(v7 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_1004E7E60(v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    uint64_t v9 = *v6;
    sub_100083358(v6[1], v6[2]);
  }
  else
  {
    sub_1004E7EC8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    uint64_t v10 = *(void *)(v7 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess();
    sub_1004E7E60(v10, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      uint64_t v9 = *v4;
      sub_100083358(v4[1], v4[2]);
    }
    else
    {
      sub_1004E7EC8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
      return 0;
    }
  }
  return v9;
}

double sub_1004E00DC()
{
  [*(id *)(v0 + qword_1006C0C38) frame];
  return fabs(CGRectGetMinY(v2));
}

char *sub_1004E0110(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (void *)(swift_isaMask & *(void *)v2);
  uint64_t v7 = qword_1006C0C00;
  id v8 = objc_allocWithZone((Class)UILabel);
  uint64_t v9 = v3;
  *(void *)&v3[v7] = [v8 init];
  uint64_t v10 = qword_1006C0C08;
  *(void *)&v9[v10] = [objc_allocWithZone((Class)type metadata accessor for FMLoadingView()) init];
  *(void *)&v9[qword_1006C0C10] = 0;
  uint64_t v11 = qword_1006C0C18;
  id v12 = objc_allocWithZone((Class)type metadata accessor for FMExtendedPlatterInfoView());
  *(void *)&v9[v11] = sub_10033C758(1, 0);
  id v13 = &v9[qword_1006C0C20];
  uint64_t v14 = type metadata accessor for FMIPSeparationEvent();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = qword_1006C0C28;
  *(void *)&v9[v15] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v16 = qword_1006D2830;
  *(void *)&v9[v16] = [self buttonWithType:1];
  uint64_t v17 = qword_1006C0C38;
  *(void *)&v9[v17] = [objc_allocWithZone((Class)UIView) init];
  v9[qword_1006C0C40] = 0;
  v9[qword_1006C0C48] = 0;
  v9[qword_1006D2838] = 0;
  v9[qword_1006D2840] = 0;
  v9[qword_1006D2848] = 0;
  id v18 = &v9[qword_1006D2850];
  type metadata accessor for FMTableView();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  *(void *)id v18 = 0;
  *((void *)v18 + 1) = 0;
  id v20 = [objc_allocWithZone(ObjCClassFromMetadata) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v9[qword_1006C0BF8] = v20;
  uint64_t v21 = v6[12];
  uint64_t v22 = v6[15];
  id v23 = *(uint64_t (**)(uint64_t, id, uint64_t, uint64_t))(v22 + 96);
  swift_retain();
  *(void *)&v9[qword_1006C0BE0] = v23(a1, v20, v21, v22);
  v9[qword_1006C0C30] = a2;
  id v24 = *(uint64_t (**)(uint64_t))(v6[13] + 256);
  uint64_t v25 = swift_retain();
  *(void *)&v9[qword_1006C0BE8] = v24(v25);
  id v26 = *(uint64_t (**)(uint64_t))(v6[14] + 256);
  uint64_t v27 = swift_retain();
  *(void *)&v9[qword_1006C0BF0] = v26(v27);

  *(void *)&v9[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] = a1;
  v36.receiver = v9;
  v36.super_class = (Class)type metadata accessor for FMMediatedViewController();
  swift_retain();
  id v28 = [super initWithNibName:0 bundle:0];
  id v29 = *(void (**)(id, _UNKNOWN **, uint64_t, uint64_t))(v22 + 80);
  id v30 = (char *)v28;
  swift_unknownObjectRetain();
  v29(v28, &off_1006424F0, v21, v22);
  swift_unknownObjectRelease();
  Class v31 = *(void **)&v30[qword_1006C0BF0];
  uint64_t v32 = *(void (**)(id, _UNKNOWN **))((swift_isaMask & *v31) + 0x170);
  id v33 = v30;
  id v34 = v31;
  v32(v28, &off_1006424A0);

  swift_release();
  return v33;
}

void sub_1004E0540(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1004E7F28();
}

id sub_1004E0568()
{
  long long v3 = *(_OWORD *)((swift_isaMask & *v0) + 0x60);
  long long v4 = *(_OWORD *)((swift_isaMask & *v0) + 0x70);
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for FMSeparatedListViewController();
  [super viewDidLoad:v3, v4];
  sub_1004E14CC();
  sub_1004E40D8();
  sub_1004E1DD4();
  [*(id *)((char *)v0 + qword_1006D2830) setHidden:(*(unsigned char *)(*(void *)(*(void *)((char *)v0 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator) + 16)+ OBJC_IVAR____TtC6FindMy19FMConditionProvider_accountsAreSignedIn) & 1) == 0];
  uint64_t v1 = *(void **)((char *)v0 + qword_1006C0BF8);
  [v1 setDataSource:*(void *)((char *)v0 + qword_1006C0BE0)];
  [v1 setDelegate:v0];
  return [v1 setSectionHeaderTopPadding:0.0];
}

void sub_1004E068C(void *a1)
{
  id v1 = a1;
  sub_1004E0568();
}

uint64_t sub_1004E06D8(char a1)
{
  CGRect v2 = v1;
  uint64_t v4 = swift_isaMask & *(void *)v1;
  uint64_t v5 = v4;
  uint64_t v6 = sub_10005D034(&qword_1006C0D00);
  __chkstk_darwin(v6 - 8);
  id v34 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10005D034(&qword_1006AF770);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for IndexPath();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v33 - v16;
  uint64_t v18 = *(void *)(v4 + 112);
  uint64_t v19 = *(void *)(v4 + 120);
  long long v33 = *(_OWORD *)(v5 + 96);
  long long v35 = v33;
  uint64_t v36 = v18;
  uint64_t v37 = v19;
  id v20 = (objc_class *)type metadata accessor for FMSeparatedListViewController();
  v38.receiver = v2;
  v38.super_class = v20;
  [super viewWillAppear:a1 & 1];
  uint64_t v21 = *(void **)&v2[qword_1006C0BF8];
  id v22 = [v21 indexPathForSelectedRow];
  if (v22)
  {
    id v23 = v22;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

    id v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v24(v10, v15, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      v24(v17, v10, v11);
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      [v21 deselectRowAtIndexPath:isa animated:1];

      [v21 setContentOffset:0, 0.0, 0.0];
      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
      goto LABEL_6;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  sub_100003F10((uint64_t)v10, &qword_1006AF770);
LABEL_6:
  uint64_t v26 = *(void *)&v2[qword_1006C0BE0];
  uint64_t v27 = v33;
  if ((*(uint64_t (**)(void, uint64_t))(v19 + 56))(v33, v19))
  {
    id v28 = *(char **)&v2[qword_1006C0C08];
    [v28 setUserInteractionEnabled:0];
    [v28 setHidden:1];
    id v29 = &selRef_stopAnimating;
  }
  else
  {
    if ((*(uint64_t (**)(void))((swift_isaMask & **(void **)&v2[qword_1006C0BF0]) + 0x180))()) {
      goto LABEL_11;
    }
    id v28 = *(char **)&v2[qword_1006C0C08];
    [v28 setUserInteractionEnabled:1];
    [v28 setHidden:0];
    id v29 = &selRef_startAnimating;
  }
  [*(id *)&v28[OBJC_IVAR____TtC6FindMy13FMLoadingView_activityIndicator] *v29];
LABEL_11:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 40))(1, v27, v19);
  sub_10003356C();
  sub_1004E1210();
  sub_1004E5E1C(v26, v19);
  if (sub_1004DFF28()) {
    swift_bridgeObjectRelease();
  }
  uint64_t v30 = (uint64_t)v34;
  FMIPSeparationEvent.init(itemOrDeviceCount:addSafeLocationTapped:addToAllTapped:homeRemoved:)();
  uint64_t v31 = type metadata accessor for FMIPSeparationEvent();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
  return sub_1004DFC40(v30);
}

void sub_1004E0C04(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_1004E06D8(a3);
}

uint64_t sub_1004E0C58(char a1)
{
  CGRect v2 = v1;
  uint64_t v4 = swift_isaMask & *v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_10005D034(&qword_1006C0D00);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMIPSeparationEvent();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v4 + 112);
  uint64_t v14 = *(void *)(v4 + 120);
  v18[0] = *(_OWORD *)(v5 + 96);
  v18[1] = v18[0];
  uint64_t v19 = v13;
  uint64_t v20 = v14;
  uint64_t v15 = (objc_class *)type metadata accessor for FMSeparatedListViewController();
  v21.receiver = v2;
  v21.super_class = v15;
  [super viewWillDisappear:a1 & 1];
  (*(void (**)(void, void, uint64_t))(v14 + 40))(0, *(void *)&v18[0], v14);
  sub_1002EAAA4();
  sub_1004E12D8();
  uint64_t v16 = (uint64_t)v2 + qword_1006C0C20;
  swift_beginAccess();
  sub_100006AB0(v16, (uint64_t)v8, &qword_1006C0D00);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100003F10((uint64_t)v8, &qword_1006C0D00);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  swift_retain();
  FMIPManager.enqueue(separationEvent:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_1004E0F0C(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_1004E0C58(a3);
}

void sub_1004E0F60(uint64_t a1)
{
  CGRect v2 = v1;
  long long v16 = *(_OWORD *)((swift_isaMask & *v2) + 0x60);
  long long v17 = *(_OWORD *)((swift_isaMask & *v2) + 0x70);
  v18.receiver = v2;
  v18.super_class = (Class)type metadata accessor for FMSeparatedListViewController();
  [super traitCollectionDidChange:a1, v16, v17];
  id v4 = [v2 traitCollection];
  id v5 = [v4 horizontalSizeClass];

  if ((unint64_t)v5 >= 2)
  {
    if (v5 == (id)2)
    {
      if (qword_1006AE170 != -1) {
        swift_once();
      }
      double right = *(double *)&qword_1006D1D98;
      double bottom = 0.0;
      double left = *(double *)&qword_1006D1D98;
      double top = 0.0;
    }
    else
    {
      if (qword_1006AE190 != -1) {
        swift_once();
      }
      double top = UIEdgeInsetsZero.top;
      double left = UIEdgeInsetsZero.left;
      double bottom = UIEdgeInsetsZero.bottom;
      double right = UIEdgeInsetsZero.right;
      uint64_t v10 = type metadata accessor for Logger();
      sub_1000606BC(v10, (uint64_t)qword_1006D1E98);
      uint64_t v11 = Logger.logObject.getter();
      os_log_type_t v12 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v13 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMListViewController: unhandled trait collection size class", v13, 2u);
        swift_slowDealloc();
      }
    }
  }
  else
  {
    double top = UIEdgeInsetsZero.top;
    double left = UIEdgeInsetsZero.left;
    double bottom = UIEdgeInsetsZero.bottom;
    double right = UIEdgeInsetsZero.right;
  }
  id v14 = [v2 view];
  if (v14)
  {
    uint64_t v15 = v14;
    [v14 setLayoutMargins:top, left, bottom, right];
  }
  else
  {
    __break(1u);
  }
}

void sub_1004E11A4(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  sub_1004E0F60((uint64_t)a3);
}

uint64_t sub_1004E1210()
{
  id v1 = *(id *)(*(void *)(v0 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator) + 16);
  uint64_t v2 = type metadata accessor for FMSeparatedListViewController();
  uint64_t v3 = sub_1000336B0(v0, (uint64_t)v1, v2, (uint64_t)&off_100642420);

  *(void *)(v0 + qword_1006C0C10) = v3;
  return swift_release();
}

void sub_1004E12D8()
{
  uint64_t v1 = *(void *)(v0 + qword_1006C0C10);
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = *(char **)(*(void *)(v0 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator) + 16);
    id v4 = (uint64_t *)&v3[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
    swift_beginAccess();
    swift_retain();
    id v5 = v3;
    uint64_t v6 = sub_10006782C(v4, v1);
    uint64_t v7 = v6;
    if ((unint64_t)*v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v8 >= v7) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v8 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v8 >= v6)
      {
LABEL_4:
        sub_1000675DC(v7, v8);
        swift_endAccess();

        *(void *)(v2 + qword_1006C0C10) = 0;
        swift_release();
        swift_release();
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1004E1408()
{
  return (*(uint64_t (**)(void))(*(void *)((swift_isaMask & *v0) + 0x78) + 144))(*(void *)((swift_isaMask & *v0) + 0x60));
}

void sub_1004E1484(void *a1)
{
  id v1 = a1;
  sub_1004E1408();
}

void sub_1004E14CC()
{
  id v1 = v0;
  uint64_t v2 = swift_isaMask & *(void *)v0;
  uint64_t v3 = sub_10005D034((uint64_t *)&unk_1006C0CE0);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v66 = *(id *)&v1[qword_1006C0BE8];
  [v66 setHidden:1];
  uint64_t v6 = *(void **)&v1[qword_1006D2830];
  LODWORD(v7) = 1148846080;
  [v6 setContentHuggingPriority:0 forAxis:v7];
  uint64_t v8 = *(void *)(v2 + 120);
  uint64_t v9 = *(void *)(v2 + 96);
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v9, v8);
  if (v10)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v11 = 0;
  }
  [v6 setTitle:v11 forState:0];

  uint64_t v65 = v6;
  [v6 addTarget:v1 action:"handleAction" forControlEvents:64];
  os_log_type_t v12 = *(void **)&v1[qword_1006C0C00];
  id v13 = [self preferredFontForTextStyle:UIFontTextStyleTitle2];
  id v14 = (void *)sub_100042318(0x8000);

  uint64_t v15 = (void *)sub_100042318(2);
  [v12 setFont:v15];

  [v12 setNumberOfLines:1];
  id v68 = self;
  id v16 = [v68 labelColor];
  [v12 setTextColor:v16];

  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v9, v8);
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v12 setText:v17];

  [v12 setAdjustsFontForContentSizeCategory:1];
  [v12 setAccessibilityTraits:UIAccessibilityTraitHeader];
  LODWORD(v18) = 1148846080;
  unint64_t v67 = v12;
  [v12 setContentCompressionResistancePriority:1 forAxis:v18];
  [*(id *)&v1[qword_1006C0C18] setUserInteractionEnabled:1];
  uint64_t v19 = *(void **)&v1[qword_1006C0C18];
  uint64_t v20 = type metadata accessor for FMPlatterIcon();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v5, 0, 1, v20);
  id v21 = v19;
  sub_10033C22C((uint64_t)v5);

  id v22 = *(void **)&v1[qword_1006C0C18];
  id v23 = self;
  id v24 = v22;
  id v25 = [v23 mainBundle];
  v26._countAndFlagsBits = 0xD000000000000024;
  v69._object = (void *)0x8000000100582B40;
  v26._object = (void *)0x800000010058B9B0;
  v27.value._countAndFlagsBits = 0xD000000000000016;
  v27.value._object = (void *)0x8000000100582B20;
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  v69._countAndFlagsBits = 0xD00000000000001BLL;
  Swift::String v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, v27, (NSBundle)v25, v28, v69);

  uint64_t v30 = (Swift::String *)&v24[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle];
  *uint64_t v30 = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void **)&v24[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionLabel];
  if (v30->_object)
  {
    swift_bridgeObjectRetain();
    NSString v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v32 = 0;
  }
  [v31 setText:v32];

  long long v33 = (char *)*(id *)&v1[qword_1006C0C18];
  id v34 = [v23 mainBundle];
  v35._countAndFlagsBits = 0xD000000000000020;
  v70._object = (void *)0x8000000100582B40;
  v35._object = (void *)0x800000010058B9E0;
  v36.value._countAndFlagsBits = 0xD000000000000016;
  v36.value._object = (void *)0x8000000100582B20;
  v37._countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  v70._countAndFlagsBits = 0xD00000000000001BLL;
  Swift::String v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(v35, v36, (NSBundle)v34, v37, v70);

  id v39 = (Swift::String *)&v33[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle];
  *id v39 = v38;
  swift_bridgeObjectRelease();
  id v40 = *(void **)&v33[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitleLabel];
  if (v39->_object)
  {
    swift_bridgeObjectRetain();
    NSString v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v41 = 0;
  }
  [v40 setText:v41];

  id v42 = *(unsigned char **)&v1[qword_1006C0C18];
  v42[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed] = 0;
  id v43 = v42;
  sub_10033C3EC();

  [*(id *)&v1[qword_1006C0C28] setAxis:1];
  [*(id *)&v1[qword_1006C0C28] setAlignment:0];
  [*(id *)&v1[qword_1006C0C28] setDistribution:3];
  [*(id *)&v1[qword_1006C0C28] insertArrangedSubview:*(void *)&v1[qword_1006C0C18] atIndex:0];
  id v44 = *(void **)&v1[qword_1006C0BF8];
  id v45 = v68;
  id v46 = [v68 clearColor];
  [v44 setBackgroundColor:v46];

  [v44 setSeparatorStyle:0];
  [v44 setRowHeight:UITableViewAutomaticDimension];
  if (qword_1006AE170 != -1) {
    swift_once();
  }
  [v44 setEstimatedRowHeight:*((double *)&xmmword_1006D1D70 + 1)];
  [v44 setContentInset:0.0, 0.0, *(double *)&qword_1006D1D80, 0.0];
  id v47 = *(void **)&v1[qword_1006C0C38];
  id v48 = [v45 quaternaryLabelColor];
  [v47 setBackgroundColor:v48];

  id v49 = [v1 view];
  if (!v49)
  {
    __break(1u);
    goto LABEL_22;
  }
  id v50 = v49;
  [v49 addSubview:*(void *)&v1[qword_1006C0C28]];

  id v51 = [v1 view];
  if (!v51)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v52 = v51;
  [v51 addSubview:v44];

  id v53 = [v1 view];
  if (!v53)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  id v54 = v53;
  [v53 addSubview:v67];

  id v55 = [v1 view];
  if (!v55)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v56 = v55;
  [v55 addSubview:v47];

  id v57 = [v1 view];
  if (!v57)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  Class v58 = v57;
  [v57 addSubview:v66];

  id v59 = [v1 view];
  if (!v59)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v60 = v59;
  [v59 addSubview:*(void *)&v1[qword_1006C0C08]];

  id v61 = [v1 view];
  if (!v61)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  BOOL v62 = v61;
  [v61 addSubview:v65];

  id v63 = [v1 view];
  if (v63)
  {
    unint64_t v64 = v63;
    [v63 addSubview:*(void *)&v1[qword_1006C0BF0]];

    return;
  }
LABEL_28:
  __break(1u);
}

void sub_1004E1DD4()
{
  uint64_t v1 = swift_isaMask & *v0;
  id v2 = objc_allocWithZone((Class)UITapGestureRecognizer);
  long long v4 = *(_OWORD *)(v1 + 96);
  long long v5 = *(_OWORD *)(v1 + 112);
  type metadata accessor for FMSeparatedListViewController();
  id v3 = [_bridgeAnythingToObjectiveC<A>(_:)() initWithTarget:_bridgeAnythingToObjectiveC<A>(_:)() action:@"handleSeparation" v4, v5];
  swift_unknownObjectRelease();
  [*(id *)((char *)v0 + qword_1006C0C18) addGestureRecognizer:v3];
}

void sub_1004E1EBC()
{
  uint64_t v1 = v0;
  id v2 = sub_1004DFCA4();
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for FMIPSeparationEvent();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5)) {
    FMIPSeparationEvent.addSafeLocationTapped.setter();
  }
  ((void (*)(void ***, void))v2)(&aBlock, 0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000606BC(v6, (uint64_t)qword_1006D1E98);
  double v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "FMItemDetailContentViewController: Left Behind Button Toggled", v9, 2u);
    swift_slowDealloc();
  }

  uint64_t v10 = self;
  id v53 = v10;
  id v11 = [v10 mainBundle];
  v12._countAndFlagsBits = 0xD00000000000002ALL;
  v63._object = (void *)0x8000000100582B40;
  v12._object = (void *)0x800000010058BCE0;
  v13.value._countAndFlagsBits = 0xD000000000000016;
  v13.value._object = (void *)0x8000000100582B20;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v63._countAndFlagsBits = 0xD00000000000001BLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v63);

  sub_10005D034((uint64_t *)&unk_1006AF790);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_10055B970;
  uint64_t v16 = *(void *)&v1[qword_1006D2850];
  unint64_t v17 = *(void *)&v1[qword_1006D2850 + 8];
  *(void *)(v15 + 56) = &type metadata for String;
  *(void *)(v15 + 64) = sub_10007F2C8();
  if (v17) {
    uint64_t v18 = v16;
  }
  else {
    uint64_t v18 = 0;
  }
  unint64_t v19 = 0xE000000000000000;
  if (v17) {
    unint64_t v19 = v17;
  }
  *(void *)(v15 + 32) = v18;
  *(void *)(v15 + 40) = v19;
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  id v20 = [v10 mainBundle];
  v21._countAndFlagsBits = 0xD00000000000002DLL;
  v64._object = (void *)0x8000000100582B40;
  v21._object = (void *)0x800000010058BD10;
  v22.value._countAndFlagsBits = 0xD000000000000016;
  v22.value._object = (void *)0x8000000100582B20;
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v64._countAndFlagsBits = 0xD00000000000001BLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v64);

  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v1;
  id v25 = v1;
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v61 = (uint64_t (*)())sub_1004E7D50;
  uint64_t v62 = v24;
  uint64_t aBlock = _NSConcreteStackBlock;
  unint64_t v58 = 1107296256;
  id v59 = sub_10000841C;
  unint64_t v60 = &unk_1006425A0;
  Swift::String_optional v27 = _Block_copy(&aBlock);
  swift_release();
  id v54 = self;
  id v55 = [v54 actionWithTitle:v26 style:0 handler:v27];
  _Block_release(v27);

  id v28 = [v53 mainBundle];
  v29._countAndFlagsBits = 0xD000000000000030;
  v65._object = (void *)0x8000000100582B40;
  v29._object = (void *)0x800000010058BD40;
  v30.value._countAndFlagsBits = 0xD000000000000016;
  v30.value._object = (void *)0x8000000100582B20;
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  v65._countAndFlagsBits = 0xD00000000000001BLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v29, v30, (NSBundle)v28, v31, v65);

  NSString v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v34 = [self alertControllerWithTitle:v32 message:v33 preferredStyle:1];

  [v34 addAction:v55];
  if (v25[qword_1006C0C30]) {
    uint64_t v35 = 0xD000000000000035;
  }
  else {
    uint64_t v35 = 0xD000000000000033;
  }
  if (v25[qword_1006C0C30]) {
    Swift::String_optional v36 = (void *)0x800000010059FDD0;
  }
  else {
    Swift::String_optional v36 = (void *)0x800000010059FD90;
  }
  id v37 = [v53 mainBundle];
  v66._object = (void *)0x8000000100582B40;
  v38._countAndFlagsBits = v35;
  v38._object = v36;
  v39.value._countAndFlagsBits = 0xD000000000000016;
  v39.value._object = (void *)0x8000000100582B20;
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  v66._countAndFlagsBits = 0xD00000000000001BLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v38, v39, (NSBundle)v37, v40, v66);
  swift_bridgeObjectRelease();

  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_10055B970;
  id v42 = [*(id *)&v25[qword_1006C0BE0] tableView:*(void *)&v25[qword_1006C0BF8] numberOfRowsInSection:0];
  *(void *)(v41 + 56) = &type metadata for Int;
  *(void *)(v41 + 64) = &protocol witness table for Int;
  *(void *)(v41 + 32) = v42;
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v25;
  id v56 = v25;
  NSString v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v61 = (uint64_t (*)())sub_1004E7D90;
  uint64_t v62 = v43;
  uint64_t aBlock = _NSConcreteStackBlock;
  unint64_t v58 = 1107296256;
  id v59 = sub_10000841C;
  unint64_t v60 = &unk_1006425F0;
  id v45 = _Block_copy(&aBlock);
  swift_release();
  id v46 = [v54 actionWithTitle:v44 style:0 handler:v45];
  _Block_release(v45);

  [v34 addAction:v46];
  uint64_t aBlock = 0;
  unint64_t v58 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v47 = [v53 mainBundle];
  v48._countAndFlagsBits = 0xD000000000000013;
  v67._countAndFlagsBits = 0xD000000000000025;
  v67._object = (void *)0x8000000100580D10;
  v48._object = (void *)0x8000000100580CF0;
  v49._countAndFlagsBits = 0;
  v49._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v48, (Swift::String_optional)0, (NSBundle)v47, v49, v67);

  NSString v50 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v61 = State.rawValue.getter;
  uint64_t v62 = 0;
  uint64_t aBlock = _NSConcreteStackBlock;
  unint64_t v58 = 1107296256;
  id v59 = sub_10000841C;
  unint64_t v60 = &unk_100642618;
  id v51 = _Block_copy(&aBlock);
  swift_release();
  id v52 = [v54 actionWithTitle:v50 style:1 handler:v51];
  _Block_release(v51);

  [v34 addAction:v52];
  [v56 presentViewController:v34 animated:1 completion:0];
}

uint64_t sub_1004E2738(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  id v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  aBlock[4] = sub_1004E7DE4;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_100642730;
  Swift::String_optional v13 = _Block_copy(aBlock);
  id v14 = a2;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10005FE54();
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_10005ECA8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1004E29C4(char *a1)
{
  uint64_t v2 = sub_10005D034((uint64_t *)&unk_1006BEB20);
  __chkstk_darwin(v2 - 8);
  Swift::String v49 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FMIPSafeLocation();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v50 = v4;
  uint64_t v51 = v5;
  __chkstk_darwin(v4);
  id v47 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10005D034((uint64_t *)&unk_1006B1760);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMPendingActionInfo(0);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  Swift::String_optional v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v48 = a1;
  uint64_t v18 = *(void *)(*(void *)&a1[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] + 56)
      + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingActionInfo;
  swift_beginAccess();
  sub_1004E7E60(v18, (uint64_t)v13, type metadata accessor for FMPendingActionInfo);
  sub_100006AB0((uint64_t)&v13[*(int *)(v11 + 32)], (uint64_t)v9, (uint64_t *)&unk_1006B1760);
  sub_1004E7EC8((uint64_t)v13, type metadata accessor for FMPendingActionInfo);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14) == 1)
  {
    unint64_t v19 = (uint64_t *)&unk_1006B1760;
    uint64_t v20 = (uint64_t)v9;
LABEL_8:
    sub_100003F10(v20, v19);
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v31 = type metadata accessor for Logger();
    sub_1000606BC(v31, (uint64_t)qword_1006D1E98);
    NSString v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, v33))
    {
      id v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "FMItemDetailContentViewController: No pending safe location", v34, 2u);
      swift_slowDealloc();
    }

    return;
  }
  Swift::String v21 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v45 = v14;
  v21(v17, v9, v14);
  swift_retain();
  id v46 = v17;
  uint64_t v22 = UUID.uuidString.getter();
  uint64_t v24 = v23;
  uint64_t v25 = FMIPManager.safeLocations.getter();
  swift_bridgeObjectRetain();
  NSString v26 = sub_1004E7A8C(v25, v22, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)v26 + 2))
  {
    uint64_t v28 = v50;
    uint64_t v27 = v51;
    Swift::String v29 = v49;
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v49, &v26[(*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80)], v50);
    uint64_t v30 = 0;
  }
  else
  {
    uint64_t v30 = 1;
    uint64_t v28 = v50;
    uint64_t v27 = v51;
    Swift::String v29 = v49;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v29, v30, 1, v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v29, 1, v28) == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v46, v45);
    unint64_t v19 = (uint64_t *)&unk_1006BEB20;
    uint64_t v20 = (uint64_t)v29;
    goto LABEL_8;
  }
  uint64_t v35 = (uint64_t)v47;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v47, v29, v28);
  Swift::String_optional v36 = v48;
  id v37 = sub_1004DFCA4();
  uint64_t v39 = v38;
  uint64_t v40 = type metadata accessor for FMIPSeparationEvent();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v39, 1, v40)) {
    FMIPSeparationEvent.addToAllTapped.setter();
  }
  ((void (*)(char *, void))v37)(v52, 0);
  uint64_t v41 = v46;
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = v36;
  id v43 = v36;
  sub_1004E70A4(v35, 1, (uint64_t)sub_1004E7DEC, v42);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v35, v28);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v41, v45);
}

void sub_1004E2FC8(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  aBlock[4] = sub_1004E7D98;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_100642668;
  uint64_t v12 = _Block_copy(aBlock);
  Swift::String_optional v13 = a2;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10005FE54();
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_10005ECA8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
  v13[qword_1006D2848] = 1;
  sub_1004E693C();
}

void sub_1004E3270(char *a1)
{
  uint64_t v2 = sub_10005D034((uint64_t *)&unk_1006BEB20);
  __chkstk_darwin(v2 - 8);
  uint64_t v40 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FMIPSafeLocation();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  __chkstk_darwin(v4);
  uint64_t v38 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10005D034((uint64_t *)&unk_1006B1760);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMPendingActionInfo(0);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = a1;
  uint64_t v17 = *(void *)(*(void *)&a1[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] + 56)
      + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingActionInfo;
  swift_beginAccess();
  sub_1004E7E60(v17, (uint64_t)v12, type metadata accessor for FMPendingActionInfo);
  sub_100006AB0((uint64_t)&v12[*(int *)(v10 + 32)], (uint64_t)v8, (uint64_t *)&unk_1006B1760);
  sub_1004E7EC8((uint64_t)v12, type metadata accessor for FMPendingActionInfo);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13) == 1)
  {
    uint64_t v18 = (uint64_t *)&unk_1006B1760;
    uint64_t v19 = (uint64_t)v8;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v8, v13);
    swift_retain();
    uint64_t v20 = UUID.uuidString.getter();
    uint64_t v22 = v21;
    uint64_t v23 = FMIPManager.safeLocations.getter();
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1004E7A8C(v23, v20, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)v24 + 2))
    {
      uint64_t v25 = v40;
      uint64_t v26 = v41;
      uint64_t v27 = v42;
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v40, &v24[(*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80)], v42);
      uint64_t v28 = 0;
    }
    else
    {
      uint64_t v28 = 1;
      uint64_t v26 = v41;
      uint64_t v27 = v42;
      uint64_t v25 = v40;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v25, v28, 1, v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v25, 1, v27) != 1)
    {
      uint64_t v33 = (uint64_t)v38;
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v38, v25, v27);
      uint64_t v34 = swift_allocObject();
      uint64_t v35 = v39;
      *(void *)(v34 + 16) = v39;
      id v36 = v35;
      sub_1004E70A4(v33, 0, (uint64_t)sub_1004E7DA0, v34);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v33, v27);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      return;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v18 = (uint64_t *)&unk_1006BEB20;
    uint64_t v19 = (uint64_t)v25;
  }
  sub_100003F10(v19, v18);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v29 = type metadata accessor for Logger();
  sub_1000606BC(v29, (uint64_t)qword_1006D1E98);
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v30, v31))
  {
    NSString v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSString v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "FMItemDetailContentViewController: No pending safe location", v32, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_1004E37F0(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v26 = a5;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
    uint64_t v25 = static OS_dispatch_queue.main.getter();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a2;
    aBlock[4] = a4;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003C410;
    aBlock[3] = v26;
    uint64_t v17 = _Block_copy(aBlock);
    id v18 = a2;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10005FE54();
    sub_10005D034((uint64_t *)&unk_1006AE4B0);
    sub_10005ECA8();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v19 = (void *)v25;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_1000606BC(v21, (uint64_t)qword_1006D1E98);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "FMSeparatedListViewController: Add Safe Location failed", v24, 2u);
      swift_slowDealloc();
    }

    return sub_1004E3B84();
  }
}

void sub_1004E3B3C(void *a1)
{
  id v1 = a1;
  sub_1004E1EBC();
}

uint64_t sub_1004E3B84()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v9 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v0;
  aBlock[4] = sub_1004E7D48;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_100642550;
  uint64_t v11 = _Block_copy(aBlock);
  id v12 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10005FE54();
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_10005ECA8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1004E3E10(void *a1)
{
  uint64_t v1 = self;
  id v2 = [v1 mainBundle];
  v3._countAndFlagsBits = 0xD00000000000001ELL;
  v20._object = (void *)0x8000000100582B40;
  v3._object = (void *)0x800000010058BDC0;
  v4.value._countAndFlagsBits = 0xD000000000000016;
  v4.value._object = (void *)0x8000000100582B20;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v20._countAndFlagsBits = 0xD00000000000001BLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v20);

  id v6 = [v1 mainBundle];
  v7._countAndFlagsBits = 0xD00000000000002ALL;
  v21._object = (void *)0x8000000100582B40;
  v7._object = (void *)0x800000010058BDE0;
  v8.value._countAndFlagsBits = 0xD000000000000016;
  v8.value._object = (void *)0x8000000100582B20;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v21._countAndFlagsBits = 0xD00000000000001BLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v21);

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v10 = [v1 mainBundle];
  v22._countAndFlagsBits = 0xD000000000000021;
  v22._object = (void *)0x800000010057F840;
  v11._countAndFlagsBits = 0x4F545455425F4B4FLL;
  v11._object = (void *)0xEF454C5449545F4ELL;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v22);

  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v15 = [self alertControllerWithTitle:v13 message:v14 preferredStyle:1];

  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v18 = [self actionWithTitle:v16 style:0 handler:0];

  [v15 addAction:v18];
  [a1 presentViewController:v15 animated:1 completion:0];
}

void sub_1004E40D8()
{
  uint64_t v1 = v0;
  if (qword_1006AE170 != -1) {
    swift_once();
  }
  double v2 = *(double *)&qword_1006D1D88;
  double v3 = unk_1006D1D90;
  id v153 = *(id *)&v0[qword_1006C0BE8];
  [v153 setTranslatesAutoresizingMaskIntoConstraints:0];
  Swift::String_optional v4 = *(void **)&v0[qword_1006C0BF8];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v154 = *(id *)&v0[qword_1006C0C38];
  [v154 setTranslatesAutoresizingMaskIntoConstraints:0];
  Swift::String v5 = *(void **)&v0[qword_1006C0C00];
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v6 = *(void **)&v0[qword_1006D2830];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v152 = *(id *)&v0[qword_1006C0C08];
  [v152 setTranslatesAutoresizingMaskIntoConstraints:0];
  Swift::String v7 = *(void **)&v0[qword_1006C0BF0];
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v0[qword_1006C0C28] setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10055C1E0;
  id v9 = [v5 topAnchor];
  id v10 = [v1 view];
  if (!v10)
  {
    __break(1u);
    goto LABEL_28;
  }
  Swift::String v11 = v10;
  id v155 = v6;
  id v151 = v7;
  id v12 = [v10 topAnchor];

  id v13 = [v9 constraintEqualToAnchor:v12 constant:v3];
  *(void *)(v8 + 32) = v13;
  id v14 = [v5 leadingAnchor];
  id v15 = [v1 view];
  if (!v15)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  NSString v16 = v15;
  uint64_t v17 = self;
  id v18 = [v16 layoutMarginsGuide];

  id v19 = [v18 leadingAnchor];
  id v20 = [v14 constraintEqualToAnchor:v19 constant:0.0];

  *(void *)(v8 + 40) = v20;
  specialized Array._endMutation()();
  sub_100006060(0, (unint64_t *)&qword_1006AEE60);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v156 = v17;
  [v17 activateConstraints:isa];

  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_10055C1F0;
  id v23 = [v155 leadingAnchor];
  id v24 = [v5 trailingAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24 constant:v2];

  *(void *)(v22 + 32) = v25;
  id v26 = [v155 centerYAnchor];
  id v27 = [v5 centerYAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27];

  *(void *)(v22 + 40) = v28;
  id v29 = [v155 trailingAnchor];
  id v30 = [v1 view];
  if (!v30)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  os_log_type_t v31 = v30;
  id v32 = [v30 layoutMarginsGuide];

  id v33 = [v32 trailingAnchor];
  id v34 = [v29 constraintEqualToAnchor:v33 constant:0.0];

  *(void *)(v22 + 48) = v34;
  specialized Array._endMutation()();
  Class v35 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v156 activateConstraints:v35];

  id v36 = [v154 topAnchor];
  id v37 = [v5 bottomAnchor];
  id v38 = [v36 constraintEqualToAnchor:v37 constant:v2];

  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_10055B950;
  *(void *)(v39 + 32) = v38;
  id v150 = v38;
  id v40 = [v154 leadingAnchor];
  id v41 = [v1 view];
  if (!v41)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v42 = v41;
  id v43 = [v41 leadingAnchor];

  id v44 = [v40 constraintEqualToAnchor:v43];
  *(void *)(v39 + 40) = v44;
  id v45 = [v154 trailingAnchor];
  id v46 = [v1 view];
  if (!v46)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  id v47 = v46;
  id v48 = [v46 trailingAnchor];

  id v49 = [v45 constraintEqualToAnchor:v48];
  *(void *)(v39 + 48) = v49;
  id v50 = [v154 heightAnchor];
  id v51 = [self mainScreen];
  [v51 scale];
  double v53 = v52;

  id v54 = [v50 constraintEqualToConstant:1.0 / v53];
  *(void *)(v39 + 56) = v54;
  specialized Array._endMutation()();
  Class v55 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v156 activateConstraints:v55];

  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_10055C1F0;
  id v57 = [*(id *)&v1[qword_1006C0C28] topAnchor];
  id v58 = [v154 bottomAnchor];
  if (qword_1006AE440 != -1) {
    swift_once();
  }
  id v59 = [v57 constraintEqualToAnchor:v58 constant:*(double *)&xmmword_1006D2820];

  *(void *)(v56 + 32) = v59;
  id v60 = [*(id *)&v1[qword_1006C0C28] leadingAnchor];
  id v61 = [v1 view];
  if (!v61) {
    goto LABEL_32;
  }
  uint64_t v62 = v61;
  id v63 = [v61 layoutMarginsGuide];

  id v64 = [v63 leadingAnchor];
  id v65 = [v60 constraintEqualToAnchor:v64 constant:*((double *)&xmmword_1006D2820 + 1)];

  *(void *)(v56 + 40) = v65;
  id v66 = [*(id *)&v1[qword_1006C0C28] trailingAnchor];
  id v67 = [v1 view];
  if (!v67)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  id v68 = v67;
  id v69 = [v67 layoutMarginsGuide];

  id v70 = [v69 trailingAnchor];
  id v71 = [v66 constraintEqualToAnchor:v70 constant:-*((double *)&xmmword_1006D2820 + 1)];

  *(void *)(v56 + 48) = v71;
  specialized Array._endMutation()();
  Class v72 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v156 activateConstraints:v72];

  uint64_t v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = xmmword_10055B950;
  id v74 = [v4 topAnchor];
  id v75 = [*(id *)&v1[qword_1006C0C28] bottomAnchor];
  id v76 = [v74 constraintEqualToAnchor:v75];

  *(void *)(v73 + 32) = v76;
  id v77 = [v4 leadingAnchor];
  id v78 = [v1 view];
  if (!v78)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v79 = v78;
  id v80 = [v78 leadingAnchor];

  id v81 = [v77 constraintEqualToAnchor:v80];
  *(void *)(v73 + 40) = v81;
  id v82 = [v4 trailingAnchor];
  id v83 = [v1 view];
  if (!v83)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v84 = v83;
  id v85 = [v83 trailingAnchor];

  id v86 = [v82 constraintEqualToAnchor:v85];
  *(void *)(v73 + 48) = v86;
  id v87 = [v4 bottomAnchor];
  id v88 = [v1 view];
  if (!v88)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v89 = v88;
  id v90 = [v88 bottomAnchor];

  id v91 = [v87 constraintEqualToAnchor:v90];
  *(void *)(v73 + 56) = v91;
  specialized Array._endMutation()();
  Class v92 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v156 activateConstraints:v92];

  uint64_t v93 = swift_allocObject();
  *(_OWORD *)(v93 + 16) = xmmword_10055B950;
  id v94 = [v153 topAnchor];
  id v95 = [v154 bottomAnchor];
  id v96 = [v94 constraintEqualToAnchor:v95];

  *(void *)(v93 + 32) = v96;
  id v97 = [v153 leadingAnchor];
  id v98 = [v1 view];
  if (!v98)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v99 = v98;
  id v100 = [v98 leadingAnchor];

  id v101 = [v97 constraintEqualToAnchor:v100];
  *(void *)(v93 + 40) = v101;
  id v102 = [v153 trailingAnchor];
  id v103 = [v1 view];
  if (!v103)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  unint64_t v104 = v103;
  id v105 = [v103 trailingAnchor];

  id v106 = [v102 constraintEqualToAnchor:v105];
  *(void *)(v93 + 48) = v106;
  id v107 = [v153 bottomAnchor];
  id v108 = [v1 view];
  if (!v108)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v109 = v108;
  id v110 = [v108 safeAreaLayoutGuide];

  id v111 = [v110 bottomAnchor];
  if (qword_1006AE228 != -1) {
    swift_once();
  }
  id v112 = [v107 constraintEqualToAnchor:v111 constant:-*((double *)&xmmword_1006D2090 + 1)];

  *(void *)(v93 + 56) = v112;
  specialized Array._endMutation()();
  Class v113 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v156 activateConstraints:v113];

  id v114 = [v152 centerYAnchor];
  id v115 = [v4 centerYAnchor];
  id v116 = [v114 constraintEqualToAnchor:v115 constant:-*((double *)&xmmword_1006D2090 + 1)];

  LODWORD(v117) = 1144750080;
  [v116 setPriority:v117];
  uint64_t v118 = swift_allocObject();
  *(_OWORD *)(v118 + 16) = xmmword_10055C1F0;
  id v119 = [v152 topAnchor];
  id v120 = [v4 topAnchor];
  id v121 = [v119 constraintGreaterThanOrEqualToAnchor:v120];

  *(void *)(v118 + 32) = v121;
  id v122 = [v152 centerXAnchor];
  id v123 = [v1 view];
  if (!v123) {
    goto LABEL_40;
  }
  uint64_t v124 = v123;
  id v125 = [v123 centerXAnchor];

  id v126 = [v122 constraintEqualToAnchor:v125];
  *(void *)(v118 + 40) = v126;
  *(void *)(v118 + 48) = v116;
  specialized Array._endMutation()();
  id v127 = v116;
  Class v128 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v156 activateConstraints:v128];

  uint64_t v129 = swift_allocObject();
  *(_OWORD *)(v129 + 16) = xmmword_10055B950;
  id v130 = [v151 topAnchor];
  id v131 = [v154 bottomAnchor];
  id v132 = [v130 constraintEqualToAnchor:v131];

  *(void *)(v129 + 32) = v132;
  id v133 = [v151 leadingAnchor];
  id v134 = [v1 view];
  if (!v134)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v135 = v134;
  id v136 = [v134 leadingAnchor];

  id v137 = [v133 constraintEqualToAnchor:v136];
  *(void *)(v129 + 40) = v137;
  id v138 = [v151 trailingAnchor];
  id v139 = [v1 view];
  if (!v139)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  Swift::Int v140 = v139;
  id v141 = [v139 trailingAnchor];

  id v142 = [v138 constraintEqualToAnchor:v141];
  *(void *)(v129 + 48) = v142;
  id v143 = [v151 bottomAnchor];
  id v144 = [v1 view];
  if (!v144)
  {
LABEL_43:
    __break(1u);
    return;
  }
  Swift::Int v145 = v144;
  id v146 = [v144 safeAreaLayoutGuide];

  id v147 = [v146 bottomAnchor];
  id v148 = [v143 constraintEqualToAnchor:v147 constant:-*((double *)&xmmword_1006D2090 + 1)];

  *(void *)(v129 + 56) = v148;
  specialized Array._endMutation()();
  Class v149 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v156 activateConstraints:v149];
}

uint64_t sub_1004E53D4(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1004E5710(a1, a2, a3, a4, (void (*)(char *))sub_1004E8114);
}

uint64_t sub_1004E53EC(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = sub_10005D034(&qword_1006AF770);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = type metadata accessor for IndexPath();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  }
  else
  {
    uint64_t v11 = type metadata accessor for IndexPath();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
  }
  id v12 = a3;
  id v13 = a1;
  sub_1004E1408();

  return sub_100003F10((uint64_t)v9, &qword_1006AF770);
}

id sub_1004E551C()
{
  uint64_t v0 = type metadata accessor for IndexPath();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  double v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);

  return 0;
}

uint64_t sub_1004E55F8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = a3;
  id v10 = a1;
  LOBYTE(a1) = sub_1004E82D0((uint64_t)v8);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return a1 & 1;
}

uint64_t sub_1004E56F8(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1004E5710(a1, a2, a3, a4, (void (*)(char *))sub_1004E82F0);
}

uint64_t sub_1004E5710(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(char *))
{
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v12 = a3;
  id v13 = a1;
  a5(v11);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

id sub_1004E5818()
{
  uint64_t v0 = type metadata accessor for IndexPath();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  double v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);

  return 0;
}

void sub_1004E58F4(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1002EC238(v4);
}

uint64_t sub_1004E594C()
{
  if (*(unsigned char *)(v0 + qword_1006C0C48) != 1) {
    return 0;
  }
  uint64_t v1 = *(void **)(v0 + qword_1006C0BF8);
  id v2 = [v1 dataSource];
  if (v2)
  {
    double v3 = v2;
    if (qword_1006AE190 != -1) {
      goto LABEL_24;
    }
    while (1)
    {
      uint64_t v4 = type metadata accessor for Logger();
      sub_1000606BC(v4, (uint64_t)qword_1006D1E98);
      swift_unknownObjectRetain_n();
      id v5 = Logger.logObject.getter();
      os_log_type_t v6 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v7 = (uint8_t *)swift_slowAlloc();
        uint64_t v17 = swift_slowAlloc();
        *(_DWORD *)uint64_t v7 = 136315138;
        swift_unknownObjectRetain();
        sub_10005D034((uint64_t *)&unk_1006B9E70);
        uint64_t v8 = String.init<A>(describing:)();
        uint64_t v16 = sub_1000606F4(v8, v9, &v17);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v5, v6, "FMListViewController: data source %s", v7, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      if (objc_msgSend(v3, "respondsToSelector:", "numberOfSectionsInTableView:", v16))
      {
        uint64_t result = (uint64_t)[v3 numberOfSectionsInTableView:v1];
        if (result < 0)
        {
          __break(1u);
          return result;
        }
        uint64_t v12 = result;
        if (!result)
        {
          BOOL v10 = 1;
LABEL_21:
          swift_unknownObjectRelease();
          return v10;
        }
      }
      else
      {
        uint64_t v12 = 1;
      }
      uint64_t v13 = 0;
      while (v12 != v13)
      {
        uint64_t v14 = (uint64_t)[v3 tableView:v1 numberOfRowsInSection:v13];
        BOOL v10 = v14 < 1;
        if (v14 > 0 || v12 - 1 == v13++) {
          goto LABEL_21;
        }
      }
      __break(1u);
LABEL_24:
      swift_once();
    }
  }
  return 1;
}

void sub_1004E5BF8(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void **)(v2 + qword_1006C0BF8);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v10 = [v8 cellForRowAtIndexPath:isa];

  if (v10)
  {
    sub_10005D034((uint64_t *)&unk_1006C0CF0);
    uint64_t v11 = swift_dynamicCastClass();
    if (v11)
    {
      uint64_t v12 = *(void **)(v11 + qword_1006B6770);
      double v13 = 0.0;
      if (a2) {
        double v13 = 1.0;
      }
      [v12 setAlpha:v13];
    }
  }
  if (__OFSUB__(IndexPath.row.getter(), 1))
  {
    __break(1u);
    return;
  }
  IndexPath.section.getter();
  IndexPath.init(row:section:)();
  Class v14 = IndexPath._bridgeToObjectiveC()().super.isa;
  id v15 = [v8 cellForRowAtIndexPath:v14];

  if (!v15) {
    goto LABEL_14;
  }
  sub_10005D034((uint64_t *)&unk_1006C0CF0);
  uint64_t v16 = swift_dynamicCastClass();
  if (!v16)
  {

LABEL_14:
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return;
  }
  uint64_t v17 = *(void **)(v16 + qword_1006B6770);
  double v18 = 0.0;
  if (a2) {
    double v18 = 1.0;
  }
  [v17 setAlpha:v18];
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1004E5E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_10005D034((uint64_t *)&unk_1006AEE40);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v2 + qword_1006C0C40) != 1 || *(unsigned char *)(v2 + qword_1006D2838) == 1)
  {
    char v8 = sub_1004E594C();
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_1000606BC(v9, (uint64_t)qword_1006D1E98);
    id v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 67109120;
      int v35 = v8 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMListViewController: data source empty? %{BOOL}d", v12, 8u);
      swift_slowDealloc();
    }

    uint64_t ObjectType = swift_getObjectType();
    if ((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(ObjectType, a2))
    {
      Class v14 = *(char **)(v3 + qword_1006C0C08);
      [v14 setUserInteractionEnabled:0];
      [v14 setHidden:1];
      [*(id *)&v14[OBJC_IVAR____TtC6FindMy13FMLoadingView_activityIndicator] stopAnimating];
      if (v8)
      {
        sub_1004E6414();
        *(unsigned char *)(v3 + qword_1006D2840) = 0;
        sub_1004E693C();
        [*(id *)(v3 + qword_1006D2830) setHidden:1];
LABEL_32:
        uint64_t v33 = *(unsigned __int8 *)(v3 + qword_1006C0C48);
        *(unsigned char *)(v3 + qword_1006C0C48) = 1;
        sub_1004DFDDC(v33);
        return;
      }
    }
    else
    {
      if (v8)
      {
        id v15 = *(void **)(v3 + qword_1006C0BE8);
        [v15 setUserInteractionEnabled:0];
        [v15 setHidden:1];
        [*(id *)(v3 + qword_1006C0BF8) setHidden:0];
        uint64_t v16 = *(char **)(v3 + qword_1006C0C08);
        [v16 setUserInteractionEnabled:1];
        [v16 setHidden:0];
        [*(id *)&v16[OBJC_IVAR____TtC6FindMy13FMLoadingView_activityIndicator] startAnimating];
        *(unsigned char *)(v3 + qword_1006D2840) = 0;
        sub_1004E693C();
        goto LABEL_32;
      }
      Swift::String v21 = *(char **)(v3 + qword_1006C0C08);
      [v21 setUserInteractionEnabled:0];
      [v21 setHidden:1];
      [*(id *)&v21[OBJC_IVAR____TtC6FindMy13FMLoadingView_activityIndicator] stopAnimating];
    }
    uint64_t v22 = *(void **)(v3 + qword_1006C0BE8);
    [v22 setUserInteractionEnabled:0];
    [v22 setHidden:1];
    [*(id *)(v3 + qword_1006C0BF8) setHidden:0];
    *(unsigned char *)(v3 + qword_1006D2840) = 1;
    sub_1004E693C();
    (*(void (**)(uint64_t, uint64_t))(a2 + 24))(ObjectType, a2);
    uint64_t v24 = v23;
    BOOL v25 = v23 != 0;
    swift_bridgeObjectRelease();
    swift_retain();
    dispatch thunk of FMFManager.myInfo.getter();
    swift_release();
    uint64_t v26 = type metadata accessor for FMFMyInfo();
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v7, 1, v26) == 1)
    {
      sub_100003F10((uint64_t)v7, (uint64_t *)&unk_1006AEE40);
    }
    else
    {
      uint64_t v28 = FMFMyInfo.meDeviceId.getter();
      unint64_t v30 = v29;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v26);
      if (v30)
      {
        swift_bridgeObjectRelease();
        uint64_t v31 = HIBYTE(v30) & 0xF;
        if ((v30 & 0x2000000000000000) == 0) {
          uint64_t v31 = v28 & 0xFFFFFFFFFFFFLL;
        }
        if (v24) {
          BOOL v32 = v31 == 0;
        }
        else {
          BOOL v32 = 1;
        }
        BOOL v25 = !v32;
      }
    }
    [*(id *)(v3 + qword_1006D2830) setHidden:!v25];
    goto LABEL_32;
  }
  *(unsigned char *)(v2 + qword_1006D2840) = 0;
  sub_1004E693C();
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  sub_1000606BC(v17, (uint64_t)qword_1006D1E98);
  os_log_t v34 = (os_log_t)Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v34, v18, "FMListViewController: Not refreshing view state because terminal view is showing", v19, 2u);
    swift_slowDealloc();
  }
  os_log_t v20 = v34;
}

id sub_1004E6414()
{
  uint64_t v1 = *(void **)(v0 + qword_1006C0BE8);
  [v1 setUserInteractionEnabled:1];
  [v1 setHidden:0];
  [v1 setNeedsLayout];
  [v1 layoutIfNeeded];
  uint64_t v2 = *(void **)(v0 + qword_1006C0BF8);

  return [v2 setHidden:1];
}

id sub_1004E64B0()
{
  uint64_t v1 = *(void **)(v0 + qword_1006C0BE8);
  [v1 setUserInteractionEnabled:0];
  [v1 setHidden:1];
  uint64_t v2 = *(void **)(v0 + qword_1006C0BF8);

  return [v2 setHidden:0];
}

id sub_1004E652C()
{
  return sub_1004E6554(1, 0, (const char **)&selRef_startAnimating);
}

id sub_1004E6540()
{
  return sub_1004E6554(0, 1, (const char **)&selRef_stopAnimating);
}

id sub_1004E6554(char a1, char a2, const char **a3)
{
  uint64_t v6 = *(char **)(v3 + qword_1006C0C08);
  [v6 setUserInteractionEnabled:a1 & 1];
  [v6 setHidden:a2 & 1];
  uint64_t v7 = *(void **)&v6[OBJC_IVAR____TtC6FindMy13FMLoadingView_activityIndicator];
  char v8 = *a3;

  return [v7 v8];
}

void sub_1004E65D4()
{
  long long v6 = *(_OWORD *)((swift_isaMask & *v0) + 0x60);
  long long v7 = *(_OWORD *)((swift_isaMask & *v0) + 0x70);
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for FMSeparatedListViewController();
  [super viewDidLayoutSubviews:v6, v7];
  id v1 = *(id *)((char *)v0 + qword_1006C0C28);
  id v2 = [v0 view];
  if (v2)
  {
    uint64_t v3 = v2;
    [v2 layoutMargins];
    double v5 = v4;

    [v1 setSpacing:v5];
    sub_100039FE4();
  }
  else
  {
    __break(1u);
  }
}

void sub_1004E66D8(void *a1)
{
  id v1 = a1;
  sub_1004E65D4();
}

uint64_t sub_1004E6720()
{
  return (*(uint64_t (**)(void))(*(void *)((swift_isaMask & *v0) + 0x78) + 112))(*(void *)((swift_isaMask & *v0) + 0x60));
}

void sub_1004E679C(void *a1)
{
  id v1 = a1;
  sub_1004E6720();
}

void sub_1004E67E4(char a1)
{
  uint64_t v2 = v1;
  double v4 = *(void **)(v1 + qword_1006C0BE8);
  type metadata accessor for FMNoItemView();
  if (swift_dynamicCastClass())
  {
    double v5 = dbl_10056A488[a1];
    id v6 = v4;
    sub_100470D3C(0, v5);
  }
  long long v7 = *(void **)(v2 + qword_1006C0BF0);
  type metadata accessor for FMItemTerminalView();
  if (swift_dynamicCastClass())
  {
    double v8 = dbl_10056A488[a1];
    id v9 = v7;
    sub_1001A633C(0, v8);
  }
}

id sub_1004E68F4()
{
  return [*(id *)(v0 + qword_1006D2830) setHidden:(*(unsigned char *)(*(void *)(*(void *)(v0 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator) + 16)+ OBJC_IVAR____TtC6FindMy19FMConditionProvider_accountsAreSignedIn) & 1) == 0];
}

void sub_1004E693C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10005D034((uint64_t *)&unk_1006C0CE0);
  __chkstk_darwin(v2 - 8);
  double v4 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v1[qword_1006D2840] == 1 && (uint64_t v5 = *(void *)&v1[qword_1006D2850 + 8]) != 0)
  {
    id v65 = *(unsigned char **)&v1[qword_1006D2850];
    id v6 = *(char **)&v1[qword_1006C0C18];
    if (v1[qword_1006D2848] == 1)
    {
      long long v7 = *(void **)&v6[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_label];
      double v8 = self;
      id v61 = v8;
      swift_bridgeObjectRetain();
      id v9 = v7;
      id v10 = [v8 mainBundle];
      v67._countAndFlagsBits = 0xD00000000000001BLL;
      uint64_t v64 = 0xD00000000000001BLL;
      v11._countAndFlagsBits = 0xD000000000000023;
      v67._object = (void *)0x8000000100582B40;
      v11._object = (void *)0x800000010058C0E0;
      v12.value._countAndFlagsBits = 0xD000000000000016;
      v12.value._object = (void *)0x8000000100582B20;
      v13._countAndFlagsBits = 0;
      v13._object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v67);

      uint64_t v60 = sub_10005D034((uint64_t *)&unk_1006AF790);
      uint64_t v14 = swift_allocObject();
      long long v59 = xmmword_10055B970;
      *(_OWORD *)(v14 + 16) = xmmword_10055B970;
      *(void *)(v14 + 56) = &type metadata for String;
      unint64_t v15 = sub_10007F2C8();
      *(void *)(v14 + 64) = v15;
      *(void *)(v14 + 32) = v65;
      *(void *)(v14 + 40) = v5;
      swift_bridgeObjectRetain();
      String.init(format:_:)();
      swift_bridgeObjectRelease();
      NSString v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v9 setText:v16];

      uint64_t v17 = *(void **)&v1[qword_1006C0C18];
      uint64_t v18 = type metadata accessor for FMPlatterIcon();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 0, 1, v18);
      id v19 = v17;
      sub_10033C22C((uint64_t)v4);

      os_log_t v20 = (char *)*(id *)&v1[qword_1006C0C18];
      id v21 = v61;
      id v22 = [v61 mainBundle];
      v23._countAndFlagsBits = 0xD000000000000026;
      uint64_t v62 = (void *)0x8000000100582B40;
      v68._object = (void *)0x8000000100582B40;
      v23._object = (void *)0x800000010058C110;
      v24.value._countAndFlagsBits = 0xD000000000000016;
      id v63 = (void *)0x8000000100582B20;
      v24.value._object = (void *)0x8000000100582B20;
      v25._countAndFlagsBits = 0;
      v25._object = (void *)0xE000000000000000;
      v68._countAndFlagsBits = v64;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v23, v24, (NSBundle)v22, v25, v68);

      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = v59;
      *(void *)(v26 + 56) = &type metadata for String;
      *(void *)(v26 + 64) = v15;
      *(void *)(v26 + 32) = v65;
      *(void *)(v26 + 40) = v5;
      uint64_t v27 = String.init(format:_:)();
      uint64_t v29 = v28;
      swift_bridgeObjectRelease();
      unint64_t v30 = (uint64_t *)&v20[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle];
      *unint64_t v30 = v27;
      v30[1] = v29;
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void **)&v20[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitleLabel];
      if (v30[1])
      {
        swift_bridgeObjectRetain();
        NSString v32 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v32 = 0;
      }
      [v31 setText:v32];

      id v44 = (char *)*(id *)&v1[qword_1006C0C18];
      id v45 = [v21 mainBundle];
      v46._countAndFlagsBits = 0xD00000000000002ALL;
      v70._object = v62;
      v46._object = (void *)0x800000010058C140;
      v47.value._countAndFlagsBits = 0xD000000000000016;
      v47.value._object = v63;
      v70._countAndFlagsBits = v64;
      v48._countAndFlagsBits = 0;
      v48._object = (void *)0xE000000000000000;
      Swift::String v49 = NSLocalizedString(_:tableName:bundle:value:comment:)(v46, v47, (NSBundle)v45, v48, v70);

      id v50 = (Swift::String *)&v44[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle];
      *id v50 = v49;
      swift_bridgeObjectRelease();
      id v51 = *(void **)&v44[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionLabel];
      if (v50->_object)
      {
        swift_bridgeObjectRetain();
        NSString v52 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v52 = 0;
      }
      [v51 setText:v52];
    }
    else
    {
      swift_bridgeObjectRetain();
      [v6 setUserInteractionEnabled:1];
      int v35 = *(void **)(*(void *)&v1[qword_1006C0C18] + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_label);
      id v36 = self;
      id v37 = v35;
      id v38 = [v36 mainBundle];
      v69._countAndFlagsBits = 0xD00000000000001BLL;
      v39._countAndFlagsBits = 0xD00000000000001DLL;
      v69._object = (void *)0x8000000100582B40;
      v39._object = (void *)0x800000010058C0C0;
      v40.value._object = (void *)0x8000000100582B20;
      v40.value._countAndFlagsBits = 0xD000000000000016;
      v41._countAndFlagsBits = 0;
      v41._object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v39, v40, (NSBundle)v38, v41, v69);

      sub_10005D034((uint64_t *)&unk_1006AF790);
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_10055B970;
      *(void *)(v42 + 56) = &type metadata for String;
      *(void *)(v42 + 64) = sub_10007F2C8();
      *(void *)(v42 + 32) = v65;
      *(void *)(v42 + 40) = v5;
      String.init(format:_:)();
      swift_bridgeObjectRelease();
      NSString v43 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v37 setText:v43];
    }
    double v53 = *(unsigned char **)&v1[qword_1006C0C18];
    v53[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed] = 0;
    id v54 = v53;
    sub_10033C3EC();

    id v55 = [v1 view];
    if (v55)
    {
      uint64_t v56 = v55;
      [v55 setNeedsLayout];

      id v57 = [v1 view];
      if (v57)
      {
        id v58 = v57;
        [v57 layoutIfNeeded];

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    uint64_t v33 = *(unsigned char **)&v1[qword_1006C0C18];
    v33[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed] = 1;
    id v65 = v33;
    sub_10033C3EC();
    os_log_t v34 = v65;
  }
}

uint64_t sub_1004E70A4(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v31 = a3;
  LODWORD(v5) = a2;
  uint64_t v7 = type metadata accessor for FMIPSafeLocation();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  NSString v32 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  Swift::String_optional v12 = (char *)v25 - v11;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_1000606BC(v13, (uint64_t)qword_1006D1E98);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v14(v12, a1, v7);
  unint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  BOOL v17 = os_log_type_enabled(v15, v16);
  unint64_t v30 = v14;
  if (v17)
  {
    uint64_t v29 = a4;
    uint64_t v18 = swift_slowAlloc();
    int v27 = (int)v5;
    uint64_t v5 = (uint8_t *)v18;
    uint64_t v26 = swift_slowAlloc();
    v34[0] = v26;
    uint64_t v28 = a1;
    *(_DWORD *)uint64_t v5 = 136315138;
    v25[1] = v5 + 4;
    v14(v32, (uint64_t)v12, v7);
    uint64_t v19 = String.init<A>(describing:)();
    uint64_t v33 = sub_1000606F4(v19, v20, v34);
    a1 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a4 = v29;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "FMItemNotificationsViewController: Add Safe Location %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    LOBYTE(v5) = v27;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }

  swift_beginAccess();
  type metadata accessor for FMPendingActionInfo(0);
  v30(v32, a1, v7);
  if (v5)
  {
    type metadata accessor for FMIPAssignSafeLocationToAllSupportedBeaconsAction();
    swift_allocObject();
    uint64_t v21 = FMIPAssignSafeLocationToAllSupportedBeaconsAction.init(location:)();
  }
  else
  {
    type metadata accessor for FMIPAssignMultipleSafeLocationsItemAction();
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v21 = FMIPAssignMultipleSafeLocationsItemAction.init(beaconUUIDs:location:)();
  }
  uint64_t v22 = v21;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v31;
  *(void *)(v23 + 24) = a4;
  swift_retain();
  swift_retain();
  sub_1000C9440(v22, (uint64_t)sub_1004E7D40, v23);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1004E74D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(BOOL))
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_1000606BC(v7, (uint64_t)qword_1006D1E98);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    swift_errorRetain();
    sub_10005D034(&qword_1006B4220);
    uint64_t v11 = String.init<A>(describing:)();
    sub_1000606F4(v11, v12, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMSeparatedListViewController: Add Safe Location completed with error: %s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return a5(a1 == 0);
}

uint64_t sub_1004E76BC()
{
  swift_unknownObjectRelease();

  swift_release();
  sub_100003F10(v0 + qword_1006C0C20, &qword_1006C0D00);

  return swift_bridgeObjectRelease();
}

id sub_1004E77B8()
{
  long long v2 = *(_OWORD *)((swift_isaMask & *v0) + 0x60);
  long long v3 = *(_OWORD *)((swift_isaMask & *v0) + 0x70);
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for FMSeparatedListViewController();
  return [super dealloc:v2, v3];
}

uint64_t sub_1004E7830(uint64_t a1)
{
  swift_unknownObjectRelease();

  swift_release();
  sub_100003F10(a1 + qword_1006C0C20, &qword_1006C0D00);

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for FMSeparatedListViewController()
{
  return swift_getGenericMetadata();
}

void sub_1004E7950()
{
  if (!qword_1006C0CD0)
  {
    type metadata accessor for FMIPSeparationEvent();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1006C0CD0);
    }
  }
}

void sub_1004E79B8(uint64_t a1, char a2)
{
}

void sub_1004E79C4(char a1)
{
  if (a1)
  {
    [*(id *)((char *)v1 + qword_1006C0BE8) setHidden:1];
    [*(id *)((char *)v1 + qword_1006C0BF8) setHidden:1];
    [*(id *)((char *)v1 + qword_1006C0C08) setHidden:1];
  }
  *((unsigned char *)v1 + qword_1006C0C40) = a1 & 1;
  uint64_t v3 = *(void *)((char *)v1 + qword_1006C0BE0);
  uint64_t v4 = *(void *)((swift_isaMask & *v1) + 0x78);

  sub_1004E5E1C(v3, v4);
}

char *sub_1004E7A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a2;
  uint64_t v31 = type metadata accessor for FMIPSafeLocation();
  uint64_t v6 = *(void *)(v31 - 8);
  uint64_t v7 = __chkstk_darwin(v31);
  uint64_t v29 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v23 - v9;
  uint64_t result = (char *)_swiftEmptyArrayStorage;
  NSString v32 = (char *)_swiftEmptyArrayStorage;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v13 = v6 + 16;
    uint64_t v15 = *(void *)(v13 + 56);
    unint64_t v25 = (*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64);
    uint64_t v26 = a3;
    uint64_t v16 = a1 + v25;
    v23[1] = v3;
    Swift::String_optional v24 = (void (**)(char *, uint64_t))(v13 - 8);
    int v27 = v14;
    uint64_t v28 = (void (**)(char *, char *, uint64_t))(v13 + 16);
    v14(v10, a1 + v25, v31);
    while (1)
    {
      if (FMIPSafeLocation.identifier.getter() == v30 && v17 == a3)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v18 & 1) == 0)
        {
          (*v24)(v10, v31);
          goto LABEL_4;
        }
      }
      uint64_t v19 = *v28;
      (*v28)(v29, v10, v31);
      unint64_t v20 = v32;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10013E6A4(0, *((void *)v20 + 2) + 1, 1);
        unint64_t v20 = v32;
      }
      unint64_t v22 = *((void *)v20 + 2);
      unint64_t v21 = *((void *)v20 + 3);
      if (v22 >= v21 >> 1)
      {
        sub_10013E6A4(v21 > 1, v22 + 1, 1);
        unint64_t v20 = v32;
      }
      *((void *)v20 + 2) = v22 + 1;
      v19(&v20[v25 + v22 * v15], v29, v31);
      NSString v32 = v20;
      a3 = v26;
LABEL_4:
      v16 += v15;
      if (!--v12) {
        return v32;
      }
      v27(v10, v16, v31);
    }
  }
  return result;
}

uint64_t sub_1004E7D08()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004E7D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1004E74D0(a1, a2, a3, a4, *(uint64_t (**)(BOOL))(v4 + 16));
}

void sub_1004E7D48()
{
  sub_1004E3E10(*(void **)(v0 + 16));
}

uint64_t sub_1004E7D50(uint64_t a1)
{
  return sub_1004E2738(a1, *(void **)(v1 + 16));
}

uint64_t sub_1004E7D58()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1004E7D90(uint64_t a1)
{
  sub_1004E2FC8(a1, *(void **)(v1 + 16));
}

void sub_1004E7D98()
{
  sub_1004E3270(*(char **)(v0 + 16));
}

uint64_t sub_1004E7DA0(char a1)
{
  return sub_1004E37F0(a1, *(void **)(v1 + 16), (uint64_t)&unk_1006426C8, (uint64_t)sub_1004E7DE0, (uint64_t)&unk_1006426E0);
}

void sub_1004E7DE4()
{
  sub_1004E29C4(*(char **)(v0 + 16));
}

uint64_t sub_1004E7DEC(char a1)
{
  return sub_1004E37F0(a1, *(void **)(v1 + 16), (uint64_t)&unk_100642790, (uint64_t)sub_1004E7DE0, (uint64_t)&unk_1006427A8);
}

void sub_1004E7E2C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + qword_1006D2848) = 1;
  sub_1004E693C();
}

uint64_t sub_1004E7E60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004E7EC8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1004E7F28()
{
  uint64_t v1 = v0;
  uint64_t v2 = qword_1006C0C00;
  *(void *)&v1[v2] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v3 = qword_1006C0C08;
  *(void *)&v1[v3] = [objc_allocWithZone((Class)type metadata accessor for FMLoadingView()) init];
  *(void *)&v1[qword_1006C0C10] = 0;
  uint64_t v4 = qword_1006C0C18;
  id v5 = objc_allocWithZone((Class)type metadata accessor for FMExtendedPlatterInfoView());
  *(void *)&v1[v4] = sub_10033C758(1, 0);
  uint64_t v6 = &v1[qword_1006C0C20];
  uint64_t v7 = type metadata accessor for FMIPSeparationEvent();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = qword_1006C0C28;
  *(void *)&v1[v8] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v9 = qword_1006D2830;
  *(void *)&v1[v9] = [self buttonWithType:1];
  uint64_t v10 = qword_1006C0C38;
  *(void *)&v1[v10] = [objc_allocWithZone((Class)UIView) init];
  v1[qword_1006C0C40] = 0;
  v1[qword_1006C0C48] = 0;
  v1[qword_1006D2838] = 0;
  v1[qword_1006D2840] = 0;
  v1[qword_1006D2848] = 0;
  uint64_t v11 = &v1[qword_1006D2850];
  void *v11 = 0;
  v11[1] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1004E8114(uint64_t a1)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = sub_10005D034(&qword_1006AF770);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)((char *)v1 + qword_1006C0BF8);
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v6, a1, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  uint64_t v10 = v7 + OBJC_IVAR____TtC6FindMy11FMTableView_newIndexPath;
  swift_beginAccess();
  sub_1000AE7D4((uint64_t)v6, v10, &qword_1006AF770);
  swift_endAccess();
  sub_1004E5BF8(a1, 0);
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v3 + 120) + 104))(a1, *(void *)(v3 + 96));
}

uint64_t sub_1004E82D0(uint64_t a1)
{
  return 1;
}

void sub_1004E82F0(uint64_t a1)
{
}

void sub_1004E83BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = 0;
  uint64_t v3 = OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_selectionSubscription;
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_selectionSubscription);
  if (v4)
  {
    uint64_t v5 = *(uint64_t **)(*(void *)(v0 + OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_mediator) + 56);
    swift_beginAccess();
    swift_retain();
    swift_retain();
    uint64_t v6 = sub_1003D6AB4(v5 + 2, v4);
    uint64_t v7 = v6;
    unint64_t v8 = v5[2];
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v9 >= v7) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v9 >= v6)
      {
LABEL_4:
        sub_1002586A8(v7, v9);
        swift_endAccess();
        swift_release();
        *(void *)(v0 + v3) = 0;
        swift_release();
        swift_release();
        goto LABEL_5;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_5:
  unint64_t v8 = OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_conditionsSubscription;
  uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_conditionsSubscription);
  if (!v10) {
    return;
  }
  uint64_t v11 = *(char **)(*(void *)(v0 + OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_mediator) + 16);
  uint64_t v12 = (uint64_t *)&v11[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
  swift_beginAccess();
  swift_retain();
  uint64_t v5 = v11;
  uint64_t v13 = sub_10006782C(v12, v10);
  uint64_t v2 = v13;
  if ((unint64_t)*v12 >> 62)
  {
LABEL_12:
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v14 >= v2) {
      goto LABEL_8;
    }
LABEL_13:
    __break(1u);
    return;
  }
  uint64_t v14 = *(void *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v14 < v13) {
    goto LABEL_13;
  }
LABEL_8:
  sub_1000675DC(v2, v14);
  swift_endAccess();

  *(void *)(v1 + v8) = 0;
  swift_release();
  swift_release();
}

uint64_t sub_1004E85C4(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FMFFriend();
  uint64_t v57 = *(void *)(v4 - 8);
  uint64_t v58 = v4;
  __chkstk_darwin(v4);
  uint64_t v56 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for FMSelectedSection();
  uint64_t v6 = __chkstk_darwin(v59);
  unint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v55 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (void (*)(char *, uint64_t, uint64_t))((char *)&v55 - v13);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v55 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v55 - v18;
  unint64_t v20 = (objc_class *)type metadata accessor for FMPersonDetailCardViewController();
  v62.receiver = v2;
  v62.super_class = v20;
  [super viewWillAppear:a1 & 1];
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  sub_1000606BC(v21, (uint64_t)qword_1006D1E98);
  unint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    Swift::String_optional v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String_optional v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "FMPersonDetailCardViewController: viewWillAppear", v24, 2u);
    swift_slowDealloc();
  }

  uint64_t v25 = OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_mediator;
  uint64_t v26 = *(void *)(*(void *)&v2[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_mediator] + 56)
      + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100028164(v26, (uint64_t)v19);
  sub_100028164((uint64_t)v19, (uint64_t)v17);
  LODWORD(v26) = swift_getEnumCaseMultiPayload();
  sub_100028108((uint64_t)v17);
  if (v26 == 2)
  {
    id v27 = objc_allocWithZone((Class)type metadata accessor for FMPersonDetailContentViewController());
    uint64_t v28 = swift_retain();
    uint64_t v29 = sub_1001344C8(v28);
    swift_release();
    id v55 = v29;
    sub_100048708(v29, v2);
    uint64_t v30 = *(void *)(*(void *)&v2[v25] + 56)
        + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess();
    sub_100028164(v30, (uint64_t)v14);
    uint64_t v31 = swift_retain();
    sub_1004E943C(v31, v14);
    swift_release();
    sub_100028108((uint64_t)v14);
    NSString v32 = *(void **)(*(void *)&v2[v25] + 16);
    type metadata accessor for FMConditionSubscription();
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber + 8) = 0;
    swift_unknownObjectWeakInit();
    os_log_t v34 = v32;
    int v35 = v2;
    UUID.init()();
    *(void *)(v33 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber + 8) = &off_1006427F8;
    swift_unknownObjectWeakAssign();

    id v36 = &v34[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
    swift_beginAccess();
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v36 & 0xFFFFFFFFFFFFFF8)
                                                                                 + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();

    *(void *)&v35[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_conditionsSubscription] = v33;
    swift_release();
    uint64_t v37 = *(void *)(*(void *)&v2[v25] + 56);
    type metadata accessor for FMSelectionSubscription();
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber + 8) = 0;
    swift_unknownObjectWeakInit();
    Swift::String v39 = v35;
    swift_retain();
    UUID.init()();
    *(void *)(v38 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber + 8) = &off_1006427D0;
    swift_unknownObjectWeakAssign();

    swift_beginAccess();
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)(v37 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v37 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    swift_release();
    *(void *)&v39[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_selectionSubscription] = v38;
    swift_release();
    uint64_t v40 = *(void *)(*(void *)&v2[v25] + 56)
        + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess();
    sub_100028164(v40, (uint64_t)v11);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v42 = v56;
      uint64_t v41 = v57;
      uint64_t v43 = v58;
      (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v56, v11, v58);
      uint64_t v44 = FMFFriend.identifier.getter();
      id v45 = (uint64_t *)&v39[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_selectedPersonIdentifier];
      *id v45 = v44;
      v45[1] = v46;

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v43);
    }
    else
    {
      sub_100028108((uint64_t)v19);

      uint64_t v19 = v11;
    }
  }
  else
  {
    sub_100028164((uint64_t)v19, (uint64_t)v8);
    Swift::String_optional v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v47, v48))
    {
      Swift::String v49 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)Swift::String v49 = 136315138;
      sub_100028164((uint64_t)v8, (uint64_t)v14);
      uint64_t v50 = String.init<A>(describing:)();
      uint64_t v60 = sub_1000606F4(v50, v51, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100028108((uint64_t)v8);
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "FMPersonDetailCardViewController: Cannot be setup without a selected person. Selection: %s", v49, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100028108((uint64_t)v8);
    }

    uint64_t v52 = swift_allocObject();
    *(void *)(v52 + 16) = 0;
    *(void *)(v52 + 24) = 0;
    aBlock[4] = (uint64_t)sub_10007245C;
    aBlock[5] = v52;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10003C410;
    aBlock[3] = (uint64_t)&unk_1006428B8;
    double v53 = _Block_copy(aBlock);
    swift_release();
    [v2 dismissViewControllerAnimated:1 completion:v53];
    _Block_release(v53);
  }
  return sub_100028108((uint64_t)v19);
}

uint64_t sub_1004E8E30(char a1)
{
  uint64_t v3 = type metadata accessor for FMSelectedSection();
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)v42 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)v42 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v42 - v13;
  uint64_t v15 = (objc_class *)type metadata accessor for FMPersonDetailCardViewController();
  v48.receiver = v1;
  v48.super_class = v15;
  [super viewWillDisappear:a1 & 1];
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = sub_1000606BC(v16, (uint64_t)qword_1006D1E98);
  uint64_t v18 = v1;
  uint64_t v45 = v17;
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v44 = v14;
    unint64_t v22 = (uint8_t *)v21;
    v47[0] = swift_slowAlloc();
    v42[1] = v3;
    uint64_t v43 = v9;
    *(_DWORD *)unint64_t v22 = 136315138;
    v42[0] = v22 + 4;
    os_log_type_t v23 = v12;
    Swift::String_optional v24 = v6;
    uint64_t v25 = *(void *)&v18[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_selectedPersonIdentifier];
    unint64_t v26 = *(void *)&v18[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_selectedPersonIdentifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v27 = v25;
    uint64_t v6 = v24;
    uint64_t v12 = v23;
    uint64_t v46 = sub_1000606F4(v27, v26, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v9 = v43;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMPersonDetailCardViewController: viewWillDisappear %s", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v14 = v44;
    swift_slowDealloc();
  }
  else
  {
  }
  sub_1004E83BC();
  uint64_t v28 = *(void *)&v18[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_mediator];
  uint64_t v29 = *(void *)(v28 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100028164(v29, (uint64_t)v14);
  sub_100028164((uint64_t)v14, (uint64_t)v12);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v30 = sub_10005D034(&qword_1006BAF00);
      sub_100003F10((uint64_t)&v12[*(int *)(v30 + 48)], (uint64_t *)&unk_1006AFE30);
      uint64_t v31 = type metadata accessor for FMIPDevice();
      (*(void (**)(char *, uint64_t))(*(void *)(v31 - 8) + 8))(v12, v31);
      goto LABEL_10;
    case 3u:
      sub_100028108((uint64_t)v12);
      goto LABEL_10;
    case 8u:
      uint64_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v40 = 0;
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "FMPersonDetailCardViewController: ignore current selection", v40, 2u);
        swift_slowDealloc();
      }

      goto LABEL_15;
    case 0xFu:
LABEL_10:
      os_log_t v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v34, v35)) {
        goto LABEL_19;
      }
      id v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v36 = 0;
      uint64_t v37 = "FMPersonDetailCardViewController: ignore current selection";
      break;
    case 0x12u:
      os_log_t v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v34, v35)) {
        goto LABEL_19;
      }
      id v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v36 = 0;
      uint64_t v37 = "FMItemDetailCardViewController: ranging ignores current selection";
      break;
    default:
      uint64_t v32 = *(void *)(v28 + 56);
      swift_storeEnumTagMultiPayload();
      uint64_t v33 = v32 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
      swift_beginAccess();
      sub_100028164(v33, (uint64_t)v6);
      swift_beginAccess();
      swift_retain();
      sub_100009A88((uint64_t)v9, v33);
      swift_endAccess();
      sub_100053CA0((unint64_t)v6);
      sub_100028108((uint64_t)v9);
      sub_100028108((uint64_t)v6);
      swift_release();
LABEL_15:
      sub_100028108((uint64_t)v14);
      uint64_t v14 = v12;
      return sub_100028108((uint64_t)v14);
  }
  _os_log_impl((void *)&_mh_execute_header, v34, v35, v37, v36, 2u);
  swift_slowDealloc();
LABEL_19:

  return sub_100028108((uint64_t)v14);
}

void sub_1004E943C(uint64_t a1, void (*a2)(char *, uint64_t, uint64_t))
{
  uint64_t v3 = v2;
  objc_super v62 = a2;
  uint64_t v59 = a1;
  uint64_t v4 = sub_10005D034(&qword_1006AF740);
  __chkstk_darwin(v4 - 8);
  uint64_t v58 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMFFriend();
  uint64_t v60 = *(void *)(v6 - 8);
  uint64_t v61 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v57 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v54 - v9;
  uint64_t v11 = type metadata accessor for FMSelectedSection();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v54 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  os_log_type_t v20 = (char *)&v54 - v19;
  __chkstk_darwin(v18);
  unint64_t v22 = (char *)&v54 - v21;
  uint64_t v23 = OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_mediator;
  uint64_t v24 = *(void *)(*(void *)&v3[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_mediator] + 56)
      + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100028164(v24, (uint64_t)v22);
  LODWORD(v24) = swift_getEnumCaseMultiPayload();
  sub_100028108((uint64_t)v22);
  uint64_t v25 = v3;
  uint64_t v26 = *(void *)(*(void *)&v3[v23] + 56);
  if (v24 == 8)
  {
    uint64_t v27 = v26 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
    swift_beginAccess();
    sub_100028164(v27, (uint64_t)v20);
    id v28 = objc_allocWithZone((Class)type metadata accessor for FMUTCardViewController());
    uint64_t v29 = swift_retain();
    id v30 = sub_1003EE3EC(v29, (uint64_t)v20);
    swift_release();
    [v3 presentCard:v30 completion:0];
LABEL_3:

    return;
  }
  id v55 = v14;
  uint64_t v56 = v23;
  uint64_t v32 = v61;
  uint64_t v31 = (uint64_t)v62;
  uint64_t v33 = v3;
  uint64_t v34 = v60;
  uint64_t v35 = v26 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100028164(v35, (uint64_t)v20);
  swift_storeEnumTagMultiPayload();
  LOBYTE(v35) = sub_1000281C8((uint64_t)v20, (uint64_t)v17);
  sub_100028108((uint64_t)v17);
  sub_100028108((uint64_t)v20);
  if ((v35 & 1) == 0)
  {
    swift_storeEnumTagMultiPayload();
    char v36 = sub_1000281C8(v31, (uint64_t)v20);
    sub_100028108((uint64_t)v20);
    if (v36)
    {
      uint64_t v37 = v59 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
      swift_beginAccess();
      sub_100028164(v37, (uint64_t)v20);
      objc_allocWithZone((Class)type metadata accessor for FMChooseMapSheetController());
      uint64_t v38 = swift_retain();
      id v30 = sub_1001A7620(v38, (uint64_t)v20);
      [v25 presentViewController:v30 animated:1 completion:0];
      goto LABEL_3;
    }
    uint64_t v39 = (uint64_t)v55;
    sub_100028164(v31, (uint64_t)v55);
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      sub_100028108(v39);
      sub_100255968();
      return;
    }
    uint64_t v40 = v34;
    uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 32);
    uint64_t v42 = (uint64_t)v10;
    uint64_t v43 = v10;
    uint64_t v44 = v32;
    v41(v43, v39, v32);
    uint64_t v45 = FMFFriend.identifier.getter();
    Swift::String_optional v47 = (uint64_t *)&v33[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_selectedPersonIdentifier];
    if (v45 != *(void *)&v33[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_selectedPersonIdentifier]
      || v46 != *(void *)&v33[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_selectedPersonIdentifier + 8])
    {
      objc_super v62 = v41;
      char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v48)
      {
LABEL_17:
        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v42, v44);
        return;
      }
      uint64_t v49 = v47[1];
      uint64_t v59 = *v47;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v50 = v58;
      sub_1000AFD74(v59, v49, v58);
      uint64_t v51 = (uint64_t)v50;
      swift_release();
      uint64_t v40 = v34;
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v51, 1, v44) == 1)
      {
        sub_100003F10(v51, &qword_1006AF740);
      }
      else
      {
        uint64_t v52 = (uint64_t)v57;
        v62(v57, v51, v44);
        swift_retain();
        sub_1000B0F04(v52);
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v52, v44);
      }
      swift_retain();
      sub_1000B0C8C(v42);
      swift_release();
      *Swift::String_optional v47 = FMFFriend.identifier.getter();
      v47[1] = v53;
    }
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
}

uint64_t sub_1004E9A48()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_1004E9AAC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPersonDetailCardViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for FMPersonDetailCardViewController()
{
  return self;
}

void sub_1004E9B7C(void *a1, char *a2)
{
  id v4 = [a1 view];
  if (v4)
  {
    id v29 = v4;
    sub_1000493BC();
    [a2 addChildViewController:a1];
    uint64_t v5 = *(void *)&a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer];
    uint64_t v6 = OBJC_IVAR____TtC6FindMy19FMCardContainerView_bluredBackground;
    id v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v5
                                                               + OBJC_IVAR____TtC6FindMy19FMCardContainerView_bluredBackground), "contentView"));
    [v7 bounds];
    double v9 = v8;
    double v11 = v10;
    double v13 = v12;
    double v15 = v14;

    [v29 setFrame:v9, v11, v13, v15];
    [v29 setAutoresizingMask:18];
    [v29 setPreservesSuperviewLayoutMargins:1];
    id v16 = [*(id *)(v5 + v6) contentView];
    [v16 addSubview:v29];

    [a1 didMoveToParentViewController:a2];
    uint64_t v17 = (void **)&a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController];
    uint64_t v18 = *(void **)&a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController];
    *uint64_t v17 = a1;
    v17[1] = &off_1006323C0;
    id v19 = a1;

    os_log_type_t v20 = *v17;
    if (*v17)
    {
      uint64_t v21 = v17[1];
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v23 = (void (*)(uint64_t, uint64_t, void *))v21[4];
      uint64_t v24 = a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent];
      id v25 = v20;
      v23(v24, ObjectType, v21);

      id v19 = v25;
    }

    [v29 layoutIfNeeded];
    sub_100048C44();
    sub_1000489A0(0, v26);
    sub_100048C44();
    double v28 = 0.64 - v27;
    if (v28 <= 0.0) {
      double v28 = 0.0;
    }
    [*(id *)&a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground] setAlpha:v28 * *(double *)&a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration]];
  }
}

uint64_t sub_1004E9E14()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 32, 7);
}

double sub_1004E9E54()
{
  double result = 18.0;
  xmmword_1006D2860 = xmmword_1005642D0;
  *(_OWORD *)algn_1006D2870 = xmmword_1005642E0;
  return result;
}

char *sub_1004E9E74(uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  *(void *)&v2[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v5 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_scrollView;
  id v6 = objc_allocWithZone((Class)UIScrollView);
  id v7 = v2;
  *(void *)&v2[v5] = [v6 init];
  uint64_t v8 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_scrollContentView;
  *(void *)&v7[v8] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v9 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_titleLabel;
  *(void *)&v7[v9] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v10 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_subtitleLabel;
  *(void *)&v7[v10] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v11 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_actionButton;
  double v12 = self;
  id v13 = [v12 systemBlueColor];
  double v14 = (objc_class *)type metadata accessor for FMSingleLinePlatterButton();
  id v15 = objc_allocWithZone(v14);
  id v16 = sub_10004E188(v13, 1, 0, 1);

  *(void *)&v7[v11] = v16;
  uint64_t v17 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_secondaryActionButton;
  id v18 = [v12 clearColor];
  id v19 = objc_allocWithZone(v14);
  id v20 = sub_10004E188(v18, 1, 0, 1);

  *(void *)&v7[v17] = v20;
  uint64_t v21 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_informativeImage;
  *(void *)&v7[v21] = [objc_allocWithZone((Class)UIImageView) init];
  *(void *)&v7[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_heightConstraint] = 0;
  *(void *)&v7[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_mediator] = a1;
  v7[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_type] = v4;
  swift_retain();

  v26.receiver = v7;
  v26.super_class = (Class)type metadata accessor for FMSeparationWelcomeScreenViewController();
  unint64_t v22 = (char *)[super initWithNibName:0 bundle:0];
  sub_1004EA158();
  sub_1004EAA54();
  id v23 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v22 action:"nextAction"];
  [*(id *)&v22[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_actionButton] addGestureRecognizer:v23];
  id v24 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v22 action:"secondaryAction"];
  [*(id *)&v22[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_secondaryActionButton] addGestureRecognizer:v24];

  swift_release();
  return v22;
}

void sub_1004EA158()
{
  uint64_t v1 = v0;
  objc_super v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_titleLabel];
  char v3 = v0[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_type];
  id v4 = [self mainBundle];
  unint64_t v5 = 0xD00000000000001BLL;
  if (v3)
  {
    unint64_t v6 = 0xD000000000000022;
    unint64_t v73 = 0x8000000100582B40;
    id v7 = "ITEM_DETAIL_TRUSTED_LOCATION_TITLE";
  }
  else
  {
    unint64_t v6 = 0xD000000000000023;
    unint64_t v73 = 0x8000000100582B40;
    id v7 = "ITEM_DETAIL_NOTIFY_WHEN_LEFT_BEHIND";
  }
  unint64_t v8 = (unint64_t)(v7 - 32) | 0x8000000000000000;
  v9.value._object = (void *)0x8000000100582B20;
  v9.value._countAndFlagsBits = 0xD000000000000016;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v6, v9, (NSBundle)v4, v10, *(Swift::String *)&v5);

  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setText:v11];

  double v12 = *(void **)&v1[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_subtitleLabel];
  id v13 = [self mainBundle];
  unint64_t v14 = 0xD00000000000001BLL;
  if (v3)
  {
    unint64_t v15 = 0xD00000000000003FLL;
    unint64_t v74 = 0x8000000100582B40;
    id v16 = "ITEM_NOTIFICATIONS_SEPARATION_WELCOME_SAFE_LOCATION_DESCRIPTION";
  }
  else
  {
    unint64_t v15 = 0xD000000000000031;
    unint64_t v74 = 0x8000000100582B40;
    id v16 = "ITEM_NOTIFICATIONS_SEPARATION_WELCOME_DESCRIPTION";
  }
  unint64_t v17 = (unint64_t)(v16 - 32) | 0x8000000000000000;
  v18.value._object = (void *)0x8000000100582B20;
  v18.value._countAndFlagsBits = 0xD000000000000016;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v15, v18, (NSBundle)v13, v19, *(Swift::String *)&v14);
  char v81 = v3;

  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v12 setText:v20];

  id v21 = [v1 view];
  if (!v21)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  unint64_t v22 = v21;
  id v23 = v1;
  id v24 = self;
  id v25 = [v24 systemBackgroundColor];
  [v22 setBackgroundColor:v25];

  id v79 = *(id *)&v23[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_scrollView];
  [v79 setPreservesSuperviewLayoutMargins:1];
  id v78 = *(id *)&v23[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_scrollContentView];
  [v78 setPreservesSuperviewLayoutMargins:1];
  [v2 setAdjustsFontForContentSizeCategory:1];
  id v82 = self;
  id v26 = [v82 preferredFontForTextStyle:UIFontTextStyleTitle1];
  double v27 = (void *)sub_100042318(2);

  [v2 setFont:v27];
  [v2 setNumberOfLines:0];
  id v28 = [v24 labelColor];
  [v2 setTextColor:v28];

  [v2 setTextAlignment:1];
  [v12 setAdjustsFontForContentSizeCategory:1];
  id v29 = [v82 preferredFontForTextStyle:UIFontTextStyleBody];
  [v12 setFont:v29];

  [v12 setNumberOfLines:0];
  id v30 = [v24 labelColor];
  [v12 setTextColor:v30];

  id v80 = v12;
  [v12 setTextAlignment:1];
  uint64_t v77 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_informativeImage;
  uint64_t v31 = v23;
  uint64_t v32 = *(void **)&v23[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_informativeImage];
  sub_100006060(0, (unint64_t *)&qword_1006BA4D0);
  id v33 = v32;
  id v34 = sub_1003E7408(0x63496D6574496F4ELL, 0xEA00000000006E6FLL, 6778480, 0xE300000000000000);
  [v33 setImage:v34];

  uint64_t v35 = *(void *)&v23[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_actionButton];
  uint64_t v36 = OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label;
  uint64_t v37 = *(void **)(v35 + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label);
  uint64_t v38 = self;
  id v39 = v37;
  id v40 = [v38 mainBundle];
  v41.value._countAndFlagsBits = 0xD000000000000013;
  v85._countAndFlagsBits = 0xD000000000000018;
  v42._countAndFlagsBits = 0xD00000000000001DLL;
  v85._object = (void *)0x800000010057EF80;
  v42._object = (void *)0x800000010059FFB0;
  v41.value._object = (void *)0x800000010057EF60;
  v43._countAndFlagsBits = 0;
  v43._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v42, v41, (NSBundle)v40, v43, v85);

  NSString v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v39 setText:v44];

  id v45 = *(id *)(v35 + v36);
  id v46 = [v24 systemWhiteColor];
  [v45 setTextColor:v46];

  uint64_t v76 = v35;
  Swift::String_optional v47 = *(void **)(v35 + v36);
  [v47 setTextAlignment:1];
  id v48 = v47;
  id v49 = [v82 preferredFontForTextStyle:UIFontTextStyleBody];
  uint64_t v50 = (void *)sub_100042318(2);

  [v48 setFont:v50];
  uint64_t v51 = *(void *)&v31[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_secondaryActionButton];
  uint64_t v52 = OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label;
  id v53 = *(id *)(v51 + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label);
  id v54 = [v38 mainBundle];
  unint64_t v55 = 0xD00000000000001BLL;
  if (v81)
  {
    unint64_t v56 = 0xD00000000000003ALL;
    unint64_t v75 = 0x8000000100582B40;
    uint64_t v57 = "ITEM_NOTIFICATIONS_EDIT_SEPARATION_SAFE_LOCATION_EDIT_HOME";
  }
  else
  {
    unint64_t v56 = 0xD000000000000032;
    unint64_t v75 = 0x8000000100582B40;
    uint64_t v57 = "ITEM_NOTIFICATIONS_SEPARATION_NOTIFICATION_NOT_NOW";
  }
  unint64_t v58 = (unint64_t)(v57 - 32) | 0x8000000000000000;
  v59.value._object = (void *)0x8000000100582B20;
  v59.value._countAndFlagsBits = 0xD000000000000016;
  v60._countAndFlagsBits = 0;
  v60._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v56, v59, (NSBundle)v54, v60, *(Swift::String *)&v55);

  NSString v61 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v53 setText:v61];

  id v62 = *(id *)(v51 + v52);
  id v63 = [v24 systemBlueColor];
  [v62 setTextColor:v63];

  uint64_t v64 = *(void **)(v51 + v52);
  [v64 setTextAlignment:1];
  id v65 = v64;
  id v66 = [v82 preferredFontForTextStyle:UIFontTextStyleBody];
  Swift::String v67 = (void *)sub_100042318(2);

  [v65 setFont:v67];
  [v78 addSubview:v80];
  [v78 addSubview:v2];
  [v78 addSubview:*(void *)&v31[v77]];
  [v79 addSubview:v78];
  id v68 = [v31 view];
  if (!v68) {
    goto LABEL_18;
  }
  Swift::String v69 = v68;
  [v68 addSubview:v79];

  id v70 = [v31 view];
  if (!v70)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  id v71 = v70;
  [v70 addSubview:v76];

  id v72 = [v31 view];
  if (!v72)
  {
LABEL_20:
    __break(1u);
    return;
  }
  id v83 = v72;
  [v72 addSubview:v51];
}

void sub_1004EAA54()
{
  uint64_t v1 = v0;
  objc_super v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_actionButton];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  char v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_secondaryActionButton];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v157 = *(void **)&v0[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_titleLabel];
  [v157 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_subtitleLabel];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  unint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_scrollView];
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  unint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_scrollContentView];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  if (qword_1006AE228 != -1) {
    swift_once();
  }
  double v7 = *(double *)&qword_1006D20C8;
  id v8 = [v0 view];
  if (!v8)
  {
    __break(1u);
    goto LABEL_25;
  }
  Swift::String_optional v9 = v8;
  id v155 = v6;
  id v156 = v4;
  id v10 = [v8 heightAnchor];

  id v11 = [v10 constraintGreaterThanOrEqualToConstant:480.0];
  double v12 = *(void **)&v1[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_heightConstraint];
  *(void *)&v1[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_heightConstraint] = v11;
  id v151 = v11;

  sub_10005D034(&qword_1006AF2D0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10055C1F0;
  id v14 = [v5 topAnchor];
  id v15 = [v1 view];
  if (!v15)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  id v16 = v15;
  id v17 = [v15 topAnchor];

  id v18 = [v14 constraintEqualToAnchor:v17];
  *(void *)(v13 + 32) = v18;
  id v19 = [v5 leadingAnchor];
  id v20 = [v1 view];
  if (!v20)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v21 = v20;
  id v153 = v3;
  id v22 = [v20 safeAreaLayoutGuide];

  id v23 = [v22 leadingAnchor];
  id v24 = [v19 constraintEqualToAnchor:v23];

  *(void *)(v13 + 40) = v24;
  id v25 = [v5 trailingAnchor];
  id v26 = [v1 view];
  if (!v26)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  double v27 = v26;
  id v158 = self;
  id v28 = [v27 safeAreaLayoutGuide];

  id v29 = [v28 trailingAnchor];
  id v30 = [v25 constraintEqualToAnchor:v29];

  *(void *)(v13 + 48) = v30;
  specialized Array._endMutation()();
  sub_100006060(0, (unint64_t *)&qword_1006AEE60);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v158 activateConstraints:isa];

  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_10055C200;
  id v33 = [v155 topAnchor];
  id v34 = [v5 topAnchor];
  id v35 = [v33 constraintEqualToAnchor:v34];

  *(void *)(v32 + 32) = v35;
  id v36 = [v155 bottomAnchor];
  id v37 = [v5 bottomAnchor];
  id v38 = [v36 constraintEqualToAnchor:v37];

  *(void *)(v32 + 40) = v38;
  id v39 = [v155 leadingAnchor];
  id v40 = [v5 safeAreaLayoutGuide];
  id v41 = [v40 leadingAnchor];

  id v42 = [v39 constraintEqualToAnchor:v41];
  *(void *)(v32 + 48) = v42;
  id v43 = [v155 trailingAnchor];
  id v152 = v5;
  id v44 = [v5 safeAreaLayoutGuide];
  id v45 = [v44 trailingAnchor];

  id v46 = [v43 constraintEqualToAnchor:v45];
  *(void *)(v32 + 56) = v46;
  id v47 = [v155 heightAnchor];
  id v48 = [v47 constraintGreaterThanOrEqualToConstant:480.0];

  *(void *)(v32 + 64) = v48;
  specialized Array._endMutation()();
  Class v49 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v158 activateConstraints:v49];

  uint64_t v50 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_informativeImage;
  [*(id *)&v1[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_informativeImage] setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_10055C1E0;
  id v52 = [*(id *)&v1[v50] centerXAnchor];
  id v53 = [v155 centerXAnchor];
  id v54 = [v52 constraintEqualToAnchor:v53];

  *(void *)(v51 + 32) = v54;
  id v55 = [*(id *)&v1[v50] topAnchor];
  id v56 = [v157 bottomAnchor];
  id v57 = [v55 constraintEqualToAnchor:v56 constant:40.0];

  *(void *)(v51 + 40) = v57;
  specialized Array._endMutation()();
  Class v58 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v158 activateConstraints:v58];

  uint64_t v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = xmmword_10055C1F0;
  id v60 = [v157 topAnchor];
  id v61 = [v155 topAnchor];
  if (qword_1006AE448 != -1) {
    swift_once();
  }
  double v62 = *(double *)&xmmword_1006D2860;
  id v63 = self;
  id v64 = [v63 mainScreen];
  [v64 nativeBounds];
  CGFloat v66 = v65;
  CGFloat v68 = v67;
  CGFloat v70 = v69;
  CGFloat v72 = v71;

  v161.origin.x = v66;
  v161.origin.y = v68;
  v161.size.width = v70;
  v161.size.height = v72;
  if (CGRectGetHeight(v161) > 1136.0) {
    double v73 = v62;
  }
  else {
    double v73 = v62 * 0.625;
  }
  id v74 = [v60 constraintEqualToAnchor:v61 constant:v73 * 3.0];

  *(void *)(v59 + 32) = v74;
  id v75 = [v157 leadingAnchor];
  id v76 = [v155 leadingAnchor];
  double v77 = v7 + v7;
  id v78 = [v75 constraintEqualToAnchor:v76 constant:v7 + v7];

  *(void *)(v59 + 40) = v78;
  id v79 = [v157 trailingAnchor];
  id v80 = [v155 trailingAnchor];
  double v154 = v7;
  double v81 = v7 * -2.0;
  id v82 = [v79 constraintEqualToAnchor:v80 constant:v7 * -2.0];

  *(void *)(v59 + 48) = v82;
  specialized Array._endMutation()();
  Class v83 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v158 activateConstraints:v83];

  uint64_t v84 = swift_allocObject();
  *(_OWORD *)(v84 + 16) = xmmword_10055B950;
  id v85 = [v156 topAnchor];
  id v86 = [*(id *)&v1[v50] bottomAnchor];
  double v87 = *(double *)&xmmword_1006D2860;
  id v88 = [v63 mainScreen];
  [v88 nativeBounds];
  CGFloat v90 = v89;
  CGFloat v92 = v91;
  CGFloat v94 = v93;
  CGFloat v96 = v95;

  v162.origin.x = v90;
  v162.origin.y = v92;
  v162.size.width = v94;
  v162.size.height = v96;
  if (CGRectGetHeight(v162) > 1136.0) {
    double v97 = v87;
  }
  else {
    double v97 = v87 * 0.625;
  }
  id v98 = [v85 constraintEqualToAnchor:v86 constant:v97];

  *(void *)(v84 + 32) = v98;
  id v99 = [v156 leadingAnchor];
  id v100 = [v155 leadingAnchor];
  id v101 = [v99 constraintEqualToAnchor:v100 constant:v77];

  *(void *)(v84 + 40) = v101;
  id v102 = [v156 trailingAnchor];
  id v103 = [v155 trailingAnchor];
  id v104 = [v102 constraintEqualToAnchor:v103 constant:v81];

  *(void *)(v84 + 48) = v104;
  id v105 = [v156 bottomAnchor];
  id v106 = [v155 layoutMarginsGuide];
  id v107 = [v106 bottomAnchor];

  id v108 = [v105 constraintLessThanOrEqualToAnchor:v107];
  *(void *)(v84 + 56) = v108;
  specialized Array._endMutation()();
  Class v109 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v158 activateConstraints:v109];

  uint64_t v110 = swift_allocObject();
  *(_OWORD *)(v110 + 16) = xmmword_10055B950;
  id v111 = [v2 leadingAnchor];
  id v112 = [v1 view];
  if (!v112) {
    goto LABEL_28;
  }
  Class v113 = v112;
  id v114 = [v112 leadingAnchor];

  id v115 = [v111 constraintEqualToAnchor:v114 constant:v77];
  *(void *)(v110 + 32) = v115;
  id v116 = [v2 trailingAnchor];
  id v117 = [v1 view];
  if (!v117)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v118 = v117;
  id v119 = [v117 trailingAnchor];

  id v120 = [v116 constraintEqualToAnchor:v119 constant:v81];
  *(void *)(v110 + 40) = v120;
  id v121 = [v2 bottomAnchor];
  id v122 = [v153 topAnchor];
  id v123 = [v121 constraintEqualToAnchor:v122];

  *(void *)(v110 + 48) = v123;
  id v124 = [v2 topAnchor];
  id v125 = [v152 bottomAnchor];
  id v126 = [v124 constraintEqualToAnchor:v125 constant:v154];

  *(void *)(v110 + 56) = v126;
  specialized Array._endMutation()();
  Class v127 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v158 activateConstraints:v127];

  uint64_t v128 = swift_allocObject();
  *(_OWORD *)(v128 + 16) = xmmword_10055B950;
  id v129 = [v153 leadingAnchor];
  id v130 = [v1 view];
  if (!v130)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  id v131 = v130;
  id v132 = [v130 leadingAnchor];

  id v133 = [v129 constraintEqualToAnchor:v132 constant:v77];
  *(void *)(v128 + 32) = v133;
  id v134 = [v153 trailingAnchor];
  id v135 = [v1 view];
  if (!v135)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  id v136 = v135;
  id v137 = [v135 trailingAnchor];

  id v138 = [v134 constraintEqualToAnchor:v137 constant:v81];
  *(void *)(v128 + 40) = v138;
  id v139 = [v153 bottomAnchor];
  id v140 = [v1 view];
  if (!v140)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  id v141 = v140;
  id v142 = [v140 safeAreaLayoutGuide];

  id v143 = [v142 bottomAnchor];
  id v144 = [v139 constraintEqualToAnchor:v143];

  *(void *)(v128 + 48) = v144;
  id v145 = [v153 bottomAnchor];
  id v146 = [v1 view];
  if (!v146)
  {
LABEL_33:
    __break(1u);
    return;
  }
  id v147 = v146;
  id v148 = [v146 safeAreaLayoutGuide];

  id v149 = [v148 bottomAnchor];
  id v150 = [v145 constraintEqualToAnchor:v149 constant:-v154];

  *(void *)(v128 + 56) = v150;
  specialized Array._endMutation()();
  Class v159 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v158 activateConstraints:v159];
}

id sub_1004EBBE8()
{
  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for FMSeparationWelcomeScreenViewController();
  [super viewDidLayoutSubviews];
  id result = [v0 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  objc_super v2 = result;
  [result frame];
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;

  v20.origin.x = v4;
  v20.origin.y = v6;
  v20.size.width = v8;
  v20.size.height = v10;
  double Height = CGRectGetHeight(v20);
  id result = [v0 view];
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  double v12 = result;
  [result safeAreaInsets];
  double v14 = v13;

  id result = [v0 view];
  if (result)
  {
    id v15 = result;
    double v16 = Height - v14;
    [result safeAreaInsets];
    double v18 = v17;

    return [*(id *)&v0[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_heightConstraint] setConstant:v16 - v18];
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1004EBD64()
{
  uint64_t v1 = v0;
  if (v0[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_type])
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_1000606BC(v2, (uint64_t)qword_1006D1E98);
    double v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      double v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMSeparationWelcomeScreenViewController:  User confirmed notify when found enablement", v5, 2u);
      swift_slowDealloc();
    }

    CGFloat v6 = &v1[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_delegate];
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v7 = *((void *)v6 + 1);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7);
      swift_unknownObjectRelease();
    }
    [v1 dismissViewControllerAnimated:1 completion:0];
  }
  else
  {
    id v9 = [v0 parentViewController];
    if (v9)
    {
      self;
      if (swift_dynamicCastObjCClass()) {
        sub_100138EF8(1, 0, 0);
      }
    }
  }
}

void sub_1004EBF94()
{
  uint64_t v1 = v0;
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_type))
  {
    id v2 = sub_10047830C();
    if (v2)
    {
      double v3 = v2;
      os_log_type_t v4 = self;
      double v5 = CNContactPostalAddressesKey;
      id v6 = [v4 viewControllerForContact:v3];
      [v6 setDisplayMode:1];
      [v6 setAllowsEditing:1];
      [v6 highlightPropertyWithKey:v5 identifier:0];

      v30[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      id v7 = [self mainBundle];
      v32._object = (void *)0x80000001005808C0;
      v8._countAndFlagsBits = 0x425F4C45434E4143;
      v8._object = (void *)0xED00004E4F545455;
      v9._countAndFlagsBits = 0;
      v9._object = (void *)0xE000000000000000;
      v32._countAndFlagsBits = 0xD00000000000001FLL;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v32);

      uint64_t v10 = type metadata accessor for FMSeparationWelcomeScreenViewController();
      v30[3] = v10;
      v30[0] = v1;
      id v11 = v1;
      NSString v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      if (v10)
      {
        double v13 = sub_10002CEB8(v30, v10);
        uint64_t v14 = *(void *)(v10 - 8);
        __chkstk_darwin(v13);
        double v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v14 + 16))(v16);
        uint64_t v17 = _bridgeAnythingToObjectiveC<A>(_:)();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v10);
        sub_10002CEFC((uint64_t)v30);
      }
      else
      {
        uint64_t v17 = 0;
      }
      id v21 = [objc_allocWithZone((Class)UIBarButtonItem) initWithTitle:v12 style:0 target:v17 action:"dismissPresentedVCWithSender:"];

      swift_unknownObjectRelease();
      id v22 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v6];
      [v22 setModalPresentationStyle:2];
      id v23 = [v6 navigationItem];
      [v23 setLeftBarButtonItem:v21 animated:1];

      id v24 = [v6 view];
      if (v24)
      {
        id v25 = v24;
        id v26 = [self systemBackgroundColor];
        [v25 setBackgroundColor:v26];

        id v27 = [objc_allocWithZone((Class)CNContactStore) init];
        [v6 setContactStore:v27];

        [v11 presentViewController:v22 animated:1 completion:0];
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      if (qword_1006AE190 != -1) {
        swift_once();
      }
      uint64_t v18 = type metadata accessor for Logger();
      sub_1000606BC(v18, (uint64_t)qword_1006D1E98);
      id v29 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v29, v19))
      {
        CGRect v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)CGRect v20 = 0;
        _os_log_impl((void *)&_mh_execute_header, v29, v19, "FMTrustedLocationDetailView: No me contact fetched. Check access.", v20, 2u);
        swift_slowDealloc();
      }
    }
  }
  else
  {
    [v0 dismissViewControllerAnimated:1 completion:0];
  }
}

id sub_1004EC64C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMSeparationWelcomeScreenViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for FMSeparationWelcomeScreenViewController()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for FMSeparationWelcomeScreenType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *id result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004EC83CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMSeparationWelcomeScreenType()
{
  return &type metadata for FMSeparationWelcomeScreenType;
}

unint64_t sub_1004EC878()
{
  unint64_t result = qword_1006C0DD0;
  if (!qword_1006C0DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C0DD0);
  }
  return result;
}

void sub_1004EC8CC()
{
  uint64_t v1 = v0;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v2 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_scrollView;
  *(void *)&v1[v2] = [objc_allocWithZone((Class)UIScrollView) init];
  uint64_t v3 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_scrollContentView;
  *(void *)&v1[v3] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v4 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_titleLabel;
  *(void *)&v1[v4] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v5 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_subtitleLabel;
  *(void *)&v1[v5] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v6 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_actionButton;
  id v7 = self;
  id v8 = [v7 systemBlueColor];
  Swift::String v9 = (objc_class *)type metadata accessor for FMSingleLinePlatterButton();
  id v10 = objc_allocWithZone(v9);
  id v11 = sub_10004E188(v8, 1, 0, 1);

  *(void *)&v1[v6] = v11;
  uint64_t v12 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_secondaryActionButton;
  id v13 = [v7 clearColor];
  id v14 = objc_allocWithZone(v9);
  id v15 = sub_10004E188(v13, 1, 0, 1);

  *(void *)&v1[v12] = v15;
  uint64_t v16 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_informativeImage;
  *(void *)&v1[v16] = [objc_allocWithZone((Class)UIImageView) init];
  *(void *)&v1[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_heightConstraint] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1004ECAB8()
{
  uint64_t v1 = v0;
  if (v0[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_updatesEnabled] != 1)
  {
    uint64_t v18 = 0;
    uint64_t v19 = *(void *)&v0[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceSubscription];
    if (!v19) {
      goto LABEL_17;
    }
    CGRect v20 = *(unint64_t **)(*((void *)v0 + 2) + 24);
    swift_beginAccess();
    swift_retain();
    swift_retain();
    int64_t v21 = sub_10014040C(v20 + 2, v19);
    uint64_t v22 = v21;
    unint64_t v23 = v20[2];
    if (v23 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v24 >= v22) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v24 >= v21)
      {
LABEL_16:
        sub_100258678(v22, v24);
        swift_endAccess();
        swift_release();
        swift_release();
LABEL_17:
        uint64_t v25 = *(void *)&v0[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_etaSubscription];
        if (!v25) {
          goto LABEL_21;
        }
        CGRect v20 = *(unint64_t **)(*((void *)v0 + 2) + 32);
        swift_beginAccess();
        swift_retain();
        swift_retain();
        uint64_t v26 = sub_1003D77CC((uint64_t *)v20 + 2, v25);
        uint64_t v22 = v26;
        unint64_t v27 = v20[2];
        if (!(v27 >> 62))
        {
          uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v28 >= v26)
          {
LABEL_20:
            sub_10025995C(v22, v28);
            swift_endAccess();
            swift_release();
            swift_release();
LABEL_21:
            uint64_t v29 = *(void *)&v0[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_locationSubscription];
            if (!v29) {
              goto LABEL_25;
            }
            id v30 = *(char **)(*((void *)v0 + 2) + 40);
            uint64_t v31 = (uint64_t *)&v30[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions];
            swift_beginAccess();
            swift_retain();
            CGRect v20 = v30;
            uint64_t v32 = sub_1003D7800(v31, v29);
            uint64_t v22 = v32;
            if (!((unint64_t)*v31 >> 62))
            {
              uint64_t v33 = *(void *)((*v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (v33 >= v32)
              {
LABEL_24:
                sub_100258690(v22, v33);
                swift_endAccess();
                swift_release();

LABEL_25:
                uint64_t v34 = *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectionSubscription];
                if (!v34) {
                  goto LABEL_29;
                }
                uint64_t v35 = *(void *)(*((void *)v1 + 2) + 56);
                swift_beginAccess();
                swift_retain();
                swift_retain();
                uint64_t v36 = sub_1003D6AB4((uint64_t *)(v35 + 16), v34);
                uint64_t v22 = v36;
                unint64_t v37 = *(void *)(v35 + 16);
                if (!(v37 >> 62))
                {
                  uint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  if (v38 >= v36)
                  {
LABEL_28:
                    sub_1002586A8(v22, v38);
                    swift_endAccess();
                    swift_release();
                    swift_release();
LABEL_29:
                    uint64_t v39 = *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_conditionSubscription];
                    if (!v39) {
                      return;
                    }
                    id v40 = *(char **)(*((void *)v1 + 2) + 16);
                    id v41 = (uint64_t *)&v40[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
                    swift_beginAccess();
                    swift_retain();
                    uint64_t v1 = v40;
                    uint64_t v42 = sub_10006782C(v41, v39);
                    uint64_t v18 = v42;
                    if (!((unint64_t)*v41 >> 62))
                    {
                      uint64_t v43 = *(void *)((*v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
                      if (v43 >= v42)
                      {
LABEL_32:
                        sub_1000675DC(v18, v43);
                        swift_endAccess();
                        swift_release();

                        return;
                      }
LABEL_43:
                      __break(1u);
                      return;
                    }
LABEL_42:
                    swift_bridgeObjectRetain();
                    uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
                    swift_bridgeObjectRelease();
                    if (v43 >= v18) {
                      goto LABEL_32;
                    }
                    goto LABEL_43;
                  }
LABEL_41:
                  __break(1u);
                  goto LABEL_42;
                }
LABEL_40:
                swift_bridgeObjectRetain();
                uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
                swift_bridgeObjectRelease();
                if (v38 >= v22) {
                  goto LABEL_28;
                }
                goto LABEL_41;
              }
LABEL_39:
              __break(1u);
              goto LABEL_40;
            }
LABEL_38:
            swift_bridgeObjectRetain();
            uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v33 >= v22) {
              goto LABEL_24;
            }
            goto LABEL_39;
          }
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
LABEL_36:
        swift_bridgeObjectRetain();
        uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v28 >= v22) {
          goto LABEL_20;
        }
        goto LABEL_37;
      }
    }
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v2 = (void *)*((void *)v0 + 2);
  uint64_t v3 = v2[3];
  type metadata accessor for FMDevicesSubscription();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber + 8) = 0;
  swift_unknownObjectWeakInit();
  swift_retain();
  swift_retain();
  UUID.init()();
  *(void *)(v4 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber + 8) = &off_100642AA8;
  swift_unknownObjectWeakAssign();
  swift_release();
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(v3 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v3 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  swift_release();
  *(void *)&v0[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceSubscription] = v4;
  swift_release();
  uint64_t v5 = v2[4];
  type metadata accessor for FMETASubscription();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + OBJC_IVAR____TtC6FindMy17FMETASubscription_subscriber + 8) = 0;
  swift_unknownObjectWeakInit();
  swift_retain();
  swift_retain();
  UUID.init()();
  *(void *)(v6 + OBJC_IVAR____TtC6FindMy17FMETASubscription_subscriber + 8) = &off_100642A98;
  swift_unknownObjectWeakAssign();
  swift_release();
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(v5 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v5 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  swift_release();
  *(void *)&v0[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_etaSubscription] = v6;
  swift_release();
  id v7 = (void *)v2[5];
  type metadata accessor for FMLocationSubscription();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber + 8) = 0;
  swift_unknownObjectWeakInit();
  swift_retain();
  Swift::String v9 = v7;
  UUID.init()();
  *(void *)(v8 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber + 8) = &off_100642A58;
  swift_unknownObjectWeakAssign();
  swift_release();
  id v10 = &v9[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions];
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v10 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();

  *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_locationSubscription] = v8;
  swift_release();
  uint64_t v11 = v2[7];
  type metadata accessor for FMSelectionSubscription();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber + 8) = 0;
  swift_unknownObjectWeakInit();
  swift_retain();
  swift_retain();
  UUID.init()();
  *(void *)(v12 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber + 8) = &off_100642A30;
  swift_unknownObjectWeakAssign();
  swift_release();
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(v11 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v11 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  swift_release();
  *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectionSubscription] = v12;
  swift_release();
  id v13 = (void *)v2[2];
  type metadata accessor for FMConditionSubscription();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber + 8) = 0;
  swift_unknownObjectWeakInit();
  swift_retain();
  id v15 = v13;
  UUID.init()();
  *(void *)(v14 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber + 8) = &off_1006429B0;
  swift_unknownObjectWeakAssign();
  swift_release();
  uint64_t v16 = &v15[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v16 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();

  *(void *)&v1[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_conditionSubscription] = v14;
  swift_release();
  swift_retain();
  uint64_t v17 = FMIPManager.devices.getter();
  swift_release();
  sub_1004EE098(v17);
  swift_bridgeObjectRelease();
}

uint64_t sub_1004ED468(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FMDeviceDetailViewModel();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess();
  sub_1004F1F74(a1, v7, (uint64_t (*)(void))type metadata accessor for FMDeviceDetailViewModel);
  swift_endAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = Strong;
    sub_100057B6C(v7, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMDeviceDetailViewModel);
    if (*(unsigned char *)(v2 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_updatesEnabled) == 1)
    {
      sub_1001E14C8((uint64_t)v6);
      uint64_t v10 = v9 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_delegate;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v11 = *(void *)(v10 + 8);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v11 + 8))(v2, v6, ObjectType, v11);
        swift_unknownObjectRelease();
      }
    }
    swift_unknownObjectRelease();
    sub_100057F94((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMDeviceDetailViewModel);
  }
  return sub_100057F94(a1, (uint64_t (*)(void))type metadata accessor for FMDeviceDetailViewModel);
}

uint64_t sub_1004ED618(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v41 = a1;
  uint64_t v3 = type metadata accessor for FMDeviceDetailViewModel();
  __chkstk_darwin(v3 - 8);
  id v46 = (uint64_t *)((char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for FMIPDevice();
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  id v45 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v42 = (char *)&v36 - v8;
  uint64_t v40 = type metadata accessor for FMSelectedSection();
  uint64_t v9 = __chkstk_darwin(v40);
  uint64_t v39 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v37 = (char *)&v36 - v11;
  uint64_t v38 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v12 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v15);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v16 - 8);
  *(void *)(v1 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v1 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceSubscription) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_etaSubscription) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_locationSubscription) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectionSubscription) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_conditionSubscription) = 0;
  uint64_t v17 = OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_itemAger;
  type metadata accessor for FMItemAger();
  swift_allocObject();
  *(void *)(v1 + v17) = sub_10004D3FC();
  uint64_t v36 = OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_updateQueue;
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  static DispatchQoS.userInitiated.getter();
  Class v49 = _swiftEmptyArrayStorage;
  sub_100046B28((unint64_t *)&unk_1006AE490, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10005D034((uint64_t *)&unk_1006B6C50);
  sub_100045050((unint64_t *)&unk_1006AE4A0, (uint64_t *)&unk_1006B6C50);
  uint64_t v18 = (uint64_t)v39;
  uint64_t v19 = (uint64_t)v37;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v38);
  uint64_t v20 = v41;
  *(void *)(v1 + v36) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(unsigned char *)(v1 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_updatesEnabled) = 0;
  uint64_t v21 = *(void *)(v20 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100057B6C(v21, v19, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_100057B6C(v19, v18, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_100057F94(v18, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    uint64_t v47 = 0;
    unint64_t v48 = 0xE000000000000000;
    _StringGuts.grow(_:)(88);
    v35._countAndFlagsBits = 0xD000000000000056;
    v35._object = (void *)0x80000001005A01A0;
    String.append(_:)(v35);
    _print_unlocked<A, B>(_:_:)();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t v22 = v18 + *(int *)(sub_10005D034(&qword_1006BAF00) + 48);
    uint64_t v24 = v42;
    uint64_t v23 = v43;
    uint64_t v25 = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v42, v18, v44);
    sub_100003F10(v22, (uint64_t *)&unk_1006AFE30);
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_1000606BC(v26, (uint64_t)qword_1006D1E98);
    unint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "FMDeviceDetailDataSource: initialized", v29, 2u);
      swift_slowDealloc();
    }

    id v30 = *(void (**)(uint64_t, char *, uint64_t))(v23 + 16);
    v30(v2 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice, v24, v25);
    *(void *)(v2 + 16) = v20;
    uint64_t v31 = v45;
    v30((uint64_t)v45, v24, v25);
    uint64_t v32 = swift_retain();
    uint64_t v33 = v46;
    sub_1004A564C(v32, v31, 0, 0, 0, 0.0, v46);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v25);
    sub_100057F94(v19, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    sub_1004F0544((uint64_t)v33, v2 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel);
    *(void *)(*(void *)(v2 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_itemAger) + 24) = &off_100642A88;
    swift_unknownObjectWeakAssign();
    return v2;
  }
  return result;
}

uint64_t sub_1004EDD70(uint64_t a1, uint64_t a2)
{
  sub_10005D034(&qword_1006AF040);
  uint64_t v3 = type metadata accessor for FMIPDevice();
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10055B970;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 16))(v6 + v5, a2, v3);
  sub_1004EE098(v6);
  swift_setDeallocating();
  swift_arrayDestroy();

  return swift_deallocClassInstance();
}

uint64_t sub_1004EDE8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FMIPDevice();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a3 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  uint64_t v11 = FMIPDevice.identifier.getter();
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v11 == a1 && v13 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_8:
    swift_retain();
    uint64_t v17 = FMIPManager.devices.getter();
    swift_release();
    sub_1004EE098(v17);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1004EE02C()
{
  swift_retain();
  uint64_t v0 = FMIPManager.devices.getter();
  swift_release();
  sub_1004EE098(v0);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1004EE098(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FMSelectedSection();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v79 - v8;
  uint64_t v10 = sub_10005D034((uint64_t *)&unk_1006AFE30);
  __chkstk_darwin(v10 - 8);
  uint64_t v91 = (uint64_t)v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  double v87 = (char *)v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for DispatchQoS();
  uint64_t v86 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  id v85 = (char *)v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10005D034(&qword_1006B2AF0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for FMIPDevice();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v84 = (char *)v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  id v98 = (char *)v79 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  id v99 = (char *)v79 - v24;
  uint64_t v83 = v25;
  __chkstk_darwin(v23);
  CGFloat v92 = (char *)v79 - v26;
  uint64_t v93 = v18;
  uint64_t v27 = *(void *)(a1 + 16);
  if (v27)
  {
    v79[0] = v16;
    v79[2] = v4;
    id v80 = v9;
    double v81 = v7;
    uint64_t v28 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    uint64_t v82 = v2;
    uint64_t v29 = v2 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
    v79[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v97 = v29;
    swift_beginAccess();
    uint64_t v30 = v18 + 16;
    double v95 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    uint64_t v96 = v18 + 16;
    uint64_t v31 = (void (**)(char *, uint64_t))(v18 + 8);
    uint64_t v94 = *(void *)(v30 + 56);
    uint64_t v32 = v99;
    while (1)
    {
      uint64_t v33 = v95;
      v95(v32, v28, v17);
      uint64_t v34 = v17;
      uint64_t v35 = FMIPDevice.identifier.getter();
      uint64_t v37 = v36;
      uint64_t v38 = v98;
      v33(v98, v97, v17);
      uint64_t v39 = FMIPDevice.identifier.getter();
      uint64_t v41 = v40;
      uint64_t v42 = *v31;
      (*v31)(v38, v34);
      if (v35 == v39 && v37 == v41) {
        break;
      }
      char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v43) {
        goto LABEL_10;
      }
      uint64_t v32 = v99;
      uint64_t v17 = v34;
      v42(v99, v34);
      v28 += v94;
      if (!--v27)
      {
        uint64_t v44 = 1;
        uint64_t v2 = v82;
        uint64_t v18 = v93;
        uint64_t v7 = v81;
        uint64_t v9 = v80;
        uint64_t v16 = (char *)v79[0];
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_10:
    uint64_t v18 = v93;
    uint64_t v16 = (char *)v79[0];
    uint64_t v17 = v34;
    (*(void (**)(void, char *, uint64_t))(v93 + 32))(v79[0], v99, v34);
    uint64_t v44 = 0;
    uint64_t v2 = v82;
    uint64_t v7 = v81;
    uint64_t v9 = v80;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = 1;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, v44, 1, v17);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_100003F10((uint64_t)v16, &qword_1006B2AF0);
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v45 = type metadata accessor for Logger();
    sub_1000606BC(v45, (uint64_t)qword_1006D1E98);
    id v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v46, v47))
    {
      unint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v48 = 0;
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "FMDeviceDetailDataSource: device doesn't exist anymore. Going back to list", v48, 2u);
      swift_slowDealloc();
    }

    uint64_t v49 = *(void *)(*(void *)(v2 + 16) + 56);
    swift_storeEnumTagMultiPayload();
    uint64_t v50 = v49 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess();
    sub_100057B6C(v50, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    swift_beginAccess();
    swift_retain();
    sub_1004F1F74((uint64_t)v9, v50, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    swift_endAccess();
    sub_100053CA0((unint64_t)v7);
    sub_100057F94((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    sub_100057F94((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    return swift_release();
  }
  else
  {
    id v52 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    id v53 = v92;
    v52(v92, v16, v17);
    uint64_t v54 = v17;
    uint64_t v55 = sub_1004EF254();
    uint64_t v97 = v56;
    id v98 = (char *)v55;
    double v95 = v58;
    uint64_t v96 = v57;
    uint64_t v59 = v2;
    id v60 = *(void **)(*(void *)(*(void *)(v2 + 16) + 40)
                   + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
    id v99 = *(char **)(v59 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_updateQueue);
    id v61 = v84;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v84, v53, v54);
    unint64_t v62 = (*(unsigned __int8 *)(v18 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    unint64_t v63 = (v83 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v64 = swift_allocObject();
    *(void *)(v64 + 16) = v59;
    v52((char *)(v64 + v62), v61, v54);
    *(void *)(v64 + v63) = v60;
    double v65 = (void *)(v64 + ((v63 + 15) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v66 = v97;
    *double v65 = v98;
    v65[1] = v66;
    double v67 = v95;
    v65[2] = v96;
    v65[3] = v67;
    aBlock[4] = sub_1004F1ACC;
    aBlock[5] = v64;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003C410;
    aBlock[3] = &unk_100642CF0;
    CGFloat v68 = _Block_copy(aBlock);
    id v69 = v60;
    swift_retain();
    CGFloat v70 = v85;
    static DispatchQoS.unspecified.getter();
    uint64_t aBlock[6] = _swiftEmptyArrayStorage;
    sub_100046B28((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10005D034((uint64_t *)&unk_1006AE4B0);
    sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
    double v71 = v87;
    uint64_t v72 = v90;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v68);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v71, v72);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v70, v88);
    swift_release();
    uint64_t v73 = v59 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
    swift_beginAccess();
    uint64_t v74 = type metadata accessor for FMDeviceDetailViewModel();
    uint64_t v75 = v91;
    sub_10010A088(v73 + *(int *)(v74 + 36), v91);
    uint64_t v76 = type metadata accessor for FMIPItem();
    uint64_t v77 = *(void *)(v76 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76) == 1)
    {
      sub_100003F10(v75, (uint64_t *)&unk_1006AFE30);
    }
    else
    {
      FMIPItem.identifier.getter();
      (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v75, v76);
    }
    id v78 = v92;
    static FMIPAnalytics.sendDeviceEvent(device:primaryPartIdentifier:)();

    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v78, v54);
  }
}

uint64_t sub_1004EEB94(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  double v46 = *(double *)&a7;
  uint64_t v43 = a4;
  uint64_t v44 = a6;
  uint64_t v42 = a5;
  id v40 = a3;
  uint64_t v55 = a2;
  uint64_t v51 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v54 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v50 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v52 = *(void *)(v9 - 8);
  uint64_t v53 = v9;
  __chkstk_darwin(v9);
  uint64_t v49 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FMIPDevice();
  uint64_t v38 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v47 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FMDeviceDetailViewModel();
  uint64_t v45 = *(void *)(v15 - 8);
  uint64_t v16 = *(void *)(v45 + 64);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v41 = (uint64_t)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (uint64_t *)((char *)&v37 - v18);
  uint64_t v37 = a1;
  uint64_t v20 = *(void *)(a1 + 16);
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v39(v14, v55, v11);
  uint64_t v21 = v42;
  swift_bridgeObjectRetain();
  swift_retain();
  id v22 = v40;
  id v23 = v40;
  sub_1004A564C(v20, v14, v22, v21, v44, v46, v19);
  sub_10005D034(&qword_1006B19B0);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_10055B970;
  *(void *)(v24 + 56) = v15;
  *(void *)(v24 + 64) = &off_10063E8C0;
  uint64_t v25 = sub_100042804((uint64_t *)(v24 + 32));
  unint64_t v48 = v19;
  sub_100057B6C((uint64_t)v19, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMDeviceDetailViewModel);
  sub_10005E24C(v24);
  swift_bridgeObjectRelease();
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v26 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v27 = v41;
  sub_100057B6C((uint64_t)v19, v41, (uint64_t (*)(void))type metadata accessor for FMDeviceDetailViewModel);
  uint64_t v28 = v38;
  v39(v14, v55, v38);
  unint64_t v29 = (*(unsigned __int8 *)(v45 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  unint64_t v30 = (v16 + *(unsigned __int8 *)(v12 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v37;
  sub_1004F0544(v27, v31 + v29);
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v31 + v30, v14, v28);
  aBlock[4] = sub_1004F1EA4;
  aBlock[5] = v31;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_100642D40;
  uint64_t v32 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  uint64_t v33 = v49;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100046B28((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  uint64_t v34 = v50;
  uint64_t v35 = v51;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v32);

  (*(void (**)(char *, uint64_t))(v54 + 8))(v34, v35);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v33, v53);
  return sub_100057F94((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FMDeviceDetailViewModel);
}

uint64_t sub_1004EF148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FMDeviceDetailViewModel();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100057B6C(a2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMDeviceDetailViewModel);
  sub_1004ED468((uint64_t)v8);
  uint64_t v9 = a1 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  swift_beginAccess();
  uint64_t v10 = type metadata accessor for FMIPDevice();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v9, a3, v10);
  return swift_endAccess();
}

uint64_t sub_1004EF254()
{
  uint64_t v1 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void **)(*(void *)(*(void *)(v0 + 16) + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  if (v4)
  {
    id v5 = v4;
    FMIPDevice.bestLocation.getter();
    uint64_t v6 = type metadata accessor for FMIPLocation();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v3, 1, v6) != 1)
    {
      uint64_t v9 = (void *)FMIPLocation.location.getter();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v3, v6);
      swift_retain();
      uint64_t v10 = FMIPDevice.identifier.getter();
      uint64_t v8 = sub_1002342C8(v5, v9, v10, v11);

      swift_release();
      swift_bridgeObjectRelease();
      return v8;
    }

    sub_100003F10((uint64_t)v3, (uint64_t *)&unk_1006B2AE0);
  }
  return 0;
}

uint64_t sub_1004EF41C()
{
  swift_release();
  sub_100068760(v0 + 24);
  uint64_t v1 = v0 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  uint64_t v2 = type metadata accessor for FMIPDevice();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  sub_100057F94(v0 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel, (uint64_t (*)(void))type metadata accessor for FMDeviceDetailViewModel);
  return v0;
}

uint64_t sub_1004EF524()
{
  sub_1004EF41C();

  return swift_deallocClassInstance();
}

uint64_t sub_1004EF57C()
{
  return type metadata accessor for FMDeviceDetailDataSource();
}

uint64_t type metadata accessor for FMDeviceDetailDataSource()
{
  uint64_t result = qword_1006C0E38;
  if (!qword_1006C0E38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1004EF5D0()
{
  uint64_t result = type metadata accessor for FMIPDevice();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FMDeviceDetailViewModel();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_1004EF6DC(uint64_t a1, uint64_t a2)
{
  return sub_1004EFBD8(a2);
}

uint64_t sub_1004EF6E4(uint64_t a1, uint64_t a2)
{
  return sub_1004EFFB4(a2);
}

uint64_t sub_1004EF6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1004F09EC(a4, a5);
}

uint64_t sub_1004EF6F8()
{
  return sub_1004F0740();
}

uint64_t sub_1004EF700()
{
  return sub_1004F1554();
}

void sub_1004EF708(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1004EF710(uint64_t a1, char a2)
{
  return sub_1004F0D1C(a2);
}

uint64_t sub_1004EF718(uint64_t a1, char a2)
{
  return sub_1004F1138(a2);
}

void sub_1004EF720(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FMIPDevice();
  uint64_t v30 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMSelectedSection();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v27 - v11;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = sub_1000606BC(v13, (uint64_t)qword_1006D1E98);
  sub_100057B6C(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  uint64_t v32 = v14;
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v31 = v7;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v29 = v4;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v27 = a1;
    uint64_t v28 = v6;
    *(_DWORD *)uint64_t v18 = 136315138;
    uint64_t v33 = v19;
    uint64_t v34 = 0;
    unint64_t v35 = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)();
    uint64_t v34 = sub_1000606F4(v34, v35, &v33);
    uint64_t v6 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100057F94((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "FMDeviceDetailDataSource: didUpdate selectedSection %s", v18, 0xCu);
    swift_arrayDestroy();
    a1 = v27;
    swift_slowDealloc();
    uint64_t v4 = v29;
    swift_slowDealloc();
  }
  else
  {
    sub_100057F94((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  }

  sub_100057B6C(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_100057F94((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "FMDeviceDetailDataSource: not updating selection...", v22, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v23 = (uint64_t)&v10[*(int *)(sub_10005D034(&qword_1006BAF00) + 48)];
    uint64_t v24 = v30;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v6, v10, v4);
    sub_100003F10(v23, (uint64_t *)&unk_1006AFE30);
    uint64_t v25 = v2 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v24 + 24))(v25, v6, v4);
    swift_endAccess();
    swift_retain();
    uint64_t v26 = FMIPManager.devices.getter();
    swift_release();
    sub_1004EE098(v26);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v4);
  }
}

uint64_t sub_1004EFBD8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_1000606BC(v11, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 134217984;
    aBlock[0] = *(void *)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMDeviceDetailDataSource: didUpdate %ld devices", v14, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v15 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v2;
  *(void *)(v16 + 24) = a1;
  aBlock[4] = sub_1004F0718;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_100642BD8;
  uint64_t v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100046B28((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v20);
}

uint64_t sub_1004EFFB4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v40 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v38 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for DispatchQoS();
  uint64_t v37 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v36 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMIPDevice();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v34 = v10;
  unint64_t v35 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v29 - v11;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_1000606BC(v13, (uint64_t)qword_1006D1E98);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v33(v12, a1, v7);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v30 = a1;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v31 = v1;
    aBlock[0] = v18;
    uint64_t v32 = v4;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v29 = v17 + 4;
    uint64_t v19 = FMIPDevice.debugDescription.getter();
    uint64_t v41 = sub_1000606F4(v19, v20, aBlock);
    uint64_t v4 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "FMDeviceDetailDataSource: didUpdate %s device", v17, 0xCu);
    swift_arrayDestroy();
    uint64_t v2 = v31;
    swift_slowDealloc();
    a1 = v30;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }

  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  os_log_type_t v21 = (void *)static OS_dispatch_queue.main.getter();
  id v22 = v35;
  v33(v35, a1, v7);
  unint64_t v23 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v2;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v24 + v23, v22, v7);
  aBlock[4] = (uint64_t)sub_1004F0674;
  aBlock[5] = v24;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10003C410;
  aBlock[3] = (uint64_t)&unk_100642B88;
  uint64_t v25 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  uint64_t v26 = v36;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100046B28((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  uint64_t v27 = v38;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v26, v39);
}

uint64_t sub_1004F0544(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMDeviceDetailViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004F05A8()
{
  uint64_t v1 = type metadata accessor for FMIPDevice();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1004F0674()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMIPDevice() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1004EDD70(v2, v3);
}

uint64_t sub_1004F06D8()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004F0718()
{
  return sub_1004EE098(*(void *)(v0 + 24));
}

uint64_t sub_1004F0740()
{
  uint64_t v1 = v0;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000606BC(v2, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    sub_10005D034((uint64_t *)&unk_1006B2B30);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v6 = isa;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMDeviceDetailDataSource: itemsDidAge %@", v5, 0xCu);
    sub_10005D034((uint64_t *)&unk_1006B5A50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  sub_10005D034(&qword_1006AF040);
  uint64_t v7 = type metadata accessor for FMIPDevice();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10055B970;
  uint64_t v11 = v1 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  swift_beginAccess();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 16))(v10 + v9, v11, v7);
  sub_1004EE098(v10);
  swift_setDeallocating();
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1004F09EC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a1;
  v13[3] = a2;
  v13[4] = v2;
  aBlock[4] = sub_1004F0D10;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_100642C28;
  uint64_t v14 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100046B28((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v17);
}

uint64_t sub_1004F0CD0()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004F0D10()
{
  return sub_1004EDE8C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1004F0D1C(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_1000606BC(v11, (uint64_t)qword_1006D1E98);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v23 = v2;
    os_log_type_t v15 = (uint8_t *)v14;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v24 = v5;
    *(_DWORD *)os_log_type_t v15 = 136315138;
    aBlock[0] = v16;
    if (a1) {
      uint64_t v17 = 28239;
    }
    else {
      uint64_t v17 = 6710863;
    }
    if (a1) {
      unint64_t v18 = 0xE200000000000000;
    }
    else {
      unint64_t v18 = 0xE300000000000000;
    }
    uint64_t v27 = sub_1000606F4(v17, v18, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMDeviceDetailDataSource: Airplane Mode is %s", v15, 0xCu);
    swift_arrayDestroy();
    uint64_t v5 = v24;
    swift_slowDealloc();
    uint64_t v2 = v23;
    swift_slowDealloc();
  }

  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v19 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = (uint64_t)sub_1004F19B4;
  aBlock[5] = v2;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10003C410;
  aBlock[3] = (uint64_t)&unk_100642CA0;
  unint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100046B28((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v10, v26);
}

uint64_t sub_1004F1138(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_1000606BC(v11, (uint64_t)qword_1006D1E98);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v23 = v2;
    os_log_type_t v15 = (uint8_t *)v14;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v24 = v5;
    *(_DWORD *)os_log_type_t v15 = 136315138;
    aBlock[0] = v16;
    if (a1) {
      uint64_t v17 = 6710863;
    }
    else {
      uint64_t v17 = 28239;
    }
    if (a1) {
      unint64_t v18 = 0xE300000000000000;
    }
    else {
      unint64_t v18 = 0xE200000000000000;
    }
    uint64_t v27 = sub_1000606F4(v17, v18, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMDeviceDetailDataSource: BT is %s", v15, 0xCu);
    swift_arrayDestroy();
    uint64_t v5 = v24;
    swift_slowDealloc();
    uint64_t v2 = v23;
    swift_slowDealloc();
  }

  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v19 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = (uint64_t)sub_1004F19B4;
  aBlock[5] = v2;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10003C410;
  aBlock[3] = (uint64_t)&unk_100642C78;
  unint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100046B28((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v10, v26);
}

uint64_t sub_1004F1554()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v24 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1000606BC(v8, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v22 = v1;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v23 = v5;
    uint64_t v14 = (void *)v13;
    *(_DWORD *)uint64_t v12 = 138412290;
    uint64_t v21 = v6;
    sub_100006060(0, (unint64_t *)&unk_1006BEAA0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    aBlock[0] = isa;
    uint64_t v6 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v14 = isa;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMDeviceDetailDataSource: didUpdate location %@", v12, 0xCu);
    sub_10005D034((uint64_t *)&unk_1006B5A50);
    swift_arrayDestroy();
    uint64_t v5 = v23;
    swift_slowDealloc();
    uint64_t v1 = v22;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = sub_1004F19B4;
  aBlock[5] = v1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_100642C50;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  unint64_t v18 = v24;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100046B28((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_100045050((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v18, v6);
}

uint64_t sub_1004F19B4()
{
  return sub_1004EE02C();
}

uint64_t sub_1004F19D0()
{
  uint64_t v1 = type metadata accessor for FMIPDevice();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 32, v5);
}

uint64_t sub_1004F1ACC()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMIPDevice() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = v0 + v2;
  unint64_t v6 = *(void **)(v0 + v3);
  uint64_t v7 = (uint64_t *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  uint64_t v10 = v7[2];
  uint64_t v11 = v7[3];

  return sub_1004EEB94(v4, v5, v6, v8, v9, v10, v11);
}

uint64_t sub_1004F1B70()
{
  uint64_t v1 = (int *)type metadata accessor for FMDeviceDetailViewModel();
  uint64_t v20 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v18 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v21 = type metadata accessor for FMIPDevice();
  uint64_t v2 = *(void *)(v21 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v17 = *(void *)(v2 + 64);
  swift_release();
  uint64_t v19 = (v20 + 24) & ~v20;
  uint64_t v4 = v0 + v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v19 + v1[9];
  uint64_t v6 = type metadata accessor for FMIPItem();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v4 + v1[19];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  uint64_t v12 = v4 + v1[21];
  uint64_t v13 = type metadata accessor for FMIPBatteryStatus();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v4 + v1[33];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v14, 1, v9)) {
    v11(v14, v9);
  }
  uint64_t v15 = (v19 + v18 + v3) & ~v3;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v15, v21);

  return _swift_deallocObject(v0, v15 + v17, v20 | v3 | 7);
}

uint64_t sub_1004F1EA4()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMDeviceDetailViewModel() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for FMIPDevice() - 8);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_1004EF148(v5, v0 + v2, v6);
}

uint64_t sub_1004F1F74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

id sub_1004F20D4()
{
  return sub_1004F2F20(type metadata accessor for FMSafeAreaInsetsPropagatingTableView);
}

uint64_t type metadata accessor for FMSafeAreaInsetsPropagatingTableView()
{
  return self;
}

void *sub_1004F2110()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy32FMUnknownItemsListViewController_tableView);
  id v2 = v1;
  return v1;
}

char *sub_1004F2140(uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  *(void *)&v2[OBJC_IVAR____TtC6FindMy32FMUnknownItemsListViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  id v5 = objc_allocWithZone((Class)type metadata accessor for FMSafeAreaInsetsPropagatingTableView());
  uint64_t v6 = v2;
  id v7 = [v5 initWithFrame:0, 0.0, 0.0, 0.0, 0.0];
  id v8 = objc_allocWithZone((Class)type metadata accessor for FMUnknownItemsListDataSource(0));
  swift_retain();
  id v9 = v7;
  id v10 = sub_10023937C(a1, v9, v4);
  *(void *)&v6[OBJC_IVAR____TtC6FindMy32FMUnknownItemsListViewController_tableView] = v9;
  *(void *)&v6[OBJC_IVAR____TtC6FindMy32FMUnknownItemsListViewController_dataSource] = v10;
  id v11 = v9;
  id v12 = v10;

  if (qword_1006AE0C8 != -1) {
    swift_once();
  }
  v15[4] = xmmword_1006D1B50;
  v15[5] = unk_1006D1B60;
  v15[6] = xmmword_1006D1B70;
  uint64_t v16 = qword_1006D1B80;
  v15[0] = xmmword_1006D1B10;
  v15[1] = unk_1006D1B20;
  void v15[2] = xmmword_1006D1B30;
  v15[3] = unk_1006D1B40;
  uint64_t v13 = sub_1002855F4(a1, (uint64_t)v15);

  return v13;
}

id sub_1004F237C(char a1)
{
  id v2 = v1;
  if (qword_1006AE418 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000606BC(v4, (uint64_t)qword_1006D2790);
  id v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)id v7 = 136315138;
    sub_1000606F4(0xD000000000000011, 0x80000001005A0270, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "FMUnknownItemsListDataSource: %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v8 = (objc_class *)type metadata accessor for FMUnknownItemsListViewController();
  v11.receiver = v2;
  v11.super_class = v8;
  return [super viewDidAppear:a1 & 1];
}

void sub_1004F2570(char a1)
{
  id v2 = v1;
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for FMUnknownItemsListViewController();
  [super viewWillAppear:a1 & 1];
  sub_10023A1FC();
  uint64_t v4 = self;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v2;
  v8[4] = sub_1004F3010;
  v8[5] = v5;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10003C410;
  v8[3] = &unk_100642D90;
  os_log_type_t v6 = _Block_copy(v8);
  id v7 = v2;
  swift_release();
  [v4 animateWithDuration:4 delay:v6 options:0 animations:0.35 completion:0.1];
  _Block_release(v6);
}

id sub_1004F26A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v27 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10005D034(&qword_1006AF770);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v26 = *(id *)(a1 + OBJC_IVAR____TtC6FindMy32FMUnknownItemsListViewController_tableView);
  id result = [v26 indexPathsForSelectedRows];
  if (result)
  {
    objc_super v9 = result;
    uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v11 = *(void *)(v10 + 16);
    uint64_t v21 = v10;
    if (v11)
    {
      uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
      uint64_t v12 = v3 + 16;
      unint64_t v14 = v10 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
      uint64_t v15 = *(void *)(v12 + 56);
      uint64_t v16 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 40);
      uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 32);
      uint64_t v25 = v13;
      uint64_t v22 = (void (**)(char *, char *, uint64_t))(v12 + 16);
      uint64_t v23 = v15;
      swift_bridgeObjectRetain();
      unint64_t v20 = (v12 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v17 = v27;
      while (1)
      {
        v25(v7, v14, v2);
        uint64_t v18 = *v16;
        (*v16)(v7, 0, 1, v2);
        if ((*v24)(v7, 1, v2) == 1) {
          break;
        }
        (*v22)(v17, v7, v2);
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        [v26 deselectRowAtIndexPath:isa, 1, v20, v21];

        (*(void (**)(char *, uint64_t))(v12 - 8))(v17, v2);
        v14 += v23;
        if (!--v11) {
          goto LABEL_8;
        }
      }
    }
    else
    {
      uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      swift_bridgeObjectRetain();
LABEL_8:
      v18(v7, 1, 1, v2);
    }
    return (id)swift_bridgeObjectRelease_n();
  }
  return result;
}

void sub_1004F2A10()
{
  sub_100285964();
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorView] setHidden:1];
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryBackground] setAlpha:1.0];
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primarySeperator] setAlpha:1.0];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryLabel];
  id v2 = [self mainBundle];
  v3.value._countAndFlagsBits = 0xD000000000000013;
  v10._object = (void *)0x800000010057EF80;
  v4._object = (void *)0x80000001005903D0;
  v3.value._object = (void *)0x800000010057EF60;
  v4._countAndFlagsBits = 0xD000000000000018;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = 0xD000000000000018;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v3, (NSBundle)v2, v5, v10);

  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setText:v6];

  id v7 = [v0 view];
  if (v7)
  {
    id v8 = v7;
    [v7 insertSubview:*(void *)&v0[OBJC_IVAR____TtC6FindMy32FMUnknownItemsListViewController_tableView] above:*(void *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView]];
  }
  else
  {
    __break(1u);
  }
}

void sub_1004F2BD4()
{
  sub_100286330();
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy32FMUnknownItemsListViewController_tableView];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10055B950;
  id v3 = [v1 topAnchor];
  id v4 = [*(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primarySeperator] bottomAnchor];
  id v5 = [v3 constraintEqualToAnchor:v4];

  *(void *)(v2 + 32) = v5;
  id v6 = [v1 bottomAnchor];
  id v7 = [v0 view];
  if (!v7)
  {
    __break(1u);
    goto LABEL_8;
  }
  id v8 = v7;
  id v9 = [v7 bottomAnchor];

  id v10 = [v6 constraintGreaterThanOrEqualToAnchor:v9];
  *(void *)(v2 + 40) = v10;
  id v11 = [v1 leadingAnchor];
  id v12 = [v0 view];
  if (!v12)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v13 = v12;
  id v14 = [v12 leadingAnchor];

  id v15 = [v11 constraintEqualToAnchor:v14];
  *(void *)(v2 + 48) = v15;
  id v16 = [v1 trailingAnchor];
  id v17 = [v0 view];
  if (!v17)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v18 = v17;
  uint64_t v19 = self;
  id v20 = [v18 trailingAnchor];

  id v21 = [v16 constraintEqualToAnchor:v20];
  *(void *)(v2 + 56) = v21;
  specialized Array._endMutation()();
  sub_10004FCE4();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v19 activateConstraints:isa];
}

uint64_t sub_1004F2EB8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6FindMy32FMUnknownItemsListViewController_delegate;

  return sub_100068760(v1);
}

id sub_1004F2F08()
{
  return sub_1004F2F20(type metadata accessor for FMUnknownItemsListViewController);
}

id sub_1004F2F20(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for FMUnknownItemsListViewController()
{
  return self;
}

uint64_t sub_1004F2FD8()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1004F3010()
{
  return sub_1004F26A4(*(void *)(v0 + 16));
}

id sub_1004F310C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMItemAnnotationView();
  return [super dealloc];
}

uint64_t sub_1004F3144@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_10005D034((uint64_t *)&unk_1006C1150);
  uint64_t result = __chkstk_darwin(v3);
  id v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  unint64_t v8 = v1[1];
  unint64_t v10 = *(void *)(*v1 + 16);
  if (v8 == v10)
  {
    id v11 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    return v11(a1, 1, 1, v3);
  }
  else
  {
    if (v8 >= v10)
    {
      __break(1u);
    }
    else
    {
      uint64_t v20 = v5;
      uint64_t v12 = type metadata accessor for FMIPSafeLocation();
      uint64_t v13 = *(void *)(v12 - 8);
      uint64_t v14 = v13;
      unint64_t v15 = v9
          + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))
          + *(void *)(v13 + 72) * v8;
      v1[1] = v8 + 1;
      id v16 = &v7[*(int *)(v3 + 48)];
      uint64_t v17 = v1[2];
      uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v13 + 16))(v16, v15, v12);
      if (!__OFADD__(v17, 1))
      {
        v1[2] = v17 + 1;
        uint64_t v18 = (char *)a1 + *(int *)(v3 + 48);
        *a1 = v17;
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v16, v12);
        return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v3);
      }
    }
    __break(1u);
  }
  return result;
}

void sub_1004F3388()
{
  sub_1004DE808();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_sectionLabel);
  if (*(void *)(*(void *)(v0 + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_safeLocations) + 16))
  {
    id v2 = [self mainBundle];
    v8._countAndFlagsBits = 0xD00000000000001BLL;
    v3._countAndFlagsBits = 0xD000000000000024;
    v8._object = (void *)0x8000000100582B40;
    v3._object = (void *)0x800000010059F960;
    v4.value._object = (void *)0x8000000100582B20;
    v4.value._countAndFlagsBits = 0xD000000000000016;
    v5._countAndFlagsBits = 0;
    v5._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v8);

    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  [v1 setText:v6];
}

uint64_t sub_1004F34B0(uint64_t a1)
{
  id v2 = v1;
  uint64_t v96 = type metadata accessor for FMIPLocation();
  uint64_t v4 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  double v95 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMIPSafeLocation();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10005D034(&qword_1006C1148);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v93 = (uint64_t *)((char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v14 = (uint64_t *)((char *)&v82 - v13);
  uint64_t v83 = OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_safeLocations;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_numSafeLocations] = *(void *)(*(void *)&v1[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_safeLocations] + 16);
  sub_1004F4348();
  unint64_t v15 = *(void (***)(char *, uint64_t))&v1[OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_sectionLabel];
  uint64_t v84 = a1;
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16)
  {
    uint64_t v94 = v15;
    id v17 = [self mainBundle];
    v102._countAndFlagsBits = 0xD00000000000001BLL;
    v18._countAndFlagsBits = 0xD000000000000024;
    v102._object = (void *)0x8000000100582B40;
    v18._object = (void *)0x800000010059F960;
    v19.value._object = (void *)0x8000000100582B20;
    v19.value._countAndFlagsBits = 0xD000000000000016;
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v102);

    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unint64_t v15 = v94;
  }
  else
  {
    NSString v21 = 0;
  }
  uint64_t v22 = &off_100686000;
  [v15 setText:v21];

  uint64_t v100 = 0;
  uint64_t v101 = 0;
  uint64_t v99 = v84;
  uint64_t v23 = &v1[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_snapshotMemoryCache];
  uint64_t v85 = OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_mapSnapshotter;
  uint64_t v24 = (unint64_t *)&v1[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_locationsRow];
  swift_bridgeObjectRetain();
  uint64_t v89 = v23;
  swift_beginAccess();
  uint64_t v88 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t v87 = v16 - 1;
  uint64_t v25 = v24;
  uint64_t v94 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v86 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v91 = v14;
  uint64_t v92 = v6;
  uint64_t v90 = v24;
  while (1)
  {
    id v26 = v93;
    sub_1004F3144(v93);
    sub_1004F6714((uint64_t)v26, (uint64_t)v14);
    uint64_t v27 = sub_10005D034((uint64_t *)&unk_1006C1150);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v14, 1, v27) == 1) {
      break;
    }
    uint64_t v28 = *v14;
    (*v88)(v9, (char *)v14 + *(int *)(v27 + 48), v6);
    id v29 = objc_allocWithZone((Class)type metadata accessor for FMDeletableRowView());
    uint64_t v30 = sub_1002F2DC8(0, 1);
    uint64_t v31 = sub_10033FA94();
    uint64_t v32 = (uint64_t *)&v30[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title];
    uint64_t *v32 = v31;
    v32[1] = v33;
    swift_bridgeObjectRelease();
    uint64_t v34 = *(void **)&v30[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_titleLabel];
    if (v32[1])
    {
      id v35 = v34;
      swift_bridgeObjectRetain();
      NSString v36 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v37 = v34;
      NSString v36 = 0;
    }
    [v34 v22[359] v36];

    uint64_t v38 = sub_10034010C();
    uint64_t v39 = (uint64_t *)&v30[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_subtitle];
    *uint64_t v39 = v38;
    v39[1] = v40;
    swift_bridgeObjectRelease();
    uint64_t v41 = *(void **)&v30[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_secondaryLabel];
    if (v39[1])
    {
      id v42 = v41;
      swift_bridgeObjectRetain();
      NSString v43 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v44 = v41;
      NSString v43 = 0;
    }
    [v41 v22[359] v43];

    uint64_t v45 = FMIPSafeLocation.identifier.getter();
    double v46 = (uint64_t *)&v30[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_identifier];
    *double v46 = v45;
    v46[1] = v47;
    swift_bridgeObjectRelease();
    uint64_t v48 = OBJC_IVAR____TtC6FindMy18FMDeletableRowView_imageView;
    [*(id *)&v30[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_imageView] _setContinuousCornerRadius:4.0];
    [*(id *)&v30[v48] setContentMode:0];
    id v49 = [*(id *)&v30[v48] layer];
    [v49 setMasksToBounds:1];

    BOOL v50 = v28 != v87;
    v30[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_separated] = v28 == v87;
    [*(id *)&v30[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_separator] setHidden:v50];
    uint64_t v51 = v95;
    FMIPSafeLocation.location.getter();
    uint64_t v52 = (void *)FMIPLocation.location.getter();
    uint64_t v53 = *v94;
    (*v94)(v51, v96);
    [v52 coordinate];
    [v52 coordinate];
    uint64_t v97 = 0;
    unint64_t v98 = 0xE000000000000000;
    Double.write<A>(to:)();
    v54._countAndFlagsBits = 45;
    v54._object = (void *)0xE100000000000000;
    String.append(_:)(v54);
    Double.write<A>(to:)();

    uint64_t v56 = v97;
    uint64_t v55 = v98;
    uint64_t v57 = *(void *)v89;
    if (*(void *)(*(void *)v89 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v58 = sub_100053708(v56, v55);
      if (v59)
      {
        id v60 = *(id *)(*(void *)(v57 + 56) + 8 * v58);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        uint64_t v61 = OBJC_IVAR____TtC6FindMy18FMDeletableRowView_image;
        unint64_t v62 = *(void **)&v30[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_image];
        *(void *)&v30[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_image] = v60;
        id v63 = v60;

        [*(id *)&v30[v48] setImage:*(void *)&v30[v61]];
        [v30 setNeedsLayout];

        goto LABEL_17;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v64 = *(void *)&v2[v85];
    double v65 = v95;
    FMIPSafeLocation.location.getter();
    uint64_t v66 = (void *)FMIPLocation.location.getter();
    v53(v65, v96);
    id v67 = [v2 traitCollection];
    swift_bridgeObjectRetain();
    CGFloat v68 = v30;
    id v69 = v2;
    sub_1001185F4(v66, v67, 0, v64, v68, v69, v56, v55, 50.0, 50.0);

    swift_bridgeObjectRelease_n();
LABEL_17:
    id v70 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v2 action:"locationRowTapWithSender:"];
    [v30 addGestureRecognizer:v70];
    uint64_t v25 = v90;
    swift_beginAccess();
    double v71 = v30;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    uint64_t v14 = v91;
    uint64_t v6 = v92;
    if (*(void *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();

    (*v86)(v9, v6);
    uint64_t v22 = &off_100686000;
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  unint64_t v72 = *v25;
  if ((*v25 & 0x8000000000000000) != 0 || (v72 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v73 = (uint64_t)sub_1004AF280(v72);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v73 = v72 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
  }
  uint64_t v97 = v73;
  sub_1004F550C(&v97);
  swift_bridgeObjectRelease();
  uint64_t v74 = v97;
  if (v97 < 0 || (v97 & 0x4000000000000000) != 0)
  {
    swift_retain();
    uint64_t v75 = _CocoaArrayWrapper.endIndex.getter();
    if (!v75) {
      goto LABEL_35;
    }
LABEL_26:
    if (__OFSUB__(v75, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v76 = v75 - 1;
      if (v75 >= 1)
      {
        uint64_t v77 = 0;
        id v78 = *(void **)&v2[OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentStackView];
        do
        {
          if ((v74 & 0xC000000000000001) != 0) {
            id v79 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v79 = *(id *)(v74 + 8 * v77 + 32);
          }
          id v80 = v79;
          [v78 addArrangedSubview:v79];
          v80[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_separated] = v76 != v77;
          [*(id *)&v80[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_separator] setHidden:v76 == v77];

          ++v77;
        }
        while (v75 != v77);
        goto LABEL_35;
      }
    }
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v75 = *(void *)(v97 + 16);
    swift_retain();
    if (v75) {
      goto LABEL_26;
    }
LABEL_35:
    swift_release_n();
    *(void *)&v2[v83] = v84;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1004F3F74(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v22 = a5;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v25 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005EC68();
  uint64_t v23 = static OS_dispatch_queue.main.getter();
  unint64_t v15 = (void *)swift_allocObject();
  void v15[2] = a2;
  v15[3] = a1;
  v15[4] = a3;
  v15[5] = a4;
  v15[6] = v22;
  aBlock[4] = sub_1004F67CC;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_100642E08;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = a2;
  id v18 = a1;
  id v19 = a3;
  swift_bridgeObjectRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10005FE54();
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_10005ECA8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  Swift::String v20 = (void *)v23;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v24);
}

uint64_t sub_1004F4220(char *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = OBJC_IVAR____TtC6FindMy18FMDeletableRowView_image;
  uint64_t v10 = *(void **)&a1[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_image];
  *(void *)&a1[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_image] = a2;
  id v11 = a2;

  [*(id *)&a1[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_imageView] setImage:*(void *)&a1[v9]];
  [a1 setNeedsLayout];

  uint64_t v12 = (uint64_t *)(a3 + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_snapshotMemoryCache);
  swift_beginAccess();
  id v13 = v11;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *v12;
  *uint64_t v12 = 0x8000000000000000;
  sub_1001B8574((uint64_t)v13, a4, a5, isUniquelyReferenced_nonNull_native);
  *uint64_t v12 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1004F4348()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_locationsRow);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v3) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease_n();
    *uint64_t v1 = (uint64_t)_swiftEmptyArrayStorage;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentStackView);
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v2 + 8 * v5 + 32);
      }
      uint64_t v8 = v7;
      ++v5;
      [v7 removeFromSuperview];
      [v6 removeArrangedSubview:v8];
    }
    while (v3 != v5);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_1004F4494(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006BEB20);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMIPSafeLocation();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v11 = __chkstk_darwin(v10);
  id v13 = (char *)v65 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)v65 - v15;
  if (*(uint64_t *)&v1[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_numSafeLocations] <= 19)
  {
    double v71 = v6;
    id v75 = (id)v14;
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_1000606BC(v17, (uint64_t)qword_1006D1E98);
    id v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      Swift::String v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "FMSafeLocationSuggestionView: Row tapped", v20, 2u);
      swift_slowDealloc();
    }

    uint64_t v21 = *(void *)&v2[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_groupBeaconUUIDs];
    if (v21 && *(void *)(v21 + 16))
    {
      swift_bridgeObjectRetain();
      id v22 = v75;
    }
    else
    {
      sub_10005D034((uint64_t *)&unk_1006AEE90);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_10055B970;
      if (*(void *)&v2[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_beaconUUID + 8])
      {
        uint64_t v43 = *(void *)&v2[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_beaconUUID];
        unint64_t v44 = *(void *)&v2[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_beaconUUID + 8];
      }
      else
      {
        uint64_t v43 = 0;
        unint64_t v44 = 0xE000000000000000;
      }
      id v22 = v75;
      *(void *)(v21 + 32) = v43;
      *(void *)(v21 + 40) = v44;
      swift_bridgeObjectRetain();
    }
    id v45 = [a1 view];
    if (v45)
    {
      double v46 = v45;
      type metadata accessor for FMDeletableRowView();
      uint64_t v47 = swift_dynamicCastClass();
      if (v47)
      {
        id v70 = v46;
        uint64_t v48 = *(void *)(v47 + OBJC_IVAR____TtC6FindMy18FMDeletableRowView_identifier + 8);
        if (v48)
        {
          CGFloat v68 = (char *)v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v69 = v21;
          uint64_t v49 = *(void *)&v2[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_safeLocations];
          uint64_t v50 = *(void *)(v49 + 16);
          if (v50)
          {
            uint64_t v66 = v16;
            uint64_t v67 = v8;
            uint64_t v51 = *(void *)(v47 + OBJC_IVAR____TtC6FindMy18FMDeletableRowView_identifier);
            uint64_t v53 = *(void (**)(char *, uint64_t, id))(v8 + 16);
            uint64_t v52 = v8 + 16;
            uint64_t v73 = v53;
            uint64_t v74 = v2;
            uint64_t v54 = v49 + ((*(unsigned __int8 *)(v52 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 64));
            uint64_t v72 = *(void *)(v52 + 56);
            v65[1] = v49;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            while (1)
            {
              v73(v13, v54, v22);
              if (FMIPSafeLocation.identifier.getter() == v51 && v48 == v55) {
                break;
              }
              char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if (v56) {
                goto LABEL_38;
              }
              id v22 = v75;
              (*(void (**)(char *, id))(v52 - 8))(v13, v75);
              v54 += v72;
              if (!--v50)
              {
                swift_bridgeObjectRelease();
                uint64_t v57 = 1;
                uint64_t v2 = v74;
                uint64_t v16 = v66;
                uint64_t v8 = v67;
                goto LABEL_36;
              }
            }
            swift_bridgeObjectRelease();
LABEL_38:
            swift_bridgeObjectRelease();
            uint64_t v8 = v67;
            uint64_t v58 = (uint64_t)v71;
            id v22 = v75;
            (*(void (**)(char *, char *, id))(v67 + 32))(v71, v13, v75);
            uint64_t v57 = 0;
            uint64_t v2 = v74;
            uint64_t v16 = v66;
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v57 = 1;
LABEL_36:
            uint64_t v58 = (uint64_t)v71;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, id))(v8 + 56))(v58, v57, 1, v22);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(uint64_t, uint64_t, id))(v8 + 48))(v58, 1, v22) == 1)
          {

            swift_bridgeObjectRelease();
            sub_1004F654C(v58);
          }
          else
          {
            char v59 = v16;
            id v75 = *(id *)(v8 + 32);
            ((void (*)(char *, uint64_t, id))v75)(v16, v58, v22);
            id v60 = *(void (**)(char *, char *, id))(v8 + 16);
            uint64_t v61 = v68;
            v60(v68, v59, v22);
            type metadata accessor for FMIPAssignMultipleSafeLocationsItemAction();
            swift_allocObject();
            uint64_t v74 = (char *)FMIPAssignMultipleSafeLocationsItemAction.init(beaconUUIDs:location:)();
            v60(v61, v59, v22);
            unint64_t v62 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
            uint64_t v63 = swift_allocObject();
            *(void *)(v63 + 16) = v2;
            ((void (*)(unint64_t, char *, id))v75)(v63 + v62, v61, v22);
            swift_retain();
            uint64_t v64 = v2;
            sub_1000C9440((uint64_t)v74, (uint64_t)sub_1004F6678, v63);
            swift_release();
            swift_release();
            swift_release();

            (*(void (**)(char *, id))(v8 + 8))(v59, v22);
          }
          return;
        }
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v23 = self;
  id v24 = [v23 mainBundle];
  uint64_t v74 = v2;
  v79._object = (void *)0x8000000100582B40;
  v25._object = (void *)0x8000000100595D10;
  v25._countAndFlagsBits = 0xD000000000000021;
  v26.value._countAndFlagsBits = 0xD000000000000016;
  v26.value._object = (void *)0x8000000100582B20;
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  v79._countAndFlagsBits = 0xD00000000000001BLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v25, v26, (NSBundle)v24, v27, v79);

  id v28 = [v23 mainBundle];
  v29._countAndFlagsBits = 0xD000000000000024;
  v80._object = (void *)0x8000000100582B40;
  v29._object = (void *)0x8000000100595D40;
  v30.value._countAndFlagsBits = 0xD000000000000016;
  v30.value._object = (void *)0x8000000100582B20;
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  v80._countAndFlagsBits = 0xD00000000000001BLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v29, v30, (NSBundle)v28, v31, v80);

  uint64_t v76 = 0;
  unint64_t v77 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v32 = [v23 mainBundle];
  v81._object = (void *)0x800000010057F840;
  v33._countAndFlagsBits = 0x4F545455425F4B4FLL;
  v33._object = (void *)0xEF454C5449545F4ELL;
  v34._countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  v81._countAndFlagsBits = 0xD000000000000021;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v33, (Swift::String_optional)0, (NSBundle)v32, v34, v81);

  NSString v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v37 = [self alertControllerWithTitle:v35 message:v36 preferredStyle:1];

  NSString v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v75 = [self actionWithTitle:v38 style:0 handler:0];

  [v37 addAction:v75];
  uint64_t v39 = v74;
  while (1)
  {
    uint64_t v40 = v39;
    uint64_t v39 = (char *)[v39 nextResponder];

    if (!v39) {
      break;
    }
    self;
    uint64_t v41 = (void *)swift_dynamicCastObjCClass();
    if (v41)
    {
      [v41 presentViewController:v37 animated:1 completion:0];

      break;
    }
  }

  id v42 = v75;
}

void sub_1004F4E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  if (a1)
  {
    uint64_t v6 = self;
    id v7 = [v6 mainBundle];
    v8._countAndFlagsBits = 0xD00000000000001ELL;
    v36._object = (void *)0x8000000100582B40;
    v8._object = (void *)0x800000010058BDC0;
    v9.value._countAndFlagsBits = 0xD000000000000016;
    v9.value._object = (void *)0x8000000100582B20;
    v10._countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    v36._countAndFlagsBits = 0xD00000000000001BLL;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v36);

    id v11 = [v6 mainBundle];
    v12._countAndFlagsBits = 0xD00000000000002ALL;
    v37._object = (void *)0x8000000100582B40;
    v12._object = (void *)0x800000010058BDE0;
    v13.value._countAndFlagsBits = 0xD000000000000016;
    v13.value._object = (void *)0x8000000100582B20;
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    v37._countAndFlagsBits = 0xD00000000000001BLL;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v37);

    v33[0] = 0;
    v33[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v15 = [v6 mainBundle];
    v38._countAndFlagsBits = 0xD000000000000021;
    v38._object = (void *)0x800000010057F840;
    v16._countAndFlagsBits = 0x4F545455425F4B4FLL;
    v16._object = (void *)0xEF454C5449545F4ELL;
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v38);

    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v20 = [self alertControllerWithTitle:v18 message:v19 preferredStyle:1];

    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    oslog = [self actionWithTitle:v21 style:0 handler:0];

    [v20 addAction:oslog];
    id v22 = a5;
    while (1)
    {
      uint64_t v23 = v22;
      id v22 = [v22 nextResponder];

      if (!v22) {
        break;
      }
      self;
      id v24 = (void *)swift_dynamicCastObjCClass();
      if (v24)
      {
        [v24 presentViewController:v20 animated:1 completion:0];

        break;
      }
    }
  }
  else
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_1004BE314(a6);
      swift_unknownObjectRelease();
    }
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_1000606BC(v26, (uint64_t)qword_1006D1E98);
    oslog = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v27))
    {
      id v28 = (uint8_t *)swift_slowAlloc();
      v33[0] = swift_slowAlloc();
      *(_DWORD *)id v28 = 136315138;
      uint64_t v34 = 0;
      sub_10005D034(&qword_1006B4220);
      uint64_t v29 = String.init<A>(describing:)();
      uint64_t v34 = sub_1000606F4(v29, v30, v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v27, "FMSafeLocationSuggestionsView: Assign Safe Location completed with error: %s", v28, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
  }
}

uint64_t sub_1004F5360()
{
  swift_bridgeObjectRelease();
  sub_100068760(v0 + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_delegate);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_1004F5404()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMSafeLocationSuggestionsView();
  return [super dealloc];
}

uint64_t type metadata accessor for FMSafeLocationSuggestionsView()
{
  return self;
}

uint64_t sub_1004F550C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_1000653D8(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1004F5588(v6);
  return specialized ContiguousArray._endMutation()();
}

Swift::Int sub_1004F5588(uint64_t *a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v4);
  Swift::Int v137 = v4;
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_179;
    }
    if ((unint64_t)v4 < 2) {
      return result;
    }
    uint64_t v9 = *a1;
    uint64_t v10 = -1;
    uint64_t v11 = 1;
    uint64_t v146 = *a1;
    while (1)
    {
      uint64_t v141 = v11;
      Swift::String v14 = *(char **)(v146 + 8 * v11);
      uint64_t v142 = v10;
      uint64_t v138 = v9;
      while (1)
      {
        if (*(void *)&v14[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title + 8])
        {
          uint64_t v15 = *(void *)&v14[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title];
          unint64_t v16 = *(void *)&v14[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title + 8];
        }
        else
        {
          uint64_t v15 = 0;
          unint64_t v16 = 0xE000000000000000;
        }
        Swift::String v17 = *(void **)v9;
        NSString v18 = (void *)(*(void *)v9 + OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title);
        if (!v18[1]) {
          break;
        }
        unint64_t v19 = v18[1];
        if (v15 == *v18) {
          goto LABEL_21;
        }
LABEL_22:
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRetain();
        NSString v21 = v14;
        id v22 = v17;
        swift_bridgeObjectRetain();

        swift_bridgeObjectRelease();
        Swift::Int result = swift_bridgeObjectRelease();
        if (v20)
        {
          if (!v146) {
            goto LABEL_183;
          }
          uint64_t v23 = *(void **)v9;
          Swift::String v14 = *(char **)(v9 + 8);
          *(void *)uint64_t v9 = v14;
          *(void *)(v9 + 8) = v23;
          v9 -= 8;
          if (!__CFADD__(v10++, 1)) {
            continue;
          }
        }
        goto LABEL_12;
      }
      unint64_t v19 = 0xE000000000000000;
      if (v15) {
        goto LABEL_22;
      }
LABEL_21:
      if (v16 != v19) {
        goto LABEL_22;
      }
      swift_bridgeObjectRetain();
      Swift::String v12 = v14;
      id v13 = v17;
      swift_bridgeObjectRetain();

      Swift::Int result = swift_bridgeObjectRelease_n();
LABEL_12:
      uint64_t v11 = v141 + 1;
      uint64_t v9 = v138 + 8;
      uint64_t v10 = v142 - 1;
      if (v141 + 1 == v137) {
        return result;
      }
    }
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_188;
  }
  Swift::Int v132 = result;
  id v129 = a1;
  if (v4 < 2)
  {
    Swift::String v25 = (char *)_swiftEmptyArrayStorage;
    uint64_t v148 = (uint64_t)_swiftEmptyArrayStorage;
    id v140 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      unint64_t v28 = _swiftEmptyArrayStorage[2];
LABEL_145:
      if (v28 >= 2)
      {
        uint64_t v123 = *v129;
        do
        {
          unint64_t v124 = v28 - 2;
          if (v28 < 2) {
            goto LABEL_174;
          }
          if (!v123) {
            goto LABEL_187;
          }
          uint64_t v125 = *(void *)&v25[16 * v124 + 32];
          uint64_t v126 = *(void *)&v25[16 * v28 + 24];
          sub_1004F5FCC((void **)(v123 + 8 * v125), (void **)(v123 + 8 * *(void *)&v25[16 * v28 + 16]), v123 + 8 * v126, v140);
          if (v2) {
            break;
          }
          if (v126 < v125) {
            goto LABEL_175;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            Swift::String v25 = sub_1002687F8((uint64_t)v25);
          }
          if (v124 >= *((void *)v25 + 2)) {
            goto LABEL_176;
          }
          Class v127 = &v25[16 * v124 + 32];
          *(void *)Class v127 = v125;
          *((void *)v127 + 1) = v126;
          unint64_t v128 = *((void *)v25 + 2);
          if (v28 > v128) {
            goto LABEL_177;
          }
          memmove(&v25[16 * v28 + 16], &v25[16 * v28 + 32], 16 * (v128 - v28));
          *((void *)v25 + 2) = v128 - 1;
          unint64_t v28 = v128 - 1;
        }
        while (v128 > 2);
      }
LABEL_156:
      swift_bridgeObjectRelease();
      *(void *)((v148 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    type metadata accessor for FMDeletableRowView();
    uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    id v140 = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v148 = v8;
  }
  Swift::Int v26 = 0;
  uint64_t v27 = *a1;
  uint64_t v130 = *a1 - 8;
  uint64_t v131 = *a1 + 16;
  Swift::String v25 = (char *)_swiftEmptyArrayStorage;
  uint64_t v147 = *a1;
LABEL_31:
  Swift::Int v29 = v26 + 1;
  id v135 = v25;
  Swift::Int v136 = v26;
  if (v26 + 1 >= v4)
  {
    Swift::Int v33 = v26;
    goto LABEL_69;
  }
  uint64_t v133 = v2;
  unint64_t v30 = *(char **)(v27 + 8 * v29);
  if (*(void *)&v30[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title + 8])
  {
    uint64_t v31 = *(void *)&v30[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title];
    unint64_t v32 = *(void *)&v30[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title + 8];
  }
  else
  {
    uint64_t v31 = 0;
    unint64_t v32 = 0xE000000000000000;
  }
  uint64_t v34 = *(char **)(v27 + 8 * v26);
  NSString v35 = &v34[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title];
  if (*(void *)&v34[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title + 8])
  {
    unint64_t v36 = *((void *)v35 + 1);
    if (v31 != *(void *)v35) {
      goto LABEL_42;
    }
  }
  else
  {
    unint64_t v36 = 0xE000000000000000;
    if (v31)
    {
LABEL_42:
      int v143 = _stringCompareWithSmolCheck(_:_:expecting:)();
      goto LABEL_43;
    }
  }
  if (v32 != v36) {
    goto LABEL_42;
  }
  int v143 = 0;
LABEL_43:
  swift_bridgeObjectRetain();
  Swift::String v37 = v30;
  Swift::String v38 = v34;
  swift_bridgeObjectRetain();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Swift::Int v33 = v136;
  Swift::Int v4 = v137;
  Swift::Int v29 = v136 + 2;
  if (v136 + 2 >= v137)
  {
    uint64_t v27 = v147;
  }
  else
  {
    uint64_t v39 = (void **)(v131 + 8 * v136);
    while (1)
    {
      uint64_t v40 = *v39;
      uint64_t v41 = (uint64_t *)((char *)*v39 + OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title);
      if (v41[1])
      {
        uint64_t v42 = *v41;
        unint64_t v43 = v41[1];
      }
      else
      {
        uint64_t v42 = 0;
        unint64_t v43 = 0xE000000000000000;
      }
      unint64_t v44 = (char *)*(v39 - 1);
      id v45 = &v44[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title];
      if (*(void *)&v44[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title + 8])
      {
        uint64_t v46 = *(void *)v45;
        unint64_t v47 = *((void *)v45 + 1);
      }
      else
      {
        uint64_t v46 = 0;
        unint64_t v47 = 0xE000000000000000;
      }
      Swift::Int v48 = v29;
      if (v42 == v46 && v43 == v47) {
        int v49 = 0;
      }
      else {
        int v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRetain();
      id v50 = v40;
      uint64_t v51 = v44;
      swift_bridgeObjectRetain();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v143 ^ v49)) {
        break;
      }
      Swift::Int v29 = v48 + 1;
      ++v39;
      Swift::Int v4 = v137;
      Swift::String v25 = v135;
      uint64_t v27 = v147;
      if (v137 == v48 + 1)
      {
        Swift::Int v29 = v137;
        goto LABEL_60;
      }
    }
    Swift::Int v4 = v137;
    Swift::String v25 = v135;
    uint64_t v27 = v147;
    Swift::Int v29 = v48;
LABEL_60:
    Swift::Int v33 = v136;
  }
  uint64_t v2 = v133;
  if (v143)
  {
    if (v29 < v33) {
      goto LABEL_180;
    }
    if (v33 < v29)
    {
      uint64_t v52 = (uint64_t *)(v130 + 8 * v29);
      Swift::Int v53 = v29;
      Swift::Int v54 = v33;
      uint64_t v55 = (uint64_t *)(v27 + 8 * v33);
      do
      {
        if (v54 != --v53)
        {
          if (!v27) {
            goto LABEL_186;
          }
          uint64_t v56 = *v55;
          uint64_t *v55 = *v52;
          *uint64_t v52 = v56;
        }
        ++v54;
        --v52;
        ++v55;
      }
      while (v54 < v53);
    }
  }
LABEL_69:
  if (v29 >= v4) {
    goto LABEL_96;
  }
  if (__OFSUB__(v29, v33)) {
    goto LABEL_178;
  }
  if (v29 - v33 >= v132) {
    goto LABEL_96;
  }
  if (__OFADD__(v33, v132)) {
    goto LABEL_181;
  }
  if (v33 + v132 >= v4) {
    Swift::Int v57 = v4;
  }
  else {
    Swift::Int v57 = v33 + v132;
  }
  if (v57 >= v33)
  {
    if (v29 == v57) {
      goto LABEL_96;
    }
    Swift::Int v134 = v57;
    uint64_t v58 = v130 + 8 * v29;
LABEL_82:
    Swift::Int v144 = v29;
    unint64_t v62 = *(char **)(v27 + 8 * v29);
    Swift::Int v63 = v33;
    uint64_t v139 = v58;
    while (1)
    {
      if (*(void *)&v62[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title + 8])
      {
        uint64_t v64 = *(void *)&v62[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title];
        unint64_t v65 = *(void *)&v62[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title + 8];
      }
      else
      {
        uint64_t v64 = 0;
        unint64_t v65 = 0xE000000000000000;
      }
      uint64_t v66 = *(void **)v58;
      uint64_t v67 = (void *)(*(void *)v58 + OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title);
      if (v67[1])
      {
        unint64_t v68 = v67[1];
        if (v64 != *v67) {
          goto LABEL_91;
        }
      }
      else
      {
        unint64_t v68 = 0xE000000000000000;
        if (v64) {
          goto LABEL_91;
        }
      }
      if (v65 == v68)
      {
        swift_bridgeObjectRetain();
        char v59 = v62;
        id v60 = v66;
        swift_bridgeObjectRetain();

        swift_bridgeObjectRelease_n();
LABEL_80:
        Swift::Int v61 = v144;
        uint64_t v27 = v147;
LABEL_81:
        Swift::Int v29 = v61 + 1;
        uint64_t v58 = v139 + 8;
        Swift::Int v33 = v136;
        if (v29 != v134) {
          goto LABEL_82;
        }
        Swift::Int v29 = v134;
        Swift::String v25 = v135;
LABEL_96:
        if (v29 < v33) {
          goto LABEL_173;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          Swift::String v25 = sub_100268068(0, *((void *)v25 + 2) + 1, 1, v25);
        }
        unint64_t v74 = *((void *)v25 + 2);
        unint64_t v73 = *((void *)v25 + 3);
        unint64_t v28 = v74 + 1;
        uint64_t v27 = v147;
        if (v74 >= v73 >> 1)
        {
          id v122 = sub_100268068((char *)(v73 > 1), v74 + 1, 1, v25);
          uint64_t v27 = v147;
          Swift::String v25 = v122;
        }
        *((void *)v25 + 2) = v28;
        id v75 = v25 + 32;
        uint64_t v76 = &v25[16 * v74 + 32];
        *(void *)uint64_t v76 = v33;
        *((void *)v76 + 1) = v29;
        Swift::Int v145 = v29;
        if (v74)
        {
LABEL_102:
          unint64_t v77 = v28 - 1;
          if (v28 >= 4)
          {
            uint64_t v82 = &v75[16 * v28];
            uint64_t v83 = *((void *)v82 - 8);
            uint64_t v84 = *((void *)v82 - 7);
            BOOL v88 = __OFSUB__(v84, v83);
            uint64_t v85 = v84 - v83;
            if (v88) {
              goto LABEL_162;
            }
            uint64_t v87 = *((void *)v82 - 6);
            uint64_t v86 = *((void *)v82 - 5);
            BOOL v88 = __OFSUB__(v86, v87);
            uint64_t v80 = v86 - v87;
            char v81 = v88;
            if (v88) {
              goto LABEL_163;
            }
            unint64_t v89 = v28 - 2;
            uint64_t v90 = &v75[16 * v28 - 32];
            uint64_t v92 = *(void *)v90;
            uint64_t v91 = *((void *)v90 + 1);
            BOOL v88 = __OFSUB__(v91, v92);
            uint64_t v93 = v91 - v92;
            if (v88) {
              goto LABEL_165;
            }
            BOOL v88 = __OFADD__(v80, v93);
            uint64_t v94 = v80 + v93;
            if (v88) {
              goto LABEL_168;
            }
            if (v94 >= v85)
            {
              id v112 = &v75[16 * v77];
              uint64_t v114 = *(void *)v112;
              uint64_t v113 = *((void *)v112 + 1);
              BOOL v88 = __OFSUB__(v113, v114);
              uint64_t v115 = v113 - v114;
              if (v88) {
                goto LABEL_172;
              }
              BOOL v105 = v80 < v115;
            }
            else
            {
LABEL_115:
              if (v81) {
                goto LABEL_164;
              }
              unint64_t v89 = v28 - 2;
              double v95 = &v75[16 * v28 - 32];
              uint64_t v97 = *(void *)v95;
              uint64_t v96 = *((void *)v95 + 1);
              BOOL v98 = __OFSUB__(v96, v97);
              uint64_t v99 = v96 - v97;
              char v100 = v98;
              if (v98) {
                goto LABEL_167;
              }
              uint64_t v101 = &v75[16 * v77];
              uint64_t v103 = *(void *)v101;
              uint64_t v102 = *((void *)v101 + 1);
              BOOL v88 = __OFSUB__(v102, v103);
              uint64_t v104 = v102 - v103;
              if (v88) {
                goto LABEL_170;
              }
              if (__OFADD__(v99, v104)) {
                goto LABEL_171;
              }
              if (v99 + v104 < v80) {
                goto LABEL_127;
              }
              BOOL v105 = v80 < v104;
            }
            if (v105) {
              unint64_t v77 = v89;
            }
          }
          else
          {
            if (v28 == 3)
            {
              uint64_t v79 = *((void *)v25 + 4);
              uint64_t v78 = *((void *)v25 + 5);
              BOOL v88 = __OFSUB__(v78, v79);
              uint64_t v80 = v78 - v79;
              char v81 = v88;
              goto LABEL_115;
            }
            uint64_t v106 = *((void *)v25 + 4);
            uint64_t v107 = *((void *)v25 + 5);
            BOOL v88 = __OFSUB__(v107, v106);
            uint64_t v99 = v107 - v106;
            char v100 = v88;
LABEL_127:
            if (v100) {
              goto LABEL_166;
            }
            id v108 = &v75[16 * v77];
            uint64_t v110 = *(void *)v108;
            uint64_t v109 = *((void *)v108 + 1);
            BOOL v88 = __OFSUB__(v109, v110);
            uint64_t v111 = v109 - v110;
            if (v88) {
              goto LABEL_169;
            }
            if (v111 < v99) {
              goto LABEL_30;
            }
          }
          unint64_t v116 = v77 - 1;
          if (v77 - 1 >= v28)
          {
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            __break(1u);
LABEL_175:
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
            break;
          }
          if (!v27) {
            goto LABEL_185;
          }
          id v117 = &v75[16 * v116];
          uint64_t v118 = *(void *)v117;
          id v119 = &v75[16 * v77];
          uint64_t v120 = *((void *)v119 + 1);
          sub_1004F5FCC((void **)(v27 + 8 * *(void *)v117), (void **)(v27 + 8 * *(void *)v119), v27 + 8 * v120, v140);
          if (v2) {
            goto LABEL_156;
          }
          if (v120 < v118) {
            goto LABEL_159;
          }
          if (v77 > *((void *)v25 + 2)) {
            goto LABEL_160;
          }
          *(void *)id v117 = v118;
          *(void *)&v75[16 * v116 + 8] = v120;
          unint64_t v121 = *((void *)v25 + 2);
          if (v77 >= v121) {
            goto LABEL_161;
          }
          unint64_t v28 = v121 - 1;
          memmove(&v75[16 * v77], v119 + 16, 16 * (v121 - 1 - v77));
          *((void *)v25 + 2) = v121 - 1;
          uint64_t v27 = v147;
          if (v121 <= 2) {
            goto LABEL_30;
          }
          goto LABEL_102;
        }
        unint64_t v28 = 1;
LABEL_30:
        Swift::Int v26 = v145;
        Swift::Int v4 = v137;
        if (v145 >= v137) {
          goto LABEL_145;
        }
        goto LABEL_31;
      }
LABEL_91:
      char v69 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRetain();
      id v70 = v62;
      id v71 = v66;
      swift_bridgeObjectRetain();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v69 & 1) == 0) {
        goto LABEL_80;
      }
      Swift::Int v61 = v144;
      uint64_t v27 = v147;
      if (!v147) {
        goto LABEL_184;
      }
      uint64_t v72 = *(void **)v58;
      unint64_t v62 = *(char **)(v58 + 8);
      *(void *)uint64_t v58 = v62;
      *(void *)(v58 + 8) = v72;
      v58 -= 8;
      if (v144 == ++v63) {
        goto LABEL_81;
      }
    }
  }
  __break(1u);
LABEL_183:
  __break(1u);
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004F5FCC(void **__src, void **a2, unint64_t a3, void **a4)
{
  Swift::Int v4 = a2;
  uint64_t v5 = __src;
  int64_t v6 = (char *)a2 - (char *)__src;
  int64_t v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v7 = (char *)a2 - (char *)__src;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v10 = a3 - (void)a2;
  }
  uint64_t v11 = v10 >> 3;
  Swift::Int v54 = __src;
  Swift::Int v53 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != a2 || &a2[v11] <= a4) {
        memmove(a4, a2, 8 * v11);
      }
      unint64_t v28 = (char *)&a4[v11];
      uint64_t v52 = v28;
      Swift::Int v54 = v4;
      if (v5 < v4 && v9 >= 8)
      {
        Swift::Int v29 = (void **)(a3 - 8);
        int v49 = v5;
        do
        {
          unint64_t v30 = (char *)*((void *)v28 - 1);
          unint64_t v47 = (unint64_t)v28;
          unint64_t v43 = v28 - 8;
          if (*(void *)&v30[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title + 8])
          {
            uint64_t v31 = *(void *)&v30[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title];
            unint64_t v32 = *(void *)&v30[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title + 8];
          }
          else
          {
            uint64_t v31 = 0;
            unint64_t v32 = 0xE000000000000000;
          }
          uint64_t v34 = v4 - 1;
          Swift::Int v33 = (char *)*(v4 - 1);
          NSString v35 = &v33[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title];
          if (*(void *)&v33[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title + 8])
          {
            uint64_t v36 = *(void *)v35;
            unint64_t v37 = *((void *)v35 + 1);
          }
          else
          {
            uint64_t v36 = 0;
            unint64_t v37 = 0xE000000000000000;
          }
          uint64_t v51 = v4;
          if (v31 == v36 && v32 == v37) {
            char v45 = 0;
          }
          else {
            char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
          }
          Swift::String v38 = v29 + 1;
          swift_bridgeObjectRetain();
          uint64_t v39 = v30;
          uint64_t v40 = v33;
          swift_bridgeObjectRetain();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v45)
          {
            unint64_t v28 = (char *)v47;
            if (v38 != v51 || v29 >= v51) {
              *Swift::Int v29 = *v34;
            }
            Swift::Int v54 = v34;
          }
          else
          {
            unint64_t v28 = v43;
            uint64_t v52 = v43;
            if ((unint64_t)v38 < v47 || (unint64_t)v29 >= v47)
            {
              *Swift::Int v29 = *(void **)v43;
              uint64_t v34 = v51;
            }
            else
            {
              uint64_t v34 = v51;
              if (v38 != (void **)v47) {
                *Swift::Int v29 = *(void **)v43;
              }
            }
          }
          if (v34 <= v49) {
            break;
          }
          --v29;
          Swift::Int v4 = v34;
        }
        while (v28 > (char *)a4);
      }
LABEL_62:
      sub_1002684F4(&v54, &v53, &v52);
      return 1;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != __src || &__src[v8] <= a4) {
      memmove(a4, __src, 8 * v8);
    }
    unint64_t v44 = (char *)&a4[v8];
    uint64_t v52 = v44;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      Swift::String v12 = a4;
      while (1)
      {
        id v13 = *v4;
        Swift::String v14 = (uint64_t *)((char *)*v4 + OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title);
        id v50 = v4;
        if (v14[1])
        {
          uint64_t v15 = *v14;
          unint64_t v16 = v14[1];
        }
        else
        {
          uint64_t v15 = 0;
          unint64_t v16 = 0xE000000000000000;
        }
        Swift::String v17 = *v12;
        NSString v18 = (uint64_t *)((char *)*v12 + OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title);
        if (v18[1])
        {
          uint64_t v19 = *v18;
          unint64_t v20 = v18[1];
        }
        else
        {
          uint64_t v19 = 0;
          unint64_t v20 = 0xE000000000000000;
        }
        Swift::Int v48 = v5;
        if (v15 == v19 && v16 == v20)
        {
          swift_bridgeObjectRetain();
          id v21 = v13;
          id v22 = v17;
          swift_bridgeObjectRetain();

          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRetain();
          id v24 = v13;
          id v25 = v17;
          swift_bridgeObjectRetain();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v23)
          {
            Swift::Int v26 = v48;
            uint64_t v27 = v50 + 1;
            if (v48 < v50 || v48 >= v27 || v48 != v50) {
              *Swift::Int v48 = *v50;
            }
            goto LABEL_30;
          }
        }
        Swift::Int v26 = v48;
        if (v48 != v12) {
          *Swift::Int v48 = *v12;
        }
        Swift::Int v53 = ++v12;
        uint64_t v27 = v50;
LABEL_30:
        uint64_t v5 = v26 + 1;
        if (v12 < (void **)v44)
        {
          Swift::Int v4 = v27;
          if ((unint64_t)v27 < a3) {
            continue;
          }
        }
        Swift::Int v54 = v5;
        goto LABEL_62;
      }
    }
    goto LABEL_62;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_1004F642C(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_maxNumberSafeLocations] = 20;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_locationsRow] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_safeLocations] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_snapshotMemoryCache] = &_swiftEmptyDictionarySingleton;
  uint64_t v3 = OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_mapSnapshotter;
  type metadata accessor for FMMapSnapshotter();
  swift_allocObject();
  Swift::Int v4 = v1;
  *(void *)&v1[v3] = sub_10011687C();
  uint64_t v5 = &v4[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_beaconUUID];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  *(void *)&v4[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_groupBeaconUUIDs] = 0;
  *(void *)&v4[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_numSafeLocations] = 0;
  *(void *)&v4[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_mediator] = a1;
  swift_retain();

  v7.receiver = v4;
  v7.super_class = (Class)type metadata accessor for FMSafeLocationSuggestionsView();
  return [super init];
}

uint64_t sub_1004F654C(uint64_t a1)
{
  uint64_t v2 = sub_10005D034((uint64_t *)&unk_1006BEB20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004F65AC()
{
  uint64_t v1 = type metadata accessor for FMIPSafeLocation();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1004F6678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for FMIPSafeLocation() - 8);
  uint64_t v10 = *(void **)(v4 + 16);
  uint64_t v11 = v4 + ((*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  sub_1004F4E04(a1, a2, a3, a4, v10, v11);
}

uint64_t sub_1004F6714(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034(&qword_1006C1148);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004F677C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004F67CC()
{
  return sub_1004F4220(*(char **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

void sub_1004F67DC()
{
  *(void *)&v0[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_maxNumberSafeLocations] = 20;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_locationsRow] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_safeLocations] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_snapshotMemoryCache] = &_swiftEmptyDictionarySingleton;
  uint64_t v1 = OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_mapSnapshotter;
  type metadata accessor for FMMapSnapshotter();
  swift_allocObject();
  *(void *)&v0[v1] = sub_10011687C();
  uint64_t v2 = &v0[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_beaconUUID];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_groupBeaconUUIDs] = 0;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_numSafeLocations] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1004F68F4(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  Swift::String v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  __chkstk_darwin(a1);
  uint64_t v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  Swift::Int v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = __chkstk_darwin(AssociatedTypeWitness);
  Swift::String v12 = (char *)&v26 - v11;
  __chkstk_darwin(v10);
  Swift::String v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  __chkstk_darwin(v15);
  Swift::String v17 = (char *)&v26 - v16;
  uint64_t v18 = dispatch thunk of Collection.count.getter();
  if (!v18) {
    return static Array._allocateUninitialized(_:)();
  }
  Swift::Int v19 = v18;
  uint64_t v43 = ContiguousArray.init()();
  uint64_t v32 = type metadata accessor for ContiguousArray();
  ContiguousArray.reserveCapacity(_:)(v19);
  uint64_t v36 = v8;
  uint64_t result = dispatch thunk of Collection.startIndex.getter();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v34 = (void (**)(char *))(v33 + 2);
    NSString v35 = v14;
    ++v33;
    while (1)
    {
      id v21 = (void (*)(char *, void))dispatch thunk of Collection.subscript.read();
      id v22 = v12;
      char v23 = v12;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      ContiguousArray.append(_:)();
      dispatch thunk of Collection.formIndex(after:)();
      --v19;
      Swift::String v12 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

uint64_t sub_1004F6CF4()
{
  return *(unsigned __int8 *)(v0 + qword_1006C1200);
}

uint64_t sub_1004F6D04(uint64_t result)
{
  *(unsigned char *)(v1 + qword_1006C1200) = result;
  return result;
}

uint64_t sub_1004F6D14()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_isaMask & *(void *)v0;
  id v3 = [v0 layer];
  [v3 setCornerCurve:kCACornerCurveContinuous];

  id v4 = [v0 layer];
  double v5 = _UISheetCornerRadius;
  [v4 setCornerRadius:_UISheetCornerRadius];

  id v6 = [v0 layer];
  [v6 setMasksToBounds:0];

  id v7 = [v0 layer];
  uint64_t v8 = self;
  id v9 = [v8 blackColor];
  id v10 = [v9 CGColor];

  [v7 setShadowColor:v10];
  id v11 = [v0 layer];
  LODWORD(v12) = 1031127695;
  [v11 setShadowOpacity:v12];

  id v13 = [v0 layer];
  [v13 setShadowRadius:16.0];

  id v14 = [v0 layer];
  [v14 setShadowOffset:0.0, 0.0];

  [v0 setAxis:1];
  [v0 setDistribution:0];
  [v0 setAlignment:0];
  [v1 addArrangedSubview:*(void *)&v1[qword_1006C11F8]];
  uint64_t v15 = *(void **)&v0[qword_1006C11F0];
  [v1 addArrangedSubview:*(void *)&v1[qword_1006C11F0]];
  [v15 setDelegate:v0];
  [v15 setDataSource:*(void *)&v0[qword_1006C11E8]];
  id v16 = [v8 clearColor];
  [v15 setBackgroundColor:v16];

  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_100006060(0, &qword_1006AF7B8);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v15 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v18];

  [v15 setSectionHeaderTopPadding:0.0];
  [v15 setScrollEnabled:0];
  [v15 setContentInsetAdjustmentBehavior:2];
  [v15 setFrame:CGRectInfinite.origin.x, CGRectInfinite.origin.y, CGRectInfinite.size.width, CGRectInfinite.size.height];
  id v19 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v15 setTableFooterView:v19];

  id v20 = [v15 layer];
  [v20 setCornerCurve:kCACornerCurveContinuous];

  id v21 = [v15 layer];
  [v21 setCornerRadius:v5];

  id v22 = [v15 layer];
  [v22 setMasksToBounds:1];

  dispatch thunk of UITableViewDiffableDataSource.defaultRowAnimation.setter();
  uint64_t v23 = *(void *)&v1[qword_1006C11E0];
  uint64_t v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = *(_OWORD *)(v2 + 80);
  *(void *)(v25 + 32) = *(void *)(v2 + 96);
  *(void *)(v25 + 40) = v24;
  uint64_t v26 = *(void *)(v23 + 32);
  *(void *)(v23 + 32) = sub_1004FC084;
  *(void *)(v23 + 40) = v25;
  sub_100036B90(v26);
  uint64_t v27 = self;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v1;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_1004FC090;
  *(void *)(v29 + 24) = v28;
  v33[4] = sub_1004FC52C;
  v33[5] = v29;
  v33[0] = _NSConcreteStackBlock;
  v33[1] = 1107296256;
  uint64_t v33[2] = sub_100024A40;
  v33[3] = &unk_100643388;
  uint64_t v30 = _Block_copy(v33);
  uint64_t v31 = v1;
  swift_retain();
  swift_release();
  [v27 performWithoutAnimation:v30];
  _Block_release(v30);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v1) {
    __break(1u);
  }
  return result;
}

void sub_1004F737C(uint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for FMModernPlatterView.FMModernPlatterViewHeaderConfiguration();
  uint64_t v4 = type metadata accessor for Optional();
  double v5 = *(void (**)(id *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  v5((id *)v25, a1, v4);
  uint64_t v6 = v25[0];
  id v7 = *(char **)(v1 + qword_1006C11F8);
  v5((id *)v31, a1, v4);
  uint64_t v23 = v6;
  if (v31[0])
  {
    uint64_t v8 = v31[2];
    id v9 = *(void **)&v7[OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_titleLabel];
    swift_bridgeObjectRetain();
    NSString v10 = String._bridgeToObjectiveC()();
  }
  else
  {
    NSString v10 = 0;
    uint64_t v8 = 0;
    id v9 = *(void **)&v7[OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_titleLabel];
  }
  [v9 setText:v10, v23];

  if (v8) {
    swift_bridgeObjectRelease();
  }
  [v9 setHidden:v8 == 0];
  v5((id *)v30, a1, v4);
  if (v30[0])
  {
    id v11 = *(void **)&v7[OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_subtitleLabel];
    if (v30[4])
    {
      swift_bridgeObjectRetain();
      NSString v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v12 = 0;
    }
  }
  else
  {
    NSString v12 = 0;
    id v11 = *(void **)&v7[OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_subtitleLabel];
  }
  [v11 setText:v12];

  id v13 = [v11 text];
  id v14 = v13;
  if (v13) {

  }
  [v11 setHidden:v14 == 0];
  v5(v29, a1, v4);
  id v15 = v29[0];
  if (v29[0]) {
    id v16 = v29[0];
  }
  Swift::String v17 = *(void **)&v7[OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_iconView];
  [v17 setImage:v15];
  [v17 setHidden:v15 == 0];

  v5((id *)v27, a1, v4);
  sub_10017C7B4((v27[0] != 0) & v28);
  [v7 setHidden:v24 == 0];
  NSString v18 = *(void **)(v2 + qword_1006C11F0);
  [v18 reloadData];
  v5((id *)v26, a1, v4);
  uint64_t v19 = v26[0];
  id v20 = [v18 layer];
  id v21 = v20;
  if (v19) {
    uint64_t v22 = 12;
  }
  else {
    uint64_t v22 = 15;
  }
  [v20 setMaskedCorners:v22];
}

uint64_t sub_1004F76F4(uint64_t a1)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = *(void *)(v3 + 0x58);
  uint64_t v67 = *(void *)(v4 + 8);
  uint64_t v5 = *(void *)(v3 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v64 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v78 = (char *)&v59 - v7;
  uint64_t v69 = type metadata accessor for Optional();
  uint64_t v83 = *(void *)(v69 - 8);
  uint64_t v8 = __chkstk_darwin(v69);
  unint64_t v77 = (char *)&v59 - v9;
  uint64_t v79 = *(void *)(v5 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  NSString v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  id v15 = (char *)&v59 - v14;
  uint64_t v59 = v16;
  __chkstk_darwin(v13);
  uint64_t v84 = (char *)&v59 - v17;
  uint64_t v18 = v3;
  uint64_t v19 = a1;
  Swift::Int v61 = v1;
  uint64_t v20 = *(void *)(v18 + 96);
  uint64_t v21 = type metadata accessor for FMModernPlatterView.Section();
  uint64_t WitnessTable = swift_getWitnessTable();
  v99[0] = v21;
  v99[1] = AssociatedTypeWitness;
  uint64_t v82 = AssociatedTypeWitness;
  v99[2] = WitnessTable;
  v99[3] = v20;
  uint64_t v66 = type metadata accessor for NSDiffableDataSourceSnapshot();
  uint64_t v60 = swift_allocBox();
  uint64_t v24 = v23;
  NSDiffableDataSourceSnapshot.init()();
  type metadata accessor for _ContiguousArrayStorage();
  swift_allocObject();
  uint64_t v25 = static Array._adoptStorage(_:count:)();
  type metadata accessor for Array();
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)v25);
  swift_bridgeObjectRelease();
  v99[0] = v19;
  uint64_t v89 = v5;
  uint64_t v90 = v4;
  uint64_t v91 = v20;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v65 = v4;
  uint64_t v86 = v4;
  uint64_t v87 = v20;
  uint64_t v88 = KeyPath;
  uint64_t v27 = type metadata accessor for Array();
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v29 = v67;
  sub_1004F68F4((void (*)(char *, char *))sub_1004FBE18, (uint64_t)v85, v27, v82, (uint64_t)&type metadata for Never, v28, (uint64_t)&protocol witness table for Never, v30);
  swift_release();
  LOBYTE(v99[0]) = 0;
  uint64_t v63 = v24;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if (!Array.endIndex.getter())
  {
LABEL_18:
    swift_bridgeObjectRelease();
    char v45 = v61;
    sub_1004F9284(v19);
    if (v45[qword_1006C1200]) {
      double v46 = 0.3;
    }
    else {
      double v46 = 0.0;
    }
    unint64_t v47 = *(void **)&v45[qword_1006C11F0];
    uint64_t v48 = swift_allocObject();
    uint64_t v49 = v60;
    *(void *)(v48 + 16) = v45;
    *(void *)(v48 + 24) = v49;
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = v45;
    uint64_t v51 = self;
    uint64_t v52 = (void *)swift_allocObject();
    v52[2] = v47;
    v52[3] = sub_1004FBE84;
    v52[4] = v48;
    uint64_t v96 = sub_1004FBF0C;
    uint64_t v97 = v52;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v93 = 1107296256;
    uint64_t v94 = sub_10003C410;
    double v95 = &unk_100643270;
    Swift::Int v53 = _Block_copy(&aBlock);
    Swift::Int v54 = v45;
    swift_retain();
    id v55 = v47;
    swift_retain();
    swift_release();
    uint64_t v56 = (void *)swift_allocObject();
    v56[2] = sub_1004FBEC4;
    v56[3] = v50;
    v56[4] = v55;
    uint64_t v96 = sub_1004FBFC0;
    uint64_t v97 = v56;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v93 = 1107296256;
    uint64_t v94 = sub_1002F8BC0;
    double v95 = &unk_1006432C0;
    Swift::Int v57 = _Block_copy(&aBlock);
    id v58 = v55;
    swift_retain();
    swift_release();
    [v51 animateWithDuration:4 delay:v53 options:v57 animations:v46 completion:0.0];
    _Block_release(v57);
    _Block_release(v53);
    swift_release();
    swift_release();
    return swift_release();
  }
  uint64_t v31 = 0;
  uint64_t v80 = *(void (**)(uint64_t, uint64_t))(v29 + 32);
  uint64_t v81 = v29 + 32;
  uint64_t v74 = *(void *)((char *)v61 + qword_1006C11E0);
  id v75 = (void (**)(char *, void ***, uint64_t))(v79 + 16);
  uint64_t v76 = (void (**)(char *, char *, uint64_t))(v79 + 32);
  unint64_t v73 = (void (**)(char *, uint64_t))(v64 + 8);
  uint64_t v72 = (unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48);
  uint64_t v62 = v65 + 16;
  id v70 = (void (**)(char *, uint64_t))(v79 + 8);
  unint64_t v68 = (void (**)(char *, uint64_t))(v83 + 8);
  uint64_t v71 = v19;
  while (1)
  {
    Swift::Bool IsNativeType = Array._hoistableIsNativeTypeChecked()();
    Array._checkSubscript(_:wasNativeTypeChecked:)();
    if (IsNativeType)
    {
      uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v79 + 16))(v84, v19+ ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80))+ *(void *)(v79 + 72) * v31, v5);
    }
    else
    {
      uint64_t result = _ArrayBuffer._getElementSlowPath(_:)();
      if (v59 != 8) {
        goto LABEL_23;
      }
      uint64_t aBlock = (void **)result;
      (*v75)(v84, &aBlock, v5);
      uint64_t result = swift_unknownObjectRelease();
    }
    if (__OFADD__(v31, 1)) {
      break;
    }
    uint64_t v83 = v31 + 1;
    NSString v35 = v12;
    uint64_t v36 = *v76;
    (*v76)(v15, v84, v5);
    unint64_t v37 = v15;
    Swift::String v38 = v78;
    v80(v5, v29);
    uint64_t v39 = v77;
    sub_1004F96F8();
    uint64_t v40 = v39;
    (*v73)(v38, v82);
    if ((*v72)(v39, 1, v5) == 1)
    {
      (*v70)(v37, v5);
      (*v68)(v39, v69);
      NSString v12 = v35;
      id v15 = v37;
    }
    else
    {
      NSString v12 = v35;
      v36(v35, v40, v5);
      id v15 = v37;
      if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t))(v65 + 16))(&v98, v5);
        sub_1002BE9F0((uint64_t)&v98);
        sub_1000E751C((uint64_t)&v98, (uint64_t)v99);
        int v42 = v100;
        sub_1004FB8F4(v82, v82);
        swift_allocObject();
        uint64_t v43 = static Array._adoptStorage(_:count:)();
        v80(v5, v29);
        type metadata accessor for Array();
        uint64_t v32 = v83;
        if (v42 == 2) {
          NSDiffableDataSourceSnapshot.reloadItems(_:)((Swift::OpaquePointer)v43);
        }
        else {
          NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v43);
        }
        swift_bridgeObjectRelease();
        unint64_t v44 = *v70;
        (*v70)(v12, v5);
        id v15 = v37;
        v44(v37, v5);
        uint64_t v29 = v67;
        uint64_t v19 = v71;
        goto LABEL_5;
      }
      uint64_t v41 = *v70;
      (*v70)(v35, v5);
      v41(v37, v5);
    }
    uint64_t v19 = v71;
    uint64_t v32 = v83;
LABEL_5:
    ++v31;
    if (v32 == Array.endIndex.getter()) {
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1004F8278(void *a1)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = *(void *)(v3 + 0x50);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  uint64_t v7 = (char *)v10 - v6;
  sub_1004F966C();
  (*(void (**)(char *))((swift_isaMask & *v1) + 0xF0))(v7);
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(v3 + 88) + 16))(v10, v4);
  sub_1000E751C((uint64_t)v10, (uint64_t)v11);
  switch(v11[48])
  {
    case 1:
    case 2:
    case 3:
      sub_1002BE9F0((uint64_t)v10);
      break;
    default:
      sub_1002BE9F0((uint64_t)v10);
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      [a1 deselectRowAtIndexPath:isa animated:1];

      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1004F8524()
{
  [v0 contentSize];
  UIRoundToViewScale();
  double v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_heightConstraint;
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_heightConstraint];
  if (v4) {
    [v4 constant];
  }
  UIRoundToViewScale();
  if (vabdd_f64(v2, v5) > 0.009
    && !*(void *)&v0[OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_resizeBlockCount])
  {
    uint64_t v6 = *(void **)&v0[v3];
    if (v6)
    {
      id v8 = v6;
      [v0 contentSize];
      [v8 setConstant:v7];
    }
  }
}

char *sub_1004F8624()
{
  *(void *)&v0[OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_heightConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_resizeBlockCount] = 0;
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for FMModernPlatterTableView();
  double v1 = (char *)objc_msgSendSuper2(&v10, "initWithFrame:style:", 0, 0.0, 0.0, 0.0, 0.0);
  id v2 = [v1 heightAnchor];
  id v3 = [v2 constraintEqualToConstant:0.0];

  uint64_t v4 = OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_heightConstraint;
  double v5 = *(void **)&v1[OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_heightConstraint];
  *(void *)&v1[OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_heightConstraint] = v3;

  uint64_t v6 = *(void **)&v1[v4];
  if (v6) {
    [v6 setActive:1];
  }
  double v7 = v1;
  NSString v8 = String._bridgeToObjectiveC()();
  [v7 setAccessibilityIdentifier:v8];

  return v7;
}

void sub_1004F87F4(uint64_t a1, void (*a2)(void))
{
  uint64_t v2 = *(void *)(a1
                 + OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_resizeBlockCount);
  BOOL v3 = __OFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a1
              + OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_resizeBlockCount) = v4;
    a2();
    sub_1004F8894();
  }
}

void sub_1004F8844(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  a2();
  uint64_t v5 = *(void *)(a4
                 + OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_resizeBlockCount);
  BOOL v6 = __OFSUB__(v5, 1);
  uint64_t v7 = v5 - 1;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a4
              + OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_resizeBlockCount) = v7;
    sub_1004F8894();
  }
}

void sub_1004F8894()
{
  [v0 contentSize];
  UIRoundToViewScale();
  double v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_heightConstraint;
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_heightConstraint];
  if (v4) {
    [v4 constant];
  }
  UIRoundToViewScale();
  if (vabdd_f64(v2, v5) > 0.009)
  {
    [v0 setNeedsLayout];
    [v0 layoutIfNeeded];
    BOOL v6 = *(void **)&v0[v3];
    if (v6)
    {
      id v7 = v6;
      [v0 contentSize];
      [v7 setConstant:v8];
    }
    id v9 = [v0 superview];
    if (v9)
    {
      objc_super v10 = v9;
      while (1)
      {
        self;
        id v11 = (id)swift_dynamicCastObjCClass();
        if (v11) {
          break;
        }
        id v12 = [v10 superview];

        objc_super v10 = v12;
        if (!v12) {
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      id v11 = [v0 superview];
    }
    id v13 = v11;
    [v11 setNeedsLayout];
    [v13 layoutIfNeeded];
  }
}

id sub_1004F8A7C()
{
  return sub_1004F9080(0, type metadata accessor for FMModernPlatterTableView);
}

uint64_t type metadata accessor for FMModernPlatterTableView()
{
  return self;
}

char *sub_1004F8ACC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = OBJC_IVAR____TtC6FindMy33FMModernPlatterAccessoryLabelView_label;
  id v6 = objc_allocWithZone((Class)UILabel);
  id v7 = v3;
  *(void *)&v3[v5] = [v6 init];
  uint64_t v8 = OBJC_IVAR____TtC6FindMy33FMModernPlatterAccessoryLabelView_chevron;
  id v9 = sub_1003E798C();
  id v10 = [objc_allocWithZone((Class)UIImageView) initWithImage:v9];

  *(void *)&v7[v8] = v10;
  v41.receiver = v7;
  v41.super_class = (Class)type metadata accessor for FMModernPlatterAccessoryLabelView();
  id v11 = (char *)objc_msgSendSuper2(&v41, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  [v11 setAxis:0];
  [v11 setSpacing:12.0];
  uint64_t v12 = OBJC_IVAR____TtC6FindMy33FMModernPlatterAccessoryLabelView_label;
  id v13 = *(id *)&v11[OBJC_IVAR____TtC6FindMy33FMModernPlatterAccessoryLabelView_label];
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v13 setText:v14];

  id v15 = *(void **)&v11[v12];
  uint64_t v16 = self;
  id v17 = v15;
  id v18 = [v16 secondaryLabelColor];
  [v17 setTextColor:v18];

  uint64_t v19 = *(void **)&v11[v12];
  uint64_t v20 = self;
  id v21 = v19;
  id v22 = [v20 preferredFontForTextStyle:UIFontTextStyleBody];
  [v21 setFont:v22];

  uint64_t v23 = *(void **)&v11[v12];
  [v23 setAdjustsFontForContentSizeCategory:1];
  [v23 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v24 = OBJC_IVAR____TtC6FindMy33FMModernPlatterAccessoryLabelView_chevron;
  uint64_t v25 = *(void **)&v11[OBJC_IVAR____TtC6FindMy33FMModernPlatterAccessoryLabelView_chevron];
  [v25 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v26 = v25;
  id v27 = [v16 tertiaryLabelColor];
  [v26 setTintColor:v27];

  id v28 = [v20 preferredFontForTextStyle:UIFontTextStyleBody];
  sub_10005D034((uint64_t *)&unk_1006B4280);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10055B970;
  *(void *)(inited + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(inited + 40) = UIFontWeightSemibold;
  uint64_t v30 = UIFontWeightTrait;
  unint64_t v31 = sub_10005010C(inited);
  id v32 = sub_10005021C(v31);

  swift_bridgeObjectRelease();
  id v33 = [self configurationWithFont:v32 scale:1];
  id v34 = *(id *)&v11[v24];
  id v35 = v33;
  NSString v36 = String._bridgeToObjectiveC()();
  id v37 = [self systemImageNamed:v36 withConfiguration:v35];

  [v34 setImage:v37];
  [v11 addArrangedSubview:*(void *)&v11[v12]];
  if (a3) {
    [v11 addArrangedSubview:*(void *)&v11[v24]];
  }
  [v11 setNeedsLayout];
  [v11 layoutIfNeeded];
  double height = UILayoutFittingCompressedSize.height;
  uint64_t v39 = v11;
  [v39 systemLayoutSizeFittingSize:UILayoutFittingCompressedSize.width height];
  [v39 frame];
  [v39 setFrame:];

  return v39;
}

id sub_1004F9068(uint64_t a1)
{
  return sub_1004F9080(a1, type metadata accessor for FMModernPlatterAccessoryLabelView);
}

id sub_1004F9080(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t type metadata accessor for FMModernPlatterAccessoryLabelView()
{
  return self;
}

uint64_t sub_1004F9128()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1004F91A4(uint64_t a1, uint64_t a2)
{
  sub_100006060(0, (unint64_t *)&qword_1006B3E40);
  if ((static NSObject.== infix(_:_:)() & 1) == 0) {
    goto LABEL_14;
  }
  if (*(void *)(a1 + 8) != *(void *)(a2 + 8) || *(void *)(a1 + 16) != *(void *)(a2 + 16))
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    char v6 = 0;
    if ((v5 & 1) == 0) {
      return v6 & 1;
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a2 + 32);
  if (!v7)
  {
    if (!v8)
    {
LABEL_16:
      char v6 = ((*(unsigned char *)(a1 + 40) & 1) == 0) ^ *(unsigned char *)(a2 + 40);
      return v6 & 1;
    }
    goto LABEL_14;
  }
  if (!v8)
  {
LABEL_14:
    char v6 = 0;
    return v6 & 1;
  }
  if (*(void *)(a1 + 24) == *(void *)(a2 + 24) && v7 == v8) {
    goto LABEL_16;
  }
  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  char v6 = 0;
  if (v9) {
    goto LABEL_16;
  }
  return v6 & 1;
}

uint64_t sub_1004F9284(uint64_t a1)
{
  uint64_t v27 = *v1;
  uint64_t v3 = *(void *)(v27 + 80);
  uint64_t v4 = type metadata accessor for Optional();
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v18 - v5;
  uint64_t v7 = *(void *)(*(void *)(v27 + 88) + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v25 = (char *)&v18 - v9;
  uint64_t v10 = *(void *)(v3 - 8);
  uint64_t v18 = *(void *)(v10 + 64);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v18 - v11;
  v1[3] = a1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  if (Array.endIndex.getter())
  {
    uint64_t v13 = 0;
    uint64_t v24 = v7;
    id v22 = *(void (**)(uint64_t, uint64_t))(v7 + 32);
    uint64_t v23 = v7 + 32;
    id v28 = (void (**)(char *, uint64_t *, uint64_t))(v10 + 16);
    uint64_t v20 = (void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
    id v21 = v1 + 2;
    uint64_t v19 = (void (**)(char *, uint64_t))(v10 + 8);
    while (1)
    {
      Swift::Bool IsNativeType = Array._hoistableIsNativeTypeChecked()();
      Array._checkSubscript(_:wasNativeTypeChecked:)();
      if (IsNativeType)
      {
        id v15 = *(void (**)(char *, uint64_t *, uint64_t))(v10 + 16);
        v15(v12, (uint64_t *)(a1+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v13), v3);
        uint64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t result = _ArrayBuffer._getElementSlowPath(_:)();
        if (v18 != 8)
        {
          __break(1u);
          return result;
        }
        v29[0] = result;
        id v15 = *v28;
        (*v28)(v12, v29, v3);
        swift_unknownObjectRelease();
        uint64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_10:
          __break(1u);
          return swift_bridgeObjectRelease();
        }
      }
      v22(v3, v24);
      v15(v6, (uint64_t *)v12, v3);
      (*v20)(v6, 0, 1, v3);
      swift_beginAccess();
      type metadata accessor for Dictionary();
      Dictionary.subscript.setter();
      swift_endAccess();
      (*v19)(v12, v3);
      ++v13;
      if (v16 == Array.endIndex.getter()) {
        return swift_bridgeObjectRelease();
      }
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1004F966C()
{
  IndexPath.row.getter();
  swift_bridgeObjectRetain();
  Array.subscript.getter();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1004F96F8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004F97E4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100036B90(*(void *)(v0 + 32));
  return v0;
}

uint64_t sub_1004F9814()
{
  sub_1004F97E4();

  return swift_deallocClassInstance();
}

id sub_1004F9848()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = swift_isaMask & *v0;
  uint64_t v3 = (_OWORD *)((char *)v0 + qword_1006C11D0);
  *uint64_t v3 = 0u;
  v3[1] = 0u;
  *(_OWORD *)((char *)v3 + 25) = 0u;
  uint64_t v4 = qword_1006C11D8;
  uint64_t v5 = v0;
  *(void *)((char *)v0 + v4) = static Array._allocateUninitialized(_:)();
  uint64_t v6 = qword_1006C11F8;
  *(void *)((char *)v5 + v6) = [objc_allocWithZone((Class)type metadata accessor for FMModernPlatterHeaderView()) init];
  *((unsigned char *)v5 + qword_1006C1200) = 0;
  uint64_t v7 = *(void *)(v2 + 96);
  type metadata accessor for FMModernPlatterView.ViewModel();
  uint64_t v8 = static Array._allocateUninitialized(_:)();
  uint64_t v9 = sub_1004FBA64(v8);
  swift_bridgeObjectRelease();
  id v10 = [objc_allocWithZone((Class)type metadata accessor for FMModernPlatterTableView()) init];
  *(void *)((char *)v5 + qword_1006C11E0) = v9;
  *(void *)((char *)v5 + qword_1006C11F0) = v10;
  uint64_t v17 = type metadata accessor for FMModernPlatterView.Section();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v20 = v7;
  type metadata accessor for UITableViewDiffableDataSource();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v9;
  *(void *)(v11 + 24) = ObjectType;
  swift_retain_n();
  id v12 = v10;
  *(void *)((char *)v5 + qword_1006C11E8) = UITableViewDiffableDataSource.__allocating_init(tableView:cellProvider:)();

  v16.receiver = v5;
  v16.super_class = (Class)type metadata accessor for FMModernPlatterView();
  id v13 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  NSString v14 = String._bridgeToObjectiveC()();
  [v13 setAccessibilityIdentifier:v14];

  sub_1004F6D14();
  swift_release();

  return v13;
}

id sub_1004F9B24()
{
  return sub_1004F9848();
}

void sub_1004F9B48(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1004FBAAC();
}

void sub_1004F9B70(uint64_t a1)
{
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for FMModernPlatterView();
  [super traitCollectionDidChange:a1];
  if (qword_1006AE228 != -1) {
    swift_once();
  }
  id v3 = [v1 traitCollection];
  id v4 = [v3 userInterfaceStyle];
  uint64_t v5 = self;
  uint64_t v6 = &selRef_tertiarySystemFillColor;
  if (v4 != (id)2) {
    uint64_t v6 = &selRef_whiteColor;
  }
  id v7 = [v5 *v6];

  [v1 setBackgroundColor:v7];
}

void sub_1004F9CC0(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  sub_1004F9B70((uint64_t)a3);
}

void sub_1004F9D2C(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = Strong;
    (*(void (**)(uint64_t))((swift_isaMask & *Strong) + 0xF0))(a1);
  }
}

uint64_t sub_1004F9DB8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + qword_1006C11D0 + 32);
  char v2 = *(unsigned char *)(a1 + qword_1006C11D0 + 40);
  long long v3 = *(_OWORD *)(a1 + qword_1006C11D0 + 16);
  v6[0] = *(_OWORD *)(a1 + qword_1006C11D0);
  v6[1] = v3;
  uint64_t v7 = v1;
  char v8 = v2;
  sub_1004FC0A8((uint64_t)v6, (void (*)(void, void, void, void, void, void))sub_1000E75E0);
  sub_1004F737C((uint64_t)v6);
  sub_1004FC0A8((uint64_t)v6, (void (*)(void, void, void, void, void, void))sub_1000E762C);
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_1004F76F4(v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004F9E64(void *a1)
{
  uint64_t v1 = *(void *)((swift_isaMask & *a1) + 0x60);
  v8[0] = type metadata accessor for FMModernPlatterView.Section();
  v8[1] = swift_getAssociatedTypeWitness();
  v8[2] = swift_getWitnessTable();
  v8[3] = v1;
  uint64_t v2 = type metadata accessor for NSDiffableDataSourceSnapshot();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v8 - v4;
  uint64_t v6 = swift_projectBox();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1004FA044(uint64_t result, uint64_t a2)
{
  if (result)
  {
    type metadata accessor for Array();
    swift_getWitnessTable();
    uint64_t result = Collection.isEmpty.getter();
    BOOL v3 = (result & 1) == 0 || *(void *)(a2 + qword_1006C11D0) != 0;
  }
  else
  {
    BOOL v3 = 0;
  }
  *(unsigned char *)(a2 + qword_1006C1200) = v3;
  return result;
}

id sub_1004FA12C(uint64_t (**a1)(uint64_t, id), uint64_t a2, uint64_t a3, void (**a4)())
{
  void (*v28)(void *__return_ptr, uint64_t);
  char *v29;
  uint64_t v30;
  char v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  void (*v41)();
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  id v46;
  void (*v47)();
  uint64_t v48;
  char *v49;
  unint64_t v50;
  char *v51;
  uint64_t (**v52)(uint64_t, id);
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void *v59;
  id v60;
  id v61;
  void (*v62)(void ***, void);
  id v63;
  uint64_t (**v64)(uint64_t, id);
  uint64_t (*v65)(uint64_t, id);
  id v66;
  uint64_t v67;
  id v68;
  char v69;
  double v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  char *v74;
  id v75;
  NSString v76;
  void v78[2];
  unsigned int v79;
  id v80;
  id v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)();
  uint64_t (**v87)(uint64_t, id);
  uint64_t v88;
  char *v89;
  void **aBlock;
  uint64_t v91;
  uint64_t (*v92)(uint64_t);
  void *v93;
  uint64_t (*v94)();
  uint64_t v95;
  void v96[7];
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;

  uint64_t v88 = a3;
  uint64_t v87 = a1;
  uint64_t v86 = *a4;
  uint64_t v85 = type metadata accessor for UIListContentConfiguration();
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v89 = (char *)v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *((void *)v86 + 10);
  uint64_t v7 = type metadata accessor for Optional();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v78 - v10;
  uint64_t v12 = *(void *)(v6 - 8);
  uint64_t v13 = __chkstk_darwin(v9);
  uint64_t v83 = (char *)v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = v14;
  __chkstk_darwin(v13);
  objc_super v16 = (char *)v78 - v15;
  NSString v17 = String._bridgeToObjectiveC()();
  uint64_t v18 = v12;
  swift_bridgeObjectRelease();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v20 = [v87 dequeueReusableCellWithIdentifier:v17 forIndexPath:isa];

  uint64_t v21 = v6;
  id v22 = a4;
  sub_1004F96F8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v11, 1, v21) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    return v20;
  }
  uint64_t v88 = v18;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v23(v16, v11, v21);
  [v20 setAccessoryView:0];
  [v20 setAccessoryType:0];
  [v20 setSelectionStyle:2];
  uint64_t v24 = self;
  uint64_t v80 = v20;
  id v25 = v20;
  id v26 = [v24 clearColor];
  [v25 setBackgroundColor:v26];
  uint64_t v81 = v25;

  sub_1004FAD2C();
  uint64_t v27 = v86;
  id v28 = *(void (**)(void *__return_ptr, uint64_t))(*((void *)v86 + 11) + 16);
  uint64_t v87 = (uint64_t (**)(uint64_t, id))*((void *)v86 + 11);
  v28(v96, v21);
  sub_1000E751C((uint64_t)v96, (uint64_t)&v97);
  uint64_t v29 = v16;
  switch(v101)
  {
    case 1:
      id v33 = v16;
      id v34 = v21;
      NSString v36 = v99;
      id v35 = v100;
      UIListContentConfiguration.text.setter();
      UIListContentConfiguration.secondaryText.setter();
      if (v35)
      {
        id v37 = self;
        Swift::String v38 = (void *)swift_allocObject();
        v38[2] = v36;
        v38[3] = v35;
        uint64_t v39 = v81;
        v38[4] = v81;
        uint64_t v40 = swift_allocObject();
        objc_super v41 = sub_1004FBC5C;
        *(void *)(v40 + 16) = sub_1004FBC5C;
        *(void *)(v40 + 24) = v38;
        uint64_t v94 = sub_100024A90;
        double v95 = v40;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v91 = 1107296256;
        uint64_t v92 = sub_100024A40;
        uint64_t v93 = &unk_100643108;
        int v42 = _Block_copy(&aBlock);
        uint64_t v43 = v39;
        swift_retain();
        swift_release();
        [(id)v37 performWithoutAnimation:v42];
        _Block_release(v42);
        LOBYTE(v37) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if (v37)
        {
          __break(1u);
LABEL_22:
          __break(1u);
          JUMPOUT(0x1004FAD1CLL);
        }
        uint64_t v86 = 0;
        uint64_t v83 = 0;
        uint64_t v21 = v34;
        uint64_t v29 = v33;
        unint64_t v44 = v81;
      }
      else
      {
        uint64_t v63 = v81;
        [v81 setAccessoryType:1];
        uint64_t v86 = 0;
        uint64_t v83 = 0;
        objc_super v41 = 0;
        uint64_t v29 = v33;
        unint64_t v44 = v63;
      }
      break;
    case 2:
      char v45 = v21;
      uint64_t v79 = v99;
      UIListContentConfiguration.text.setter();
      UIListContentConfiguration.secondaryText.setter();
      double v46 = [objc_allocWithZone((Class)UISwitch) init];
      v78[1] = sub_100006060(0, (unint64_t *)&unk_1006C1470);
      unint64_t v47 = v27;
      uint64_t v48 = v88 + 16;
      uint64_t v49 = v83;
      (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v83, v29, v21);
      uint64_t v50 = (*(unsigned __int8 *)(v48 + 64) + 48) & ~(unint64_t)*(unsigned __int8 *)(v48 + 64);
      uint64_t v51 = (char *)swift_allocObject();
      uint64_t v52 = v87;
      *((void *)v51 + 2) = v45;
      *((void *)v51 + 3) = v52;
      *((void *)v51 + 4) = *((void *)v47 + 12);
      *((void *)v51 + 5) = v22;
      v23(&v51[v50], v49, v45);
      swift_retain();
      uint64_t v21 = v45;
      Swift::Int v53 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      [v46 addAction:v53 forControlEvents:4096];
      [v46 setOn:v79];
      unint64_t v44 = v81;
      [v81 setSelectionStyle:0];
      [v44 setAccessoryView:v46];

      uint64_t v86 = 0;
      uint64_t v83 = 0;
      objc_super v41 = 0;
      break;
    case 3:
      uint64_t v82 = v21;
      id v55 = v99;
      Swift::Int v54 = v100;
      UIListContentConfiguration.text.setter();
      UIListContentConfiguration.secondaryText.setter();
      if (!v54)
      {
        unint64_t v44 = v81;
        [v81 setAccessoryView:0];
        uint64_t v86 = 0;
        uint64_t v83 = 0;
        objc_super v41 = 0;
        uint64_t v21 = v82;
        break;
      }
      uint64_t v56 = self;
      Swift::Int v57 = (char *)swift_allocObject();
      *((void *)v57 + 2) = v55;
      *((void *)v57 + 3) = v54;
      unint64_t v44 = v81;
      *((void *)v57 + 4) = v81;
      id v58 = swift_allocObject();
      *(void *)(v58 + 16) = sub_1004FBCA8;
      *(void *)(v58 + 24) = v57;
      uint64_t v94 = sub_1004FC52C;
      double v95 = v58;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v91 = 1107296256;
      uint64_t v92 = sub_100024A40;
      uint64_t v93 = &unk_100643180;
      uint64_t v59 = _Block_copy(&aBlock);
      uint64_t v60 = v44;
      swift_retain();
      swift_release();
      [(id)v56 performWithoutAnimation:v59];
      _Block_release(v59);
      LOBYTE(v56) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (v56) {
        goto LABEL_22;
      }
      objc_super v41 = 0;
      uint64_t v21 = v82;
      uint64_t v86 = sub_1004FBCA8;
      uint64_t v83 = v57;
      break;
    default:
      uint64_t v30 = v21;
      unint64_t v31 = v98;
      UIListContentConfiguration.text.setter();
      if (v31) {
        id v32 = [v24 systemRedColor];
      }
      else {
        id v32 = [v24 systemBlueColor];
      }
      Swift::Int v61 = v32;
      uint64_t v62 = (void (*)(void ***, void))UIListContentConfiguration.textProperties.modify();
      UIListContentConfiguration.TextProperties.color.setter();
      v62(&aBlock, 0);
      unint64_t v44 = v81;
      [v81 setAccessoryView:0];
      [v44 setAccessoryType:0];
      uint64_t v86 = 0;
      uint64_t v83 = 0;
      objc_super v41 = 0;
      uint64_t v21 = v30;
      break;
  }
  uint64_t v64 = v87;
  uint64_t v65 = v87[3];
  uint64_t v66 = v44;
  [v66 setUserInteractionEnabled:v65(v21, v64) & 1];

  uint64_t v67 = v21;
  unint64_t v68 = [v66 contentView];
  uint64_t v69 = v65(v67, v64);
  id v70 = 0.5;
  if (v69) {
    id v70 = 1.0;
  }
  [v68 setAlpha:v70];

  uint64_t v71 = v85;
  uint64_t v93 = (void *)v85;
  uint64_t v94 = (uint64_t (*)())&protocol witness table for UIListContentConfiguration;
  uint64_t v72 = sub_100042804((uint64_t *)&aBlock);
  unint64_t v73 = v84;
  uint64_t v74 = v89;
  (*(void (**)(uint64_t *, char *, uint64_t))(v84 + 16))(v72, v89, v71);
  UITableViewCell.contentConfiguration.setter();
  id v75 = v66;
  uint64_t v76 = String._bridgeToObjectiveC()();
  [v75 setAccessibilityIdentifier:v76];

  (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v71);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v29, v67);
  sub_100036B90((uint64_t)v86);
  sub_100036B90((uint64_t)v41);
  return v80;
}

uint64_t sub_1004FAD2C()
{
  static UIListContentConfiguration.cell()();
  uint64_t v0 = self;
  id v1 = [v0 preferredFontForTextStyle:UIFontTextStyleBody];
  uint64_t v2 = (void (*)(unsigned char *, void))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.font.setter();
  v2(v11, 0);
  BOOL v3 = self;
  id v4 = [v3 labelColor];
  uint64_t v5 = (void (*)(unsigned char *, void))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.color.setter();
  v5(v11, 0);
  id v6 = [v0 preferredFontForTextStyle:UIFontTextStyleSubheadline];
  uint64_t v7 = (void (*)(unsigned char *, void))UIListContentConfiguration.secondaryTextProperties.modify();
  UIListContentConfiguration.TextProperties.font.setter();
  v7(v11, 0);
  id v8 = [v3 secondaryLabelColor];
  uint64_t v9 = (void (*)(unsigned char *, void))UIListContentConfiguration.secondaryTextProperties.modify();
  UIListContentConfiguration.TextProperties.color.setter();
  v9(v11, 0);
  UIListContentConfiguration.textToSecondaryTextVerticalPadding.setter();
  if (qword_1006AE228 != -1) {
    swift_once();
  }
  if (qword_1006AE460 != -1) {
    swift_once();
  }
  return UIListContentConfiguration.directionalLayoutMargins.setter();
}

void sub_1004FAF68(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  id v8 = objc_allocWithZone((Class)type metadata accessor for FMModernPlatterAccessoryLabelView());
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1004F8ACC(a1, a2, a4);
  [a3 setAccessoryView:v9];
}

void sub_1004FB000(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  uint64_t v6 = *(void *)(*a2 + 80);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)aBlock - v8;
  uint64_t v10 = self;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = v6;
  *((void *)v12 + 3) = *(void *)(v5 + 88);
  *((void *)v12 + 4) = *(void *)(v5 + 96);
  *((void *)v12 + 5) = a2;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v12[v11], v9, v6);
  aBlock[4] = sub_1004FBDA4;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_1006431D0;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v10 setCompletionBlock:v13];
  _Block_release(v13);
}

uint64_t sub_1004FB208(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void (**)(uint64_t))(result + 32);
  if (v2)
  {
    swift_retain();
    v2(a2);
    return sub_100036B90((uint64_t)v2);
  }
  return result;
}

uint64_t sub_1004FB27C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = a3;
  id v10 = a1;
  sub_1004F8278(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id sub_1004FB378()
{
  return 0;
}

double sub_1004FB380()
{
  return 0.0;
}

BOOL sub_1004FB388()
{
  return sub_1004FB964();
}

uint64_t sub_1004FB3B0()
{
  return 0;
}

void sub_1004FB3B8()
{
}

id sub_1004FB410()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMModernPlatterView();
  return [super dealloc];
}

void sub_1004FB498(uint64_t a1)
{
  sub_1000E762C(*(void **)(a1 + qword_1006C11D0));
  swift_bridgeObjectRelease();
  swift_release();

  objc_super v2 = *(void **)(a1 + qword_1006C11F8);
}

uint64_t type metadata accessor for FMModernPlatterView()
{
  return sub_100040E58();
}

uint64_t sub_1004FB54C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FMModernPlatterView.ViewModel()
{
  return sub_100040E58();
}

unsigned char *sub_1004FB5B8(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1004FB654);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for FMModernPlatterView.Section()
{
  return sub_100040E58();
}

uint64_t sub_1004FB694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

uint64_t sub_1004FB69C(id *a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1004FB6E0(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  id v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1004FB740(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t sub_1004FB7CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t sub_1004FB82C(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1004FB874(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for FMModernPlatterView.FMModernPlatterViewHeaderConfiguration()
{
  return sub_100040E58();
}

uint64_t sub_1004FB8D8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1004FB8F4(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return sub_10005D034(&qword_1006AF2D0);
  }
  else
  {
    return type metadata accessor for _ContiguousArrayStorage();
  }
}

BOOL sub_1004FB964()
{
  return *(void *)(v0 + qword_1006C11D0) != 0;
}

void *sub_1004FB97C(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  static Array._allocateUninitialized(_:)();
  v1[2] = Dictionary.init(dictionaryLiteral:)();
  uint64_t v3 = static Array._allocateUninitialized(_:)();
  v1[4] = 0;
  v1[5] = 0;
  v1[3] = v3;
  sub_1004F9284(a1);
  return v1;
}

void *sub_1004FBA64(uint64_t a1)
{
  return sub_1004FB97C(a1);
}

void sub_1004FBAAC()
{
  id v1 = &v0[qword_1006C11D0];
  *id v1 = 0u;
  v1[1] = 0u;
  *(_OWORD *)((char *)v1 + 25) = 0u;
  uint64_t v2 = qword_1006C11D8;
  *(void *)&v0[v2] = static Array._allocateUninitialized(_:)();
  uint64_t v3 = qword_1006C11F8;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)type metadata accessor for FMModernPlatterHeaderView()) init];
  v0[qword_1006C1200] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1004FBB90()
{
}

uint64_t sub_1004FBBC0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

id sub_1004FBBF8(uint64_t (**a1)(uint64_t, id), uint64_t a2, uint64_t a3)
{
  return sub_1004FA12C(a1, a2, a3, *(void (***)())(v3 + 16));
}

void sub_1004FBC04(uint64_t a1)
{
  sub_1004FB000(a1, *(uint64_t **)(v1 + 40), v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80)));
}

uint64_t sub_1004FBC44()
{
  return sub_1004FBF78((void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_1004FBC5C()
{
  sub_1004FAF68(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), 1);
}

uint64_t sub_1004FBC80()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004FBC90()
{
  return sub_1004FBF78((void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_1004FBCA8()
{
  sub_1004FAF68(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), 0);
}

uint64_t sub_1004FBCCC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004FBCE0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1004FBDA4()
{
  return sub_1004FB208(*(void *)(v0 + 40), v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
}

uint64_t sub_1004FBDF8()
{
  return 24;
}

__n128 sub_1004FBE04(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_1004FBE18()
{
  return swift_getAtKeyPath();
}

uint64_t sub_1004FBE44()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004FBE84()
{
  return sub_1004F9E64(*(void **)(v0 + 16));
}

uint64_t sub_1004FBE8C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004FBEC4(uint64_t a1)
{
  return sub_1004FA044(a1, *(void *)(v1 + 16));
}

uint64_t sub_1004FBECC()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1004FBF0C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1
                 + OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_resizeBlockCount);
  if (__OFADD__(v2, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void (**)(void))(v0 + 24);
    *(void *)(v1
              + OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_resizeBlockCount) = v2 + 1;
    v3();
    sub_1004F8894();
  }
}

uint64_t sub_1004FBF60()
{
  return sub_1004FBF78((void (*)(void))&_swift_release);
}

uint64_t sub_1004FBF78(void (*a1)(void))
{
  a1(*(void *)(v1 + 24));

  return _swift_deallocObject(v1, 40, 7);
}

void sub_1004FBFC0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  (*(void (**)(void))(v0 + 16))();
  uint64_t v2 = *(void *)(v1
                 + OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_resizeBlockCount);
  BOOL v3 = __OFSUB__(v2, 1);
  uint64_t v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v1
              + OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_resizeBlockCount) = v4;
    sub_1004F8894();
  }
}

uint64_t sub_1004FC014()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004FC04C()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1004FC084(uint64_t a1)
{
}

uint64_t sub_1004FC090()
{
  return sub_1004F9DB8(*(void *)(v0 + 16));
}

uint64_t sub_1004FC098()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004FC0A8(uint64_t a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1004FC0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result = a4;
  switch(a7)
  {
    case 0:
      goto LABEL_4;
    case 1:
    case 3:
      swift_bridgeObjectRetain();
      goto LABEL_3;
    case 2:
LABEL_3:
      swift_bridgeObjectRetain();
LABEL_4:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for FMModernPlatterRowType(uint64_t a1)
{
  return sub_1002BEA2C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
}

uint64_t initializeWithCopy for FMModernPlatterRowType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_1004FC0E8(*(void *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for FMModernPlatterRowType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_1004FC0E8(*(void *)a2, v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  char v16 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  sub_1002BEA2C(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 initializeWithTake for FMModernPlatterRowType(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FMModernPlatterRowType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  char v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v3;
  sub_1002BEA2C(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMModernPlatterRowType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMModernPlatterRowType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1004FC3B0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48);
}

uint64_t sub_1004FC3B8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FMModernPlatterRowType()
{
  return &type metadata for FMModernPlatterRowType;
}

unsigned char *storeEnumTagSinglePayload for FMModernPlatterRowType.ButtonType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004FC49CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMModernPlatterRowType.ButtonType()
{
  return &type metadata for FMModernPlatterRowType.ButtonType;
}

unint64_t sub_1004FC4D8()
{
  unint64_t result = qword_1006C1480;
  if (!qword_1006C1480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C1480);
  }
  return result;
}

double sub_1004FC55C()
{
  __asm { FMOV            V0.2D, #18.0 }
  xmmword_1006D28A0 = _Q0;
  *(_OWORD *)algn_1006D28B0 = xmmword_10056AB70;
  double result = 2.0;
  xmmword_1006D28C0 = xmmword_10056AB80;
  return result;
}

char *sub_1004FC584(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6, int a7, double a8)
{
  uint64_t v9 = v8;
  int v47 = a6;
  int v48 = a7;
  int v49 = a5;
  uint64_t v44 = a2;
  uint64_t v45 = a4;
  int v46 = a3;
  uint64_t v43 = a1;
  uint64_t v11 = sub_10005D034((uint64_t *)&unk_1006C0CE0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FMPlatterIcon();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  NSString v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = &v8[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_identifier];
  *(void *)uint64_t v18 = 0;
  *((void *)v18 + 1) = 0;
  uint64_t v19 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView;
  id v20 = objc_allocWithZone((Class)UIView);
  uint64_t v21 = v8;
  *(void *)&v9[v19] = [v20 init];
  uint64_t v22 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_iconView;
  *(void *)&v21[v22] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v23 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_titleLabel;
  *(void *)&v21[v23] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v24 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel;
  type metadata accessor for FMCopyableLabel();
  *(void *)&v21[v24] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v25 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_chevron;
  id v26 = sub_1003E798C();
  id v27 = [objc_allocWithZone((Class)UIImageView) initWithImage:v26];

  *(void *)&v21[v25] = v27;
  uint64_t v28 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separator;
  *(void *)&v21[v28] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v29 = &v21[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_title];
  *(void *)uint64_t v29 = 0;
  *((void *)v29 + 1) = 0;
  uint64_t v30 = &v21[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle];
  *(void *)uint64_t v30 = 0;
  *((void *)v30 + 1) = 0;
  uint64_t v31 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleColor;
  *(void *)&v21[v31] = [self secondaryLabelColor];
  v21[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleIsCopyToPasteboardEnabled] = 0;
  v21[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separated] = 1;
  v21[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_isChevronVisible] = 0;
  uint64_t v32 = v44;
  *(void *)uint64_t v29 = v43;
  *((void *)v29 + 1) = v32;
  uint64_t v33 = v45;
  swift_bridgeObjectRelease();
  v21[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_isBoldTitle] = v46;
  *(double *)&v21[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundOffset] = a8;
  v21[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_fullWidthSeparator] = v47;
  v21[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_hiliteBackgroundWhenTapped] = v48;

  id v34 = (objc_class *)type metadata accessor for FMMultiSettingsRowView();
  v50.receiver = v21;
  v50.super_class = v34;
  id v35 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_1002C5920(v33, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    NSString v36 = v35;
    sub_1002C5988((uint64_t)v13);
  }
  else
  {
    sub_1002C59E8((uint64_t)v13, (uint64_t)v17);
    id v37 = *(void **)&v35[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_iconView];
    Swift::String v38 = v35;
    id v39 = sub_10043C974((uint64_t)v17, 0);
    [v37 setImage:v39];

    sub_1000C8200((uint64_t)v17);
  }
  char v40 = v49 & 1;
  [v35 setUserInteractionEnabled:v49 & 1];
  v35[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_isChevronVisible] = v40;
  sub_1004FCAD0();
  sub_1004FCEE0(a8);

  sub_1002C5988(v33);
  return v35;
}

uint64_t sub_1004FCA14()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_title + 8);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_title);
    swift_bridgeObjectRetain();
    v3._countAndFlagsBits = v2;
    v3._object = v1;
    String.append(_:)(v3);
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle + 8);
  if (v4)
  {
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle);
    String.append(_:)(*(Swift::String *)(&v4 - 1));
    v6._countAndFlagsBits = 44;
    v6._object = (void *)0xE100000000000000;
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
  }
  return 0;
}

void sub_1004FCAD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_chevron;
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_chevron] setHidden:(v0[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_isChevronVisible] & 1) == 0];
  [*(id *)&v0[v2] setContentMode:1];
  Swift::String v3 = *(void **)&v0[v2];
  uint64_t v4 = self;
  id v5 = v3;
  id v6 = [v4 tertiaryLabelColor];
  [v5 setTintColor:v6];

  uint64_t v7 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_titleLabel;
  uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_titleLabel];
  if (*(void *)&v1[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_title + 8])
  {
    id v9 = v8;
    swift_bridgeObjectRetain();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v11 = v8;
    NSString v10 = 0;
  }
  [v8 setText:v10];

  uint64_t v12 = *(void **)&v1[v7];
  int v13 = v1[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_isBoldTitle];
  uint64_t v14 = self;
  id v15 = v12;
  id v16 = [v14 preferredFontForTextStyle:UIFontTextStyleBody];
  uint64_t v30 = v2;
  if (v13 == 1)
  {
    NSString v17 = (void *)sub_100042318(0x8000);

    id v16 = (id)sub_100042318(2);
  }
  [v15 setFont:v16];

  [*(id *)&v1[v7] setNumberOfLines:0];
  [*(id *)&v1[v7] setAdjustsFontForContentSizeCategory:1];
  uint64_t v18 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel;
  uint64_t v19 = *(void **)&v1[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel];
  id v20 = self;
  id v21 = v19;
  id v22 = [v20 preferredFontForTextStyle:UIFontTextStyleFootnote];
  [v21 setFont:v22];

  id v23 = *(id *)&v1[v18];
  id v24 = [v4 secondaryLabelColor];
  [v23 setTextColor:v24];

  [*(id *)&v1[v18] setTextAlignment:4];
  [*(id *)&v1[v18] setNumberOfLines:0];
  [*(id *)&v1[v18] setAdjustsFontForContentSizeCategory:1];
  uint64_t v25 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separator;
  id v26 = *(id *)&v1[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separator];
  id v27 = [v4 tertiaryLabelColor];
  [v26 setBackgroundColor:v27];

  [v1 addSubview:*(void *)&v1[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView]];
  [v1 addSubview:*(void *)&v1[v7]];
  [v1 addSubview:*(void *)&v1[v18]];
  [v1 addSubview:*(void *)&v1[v30]];
  [v1 addSubview:*(void *)&v1[v25]];
  uint64_t v28 = *(void **)&v1[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_iconView];
  id v29 = [v28 image];

  if (v29)
  {
    [v1 addSubview:v28];
  }
}

void sub_1004FCEE0(double a1)
{
  uint64_t v2 = v1;
  if (qword_1006AE228 != -1) {
    swift_once();
  }
  double v4 = *(double *)&qword_1006D20C8;
  id v5 = *(void **)&v1[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_iconView];
  uint64_t v119 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_titleLabel;
  id v6 = *(void **)&v1[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_titleLabel];
  uint64_t v118 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel;
  uint64_t v7 = *(void **)&v2[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel];
  uint64_t v116 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separator;
  uint64_t v8 = *(void **)&v2[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separator];
  uint64_t v113 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_chevron;
  id v9 = *(void **)&v2[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_chevron];
  uint64_t v117 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView;
  NSString v10 = *(void **)&v2[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView];
  id v11 = v5;
  id v12 = v6;
  id v13 = v7;
  id v14 = v8;
  id v15 = v9;
  id v16 = v10;
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v16 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v17 = [v11 image];
  uint64_t v18 = self;
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_10055C1E0;
  id v121 = v18;
  if (v17)
  {
    id v20 = [v11 topAnchor];
    id v21 = [v2 topAnchor];
    id v22 = [v20 constraintEqualToAnchor:v21 constant:v4];

    *(void *)(v19 + 32) = v22;
    id v23 = [v11 leadingAnchor];
    id v24 = [v2 leadingAnchor];
    id v25 = [v23 constraintEqualToAnchor:v24];

    *(void *)(v19 + 40) = v25;
    specialized Array._endMutation()();
    sub_100006060(0, (unint64_t *)&qword_1006AEE60);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v18 activateConstraints:isa];

    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_10055C1E0;
    uint64_t v28 = v119;
    id v29 = [*(id *)&v2[v119] topAnchor];
    id v30 = [v11 bottomAnchor];
    if (qword_1006ADF68 != -1) {
      swift_once();
    }
    id v31 = [v29 constraintEqualToAnchor:v30 constant:*(double *)&xmmword_1006D14B0 v113];

    *(void *)(v27 + 32) = v31;
    id v32 = [*(id *)&v2[v119] leadingAnchor];
    id v33 = [v2 leadingAnchor];
    id v34 = [v32 constraintEqualToAnchor:v33];

    *(void *)(v27 + 40) = v34;
    specialized Array._endMutation()();
    v35.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    NSString v36 = &selRef_tableView_viewForFooterInSection_;
    id v37 = &qword_1006AE000;
  }
  else
  {
    uint64_t v28 = v119;
    id v38 = [*(id *)&v2[v119] topAnchor];
    id v39 = [v2 topAnchor];
    id v37 = &qword_1006AE000;
    if (qword_1006AE450 != -1) {
      swift_once();
    }
    id v40 = [v38 constraintEqualToAnchor:v39 constant:*((double *)&xmmword_1006D28C0 + 1) v113];

    *(void *)(v19 + 32) = v40;
    id v41 = [*(id *)&v2[v119] leadingAnchor];
    id v42 = [v2 leadingAnchor];
    id v43 = [v41 constraintEqualToAnchor:v42];

    *(void *)(v19 + 40) = v43;
    specialized Array._endMutation()();
    sub_100006060(0, (unint64_t *)&qword_1006AEE60);
    v35.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    NSString v36 = &selRef_tableView_viewForFooterInSection_;
  }
  swift_bridgeObjectRelease();
  [v121 activateConstraints:v35.super.isa];

  id v122 = self;
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_10055C1F0;
  id v45 = [*(id *)&v2[v118] topAnchor];
  id v46 = [*(id *)&v2[v28] v36[110]];
  if (v37[138] != -1) {
    swift_once();
  }
  id v47 = [v45 constraintEqualToAnchor:v46 constant:*(double *)&xmmword_1006D28C0];

  *(void *)(v44 + 32) = v47;
  id v48 = [*(id *)&v2[v118] v36[110]];
  id v49 = [v2 v36[110]];
  id v50 = [v48 constraintLessThanOrEqualToAnchor:v49 constant:-*((double *)&xmmword_1006D28C0 + 1)];

  *(void *)(v44 + 40) = v50;
  id v51 = [*(id *)&v2[v118] leadingAnchor];
  id v52 = [v2 leadingAnchor];
  id v53 = [v51 constraintEqualToAnchor:v52];

  *(void *)(v44 + 48) = v53;
  specialized Array._endMutation()();
  sub_100006060(0, (unint64_t *)&qword_1006AEE60);
  Class v54 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v122 activateConstraints:v54];

  uint64_t v115 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_isChevronVisible;
  if (v2[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_isChevronVisible] == 1)
  {
    uint64_t v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_10055E140;
    id v56 = [*(id *)&v2[v114] centerYAnchor];
    id v57 = [v2 centerYAnchor];
    id v58 = [v56 constraintEqualToAnchor:v57];

    *(void *)(v55 + 32) = v58;
    id v59 = [*(id *)&v2[v114] leadingAnchor];
    id v60 = [*(id *)&v2[v119] trailingAnchor];
    if (qword_1006AE478 != -1) {
      swift_once();
    }
    id v61 = [v59 constraintEqualToAnchor:v60 constant:*(double *)&qword_1006D2940];

    *(void *)(v55 + 40) = v61;
    id v62 = [*(id *)&v2[v114] leadingAnchor];
    id v63 = [*(id *)&v2[v118] trailingAnchor];
    id v64 = [v62 constraintEqualToAnchor:v63 constant:*(double *)&qword_1006D2940];

    *(void *)(v55 + 48) = v64;
    id v65 = [*(id *)&v2[v114] trailingAnchor];
    id v66 = [v2 trailingAnchor];
    id v67 = [v65 constraintEqualToAnchor:v66];

    *(void *)(v55 + 56) = v67;
    id v68 = [*(id *)&v2[v114] heightAnchor];
    id v69 = objc_retainAutoreleasedReturnValue(objc_msgSend(v68, "constraintEqualToConstant:", *((double *)&xmmword_1006D2930
                                                                                             + 1)));

    *(void *)(v55 + 64) = v69;
    id v70 = [*(id *)&v2[v114] widthAnchor];
    id v71 = [v70 constraintEqualToConstant:*(double *)&xmmword_1006D2930];

    *(void *)(v55 + 72) = v71;
    specialized Array._endMutation()();
  }
  else
  {
    uint64_t v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = xmmword_10055C1E0;
    id v73 = [*(id *)&v2[v119] trailingAnchor];
    id v74 = [v2 trailingAnchor];
    id v75 = [v73 constraintEqualToAnchor:v74 constant:0.0];

    *(void *)(v72 + 32) = v75;
    id v76 = [*(id *)&v2[v118] trailingAnchor];
    id v77 = [v2 trailingAnchor];
    id v78 = [v76 constraintEqualToAnchor:v77 constant:0.0];

    *(void *)(v72 + 40) = v78;
    specialized Array._endMutation()();
  }
  Class v79 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v122 activateConstraints:v79];

  if (v2[v115]) {
    double v80 = a1;
  }
  else {
    double v80 = *((double *)&xmmword_1006D28C0 + 1);
  }
  uint64_t v81 = swift_allocObject();
  *(_OWORD *)(v81 + 16) = xmmword_10055B950;
  id v82 = [*(id *)&v2[v116] leadingAnchor];
  id v83 = [v2 leadingAnchor];
  uint64_t v84 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_fullWidthSeparator;
  double v85 = -v4;
  if (!v2[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_fullWidthSeparator]) {
    double v85 = 0.0;
  }
  id v86 = [v82 constraintEqualToAnchor:v83 constant:v85];

  *(void *)(v81 + 32) = v86;
  id v87 = [*(id *)&v2[v116] trailingAnchor];
  id v88 = [v2 trailingAnchor];
  if (v2[v84]) {
    double v89 = v4;
  }
  else {
    double v89 = v80;
  }
  id v90 = [v87 constraintEqualToAnchor:v88 constant:v89];

  *(void *)(v81 + 40) = v90;
  id v91 = [*(id *)&v2[v116] bottomAnchor];
  id v92 = [v2 bottomAnchor];
  id v93 = [v91 constraintEqualToAnchor:v92 constant:0.0];

  *(void *)(v81 + 48) = v93;
  id v94 = [*(id *)&v2[v116] heightAnchor];
  id v95 = [self mainScreen];
  [v95 scale];
  double v97 = v96;

  id v98 = [v94 constraintEqualToConstant:1.0 / v97];
  *(void *)(v81 + 56) = v98;
  specialized Array._endMutation()();
  Class v99 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v122 activateConstraints:v99];

  uint64_t v100 = swift_allocObject();
  *(_OWORD *)(v100 + 16) = xmmword_10055B950;
  id v101 = [*(id *)&v2[v117] topAnchor];
  id v102 = [v2 topAnchor];
  id v103 = [v101 constraintEqualToAnchor:v102];

  *(void *)(v100 + 32) = v103;
  id v104 = [*(id *)&v2[v117] bottomAnchor];
  id v105 = [v2 bottomAnchor];
  id v106 = [v104 constraintEqualToAnchor:v105];

  *(void *)(v100 + 40) = v106;
  id v107 = [*(id *)&v2[v117] leadingAnchor];
  id v108 = [v2 leadingAnchor];
  id v109 = [v107 constraintEqualToAnchor:v108 constant:-a1];

  *(void *)(v100 + 48) = v109;
  id v110 = [*(id *)&v2[v117] trailingAnchor];
  id v111 = [v2 trailingAnchor];
  id v112 = [v110 constraintEqualToAnchor:v111 constant:a1];

  *(void *)(v100 + 56) = v112;
  specialized Array._endMutation()();
  Class v120 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v122 activateConstraints:v120];
}

void sub_1004FDE90(uint64_t a1, uint64_t a2)
{
  sub_100006060(0, (unint64_t *)&qword_1006B0290);
  sub_1000C8370();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for FMMultiSettingsRowView();
  [super touchesBegan:a2];

  if (v2[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_hiliteBackgroundWhenTapped] == 1)
  {
    id v5 = *(id *)&v2[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView];
    id v6 = [v2 traitCollection];
    id v7 = [v6 userInterfaceStyle];

    uint64_t v8 = self;
    id v9 = &selRef_systemGray3Color;
    if (v7 != (id)2) {
      id v9 = &selRef_systemGray5Color;
    }
    id v10 = [v8 *v9];
    [v5 setBackgroundColor:v10];
  }
}

void sub_1004FE084(void *a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5)
{
  sub_100006060(0, (unint64_t *)&qword_1006B0290);
  sub_1000C8370();
  static Set._unconditionallyBridgeFromObjectiveC(_:)();
  id v8 = a4;
  id v9 = a1;
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  v15.receiver = v9;
  v15.super_class = (Class)type metadata accessor for FMMultiSettingsRowView();
  [super isa:v8];

  objc_super v11 = *(void **)&v9[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView];
  id v12 = self;
  id v13 = v11;
  id v14 = [v12 clearColor];
  [v13 setBackgroundColor:v14];

  swift_bridgeObjectRelease();
}

id sub_1004FE1E0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMMultiSettingsRowView();
  return [super dealloc];
}

uint64_t type metadata accessor for FMMultiSettingsRowView()
{
  return self;
}

void sub_1004FE310()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_identifier];
  *uint64_t v1 = 0;
  v1[1] = 0;
  uint64_t v2 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v3 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_iconView;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v4 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_titleLabel;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v5 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel;
  type metadata accessor for FMCopyableLabel();
  *(void *)&v0[v5] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v6 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_chevron;
  id v7 = sub_1003E798C();
  id v8 = [objc_allocWithZone((Class)UIImageView) initWithImage:v7];

  *(void *)&v0[v6] = v8;
  uint64_t v9 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separator;
  *(void *)&v0[v9] = [objc_allocWithZone((Class)UIView) init];
  id v10 = &v0[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_title];
  *id v10 = 0;
  v10[1] = 0;
  objc_super v11 = &v0[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle];
  void *v11 = 0;
  v11[1] = 0;
  uint64_t v12 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleColor;
  *(void *)&v0[v12] = [self secondaryLabelColor];
  v0[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleIsCopyToPasteboardEnabled] = 0;
  v0[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separated] = 1;
  v0[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_isChevronVisible] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

double sub_1004FE4D8()
{
  __asm { FMOV            V0.2D, #18.0 }
  xmmword_1006D28D0 = _Q0;
  unk_1006D28E0 = xmmword_10056AB70;
  double result = 2.0;
  xmmword_1006D28F0 = xmmword_10056AB80;
  return result;
}

id sub_1004FE500(char a1, double a2)
{
  uint64_t v5 = &v2[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_identifier];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  uint64_t v6 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_backgroundView;
  id v7 = objc_allocWithZone((Class)UIView);
  id v8 = v2;
  *(void *)&v2[v6] = [v7 init];
  uint64_t v9 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_titleLabel;
  *(void *)&v8[v9] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v10 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_secondaryLabel;
  *(void *)&v8[v10] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v11 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_statusLabel;
  *(void *)&v8[v11] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v12 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_chevron;
  id v13 = sub_1003E798C();
  id v14 = [objc_allocWithZone((Class)UIImageView) initWithImage:v13];

  *(void *)&v8[v12] = v14;
  uint64_t v15 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_separator;
  *(void *)&v8[v15] = [objc_allocWithZone((Class)UIView) init];
  id v16 = &v8[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_title];
  *(void *)id v16 = 0;
  *((void *)v16 + 1) = 0;
  id v17 = &v8[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_subtitle];
  *(void *)id v17 = 0;
  *((void *)v17 + 1) = 0;
  uint64_t v18 = &v8[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_status];
  *(void *)uint64_t v18 = 0;
  *((void *)v18 + 1) = 0;
  v8[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_separated] = 1;
  v8[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_isChevronVisible] = a1;

  v21.receiver = v8;
  v21.super_class = (Class)type metadata accessor for FMMultiSettingsStatusRowView();
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v19 setUserInteractionEnabled:a1 & 1];
  sub_1004FE88C();
  sub_1004FEC6C(a2);

  return v19;
}

uint64_t sub_1004FE78C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_title + 8);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_title);
    swift_bridgeObjectRetain();
    v3._countAndFlagsBits = v2;
    v3._object = v1;
    String.append(_:)(v3);
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_subtitle + 8);
  if (v4)
  {
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_subtitle);
    String.append(_:)(*(Swift::String *)(&v4 - 1));
    v6._countAndFlagsBits = 44;
    v6._object = (void *)0xE100000000000000;
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_status + 8);
  if (v7)
  {
    uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_status);
    String.append(_:)(*(Swift::String *)(&v7 - 1));
    v9._countAndFlagsBits = 44;
    v9._object = (void *)0xE100000000000000;
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
  }
  return 0;
}

id sub_1004FE88C()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_chevron;
  uint64_t v26 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_chevron;
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_chevron] setHidden:(v0[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_isChevronVisible] & 1) == 0];
  [*(id *)&v0[v1] setContentMode:1];
  uint64_t v2 = *(void **)&v0[v1];
  Swift::String v3 = self;
  id v4 = v2;
  id v5 = [v3 tertiaryLabelColor];
  [v4 setTintColor:v5];

  uint64_t v6 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_titleLabel;
  uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_titleLabel];
  uint64_t v8 = self;
  id v9 = v7;
  id v10 = [v8 preferredFontForTextStyle:UIFontTextStyleBody];
  [v9 setFont:v10];

  [*(id *)&v0[v6] setNumberOfLines:0];
  [*(id *)&v0[v6] setAdjustsFontForContentSizeCategory:1];
  uint64_t v11 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_secondaryLabel;
  id v12 = *(id *)&v0[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_secondaryLabel];
  id v13 = [v8 preferredFontForTextStyle:UIFontTextStyleFootnote];
  [v12 setFont:v13];

  id v14 = *(id *)&v0[v11];
  id v15 = [v3 secondaryLabelColor];
  [v14 setTextColor:v15];

  [*(id *)&v0[v11] setTextAlignment:4];
  [*(id *)&v0[v11] setNumberOfLines:0];
  [*(id *)&v0[v11] setAdjustsFontForContentSizeCategory:1];
  uint64_t v16 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_statusLabel;
  id v17 = *(id *)&v0[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_statusLabel];
  id v18 = [v8 preferredFontForTextStyle:UIFontTextStyleFootnote];
  [v17 setFont:v18];

  id v19 = *(id *)&v0[v16];
  id v20 = [v3 tertiaryLabelColor];
  [v19 setTextColor:v20];

  [*(id *)&v0[v16] setTextAlignment:4];
  [*(id *)&v0[v16] setNumberOfLines:0];
  [*(id *)&v0[v16] setAdjustsFontForContentSizeCategory:1];
  uint64_t v21 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_separator;
  id v22 = *(id *)&v0[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_separator];
  id v23 = [v3 tertiaryLabelColor];
  [v22 setBackgroundColor:v23];

  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_backgroundView]];
  [v0 addSubview:*(void *)&v0[v6]];
  [v0 addSubview:*(void *)&v0[v11]];
  [v0 addSubview:*(void *)&v0[v16]];
  [v0 addSubview:*(void *)&v0[v26]];
  uint64_t v24 = *(void *)&v0[v21];

  return [v0 addSubview:v24];
}

void sub_1004FEC6C(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_titleLabel;
  [*(id *)&v1[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_titleLabel] setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v5 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_secondaryLabel;
  [*(id *)&v1[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_secondaryLabel] setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v90 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_statusLabel;
  [*(id *)&v1[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_statusLabel] setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v92 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_separator;
  [*(id *)&v1[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_separator] setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v89 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_chevron;
  [*(id *)&v1[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_chevron] setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v93 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_backgroundView;
  [*(id *)&v1[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_backgroundView] setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v6 = self;
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10055C1E0;
  id v8 = [*(id *)&v2[v4] topAnchor];
  id v9 = [v2 topAnchor];
  if (qword_1006AE458 != -1) {
    swift_once();
  }
  id v10 = [v8 constraintEqualToAnchor:v9 constant:*((double *)&xmmword_1006D28F0 + 1)];

  *(void *)(v7 + 32) = v10;
  id v11 = [*(id *)&v2[v4] leadingAnchor];
  id v12 = [v2 leadingAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12];

  *(void *)(v7 + 40) = v13;
  specialized Array._endMutation()();
  sub_100006060(0, (unint64_t *)&qword_1006AEE60);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v6 activateConstraints:isa];

  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_10055C1E0;
  id v16 = [*(id *)&v2[v5] topAnchor];
  id v17 = [*(id *)&v2[v4] bottomAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17 constant:*(double *)&xmmword_1006D28F0];

  *(void *)(v15 + 32) = v18;
  id v19 = [*(id *)&v2[v5] leadingAnchor];
  id v20 = [v2 leadingAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20];

  *(void *)(v15 + 40) = v21;
  specialized Array._endMutation()();
  Class v22 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v6 activateConstraints:v22];

  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_10055C1F0;
  id v24 = [*(id *)&v2[v90] topAnchor];
  id v25 = [*(id *)&v2[v5] bottomAnchor];
  id v26 = [v24 constraintEqualToAnchor:v25 constant:*(double *)&xmmword_1006D28F0];

  *(void *)(v23 + 32) = v26;
  id v27 = [*(id *)&v2[v90] bottomAnchor];
  id v28 = [v2 bottomAnchor];
  id v29 = [v27 constraintEqualToAnchor:v28 constant:-*((double *)&xmmword_1006D28F0 + 1)];

  *(void *)(v23 + 40) = v29;
  id v30 = [*(id *)&v2[v90] leadingAnchor];
  id v31 = [v2 leadingAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31];

  *(void *)(v23 + 48) = v32;
  specialized Array._endMutation()();
  Class v33 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v6 activateConstraints:v33];

  uint64_t v91 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_isChevronVisible;
  if (v2[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_isChevronVisible] == 1)
  {
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_10055E140;
    id v35 = [*(id *)&v2[v89] centerYAnchor];
    id v36 = [v2 centerYAnchor];
    id v37 = [v35 constraintEqualToAnchor:v36];

    *(void *)(v34 + 32) = v37;
    id v38 = [*(id *)&v2[v89] leadingAnchor];
    id v39 = [*(id *)&v2[v4] trailingAnchor];
    if (qword_1006AE478 != -1) {
      swift_once();
    }
    id v40 = [v38 constraintEqualToAnchor:v39 constant:*(double *)&qword_1006D2940];

    *(void *)(v34 + 40) = v40;
    id v41 = [*(id *)&v2[v89] leadingAnchor];
    id v42 = [*(id *)&v2[v5] trailingAnchor];
    id v43 = [v41 constraintEqualToAnchor:v42 constant:*(double *)&qword_1006D2940];

    *(void *)(v34 + 48) = v43;
    id v44 = [*(id *)&v2[v89] trailingAnchor];
    id v45 = [v2 trailingAnchor];
    id v46 = [v44 constraintEqualToAnchor:v45];

    *(void *)(v34 + 56) = v46;
    id v47 = [*(id *)&v2[v89] heightAnchor];
    id v48 = objc_retainAutoreleasedReturnValue(objc_msgSend(v47, "constraintEqualToConstant:", *((double *)&xmmword_1006D2930
                                                                                             + 1)));

    *(void *)(v34 + 64) = v48;
    id v49 = [*(id *)&v2[v89] widthAnchor];
    id v50 = [v49 constraintEqualToConstant:*(double *)&xmmword_1006D2930];

    *(void *)(v34 + 72) = v50;
    specialized Array._endMutation()();
  }
  else
  {
    uint64_t v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_10055C1E0;
    id v52 = [*(id *)&v2[v4] trailingAnchor];
    id v53 = [v2 trailingAnchor];
    id v54 = [v52 constraintEqualToAnchor:v53 constant:0.0];

    *(void *)(v51 + 32) = v54;
    id v55 = [*(id *)&v2[v5] trailingAnchor];
    id v56 = [v2 trailingAnchor];
    id v57 = [v55 constraintEqualToAnchor:v56 constant:0.0];

    *(void *)(v51 + 40) = v57;
    specialized Array._endMutation()();
  }
  Class v58 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v6 activateConstraints:v58];

  if (v2[v91]) {
    double v59 = a1;
  }
  else {
    double v59 = *((double *)&xmmword_1006D28F0 + 1);
  }
  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_10055B950;
  id v61 = [*(id *)&v2[v92] leadingAnchor];
  id v62 = [v2 leadingAnchor];
  id v63 = [v61 constraintEqualToAnchor:v62];

  *(void *)(v60 + 32) = v63;
  id v64 = [*(id *)&v2[v92] trailingAnchor];
  id v65 = [v2 trailingAnchor];
  id v66 = [v64 constraintEqualToAnchor:v65 constant:v59];

  *(void *)(v60 + 40) = v66;
  id v67 = [*(id *)&v2[v92] bottomAnchor];
  id v68 = [v2 bottomAnchor];
  id v69 = [v67 constraintEqualToAnchor:v68 constant:0.0];

  *(void *)(v60 + 48) = v69;
  id v70 = [*(id *)&v2[v92] heightAnchor];
  id v71 = [self mainScreen];
  [v71 scale];
  double v73 = v72;

  id v74 = [v70 constraintEqualToConstant:1.0 / v73];
  *(void *)(v60 + 56) = v74;
  specialized Array._endMutation()();
  Class v75 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v6 activateConstraints:v75];

  uint64_t v76 = swift_allocObject();
  *(_OWORD *)(v76 + 16) = xmmword_10055B950;
  id v77 = [*(id *)&v2[v93] topAnchor];
  id v78 = [v2 topAnchor];
  id v79 = [v77 constraintEqualToAnchor:v78];

  *(void *)(v76 + 32) = v79;
  id v80 = [*(id *)&v2[v93] bottomAnchor];
  id v81 = [v2 bottomAnchor];
  id v82 = [v80 constraintEqualToAnchor:v81];

  *(void *)(v76 + 40) = v82;
  id v83 = [*(id *)&v2[v93] leadingAnchor];
  id v84 = [v2 leadingAnchor];
  id v85 = [v83 constraintEqualToAnchor:v84 constant:-a1];

  *(void *)(v76 + 48) = v85;
  id v86 = [*(id *)&v2[v93] trailingAnchor];
  id v87 = [v2 trailingAnchor];
  id v88 = [v86 constraintEqualToAnchor:v87 constant:a1];

  *(void *)(v76 + 56) = v88;
  specialized Array._endMutation()();
  Class v94 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v6 activateConstraints:v94];
}

void sub_1004FF990(uint64_t a1, uint64_t a2)
{
  sub_100006060(0, (unint64_t *)&qword_1006B0290);
  sub_1000C8370();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for FMMultiSettingsStatusRowView();
  [super touchesBegan:a2];

  id v5 = *(id *)&v2[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_backgroundView];
  id v6 = [v2 traitCollection];
  id v7 = [v6 userInterfaceStyle];

  id v8 = self;
  id v9 = &selRef_systemGray3Color;
  if (v7 != (id)2) {
    id v9 = &selRef_systemGray5Color;
  }
  id v10 = [v8 *v9];
  [v5 setBackgroundColor:v10];
}

void sub_1004FFB70(void *a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5)
{
  sub_100006060(0, (unint64_t *)&qword_1006B0290);
  sub_1000C8370();
  static Set._unconditionallyBridgeFromObjectiveC(_:)();
  id v8 = a4;
  id v9 = a1;
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  v15.receiver = v9;
  v15.super_class = (Class)type metadata accessor for FMMultiSettingsStatusRowView();
  [super isa:v8];

  objc_super v11 = *(void **)&v9[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_backgroundView];
  id v12 = self;
  id v13 = v11;
  id v14 = [v12 clearColor];
  [v13 setBackgroundColor:v14];

  swift_bridgeObjectRelease();
}

id sub_1004FFCCC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMMultiSettingsStatusRowView();
  return [super dealloc];
}

uint64_t type metadata accessor for FMMultiSettingsStatusRowView()
{
  return self;
}

void sub_1004FFE00()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_identifier];
  *uint64_t v1 = 0;
  v1[1] = 0;
  uint64_t v2 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_backgroundView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v3 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_titleLabel;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v4 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_secondaryLabel;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v5 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_statusLabel;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v6 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_chevron;
  id v7 = sub_1003E798C();
  id v8 = [objc_allocWithZone((Class)UIImageView) initWithImage:v7];

  *(void *)&v0[v6] = v8;
  uint64_t v9 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_separator;
  *(void *)&v0[v9] = [objc_allocWithZone((Class)UIView) init];
  id v10 = &v0[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_title];
  *id v10 = 0;
  v10[1] = 0;
  objc_super v11 = &v0[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_subtitle];
  void *v11 = 0;
  v11[1] = 0;
  id v12 = &v0[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_status];
  *id v12 = 0;
  v12[1] = 0;
  v0[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_separated] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t *sub_1004FFF8C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    id v13 = (uint64_t *)((char *)a1 + v12);
    id v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    void *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1005000B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100500174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  id v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10050024C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  id v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100500338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100500404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  id v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005004E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005004F4);
}

uint64_t sub_1005004F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_10050060C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100500620);
}

uint64_t sub_100500620(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for FMIPHawkeyeProductInformation.AssetType();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void *sub_100500734(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2 >> 62;
  uint64_t v3 = _swiftEmptyArrayStorage;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_43;
      }
      uint64_t v4 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (!v4) {
        return v3;
      }
      id v29 = _swiftEmptyArrayStorage;
      int64_t v7 = v4 & ~(v4 >> 63);
      sub_10013E758(0, v7, 0);
      uint64_t v3 = _swiftEmptyArrayStorage;
      if (v2)
      {
        if (v2 == 1) {
          uint64_t v8 = (int)a1;
        }
        else {
          uint64_t v8 = *(void *)(a1 + 16);
        }
        if (v4 < 0)
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
        }
      }
      else
      {
        if (v4 < 0) {
          goto LABEL_45;
        }
        uint64_t v8 = 0;
      }
      int v25 = v2;
      do
      {
        if (!v7)
        {
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        if (v2)
        {
          if (v2 == 1)
          {
            if (v8 < (int)a1 || v8 >= a1 >> 32) {
              goto LABEL_36;
            }
            uint64_t v9 = __DataStorage._bytes.getter();
            if (!v9) {
              goto LABEL_46;
            }
            uint64_t v10 = v9;
            uint64_t v11 = __DataStorage._offset.getter();
            uint64_t v12 = v8 - v11;
            if (__OFSUB__(v8, v11)) {
              goto LABEL_39;
            }
          }
          else
          {
            if (v8 < *(void *)(a1 + 16)) {
              goto LABEL_38;
            }
            if (v8 >= *(void *)(a1 + 24)) {
              goto LABEL_40;
            }
            uint64_t v14 = __DataStorage._bytes.getter();
            if (!v14) {
              goto LABEL_47;
            }
            uint64_t v10 = v14;
            uint64_t v15 = __DataStorage._offset.getter();
            uint64_t v12 = v8 - v15;
            if (__OFSUB__(v8, v15)) {
              goto LABEL_41;
            }
          }
          char v13 = *(unsigned char *)(v10 + v12);
        }
        else
        {
          if (v8 >= BYTE6(a2)) {
            goto LABEL_37;
          }
          uint64_t v26 = a1;
          int v27 = a2;
          __int16 v28 = WORD2(a2);
          char v13 = *((unsigned char *)&v26 + v8);
        }
        sub_10005D034((uint64_t *)&unk_1006AF790);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_10055B970;
        *(void *)(v16 + 56) = &type metadata for UInt8;
        *(void *)(v16 + 64) = &protocol witness table for UInt8;
        *(unsigned char *)(v16 + 32) = v13;
        unint64_t v2 = String.init(format:_:)();
        uint64_t v18 = v17;
        id v29 = v3;
        unint64_t v20 = v3[2];
        unint64_t v19 = v3[3];
        if (v20 >= v19 >> 1)
        {
          sub_10013E758(v19 > 1, v20 + 1, 1);
          uint64_t v3 = v29;
        }
        v3[2] = v20 + 1;
        id v21 = &v3[2 * v20];
        v21[4] = v2;
        v21[5] = v18;
        ++v8;
        --v7;
        --v4;
        LODWORD(v2) = v25;
      }
      while (v4);
      return v3;
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      uint64_t v4 = v5 - v6;
      if (!__OFSUB__(v5, v6)) {
        goto LABEL_6;
      }
      goto LABEL_44;
    case 3uLL:
      return v3;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_100500ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v57 = a3;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v54 = v5;
  uint64_t v55 = v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMIPHawkeyeProductInformation.AssetScale();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005010EC((uint64_t)v12);
  uint64_t v17 = a2;
  uint64_t v56 = a1;
  FMIPHawkeyeProductInformation.assetURL(for:scale:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v18 = sub_1005019FC();
  if (v19)
  {
    uint64_t v20 = v18;
    uint64_t v21 = v19;
    uint64_t v22 = v57;
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(v57, v16, v13);
    uint64_t v23 = type metadata accessor for FMAccessoryProductImageRequest();
    uint64_t v24 = v22 + *(int *)(v23 + 20);
    uint64_t v25 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v24, v17, v25);
    uint64_t v26 = type metadata accessor for FMIPHawkeyeProductInformation();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v56, v26);
  }
  else
  {
    id v50 = v8;
    uint64_t v51 = v14;
    uint64_t v27 = v54;
    uint64_t v53 = a2;
    uint64_t v59 = 0;
    unint64_t v60 = 0xE000000000000000;
    _StringGuts.grow(_:)(86);
    v28._object = (void *)0x80000001005A07C0;
    v28._countAndFlagsBits = 0xD000000000000054;
    String.append(_:)(v28);
    sub_100501FE4((unint64_t *)&unk_1006AFD70, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v52 = v13;
    v29._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v29);
    swift_bridgeObjectRelease();
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    String.append(_:)(v30);
    uint64_t v31 = v59;
    unint64_t v32 = v60;
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    sub_1000606BC(v33, (uint64_t)qword_1006D1E98);
    os_log_type_t v34 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    id v35 = Logger.logObject.getter();
    if (os_log_type_enabled(v35, v34))
    {
      id v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      *(_DWORD *)id v36 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v58 = sub_1000606F4(v31, v32, &v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v35, v34, "%s", v36, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v13 = v52;
    uint64_t v37 = v53;
    id v38 = v50;
    uint64_t v14 = v51;
    uint64_t v39 = v57;
    (*(void (**)(uint64_t, char *, uint64_t))(v51 + 16))(v57, v16, v52);
    uint64_t v23 = type metadata accessor for FMAccessoryProductImageRequest();
    uint64_t v40 = v39 + *(int *)(v23 + 20);
    uint64_t v41 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType();
    uint64_t v42 = *(void *)(v41 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v40, v37, v41);
    UUID.init()();
    uint64_t v20 = UUID.uuidString.getter();
    uint64_t v43 = v37;
    id v44 = v38;
    uint64_t v21 = v45;
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v43, v41);
    uint64_t v46 = type metadata accessor for FMIPHawkeyeProductInformation();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8))(v56, v46);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v44, v27);
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t result = type metadata accessor for FMAccessoryProductImageRequest();
  id v48 = (uint64_t *)(v57 + *(int *)(v23 + 24));
  *id v48 = v20;
  v48[1] = v21;
  return result;
}

uint64_t sub_1005010EC@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = self;
  id v3 = [v2 mainScreen];
  [v3 scale];
  double v5 = v4;

  if (v5 == 1.0)
  {
    uint64_t v6 = (unsigned int *)&enum case for FMIPHawkeyeProductInformation.AssetScale.x1(_:);
LABEL_7:
    uint64_t v7 = *v6;
    uint64_t v8 = type metadata accessor for FMIPHawkeyeProductInformation.AssetScale();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);
    return v9(a1, v7, v8);
  }
  if (v5 == 2.0)
  {
    uint64_t v6 = (unsigned int *)&enum case for FMIPHawkeyeProductInformation.AssetScale.x2(_:);
    goto LABEL_7;
  }
  if (v5 == 3.0)
  {
    uint64_t v6 = (unsigned int *)&enum case for FMIPHawkeyeProductInformation.AssetScale.x3(_:);
    goto LABEL_7;
  }
  v22[0] = 0;
  v22[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(59);
  v11._object = (void *)0x80000001005A0820;
  v11._countAndFlagsBits = 0xD000000000000039;
  String.append(_:)(v11);
  id v12 = [v2 mainScreen];
  [v12 scale];

  v13._countAndFlagsBits = Double.description.getter();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  String.append(_:)(v14);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_1000606BC(v15, (uint64_t)qword_1006D1E98);
  os_log_type_t v16 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = v16;
  if (os_log_type_enabled(v17, v16))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    v22[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315138;
    swift_bridgeObjectRetain();
    sub_1000606F4(0, 0xE000000000000000, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v20 = enum case for FMIPHawkeyeProductInformation.AssetScale.x3(_:);
  uint64_t v21 = type metadata accessor for FMIPHawkeyeProductInformation.AssetScale();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(a1, v20, v21);
}

Swift::Int sub_100501474()
{
  return Hasher._finalize()();
}

uint64_t sub_100501590()
{
  type metadata accessor for URL();
  sub_100501FE4(&qword_1006B5160, (void (*)(uint64_t))&type metadata accessor for URL);
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for FMIPHawkeyeProductInformation.AssetType();
  sub_100501FE4(&qword_1006B5158, (void (*)(uint64_t))&type metadata accessor for FMIPHawkeyeProductInformation.AssetType);
  dispatch thunk of Hashable.hash(into:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1005016A8()
{
  return Hasher._finalize()();
}

uint64_t sub_1005017C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((static URL.== infix(_:_:)() & 1) == 0
    || (static FMIPHawkeyeProductInformation.AssetType.== infix(_:_:)() & 1) == 0)
  {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  uint64_t v9 = (void *)(a2 + v6);
  if (v7 == *v9 && v8 == v9[1]) {
    return 1;
  }

  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10050185C()
{
  return sub_100501FE4(&qword_1006C16C0, (void (*)(uint64_t))type metadata accessor for FMAccessoryProductImageRequest);
}

unsigned char *sub_1005018A4@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_10050202C(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_1005020F0((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_10050216C((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_10050191C(uint64_t a1, uint64_t a2)
{
  uint64_t result = __DataStorage._bytes.getter();
  if (!result || (uint64_t result = __DataStorage._offset.getter(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      __DataStorage._length.getter();
      type metadata accessor for Insecure.MD5();
      sub_100501FE4(&qword_1006AFD48, (void (*)(uint64_t))&type metadata accessor for Insecure.MD5);
      return dispatch thunk of HashFunction.update(bufferPointer:)();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1005019FC()
{
  uint64_t v0 = type metadata accessor for Insecure.MD5Digest();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v30 = v0;
  uint64_t v31 = v1;
  __chkstk_darwin(v0);
  id v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for String.Encoding();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Insecure.MD5();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  Swift::String v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Insecure.MD5.init()();
  URL.absoluteString.getter();
  static String.Encoding.utf8.getter();
  uint64_t v12 = String.data(using:allowLossyConversion:)();
  unint64_t v14 = v13;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v14 >> 60 == 15)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return 0;
  }
  else
  {
    uint64_t v28 = v12;
    uint64_t v29 = v9;
    uint64_t v27 = v8;
    switch(v14 >> 62)
    {
      case 1uLL:
        uint64_t v17 = v12;
        uint64_t v12 = (int)v12;
        if (v17 >> 32 < (int)v12) {
          __break(1u);
        }
        sub_10002B274(v17, v14);
        sub_10050191C(v12, v17 >> 32);
        goto LABEL_8;
      case 2uLL:
        uint64_t v17 = v12;
        uint64_t v18 = *(void *)(v12 + 16);
        uint64_t v19 = *(void *)(v12 + 24);
        sub_100501FD0(v12, v14);
        swift_retain();
        swift_retain();
        sub_10050191C(v18, v19);
        swift_release();
        swift_release();
LABEL_8:
        sub_10006A4EC(v17, v14);
        goto LABEL_11;
      case 3uLL:
        sub_100501FE4(&qword_1006AFD48, (void (*)(uint64_t))&type metadata accessor for Insecure.MD5);
        memset(v34, 0, 14);
        uint64_t v16 = v12;
        goto LABEL_10;
      default:
        v34[0] = v12;
        LOWORD(v34[1]) = v14;
        BYTE2(v34[1]) = BYTE2(v14);
        BYTE3(v34[1]) = BYTE3(v14);
        BYTE4(v34[1]) = BYTE4(v14);
        BYTE5(v34[1]) = BYTE5(v14);
        uint64_t v16 = v12;
        sub_100501FE4(&qword_1006AFD48, (void (*)(uint64_t))&type metadata accessor for Insecure.MD5);
LABEL_10:
        dispatch thunk of HashFunction.update(bufferPointer:)();
        sub_10006A4EC(v16, v14);
LABEL_11:
        Insecure.MD5.finalize()();
        uint64_t v20 = v30;
        uint64_t v35 = v30;
        uint64_t v36 = sub_100501FE4(&qword_1006C16C8, (void (*)(uint64_t))&type metadata accessor for Insecure.MD5Digest);
        uint64_t v21 = sub_100042804(v34);
        uint64_t v22 = v31;
        (*(void (**)(uint64_t *, char *, uint64_t))(v31 + 16))(v21, v3, v20);
        sub_10002CEB8(v34, v35);
        dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
        uint64_t v23 = v32;
        unint64_t v24 = v33;
        sub_10002CEFC((uint64_t)v34);
        v34[0] = (uint64_t)sub_100500734(v23, v24);
        sub_10005D034(&qword_1006AFD50);
        sub_1001481D4();
        uint64_t v15 = BidirectionalCollection<>.joined(separator:)();
        sub_10002B2CC(v23, v24);
        sub_10006A4EC(v28, v14);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v3, v20);
        (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v27);
        break;
    }
  }
  return v15;
}

uint64_t sub_100501FD0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10002B274(a1, a2);
  }
  return a1;
}

uint64_t sub_100501FE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10050202C(unsigned char *__src, unsigned char *a2)
{
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_1005020F0(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  type metadata accessor for __DataStorage();
  swift_allocObject();
  uint64_t result = __DataStorage.init(bytes:length:)();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for Data.RangeReference();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_10050216C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  type metadata accessor for __DataStorage();
  swift_allocObject();
  uint64_t result = __DataStorage.init(bytes:length:)();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

id sub_1005021F0(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_verticalStackView;
  id v4 = objc_allocWithZone((Class)UIStackView);
  char v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  *(void *)&v5[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_conditionSubscription] = 0;
  uint64_t v6 = OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_airplaneModeOnAttention;
  uint64_t v7 = (objc_class *)type metadata accessor for FMExtendedPlatterInfoView();
  id v8 = objc_allocWithZone(v7);
  *(void *)&v5[v6] = sub_10033C758(1, 0);
  uint64_t v9 = OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_bluetoothOffAttention;
  id v10 = objc_allocWithZone(v7);
  *(void *)&v5[v9] = sub_10033C758(1, 0);
  *(void *)&v5[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_spacing] = 0x3810000000000000;
  v5[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_shouldShowAirplaneModeAttention] = 1;
  *(void *)&v5[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_mediator] = a1;
  swift_retain();

  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for FMErrorConditionsAttentionModule();
  id v11 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_100502530();

  swift_release();
  return v11;
}

id sub_10050235C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_conditionSubscription];
  if (!v2) {
    goto LABEL_5;
  }
  uint64_t v3 = *(char **)(*(void *)&v0[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_mediator] + 16);
  id v4 = (uint64_t *)&v3[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
  swift_beginAccess();
  swift_retain();
  char v5 = v3;
  id result = (id)sub_10006782C(v4, v2);
  uint64_t v7 = (uint64_t)result;
  if ((unint64_t)*v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    id result = (id)swift_bridgeObjectRelease();
    if (v8 >= v7) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8 >= (uint64_t)result)
    {
LABEL_4:
      sub_1000675DC(v7, v8);
      swift_endAccess();
      swift_release();

LABEL_5:
      v9.receiver = v1;
      v9.super_class = (Class)type metadata accessor for FMErrorConditionsAttentionModule();
      return [super dealloc];
    }
  }
  __break(1u);
  return result;
}

id sub_100502530()
{
  uint64_t v1 = *(void **)(*(void *)&v0[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_mediator] + 16);
  type metadata accessor for FMConditionSubscription();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber + 8) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v3 = v1;
  id v4 = v0;
  UUID.init()();
  *(void *)(v2 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber + 8) = &off_1006434D0;
  swift_unknownObjectWeakAssign();

  char v5 = &v3[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v5 & 0xFFFFFFFFFFFFFF8)
                                                                              + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();

  *(void *)&v4[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_conditionSubscription] = v2;
  swift_release();
  sub_10050273C();
  uint64_t v6 = *(void *)&v4[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_airplaneModeOnAttention];
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = (void (**)(uint64_t))(v6 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionHandler);
  uint64_t v9 = *(void *)(v6 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionHandler);
  *uint64_t v8 = sub_100503994;
  v8[1] = (void (*)(uint64_t))v7;
  sub_100036B90(v9);
  uint64_t v10 = *(void *)&v4[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_bluetoothOffAttention];
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = (void (**)(uint64_t))(v10 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionHandler);
  uint64_t v13 = *(void *)(v10 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionHandler);
  *uint64_t v12 = sub_1005039C4;
  v12[1] = (void (*)(uint64_t))v11;
  sub_100036B90(v13);
  return sub_100503184();
}

void sub_10050273C()
{
  uint64_t v1 = sub_10005D034((uint64_t *)&unk_1006C0CE0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v77 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v82 = *(id *)&v0[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_verticalStackView];
  [v0 addSubview:];
  id v84 = v0;
  id v4 = *(char **)&v0[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_airplaneModeOnAttention];
  char v5 = self;
  id v6 = [v5 mainBundle];
  v87._countAndFlagsBits = 0xD000000000000018;
  v7._countAndFlagsBits = 0xD000000000000022;
  v87._object = (void *)0x800000010057EF80;
  v7._object = (void *)0x80000001005A08F0;
  unint64_t v83 = (unint64_t)"CLEAR_TAGS_BUTTON";
  v8.value._object = (void *)0x800000010057EF60;
  v8.value._countAndFlagsBits = 0xD000000000000013;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  Swift::String v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v87);

  uint64_t v11 = (Swift::String *)&v4[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_title];
  Swift::String *v11 = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void **)&v4[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_label];
  if (v11->_object)
  {
    swift_bridgeObjectRetain();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v13 = 0;
  }
  [v12 setText:v13];

  uint64_t v85 = 0;
  unint64_t v86 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v14 = [v5 mainBundle];
  v15._countAndFlagsBits = 0xD000000000000030;
  v88._countAndFlagsBits = 0xD000000000000042;
  unint64_t v80 = (unint64_t)"ES_NOT_AVAILABLE";
  v88._object = (void *)0x80000001005851C0;
  unint64_t v79 = (unint64_t)"_SUBTITLE_PEOPLE_GENERIC";
  v15._object = (void *)0x8000000100585180;
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  Swift::String v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v88);

  uint64_t v18 = (Swift::String *)&v4[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle];
  *uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void **)&v4[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitleLabel];
  if (v18->_object)
  {
    swift_bridgeObjectRetain();
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v20 = 0;
  }
  [v19 setText:v20];

  id v21 = [v5 mainBundle];
  v22._countAndFlagsBits = 0xD000000000000028;
  unint64_t v81 = (unint64_t)"Localizable-HAWKEYE";
  v89._object = (void *)0x800000010057EF80;
  v22._object = (void *)0x80000001005A0920;
  uint64_t v23 = (void *)(v83 | 0x8000000000000000);
  v24.value._countAndFlagsBits = 0xD000000000000013;
  v24.value._object = (void *)(v83 | 0x8000000000000000);
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  v89._countAndFlagsBits = 0xD000000000000018;
  Swift::String v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v24, (NSBundle)v21, v25, v89);

  uint64_t v27 = (Swift::String *)&v4[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle];
  *uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void **)&v4[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionLabel];
  if (v27->_object)
  {
    swift_bridgeObjectRetain();
    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v29 = 0;
  }
  [v28 setText:v29];

  uint64_t v30 = type metadata accessor for FMPlatterIcon();
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56);
  uint64_t v77 = v31 + 56;
  id v78 = v32;
  v32(v3, 0, 1, v30);
  sub_10033C22C((uint64_t)v3);
  unint64_t v33 = *(char **)&v84[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_bluetoothOffAttention];
  id v34 = [v5 mainBundle];
  v35._countAndFlagsBits = 0xD00000000000001FLL;
  v90._object = (void *)0x800000010057EF80;
  v35._object = (void *)0x80000001005A0950;
  v36.value._countAndFlagsBits = 0xD000000000000013;
  v36.value._object = v23;
  v37._countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  v90._countAndFlagsBits = 0xD000000000000018;
  Swift::String v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(v35, v36, (NSBundle)v34, v37, v90);

  uint64_t v39 = (Swift::String *)&v33[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_title];
  *uint64_t v39 = v38;
  swift_bridgeObjectRelease();
  uint64_t v40 = *(void **)&v33[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_label];
  if (v39->_object)
  {
    swift_bridgeObjectRetain();
    NSString v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v41 = 0;
  }
  [v40 setText:v41];

  uint64_t v85 = 0;
  unint64_t v86 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v42 = [v5 mainBundle];
  v43._countAndFlagsBits = 0xD000000000000030;
  v91._countAndFlagsBits = 0xD000000000000042;
  v91._object = (void *)(v80 | 0x8000000000000000);
  v43._object = (void *)(v79 | 0x8000000000000000);
  v44._countAndFlagsBits = 0;
  v44._object = (void *)0xE000000000000000;
  Swift::String v45 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, (Swift::String_optional)0, (NSBundle)v42, v44, v91);

  uint64_t v46 = (Swift::String *)&v33[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle];
  *uint64_t v46 = v45;
  swift_bridgeObjectRelease();
  id v47 = *(void **)&v33[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitleLabel];
  if (v46->_object)
  {
    swift_bridgeObjectRetain();
    NSString v48 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v48 = 0;
  }
  [v47 setText:v48];

  id v49 = [v5 mainBundle];
  v92._countAndFlagsBits = 0xD000000000000018;
  v50._countAndFlagsBits = 0xD000000000000022;
  v92._object = (void *)(v81 | 0x8000000000000000);
  v50._object = (void *)0x80000001005A0970;
  v51.value._object = (void *)(v83 | 0x8000000000000000);
  v51.value._countAndFlagsBits = 0xD000000000000013;
  v52._countAndFlagsBits = 0;
  v52._object = (void *)0xE000000000000000;
  Swift::String v53 = NSLocalizedString(_:tableName:bundle:value:comment:)(v50, v51, (NSBundle)v49, v52, v92);

  uint64_t v54 = (Swift::String *)&v33[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle];
  *uint64_t v54 = v53;
  swift_bridgeObjectRelease();
  uint64_t v55 = *(void **)&v33[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionLabel];
  if (v54->_object)
  {
    swift_bridgeObjectRetain();
    NSString v56 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v56 = 0;
  }
  [v55 setText:v56];

  swift_storeEnumTagMultiPayload();
  v78(v3, 0, 1, v30);
  sub_10033C22C((uint64_t)v3);
  id v57 = v82;
  [v82 setAxis:1];
  uint64_t v58 = v84;
  [v57 setSpacing:*(double *)&v84[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_spacing]];
  [v57 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v59 = v4;
  unint64_t v60 = v33;
  [v59 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v57 addArrangedSubview:v59];

  id v61 = v60;
  [v61 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v57 addArrangedSubview:v61];

  id v62 = self;
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v63 = swift_allocObject();
  *(_OWORD *)(v63 + 16) = xmmword_10055B950;
  id v64 = [v57 topAnchor];
  id v65 = [v58 topAnchor];
  id v66 = [v64 constraintEqualToAnchor:v65];

  *(void *)(v63 + 32) = v66;
  id v67 = [v57 bottomAnchor];
  id v68 = [v58 bottomAnchor];
  id v69 = [v67 constraintEqualToAnchor:v68];

  *(void *)(v63 + 40) = v69;
  id v70 = [v57 leadingAnchor];
  id v71 = [v58 leadingAnchor];
  id v72 = [v70 constraintEqualToAnchor:v71];

  *(void *)(v63 + 48) = v72;
  id v73 = [v57 trailingAnchor];
  id v74 = [v58 trailingAnchor];
  id v75 = [v73 constraintEqualToAnchor:v74];

  *(void *)(v63 + 56) = v75;
  uint64_t v85 = v63;
  specialized Array._endMutation()();
  sub_10004FCE4();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v62 activateConstraints:isa];
}

void sub_100503128(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v5 = (void *)Strong;
    a3();
  }
}

id sub_100503184()
{
  id v1 = *(id *)(*(void *)(v0 + OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_mediator) + 16);
  unsigned __int8 v2 = sub_100423024();

  unsigned __int8 v22 = v2;
  if (v2) {
    uint64_t v3 = 6710895;
  }
  else {
    uint64_t v3 = 28271;
  }
  if (v2) {
    unint64_t v4 = 0xE300000000000000;
  }
  else {
    unint64_t v4 = 0xE200000000000000;
  }
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000606BC(v5, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain();
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    Swift::String_optional v8 = (uint8_t *)swift_slowAlloc();
    v23[0] = swift_slowAlloc();
    *(_DWORD *)Swift::String_optional v8 = 136315138;
    swift_bridgeObjectRetain();
    sub_1000606F4(v3, v4, v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMErrorConditionsAttentionModule: BT is %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v9 = swift_bridgeObjectRelease_n();
  }
  __chkstk_darwin(v9);
  id v11 = v10;
  OS_dispatch_queue.sync<A>(execute:)();

  int v12 = LOBYTE(v23[0]);
  if (LOBYTE(v23[0])) {
    unint64_t v13 = 0xE200000000000000;
  }
  else {
    unint64_t v13 = 0xE300000000000000;
  }
  swift_bridgeObjectRetain();
  id v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    if (v12) {
      uint64_t v16 = 28271;
    }
    else {
      uint64_t v16 = 6710895;
    }
    Swift::String v17 = (uint8_t *)swift_slowAlloc();
    v23[0] = swift_slowAlloc();
    *(_DWORD *)Swift::String v17 = 136315138;
    swift_bridgeObjectRetain();
    sub_1000606F4(v16, v13, v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "FMErrorConditionsAttentionModule: Airplane Mode is %s", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unsigned __int8 v18 = v22;
    if (!v12) {
      goto LABEL_20;
    }
LABEL_22:
    unsigned __int8 v19 = v21[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_shouldShowAirplaneModeAttention];
    v18 &= v19 ^ 1;
    goto LABEL_23;
  }

  swift_bridgeObjectRelease_n();
  unsigned __int8 v18 = v22;
  if (v12) {
    goto LABEL_22;
  }
LABEL_20:
  unsigned __int8 v19 = 0;
LABEL_23:
  *(unsigned char *)(*(void *)&v21[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_airplaneModeOnAttention]
           + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed) = v19 ^ 1;
  sub_10033C3EC();
  *(unsigned char *)(*(void *)&v21[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_bluetoothOffAttention]
           + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed) = (v18 & 1) == 0;
  sub_10033C3EC();
  return [v21 setHidden:((v19 | v18) & 1) == 0];
}

uint64_t type metadata accessor for FMErrorConditionsAttentionModule()
{
  return self;
}

id sub_10050360C(uint64_t a1, char a2)
{
  return sub_10050361C(a2);
}

id sub_100503614(uint64_t a1, char a2)
{
  return sub_1005037BC(a2);
}

id sub_10050361C(char a1)
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000606BC(v2, (uint64_t)qword_1006D1E98);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v10 = v6;
    if (a1) {
      uint64_t v7 = 28239;
    }
    else {
      uint64_t v7 = 6710863;
    }
    if (a1) {
      unint64_t v8 = 0xE200000000000000;
    }
    else {
      unint64_t v8 = 0xE300000000000000;
    }
    sub_1000606F4(v7, v8, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMErrorConditionsAttentionModule: Airplane Mode is %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return sub_100503184();
}

id sub_1005037BC(char a1)
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000606BC(v2, (uint64_t)qword_1006D1E98);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v10 = v6;
    if (a1) {
      uint64_t v7 = 6710863;
    }
    else {
      uint64_t v7 = 28239;
    }
    if (a1) {
      unint64_t v8 = 0xE300000000000000;
    }
    else {
      unint64_t v8 = 0xE200000000000000;
    }
    sub_1000606F4(v7, v8, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMErrorConditionsAttentionModule: BT is %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return sub_100503184();
}

uint64_t sub_10050395C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100503994(uint64_t a1)
{
  sub_100503128(a1, v1, sub_100503B04);
}

void sub_1005039C4(uint64_t a1)
{
  sub_100503128(a1, v1, sub_100503C34);
}

void sub_1005039F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_verticalStackView;
  *(void *)&v1[v2] = [objc_allocWithZone((Class)UIStackView) init];
  *(void *)&v1[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_conditionSubscription] = 0;
  uint64_t v3 = OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_airplaneModeOnAttention;
  os_log_type_t v4 = (objc_class *)type metadata accessor for FMExtendedPlatterInfoView();
  id v5 = objc_allocWithZone(v4);
  *(void *)&v1[v3] = sub_10033C758(1, 0);
  uint64_t v6 = OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_bluetoothOffAttention;
  id v7 = objc_allocWithZone(v4);
  *(void *)&v1[v6] = sub_10033C758(1, 0);
  *(void *)&v1[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_spacing] = 0x3810000000000000;
  v1[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_shouldShowAirplaneModeAttention] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100503B04()
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000606BC(v0, (uint64_t)qword_1006D1E98);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "FMErrorConditionsAttentionModule: Airplane Mode On Button Toggled", v3, 2u);
    swift_slowDealloc();
  }

  id v4 = [objc_allocWithZone((Class)RadiosPreferences) init];
  [v4 setAirplaneMode:0];
  [v4 refresh];
}

void sub_100503C34()
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000606BC(v0, (uint64_t)qword_1006D1E98);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "FMErrorConditionsAttentionModule: Bluetooth Off Button Toggled", v3, 2u);
    swift_slowDealloc();
  }

  id v4 = [self sharedInstance];
  if (v4)
  {
    id v5 = v4;
    [v4 setEnabled:1];
  }
}

id sub_100503D74()
{
  switch(v0[OBJC_IVAR____TtC6FindMy15FMPlatterButton_alignment])
  {
    case 1:
      id v1 = [v0 layer];
      [v1 setMaskedCorners:0];
      goto LABEL_7;
    case 2:
      id v1 = [v0 layer];
      [v1 setMaskedCorners:3];
LABEL_7:
      uint64_t v2 = 0;
      goto LABEL_8;
    case 3:
      id v1 = [v0 layer];
      [v1 setMaskedCorners:15];
      goto LABEL_5;
    default:
      id v1 = [v0 layer];
      [v1 setMaskedCorners:12];
LABEL_5:
      uint64_t v2 = 1;
LABEL_8:

      [*(id *)&v0[OBJC_IVAR____TtC6FindMy15FMPlatterButton_bottomSeparator] setHidden:v2];
      uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy15FMPlatterButton_topSeparator];
      return [v3 setHidden:1];
  }
}

void sub_100503FC4(uint64_t a1, uint64_t a2)
{
  sub_100006060(0, (unint64_t *)&qword_1006B0290);
  sub_1000C8370();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for FMPlatterButton();
  [super touchesBegan:a2];

  id v5 = [v2 traitCollection];
  id v6 = [v5 userInterfaceStyle];

  id v7 = self;
  unint64_t v8 = &selRef_systemGray3Color;
  if (v6 != (id)2) {
    unint64_t v8 = &selRef_systemGray5Color;
  }
  id v9 = [v7 *v8];
  [v2 setBackgroundColor:v9];
}

uint64_t sub_100504100(void *a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5)
{
  sub_100006060(0, (unint64_t *)&qword_1006B0290);
  sub_1000C8370();
  static Set._unconditionallyBridgeFromObjectiveC(_:)();
  id v8 = a4;
  id v9 = a1;
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  v12.receiver = v9;
  v12.super_class = (Class)type metadata accessor for FMPlatterButton();
  [super isa:v8];

  [v9 setBackgroundColor:*(void *)&v9[OBJC_IVAR____TtC6FindMy15FMPlatterButton_background]];
  return swift_bridgeObjectRelease();
}

void sub_1005041EC(uint64_t a1, uint64_t a2)
{
  sub_100006060(0, (unint64_t *)&qword_1006B0290);
  sub_1000C8370();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  v18.receiver = v2;
  v18.super_class = (Class)type metadata accessor for FMPlatterButton();
  [super touchesMoved:a2];

  uint64_t v5 = swift_bridgeObjectRetain();
  id v6 = (void *)sub_1000E78B8(v5);
  swift_bridgeObjectRelease();
  if (v6)
  {
    id v7 = [v2 superview];
    [v6 locationInView:v7];
    CGFloat v9 = v8;
    CGFloat v11 = v10;

    [v2 frame];
    v19.x = v9;
    v19.y = v11;
    if (CGRectContainsPoint(v20, v19))
    {
      id v12 = [v2 traitCollection];
      id v13 = [v12 userInterfaceStyle];

      id v14 = self;
      os_log_type_t v15 = &selRef_systemGray3Color;
      if (v13 != (id)2) {
        os_log_type_t v15 = &selRef_systemGray5Color;
      }
      id v16 = [v14 *v15];
    }
    else
    {
      id v16 = *(id *)&v2[OBJC_IVAR____TtC6FindMy15FMPlatterButton_background];
    }
    Swift::String v17 = v16;
    [v2 setBackgroundColor:v16];
  }
}

uint64_t sub_1005043A8(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, void *))
{
  sub_100006060(0, (unint64_t *)&qword_1006B0290);
  sub_1000C8370();
  uint64_t v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = a4;
  id v10 = a1;
  a5(v8, a4);

  return swift_bridgeObjectRelease();
}

id sub_100504488()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPlatterButton();
  return [super dealloc];
}

unsigned char *storeEnumTagSinglePayload for FMPlatterButtonAlignment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *id result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100504588);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMPlatterButtonAlignment()
{
  return &type metadata for FMPlatterButtonAlignment;
}

unint64_t sub_1005045C4()
{
  unint64_t result = qword_1006C1778;
  if (!qword_1006C1778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C1778);
  }
  return result;
}

void *sub_100504618(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *a2;
    *a1 = *a2;
    a1 = (void *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    id v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    id v14 = (void *)((char *)a1 + v12);
    os_log_type_t v15 = (void *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    void *v14 = *v15;
    v14[1] = v16;
    Swift::String v17 = (void *)((char *)a1 + v13);
    objc_super v18 = (void *)((char *)a2 + v13);
    uint64_t v19 = v18[1];
    *Swift::String v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = a3[8];
    uint64_t v21 = a3[9];
    unsigned __int8 v22 = (void *)((char *)a1 + v20);
    uint64_t v23 = (void *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    void *v22 = *v23;
    v22[1] = v24;
    Swift::String v25 = (void *)((char *)a1 + v21);
    Swift::String v26 = (void *)((char *)a2 + v21);
    uint64_t v27 = v26[1];
    *Swift::String v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = a3[11];
    *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    *(void *)((char *)a1 + v28) = *(void *)((char *)a2 + v28);
    uint64_t v29 = a3[13];
    *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
    *(void *)((char *)a1 + v29) = *(void *)((char *)a2 + v29);
    *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1005047D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005048E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v11);
  id v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  void *v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = (void *)(a1 + v12);
  Swift::String v17 = (void *)(a2 + v12);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)(a1 + v19);
  unsigned __int8 v22 = (void *)(a2 + v19);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = (void *)(a1 + v20);
  Swift::String v25 = (void *)(a2 + v20);
  uint64_t v26 = v25[1];
  void *v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + v27) = *(void *)(a2 + v27);
  uint64_t v28 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(void *)(a1 + v28) = *(void *)(a2 + v28);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100504A50(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)(a1 + v20);
  unsigned __int8 v22 = (void *)(a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100504C1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  uint64_t v13 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_100504D38(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  unsigned __int8 v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  void *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[9];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + v31) = *(void *)(a2 + v31);
  uint64_t v32 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(void *)(a1 + v32) = *(void *)(a2 + v32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100504EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100504EC0);
}

uint64_t sub_100504EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_100504FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100504FEC);
}

uint64_t sub_100504FEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for Date();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for FMUTDetailViewModel()
{
  uint64_t result = qword_1006C17E0;
  if (!qword_1006C17E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10050514C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10050524C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  LODWORD(v163) = a3;
  uint64_t v184 = a1;
  uint64_t v164 = a4;
  uint64_t v185 = type metadata accessor for FMIPUnknownItem();
  uint64_t v181 = *(void *)(v185 - 8);
  uint64_t v5 = __chkstk_darwin(v185);
  uint64_t v174 = (char *)&v155 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v165 = (char *)&v155 - v7;
  id v176 = (void (*)(char *, uint64_t))type metadata accessor for FMIPProductType();
  uint64_t v182 = *((void *)v176 - 1);
  __chkstk_darwin(v176);
  id v175 = (char *)&v155 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  id v158 = (char *)&v155 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  id v166 = (char *)&v155 - v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v155 - v14;
  uint64_t v16 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  v167 = (char *)&v155 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v155 - v19;
  uint64_t v178 = type metadata accessor for Date();
  uint64_t v183 = *(void *)(v178 - 8);
  uint64_t v21 = __chkstk_darwin(v178);
  v177 = (char *)&v155 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v169 = (char *)&v155 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v168 = (char *)&v155 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  id v179 = (char *)&v155 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  v180 = (char *)&v155 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  unint64_t v33 = (char *)&v155 - v32;
  __chkstk_darwin(v31);
  v186 = (unsigned int (*)(char *, uint64_t, uint64_t))((char *)&v155 - v34);
  uint64_t v35 = a2;
  uint64_t v36 = FMIPUnknownItem.locations.getter();
  uint64_t v37 = *(void *)(v36 + 16);
  uint64_t v38 = type metadata accessor for FMIPLocation();
  uint64_t v39 = *(void *)(v38 - 8);
  if (v37)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v39 + 16))(v15, v36 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80)), v38);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v15, 0, 1, v38);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v15, 1, 1, v38);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for FMIPLocation();
  uint64_t v40 = v39;
  NSString v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
  uint64_t v172 = v39 + 48;
  v173 = v41;
  unsigned int v42 = v41((uint64_t)v15, 1, v38);
  uint64_t v43 = v35;
  uint64_t v44 = v178;
  uint64_t v170 = v39;
  uint64_t v171 = v38;
  if (v42 == 1)
  {
    sub_100003F10((uint64_t)v15, (uint64_t *)&unk_1006B2AE0);
    uint64_t v45 = v183;
    uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v183 + 56);
    v46(v20, 1, 1, v44);
    id v47 = v186;
LABEL_7:
    Date.init()();
    sub_100003F10((uint64_t)v20, (uint64_t *)&unk_1006AF6E0);
    goto LABEL_9;
  }
  NSString v48 = (void *)FMIPLocation.location.getter();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v38);
  id v49 = [v48 timestamp];

  static Date._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v45 = v183;
  Swift::String v50 = *(void (**)(char *, char *, uint64_t))(v183 + 32);
  v50(v20, v33, v44);
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56);
  v46(v20, 0, 1, v44);
  int v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48))(v20, 1, v44);
  id v47 = v186;
  if (v51 == 1) {
    goto LABEL_7;
  }
  v50((char *)v186, v20, v44);
LABEL_9:
  uint64_t v52 = FMIPUnknownItem.locations.getter();
  uint64_t v53 = *(void *)(v52 + 16);
  uint64_t v55 = v170;
  uint64_t v54 = v171;
  if (v53)
  {
    uint64_t v56 = (uint64_t)v166;
    (*(void (**)(char *, unint64_t, uint64_t))(v170 + 16))(v166, v52+ ((*(unsigned __int8 *)(v170 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v170 + 80))+ *(void *)(v170 + 72) * (v53 - 1), v171);
    uint64_t v57 = 0;
  }
  else
  {
    uint64_t v57 = 1;
    uint64_t v56 = (uint64_t)v166;
  }
  uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56);
  uint64_t v157 = v55 + 56;
  id v156 = v58;
  v58(v56, v57, 1, v54);
  swift_bridgeObjectRelease();
  if (v173(v56, 1, v54) == 1)
  {
    sub_100003F10(v56, (uint64_t *)&unk_1006B2AE0);
    uint64_t v59 = (uint64_t)v167;
    v46(v167, 1, 1, v44);
LABEL_15:
    uint64_t v63 = v180;
    Date.init()();
    sub_100003F10(v59, (uint64_t *)&unk_1006AF6E0);
    goto LABEL_17;
  }
  unint64_t v60 = (void *)FMIPLocation.location.getter();
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v56, v54);
  id v61 = [v60 timestamp];

  static Date._unconditionallyBridgeFromObjectiveC(_:)();
  id v62 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
  uint64_t v59 = (uint64_t)v167;
  v62(v167, v33, v44);
  v46((char *)v59, 0, 1, v44);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v59, 1, v44) == 1) {
    goto LABEL_15;
  }
  uint64_t v63 = v180;
  v62(v180, (char *)v59, v44);
LABEL_17:
  char My = FMIPUnknownItem.isFindMyNetwork.getter();
  sub_100506E1C(v47, My & 1, (uint64_t)v179);
  id v65 = v175;
  FMIPUnknownItem.productType.getter();
  int v159 = FMIPProductType.isAccessory.getter();
  id v66 = *(void (**)(char *, void *))(v182 + 8);
  v182 += 8;
  CGRect v162 = v66;
  v66(v65, v176);
  Date.init()();
  char v67 = static Date.< infix(_:_:)();
  id v68 = *(char **)(v45 + 8);
  v167 = (char *)(v45 + 8);
  id v166 = v68;
  ((void (*)(char *, uint64_t))v68)(v33, v44);
  if (v67)
  {
    uint64_t v69 = v184;
    id v70 = *(id *)(v184 + 16);
    char v71 = sub_100423024();

    char v72 = v71 ^ 1;
  }
  else
  {
    char v72 = 0;
    uint64_t v69 = v184;
  }
  uint64_t v73 = *(void *)(*(void *)(v69 + 24) + 64);
  swift_bridgeObjectRetain();
  uint64_t v160 = sub_1005087A4(v43, v72 & 1, v73, v163 & 1, v69);
  uint64_t v161 = v74;
  swift_bridgeObjectRelease();
  id v75 = (int *)type metadata accessor for FMUTDetailViewModel();
  uint64_t v76 = v164;
  uint64_t v77 = (char *)(v164 + v75[5]);
  id v78 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  uint64_t v183 = v45 + 16;
  uint64_t v163 = v78;
  v78(v77, v63, v44);
  FMIPUnknownItem.identifier.getter();
  unint64_t v79 = self;
  id v80 = [v79 mainBundle];
  v81.value._countAndFlagsBits = 0xD000000000000010;
  v82._countAndFlagsBits = 0xD00000000000001FLL;
  v189._object = (void *)0x80000001005875D0;
  v82._object = (void *)0x80000001005A0A90;
  v81.value._object = (void *)0x80000001005875B0;
  v83._countAndFlagsBits = 0;
  v83._object = (void *)0xE000000000000000;
  v189._countAndFlagsBits = 0xD000000000000015;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v82, v81, (NSBundle)v80, v83, v189);

  sub_10005D034((uint64_t *)&unk_1006AF790);
  uint64_t v84 = swift_allocObject();
  *(_OWORD *)(v84 + 16) = xmmword_10055B970;
  uint64_t v85 = FMIPUnknownItem.name.getter();
  uint64_t v87 = v86;
  *(void *)(v84 + 56) = &type metadata for String;
  *(void *)(v84 + 64) = sub_10007F2C8();
  *(void *)(v84 + 32) = v85;
  *(void *)(v84 + 40) = v87;
  uint64_t v88 = String.init(format:_:)();
  uint64_t v90 = v89;
  swift_bridgeObjectRelease();
  Swift::String v91 = (uint64_t *)(v76 + v75[6]);
  *Swift::String v91 = v88;
  v91[1] = v90;
  uint64_t v92 = sub_10050A000();
  uint64_t v93 = (uint64_t *)(v76 + v75[7]);
  *uint64_t v93 = v92;
  v93[1] = v94;
  id v95 = (void *)(v76 + v75[8]);
  *id v95 = v96;
  v95[1] = v97;
  if (v159) {
    uint64_t v98 = 0xD00000000000001ALL;
  }
  else {
    uint64_t v98 = 0xD000000000000015;
  }
  if (v159) {
    Class v99 = (void *)0x80000001005A0AD0;
  }
  else {
    Class v99 = (void *)0x80000001005A0AB0;
  }
  v100.super.Class isa = (Class)[v79 mainBundle];
  v101.value._countAndFlagsBits = 0xD000000000000013;
  v190._countAndFlagsBits = 0xD000000000000018;
  v190._object = (void *)0x800000010057EF80;
  v101.value._object = (void *)0x800000010057EF60;
  v102._countAndFlagsBits = v98;
  v102._object = v99;
  v103._countAndFlagsBits = 0;
  v103._object = (void *)0xE000000000000000;
  Swift::String v104 = NSLocalizedString(_:tableName:bundle:value:comment:)(v102, v101, v100, v103, v190);
  swift_bridgeObjectRelease();

  *(Swift::String *)(v76 + v75[9]) = v104;
  *(void *)(v76 + v75[11]) = sub_10050A5F4();
  *(unsigned char *)(v76 + v75[12]) = sub_100507E30(v43, v184);
  id v105 = v175;
  FMIPUnknownItem.productType.getter();
  LOBYTE(v100.super.isa) = FMIPProductType.isAccessory.getter();
  v162(v105, v176);
  *(unsigned char *)(v76 + v75[10]) = (uint64_t)v100.super.isa & 1;
  *(void *)(v76 + v75[13]) = v160;
  *(void *)(v76 + v75[14]) = v161;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v106 = type metadata accessor for Logger();
  uint64_t v107 = sub_1000606BC(v106, (uint64_t)qword_1006D1E98);
  uint64_t v108 = v181;
  id v109 = *(void (**)(char *, uint64_t, uint64_t))(v181 + 16);
  id v110 = v165;
  uint64_t v182 = v43;
  uint64_t v111 = v185;
  v109(v165, v43, v185);
  id v175 = (char *)v107;
  id v112 = Logger.logObject.getter();
  os_log_type_t v113 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v112, v113))
  {
    uint64_t v114 = v110;
    uint64_t v115 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v115 = 134217984;
    uint64_t v116 = *(void *)(FMIPUnknownItem.locations.getter() + 16);
    swift_bridgeObjectRelease();
    id v176 = *(void (**)(char *, uint64_t))(v108 + 8);
    v176(v114, v185);
    v187[0] = v116;
    uint64_t v111 = v185;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v112, v113, "FMUTDetailViewModel: locations: (%ld", v115, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    id v176 = *(void (**)(char *, uint64_t))(v108 + 8);
    v176(v110, v111);
  }
  uint64_t v117 = v177;

  uint64_t v118 = v174;
  v109(v174, v182, v111);
  uint64_t v119 = Logger.logObject.getter();
  os_log_type_t v120 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v119, v120))
  {
    id v121 = (uint8_t *)swift_slowAlloc();
    uint64_t v188 = swift_slowAlloc();
    *(_DWORD *)id v121 = 136315138;
    uint64_t v122 = FMIPUnknownItem.locations.getter();
    uint64_t v123 = *(void *)(v122 + 16);
    unint64_t v124 = v180;
    if (v123)
    {
      uint64_t v126 = v170;
      uint64_t v125 = v171;
      uint64_t v127 = (uint64_t)v158;
      (*(void (**)(char *, unint64_t, uint64_t))(v170 + 16))(v158, v122+ ((*(unsigned __int8 *)(v170 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v170 + 80))+ *(void *)(v170 + 72) * (v123 - 1), v171);
      uint64_t v128 = 0;
    }
    else
    {
      uint64_t v128 = 1;
      uint64_t v127 = (uint64_t)v158;
      uint64_t v126 = v170;
      uint64_t v125 = v171;
    }
    v156(v127, v128, 1, v125);
    swift_bridgeObjectRelease();
    if (v173(v127, 1, v125) == 1)
    {
      sub_100003F10(v127, (uint64_t *)&unk_1006B2AE0);
      uint64_t v129 = 0;
      uint64_t v130 = 0;
    }
    else
    {
      uint64_t v131 = (void *)FMIPLocation.location.getter();
      (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v127, v125);
      id v132 = [v131 debugDescription];

      uint64_t v129 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v130 = v133;
    }
    v187[0] = v129;
    v187[1] = v130;
    sub_10005D034(&qword_1006AEFF0);
    uint64_t v134 = String.init<A>(describing:)();
    v187[0] = sub_1000606F4(v134, v135, &v188);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v111 = v185;
    v176(v174, v185);
    _os_log_impl((void *)&_mh_execute_header, v119, v120, "FMUTDetailViewModel: most recent location %s", v121, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v117 = v177;
  }
  else
  {
    v176(v118, v111);

    unint64_t v124 = v180;
  }
  Swift::Int v136 = v168;
  uint64_t v137 = v178;
  uint64_t v138 = v163;
  v163(v168, (char *)v186, v178);
  uint64_t v139 = v169;
  v138(v169, v124, v137);
  uint64_t v140 = (uint64_t)v179;
  v138(v117, v179, v137);
  uint64_t v141 = Logger.logObject.getter();
  os_log_type_t v142 = static os_log_type_t.default.getter();
  int v143 = v142;
  if (os_log_type_enabled(v141, v142))
  {
    uint64_t v144 = swift_slowAlloc();
    uint64_t v183 = swift_slowAlloc();
    v187[0] = v183;
    *(_DWORD *)uint64_t v144 = 136315650;
    sub_10050A834(&qword_1006BC0F8, (void (*)(uint64_t))&type metadata accessor for Date);
    LODWORD(v175) = v143;
    uint64_t v145 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v188 = sub_1000606F4(v145, v146, v187);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v147 = v166;
    ((void (*)(char *, uint64_t))v166)(v136, v137);
    *(_WORD *)(v144 + 12) = 2080;
    uint64_t v148 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v188 = sub_1000606F4(v148, v149, v187);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v147)(v139, v137);
    *(_WORD *)(v144 + 22) = 2080;
    id v150 = v177;
    uint64_t v151 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v188 = sub_1000606F4(v151, v152, v187);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v147)(v150, v137);
    _os_log_impl((void *)&_mh_execute_header, v141, (os_log_type_t)v175, "FMUTDetailViewModel: firstDetectedDate: %s lastDetectionDate: %s rollDate: %s", (uint8_t *)v144, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    v176((char *)v182, v185);
    ((void (*)(char *, uint64_t))v147)(v179, v137);
    ((void (*)(char *, uint64_t))v147)(v180, v137);
    return ((uint64_t (*)(unsigned int (*)(char *, uint64_t, uint64_t), uint64_t))v147)(v186, v137);
  }
  else
  {

    swift_release();
    double v154 = v166;
    ((void (*)(char *, uint64_t))v166)(v117, v137);
    ((void (*)(char *, uint64_t))v154)(v139, v137);
    ((void (*)(char *, uint64_t))v154)(v136, v137);
    v176((char *)v182, v111);
    ((void (*)(uint64_t, uint64_t))v154)(v140, v137);
    ((void (*)(char *, uint64_t))v154)(v124, v137);
    return ((uint64_t (*)(unsigned int (*)(char *, uint64_t, uint64_t), uint64_t))v154)(v186, v137);
  }
}

uint64_t sub_100506650@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v47 = a1;
  uint64_t v49 = a3;
  uint64_t v4 = type metadata accessor for FMItemCapabilities();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v45 = v4;
  uint64_t v46 = v5;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v43 - v9;
  uint64_t v11 = type metadata accessor for FMIPUnknownItem();
  uint64_t v51 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v43 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v43 - v18;
  type metadata accessor for FMConnectionManager();
  char v20 = static FMConnectionManager.hostSupportsRanging.getter();
  uint64_t v50 = a2;
  if (v20)
  {
    id v21 = [self currentDevice];
    id v22 = [v21 userInterfaceIdiom];

    BOOL v23 = v22 == (id)1;
    a2 = v50;
    int v24 = v23;
  }
  else
  {
    int v24 = 1;
  }
  int v48 = v24;
  uint64_t v25 = (void *)FMIPUnknownItem.unknownBeacon.getter();
  if (v25)
  {
    uint64_t v27 = v25;
    unsigned int v26 = [v25 capabilities];

    LODWORD(v27) = (v26 >> 8) & 1;
    a2 = v50;
  }
  else
  {
    LODWORD(v27) = 2;
  }
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 16);
  v28(v19, a2, v11);
  if (v27 == 2)
  {
    uint64_t v29 = (void *)FMIPUnknownItem.unknownBeacon.getter();
    if (v29
      && (uint64_t v30 = v29, v31 = [v29 metadata], v30, v31))
    {
      unint64_t v32 = (unint64_t)[v31 capabilities];

      v28(v17, (uint64_t)v19, v11);
      unint64_t v33 = *(void (**)(char *, uint64_t))(v51 + 8);
      v33(v17, v11);
      v33(v19, v11);
      uint64_t v27 = (void *)((v32 >> 8) & 1);
    }
    else
    {
      uint64_t v43 = v17;
      v28(v17, (uint64_t)v19, v11);
      FMIPUnknownItem.capabilities.getter();
      uint64_t v34 = v8;
      static FMItemCapabilities.canR1.getter();
      sub_10050A834((unint64_t *)&qword_1006B1128, (void (*)(uint64_t))&type metadata accessor for FMItemCapabilities);
      uint64_t v35 = v45;
      LOBYTE(v27) = dispatch thunk of SetAlgebra.isSuperset(of:)();
      uint64_t v44 = v14;
      uint64_t v36 = *(void (**)(char *, uint64_t))(v46 + 8);
      v36(v34, v35);
      v36(v10, v35);
      unint64_t v33 = *(void (**)(char *, uint64_t))(v51 + 8);
      uint64_t v14 = v44;
      v33(v43, v11);
      v33(v19, v11);
    }
    a2 = v50;
  }
  else
  {
    unint64_t v33 = *(void (**)(char *, uint64_t))(v51 + 8);
    v33(v19, v11);
    LOBYTE(v27) = v27 != 0;
  }
  char v37 = v48 | ~(_BYTE)v27;
  v28(v14, a2, v11);
  if ((v37 & 1) != 0 || (v47 & 1) == 0)
  {
    v33(v14, v11);
    goto LABEL_21;
  }
  char v38 = FMIPUnknownItem.isAppleAudioAccessory.getter();
  v33(v14, v11);
  if (v38)
  {
LABEL_21:
    uint64_t v39 = (unsigned int *)&enum case for FMExperienceType.bt(_:);
    goto LABEL_22;
  }
  uint64_t v39 = (unsigned int *)&enum case for FMExperienceType.r1(_:);
LABEL_22:
  uint64_t v40 = *v39;
  uint64_t v41 = type metadata accessor for FMExperienceType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 104))(v49, v40, v41);
}

void sub_100506B30(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 2:
      Swift::UInt v2 = 0;
      goto LABEL_9;
    case 3:
      Swift::UInt v2 = 1;
      goto LABEL_9;
    case 4:
      Swift::UInt v2 = 2;
      goto LABEL_9;
    case 5:
      Swift::UInt v2 = 4;
      goto LABEL_9;
    case 6:
      Swift::UInt v2 = 5;
      goto LABEL_9;
    case 7:
      Swift::UInt v2 = 6;
LABEL_9:
      Hasher._combine(_:)(v2);
      break;
    default:
      Swift::UInt8 v3 = a2 & 1;
      Hasher._combine(_:)(3uLL);
      Hasher._combine(_:)(v3);
      break;
  }
}

Swift::Int sub_100506BE0(char a1)
{
  Hasher.init(_seed:)();
  switch(a1)
  {
    case 2:
      Swift::UInt v2 = 0;
      goto LABEL_9;
    case 3:
      Swift::UInt v2 = 1;
      goto LABEL_9;
    case 4:
      Swift::UInt v2 = 2;
      goto LABEL_9;
    case 5:
      Swift::UInt v2 = 4;
      goto LABEL_9;
    case 6:
      Swift::UInt v2 = 5;
      goto LABEL_9;
    case 7:
      Swift::UInt v2 = 6;
LABEL_9:
      Hasher._combine(_:)(v2);
      break;
    default:
      Hasher._combine(_:)(3uLL);
      Hasher._combine(_:)(a1 & 1);
      break;
  }
  return Hasher._finalize()();
}

Swift::Int sub_100506CCC()
{
  return sub_100506BE0(*v0);
}

void sub_100506CD4(uint64_t a1)
{
  sub_100506B30(a1, *v1);
}

Swift::Int sub_100506CDC()
{
  int v1 = *v0;
  Hasher.init(_seed:)();
  switch(v1)
  {
    case 2:
      Swift::UInt v2 = 0;
      goto LABEL_9;
    case 3:
      Swift::UInt v2 = 1;
      goto LABEL_9;
    case 4:
      Swift::UInt v2 = 2;
      goto LABEL_9;
    case 5:
      Swift::UInt v2 = 4;
      goto LABEL_9;
    case 6:
      Swift::UInt v2 = 5;
      goto LABEL_9;
    case 7:
      Swift::UInt v2 = 6;
LABEL_9:
      Hasher._combine(_:)(v2);
      break;
    default:
      Hasher._combine(_:)(3uLL);
      Hasher._combine(_:)(v1 & 1);
      break;
  }
  return Hasher._finalize()();
}

uint64_t sub_100506DC0(char *a1, unsigned __int8 *a2)
{
  return sub_100507D6C(*a1, *a2);
}

id sub_100506DCC()
{
  id v0 = [objc_allocWithZone((Class)NSDateFormatter) init];
  id result = [v0 setTimeStyle:1];
  qword_1006C1780 = (uint64_t)v0;
  return result;
}

uint64_t sub_100506E1C@<X0>(unsigned int (*a1)(char *, uint64_t, uint64_t)@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  os_log_type_t v113 = a1;
  uint64_t v121 = a3;
  uint64_t v4 = sub_10005D034(&qword_1006AF6D8);
  __chkstk_darwin(v4 - 8);
  uint64_t v118 = (char *)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10005D034(&qword_1006AF7B0);
  __chkstk_darwin(v6 - 8);
  unint64_t v124 = (char *)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DateComponents();
  uint64_t v119 = *(void *)(v8 - 8);
  uint64_t v120 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  id v110 = (char *)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v111 = (char *)&v104 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v106 = (char *)&v104 - v14;
  __chkstk_darwin(v13);
  uint64_t v107 = (char *)&v104 - v15;
  uint64_t v16 = type metadata accessor for Calendar.Component();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v104 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  id v109 = (char *)&v104 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v104 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  id v105 = (char *)&v104 - v27;
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v104 - v28;
  uint64_t v30 = type metadata accessor for Date();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v108 = (char *)&v104 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v123 = (char *)&v104 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  Swift::String v104 = (char *)&v104 - v37;
  __chkstk_darwin(v36);
  uint64_t v122 = (char *)&v104 - v38;
  uint64_t v125 = type metadata accessor for Calendar();
  uint64_t v117 = *(void *)(v125 - 8);
  uint64_t v39 = __chkstk_darwin(v125);
  uint64_t v40 = __chkstk_darwin(v39);
  uint64_t v115 = (char *)&v104 - v41;
  __chkstk_darwin(v40);
  uint64_t v44 = (void (**)(unint64_t, uint64_t, uint64_t))(v17 + 104);
  uint64_t v114 = v17;
  uint64_t v45 = (void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v126 = v31;
  uint64_t v46 = (unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  uint64_t v116 = v31 + 48;
  uint64_t v112 = v30;
  if (a2)
  {
    int v47 = (char *)&v104 - v43;
    static Calendar.current.getter();
    uint64_t v48 = enum case for Calendar.Component.day(_:);
    uint64_t v49 = *v44;
    (*v44)((unint64_t)v19, enum case for Calendar.Component.day(_:), v16);
    uint64_t v123 = v47;
    Calendar.date(byAdding:value:to:wrappingComponents:)();
    (*v45)(v19, v16);
    os_log_type_t v113 = *v46;
    if (v113(v29, 1, v30) == 1)
    {
      Date.init()();
      sub_100003F10((uint64_t)v29, (uint64_t *)&unk_1006AF6E0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v126 + 32))(v122, v29, v30);
    }
    uint64_t v53 = v107;
    sub_10005D034(&qword_1006AF768);
    uint64_t v54 = *(void *)(v114 + 72);
    unint64_t v55 = (*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
    uint64_t v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = xmmword_10055BD40;
    unint64_t v57 = v56 + v55;
    v49(v57, enum case for Calendar.Component.year(_:), v16);
    v49(v57 + v54, enum case for Calendar.Component.month(_:), v16);
    v49(v57 + 2 * v54, v48, v16);
    sub_100171120(v56);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    Calendar.dateComponents(_:from:)();
    swift_bridgeObjectRelease();
    uint64_t v58 = v117;
    uint64_t v59 = v53;
    uint64_t v60 = v125;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v117 + 56))(v124, 1, 1, v125);
    uint64_t v61 = type metadata accessor for TimeZone();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v118, 1, 1, v61);
    uint64_t v114 = DateComponents.year.getter();
    DateComponents.month.getter();
    DateComponents.day.getter();
    id v62 = v106;
    DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
    uint64_t v63 = v115;
    static Calendar.current.getter();
    uint64_t v64 = (uint64_t)v105;
    Calendar.date(from:)();
    id v65 = *(void (**)(char *, uint64_t))(v58 + 8);
    v65(v63, v60);
    uint64_t v66 = v112;
    if (v113((char *)v64, 1, v112) == 1)
    {
      char v67 = v104;
      Date.init()();
      uint64_t v68 = v120;
      uint64_t v69 = *(void (**)(char *, uint64_t))(v119 + 8);
      v69(v62, v120);
      v69(v59, v68);
      uint64_t v70 = v126;
      (*(void (**)(char *, uint64_t))(v126 + 8))(v122, v66);
      v65(v123, v125);
      sub_100003F10(v64, (uint64_t *)&unk_1006AF6E0);
      char v71 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 32);
    }
    else
    {
      uint64_t v93 = v120;
      uint64_t v94 = *(void (**)(char *, uint64_t))(v119 + 8);
      v94(v62, v120);
      v94(v59, v93);
      uint64_t v95 = v126;
      (*(void (**)(char *, uint64_t))(v126 + 8))(v122, v66);
      v65(v123, v125);
      char v71 = *(void (**)(char *, uint64_t, uint64_t))(v95 + 32);
      char v67 = v104;
      v71(v104, v64, v66);
    }
    uint64_t v96 = v121;
    uint64_t v97 = v67;
    uint64_t v98 = v66;
  }
  else
  {
    uint64_t v50 = v42;
    static Calendar.current.getter();
    uint64_t v51 = enum case for Calendar.Component.day(_:);
    uint64_t v52 = *v44;
    (*v44)((unint64_t)v19, enum case for Calendar.Component.day(_:), v16);
    uint64_t v122 = v50;
    Calendar.date(byAdding:value:to:wrappingComponents:)();
    (*v45)(v19, v16);
    os_log_type_t v113 = *v46;
    if (v113(v25, 1, v30) == 1)
    {
      Date.init()();
      sub_100003F10((uint64_t)v25, (uint64_t *)&unk_1006AF6E0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v126 + 32))(v123, v25, v30);
    }
    sub_10005D034(&qword_1006AF768);
    uint64_t v72 = *(void *)(v114 + 72);
    unint64_t v73 = (*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
    uint64_t v74 = swift_allocObject();
    *(_OWORD *)(v74 + 16) = xmmword_10056ADC0;
    unint64_t v75 = v74 + v73;
    v52(v75, enum case for Calendar.Component.year(_:), v16);
    v52(v75 + v72, enum case for Calendar.Component.month(_:), v16);
    v52(v75 + 2 * v72, v51, v16);
    v52(v75 + 3 * v72, enum case for Calendar.Component.hour(_:), v16);
    v52(v75 + 4 * v72, enum case for Calendar.Component.minute(_:), v16);
    sub_100171120(v74);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v76 = v111;
    Calendar.dateComponents(_:from:)();
    swift_bridgeObjectRelease();
    uint64_t v77 = v117;
    uint64_t v78 = v125;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v117 + 56))(v124, 1, 1, v125);
    uint64_t v79 = type metadata accessor for TimeZone();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v118, 1, 1, v79);
    uint64_t v114 = DateComponents.year.getter();
    LODWORD(v107) = v80 & 1;
    uint64_t v106 = (char *)DateComponents.month.getter();
    LODWORD(v105) = v81 & 1;
    DateComponents.day.getter();
    DateComponents.hour.getter();
    DateComponents.minute.getter();
    uint64_t v82 = v78;
    Swift::String v83 = v110;
    DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
    uint64_t v84 = v115;
    static Calendar.current.getter();
    uint64_t v85 = (uint64_t)v109;
    Calendar.date(from:)();
    uint64_t v86 = *(void (**)(char *, uint64_t))(v77 + 8);
    v86(v84, v82);
    uint64_t v87 = v112;
    if (v113((char *)v85, 1, v112) == 1)
    {
      uint64_t v88 = v108;
      Date.init()();
      uint64_t v89 = *(void (**)(char *, uint64_t))(v119 + 8);
      uint64_t v90 = v83;
      uint64_t v91 = v120;
      v89(v90, v120);
      v89(v76, v91);
      uint64_t v92 = v126;
      (*(void (**)(char *, uint64_t))(v126 + 8))(v123, v87);
      v86(v122, v82);
      sub_100003F10(v85, (uint64_t *)&unk_1006AF6E0);
      char v71 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 32);
    }
    else
    {
      Class v99 = *(void (**)(char *, uint64_t))(v119 + 8);
      NSBundle v100 = v83;
      uint64_t v101 = v120;
      v99(v100, v120);
      v99(v76, v101);
      uint64_t v102 = v126;
      (*(void (**)(char *, uint64_t))(v126 + 8))(v123, v87);
      v86(v122, v82);
      char v71 = *(void (**)(char *, uint64_t, uint64_t))(v102 + 32);
      uint64_t v88 = v108;
      v71(v108, v85, v87);
    }
    uint64_t v96 = v121;
    uint64_t v97 = v88;
    uint64_t v98 = v87;
  }
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v71)(v96, v97, v98);
}

uint64_t sub_100507C38()
{
  uint64_t v0 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)v10 - v5;
  FMIPBeaconShare.beaconIdentifier.getter();
  FMIPUnknownItem.identifier.getter();
  char v7 = static UUID.== infix(_:_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  return v7 & 1;
}

uint64_t sub_100507D6C(char a1, unsigned __int8 a2)
{
  switch(a1)
  {
    case 2:
      if (a2 != 2) {
        goto LABEL_15;
      }
      goto LABEL_13;
    case 3:
      if (a2 != 3) {
        goto LABEL_15;
      }
      goto LABEL_13;
    case 4:
      if (a2 != 4) {
        goto LABEL_15;
      }
      goto LABEL_13;
    case 5:
      if (a2 != 5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    case 6:
      if (a2 != 6) {
        goto LABEL_15;
      }
      goto LABEL_13;
    case 7:
      if (a2 != 7) {
        goto LABEL_15;
      }
LABEL_13:
      uint64_t result = 1;
      break;
    default:
      if (a2 - 2 >= 6) {
        uint64_t result = (((a1 & 1) == 0) ^ a2) & 1;
      }
      else {
LABEL_15:
      }
        uint64_t result = 0;
      break;
  }
  return result;
}

BOOL sub_100507E30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10005D034((uint64_t *)&unk_1006C0B20);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMIPRangingParameters();
  uint64_t v36 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMIPLocation();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v35 - v17;
  uint64_t v19 = FMIPUnknownItem.locations.getter();
  uint64_t v20 = *(void *)(v19 + 16);
  if (v20)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v18, v19+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * (v20 - 1), v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v18, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  sub_10050A7CC((uint64_t)v18, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v16, 1, v9) == 1)
  {
    sub_100003F10((uint64_t)v18, (uint64_t *)&unk_1006B2AE0);
    BOOL v21 = 0;
    uint64_t v18 = v16;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v16, v9);
    uint64_t v22 = *(void **)(*(void *)(a2 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
    if (v22)
    {
      id v23 = v22;
      FMIPManager.rangingParameters.getter();
      uint64_t v24 = v36;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v5, 1, v6) == 1)
      {
        FMIPRangingParameters.init()();
        sub_100003F10((uint64_t)v5, (uint64_t *)&unk_1006C0B20);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v8, v5, v6);
      }
      FMIPRangingParameters.inBTRangeDistanceInMeters.getter();
      double v26 = v25;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
      uint64_t v27 = (void *)FMIPLocation.location.getter();
      [v27 distanceFromLocation:v23];
      double v29 = v28;
      [v27 horizontalAccuracy];
      double v31 = v30;
      [v23 horizontalAccuracy];
      double v33 = v32;

      BOOL v21 = v29 / sqrt(v26 * v26 + v31 * v31 + v33 * v33) < 1.5;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      BOOL v21 = 0;
    }
  }
  sub_100003F10((uint64_t)v18, (uint64_t *)&unk_1006B2AE0);
  return v21;
}

uint64_t sub_1005082A0(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FMIPUnknownItem();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t My = type metadata accessor for Feature.FindMy();
  v16[3] = My;
  v16[4] = sub_10050A834((unint64_t *)&qword_1006B5A60, (void (*)(uint64_t))&type metadata accessor for Feature.FindMy);
  uint64_t v11 = sub_100042804(v16);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(My - 8) + 104))(v11, enum case for Feature.FindMy.utPrecisionFinding(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)();
  sub_10002CEFC((uint64_t)v16);
  if (My)
  {
    sub_100507E30(a1, a3);
    char v12 = sub_10016A450(a1, a2 & 1);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    if (v12) {
      char v13 = FMIPUnknownItem.isAppleAudioAccessory.getter() ^ 1;
    }
    else {
      char v13 = 0;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_100508474(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMIPUnknownItem();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMIPProductType();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  FMIPUnknownItem.productType.getter();
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == enum case for FMIPProductType.b389(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    sub_100003F10((uint64_t)v9, &qword_1006B5280);
    return 1;
  }
  else if (v10 == enum case for FMIPProductType.zeus(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    uint64_t v12 = type metadata accessor for FMIPZeusProductInformation();
    (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v9, v12);
    return 1;
  }
  else if (v10 == enum case for FMIPProductType.hawkeye(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    char v13 = (void *)FMIPUnknownItem.unknownBeacon.getter();
    if (v13)
    {
      uint64_t v14 = v13;
      unsigned __int8 v15 = [v13 capabilities];

      int v16 = v15 & 1;
    }
    else
    {
      int v16 = 2;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    if (v16 == 2)
    {
      uint64_t v17 = (void *)FMIPUnknownItem.unknownBeacon.getter();
      unint64_t v11 = (unint64_t)v17;
      if (v17)
      {
        id v18 = [v17 metadata];

        if (v18)
        {
          unsigned __int8 v19 = [v18 capabilities];

          unint64_t v11 = v19 & 1;
        }
        else
        {
          unint64_t v11 = 0;
        }
      }
    }
    else
    {
      unint64_t v11 = v16 != 0;
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_100003F10((uint64_t)v9, &qword_1006B3700);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return 0;
  }
  return v11;
}

uint64_t sub_1005087A4(uint64_t a1, int a2, uint64_t a3, char a4, uint64_t a5)
{
  LOBYTE(v6) = a4;
  uint64_t v170 = a3;
  LODWORD(v169) = a2;
  unint64_t v8 = type metadata accessor for FMIPUnknownItemAlertState();
  uint64_t v164 = *(void **)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  v167 = (char *)&v162 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v168 = (char *)&v162 - v11;
  uint64_t v12 = type metadata accessor for FMIPUnknownItem();
  uint64_t v175 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v165 = (char *)&v162 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v174 = (char *)&v162 - v16;
  __chkstk_darwin(v15);
  id v18 = (char *)&v162 - v17;
  uint64_t v19 = type metadata accessor for FMIPProductType();
  uint64_t v172 = *(void *)(v19 - 8);
  uint64_t v173 = v19;
  uint64_t v20 = __chkstk_darwin(v19);
  id v166 = (char *)&v162 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  id v23 = (char *)&v162 - v22;
  unint64_t v24 = (unint64_t)&_swiftEmptySetSingleton;
  id v179 = &_swiftEmptySetSingleton;
  char v25 = sub_1005082A0(a1, v6, a5);
  i = &_swiftEmptySetSingleton;
  uint64_t v176 = a1;
  if ((v25 & 1) == 0) {
    goto LABEL_37;
  }
  FMIPUnknownItem.productType.getter();
  char v27 = FMIPProductType.isAccessory.getter();
  (*(void (**)(char *, uint64_t))(v172 + 8))(v23, v173);
  BOOL v28 = sub_100507E30(a1, a5);
  char v29 = sub_10016ABC4(a1, v6 & 1, v27 & 1, a5, v28);
  i = &_swiftEmptySetSingleton;
  if ((v169 & 1) == 0 || (v29 & 1) == 0) {
    goto LABEL_20;
  }
  Hasher.init(_seed:)();
  Hasher._combine(_:)(0);
  Swift::Int v30 = Hasher._finalize()();
  uint64_t v31 = -1 << *((unsigned char *)&_swiftEmptySetSingleton + 32);
  unint64_t v24 = v30 & ~v31;
  if ((*(void *)((char *)&_swiftEmptySetSingleton + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v24))
  {
    uint64_t v32 = ~v31;
    do
    {
      if (*(unsigned char *)(*((void *)&_swiftEmptySetSingleton + 6) + v24) == 2) {
        goto LABEL_20;
      }
      unint64_t v24 = (v24 + 1) & v32;
    }
    while (((*(void *)((char *)&_swiftEmptySetSingleton + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v24) & 1) != 0);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v178 = &_swiftEmptySetSingleton;
  if (*((void *)&_swiftEmptySetSingleton + 3) > *((void *)&_swiftEmptySetSingleton + 2))
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_208;
    }
    for (i = &_swiftEmptySetSingleton; ; i = v178)
    {
LABEL_18:
      *(void *)((char *)i + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v24;
      *(unsigned char *)(i[6] + v24) = 2;
      uint64_t v37 = i[2];
      BOOL v38 = __OFADD__(v37, 1);
      uint64_t v39 = v37 + 1;
      if (v38) {
        goto LABEL_203;
      }
      i[2] = v39;
      swift_bridgeObjectRelease();
LABEL_20:
      unint64_t v40 = v8;
      unint64_t v24 = (unint64_t)v179;
      Hasher.init(_seed:)();
      Hasher._combine(_:)(0);
      Swift::Int v41 = Hasher._finalize()();
      uint64_t v42 = -1 << *(unsigned char *)(v24 + 32);
      unint64_t v8 = v41 & ~v42;
      if ((*(void *)(v24 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
      {
        uint64_t v43 = ~v42;
        while (*(unsigned char *)(*(void *)(v24 + 48) + v8) != 2)
        {
          unint64_t v8 = (v8 + 1) & v43;
          if (((*(void *)(v24 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
            goto LABEL_24;
          }
        }
      }
      else
      {
LABEL_24:
        int v44 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v178 = (void *)v24;
        if (*(void *)(v24 + 24) <= *(void *)(v24 + 16))
        {
          if (v44) {
            sub_10025EB1C();
          }
          else {
            sub_10026259C();
          }
          unint64_t v24 = (unint64_t)v178;
          Hasher.init(_seed:)();
          Hasher._combine(_:)(0);
          Swift::Int v45 = Hasher._finalize()();
          uint64_t v46 = -1 << *(unsigned char *)(v24 + 32);
          unint64_t v8 = v45 & ~v46;
          if ((*(void *)(v24 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
          {
            uint64_t v47 = ~v46;
            while (*(unsigned char *)(*(void *)(v24 + 48) + v8) != 2)
            {
              unint64_t v8 = (v8 + 1) & v47;
              if (((*(void *)(v24 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
                goto LABEL_34;
              }
            }
            goto LABEL_209;
          }
        }
        else if ((v44 & 1) == 0)
        {
          sub_100260B58();
          unint64_t v24 = (unint64_t)v178;
        }
LABEL_34:
        *(void *)(v24 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v8;
        *(unsigned char *)(*(void *)(v24 + 48) + v8) = 2;
        uint64_t v48 = *(void *)(v24 + 16);
        BOOL v38 = __OFADD__(v48, 1);
        uint64_t v49 = v48 + 1;
        if (v38)
        {
          __break(1u);
LABEL_201:
          __break(1u);
LABEL_202:
          __break(1u);
LABEL_203:
          __break(1u);
LABEL_204:
          __break(1u);
          goto LABEL_205;
        }
        *(void *)(v24 + 16) = v49;
        id v179 = (void *)v24;
        swift_bridgeObjectRelease();
      }
      unint64_t v8 = v40;
      a1 = v176;
LABEL_37:
      sub_100507E30(a1, a5);
      LODWORD(v6) = v6 & 1;
      if ((sub_10016A450(a1, v6) & 0x100) != 0)
      {
        FMIPUnknownItem.productType.getter();
        char v50 = FMIPProductType.isAccessory.getter();
        (*(void (**)(char *, uint64_t))(v172 + 8))(v23, v173);
        BOOL v51 = sub_100507E30(a1, a5);
        char v52 = sub_10016ABC4(a1, v6, v50 & 1, a5, v51);
        if (v169 & 1) != 0 && (v52)
        {
          Hasher.init(_seed:)();
          Hasher._combine(_:)(1uLL);
          Swift::Int v53 = Hasher._finalize()();
          uint64_t v54 = -1 << *((unsigned char *)i + 32);
          unint64_t v24 = v53 & ~v54;
          id v23 = (char *)v12;
          if ((*(void *)((char *)i + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v24))
          {
            uint64_t v55 = ~v54;
            uint64_t v12 = v176;
            while (*(unsigned char *)(i[6] + v24) != 3)
            {
              unint64_t v24 = (v24 + 1) & v55;
              if (((*(void *)((char *)i + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v24) & 1) == 0) {
                goto LABEL_48;
              }
            }
          }
          else
          {
            uint64_t v12 = v176;
LABEL_48:
            int v56 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v178 = i;
            if (i[3] <= i[2])
            {
              if (v56) {
                sub_10025EB1C();
              }
              else {
                sub_10026259C();
              }
              i = v178;
              Hasher.init(_seed:)();
              Hasher._combine(_:)(1uLL);
              Swift::Int v57 = Hasher._finalize()();
              uint64_t v58 = -1 << *((unsigned char *)i + 32);
              unint64_t v24 = v57 & ~v58;
              if ((*(void *)((char *)i + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v24))
              {
                uint64_t v59 = ~v58;
                while (*(unsigned char *)(i[6] + v24) != 3)
                {
                  unint64_t v24 = (v24 + 1) & v59;
                  if (((*(void *)((char *)i + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v24) & 1) == 0) {
                    goto LABEL_58;
                  }
                }
                goto LABEL_209;
              }
            }
            else if ((v56 & 1) == 0)
            {
              sub_100260B58();
              i = v178;
            }
LABEL_58:
            *(void *)((char *)i + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v24;
            *(unsigned char *)(i[6] + v24) = 3;
            uint64_t v60 = i[2];
            BOOL v38 = __OFADD__(v60, 1);
            uint64_t v61 = v60 + 1;
            if (v38) {
              goto LABEL_204;
            }
            i[2] = v61;
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          id v23 = (char *)v12;
          uint64_t v12 = v176;
        }
        unint64_t v24 = (unint64_t)v179;
        Hasher.init(_seed:)();
        Hasher._combine(_:)(1uLL);
        Swift::Int v62 = Hasher._finalize()();
        uint64_t v63 = -1 << *(unsigned char *)(v24 + 32);
        unint64_t v6 = v62 & ~v63;
        if ((*(void *)(v24 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
        {
          uint64_t v64 = ~v63;
          while (*(unsigned char *)(*(void *)(v24 + 48) + v6) != 3)
          {
            unint64_t v6 = (v6 + 1) & v64;
            if (((*(void *)(v24 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              goto LABEL_64;
            }
          }
        }
        else
        {
LABEL_64:
          int v65 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v178 = (void *)v24;
          if (*(void *)(v24 + 24) <= *(void *)(v24 + 16))
          {
            if (v65) {
              sub_10025EB1C();
            }
            else {
              sub_10026259C();
            }
            unint64_t v24 = (unint64_t)v178;
            Hasher.init(_seed:)();
            Hasher._combine(_:)(1uLL);
            Swift::Int v66 = Hasher._finalize()();
            uint64_t v67 = -1 << *(unsigned char *)(v24 + 32);
            unint64_t v6 = v66 & ~v67;
            if ((*(void *)(v24 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
            {
              uint64_t v68 = ~v67;
              while (*(unsigned char *)(*(void *)(v24 + 48) + v6) != 3)
              {
                unint64_t v6 = (v6 + 1) & v68;
                if (((*(void *)(v24 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
                  goto LABEL_74;
                }
              }
              goto LABEL_209;
            }
          }
          else if ((v65 & 1) == 0)
          {
            sub_100260B58();
            unint64_t v24 = (unint64_t)v178;
          }
LABEL_74:
          *(void *)(v24 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v6;
          *(unsigned char *)(*(void *)(v24 + 48) + v6) = 3;
          uint64_t v69 = *(void *)(v24 + 16);
          BOOL v38 = __OFADD__(v69, 1);
          uint64_t v70 = v69 + 1;
          if (v38) {
            goto LABEL_201;
          }
          *(void *)(v24 + 16) = v70;
          id v179 = (void *)v24;
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        id v23 = (char *)v12;
        uint64_t v12 = a1;
      }
      if (sub_100508474(v12))
      {
        Hasher.init(_seed:)();
        Hasher._combine(_:)(2uLL);
        Swift::Int v71 = Hasher._finalize()();
        uint64_t v72 = -1 << *(unsigned char *)(v24 + 32);
        unint64_t v6 = v71 & ~v72;
        if ((*(void *)(v24 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
        {
          uint64_t v73 = ~v72;
          while (*(unsigned char *)(*(void *)(v24 + 48) + v6) != 4)
          {
            unint64_t v6 = (v6 + 1) & v73;
            if (((*(void *)(v24 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              goto LABEL_81;
            }
          }
        }
        else
        {
LABEL_81:
          int v74 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v178 = (void *)v24;
          id v179 = (void *)0x8000000000000000;
          if (*(void *)(v24 + 24) <= *(void *)(v24 + 16))
          {
            if (v74) {
              sub_10025EB1C();
            }
            else {
              sub_10026259C();
            }
            unint64_t v24 = (unint64_t)v178;
            Hasher.init(_seed:)();
            Hasher._combine(_:)(2uLL);
            Swift::Int v75 = Hasher._finalize()();
            uint64_t v76 = -1 << *(unsigned char *)(v24 + 32);
            unint64_t v6 = v75 & ~v76;
            if ((*(void *)(v24 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
            {
              uint64_t v77 = ~v76;
              while (*(unsigned char *)(*(void *)(v24 + 48) + v6) != 4)
              {
                unint64_t v6 = (v6 + 1) & v77;
                if (((*(void *)(v24 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
                  goto LABEL_91;
                }
              }
              goto LABEL_209;
            }
          }
          else if ((v74 & 1) == 0)
          {
            sub_100260B58();
            unint64_t v24 = (unint64_t)v178;
          }
LABEL_91:
          *(void *)(v24 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v6;
          *(unsigned char *)(*(void *)(v24 + 48) + v6) = 4;
          uint64_t v78 = *(void *)(v24 + 16);
          BOOL v38 = __OFADD__(v78, 1);
          uint64_t v79 = v78 + 1;
          if (v38) {
            goto LABEL_202;
          }
          *(void *)(v24 + 16) = v79;
          id v179 = (void *)v24;
          swift_bridgeObjectRelease();
        }
        if (v169)
        {
          Hasher.init(_seed:)();
          Hasher._combine(_:)(2uLL);
          Swift::Int v80 = Hasher._finalize()();
          uint64_t v81 = -1 << *((unsigned char *)i + 32);
          unint64_t v24 = v80 & ~v81;
          if ((*(void *)((char *)i + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v24))
          {
            uint64_t v82 = ~v81;
            while (*(unsigned char *)(i[6] + v24) != 4)
            {
              unint64_t v24 = (v24 + 1) & v82;
              if (((*(void *)((char *)i + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v24) & 1) == 0) {
                goto LABEL_98;
              }
            }
          }
          else
          {
LABEL_98:
            int v83 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v178 = i;
            if (i[3] <= i[2])
            {
              if (v83) {
                sub_10025EB1C();
              }
              else {
                sub_10026259C();
              }
              i = v178;
              Hasher.init(_seed:)();
              Hasher._combine(_:)(2uLL);
              Swift::Int v84 = Hasher._finalize()();
              uint64_t v85 = -1 << *((unsigned char *)i + 32);
              unint64_t v24 = v84 & ~v85;
              if ((*(void *)((char *)i + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v24))
              {
                uint64_t v86 = ~v85;
                while (*(unsigned char *)(i[6] + v24) != 4)
                {
                  unint64_t v24 = (v24 + 1) & v86;
                  if (((*(void *)((char *)i + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v24) & 1) == 0) {
                    goto LABEL_108;
                  }
                }
                goto LABEL_209;
              }
            }
            else if ((v83 & 1) == 0)
            {
              sub_100260B58();
              i = v178;
            }
LABEL_108:
            *(void *)((char *)i + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v24;
            *(unsigned char *)(i[6] + v24) = 4;
            uint64_t v87 = i[2];
            BOOL v38 = __OFADD__(v87, 1);
            uint64_t v88 = v87 + 1;
            if (v38) {
              goto LABEL_206;
            }
            i[2] = v88;
            swift_bridgeObjectRelease();
          }
        }
      }
      uint64_t My = type metadata accessor for Feature.FindMy();
      v177[3] = My;
      v177[4] = sub_10050A834((unint64_t *)&qword_1006B5A60, (void (*)(uint64_t))&type metadata accessor for Feature.FindMy);
      uint64_t v90 = sub_100042804(v177);
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(My - 8) + 104))(v90, enum case for Feature.FindMy.itemSharing(_:), My);
      LOBYTE(My) = isFeatureEnabled(_:)();
      sub_10002CEFC((uint64_t)v177);
      uint64_t v91 = v174;
      if ((My & 1) == 0) {
        goto LABEL_131;
      }
      FMIPUnknownItem.handle.getter();
      uint64_t v93 = v92;
      swift_bridgeObjectRelease();
      uint64_t v94 = v175;
      (*(void (**)(char *, uint64_t, char *))(v175 + 16))(v18, v12, v23);
      if (!v93)
      {
        (*(void (**)(char *, char *))(v94 + 8))(v18, v23);
        goto LABEL_130;
      }
      char v95 = FMIPUnknownItem.isRequestable.getter();
      (*(void (**)(char *, char *))(v94 + 8))(v18, v23);
      uint64_t v91 = v174;
      if ((v95 & 1) == 0) {
        goto LABEL_131;
      }
      unint64_t v24 = (unint64_t)v179;
      Hasher.init(_seed:)();
      Hasher._combine(_:)(6uLL);
      Swift::Int v96 = Hasher._finalize()();
      uint64_t v97 = -1 << *(unsigned char *)(v24 + 32);
      unint64_t v6 = v96 & ~v97;
      if ((*(void *)(v24 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
      {
        uint64_t v98 = ~v97;
        uint64_t v91 = v174;
        while (*(unsigned char *)(*(void *)(v24 + 48) + v6) != 7)
        {
          unint64_t v6 = (v6 + 1) & v98;
          if (((*(void *)(v24 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
            goto LABEL_117;
          }
        }
        goto LABEL_131;
      }
LABEL_117:
      int v99 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v178 = (void *)v24;
      if (*(void *)(v24 + 24) <= *(void *)(v24 + 16))
      {
        if (v99) {
          sub_10025EB1C();
        }
        else {
          sub_10026259C();
        }
        unint64_t v24 = (unint64_t)v178;
        Hasher.init(_seed:)();
        Hasher._combine(_:)(6uLL);
        Swift::Int v100 = Hasher._finalize()();
        uint64_t v101 = -1 << *(unsigned char *)(v24 + 32);
        unint64_t v6 = v100 & ~v101;
        if ((*(void *)(v24 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
        {
          uint64_t v102 = ~v101;
          while (*(unsigned char *)(*(void *)(v24 + 48) + v6) != 7)
          {
            unint64_t v6 = (v6 + 1) & v102;
            if (((*(void *)(v24 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              goto LABEL_128;
            }
          }
          goto LABEL_209;
        }
      }
      else if ((v99 & 1) == 0)
      {
        sub_100260B58();
        unint64_t v24 = (unint64_t)v178;
      }
LABEL_128:
      *(void *)(v24 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v6;
      *(unsigned char *)(*(void *)(v24 + 48) + v6) = 7;
      uint64_t v103 = *(void *)(v24 + 16);
      BOOL v38 = __OFADD__(v103, 1);
      uint64_t v104 = v103 + 1;
      if (!v38)
      {
        *(void *)(v24 + 16) = v104;
        id v179 = (void *)v24;
        swift_bridgeObjectRelease();
LABEL_130:
        uint64_t v91 = v174;
LABEL_131:
        char v105 = *(unsigned char *)(*(void *)(a5 + 16) + OBJC_IVAR____TtC6FindMy19FMConditionProvider_isUnderAgeUser);
        uint64_t v106 = v170;
        uint64_t v107 = *(void *)(v170 + 16);
        if (v107)
        {
          uint64_t v108 = *(void *)(type metadata accessor for FMIPBeaconShare() - 8);
          uint64_t v109 = v106 + ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80));
          uint64_t v110 = *(void *)(v108 + 72);
          swift_bridgeObjectRetain();
          a5 = 0;
          uint64_t v111 = v107 - 1;
          do
          {
            uint64_t v112 = v111;
            LOBYTE(v107) = sub_100507C38();
            if (v107) {
              break;
            }
            uint64_t v111 = v112 - 1;
            v109 += v110;
          }
          while (v112);
          swift_bridgeObjectRelease();
          uint64_t v91 = v174;
        }
        else
        {
          a5 = 0;
        }
        uint64_t v113 = v175;
        uint64_t v169 = *(void (**)(char *, uint64_t, char *))(v175 + 16);
        uint64_t v170 = v175 + 16;
        v169(v91, v12, v23);
        unint64_t v6 = (unint64_t)v167;
        uint64_t v171 = v23;
        if (v107)
        {
          uint64_t v163 = (uint64_t)i;
          uint64_t v174 = *(char **)(v113 + 8);
          ((void (*)(char *, char *))v174)(v91, v23);
          uint64_t v114 = v164;
          uint64_t v12 = (uint64_t)v168;
          goto LABEL_158;
        }
        char v115 = FMIPUnknownItem.isRequestable.getter();
        id v18 = *(char **)(v113 + 8);
        ((void (*)(char *, char *))v18)(v91, v23);
        uint64_t v12 = (uint64_t)v168;
        uint64_t v174 = v18;
        if (v105 & 1 | ((v115 & 1) == 0)) {
          goto LABEL_140;
        }
        Hasher.init(_seed:)();
        Hasher._combine(_:)(6uLL);
        Swift::Int v116 = Hasher._finalize()();
        uint64_t v117 = -1 << *((unsigned char *)i + 32);
        unint64_t v24 = v116 & ~v117;
        if ((*(void *)((char *)i + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v24))
        {
          uint64_t v118 = ~v117;
          while (*(unsigned char *)(i[6] + v24) != 7)
          {
            unint64_t v24 = (v24 + 1) & v118;
            if (((*(void *)((char *)i + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v24) & 1) == 0) {
              goto LABEL_145;
            }
          }
LABEL_140:
          uint64_t v163 = (uint64_t)i;
LABEL_157:
          uint64_t v114 = v164;
LABEL_158:
          FMIPUnknownItem.alertState.getter();
          uint64_t v164 = (void *)v114[13];
          ((void (*)(unint64_t, void, unint64_t))v164)(v6, enum case for FMIPUnknownItemAlertState.triggered(_:), v8);
          sub_10050A834(&qword_1006B6C90, (void (*)(uint64_t))&type metadata accessor for FMIPUnknownItemAlertState);
          dispatch thunk of RawRepresentable.rawValue.getter();
          dispatch thunk of RawRepresentable.rawValue.getter();
          uint64_t v125 = v177[0];
          uint64_t v126 = v178;
          unint64_t v127 = v6;
          uint64_t v128 = (void (*)(unint64_t, unint64_t))v114[1];
          v128(v127, v8);
          v128(v12, v8);
          uint64_t v129 = v165;
          v169(v165, v176, v171);
          if ((void *)v125 == v126)
          {
            ((void (*)(char *, char *))v174)(v129, v171);
            uint64_t v130 = v173;
            uint64_t v131 = v163;
            goto LABEL_162;
          }
          id v132 = v168;
          FMIPUnknownItem.alertState.getter();
          ((void (*)(unint64_t, void, unint64_t))v164)(v127, enum case for FMIPUnknownItemAlertState.cleared(_:), v8);
          dispatch thunk of RawRepresentable.rawValue.getter();
          dispatch thunk of RawRepresentable.rawValue.getter();
          uint64_t v133 = v177[0];
          uint64_t v134 = (uint64_t)v178;
          v128(v127, v8);
          v128((unint64_t)v132, v8);
          ((void (*)(char *, char *))v174)(v129, v171);
          BOOL v135 = v133 == v134;
          uint64_t v130 = v173;
          uint64_t v131 = v163;
          if (v135)
          {
LABEL_162:
            FMIPUnknownItem.handle.getter();
            uint64_t v137 = v136;
            if (v136) {
              swift_bridgeObjectRelease();
            }
            Hasher.init(_seed:)();
            Hasher._combine(_:)(3uLL);
            Hasher._combine(_:)(v137 != 0);
            Swift::Int v138 = Hasher._finalize()();
            uint64_t v139 = -1 << *(unsigned char *)(v131 + 32);
            unint64_t v140 = v138 & ~v139;
            if ((*(void *)(v131 + 56 + ((v140 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v140))
            {
              uint64_t v141 = ~v139;
              while (1)
              {
                int v142 = *(unsigned __int8 *)(*(void *)(v131 + 48) + v140);
                if ((v142 - 2) >= 6 && (v137 != 0) != ((v142 & 1) == 0)) {
                  break;
                }
                unint64_t v140 = (v140 + 1) & v141;
                if (((*(void *)(v131 + 56 + ((v140 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v140) & 1) == 0) {
                  goto LABEL_170;
                }
              }
            }
            else
            {
LABEL_170:
              char v143 = swift_isUniquelyReferenced_nonNull_native();
              v177[0] = v131;
              sub_1002600CC(v137 != 0, v140, v143);
              uint64_t v131 = v177[0];
              swift_bridgeObjectRelease();
            }
            sub_10025CBE4(v177, v137 != 0);
            uint64_t v144 = v166;
          }
          else
          {
            uint64_t v144 = v166;
          }
          FMIPUnknownItem.productType.getter();
          char v145 = FMIPProductType.isAccessory.getter();
          (*(void (**)(char *, uint64_t))(v172 + 8))(v144, v130);
          if (v145) {
            goto LABEL_175;
          }
          if (qword_1006AE320 != -1) {
            goto LABEL_199;
          }
          while (1)
          {
            if (byte_1006D25B3 != 1) {
              goto LABEL_192;
            }
LABEL_175:
            Hasher.init(_seed:)();
            Hasher._combine(_:)(4uLL);
            Swift::Int v146 = Hasher._finalize()();
            uint64_t v147 = -1 << *(unsigned char *)(v131 + 32);
            unint64_t v148 = v146 & ~v147;
            if ((*(void *)(v131 + 56 + ((v148 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v148)) {
              break;
            }
LABEL_179:
            int v150 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v178 = (void *)v131;
            if (*(void *)(v131 + 24) <= *(void *)(v131 + 16))
            {
              if (v150) {
                sub_10025EB1C();
              }
              else {
                sub_10026259C();
              }
              uint64_t v131 = (uint64_t)v178;
              Hasher.init(_seed:)();
              Hasher._combine(_:)(4uLL);
              Swift::Int v151 = Hasher._finalize()();
              uint64_t v152 = -1 << *(unsigned char *)(v131 + 32);
              unint64_t v148 = v151 & ~v152;
              if ((*(void *)(v131 + 56 + ((v148 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v148))
              {
                uint64_t v153 = ~v152;
                while (*(unsigned char *)(*(void *)(v131 + 48) + v148) != 5)
                {
                  unint64_t v148 = (v148 + 1) & v153;
                  if (((*(void *)(v131 + 56 + ((v148 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v148) & 1) == 0) {
                    goto LABEL_189;
                  }
                }
                goto LABEL_209;
              }
            }
            else if ((v150 & 1) == 0)
            {
              sub_100260B58();
              uint64_t v131 = (uint64_t)v178;
            }
LABEL_189:
            *(void *)(v131 + ((v148 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v148;
            *(unsigned char *)(*(void *)(v131 + 48) + v148) = 5;
            uint64_t v154 = *(void *)(v131 + 16);
            BOOL v38 = __OFADD__(v154, 1);
            uint64_t v155 = v154 + 1;
            if (!v38)
            {
              *(void *)(v131 + 16) = v155;
              swift_bridgeObjectRelease();
LABEL_191:
              sub_10025CBE4(v177, 5);
LABEL_192:
              Hasher.init(_seed:)();
              Hasher._combine(_:)(5uLL);
              Swift::Int v156 = Hasher._finalize()();
              uint64_t v157 = -1 << *(unsigned char *)(v131 + 32);
              unint64_t v158 = v156 & ~v157;
              if ((*(void *)(v131 + 56 + ((v158 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v158))
              {
                uint64_t v159 = ~v157;
                while (*(unsigned char *)(*(void *)(v131 + 48) + v158) != 6)
                {
                  unint64_t v158 = (v158 + 1) & v159;
                  if (((*(void *)(v131 + 56 + ((v158 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v158) & 1) == 0) {
                    goto LABEL_196;
                  }
                }
              }
              else
              {
LABEL_196:
                char v160 = swift_isUniquelyReferenced_nonNull_native();
                v177[0] = v131;
                sub_1002600CC(6, v158, v160);
                uint64_t v131 = v177[0];
                swift_bridgeObjectRelease();
              }
              sub_10025CBE4(v177, 6);
              return v131;
            }
            __break(1u);
LABEL_199:
            swift_once();
          }
          uint64_t v149 = ~v147;
          while (*(unsigned char *)(*(void *)(v131 + 48) + v148) != 5)
          {
            unint64_t v148 = (v148 + 1) & v149;
            if (((*(void *)(v131 + 56 + ((v148 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v148) & 1) == 0) {
              goto LABEL_179;
            }
          }
          goto LABEL_191;
        }
LABEL_145:
        int v119 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v178 = i;
        if (i[3] <= i[2])
        {
          if (v119) {
            sub_10025EB1C();
          }
          else {
            sub_10026259C();
          }
          i = v178;
          Hasher.init(_seed:)();
          Hasher._combine(_:)(6uLL);
          Swift::Int v120 = Hasher._finalize()();
          uint64_t v121 = -1 << *((unsigned char *)i + 32);
          unint64_t v24 = v120 & ~v121;
          if ((*(void *)((char *)i + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v24))
          {
            uint64_t v122 = ~v121;
            while (*(unsigned char *)(i[6] + v24) != 7)
            {
              unint64_t v24 = (v24 + 1) & v122;
              if (((*(void *)((char *)i + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v24) & 1) == 0) {
                goto LABEL_155;
              }
            }
            goto LABEL_209;
          }
        }
        else if ((v119 & 1) == 0)
        {
          sub_100260B58();
          i = v178;
        }
LABEL_155:
        *(void *)((char *)i + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v24;
        *(unsigned char *)(i[6] + v24) = 7;
        uint64_t v123 = i[2];
        BOOL v38 = __OFADD__(v123, 1);
        uint64_t v124 = v123 + 1;
        if (!v38)
        {
          uint64_t v163 = (uint64_t)i;
          i[2] = v124;
          swift_bridgeObjectRelease();
          goto LABEL_157;
        }
LABEL_205:
        __break(1u);
LABEL_206:
        __break(1u);
      }
      __break(1u);
LABEL_208:
      sub_100260B58();
    }
  }
  if (isUniquelyReferenced_nonNull_native) {
    sub_10025EB1C();
  }
  else {
    sub_10026259C();
  }
  i = v178;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(0);
  Swift::Int v34 = Hasher._finalize()();
  uint64_t v35 = -1 << *((unsigned char *)i + 32);
  unint64_t v24 = v34 & ~v35;
  if (((*(void *)((char *)i + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v24) & 1) == 0) {
    goto LABEL_18;
  }
  uint64_t v36 = ~v35;
  while (*(unsigned char *)(i[6] + v24) != 2)
  {
    unint64_t v24 = (v24 + 1) & v36;
    if (((*(void *)((char *)i + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v24) & 1) == 0) {
      goto LABEL_18;
    }
  }
LABEL_209:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10050A000()
{
  uint64_t v0 = type metadata accessor for Calendar();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  char v4 = Calendar.isDateInToday(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  if (v4)
  {
    if (qword_1006AE468 != -1) {
      swift_once();
    }
    unint64_t v6 = (void *)qword_1006C1780;
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v8 = [v6 stringFromDate:isa];

    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    id v12 = [self mainBundle];
    unint64_t v13 = 0xD000000000000018;
    unint64_t v14 = 0xD000000000000022;
    unint64_t v53 = 0x800000010057EF80;
    uint64_t v15 = "ITEM_FOLLOWING_FIRST_SEEN_SUBTITLE";
  }
  else
  {
    uint64_t v16 = (void *)qword_1006D2648;
    if (qword_1006D2648)
    {
      id v17 = (id)qword_1006D2648;
    }
    else
    {
      id v18 = [objc_allocWithZone((Class)FMRelativeDateFormatter) init];
      [v18 setFormattingContext:5];
      uint64_t v19 = (void *)qword_1006D2648;
      qword_1006D2648 = (uint64_t)v18;
      id v17 = v18;

      uint64_t v16 = 0;
    }
    id v20 = v16;
    Class v21 = Date._bridgeToObjectiveC()().super.isa;
    id v22 = [v17 stringFromDate:v21];

    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v23;

    id v12 = [self mainBundle];
    unint64_t v13 = 0xD000000000000018;
    unint64_t v14 = 0xD000000000000027;
    unint64_t v53 = 0x800000010057EF80;
    uint64_t v15 = "ITEM_FOLLOWING_FIRST_SEEN_AGED_SUBTITLE";
  }
  unint64_t v24 = (unint64_t)(v15 - 32) | 0x8000000000000000;
  v25.value._object = (void *)0x800000010057EF60;
  v25.value._countAndFlagsBits = 0xD000000000000013;
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v14, v25, (NSBundle)v12, v26, *(Swift::String *)&v13);

  sub_10005D034((uint64_t *)&unk_1006AF790);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_10055B970;
  *(void *)(v27 + 56) = &type metadata for String;
  *(void *)(v27 + 64) = sub_10007F2C8();
  *(void *)(v27 + 32) = v9;
  *(void *)(v27 + 40) = v11;
  uint64_t v28 = String.init(format:_:)();
  swift_bridgeObjectRelease();
  static Calendar.current.getter();
  char v29 = Calendar.isDateInToday(_:)();
  v5(v3, v0);
  if (v29)
  {
    if (qword_1006AE468 != -1) {
      swift_once();
    }
    Swift::Int v30 = (void *)qword_1006C1780;
    Class v31 = Date._bridgeToObjectiveC()().super.isa;
    id v32 = [v30 stringFromDate:v31];

    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v35 = v34;

    id v36 = [self mainBundle];
    unint64_t v37 = 0xD000000000000018;
    unint64_t v38 = 0xD000000000000021;
    unint64_t v54 = 0x800000010057EF80;
    uint64_t v39 = "ITEM_FOLLOWING_LAST_SEEN_SUBTITLE";
  }
  else
  {
    unint64_t v40 = (void *)qword_1006D2648;
    if (qword_1006D2648)
    {
      id v41 = (id)qword_1006D2648;
    }
    else
    {
      id v42 = [objc_allocWithZone((Class)FMRelativeDateFormatter) init];
      [v42 setFormattingContext:5];
      uint64_t v43 = (void *)qword_1006D2648;
      qword_1006D2648 = (uint64_t)v42;
      id v41 = v42;

      unint64_t v40 = 0;
    }
    id v44 = v40;
    Class v45 = Date._bridgeToObjectiveC()().super.isa;
    id v46 = [v41 stringFromDate:v45];

    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v35 = v47;

    id v36 = [self mainBundle];
    unint64_t v37 = 0xD000000000000018;
    unint64_t v38 = 0xD000000000000026;
    unint64_t v54 = 0x800000010057EF80;
    uint64_t v39 = "ITEM_FOLLOWING_LAST_SEEN_AGED_SUBTITLE";
  }
  unint64_t v48 = (unint64_t)(v39 - 32) | 0x8000000000000000;
  v49.value._object = (void *)0x800000010057EF60;
  v49.value._countAndFlagsBits = 0xD000000000000013;
  v50._countAndFlagsBits = 0;
  v50._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v38, v49, (NSBundle)v36, v50, *(Swift::String *)&v37);

  sub_10005D034((uint64_t *)&unk_1006AF790);
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_10055B970;
  *(void *)(v51 + 56) = &type metadata for String;
  *(void *)(v51 + 64) = sub_10007F2C8();
  *(void *)(v51 + 32) = v33;
  *(void *)(v51 + 40) = v35;
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_10050A5F4()
{
  uint64_t v0 = type metadata accessor for FMIPItemState();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  char v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  unint64_t v6 = (char *)&v12 - v5;
  FMIPUnknownItem.state.getter();
  static FMIPItemState.soundPlaying.getter();
  sub_10050A834((unint64_t *)&qword_1006BEB30, (void (*)(uint64_t))&type metadata accessor for FMIPItemState);
  char v7 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  id v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  if (v7) {
    uint64_t v9 = 3;
  }
  else {
    uint64_t v9 = 1;
  }
  FMIPUnknownItem.state.getter();
  static FMIPItemState.soundQueued.getter();
  char v10 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  v8(v4, v0);
  v8(v6, v0);
  if (v10) {
    return v9 | 0x400;
  }
  else {
    return v9;
  }
}

uint64_t sub_10050A7CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10050A834(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMUTDetailAction(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9)
  {
    unsigned int v2 = a2 + 7;
    if (a2 + 7 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 7;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 7;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x10050A92CLL);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 7;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 < 2) {
    return 0;
  }
  unsigned int v8 = (v7 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v8 - 5;
  if (v8 <= 5) {
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMUTDetailAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 7;
  if (a3 + 7 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xF9) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v7 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x10050AA14);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMUTDetailAction()
{
  return &type metadata for FMUTDetailAction;
}

unint64_t sub_10050AA50()
{
  unint64_t result = qword_1006C1840;
  if (!qword_1006C1840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C1840);
  }
  return result;
}

Swift::Double *FMNearLocationThreshold.unsafeMutableAddressor()
{
  return &FMNearLocationThreshold;
}

uint64_t sub_10050AAB0(uint64_t a1, int a2)
{
  int v72 = a2;
  uint64_t v3 = type metadata accessor for FMIPItemState();
  uint64_t v75 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  Swift::Int v71 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v70 = (char *)&v63 - v6;
  uint64_t v7 = type metadata accessor for FMIPItem();
  uint64_t v73 = *(void *)(v7 - 8);
  uint64_t v74 = v7;
  __chkstk_darwin(v7);
  uint64_t v76 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10005D034((uint64_t *)&unk_1006BB9C0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v63 - v14;
  __chkstk_darwin(v13);
  id v17 = (char *)&v63 - v16;
  uint64_t v18 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  __chkstk_darwin(v18 - 8);
  id v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  FMIPItem.location.getter();
  uint64_t v21 = type metadata accessor for FMIPLocation();
  int v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v20, 1, v21);
  sub_100003F10((uint64_t)v20, (uint64_t *)&unk_1006B2AE0);
  uint64_t v23 = self;
  id v24 = [v23 mainBundle];
  if (v22 == 1)
  {
    v25._uint64_t countAndFlagsBits = 0xD000000000000011;
    v79._uint64_t countAndFlagsBits = 0xD000000000000018;
    v79._object = (void *)0x800000010057EF80;
    v25._object = (void *)0x8000000100596B40;
    v26.value._object = (void *)0x800000010057EF60;
    v26.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v27._uint64_t countAndFlagsBits = 0;
    v27._object = (void *)0xE000000000000000;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, v26, (NSBundle)v24, v27, v79)._countAndFlagsBits;

    return countAndFlagsBits;
  }
  uint64_t v68 = v3;
  v80._uint64_t countAndFlagsBits = 0xD000000000000018;
  v29._uint64_t countAndFlagsBits = 0xD000000000000019;
  unint64_t v65 = (unint64_t)"Localizable-HAWKEYE";
  id v66 = v23;
  v80._object = (void *)0x800000010057EF80;
  v29._object = (void *)0x8000000100596BE0;
  unint64_t v64 = (unint64_t)"CLEAR_TAGS_BUTTON";
  v30.value._object = (void *)0x800000010057EF60;
  v30.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v31._uint64_t countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  Swift::String v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, v30, (NSBundle)v24, v31, v80);
  uint64_t v69 = v32._countAndFlagsBits;
  object = v32._object;

  uint64_t v77 = a1;
  FMIPItem.address.getter();
  uint64_t v33 = type metadata accessor for FMIPAddress();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
  if (v35(v17, 1, v33) == 1)
  {
    uint64_t v36 = v75;
    sub_100003F10((uint64_t)v17, (uint64_t *)&unk_1006BB9C0);
  }
  else
  {
    uint64_t v36 = v75;
    uint64_t v37 = FMIPAddress.mapItemFormattedAddress.getter();
    uint64_t v39 = v38;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v17, v33);
    if (v39)
    {
      swift_bridgeObjectRelease();
      uint64_t countAndFlagsBits = v37;
      uint64_t v40 = v68;
      uint64_t v41 = v36;
      uint64_t v43 = v73;
      uint64_t v42 = v74;
      char v44 = v72;
      id v46 = v76;
      uint64_t v45 = v77;
      goto LABEL_18;
    }
  }
  FMIPItem.address.getter();
  if (v35(v15, 1, v33) == 1)
  {
    sub_100003F10((uint64_t)v15, (uint64_t *)&unk_1006BB9C0);
    uint64_t v41 = v36;
    id v46 = v76;
  }
  else
  {
    uint64_t v47 = FMIPAddress.formattedAddressLines.getter();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v33);
    uint64_t v41 = v36;
    id v46 = v76;
    if (v47)
    {
      swift_bridgeObjectRelease();
      uint64_t v78 = v47;
      id v48 = [v66 mainBundle];
      v49._uint64_t countAndFlagsBits = 0xD000000000000017;
      v81._uint64_t countAndFlagsBits = 0xD000000000000018;
      v81._object = (void *)(v65 | 0x8000000000000000);
      v49._object = (void *)0x80000001005A0BB0;
      v50.value._object = (void *)(v64 | 0x8000000000000000);
      v50.value._uint64_t countAndFlagsBits = 0xD000000000000013;
      v51._uint64_t countAndFlagsBits = 0;
      v51._object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v49, v50, (NSBundle)v48, v51, v81);

      sub_10005D034(&qword_1006AFD50);
      sub_1001481D4();
      uint64_t countAndFlagsBits = BidirectionalCollection<>.joined(separator:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v40 = v68;
      uint64_t v42 = v74;
      goto LABEL_15;
    }
  }
  FMIPItem.address.getter();
  if (v35(v12, 1, v33) != 1)
  {
    uint64_t countAndFlagsBits = FMIPAddress.displayAddress.getter();
    uint64_t v53 = v52;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v33);
    uint64_t v42 = v74;
    if (!v53)
    {
      uint64_t v40 = v68;
      uint64_t v43 = v73;
      goto LABEL_17;
    }
    swift_bridgeObjectRelease();
    uint64_t v40 = v68;
LABEL_15:
    uint64_t v43 = v73;
    char v44 = v72;
    uint64_t v45 = v77;
    goto LABEL_18;
  }
  sub_100003F10((uint64_t)v12, (uint64_t *)&unk_1006BB9C0);
  uint64_t v40 = v68;
  uint64_t v43 = v73;
  uint64_t v42 = v74;
LABEL_17:
  char v44 = v72;
  uint64_t v45 = v77;
  uint64_t countAndFlagsBits = v69;
LABEL_18:
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v46, v45, v42);
  if (v44)
  {
    uint64_t v69 = countAndFlagsBits;
    unint64_t v54 = v70;
    FMIPItem.state.getter();
    uint64_t v55 = v71;
    static FMIPItemState.isBTConnected.getter();
    sub_10050C9E4();
    char v56 = dispatch thunk of SetAlgebra.isSuperset(of:)();
    Swift::Int v57 = *(void (**)(char *, uint64_t))(v41 + 8);
    v57(v55, v40);
    v57(v54, v40);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v46, v42);
    if (v56)
    {
      swift_bridgeObjectRelease();
      id v58 = [v66 mainBundle];
      v82._uint64_t countAndFlagsBits = 0xD000000000000018;
      v59._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
      v82._object = (void *)(v65 | 0x8000000000000000);
      v59._object = (void *)0x8000000100583360;
      v60.value._object = (void *)(v64 | 0x8000000000000000);
      v60.value._uint64_t countAndFlagsBits = 0xD000000000000013;
      v61._uint64_t countAndFlagsBits = 0;
      v61._object = (void *)0xE000000000000000;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v59, v60, (NSBundle)v58, v61, v82)._countAndFlagsBits;
    }
    else
    {
      return v69;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v46, v42);
  }
  return countAndFlagsBits;
}

uint64_t sub_10050B28C(uint64_t a1, int a2)
{
  LODWORD(v167) = a2;
  uint64_t v149 = type metadata accessor for PublishedLocation.Label.Length();
  uint64_t v148 = *(void *)(v149 - 8);
  __chkstk_darwin(v149);
  uint64_t v147 = (char *)&v136 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = type metadata accessor for PublishedLocation.Label.DetailLevel();
  uint64_t v155 = *(void *)(v160 - 8);
  __chkstk_darwin(v160);
  uint64_t v154 = (char *)&v136 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PublishedLocation.Label();
  uint64_t v157 = *(void *)(v5 - 8);
  uint64_t v158 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  Swift::Int v156 = (char *)&v136 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v161 = (char *)&v136 - v8;
  uint64_t v9 = type metadata accessor for FMIPItemState();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v151 = v9;
  uint64_t v152 = v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v163 = (char *)&v136 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v162 = (char *)&v136 - v13;
  uint64_t v14 = type metadata accessor for FMIPItem();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v165 = v14;
  uint64_t v166 = v15;
  uint64_t v16 = __chkstk_darwin(v14);
  Swift::Int v146 = (char *)&v136 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v153 = (char *)&v136 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  int v150 = (char *)&v136 - v21;
  __chkstk_darwin(v20);
  uint64_t v164 = (void (**)(uint64_t, uint64_t))((char *)&v136 - v22);
  uint64_t v23 = sub_10005D034((uint64_t *)&unk_1006BB9C0);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v159 = (uint64_t)&v136 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v136 - v27;
  uint64_t v29 = __chkstk_darwin(v26);
  Swift::String v31 = (char *)&v136 - v30;
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v34 = (char *)&v136 - v33;
  uint64_t v35 = __chkstk_darwin(v32);
  uint64_t v37 = (char *)&v136 - v36;
  uint64_t v38 = __chkstk_darwin(v35);
  uint64_t v40 = (char *)&v136 - v39;
  __chkstk_darwin(v38);
  uint64_t v42 = (char *)&v136 - v41;
  uint64_t v43 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  __chkstk_darwin(v43 - 8);
  uint64_t v45 = (char *)&v136 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = a1;
  FMIPItem.location.getter();
  uint64_t v47 = type metadata accessor for FMIPLocation();
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 48))(v45, 1, v47);
  sub_100003F10((uint64_t)v45, (uint64_t *)&unk_1006B2AE0);
  if (a1 != 1)
  {
    uint64_t v53 = v162;
    unint64_t v54 = v163;
    unint64_t v140 = v40;
    uint64_t v141 = v37;
    int v142 = v34;
    uint64_t v143 = (uint64_t)v31;
    uint64_t v55 = v28;
    uint64_t v56 = v46;
    FMIPItem.address.getter();
    uint64_t v58 = v165;
    uint64_t v57 = v166;
    Swift::String v59 = *(void (**)(char *, uint64_t, uint64_t))(v166 + 16);
    Swift::String_optional v60 = v164;
    uint64_t v145 = v166 + 16;
    uint64_t v144 = v59;
    v59((char *)v164, v56, v165);
    uint64_t v168 = v42;
    uint64_t v138 = v56;
    if (v167)
    {
      Swift::String v61 = v53;
      FMIPItem.state.getter();
      static FMIPItemState.isBTConnected.getter();
      sub_10050C9E4();
      Swift::Int v62 = v60;
      uint64_t v63 = v151;
      char v64 = dispatch thunk of SetAlgebra.isSuperset(of:)();
      unint64_t v65 = *(void (**)(char *, uint64_t))(v152 + 8);
      v65(v54, v63);
      v65(v61, v63);
      uint64_t v137 = *(void (**)(char *, uint64_t))(v57 + 8);
      v137((char *)v62, v58);
      if (v64)
      {
        id v66 = [self mainBundle];
        v172._uint64_t countAndFlagsBits = 0xD000000000000018;
        v67._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
        v172._object = (void *)0x800000010057EF80;
        v67._object = (void *)0x8000000100583360;
        v68.value._object = (void *)0x800000010057EF60;
        v68.value._uint64_t countAndFlagsBits = 0xD000000000000013;
        v69._uint64_t countAndFlagsBits = 0;
        v69._object = (void *)0xE000000000000000;
        Swift::String v70 = NSLocalizedString(_:tableName:bundle:value:comment:)(v67, v68, (NSBundle)v66, v69, v172);
        uint64_t countAndFlagsBits = v70._countAndFlagsBits;
        object = v70._object;
      }
      else
      {
        uint64_t countAndFlagsBits = 0;
        object = 0;
      }
      uint64_t v73 = (uint64_t)v55;
      uint64_t v74 = v143;
      uint64_t v75 = (uint64_t)v142;
      uint64_t v72 = (uint64_t)v168;
    }
    else
    {
      uint64_t v72 = (uint64_t)v42;
      uint64_t v137 = *(void (**)(char *, uint64_t))(v57 + 8);
      v137((char *)v60, v58);
      uint64_t countAndFlagsBits = 0;
      object = 0;
      uint64_t v73 = (uint64_t)v55;
      uint64_t v74 = v143;
      uint64_t v75 = (uint64_t)v142;
    }
    uint64_t v76 = (uint64_t)v140;
    sub_10050C97C(v72, (uint64_t)v140);
    uint64_t v77 = type metadata accessor for FMIPAddress();
    uint64_t v78 = *(char **)(v77 - 8);
    Swift::String v79 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((void *)v78 + 6);
    int v80 = v79(v76, 1, v77);
    uint64_t v164 = (void (**)(uint64_t, uint64_t))v78;
    if (v80 == 1)
    {
      sub_100003F10(v76, (uint64_t *)&unk_1006BB9C0);
      uint64_t v162 = 0;
      uint64_t v163 = 0;
    }
    else
    {
      FMIPAddress.coarseAddressModern.getter();
      uint64_t v81 = v76;
      uint64_t v83 = v82;
      (*((void (**)(uint64_t, uint64_t))v78 + 1))(v81, v77);
      if (v83)
      {
        uint64_t v84 = String.nilIfEmpty.getter();
        uint64_t v162 = v85;
        uint64_t v163 = (char *)v84;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v162 = 0;
        uint64_t v163 = 0;
      }
      uint64_t v72 = (uint64_t)v168;
    }
    uint64_t v86 = (uint64_t)v141;
    sub_10050C97C(v72, (uint64_t)v141);
    if (v79(v86, 1, v77) == 1)
    {
      sub_100003F10(v86, (uint64_t *)&unk_1006BB9C0);
      uint64_t v151 = 0;
      uint64_t v152 = 0;
    }
    else
    {
      FMIPAddress.streetAddressModern.getter();
      uint64_t v88 = v87;
      v164[1](v86, v77);
      if (v88)
      {
        uint64_t v89 = String.nilIfEmpty.getter();
        uint64_t v151 = v90;
        uint64_t v152 = v89;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v151 = 0;
        uint64_t v152 = 0;
      }
      uint64_t v72 = (uint64_t)v168;
    }
    sub_10050C97C(v72, v75);
    if (v79(v75, 1, v77) == 1)
    {
      sub_100003F10(v75, (uint64_t *)&unk_1006BB9C0);
      uint64_t v143 = 0;
      int v142 = 0;
      uint64_t v91 = v164;
    }
    else
    {
      FMIPAddress.smallAddressModern.getter();
      uint64_t v93 = v92;
      v164[1](v75, v77);
      if (v93)
      {
        uint64_t v143 = String.nilIfEmpty.getter();
        int v142 = v94;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v143 = 0;
        int v142 = 0;
      }
      uint64_t v91 = v164;
      uint64_t v72 = (uint64_t)v168;
    }
    sub_10050C97C(v72, v74);
    if (v79(v74, 1, v77) == 1)
    {
      sub_100003F10(v74, (uint64_t *)&unk_1006BB9C0);
    }
    else
    {
      FMIPAddress.mediumAddressModern.getter();
      uint64_t v96 = v95;
      v91[1](v74, v77);
      if (v96)
      {
        String.nilIfEmpty.getter();
        swift_bridgeObjectRelease();
      }
      uint64_t v72 = (uint64_t)v168;
    }
    sub_10050C97C(v72, v73);
    if (v79(v73, 1, v77) == 1)
    {
      sub_100003F10(v73, (uint64_t *)&unk_1006BB9C0);
    }
    else
    {
      FMIPAddress.largeAddressModern.getter();
      uint64_t v98 = v97;
      v91[1](v73, v77);
      if (v98)
      {
        String.nilIfEmpty.getter();
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v99 = v159;
    sub_10050C97C((uint64_t)v168, v159);
    if (v79(v99, 1, v77) == 1)
    {
      sub_100003F10(v99, (uint64_t *)&unk_1006BB9C0);
    }
    else
    {
      FMIPAddress.poiAddressModern.getter();
      uint64_t v101 = v100;
      v164[1](v99, v77);
      if (v101)
      {
        String.nilIfEmpty.getter();
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v102 = v160;
    uint64_t v103 = v161;
    uint64_t v104 = object;
    swift_bridgeObjectRetain();
    uint64_t v52 = countAndFlagsBits;
    PublishedLocation.Label.init(customLabel:coarseLabel:streetLabel:smallLabel:mediumLabel:largeLabel:poiLabel:)();
    if ((v167 & 1) == 0)
    {
      Swift::Int v120 = v156;
      uint64_t v121 = v157;
      uint64_t v122 = v158;
      (*(void (**)(char *, char *, uint64_t))(v157 + 16))(v156, v103, v158);
      uint64_t v123 = v153;
      uint64_t v124 = v165;
      v144(v153, v138, v165);
      if (v104)
      {
        v137(v123, v124);
      }
      else
      {
        uint64_t v126 = v148;
        unint64_t v127 = v147;
        uint64_t v128 = v149;
        (*(void (**)(char *, void, uint64_t))(v148 + 104))(v147, enum case for PublishedLocation.Label.Length.small(_:), v149);
        uint64_t v167 = PublishedLocation.Label.combinedNoFallbackLabel(maxLength:)();
        uint64_t v130 = v129;
        (*(void (**)(char *, uint64_t))(v126 + 8))(v127, v128);
        uint64_t v131 = (uint64_t)v146;
        v144(v146, (uint64_t)v123, v124);
        if (v130) {
          uint64_t v52 = v167;
        }
        else {
          uint64_t v52 = sub_10050AAB0(v131, 0);
        }
        uint64_t v132 = v131;
        uint64_t v133 = v137;
        v137((char *)v132, v124);
        v133(v123, v124);
      }
      uint64_t v134 = *(void (**)(char *, uint64_t))(v121 + 8);
      v134(v120, v122);
      v134(v103, v122);
      goto LABEL_55;
    }
    swift_bridgeObjectRelease();
    uint64_t v106 = v154;
    uint64_t v105 = v155;
    (*(void (**)(char *, void, uint64_t))(v155 + 104))(v154, enum case for PublishedLocation.Label.DetailLevel.detailed(_:), v102);
    uint64_t v52 = PublishedLocation.Label.primaryAndSecondaryNoFallbackLabel(detailLevel:)();
    uint64_t v108 = v107;
    uint64_t v109 = v102;
    uint64_t v111 = v110;
    uint64_t v113 = v112;
    (*(void (**)(char *, uint64_t))(v105 + 8))(v106, v109);
    if (v108)
    {
      uint64_t v114 = v165;
      if (v113)
      {
        uint64_t v169 = 0;
        unint64_t v170 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease();
        id v115 = [self mainBundle];
        v116._uint64_t countAndFlagsBits = 0xD000000000000027;
        v173._uint64_t countAndFlagsBits = 0xD000000000000039;
        v173._object = (void *)0x8000000100589FD0;
        v116._object = (void *)0x8000000100589FA0;
        v117._uint64_t countAndFlagsBits = 0;
        v117._object = (void *)0xE000000000000000;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v116, (Swift::String_optional)0, (NSBundle)v115, v117, v173);

        sub_10005D034((uint64_t *)&unk_1006AF790);
        uint64_t v118 = swift_allocObject();
        *(_OWORD *)(v118 + 16) = xmmword_10055B960;
        *(void *)(v118 + 56) = &type metadata for String;
        unint64_t v119 = sub_10007F2C8();
        *(void *)(v118 + 32) = v52;
        *(void *)(v118 + 40) = v108;
        *(void *)(v118 + 96) = &type metadata for String;
        *(void *)(v118 + 104) = v119;
        *(void *)(v118 + 64) = v119;
        *(void *)(v118 + 72) = v111;
        *(void *)(v118 + 80) = v113;
        uint64_t v52 = String.init(format:_:)();
        swift_bridgeObjectRelease();
LABEL_51:
        (*(void (**)(char *, uint64_t))(v157 + 8))(v103, v158);
LABEL_55:
        sub_100003F10((uint64_t)v168, (uint64_t *)&unk_1006BB9C0);
        return v52;
      }
      uint64_t v125 = (uint64_t)v150;
      v144(v150, v138, v165);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v125 = (uint64_t)v150;
      uint64_t v114 = v165;
      v144(v150, v138, v165);
      uint64_t v52 = sub_10050AAB0(v125, 1);
    }
    v137((char *)v125, v114);
    goto LABEL_51;
  }
  id v48 = [self mainBundle];
  v49._uint64_t countAndFlagsBits = 0xD000000000000011;
  v171._uint64_t countAndFlagsBits = 0xD000000000000018;
  v171._object = (void *)0x800000010057EF80;
  v49._object = (void *)0x8000000100596B40;
  v50.value._object = (void *)0x800000010057EF60;
  v50.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v51._uint64_t countAndFlagsBits = 0;
  v51._object = (void *)0xE000000000000000;
  uint64_t v52 = NSLocalizedString(_:tableName:bundle:value:comment:)(v49, v50, (NSBundle)v48, v51, v171)._countAndFlagsBits;

  return v52;
}

uint64_t sub_10050C2E4(uint64_t a1, char a2)
{
  uint64_t v3 = type metadata accessor for FormatStyleCapitalizationContext();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v54 = *(void *)(v7 - 8);
  uint64_t v55 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10005D034((uint64_t *)&unk_1006B2AE0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMIPLocation();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  FMIPItem.location.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100003F10((uint64_t)v12, (uint64_t *)&unk_1006B2AE0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    if (FMIPLocation.isOld.getter())
    {
      if (a2)
      {
        uint64_t v18 = (void *)FMIPLocation.location.getter();
        id v19 = [v18 timestamp];

        static Date._unconditionallyBridgeFromObjectiveC(_:)();
        static FormatStyleCapitalizationContext.middleOfSentence.getter();
        uint64_t v20 = sub_1000BC2AC((uint64_t)v6);
        uint64_t v22 = v21;
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        (*(void (**)(char *, uint64_t))(v54 + 8))(v9, v55);
      }
      else
      {
        uint64_t v25 = (void *)qword_1006D2648;
        if (qword_1006D2648)
        {
          id v26 = (id)qword_1006D2648;
        }
        else
        {
          id v29 = [objc_allocWithZone((Class)FMRelativeDateFormatter) init];
          [v29 setFormattingContext:5];
          uint64_t v30 = (void *)qword_1006D2648;
          qword_1006D2648 = (uint64_t)v29;
          id v26 = v29;

          uint64_t v25 = 0;
        }
        uint64_t v32 = v54;
        uint64_t v31 = v55;
        id v33 = v25;
        uint64_t v34 = (void *)FMIPLocation.location.getter();
        id v35 = [v34 timestamp];

        static Date._unconditionallyBridgeFromObjectiveC(_:)();
        Class isa = Date._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v31);
        id v37 = [v26 stringFromDate:isa];

        uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v22 = v38;
      }
      id v39 = [self mainBundle];
      v56._uint64_t countAndFlagsBits = 0xD000000000000018;
      v56._object = (void *)0x800000010057EF80;
      v40.value._object = (void *)0x800000010057EF60;
      v41._uint64_t countAndFlagsBits = 0x414C5F534D455449;
      v41._object = (void *)0xEF4E4545535F5453;
      v40.value._uint64_t countAndFlagsBits = 0xD000000000000013;
      v42._uint64_t countAndFlagsBits = 0;
      v42._object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v41, v40, (NSBundle)v39, v42, v56);

      sub_10005D034((uint64_t *)&unk_1006AF790);
      uint64_t v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = xmmword_10055B970;
      *(void *)(v43 + 56) = &type metadata for String;
      *(void *)(v43 + 64) = sub_10007F2C8();
      *(void *)(v43 + 32) = v20;
      *(void *)(v43 + 40) = v22;
      uint64_t v17 = String.init(format:_:)();
      swift_bridgeObjectRelease();
    }
    else if (a2)
    {
      uint64_t v23 = (void *)FMIPLocation.location.getter();
      id v24 = [v23 timestamp];

      static Date._unconditionallyBridgeFromObjectiveC(_:)();
      static FormatStyleCapitalizationContext.beginningOfSentence.getter();
      uint64_t v17 = sub_1000BC2AC((uint64_t)v6);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v9, v55);
    }
    else
    {
      uint64_t v27 = (void *)qword_1006D2650;
      if (qword_1006D2650)
      {
        id v28 = (id)qword_1006D2650;
      }
      else
      {
        id v44 = [objc_allocWithZone((Class)FMRelativeDateFormatter) init];
        [v44 setFormattingContext:2];
        uint64_t v45 = (void *)qword_1006D2650;
        qword_1006D2650 = (uint64_t)v44;
        id v28 = v44;

        uint64_t v27 = 0;
      }
      uint64_t v47 = v54;
      uint64_t v46 = v55;
      id v48 = v27;
      Swift::String v49 = (void *)FMIPLocation.location.getter();
      id v50 = [v49 timestamp];

      static Date._unconditionallyBridgeFromObjectiveC(_:)();
      Class v51 = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v47 + 8))(v9, v46);
      id v52 = [v28 stringFromDate:v51];

      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return v17;
}

uint64_t sub_10050C97C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006BB9C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10050C9E4()
{
  unint64_t result = qword_1006BEB30;
  if (!qword_1006BEB30)
  {
    type metadata accessor for FMIPItemState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006BEB30);
  }
  return result;
}

char *sub_10050CA3C()
{
  uint64_t v1 = sub_10005D034((uint64_t *)&unk_1006C0CE0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v0[OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v4 = OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_lostStatusRow;
  uint64_t v5 = type metadata accessor for FMPlatterIcon();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v26 = v6 + 56;
  uint64_t v27 = v7;
  v7(v3, 1, 1, v5);
  uint64_t v8 = qword_1006AE228;
  uint64_t v9 = v0;
  if (v8 != -1) {
    swift_once();
  }
  double v10 = *(double *)&qword_1006D20C8;
  id v11 = objc_allocWithZone((Class)type metadata accessor for FMMultiSettingsRowView());
  *(void *)&v9[v4] = sub_1004FC584(0, 0, 0, (uint64_t)v3, 1, 0, 1, v10);
  v9[OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_disabled] = 0;

  uint64_t v12 = self;
  id v13 = [v12 mainBundle];
  v14._uint64_t countAndFlagsBits = 0xD000000000000022;
  v28._object = (void *)0x800000010057EF80;
  v14._object = (void *)0x80000001005A0C00;
  v15.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v15.value._object = (void *)0x800000010057EF60;
  v16._uint64_t countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v28._uint64_t countAndFlagsBits = 0xD000000000000018;
  Swift::String v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v28);
  uint64_t countAndFlagsBits = v17._countAndFlagsBits;

  swift_storeEnumTagMultiPayload();
  v27(v3, 0, 1, v5);
  id v18 = [v12 mainBundle];
  v19._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v29._object = (void *)0x800000010057EF80;
  v19._object = (void *)0x80000001005A0C30;
  v20.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v20.value._object = (void *)0x800000010057EF60;
  v21._uint64_t countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v29._uint64_t countAndFlagsBits = 0xD000000000000018;
  Swift::String v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v29);

  return sub_100456A50(countAndFlagsBits, (uint64_t)v17._object, 0, 0, (uint64_t)v3, v22._countAndFlagsBits, (uint64_t)v22._object, 0, 0, 0, 0);
}

void sub_10050CD50()
{
  id v1 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"handleStatusRowTap"];
  [*(id *)(v0 + OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_lostStatusRow) addGestureRecognizer:v1];
}

void sub_10050CDD0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  double v10 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FMItemDetailViewModel();
  if ((*(unsigned char *)(a1 + *(int *)(v11 + 76)) & 8) != 0)
  {
    uint64_t v12 = v11;
    Swift::String v69 = v10;
    uint64_t v70 = v8;
    uint64_t v71 = v7;
    id v13 = [self mainBundle];
    v74._uint64_t countAndFlagsBits = 0xD000000000000018;
    v14._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
    v74._object = (void *)0x800000010057EF80;
    v14._object = (void *)0x80000001005A0C50;
    v15.value._object = (void *)0x800000010057EF60;
    v15.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v16._uint64_t countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    Swift::String v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v74);

    uint64_t v72 = OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_lostStatusRow;
    id v18 = *(char **)(v2 + OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_lostStatusRow);
    Swift::String v19 = (Swift::String *)&v18[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_title];
    *Swift::String v19 = v17;
    Swift::String_optional v20 = v18;
    swift_bridgeObjectRelease();
    Swift::String v21 = *(void **)&v20[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_titleLabel];
    if (v19->_object)
    {
      id v22 = v21;
      swift_bridgeObjectRetain();
      NSString v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v24 = v21;
      NSString v23 = 0;
    }
    uint64_t v25 = v72;
    [v21 setText:v23];

    uint64_t v26 = *(void **)(*(void *)(v2 + v25) + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_titleLabel);
    uint64_t v27 = self;
    id v28 = v26;
    id v29 = [v27 labelColor];
    [v28 setTextColor:v29];

    sub_1002816B8(a1 + *(int *)(v12 + 44), (uint64_t)v6);
    uint64_t v31 = v70;
    uint64_t v30 = v71;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v6, 1, v71) == 1)
    {
      sub_1000BCAB0((uint64_t)v6);
      uint64_t v32 = *(char **)(v2 + v25);
      id v33 = &v32[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle];
      *(void *)id v33 = 0;
      *((void *)v33 + 1) = 0;
      uint64_t v34 = v32;
      swift_bridgeObjectRelease();
      id v35 = *(void **)&v34[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel];
      if (*((void *)v33 + 1))
      {
        id v36 = v35;
        swift_bridgeObjectRetain();
        NSString v37 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        id v42 = v35;
        NSString v37 = 0;
      }
      [v35 setText:v37];

      uint64_t v43 = v72;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v69, v6, v30);
      uint64_t v38 = *(char **)(v2 + v25);
      id v39 = (void *)qword_1006D2650;
      if (qword_1006D2650)
      {
        Swift::String_optional v40 = v38;
        id v41 = v39;
      }
      else
      {
        id v44 = objc_allocWithZone((Class)FMRelativeDateFormatter);
        uint64_t v45 = v38;
        id v46 = [v44 init];
        [v46 setFormattingContext:2];
        uint64_t v47 = (void *)qword_1006D2650;
        qword_1006D2650 = (uint64_t)v46;
        id v41 = v46;

        id v39 = 0;
      }
      id v48 = v39;
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      id v50 = [v41 stringFromDate:isa];

      uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v53 = v52;

      uint64_t v54 = (uint64_t *)&v38[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle];
      *uint64_t v54 = v51;
      v54[1] = v53;
      swift_bridgeObjectRelease();
      uint64_t v55 = *(void **)&v38[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel];
      if (v54[1])
      {
        id v56 = v55;
        swift_bridgeObjectRetain();
        NSString v57 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        id v58 = v55;
        NSString v57 = 0;
      }
      uint64_t v43 = v72;
      [v55 setText:v57];

      (*(void (**)(char *, uint64_t))(v70 + 8))(v69, v71);
    }
    Swift::String v59 = *(void **)(*(void *)(v2 + v43) + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel);
    Swift::String_optional v60 = self;
    uint64_t v61 = v43;
    id v62 = v59;
    id v63 = [v60 preferredFontForTextStyle:UIFontTextStyleSubheadline];
    [v62 setFont:v63];

    id v64 = *(id *)(*(void *)(v2 + v43) + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel);
    id v65 = [v27 secondaryLabelColor];
    [v64 setTextColor:v65];

    uint64_t v66 = *(void *)(v2 + v61);
    *(unsigned char *)(v66 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separated) = 0;
    [*(id *)(v66 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separator) setHidden:1];
    id v67 = [*(id *)(*(void *)(v2 + v61) + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView) layer];
    [v67 setCornerRadius:_UISheetCornerRadius];

    id v68 = [*(id *)(*(void *)(v2 + v61) + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView) layer];
    [v68 setMaskedCorners:12];

    [*(id *)(v2 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_contentStackView) addArrangedSubview:*(void *)(v2 + v61)];
    *(unsigned char *)(v2 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionButtonHidden) = 1;
    sub_1004591F4();
  }
  else
  {
    [*(id *)(v2 + OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_lostStatusRow) removeFromSuperview];
    *(unsigned char *)(v2 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionButtonHidden) = 0;
    sub_1004591F4();
  }
}

id sub_10050D4E0()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_disabled;
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButton] setEnabled:(v0[OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_disabled] & 1) == 0];
  int v2 = v0[v1];
  if (qword_1006AE228 != -1) {
    swift_once();
  }
  if (v2) {
    double v3 = 0.35;
  }
  else {
    double v3 = 1.0;
  }
  id v4 = [v0 traitCollection];
  id v5 = [v4 userInterfaceStyle];
  uint64_t v6 = self;
  uint64_t v7 = &selRef_tertiarySystemFillColor;
  if (v5 != (id)2) {
    uint64_t v7 = &selRef_whiteColor;
  }
  id v8 = [v6 *v7];

  [v0 setBackgroundColor:v8];
  uint64_t v9 = *(void **)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_titleLabel];

  return [v9 setAlpha:v3];
}

uint64_t sub_10050D638()
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000606BC(v0, (uint64_t)qword_1006D1E98);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    double v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)double v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "FMItemMarkAsLostview: User pressed activate notify me", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1003B2584();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_10050D804()
{
  sub_100068760(v0 + OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_delegate);
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_lostStatusRow);
}

id sub_10050D844()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMItemMarkAsLostView();
  return [super dealloc];
}

uint64_t type metadata accessor for FMItemMarkAsLostView()
{
  return self;
}

void sub_10050D8E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10005D034((uint64_t *)&unk_1006C0CE0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v1[OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v5 = OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_lostStatusRow;
  uint64_t v6 = type metadata accessor for FMPlatterIcon();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  if (qword_1006AE228 != -1) {
    swift_once();
  }
  double v7 = *(double *)&qword_1006D20C8;
  id v8 = objc_allocWithZone((Class)type metadata accessor for FMMultiSettingsRowView());
  *(void *)&v1[v5] = sub_1004FC584(0, 0, 0, (uint64_t)v4, 1, 0, 1, v7);
  v1[OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_disabled] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

char *sub_10050DA80(uint64_t a1)
{
  uint64_t v2 = v1;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v4 = [self mainBundle];
  v12._uint64_t countAndFlagsBits = 0xD000000000000033;
  v12._object = (void *)0x80000001005A0D50;
  v5._object = (void *)0x80000001005A0D20;
  v5._uint64_t countAndFlagsBits = 0xD000000000000021;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v12);

  id v7 = objc_allocWithZone(v2);
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v9 = (char *)[v7 initWithTitle:v8 detailText:0 icon:0];

  *(void *)&v9[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_mediator] = a1;
  double v10 = v9;
  swift_retain();
  swift_release();
  sub_10050E710();
  sub_10050ED78();

  swift_release();
  return v10;
}

void sub_10050DBE4()
{
  qword_1006D2910 = 0x4044000000000000;
}

unint64_t sub_10050DBF4(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x535F474154524941;
      break;
    case 2:
      unint64_t result = 0x50415F4843544157;
      break;
    case 3:
      unint64_t result = 0x5F53444F50524941;
      break;
    case 4:
      unint64_t result = 0x52454B4E4954;
      break;
    case 5:
      unint64_t result = 0x5F594D5F444E4946;
      break;
    case 6:
      unint64_t result = 0x4E47495345444552;
      break;
    case 7:
      unint64_t result = 0x554F535F59414C50;
      break;
    case 8:
      unint64_t result = 0x5F53415F4B52414DLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000017;
      break;
    case 10:
      unint64_t result = 0x4148535F4D455449;
      break;
    case 11:
      unint64_t result = 0x454957455453;
      break;
    case 12:
      unint64_t result = 0x4542454C424D5542;
      break;
    case 13:
      unint64_t result = 0x41425245564C4953;
      break;
    default:
      return result;
  }
  return result;
}

Class sub_10050DDF4(char a1)
{
  sub_100006060(0, (unint64_t *)&qword_1006BA4D0);
  v2._uint64_t countAndFlagsBits = 0x64656E69626D6F43;
  v2._object = (void *)0xEF6E6F6349707041;
  v3.super.Class isa = UIImage.init(imageLiteralResourceName:)(v2).super.isa;
  Class isa = (Class)[self configurationWithScale:-1];
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 9:
    case 10:
    case 12:
    case 13:
      NSString v11 = String._bridgeToObjectiveC()();
      id v6 = [self systemImageNamed:v11];

      id v7 = [v6 imageByApplyingSymbolConfiguration:isa];
      goto LABEL_8;
    case 6:
      unint64_t v8 = 0xD000000000000013;
      unint64_t v9 = 0x80000001005A0E90;
      goto LABEL_6;
    case 7:
      unint64_t v8 = 0x6E756F5379616C50;
      unint64_t v9 = 0xEF6E6F6349424F64;
      goto LABEL_6;
    case 8:
      unint64_t v8 = 0x6F4C73416B72614DLL;
      unint64_t v9 = 0xEE006E6F63497473;
LABEL_6:
      v10.super.Class isa = UIImage.init(imageLiteralResourceName:)(*(Swift::String *)&v8).super.isa;

      goto LABEL_9;
    default:
      NSString v5 = String._bridgeToObjectiveC()();
      id v6 = [self _systemImageNamed:v5];

      id v7 = [v6 imageByApplyingSymbolConfiguration:isa];
LABEL_8:
      v10.super.Class isa = (Class)v7;

      Class isa = v3.super.isa;
      if (v10.super.isa)
      {
LABEL_9:

        return v10.super.isa;
      }
      return v3.super.isa;
  }
}

uint64_t sub_10050E3E0(uint64_t a1, void *a2, char a3, unsigned __int8 a4)
{
  if (a4 >= 0xAu)
  {
    switch(a4)
    {
      case 0xBu:
        if ((a3 & 1) == 0)
        {
          id v12 = [self mainBundle];
          unint64_t v14 = 0xD000000000000017;
          unint64_t v21 = 0x8000000100585120;
          unint64_t v16 = 0x8000000100585100;
          uint64_t v17 = a1;
          id v18 = a2;
          unint64_t v13 = 0xD000000000000012;
          goto LABEL_16;
        }
        return sub_10023041C(a1, a2);
      case 0xCu:
        id v12 = [self mainBundle];
        unint64_t v13 = 0xD000000000000010;
        unint64_t v14 = 0xD000000000000015;
        unint64_t v21 = 0x8000000100587630;
        Swift::String_optional v15 = "Localizable-B698";
        goto LABEL_15;
      case 0xDu:
        id v12 = [self mainBundle];
        unint64_t v14 = 0xD000000000000018;
        unint64_t v13 = 0xD00000000000001ALL;
        unint64_t v21 = 0x80000001005828D0;
        Swift::String_optional v15 = "Localizable-COWARDLYCARROT";
        goto LABEL_15;
      default:
        id v12 = [self mainBundle];
        unint64_t v13 = 0xD000000000000013;
        unint64_t v14 = 0xD000000000000018;
        unint64_t v21 = 0x80000001005828D0;
        Swift::String_optional v15 = "Localizable-SHARING";
LABEL_15:
        unint64_t v16 = (unint64_t)(v15 - 32) | 0x8000000000000000;
        uint64_t v17 = a1;
        id v18 = a2;
LABEL_16:
        v19._uint64_t countAndFlagsBits = 0;
        v19._object = (void *)0xE000000000000000;
        uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v17, *(Swift::String_optional *)&v13, (NSBundle)v12, v19, *(Swift::String *)&v14)._countAndFlagsBits;

        uint64_t result = countAndFlagsBits;
        break;
    }
  }
  else if (a3)
  {
    return sub_10022FAF4(a1, a2);
  }
  else
  {
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    v7._uint64_t countAndFlagsBits = a1;
    v7._object = a2;
    String.append(_:)(v7);
    id v8 = [self mainBundle];
    v23._object = (void *)0x800000010057F630;
    v9._uint64_t countAndFlagsBits = a1;
    v9._object = a2;
    v10._uint64_t countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    v23._uint64_t countAndFlagsBits = 0xD000000000000012;
    uint64_t v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v23)._countAndFlagsBits;
    swift_bridgeObjectRelease();

    return v11;
  }
  return result;
}

void sub_10050E710()
{
  if (*(void *)&v0[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_mediator])
  {
    uint64_t v1 = v0;
    sub_100006060(0, (unint64_t *)&qword_1006B9F00);
    swift_retain();
    char v2 = static FMSystemInfo.isKoreaSKU()();
    UIImage v3 = sub_10007DBB8(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v5 = v3[2];
    unint64_t v4 = v3[3];
    if (v2) {
      char v6 = 10;
    }
    else {
      char v6 = 13;
    }
    if (v5 >= v4 >> 1) {
      UIImage v3 = sub_10007DBB8((void *)(v4 > 1), v5 + 1, 1, v3);
    }
    v3[2] = v5 + 1;
    *((unsigned char *)v3 + v5 + 32) = v6;
    if (static FMSystemInfo.isKoreaSKU()())
    {
      uint64_t v7 = swift_bridgeObjectRetain();
      uint64_t v8 = sub_10050FB10(v7);
      swift_bridgeObjectRelease_n();
      UIImage v3 = (void *)v8;
    }
    uint64_t v9 = v3[2];
    if (v9) {
      goto LABEL_15;
    }
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_1000606BC(v10, (uint64_t)qword_1006D1E98);
    os_log_type_t v11 = static os_log_type_t.error.getter();
    id v12 = Logger.logObject.getter();
    os_log_type_t v13 = v11;
    if (os_log_type_enabled(v12, v11))
    {
      unint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(_DWORD *)unint64_t v14 = 136315138;
      sub_1000606F4(0xD00000000000005BLL, 0x80000001005A0DB0, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v9 = v3[2];
    if (v9)
    {
LABEL_15:
      swift_bridgeObjectRetain();
      uint64_t v15 = 0;
      uint64_t v44 = v9;
      do
      {
        int v16 = *((unsigned __int8 *)v3 + v15 + 32);
        uint64_t v45 = 0;
        id v46 = (void *)0xE000000000000000;
        _StringGuts.grow(_:)(24);
        swift_bridgeObjectRelease();
        uint64_t v45 = 0xD000000000000013;
        id v46 = (void *)0x80000001005A0D90;
        v17._uint64_t countAndFlagsBits = sub_10050DBF4(v16);
        String.append(_:)(v17);
        swift_bridgeObjectRelease();
        v18._uint64_t countAndFlagsBits = 95;
        v18._object = (void *)0xE100000000000000;
        String.append(_:)(v18);
        v19._uint64_t countAndFlagsBits = 0x454C544954;
        v19._object = (void *)0xE500000000000000;
        String.append(_:)(v19);
        sub_10050E3E0(v45, v46, 0, v16);
        Swift::String_optional v20 = v3;
        unint64_t v21 = v1;
        swift_bridgeObjectRelease();
        NSString v22 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        char v24 = v16 == 5 || v16 == 11;
        ++v15;
        uint64_t v45 = 0;
        id v46 = (void *)0xE000000000000000;
        _StringGuts.grow(_:)(24);
        swift_bridgeObjectRelease();
        uint64_t v45 = 0xD000000000000013;
        id v46 = (void *)0x80000001005A0D90;
        v25._uint64_t countAndFlagsBits = sub_10050DBF4(v16);
        String.append(_:)(v25);
        swift_bridgeObjectRelease();
        v26._uint64_t countAndFlagsBits = 95;
        v26._object = (void *)0xE100000000000000;
        String.append(_:)(v26);
        v27._uint64_t countAndFlagsBits = 0x454C544954425553;
        v27._object = (void *)0xE800000000000000;
        String.append(_:)(v27);
        sub_10050E3E0(v45, v46, v24, v16);
        swift_bridgeObjectRelease();
        uint64_t v1 = v21;
        UIImage v3 = v20;
        NSString v28 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        Class v29 = sub_10050DDF4(v16);
        [v1 addBulletedListItemWithTitle:v22 description:v28 image:v29];
      }
      while (v44 != v15);
      swift_bridgeObjectRelease();
    }
    uint64_t v30 = self;
    NSString v31 = String._bridgeToObjectiveC()();
    id v32 = [v30 linkWithBundleIdentifier:v31];

    id v33 = [v1 buttonTray];
    [v33 setPrivacyLinkController:v32];

    uint64_t v34 = *(void **)&v1[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_activityIndicator];
    [v34 setHidden:1];
    id v35 = v1;
    id v36 = *(void **)&v1[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_boldButton];
    uint64_t v45 = 0;
    id v46 = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v37 = [self mainBundle];
    v38._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
    v47._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
    v47._object = (void *)0x80000001005902A0;
    v38._object = (void *)0x8000000100590280;
    v39._uint64_t countAndFlagsBits = 0;
    v39._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v38, (Swift::String_optional)0, (NSBundle)v37, v39, v47);

    NSString v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v36 setTitle:v40 forState:0];

    [v36 addTarget:v35 action:"continue" forControlEvents:64];
    id v41 = [v35 buttonTray];
    [v41 addButton:v36];

    id v42 = [v35 view];
    if (v42)
    {
      uint64_t v43 = v42;
      [v42 addSubview:v34];
      swift_bridgeObjectRelease();

      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10050ED78()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_activityIndicator];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10055C1E0;
  id v3 = [v1 centerXAnchor];
  id v4 = [v0 view];
  if (!v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  unint64_t v5 = v4;
  id v6 = [v4 centerXAnchor];

  id v7 = [v3 constraintEqualToAnchor:v6];
  *(void *)(v2 + 32) = v7;
  id v8 = [v1 bottomAnchor];
  id v9 = [v0 view];
  if (!v9)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v10 = v9;
  os_log_type_t v11 = self;
  id v12 = [v10 safeAreaLayoutGuide];

  id v13 = [v12 bottomAnchor];
  if (qword_1006AE470 != -1) {
    swift_once();
  }
  id v14 = [v8 constraintEqualToAnchor:v13 constant:-*(double *)&qword_1006D2910];

  *(void *)(v2 + 40) = v14;
  specialized Array._endMutation()();
  sub_100006060(0, (unint64_t *)&qword_1006AEE60);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v11 activateConstraints:isa];
}

void sub_10050F198()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_mediator];
  if (v1)
  {
    uint64_t v2 = v0;
    id v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_boldButton];
    swift_retain();
    [v3 setHidden:1];
    id v4 = *(void **)&v2[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_activityIndicator];
    [v4 setHidden:0];
    [v4 startAnimating];
    id v5 = [v2 navigationItem];
    [v5 setHidesBackButton:1 animated:1];

    id v6 = *(id *)(v1 + 16);
    uint64_t v7 = sub_100423278();

    if (v7 == 3 || v7 == 0)
    {
      id v9 = [v2 parentViewController];
      if (v9)
      {
        uint64_t v10 = v9;
        self;
        if (swift_dynamicCastObjCClass()) {
          sub_100138EF8(1, 0, 0);
        }
      }
      swift_release();
    }
    else
    {
      if (qword_1006AE190 != -1) {
        swift_once();
      }
      uint64_t v11 = type metadata accessor for Logger();
      sub_1000606BC(v11, (uint64_t)qword_1006D1E98);
      swift_retain_n();
      id v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        id v14 = (uint8_t *)swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        *(_DWORD *)id v14 = 136315138;
        uint64_t v26 = v15;
        uint64_t v16 = sub_100423278();
        BOOL v17 = (v16 & 0xFFFFFFFFFFFFFFFDLL) == 1;
        if ((v16 & 0xFFFFFFFFFFFFFFFDLL) == 1) {
          uint64_t v18 = 1702195828;
        }
        else {
          uint64_t v18 = 0x65736C6166;
        }
        if (v17) {
          unint64_t v19 = 0xE400000000000000;
        }
        else {
          unint64_t v19 = 0xE500000000000000;
        }
        uint64_t v25 = sub_1000606F4(v18, v19, &v26);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMNoveltyViewController: Not showing notification prompt. Notifications Off? %s", v14, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v21 = Strong;
        NSString v22 = Logger.logObject.getter();
        os_log_type_t v23 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v22, v23))
        {
          char v24 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)char v24 = 0;
          _os_log_impl((void *)&_mh_execute_header, v22, v23, "FMOnboardingNavigationController: viewControllerWantsToContinue", v24, 2u);
          swift_slowDealloc();
        }

        *(unsigned char *)(v21 + OBJC_IVAR____TtC6FindMy32FMOnboardingNavigationController_isDissmissable) = 1;
        sub_1002EED54();
        swift_unknownObjectRelease();
      }
      [v2 dismissViewControllerAnimated:1 completion:v25, v26];
      swift_release();
    }
  }
}

id sub_10050F5E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v8 = v7;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v8[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_mediator] = 0;
  uint64_t v12 = OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_boldButton;
  os_log_type_t v13 = self;
  id v14 = v8;
  *(void *)&v8[v12] = [v13 boldButton];
  uint64_t v15 = OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_activityIndicator;
  *(void *)&v14[v15] = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithActivityIndicatorStyle:100];
  uint64_t v16 = &v14[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_onboardingPrivacyBundleIdentifier];
  *(void *)uint64_t v16 = 0xD00000000000001BLL;
  *((void *)v16 + 1) = 0x80000001005A0D00;
  *(void *)&v14[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();

  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a4)
  {
    NSString v18 = 0;
    if (a6) {
      goto LABEL_3;
    }
LABEL_5:
    NSString v19 = 0;
    goto LABEL_6;
  }
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a6) {
    goto LABEL_5;
  }
LABEL_3:
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_6:
  v24.receiver = v14;
  v24.super_class = ObjectType;
  id v20 = [super initWithTitle:v17 detailText:v18 symbolName:v19 contentLayout:a7, a5];

  return v20;
}

id sub_10050F844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v6[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_mediator] = 0;
  uint64_t v11 = OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_boldButton;
  uint64_t v12 = self;
  os_log_type_t v13 = v7;
  *(void *)&v7[v11] = [v12 boldButton];
  uint64_t v14 = OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_activityIndicator;
  *(void *)&v13[v14] = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithActivityIndicatorStyle:100];
  uint64_t v15 = &v13[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_onboardingPrivacyBundleIdentifier];
  *(void *)uint64_t v15 = 0xD00000000000001BLL;
  *((void *)v15 + 1) = 0x80000001005A0D00;
  *(void *)&v13[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();

  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a4)
  {
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v17 = 0;
  }
  v21.receiver = v13;
  v21.super_class = ObjectType;
  [super initWithTitle:v16 detailText:v17 icon:a5 contentLayout:a6];

  return v18;
}

uint64_t type metadata accessor for FMNoveltyViewController()
{
  return self;
}

uint64_t sub_10050FB10(uint64_t result)
{
  unint64_t v1 = 0;
  unint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = result + 32;
LABEL_2:
  if (v1 <= v2) {
    unint64_t v4 = v2;
  }
  else {
    unint64_t v4 = v1;
  }
  while (1)
  {
    if (v2 == v1) {
      return (uint64_t)_swiftEmptyArrayStorage;
    }
    if (v4 == v1) {
      break;
    }
    unsigned int v5 = *(unsigned __int8 *)(v3 + v1++);
    if (v5 <= 0xA && v5 != 3)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = sub_10013EA74(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v7 = _swiftEmptyArrayStorage[2];
      unint64_t v6 = _swiftEmptyArrayStorage[3];
      if (v7 >= v6 >> 1) {
        uint64_t result = sub_10013EA74(v6 > 1, v7 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v7 + 1;
      *((unsigned char *)&_swiftEmptyArrayStorage[4] + v7) = v5;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for FMNoveltyViewController.BulletPoint(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMNoveltyViewController.BulletPoint(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *uint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10050FD68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMNoveltyViewController.BulletPoint()
{
  return &type metadata for FMNoveltyViewController.BulletPoint;
}

unint64_t sub_10050FDA4()
{
  unint64_t result = qword_1006C18D8;
  if (!qword_1006C18D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C18D8);
  }
  return result;
}

void sub_10050FDFC(void *a1)
{
  int v3 = [a1 viewControllerForKey:UITransitionContextToViewControllerKey];
  if (!v3) {
    goto LABEL_21;
  }
  unsigned int v4 = v3;
  uint64_t v5 = [a1 viewControllerForKey:UITransitionContextToViewControllerKey];
  if (!v5)
  {
LABEL_20:

LABEL_21:
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_1000606BC(v21, (uint64_t)qword_1006D1E98);
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v22))
    {
      os_log_type_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v22, "FMCardPresentationTransition: Invalid presented view controller", v23, 2u);
      swift_slowDealloc();
    }
    goto LABEL_25;
  }
  unsigned int v6 = v5;
  swift_getObjectType();
  uint64_t v7 = swift_conformsToProtocol2();
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v7) {
    uint64_t v9 = (uint64_t)v6;
  }
  else {
    uint64_t v9 = 0;
  }
  if (!v9)
  {

    goto LABEL_20;
  }
  uint64_t v10 = [a1 viewControllerForKey:UITransitionContextFromViewControllerKey];
  if (v10)
  {
    uint64_t v30 = v10;
    if (*(double *)(v1 + OBJC_IVAR____TtC6FindMy16FMCardTransition_duration) == 0.0)
    {
      [v4 viewWillAppear:0];
      uint64_t v11 = [v4 view];
      if (v11)
      {
        uint64_t v12 = v11;
        os_log_type_t v13 = [v30 view];
        if (v13)
        {
          uint64_t v14 = v13;
          type metadata accessor for FMCardContainerViewController();
          uint64_t v15 = swift_dynamicCastClass();
          if (v15)
          {
            uint64_t v16 = v15;
            NSString v17 = v30;
            [v14 bounds];
            double Width = CGRectGetWidth(v32);
            [v14 bounds];
            double Height = CGRectGetHeight(v33);
            uint64_t ObjectType = swift_getObjectType();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 24))(v9, v8, v16, ObjectType, v8);
            [v12 setAlpha:1.0];
            [v12 setHidden:0];
            -[NSObject setFrame:](v14, "setFrame:", 0.0, Height, Width, Height);

            uint64_t v12 = v14;
            uint64_t v14 = v17;
          }

          uint64_t v12 = v14;
        }
      }
      [a1 completeTransition:1];

LABEL_25:
      objc_super v24 = v30;
      goto LABEL_26;
    }
    [v4 viewWillAppear:1];
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = a1;
    swift_unknownObjectRetain();
    sub_1005102C4(v9, v8, v4, v30, (uint64_t)sub_1001A2FA8, v29);
    swift_release();

    objc_super v24 = v6;
  }
  else
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_1000606BC(v25, (uint64_t)qword_1006D1E98);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      NSString v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "FMCardPresentationTransition: Invalid presenting view controller", v28, 2u);
      swift_slowDealloc();
    }

    objc_super v24 = v4;
  }
LABEL_26:
}

void sub_1005102C4(uint64_t a1, uint64_t a2, id a3, void *a4, uint64_t a5, uint64_t a6)
{
  id v12 = [a3 view];
  if (v12)
  {
    id v32 = v12;
    id v13 = [a4 view];
    if (v13)
    {
      id v31 = v13;
      type metadata accessor for FMCardContainerViewController();
      uint64_t v14 = swift_dynamicCastClass();
      if (v14)
      {
        uint64_t v15 = v14;
        id v30 = a4;
        [v31 bounds];
        double Width = CGRectGetWidth(v40);
        [v31 bounds];
        double Height = CGRectGetHeight(v41);
        [v32 setHidden:0];
        [v32 setAlpha:1.0];
        [v32 setFrame:CGRectMake(0.0, 0.0, Width, Height)];
        id v18 = self;
        double v19 = *(double *)&v6[OBJC_IVAR____TtC6FindMy16FMCardTransition_duration];
        double v20 = *(double *)&v6[OBJC_IVAR____TtC6FindMy16FMCardTransition_delay];
        uint64_t v21 = (double *)swift_allocObject();
        *((void *)v21 + 2) = v6;
        *((void *)v21 + 3) = a1;
        *((void *)v21 + 4) = a2;
        *((void *)v21 + 5) = v15;
        *((void *)v21 + 6) = v31;
        v21[7] = Width;
        v21[8] = Height;
        *((void *)v21 + 9) = v32;
        id v37 = sub_10051094C;
        Swift::String v38 = v21;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v34 = 1107296256;
        id v35 = sub_10003C410;
        id v36 = &unk_100643790;
        os_log_type_t v22 = _Block_copy(&aBlock);
        id v23 = v30;
        objc_super v24 = v6;
        swift_unknownObjectRetain();
        id v25 = v31;
        id v26 = v32;
        swift_release();
        uint64_t v27 = swift_allocObject();
        *(void *)(v27 + 16) = a5;
        *(void *)(v27 + 24) = a6;
        id v37 = sub_100024A68;
        Swift::String v38 = (double *)v27;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v34 = 1107296256;
        id v35 = sub_1002F8BC0;
        id v36 = &unk_1006437E0;
        NSString v28 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        [v18 animateKeyframesWithDuration:4096 delay:v22 options:v28 animations:v19 completion:v20];
        _Block_release(v28);
        _Block_release(v22);

        return;
      }

      uint64_t v29 = v31;
    }
    else
    {
      uint64_t v29 = v32;
    }
  }
}

void sub_10051060C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, double a7, double a8)
{
  uint64_t v16 = self;
  double v17 = *(double *)(a1 + OBJC_IVAR____TtC6FindMy16FMCardTransition_duration);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a2;
  *(void *)(v18 + 24) = a3;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(double *)(v18 + 48) = a7;
  *(double *)(v18 + 56) = a8;
  *(void *)(v18 + 64) = a6;
  v23[4] = sub_1005109EC;
  v23[5] = v18;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 1107296256;
  uint64_t v23[2] = sub_10003C410;
  v23[3] = &unk_100643830;
  double v19 = _Block_copy(v23);
  swift_unknownObjectRetain();
  id v20 = a4;
  id v21 = a5;
  id v22 = a6;
  swift_release();
  [v16 addKeyframeWithRelativeStartTime:v19 relativeDuration:0.0 animations:v17];
  _Block_release(v19);
}

id sub_100510764(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, double a6, double a7)
{
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 24))(a1, a2, a3, ObjectType, a2);
  [a4 setFrame:0.0 a7 a6 a7];

  return [a5 setAlpha:1.0];
}

id sub_100510864()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMCardDismissedCompactTransition();
  return [super dealloc];
}

uint64_t type metadata accessor for FMCardDismissedCompactTransition()
{
  return self;
}

uint64_t sub_1005108BC()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005108F4()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

void sub_10051094C()
{
  sub_10051060C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(void **)(v0 + 72), *(double *)(v0 + 56), *(double *)(v0 + 64));
}

uint64_t sub_100510964()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10051099C()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

id sub_1005109EC()
{
  return sub_100510764(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 64), *(double *)(v0 + 48), *(double *)(v0 + 56));
}

uint64_t sub_100510A08()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6FindMy17FMETASubscription_identifier;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100068760(v0 + OBJC_IVAR____TtC6FindMy17FMETASubscription_subscriber);

  return swift_deallocClassInstance();
}

uint64_t sub_100510AB8()
{
  return type metadata accessor for FMETASubscription();
}

uint64_t type metadata accessor for FMETASubscription()
{
  uint64_t result = qword_1006C1930;
  if (!qword_1006C1930) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100510B0C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

Swift::Int sub_100510BA4()
{
  return Hasher._finalize()();
}

uint64_t sub_100510C3C()
{
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_100510CC4()
{
  return Hasher._finalize()();
}

uint64_t sub_100510D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7)
{
  uint64_t v15 = v7 + OBJC_IVAR____TtC6FindMy17FMETASubscription_subscriber;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v17 = *(void *)(v15 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double))(v17 + 8))(a1, a2, a3, a4, a5, ObjectType, v17, a6, a7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100510E40()
{
  return static UUID.== infix(_:_:)();
}

uint64_t sub_100510E5C()
{
  return sub_100510EA4(&qword_1006C19F0, (void (*)(uint64_t))type metadata accessor for FMETASubscription);
}

uint64_t sub_100510EA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_100510EEC(void *a1)
{
  uint64_t v3 = sub_10005D034((uint64_t *)&unk_1006C0CE0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_collapsed] = 1;
  uint64_t v6 = OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_fidelitySegment;
  sub_10005D034(&qword_1006B2B80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10055BD40;
  *(void *)(v7 + 32) = 7827276;
  *(void *)(v7 + 40) = 0xE300000000000000;
  *(void *)(v7 + 56) = &type metadata for String;
  *(void *)(v7 + 64) = 0x6D756964654DLL;
  *(void *)(v7 + 72) = 0xE600000000000000;
  *(void *)(v7 + 120) = &type metadata for String;
  *(void *)(v7 + 88) = &type metadata for String;
  *(void *)(v7 + 96) = 1751607624;
  *(void *)(v7 + 104) = 0xE400000000000000;
  id v8 = objc_allocWithZone((Class)UISegmentedControl);
  uint64_t v9 = v1;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v11 = [v8 initWithItems:isa];

  *(void *)&v1[v6] = v11;
  *(void *)&v9[OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_shownInferences] = _swiftEmptyArrayStorage;
  *(void *)&v9[OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_locationProvider] = a1;
  id v12 = a1;

  uint64_t v13 = type metadata accessor for FMPlatterIcon();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 0, 1, v13);
  uint64_t v14 = sub_100456A50(0x6E49206563616C50, 0xEF65636E65726566, 0, 0, (uint64_t)v5, 0x726F4D20776F6853, 0xE900000000000065, 0, 0, 0, 0);
  v14[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isSecondaryActionButtonHidden] = 1;
  uint64_t v15 = v14;
  sub_100459480();

  return v15;
}

id sub_100511188()
{
  unint64_t v1 = v0;
  sub_10045716C();
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_locationProvider];
  type metadata accessor for FMLocationSubscription();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber + 8) = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectRetain();
  UUID.init()();
  *(void *)(v3 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber + 8) = &off_100643868;
  swift_unknownObjectWeakAssign();

  uint64_t v4 = (void *)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions);
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  swift_release();
  uint64_t v5 = _swiftEmptyArrayStorage;
  if (*(void *)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_poiLocations)) {
    uint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_poiLocations);
  }
  *(void *)&v1[OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_shownInferences] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_fidelitySegment];
  id v7 = [self standardUserDefaults];
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 integerForKey:v8];

  [v6 setSelectedSegmentIndex:v9];
  [v6 addTarget:v1 action:"fidelitySegmentChanged" forControlEvents:4096];
  [*(id *)&v1[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_contentStackView] addArrangedSubview:v6];
  return [*(id *)&v1[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_topSeparator] setHidden:1];
}

void sub_100511488()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_fidelitySegment);
  id v2 = [v1 selectedSegmentIndex];
  if (v2 == (id)2)
  {
    uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_locationProvider);
    *(void *)(v3 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_poiFidelity) = 3;
    id v4 = [self standardUserDefaults];
  }
  else if (v2 == (id)1)
  {
    uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_locationProvider);
    *(void *)(v3 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_poiFidelity) = 2;
    id v4 = [self standardUserDefaults];
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_locationProvider);
    if (v2) {
      *(void *)(v3 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_poiFidelity) = 2;
    }
    else {
      *(void *)(v3 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_poiFidelity) = 1;
    }
    id v4 = [self standardUserDefaults];
  }
  id v5 = v4;
  Class isa = UInt._bridgeToObjectiveC()().super.super.isa;
  NSString v7 = String._bridgeToObjectiveC()();
  [v5 setObject:isa forKey:v7];

  sub_10000B9FC();
  unint64_t v8 = (unint64_t)[v1 selectedSegmentIndex];
  if ((v8 & 0x8000000000000000) != 0)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    *(void *)(v3 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_poiFidelity) = v8;
    id v9 = [self standardUserDefaults];
    Class v10 = UInt._bridgeToObjectiveC()().super.super.isa;
    NSString v11 = String._bridgeToObjectiveC()();
    [v9 setObject:v10 forKey:v11];

    sub_10000B9FC();
  }
}

void sub_100511728()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_collapsed) ^= 1u;
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButton);
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 setTitle:v2 forState:0];

  sub_100511828();
}

void sub_100511828()
{
  id v54 = *(id *)(v0 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_contentStackView);
  id v1 = [v54 arrangedSubviews];
  sub_100006060(0, (unint64_t *)&qword_1006B79A0);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62) {
    goto LABEL_13;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v4 = 4;
    uint64_t v5 = 0;
    if ((v2 & 0xC000000000000001) != 0)
    {
LABEL_4:
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_6;
    }
    while (1)
    {
      id v6 = *(id *)(v2 + 8 * v4);
LABEL_6:
      NSString v7 = v6;
      BOOL v8 = __OFADD__(v5, 1);
      uint64_t v9 = v5 + 1;
      if (v8) {
        break;
      }
      self;
      if (!swift_dynamicCastObjCClass())
      {
        [v54 removeArrangedSubview:v7];
        [v7 removeFromSuperview];
      }

      if (v9 == v3) {
        goto LABEL_14;
      }
      uint64_t v5 = ++v4 - 4;
      if ((v2 & 0xC000000000000001) != 0) {
        goto LABEL_4;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease_n();
  unint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_shownInferences);
  unint64_t v11 = v10 >> 62;
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v13 = v54;
    if (v12)
    {
LABEL_16:
      if (v12 < 0)
      {
        uint64_t v14 = 3;
        if (!v11)
        {
LABEL_21:
          uint64_t v15 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          goto LABEL_25;
        }
      }
      else
      {
        if (v12 >= 3) {
          uint64_t v14 = 3;
        }
        else {
          uint64_t v14 = v12;
        }
        if (!v11) {
          goto LABEL_21;
        }
      }
      swift_bridgeObjectRetain_n();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v16 < 0)
      {
        __break(1u);
        goto LABEL_67;
      }
      swift_bridgeObjectRetain();
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
LABEL_25:
      if (v15 >= v14)
      {
        unint64_t v17 = v10 & 0xC000000000000001;
        if ((v10 & 0xC000000000000001) != 0)
        {
          sub_100006060(0, &qword_1006C1A40);
          Swift::Int v18 = 0;
          do
          {
            Swift::Int v19 = v18 + 1;
            _ArrayBuffer._typeCheckSlowPath(_:)(v18);
            Swift::Int v18 = v19;
          }
          while (v14 != v19);
        }
        if (v11)
        {
          swift_bridgeObjectRetain();
          _CocoaArrayWrapper.subscript.getter();
          uint64_t v21 = v23;
          uint64_t v20 = v24;
          unint64_t v26 = v25;
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRetain();
          uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          uint64_t v14 = v26 >> 1;
        }
        else
        {
          uint64_t v20 = 0;
          uint64_t v21 = (v10 & 0xFFFFFFFFFFFFFF8) + 32;
          uint64_t v22 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v22 >= 4)
        {
          *(unsigned char *)(v0 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionButtonHidden) = 0;
          sub_1004591F4();
          if (*(unsigned char *)(v0 + OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_collapsed) == 1)
          {
            swift_bridgeObjectRelease();
            uint64_t v27 = v14 - v20;
            if (v14 != v20)
            {
              if (v14 > v20)
              {
                NSString v28 = (objc_class *)type metadata accessor for FMPISDebugLocationRow();
                swift_unknownObjectRetain();
                uint64_t v29 = (void **)(v21 + 8 * v20);
                do
                {
                  id v30 = *v29++;
                  id v31 = objc_allocWithZone(v28);
                  id v32 = v30;
                  CGRect v33 = sub_1000BCE18(v32, 1);
                  [v54 addArrangedSubview:v33];

                  --v27;
                }
                while (v27);
                swift_unknownObjectRelease_n();
                return;
              }
LABEL_72:
              __break(1u);
              return;
            }
            goto LABEL_50;
          }
          if (v12 >= 1)
          {
            uint64_t v42 = 0;
            do
            {
              if (v17) {
                id v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v43 = *(id *)(v10 + 8 * v42 + 32);
              }
              uint64_t v44 = v43;
              ++v42;
              objc_allocWithZone((Class)type metadata accessor for FMPISDebugLocationRow());
              id v45 = v44;
              id v46 = sub_1000BCE18(v45, 1);
              [v54 addArrangedSubview:v46];
            }
            while (v12 != v42);
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            return;
          }
LABEL_71:
          __break(1u);
          goto LABEL_72;
        }
        *(unsigned char *)(v0 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionButtonHidden) = 1;
        sub_1004591F4();
        BOOL v8 = __OFSUB__(v14, v20);
        uint64_t v34 = v14 - v20;
        if (!v8)
        {
          if ((v34 & 0x8000000000000000) == 0)
          {
            if (!v34)
            {
LABEL_49:
              swift_bridgeObjectRelease();
LABEL_50:
              swift_unknownObjectRelease();
              return;
            }
            unint64_t v35 = v34 - 1;
            if (v17 || v35 < *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              uint64_t v36 = 0;
              do
              {
                if (v17) {
                  id v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  id v37 = *(id *)(v10 + 8 * v36 + 32);
                }
                Swift::String v38 = v37;
                uint64_t v39 = v36 + 1;
                objc_allocWithZone((Class)type metadata accessor for FMPISDebugLocationRow());
                id v40 = v38;
                CGRect v41 = sub_1000BCE18(v40, v35 != v36);
                [v54 addArrangedSubview:v41];

                uint64_t v36 = v39;
              }
              while (v34 != v39);
              goto LABEL_49;
            }
LABEL_70:
            __break(1u);
            goto LABEL_71;
          }
LABEL_69:
          __break(1u);
          goto LABEL_70;
        }
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v13 = v54;
    if (v12) {
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease();
  *(unsigned char *)(v0 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionButtonHidden) = 1;
  sub_1004591F4();
  id v47 = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithActivityIndicatorStyle:100];
  [v47 startAnimating];
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_10055C1F0;
  *(void *)(v48 + 32) = [objc_allocWithZone((Class)UIView) init];
  *(void *)(v48 + 40) = v47;
  id v49 = objc_allocWithZone((Class)UIView);
  id v50 = v47;
  *(void *)(v48 + 48) = [v49 init];
  specialized Array._endMutation()();
  id v51 = objc_allocWithZone((Class)UIStackView);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v53 = [v51 initWithArrangedSubviews:isa];

  [v53 setAxis:1];
  [v53 setSpacing:16.0];
  [v13 addArrangedSubview:v53];
}

uint64_t sub_100511F50()
{
  return swift_bridgeObjectRelease();
}

id sub_100511FA0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPISDebugLocationPlatter();
  return [super dealloc];
}

uint64_t type metadata accessor for FMPISDebugLocationPlatter()
{
  return self;
}

void sub_100512054(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_poiLocations);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v2) {
    uint64_t v3 = v2;
  }
  *(void *)(v1 + OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_shownInferences) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();

  sub_100511828();
}

void sub_1005120BC()
{
  v0[OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_collapsed] = 1;
  uint64_t v1 = OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_fidelitySegment;
  sub_10005D034(&qword_1006B2B80);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10055BD40;
  *(void *)(v2 + 32) = 7827276;
  *(void *)(v2 + 40) = 0xE300000000000000;
  *(void *)(v2 + 56) = &type metadata for String;
  *(void *)(v2 + 64) = 0x6D756964654DLL;
  *(void *)(v2 + 72) = 0xE600000000000000;
  *(void *)(v2 + 120) = &type metadata for String;
  *(void *)(v2 + 88) = &type metadata for String;
  *(void *)(v2 + 96) = 1751607624;
  *(void *)(v2 + 104) = 0xE400000000000000;
  id v3 = objc_allocWithZone((Class)UISegmentedControl);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [v3 initWithItems:isa];

  *(void *)&v0[v1] = v5;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_shownInferences] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100512214(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

void sub_100512220(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = v3;
  while (1)
  {
    swift_getObjectType();
    id v8 = swift_conformsToProtocol2() ? v7 : 0;
    if (v8) {
      break;
    }
    id v9 = [v7 parentViewController];

    id v7 = v9;
    if (!v9)
    {
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      break;
    }
  }
  id v10 = v7;
  [a1 setTransitioningDelegate:v8];
  [a1 setModalPresentationStyle:6];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  aBlock[4] = sub_10040C7F4;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_1006438E8;
  uint64_t v12 = _Block_copy(aBlock);
  sub_1000B7838(a2);
  swift_release();
  [v10 presentViewController:a1 animated:1 completion:v12];
  _Block_release(v12);
}

uint64_t (*sub_1005124D4(uint64_t (*result)(void)))(void)
{
  if (result) {
    return (uint64_t (*)(void))result();
  }
  return result;
}

uint64_t sub_100512504()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10051253C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_10051254C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 32, 7);
}

double sub_10051258C()
{
  __asm { FMOV            V0.2D, #18.0 }
  xmmword_1006D2930 = _Q0;
  *(_OWORD *)&qword_1006D2940 = xmmword_10056AB70;
  double result = 8.0;
  *(_OWORD *)&qword_1006D2950 = xmmword_10056B100;
  unk_1006D2960 = xmmword_10056B110;
  qword_1006D2970 = 0x3FD3333333333333;
  return result;
}

void sub_10051260C(uint64_t a1, uint64_t a2)
{
  id v3 = (void *)(v2 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_detailText);
  *id v3 = a1;
  v3[1] = a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_tertiaryLabel;
  id v5 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_tertiaryLabel);
  if (*v3) {
    BOOL v6 = 0;
  }
  else {
    BOOL v6 = v3[1] == 0xE000000000000000;
  }
  if (v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  [v5 setHidden:v7 & 1];
  id v8 = *(id *)(v2 + v4);
  swift_bridgeObjectRetain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v8 setText:v9];
}

void sub_1005126FC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_tertiaryLabel);
  uint64_t v2 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_enabled;
  int v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_enabled);
  uint64_t v4 = self;
  id v5 = v1;
  BOOL v6 = &selRef_tertiaryLabelColor;
  if (v3) {
    BOOL v6 = &selRef_secondaryLabelColor;
  }
  id v7 = [v4 *v6];
  [v5 setTextColor:v7];

  id v8 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabel);
  int v9 = *(unsigned __int8 *)(v0 + v2);
  id v10 = self;
  id v11 = v8;
  uint64_t v12 = &selRef_labelColor;
  if (!v9) {
    uint64_t v12 = &selRef_secondaryLabelColor;
  }
  id v13 = [v10 *v12];
  [v11 setTextColor:v13];
}

id sub_100512828(char a1, double a2)
{
  id v5 = &v2[OBJC_IVAR____TtC6FindMy16FMSettingRowView_identifier];
  *(void *)id v5 = 0;
  *((void *)v5 + 1) = 0;
  uint64_t v6 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_imageView;
  id v7 = objc_allocWithZone((Class)UIImageView);
  id v8 = v2;
  *(void *)&v2[v6] = [v7 init];
  uint64_t v9 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_backgroundView;
  *(void *)&v8[v9] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v10 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabel;
  *(void *)&v8[v10] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v11 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_secondaryLabel;
  *(void *)&v8[v11] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v12 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_secondaryDetailLabel;
  *(void *)&v8[v12] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v13 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_tertiaryLabel;
  type metadata accessor for FMCopyableLabel();
  *(void *)&v8[v13] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v14 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_chevron;
  id v15 = sub_1003E798C();
  id v16 = [objc_allocWithZone((Class)UIImageView) initWithImage:v15];

  *(void *)&v8[v14] = v16;
  uint64_t v17 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_separator;
  *(void *)&v8[v17] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v18 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_rightStackView;
  *(void *)&v8[v18] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v19 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_leftStackView;
  *(void *)&v8[v19] = [objc_allocWithZone((Class)UIStackView) init];
  *(void *)&v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_imageViewWidthConstraint] = 0;
  *(void *)&v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabelLeadingConstraint] = 0;
  uint64_t v20 = &v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_title];
  *(void *)uint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  uint64_t v21 = &v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_subtitle];
  *(void *)uint64_t v21 = 0;
  *((void *)v21 + 1) = 0;
  uint64_t v22 = &v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_detailText];
  *(void *)uint64_t v22 = 0;
  *((void *)v22 + 1) = 0xE000000000000000;
  uint64_t v23 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_detailTextColor;
  *(void *)&v8[v23] = [self secondaryLabelColor];
  v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_detailTextIsCopyToPasteboardEnabled] = 0;
  uint64_t v24 = &v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_subDetailText];
  *(void *)uint64_t v24 = 0;
  *((void *)v24 + 1) = 0xE000000000000000;
  v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_separated] = 1;
  v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_enabled] = 1;
  *(void *)&v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_image] = 0;
  uint64_t v25 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_isChevronVisible;
  v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_isChevronVisible] = 0;
  *(double *)&v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_backgroundOffset] = a2;
  v8[v25] = a1;

  v28.receiver = v8;
  v28.super_class = (Class)type metadata accessor for FMSettingRowView();
  id v26 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_100512C7C();
  sub_100513284(a2);
  [v26 setClipsToBounds:0];

  return v26;
}

uint64_t sub_100512BC0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_title + 8);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_title);
    swift_bridgeObjectRetain();
    v3._uint64_t countAndFlagsBits = v2;
    v3._object = v1;
    String.append(_:)(v3);
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_subtitle + 8);
  if (v4)
  {
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_subtitle);
    String.append(_:)(*(Swift::String *)(&v4 - 1));
    v6._uint64_t countAndFlagsBits = 44;
    v6._object = (void *)0xE100000000000000;
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
  }
  return 0;
}

id sub_100512C7C()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_chevron;
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_chevron] setHidden:(v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_isChevronVisible] & 1) == 0];
  [*(id *)&v0[v1] setContentMode:1];
  uint64_t v39 = v1;
  uint64_t v2 = *(void **)&v0[v1];
  Swift::String v3 = self;
  id v4 = v2;
  id v5 = [v3 tertiaryLabelColor];
  [v4 setTintColor:v5];

  uint64_t v38 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_separator;
  id v6 = *(id *)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_separator];
  id v7 = [v3 tertiaryLabelColor];
  [v6 setBackgroundColor:v7];

  uint64_t v8 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabel;
  uint64_t v9 = *(void **)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabel];
  uint64_t v10 = self;
  id v11 = v9;
  id v12 = [v10 preferredFontForTextStyle:UIFontTextStyleBody];
  [v11 setFont:v12];

  [*(id *)&v0[v8] setNumberOfLines:0];
  LODWORD(v13) = 1132068864;
  [*(id *)&v0[v8] setContentCompressionResistancePriority:0 forAxis:v13];
  [*(id *)&v0[v8] setAdjustsFontForContentSizeCategory:1];
  [*(id *)&v0[v8] setTextAlignment:4];
  uint64_t v14 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_secondaryLabel;
  id v15 = *(id *)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_secondaryLabel];
  id v16 = [v10 preferredFontForTextStyle:UIFontTextStyleBody];
  [v15 setFont:v16];

  id v17 = *(id *)&v0[v14];
  id v18 = [v3 secondaryLabelColor];
  [v17 setTextColor:v18];

  uint64_t v19 = qword_1006AE228;
  id v20 = *(id *)&v0[v14];
  if (v19 != -1) {
    swift_once();
  }
  [v20 setTextAlignment:2 * (qword_1006D20D0 != 1)];

  [*(id *)&v0[v14] setNumberOfLines:1];
  LODWORD(v21) = 1144750080;
  [*(id *)&v0[v14] setContentCompressionResistancePriority:0 forAxis:v21];
  [*(id *)&v0[v14] setAdjustsFontForContentSizeCategory:1];
  uint64_t v22 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_secondaryDetailLabel;
  id v23 = *(id *)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_secondaryDetailLabel];
  id v24 = [v10 preferredFontForTextStyle:UIFontTextStyleSubheadline];
  [v23 setFont:v24];

  id v25 = *(id *)&v0[v22];
  id v26 = [v3 secondaryLabelColor];
  [v25 setTextColor:v26];

  [*(id *)&v0[v22] setTextAlignment:2 * (qword_1006D20D0 != 1)];
  [*(id *)&v0[v22] setNumberOfLines:1];
  LODWORD(v27) = 1144750080;
  [*(id *)&v0[v22] setContentCompressionResistancePriority:0 forAxis:v27];
  [*(id *)&v0[v22] setAdjustsFontForContentSizeCategory:1];
  uint64_t v28 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_tertiaryLabel;
  id v29 = *(id *)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_tertiaryLabel];
  id v30 = [v10 preferredFontForTextStyle:UIFontTextStyleSubheadline];
  [v29 setFont:v30];

  [*(id *)&v0[v28] setNumberOfLines:0];
  LODWORD(v31) = 1132068864;
  [*(id *)&v0[v28] setContentCompressionResistancePriority:0 forAxis:v31];
  [*(id *)&v0[v28] setAdjustsFontForContentSizeCategory:1];
  id v32 = *(id *)&v0[v28];
  id v33 = [v3 secondaryLabelColor];
  [v32 setColor:v33];

  uint64_t v34 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_rightStackView;
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_rightStackView] setAxis:1];
  [*(id *)&v0[v34] addArrangedSubview:*(void *)&v0[v14]];
  [*(id *)&v0[v34] addArrangedSubview:*(void *)&v0[v22]];
  uint64_t v35 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_leftStackView;
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_leftStackView] setAxis:1];
  [*(id *)&v0[v35] addArrangedSubview:*(void *)&v0[v8]];
  [*(id *)&v0[v35] addArrangedSubview:*(void *)&v0[v28]];
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_backgroundView]];
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_imageView]];
  [v0 addSubview:*(void *)&v0[v39]];
  [v0 addSubview:*(void *)&v0[v38]];
  [v0 addSubview:*(void *)&v0[v35]];
  uint64_t v36 = *(void *)&v0[v34];

  return [v0 addSubview:v36];
}

void sub_100513284(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_backgroundView;
  [*(id *)&v1[OBJC_IVAR____TtC6FindMy16FMSettingRowView_backgroundView] setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v5 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_imageView;
  uint64_t v96 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_imageView;
  [*(id *)&v1[OBJC_IVAR____TtC6FindMy16FMSettingRowView_imageView] setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v98 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_rightStackView;
  [*(id *)&v1[OBJC_IVAR____TtC6FindMy16FMSettingRowView_rightStackView] setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v101 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_leftStackView;
  [*(id *)&v1[OBJC_IVAR____TtC6FindMy16FMSettingRowView_leftStackView] setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v102 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_separator;
  [*(id *)&v1[OBJC_IVAR____TtC6FindMy16FMSettingRowView_separator] setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v95 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_chevron;
  [*(id *)&v1[OBJC_IVAR____TtC6FindMy16FMSettingRowView_chevron] setTranslatesAutoresizingMaskIntoConstraints:0];
  id v6 = [*(id *)&v1[v5] widthAnchor];
  id v99 = [v6 constraintEqualToConstant:0.0];

  id v103 = self;
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10055B950;
  id v8 = [*(id *)&v2[v4] topAnchor];
  id v9 = [v2 topAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9];

  *(void *)(v7 + 32) = v10;
  id v11 = [*(id *)&v2[v4] bottomAnchor];
  id v12 = [v2 bottomAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12];

  *(void *)(v7 + 40) = v13;
  id v14 = [*(id *)&v2[v4] leadingAnchor];
  id v15 = [v2 leadingAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15 constant:-a1];

  *(void *)(v7 + 48) = v16;
  id v17 = [*(id *)&v2[v4] trailingAnchor];
  id v18 = [v2 trailingAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18 constant:a1];

  *(void *)(v7 + 56) = v19;
  specialized Array._endMutation()();
  sub_100006060(0, (unint64_t *)&qword_1006AEE60);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v103 activateConstraints:isa];

  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_10055B950;
  id v22 = [*(id *)&v2[v96] centerYAnchor];
  id v23 = [v2 centerYAnchor];
  id v24 = [v22 constraintEqualToSystemSpacingBelowAnchor:v23 multiplier:1.0];

  *(void *)(v21 + 32) = v24;
  id v25 = [*(id *)&v2[v96] leadingAnchor];
  id v26 = [v2 leadingAnchor];
  id v27 = [v25 constraintEqualToAnchor:v26];

  *(void *)(v21 + 40) = v27;
  id v28 = [*(id *)&v2[v96] heightAnchor];
  if (qword_1006AE478 != -1) {
    swift_once();
  }
  id v29 = [v28 constraintEqualToConstant:*(double *)&qword_1006D2958];

  *(void *)(v21 + 48) = v29;
  *(void *)(v21 + 56) = v99;
  specialized Array._endMutation()();
  id v100 = v99;
  Class v30 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v103 activateConstraints:v30];

  id v31 = [*(id *)&v2[v101] leadingAnchor];
  id v32 = [*(id *)&v2[v96] trailingAnchor];
  id v33 = [v31 constraintEqualToAnchor:v32];

  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_10055C1F0;
  *(void *)(v34 + 32) = v33;
  uint64_t v35 = *(void **)&v2[v101];
  id v97 = v33;
  id v36 = [v35 topAnchor];
  id v37 = [v2 topAnchor];
  if (qword_1006AE460 != -1) {
    swift_once();
  }
  id v38 = [v36 constraintEqualToAnchor:v37 constant:*(double *)&xmmword_1006D2900];

  *(void *)(v34 + 40) = v38;
  id v39 = [*(id *)&v2[v101] bottomAnchor];
  id v40 = [v2 bottomAnchor];
  id v41 = [v39 constraintEqualToAnchor:v40 constant:-*(double *)&xmmword_1006D2900];

  *(void *)(v34 + 48) = v41;
  specialized Array._endMutation()();
  Class v42 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v43 = v103;
  [v103 activateConstraints:v42];

  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_10055C1F0;
  id v45 = [*(id *)&v2[v98] topAnchor];
  id v46 = [v2 topAnchor];
  id v47 = [v45 constraintEqualToAnchor:v46 constant:*(double *)&xmmword_1006D2900];

  *(void *)(v44 + 32) = v47;
  id v48 = [*(id *)&v2[v98] leadingAnchor];
  id v49 = [*(id *)&v2[v101] trailingAnchor];
  id v50 = [v48 constraintEqualToAnchor:v49 constant:*(double *)&qword_1006D2950];

  *(void *)(v44 + 40) = v50;
  id v51 = [*(id *)&v2[v98] bottomAnchor];
  id v52 = [v2 bottomAnchor];
  id v53 = [v51 constraintEqualToAnchor:v52 constant:-*(double *)&xmmword_1006D2900];

  *(void *)(v44 + 48) = v53;
  specialized Array._endMutation()();
  Class v54 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v103 activateConstraints:v54];

  if (v2[OBJC_IVAR____TtC6FindMy16FMSettingRowView_isChevronVisible] == 1)
  {
    uint64_t v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_10055E140;
    id v56 = [*(id *)&v2[v95] topAnchor];
    id v57 = [v2 topAnchor];
    id v58 = [v56 constraintGreaterThanOrEqualToAnchor:v57 constant:*(double *)&qword_1006D2948];

    *(void *)(v55 + 32) = v58;
    id v59 = [*(id *)&v2[v95] leadingAnchor];
    id v60 = [*(id *)&v2[v98] trailingAnchor];
    id v61 = [v59 constraintEqualToAnchor:v60 constant:*(double *)&qword_1006D2940];

    *(void *)(v55 + 40) = v61;
    id v62 = [*(id *)&v2[v95] centerYAnchor];
    id v63 = [v2 centerYAnchor];
    id v64 = [v62 constraintEqualToAnchor:v63];

    *(void *)(v55 + 48) = v64;
    id v65 = [*(id *)&v2[v95] trailingAnchor];
    id v66 = [v2 trailingAnchor];
    id v67 = [v65 constraintEqualToAnchor:v66];

    *(void *)(v55 + 56) = v67;
    id v68 = [*(id *)&v2[v95] heightAnchor];
    id v69 = objc_retainAutoreleasedReturnValue(objc_msgSend(v68, "constraintEqualToConstant:", *((double *)&xmmword_1006D2930
                                                                                             + 1)));

    *(void *)(v55 + 64) = v69;
    id v70 = [*(id *)&v2[v95] widthAnchor];
    id v43 = v103;
    id v71 = [v70 constraintEqualToConstant:*(double *)&xmmword_1006D2930];

    *(void *)(v55 + 72) = v71;
  }
  else
  {
    uint64_t v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = xmmword_10055BD30;
    id v73 = [*(id *)&v2[v98] trailingAnchor];
    id v74 = [v2 trailingAnchor];
    id v75 = [v73 constraintEqualToAnchor:v74];

    *(void *)(v72 + 32) = v75;
  }
  specialized Array._endMutation()();
  Class v76 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v43 activateConstraints:v76];

  uint64_t v77 = swift_allocObject();
  *(_OWORD *)(v77 + 16) = xmmword_10055B950;
  id v78 = [*(id *)&v2[v102] leadingAnchor];
  id v79 = [v2 leadingAnchor];
  id v80 = [v78 constraintEqualToAnchor:v79];

  *(void *)(v77 + 32) = v80;
  id v81 = [*(id *)&v2[v102] trailingAnchor];
  id v82 = [v2 trailingAnchor];
  if (qword_1006AE228 != -1) {
    swift_once();
  }
  id v83 = [v81 constraintEqualToAnchor:v82 constant:*(double *)&qword_1006D20C8];

  *(void *)(v77 + 40) = v83;
  id v84 = [*(id *)&v2[v102] bottomAnchor];
  id v85 = [v2 bottomAnchor];
  id v86 = [v84 constraintEqualToAnchor:v85 constant:0.0];

  *(void *)(v77 + 48) = v86;
  id v87 = [*(id *)&v2[v102] heightAnchor];
  id v88 = [self mainScreen];
  [v88 scale];
  double v90 = v89;

  id v91 = [v87 constraintEqualToConstant:1.0 / v90];
  *(void *)(v77 + 56) = v91;
  specialized Array._endMutation()();
  Class v92 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v103 activateConstraints:v92];

  uint64_t v93 = *(void **)&v2[OBJC_IVAR____TtC6FindMy16FMSettingRowView_imageViewWidthConstraint];
  *(void *)&v2[OBJC_IVAR____TtC6FindMy16FMSettingRowView_imageViewWidthConstraint] = v100;
  id v94 = v100;

  id v104 = *(id *)&v2[OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabelLeadingConstraint];
  *(void *)&v2[OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabelLeadingConstraint] = v97;
}

void sub_1005140A8(uint64_t a1, uint64_t a2)
{
  sub_100006060(0, (unint64_t *)&qword_1006B0290);
  sub_1000C8370();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for FMSettingRowView();
  [super touchesBegan:a2];

  id v5 = *(id *)&v2[OBJC_IVAR____TtC6FindMy16FMSettingRowView_backgroundView];
  id v6 = [v2 traitCollection];
  id v7 = [v6 userInterfaceStyle];

  id v8 = self;
  id v9 = &selRef_systemGray3Color;
  if (v7 != (id)2) {
    id v9 = &selRef_systemGray5Color;
  }
  id v10 = [v8 *v9];
  [v5 setBackgroundColor:v10];
}

void sub_100514288(void *a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5)
{
  sub_100006060(0, (unint64_t *)&qword_1006B0290);
  sub_1000C8370();
  static Set._unconditionallyBridgeFromObjectiveC(_:)();
  id v8 = a4;
  id v9 = a1;
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  v15.receiver = v9;
  v15.super_class = (Class)type metadata accessor for FMSettingRowView();
  [super isa:v8];

  objc_super v11 = *(void **)&v9[OBJC_IVAR____TtC6FindMy16FMSettingRowView_backgroundView];
  id v12 = self;
  id v13 = v11;
  id v14 = [v12 clearColor];
  [v13 setBackgroundColor:v14];

  swift_bridgeObjectRelease();
}

id sub_1005143E4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMSettingRowView();
  return [super dealloc];
}

uint64_t type metadata accessor for FMSettingRowView()
{
  return self;
}

void sub_1005145AC()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_identifier];
  *uint64_t v1 = 0;
  v1[1] = 0;
  uint64_t v2 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_imageView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v3 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_backgroundView;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v4 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabel;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v5 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_secondaryLabel;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v6 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_secondaryDetailLabel;
  *(void *)&v0[v6] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v7 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_tertiaryLabel;
  type metadata accessor for FMCopyableLabel();
  *(void *)&v0[v7] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v8 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_chevron;
  id v9 = sub_1003E798C();
  id v10 = [objc_allocWithZone((Class)UIImageView) initWithImage:v9];

  *(void *)&v0[v8] = v10;
  uint64_t v11 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_separator;
  *(void *)&v0[v11] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v12 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_rightStackView;
  *(void *)&v0[v12] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v13 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_leftStackView;
  *(void *)&v0[v13] = [objc_allocWithZone((Class)UIStackView) init];
  *(void *)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_imageViewWidthConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabelLeadingConstraint] = 0;
  id v14 = &v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_title];
  void *v14 = 0;
  v14[1] = 0;
  objc_super v15 = &v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_subtitle];
  *objc_super v15 = 0;
  v15[1] = 0;
  id v16 = &v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_detailText];
  *id v16 = 0;
  v16[1] = 0xE000000000000000;
  uint64_t v17 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_detailTextColor;
  *(void *)&v0[v17] = [self secondaryLabelColor];
  v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_detailTextIsCopyToPasteboardEnabled] = 0;
  id v18 = &v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_subDetailText];
  *id v18 = 0;
  v18[1] = 0xE000000000000000;
  v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_separated] = 1;
  v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_enabled] = 1;
  *(void *)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_image] = 0;
  v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_isChevronVisible] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_10051483C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FMIPDevice();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMDeviceDetailViewModel();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (id *)((char *)&v24.receiver - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)&v2[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_selectionSubscription] = 0;
  *(void *)&v2[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_devicesSubscription] = 0;
  *(void *)&v2[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_imageFetchingCancellable] = 0;
  *(void *)&v2[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_mediator] = a1;
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12(&v2[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove], a2, v5);
  v12(v8, a2, v5);
  swift_retain_n();
  uint64_t v13 = v2;
  sub_1004A564C(a1, v8, 0, 0, 0, 0.0, v11);
  sub_1004F0544((uint64_t)v11, (uint64_t)&v13[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_viewModel]);
  id v14 = objc_allocWithZone((Class)type metadata accessor for FMActionLandingView());
  *(void *)&v13[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView] = sub_1001BFD9C(0);

  objc_super v15 = (objc_class *)type metadata accessor for FMRemoveDeviceViewController();
  v24.receiver = v13;
  v24.super_class = v15;
  [super initWithNibName:0 bundle:0];
  uint64_t v17 = qword_1006AE190;
  id v18 = v16;
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_1000606BC(v19, (uint64_t)qword_1006D1E98);
  id v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    id v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "FMRemoveDeviceViewController: Remove device view controller initialized", v22, 2u);
    swift_slowDealloc();
  }
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v5);
  return v18;
}

uint64_t sub_100514C2C(char a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for FMRemoveDeviceViewController();
  [super viewWillAppear:a1 & 1];
  uint64_t v3 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_mediator] + 56);
  type metadata accessor for FMSelectionSubscription();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber + 8) = 0;
  swift_unknownObjectWeakInit();
  swift_retain();
  uint64_t v5 = v1;
  UUID.init()();
  *(void *)(v4 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber + 8) = &off_1006439D0;
  swift_unknownObjectWeakAssign();

  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(v3 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v3 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  swift_release();
  *(void *)&v5[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_selectionSubscription] = v4;
  return swift_release();
}

uint64_t sub_100514DE8(char a1)
{
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for FMRemoveDeviceViewController();
  uint64_t result = [super viewWillDisappear:a1 & 1];
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_selectionSubscription];
  if (v4)
  {
    uint64_t v5 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_mediator] + 56);
    swift_beginAccess();
    swift_retain();
    swift_retain();
    uint64_t result = sub_1003D6AB4((uint64_t *)(v5 + 16), v4);
    uint64_t v6 = result;
    unint64_t v7 = *(void *)(v5 + 16);
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 >= v6) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v8 >= result)
      {
LABEL_4:
        sub_1002586A8(v6, v8);
        swift_endAccess();
        swift_release();
        return swift_release();
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100514F64()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10005D034(&qword_1006B3198);
  __chkstk_darwin(v2 - 8);
  int v150 = (char *)&v134 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FMIPPerson();
  uint64_t v151 = *(void *)(v4 - 8);
  uint64_t v152 = v4;
  __chkstk_darwin(v4);
  uint64_t v138 = (char *)&v134 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10005D034(&qword_1006B5A10);
  __chkstk_darwin(v6 - 8);
  Swift::Int v146 = (char *)&v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10005D034(&qword_1006B3190);
  uint64_t v148 = *(void *)(v8 - 8);
  uint64_t v149 = v8;
  __chkstk_darwin(v8);
  uint64_t v147 = (char *)&v134 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10005D034(&qword_1006B2AF0);
  __chkstk_darwin(v10 - 8);
  uint64_t v159 = (char *)&v134 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FMIPFeatures();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  id v16 = (char *)&v134 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v18 = (char *)&v134 - v17;
  uint64_t v19 = type metadata accessor for FMIPDevice();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v144 = v22;
  uint64_t v145 = (char *)&v134 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  objc_super v24 = (char *)&v134 - v23;
  id v25 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:1 target:v0 action:"cancel"];
  id v26 = [v0 navigationItem];
  id v135 = v25;
  [v26 setLeftBarButtonItem:v25];

  uint64_t v161 = v1;
  id v27 = &v1[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove];
  uint64_t v28 = v20 + 16;
  Swift::Int v156 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v156(v24, v27, v19);
  FMIPDevice.features.getter();
  uint64_t v153 = v20;
  id v29 = *(void (**)(char *, uint64_t))(v20 + 8);
  uint64_t v160 = v19;
  uint64_t v158 = v29;
  v29(v24, v19);
  static FMIPFeatures.isRemoveUIv2Supported.getter();
  uint64_t v136 = sub_100045D54((unint64_t *)&qword_1006B36D0, (void (*)(uint64_t))&type metadata accessor for FMIPFeatures);
  LOBYTE(v26) = dispatch thunk of SetAlgebra.isSuperset(of:)();
  Class v30 = *(void (**)(char *, uint64_t))(v13 + 8);
  unint64_t v140 = v16;
  v30(v16, v12);
  uint64_t v139 = v18;
  uint64_t v142 = v12;
  uint64_t v141 = v13 + 8;
  uint64_t v137 = v30;
  v30(v18, v12);
  uint64_t v157 = v27;
  uint64_t v155 = v20 + 8;
  if (v26)
  {
    id v31 = [self mainBundle];
    v165._object = (void *)0x800000010058CBA0;
    v32._object = (void *)0x80000001005A1C80;
    v32._uint64_t countAndFlagsBits = 0xD000000000000017;
    v33.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v33.value._object = (void *)0xEC00000031656C62;
    v34._uint64_t countAndFlagsBits = 0;
    v34._object = (void *)0xE000000000000000;
    v165._uint64_t countAndFlagsBits = 0xD000000000000017;
    Swift::String v35 = NSLocalizedString(_:tableName:bundle:value:comment:)(v32, v33, (NSBundle)v31, v34, v165);
    uint64_t countAndFlagsBits = v35._countAndFlagsBits;
    object = v35._object;

    id v38 = v156;
LABEL_7:
    id v57 = v24;
    goto LABEL_10;
  }
  uint64_t v39 = v160;
  id v38 = v156;
  v156(v24, v27, v160);
  char v40 = FMIPDevice.isConsideredAccessory.getter();
  v158(v24, v39);
  if ((v40 & 1) == 0)
  {
    uint64_t v48 = (uint64_t)v159;
    v38(v159, v27, v39);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v153 + 56))(v48, 0, 1, v39);
    uint64_t v49 = sub_10022FDEC(0xD000000000000019, 0x80000001005A1C40, v48);
    id v51 = v50;
    uint64_t v53 = v52;
    uint64_t v55 = v54;
    swift_bridgeObjectRetain();
    uint64_t countAndFlagsBits = sub_10022F23C(v49, v51, v53, v55, 0, 0);
    object = v56;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_100003F10(v48, &qword_1006B2AF0);
    goto LABEL_7;
  }
  v38(v24, v27, v39);
  char v41 = FMIPDevice.isLocalFindable.getter();
  v158(v24, v39);
  if (v41)
  {
    id v42 = [self mainBundle];
    unint64_t v43 = 0xD000000000000010;
    unint64_t v44 = 0xD000000000000011;
    unint64_t v45 = 0xD000000000000015;
    unint64_t v133 = 0x800000010058CEE0;
    unint64_t v46 = 0x80000001005A1C60;
    unint64_t v47 = 0x800000010058CEC0;
  }
  else
  {
    uint64_t v162 = 0;
    unint64_t v163 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v42 = [self mainBundle];
    unint64_t v44 = 0xD000000000000014;
    unint64_t v45 = 0xD000000000000026;
    unint64_t v133 = 0x80000001005A1270;
    unint64_t v46 = 0x80000001005A1250;
    unint64_t v43 = 0;
    unint64_t v47 = 0;
  }
  v58._uint64_t countAndFlagsBits = 0;
  v58._object = (void *)0xE000000000000000;
  Swift::String v59 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v44, *(Swift::String_optional *)&v43, (NSBundle)v42, v58, *(Swift::String *)&v45);
  uint64_t countAndFlagsBits = v59._countAndFlagsBits;
  object = v59._object;

  id v57 = v24;
LABEL_10:
  uint64_t v159 = (char *)OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView;
  id v60 = *(char **)&v161[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView];
  id v61 = (uint64_t *)&v60[OBJC_IVAR____TtC6FindMy19FMActionLandingView_title];
  uint64_t *v61 = countAndFlagsBits;
  v61[1] = (uint64_t)object;
  id v62 = v60;
  swift_bridgeObjectRelease();
  id v63 = *(void **)&v62[OBJC_IVAR____TtC6FindMy19FMActionLandingView_titleLabel];
  if (v61[1])
  {
    id v64 = v63;
    swift_bridgeObjectRetain();
    NSString v65 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v66 = v63;
    NSString v65 = 0;
  }
  [v63 setText:v65];

  uint64_t v143 = OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_mediator;
  uint64_t v67 = v160;
  v38(v57, v157, v160);
  uint64_t v68 = swift_allocObject();
  swift_weakInit();
  id v69 = v145;
  uint64_t v154 = v28;
  v38(v145, v57, v67);
  uint64_t v70 = v153;
  unint64_t v71 = (*(unsigned __int8 *)(v153 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80);
  uint64_t v72 = v71 + v144;
  uint64_t v73 = swift_allocObject();
  *(void *)(v73 + 16) = v68;
  (*(void (**)(unint64_t, char *, uint64_t))(v70 + 32))(v73 + v71, v69, v67);
  *(unsigned char *)(v73 + v72) = 1;
  sub_10005D034((uint64_t *)&unk_1006B31B0);
  swift_allocObject();
  swift_retain();
  uint64_t v162 = Future.init(_:)();
  sub_1000450A0(&qword_1006C1EE0, (uint64_t *)&unk_1006B31B0);
  uint64_t v74 = Publisher.eraseToAnyPublisher()();
  swift_release();
  swift_release();
  id v75 = v161;
  v158(v57, v67);
  uint64_t v162 = v74;
  Class v76 = self;
  swift_retain();
  id v164 = [v76 mainRunLoop];
  uint64_t v77 = type metadata accessor for NSRunLoop.SchedulerOptions();
  uint64_t v78 = (uint64_t)v146;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v146, 1, 1, v77);
  sub_10005D034(&qword_1006B31A0);
  sub_100006060(0, (unint64_t *)&qword_1006C1DE0);
  sub_1000450A0((unint64_t *)&unk_1006B4250, &qword_1006B31A0);
  sub_100150450();
  id v79 = v147;
  Publisher.receive<A>(on:options:)();
  sub_100003F10(v78, &qword_1006B5A10);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1000450A0(&qword_1006B31A8, &qword_1006B3190);
  uint64_t v80 = v149;
  uint64_t v81 = Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v148 + 8))(v79, v80);
  *(void *)&v75[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_imageFetchingCancellable] = v81;
  swift_release();
  id v82 = *(void **)&v159[(void)v75];
  id v83 = self;
  id v84 = v82;
  id v85 = [v83 mainBundle];
  v86.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v166._uint64_t countAndFlagsBits = 0xD000000000000018;
  v166._object = (void *)0x800000010057EF80;
  v87._object = (void *)0x800000010058AEA0;
  v86.value._object = (void *)0x800000010057EF60;
  v87._uint64_t countAndFlagsBits = 0xD000000000000017;
  v88._uint64_t countAndFlagsBits = 0;
  v88._object = (void *)0xE000000000000000;
  Swift::String v89 = NSLocalizedString(_:tableName:bundle:value:comment:)(v87, v86, (NSBundle)v85, v88, v166);

  double v90 = (Swift::String *)&v84[OBJC_IVAR____TtC6FindMy19FMActionLandingView_action];
  *double v90 = v89;
  swift_bridgeObjectRelease();
  id v91 = *(void **)(*(void *)&v84[OBJC_IVAR____TtC6FindMy19FMActionLandingView_performButton]
                 + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label);
  if (v90->_object)
  {
    id v92 = v91;
    swift_bridgeObjectRetain();
    NSString v93 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v94 = v91;
    NSString v93 = 0;
  }
  uint64_t v95 = v150;
  [v91 setText:v93];

  uint64_t v96 = v161;
  swift_retain();
  FMIPManager.owner.getter();
  uint64_t v98 = v151;
  uint64_t v97 = v152;
  int v99 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v151 + 48))(v95, 1, v152);
  uint64_t v100 = v160;
  if (v99 == 1)
  {
    __break(1u);
LABEL_30:
    swift_release();
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v101 = v138;
  (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v138, v95, v97);
  swift_release();
  uint64_t v102 = FMIPPerson.username.getter();
  unint64_t v104 = v103;
  (*(void (**)(char *, uint64_t))(v98 + 8))(v101, v97);
  swift_bridgeObjectRetain();
  char v105 = sub_100477034(v102, v104, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v105)
  {
    uint64_t v102 = sub_100119B04(v102);
    unint64_t v107 = v106;
    swift_bridgeObjectRelease();
    unint64_t v104 = v107;
  }
  uint64_t v108 = *(char **)&v159[(void)v96];
  uint64_t v109 = (uint64_t *)&v108[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceOwner];
  uint64_t *v109 = v102;
  v109[1] = v104;
  uint64_t v110 = v108;
  swift_bridgeObjectRelease();
  uint64_t v111 = *(void **)&v110[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceOwnerLabel];
  uint64_t v112 = v109[1];
  uint64_t v153 = v74;
  id v113 = v111;
  if (v112)
  {
    swift_bridgeObjectRetain();
    NSString v114 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v114 = 0;
  }
  [v111 setText:v114];

  Swift::String v116 = v156;
  id v115 = v157;
  v156(v57, v157, v100);
  Swift::String v117 = v139;
  FMIPDevice.features.getter();
  uint64_t v118 = v158;
  v158(v57, v100);
  unint64_t v119 = v140;
  static FMIPFeatures.isRemoveUIv2Supported.getter();
  uint64_t v120 = v142;
  char v121 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  uint64_t v122 = v137;
  v137(v119, v120);
  v122(v117, v120);
  if ((v121 & 1) != 0
    || (uint64_t v123 = v160,
        v116(v57, v115, v160),
        char v124 = FMIPDevice.isConsideredAccessory.getter(),
        v118(v57, v123),
        (v124 & 1) != 0))
  {
    uint64_t v125 = v161;
    sub_100516EE0();
  }
  else
  {
    uint64_t v125 = v161;
    sub_1005160F8();
  }
  id v126 = [v125 view];
  if (!v126) {
    goto LABEL_30;
  }
  unint64_t v127 = v126;
  id v128 = [self systemBackgroundColor];
  [v127 setBackgroundColor:v128];

  id v129 = [v125 view];
  if (v129)
  {
    uint64_t v130 = v129;
    id v131 = *(id *)&v159[(void)v125];
    [v130 addSubview:v131];

    return swift_release();
  }
LABEL_31:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void sub_100516038(void **a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    uint64_t v4 = (char *)*(id *)(Strong + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView);

    uint64_t v5 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImage;
    uint64_t v6 = *(void **)&v4[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImage];
    *(void *)&v4[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImage] = v1;
    id v7 = v1;

    [*(id *)&v4[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImageView] setImage:*(void *)&v4[v5]];
  }
}

void sub_1005160F8()
{
  uint64_t v1 = type metadata accessor for FMIPFeatures();
  uint64_t v133 = *(void *)(v1 - 8);
  uint64_t v134 = v1;
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v132 = (char *)&v112 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  id v131 = (char *)&v112 - v4;
  uint64_t v5 = type metadata accessor for FMFConfigValue();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v137 = v5;
  uint64_t v138 = v6;
  __chkstk_darwin(v5);
  uint64_t v125 = (char *)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10005D034(&qword_1006B2AF0);
  __chkstk_darwin(v8 - 8);
  *(void *)&long long v135 = (char *)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMIPDeviceState();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v16 = (char *)&v112 - v15;
  uint64_t v17 = type metadata accessor for FMIPDevice();
  id v18 = *(void **)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v112 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = v0;
  uint64_t v21 = (void (*)(char *))v18[2];
  uint64_t v139 = v18 + 2;
  uint64_t v140 = v0 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove;
  v21(v20);
  FMIPDevice.state.getter();
  uint64_t v22 = (void (*)(char *, uint64_t))v18[1];
  id v129 = v20;
  id v126 = v22;
  unint64_t v127 = v18 + 1;
  v22(v20, v17);
  static FMIPDeviceState.isActivationLocked.getter();
  sub_100045D54((unint64_t *)&qword_1006C0390, (void (*)(uint64_t))&type metadata accessor for FMIPDeviceState);
  char v23 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  objc_super v24 = *(void (**)(char *, uint64_t))(v11 + 8);
  v24(v14, v10);
  v24(v16, v10);
  BOOL v25 = (v23 & 1) == 0;
  if (v23) {
    uint64_t v26 = 0xD000000000000022;
  }
  else {
    uint64_t v26 = 0xD000000000000024;
  }
  if (v25) {
    uint64_t v27 = 0x80000001005A1A90;
  }
  else {
    uint64_t v27 = 0x80000001005A1C10;
  }
  uint64_t v28 = v135;
  ((void (*)(void, uint64_t, uint64_t))v21)(v135, v140, v17);
  uint64_t v122 = (void (*)(uint64_t, void, uint64_t, uint64_t))v18[7];
  v122(v28, 0, 1, v17);
  uint64_t v29 = sub_10022FDEC(v26, v27, v28);
  id v31 = v30;
  uint64_t v33 = v32;
  Swift::String v35 = v34;
  swift_bridgeObjectRetain();
  uint64_t v123 = sub_10022F23C(v29, v31, v33, v35, 0, 0);
  uint64_t v124 = v36;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  sub_100003F10(v28, &qword_1006B2AF0);
  *(void *)&long long v144 = 0;
  *((void *)&v144 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v37 = self;
  id v136 = v37;
  id v38 = [v37 mainBundle];
  v153._uint64_t countAndFlagsBits = 0xD000000000000032;
  v153._object = (void *)0x80000001005A1AF0;
  v39._object = (void *)0x80000001005A1AC0;
  v39._uint64_t countAndFlagsBits = 0xD000000000000020;
  v40._uint64_t countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  Swift::String v41 = NSLocalizedString(_:tableName:bundle:value:comment:)(v39, (Swift::String_optional)0, (NSBundle)v38, v40, v153);
  v121._object = (void *)v41._countAndFlagsBits;

  id v128 = (void (*)(char *, uint64_t, uint64_t))v21;
  ((void (*)(uint64_t, uint64_t, uint64_t))v21)(v28, v140, v17);
  uint64_t v42 = v28;
  uint64_t v130 = v17;
  v122(v28, 0, 1, v17);
  uint64_t v43 = sub_10022FDEC(0xD000000000000022, 0x80000001005A1B30, v28);
  unint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  swift_bridgeObjectRetain();
  uint64_t v50 = sub_10022F23C(v43, v45, v47, v49, 0, 0);
  uint64_t v52 = v51;
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  sub_100003F10(v42, &qword_1006B2AF0);
  uint64_t v122 = (void (*)(uint64_t, void, uint64_t, uint64_t))self;
  id v53 = [v122 systemPinkColor];
  sub_1001A9614((uint64_t)v121._object, (uint64_t)v41._object, v50, v52, v53, &v141);
  id v54 = [v37 mainBundle];
  v55.value._uint64_t countAndFlagsBits = 0xD000000000000015;
  v154._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  uint64_t v120 = 0xD000000000000015;
  v121._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v121._object = (void *)0x800000010058F0C0;
  v154._object = (void *)0x800000010058F0C0;
  v56._object = (void *)0x80000001005A1B90;
  v55.value._object = (void *)0x800000010058F0A0;
  unint64_t v119 = (void *)0x800000010058F0A0;
  v56._uint64_t countAndFlagsBits = 0xD000000000000020;
  v57._uint64_t countAndFlagsBits = 0;
  v57._object = (void *)0xE000000000000000;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v56, v55, (NSBundle)v54, v57, v154)._countAndFlagsBits;

  sub_10005D034((uint64_t *)&unk_1006AF790);
  uint64_t v58 = swift_allocObject();
  long long v135 = xmmword_10055B970;
  *(_OWORD *)(v58 + 16) = xmmword_10055B970;
  unsigned int v116 = enum case for FMFConfigValue.pendingRemoveGracePeriod(_:);
  uint64_t v59 = v137;
  uint64_t v60 = v138;
  id v115 = *(void (**)(char *))(v138 + 104);
  id v61 = v125;
  v115(v125);
  *((void *)&v145 + 1) = &type metadata for Int;
  Swift::Int v146 = &protocol witness table for Int;
  *(void *)&long long v144 = 30;
  uint64_t v114 = sub_10005D034(&qword_1006B2C40);
  FMFDimplekeyGlobalConfig<A>(_:fallback:)();
  id v62 = *(void (**)(char *, uint64_t))(v60 + 8);
  uint64_t v138 = v60 + 8;
  v62(v61, v59);
  sub_10002CEFC((uint64_t)&v144);
  uint64_t v63 = String.init(format:_:)();
  uint64_t v117 = v64;
  uint64_t countAndFlagsBits = v63;
  swift_bridgeObjectRelease();
  id v65 = [v136 mainBundle];
  v66._object = (void *)0x80000001005A1BC0;
  v66._uint64_t countAndFlagsBits = 0xD000000000000022;
  v67.value._object = v119;
  v67.value._uint64_t countAndFlagsBits = v120;
  v68._uint64_t countAndFlagsBits = 0;
  v68._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v66, v67, (NSBundle)v65, v68, v121);

  *(_OWORD *)(swift_allocObject() + 16) = v135;
  id v69 = v61;
  uint64_t v70 = v61;
  uint64_t v71 = v137;
  ((void (*)(char *, void, uint64_t))v115)(v70, v116, v137);
  Swift::Int v146 = &protocol witness table for Int;
  *((void *)&v145 + 1) = &type metadata for Int;
  *(void *)&long long v144 = 30;
  FMFDimplekeyGlobalConfig<A>(_:fallback:)();
  v62(v69, v71);
  sub_10002CEFC((uint64_t)&v144);
  uint64_t v72 = String.init(format:_:)();
  uint64_t v74 = v73;
  uint64_t v75 = v123;
  swift_bridgeObjectRelease();
  id v76 = [v122 systemBlueColor];
  uint64_t v77 = v72;
  uint64_t v78 = v124;
  sub_1001A9614(countAndFlagsBits, v117, v77, v74, v76, &v144);
  if (!v75 && v78 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v79 = v113;
    id v80 = v136;
    uint64_t v81 = &off_100686000;
  }
  else
  {
    uint64_t v79 = v113;
    id v82 = *(char **)(v113 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView);
    id v83 = (uint64_t *)&v82[OBJC_IVAR____TtC6FindMy19FMActionLandingView_footnote];
    uint64_t *v83 = v75;
    v83[1] = v78;
    id v84 = v82;
    swift_bridgeObjectRelease();
    id v85 = *(void **)&v84[OBJC_IVAR____TtC6FindMy19FMActionLandingView_footnoteLabel];
    if (v83[1])
    {
      id v86 = v85;
      swift_bridgeObjectRetain();
      NSString v87 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v88 = v85;
      NSString v87 = 0;
    }
    uint64_t v81 = &off_100686000;
    [v85 setText:v87];

    id v80 = v136;
  }
  uint64_t v89 = OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView;
  double v90 = (char *)objc_retain(*(id *)(*(void *)(v79 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView)
                                  + OBJC_IVAR____TtC6FindMy19FMActionLandingView_bulletedListView));
  id v91 = [v80 v81[292]];
  v92.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v155._uint64_t countAndFlagsBits = 0xD000000000000018;
  v93._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v155._object = (void *)0x800000010057EF80;
  v93._object = (void *)0x800000010058ADF0;
  v92.value._object = (void *)0x800000010057EF60;
  v94._uint64_t countAndFlagsBits = 0;
  v94._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v93, v92, (NSBundle)v91, v94, v155);

  uint64_t v95 = *(void **)(*(void *)&v90[OBJC_IVAR____TtC6FindMy24FMSymbolBulletedListView_headerView]
                 + OBJC_IVAR____TtC6FindMy30FMSymbolBulletedListHeaderView_titleLabel);
  NSString v96 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v95 setText:v96];

  uint64_t v97 = v129;
  uint64_t v98 = v130;
  v128(v129, v140, v130);
  int v99 = v131;
  FMIPDevice.features.getter();
  v126(v97, v98);
  uint64_t v100 = v132;
  static FMIPFeatures.isPendingRemoveCapable.getter();
  sub_100045D54((unint64_t *)&qword_1006B36D0, (void (*)(uint64_t))&type metadata accessor for FMIPFeatures);
  uint64_t v101 = v134;
  LOBYTE(v98) = dispatch thunk of SetAlgebra.isSuperset(of:)();
  uint64_t v102 = *(void (**)(char *, uint64_t))(v133 + 8);
  v102(v100, v101);
  v102(v99, v101);
  unint64_t v103 = *(void **)(*(void *)(v79 + v89) + OBJC_IVAR____TtC6FindMy19FMActionLandingView_bulletedListView);
  sub_10005D034((uint64_t *)&unk_1006B2BC8);
  uint64_t inited = swift_initStackObject();
  if (v98)
  {
    *(_OWORD *)(inited + 16) = xmmword_10055B960;
    long long v151 = v142;
    v152[0] = v141;
    sub_1001D8900((uint64_t)&v143, (uint64_t)&v150);
    uint64_t v105 = v143;
    long long v106 = v142;
    *(_OWORD *)(inited + 32) = v141;
    *(_OWORD *)(inited + 48) = v106;
    *(void *)(inited + 64) = v105;
    long long v148 = v145;
    long long v149 = v144;
    sub_1001D8900((uint64_t)&v146, (uint64_t)&v147);
    long long v107 = v145;
    *(_OWORD *)(inited + 72) = v144;
    *(_OWORD *)(inited + 88) = v107;
    *(void *)(inited + 104) = v146;
    id v108 = v103;
    sub_1001D8968((uint64_t)v152);
    sub_1001D8968((uint64_t)&v151);
    sub_1001D8994(&v150);
    sub_1001D8968((uint64_t)&v149);
    sub_1001D8968((uint64_t)&v148);
    sub_1001D8994(&v147);
    sub_100383B0C(inited);
    sub_1001D89C0((uint64_t)v152);
    sub_1001D89C0((uint64_t)&v151);
    sub_1001D89EC(&v150);
    sub_1001D89C0((uint64_t)&v149);
    sub_1001D89C0((uint64_t)&v148);
  }
  else
  {
    *(_OWORD *)(inited + 16) = v135;
    long long v151 = v142;
    v152[0] = v141;
    sub_1001D8900((uint64_t)&v143, (uint64_t)&v150);
    uint64_t v109 = v143;
    long long v110 = v142;
    *(_OWORD *)(inited + 32) = v141;
    *(_OWORD *)(inited + 48) = v110;
    *(void *)(inited + 64) = v109;
    id v111 = v103;
    sub_1001D8968((uint64_t)v152);
    sub_1001D8968((uint64_t)&v151);
    sub_1001D8994(&v150);
    sub_100383B0C(inited);
    sub_1001D89C0((uint64_t)v152);
    sub_1001D89C0((uint64_t)&v151);
    sub_1001D89EC(&v150);
    long long v149 = v144;
    sub_1001D89C0((uint64_t)&v149);
    long long v148 = v145;
    sub_1001D89C0((uint64_t)&v148);
    sub_1001D8900((uint64_t)&v146, (uint64_t)&v147);
  }
  sub_1001D89EC(&v147);
  swift_setDeallocating();
  swift_arrayDestroy();
}

void sub_100516EE0()
{
  uint64_t v1 = type metadata accessor for FMIPBeaconType();
  uint64_t v140 = *(void *)(v1 - 8);
  uint64_t v141 = v1;
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v139 = (char *)v127 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v138 = (char *)v127 - v4;
  uint64_t v5 = type metadata accessor for FMIPFeatures();
  uint64_t v143 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)v127 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v127 - v9;
  uint64_t v11 = type metadata accessor for FMIPDevice();
  uint64_t v148 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v127 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v12 + 16;
  id v147 = *(void (**)(char *))(v12 + 16);
  uint64_t v144 = v0 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove;
  v147(v14);
  FMIPDevice.features.getter();
  id v16 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v145 = v12 + 8;
  v16(v14, v11);
  static FMIPFeatures.isRemoveUIv2Supported.getter();
  uint64_t v17 = v5;
  v127[1] = sub_100045D54((unint64_t *)&qword_1006B36D0, (void (*)(uint64_t))&type metadata accessor for FMIPFeatures);
  char v18 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  uint64_t v19 = v143 + 8;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v143 + 8);
  uint64_t v130 = v8;
  v20(v8, v17);
  uint64_t v21 = v19;
  uint64_t v22 = v10;
  char v23 = v10;
  id v128 = v20;
  uint64_t v24 = v21;
  v20(v23, v17);
  uint64_t v25 = v148;
  uint64_t v142 = v15;
  uint64_t v143 = v24;
  Swift::Int v146 = v16;
  uint64_t v131 = v17;
  id v129 = v22;
  uint64_t v137 = v14;
  if (v18)
  {
    uint64_t v26 = v149 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_viewModel;
    LODWORD(v26) = *(unsigned __int8 *)(v26 + *(int *)(type metadata accessor for FMDeviceDetailViewModel() + 172));
    id v27 = [self mainBundle];
    if (v26 == 1)
    {
      unint64_t v28 = 0xD00000000000002ALL;
      unint64_t v125 = 0x800000010058CBA0;
      uint64_t v29 = "ACCESSORY_REMOVE2_NOT_WITH_YOU_DESCRIPTION";
    }
    else
    {
      unint64_t v28 = 0xD00000000000001DLL;
      unint64_t v125 = 0x800000010058CBA0;
      uint64_t v29 = "ACCESSORY_REMOVE2_DESCRIPTION";
    }
    unint64_t v40 = (unint64_t)(v29 - 32) | 0x8000000000000000;
    v41.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v41.value._object = (void *)0xEC00000031656C62;
    v42._uint64_t countAndFlagsBits = 0;
    v42._object = (void *)0xE000000000000000;
    unint64_t v43 = 0xD000000000000017;
    Swift::String v132 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v28, v41, (NSBundle)v27, v42, *(Swift::String *)(&v125 - 1));

    id v44 = [self mainBundle];
    v45._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
    v164._object = (void *)0x800000010058CBA0;
    v45._object = (void *)0x80000001005A1A40;
    v46.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v46.value._object = (void *)0xEC00000031656C62;
    v47._uint64_t countAndFlagsBits = 0;
    v47._object = (void *)0xE000000000000000;
    v164._uint64_t countAndFlagsBits = 0xD000000000000017;
    Swift::String v133 = NSLocalizedString(_:tableName:bundle:value:comment:)(v45, v46, (NSBundle)v44, v47, v164);
  }
  else
  {
    ((void (*)(_UNKNOWN **__return_ptr, char *, uint64_t, uint64_t))v147)(&off_1006C1000, v14, v144, v148);
    char v30 = FMIPDevice.isLocalFindable.getter();
    v146(v14, v25);
    if (v30)
    {
      id v31 = self;
      id v32 = [v31 mainBundle];
      v162._object = (void *)0x800000010058CEE0;
      v33._object = (void *)0x80000001005A19E0;
      v33._uint64_t countAndFlagsBits = 0xD000000000000017;
      v34.value._uint64_t countAndFlagsBits = 0xD000000000000010;
      v34.value._object = (void *)0x800000010058CEC0;
      v35._uint64_t countAndFlagsBits = 0;
      v35._object = (void *)0xE000000000000000;
      v162._uint64_t countAndFlagsBits = 0xD000000000000015;
      Swift::String v132 = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, v34, (NSBundle)v32, v35, v162);

      id v36 = [v31 mainBundle];
      v37._uint64_t countAndFlagsBits = 0xD000000000000014;
      v163._object = (void *)0x800000010058CEE0;
      v37._object = (void *)0x80000001005A1A00;
      v38.value._uint64_t countAndFlagsBits = 0xD000000000000010;
      v38.value._object = (void *)0x800000010058CEC0;
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      v163._uint64_t countAndFlagsBits = 0xD000000000000015;
      Swift::String v133 = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, v38, (NSBundle)v36, v39, v163);
    }
    else
    {
      *(void *)&long long v153 = 0;
      *((void *)&v153 + 1) = 0xE000000000000000;
      v133._object = (void *)0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      id v48 = [self mainBundle];
      v49._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
      v165._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
      v165._object = (void *)0x80000001005A1850;
      v49._object = (void *)0x80000001005A1830;
      v50._uint64_t countAndFlagsBits = 0;
      v50._object = (void *)0xE000000000000000;
      Swift::String v132 = NSLocalizedString(_:tableName:bundle:value:comment:)(v49, (Swift::String_optional)0, (NSBundle)v48, v50, v165);

      v133._uint64_t countAndFlagsBits = 0;
    }
  }
  uint64_t v51 = self;
  id v52 = [v51 mainBundle];
  v53.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v166._uint64_t countAndFlagsBits = 0xD000000000000018;
  v54._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  long long v135 = "Localizable-HAWKEYE";
  v166._object = (void *)0x800000010057EF80;
  v54._object = (void *)0x800000010058AD30;
  uint64_t v134 = "CLEAR_TAGS_BUTTON";
  v53.value._object = (void *)0x800000010057EF60;
  unint64_t v136 = 0xD000000000000013;
  v55._uint64_t countAndFlagsBits = 0;
  v55._object = (void *)0xE000000000000000;
  Swift::String v56 = NSLocalizedString(_:tableName:bundle:value:comment:)(v54, v53, (NSBundle)v52, v55, v166);
  uint64_t countAndFlagsBits = v56._countAndFlagsBits;
  object = v56._object;

  uint64_t v59 = v149 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_viewModel;
  if (*(unsigned char *)(v59 + *(int *)(type metadata accessor for FMDeviceDetailViewModel() + 172)) == 1)
  {
    swift_bridgeObjectRelease();
    id v60 = [v51 mainBundle];
    v61._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
    v167._object = (void *)0x800000010058CBA0;
    v61._object = (void *)0x80000001005A19B0;
    v62.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v62.value._object = (void *)0xEC00000031656C62;
    v63._uint64_t countAndFlagsBits = 0;
    v63._object = (void *)0xE000000000000000;
    v167._uint64_t countAndFlagsBits = 0xD000000000000017;
    Swift::String v64 = NSLocalizedString(_:tableName:bundle:value:comment:)(v61, v62, (NSBundle)v60, v63, v167);
    uint64_t countAndFlagsBits = v64._countAndFlagsBits;
    object = v64._object;
  }
  uint64_t v66 = v132._countAndFlagsBits;
  id v65 = v132._object;
  Swift::String_optional v67 = self;
  sub_1001A9614(countAndFlagsBits, (uint64_t)object, v66, (uint64_t)v65, [v67 systemPinkColor], &v150);
  *(void *)&long long v153 = 0;
  *((void *)&v153 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  v68.super.Class isa = (Class)[v51 mainBundle];
  v69._uint64_t countAndFlagsBits = 0xD000000000000028;
  v168._uint64_t countAndFlagsBits = 0xD00000000000003ALL;
  v168._object = (void *)0x80000001005A18B0;
  v69._object = (void *)0x80000001005A1880;
  v70._uint64_t countAndFlagsBits = 0;
  v70._object = (void *)0xE000000000000000;
  Swift::String v71 = NSLocalizedString(_:tableName:bundle:value:comment:)(v69, (Swift::String_optional)0, v68, v70, v168);

  uint64_t v72 = v137;
  uint64_t v73 = v148;
  ((void (*)(char *, uint64_t, uint64_t))v147)(v137, v144, v148);
  LOBYTE(v68.super.isa) = FMIPDevice.isLocalFindable.getter();
  v146(v72, v73);
  if ((uint64_t)v68.super.isa)
  {
    id v74 = [v51 mainBundle];
    unint64_t v75 = 0xD000000000000010;
    unint64_t v76 = 0xD000000000000015;
    unint64_t v77 = 0xD00000000000002ALL;
    unint64_t v126 = 0x800000010058CEE0;
    unint64_t v78 = 0x80000001005A1980;
    unint64_t v79 = 0x800000010058CEC0;
  }
  else
  {
    *(void *)&long long v153 = 0;
    *((void *)&v153 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v74 = [v51 mainBundle];
    unint64_t v77 = 0xD00000000000002DLL;
    unint64_t v76 = 0xD00000000000003FLL;
    unint64_t v126 = 0x80000001005A1920;
    unint64_t v78 = 0x80000001005A18F0;
    unint64_t v75 = 0;
    unint64_t v79 = 0;
  }
  v80._uint64_t countAndFlagsBits = 0;
  v80._object = (void *)0xE000000000000000;
  Swift::String v81 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v77, *(Swift::String_optional *)&v75, (NSBundle)v74, v80, *(Swift::String *)&v76);

  sub_1001A9614(v71._countAndFlagsBits, (uint64_t)v71._object, v81._countAndFlagsBits, (uint64_t)v81._object, [v67 systemPinkColor], &v153);
  uint64_t v83 = v133._countAndFlagsBits;
  id v82 = v133._object;
  if (!v133._countAndFlagsBits && v133._object == (void *)0xE000000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v84 = v149;
    uint64_t v85 = v144;
    NSString v87 = v135;
    uint64_t v86 = v136;
    id v88 = v134;
  }
  else
  {
    uint64_t v89 = *(char **)(v149 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView);
    double v90 = (uint64_t *)&v89[OBJC_IVAR____TtC6FindMy19FMActionLandingView_footnote];
    *double v90 = v83;
    v90[1] = (uint64_t)v82;
    id v91 = v89;
    swift_bridgeObjectRelease();
    Swift::String_optional v92 = *(void **)&v91[OBJC_IVAR____TtC6FindMy19FMActionLandingView_footnoteLabel];
    id v88 = v134;
    NSString v87 = v135;
    if (v90[1])
    {
      id v93 = v92;
      swift_bridgeObjectRetain();
      NSString v94 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v95 = v92;
      NSString v94 = 0;
    }
    uint64_t v85 = v144;
    [v92 setText:v94];

    uint64_t v84 = v149;
    uint64_t v86 = v136;
  }
  unint64_t v136 = OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView;
  NSString v96 = (char *)objc_retain(*(id *)(*(void *)(v84 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView)
                                  + OBJC_IVAR____TtC6FindMy19FMActionLandingView_bulletedListView));
  id v97 = [v51 mainBundle];
  v169._uint64_t countAndFlagsBits = 0xD000000000000018;
  v98._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v169._object = (void *)((unint64_t)v87 | 0x8000000000000000);
  v98._object = (void *)0x800000010058ADF0;
  v99.value._object = (void *)((unint64_t)v88 | 0x8000000000000000);
  v99.value._uint64_t countAndFlagsBits = v86;
  v100._uint64_t countAndFlagsBits = 0;
  v100._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v98, v99, (NSBundle)v97, v100, v169);

  uint64_t v101 = *(void **)(*(void *)&v96[OBJC_IVAR____TtC6FindMy24FMSymbolBulletedListView_headerView]
                  + OBJC_IVAR____TtC6FindMy30FMSymbolBulletedListHeaderView_titleLabel);
  NSString v102 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v101 setText:v102];

  unint64_t v104 = (void (*)(char *, uint64_t, uint64_t))v147;
  uint64_t v103 = v148;
  ((void (*)(char *, uint64_t, uint64_t))v147)(v72, v85, v148);
  uint64_t v105 = v138;
  FMIPDevice.beaconType.getter();
  v146(v72, v103);
  long long v107 = v139;
  uint64_t v106 = v140;
  uint64_t v108 = v141;
  (*(void (**)(char *, void, uint64_t))(v140 + 104))(v139, enum case for FMIPBeaconType.localFindable(_:), v141);
  LOBYTE(v96) = static FMIPBeaconType.== infix(_:_:)();
  uint64_t v109 = *(void (**)(char *, uint64_t))(v106 + 8);
  v109(v107, v108);
  v109(v105, v108);
  if (v96) {
    goto LABEL_25;
  }
  v104(v72, v144, v103);
  long long v110 = v129;
  FMIPDevice.features.getter();
  v146(v72, v103);
  id v111 = v130;
  static FMIPFeatures.isRemoveUIv2Supported.getter();
  uint64_t v112 = v131;
  char v113 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  uint64_t v114 = v128;
  v128(v111, v112);
  v114(v110, v112);
  if ((v113 & 1) == 0)
  {
LABEL_25:
    uint64_t v120 = *(void **)(*(void *)(v149 + v136) + OBJC_IVAR____TtC6FindMy19FMActionLandingView_bulletedListView);
    sub_10005D034((uint64_t *)&unk_1006B2BC8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10055B960;
    long long v160 = v151;
    v161[0] = v150;
    sub_1001D8900((uint64_t)&v152, (uint64_t)&v159);
    uint64_t v122 = v152;
    long long v123 = v151;
    *(_OWORD *)(inited + 32) = v150;
    *(_OWORD *)(inited + 48) = v123;
    *(void *)(inited + 64) = v122;
    long long v157 = v154;
    long long v158 = v153;
    sub_1001D8900((uint64_t)&v155, (uint64_t)&v156);
    long long v124 = v154;
    *(_OWORD *)(inited + 72) = v153;
    *(_OWORD *)(inited + 88) = v124;
    *(void *)(inited + 104) = v155;
    id v119 = v120;
    sub_1001D8968((uint64_t)v161);
    sub_1001D8968((uint64_t)&v160);
    sub_1001D8994(&v159);
    sub_1001D8968((uint64_t)&v158);
    sub_1001D8968((uint64_t)&v157);
    sub_1001D8994(&v156);
    sub_100383B0C(inited);
    sub_1001D89C0((uint64_t)v161);
    sub_1001D89C0((uint64_t)&v160);
    sub_1001D89EC(&v159);
    sub_1001D89C0((uint64_t)&v158);
    sub_1001D89C0((uint64_t)&v157);
    sub_1001D89EC(&v156);
    swift_setDeallocating();
  }
  else
  {
    id v115 = *(void **)(*(void *)(v149 + v136) + OBJC_IVAR____TtC6FindMy19FMActionLandingView_bulletedListView);
    sub_10005D034((uint64_t *)&unk_1006B2BC8);
    uint64_t v116 = swift_initStackObject();
    *(_OWORD *)(v116 + 16) = xmmword_10055B970;
    long long v160 = v151;
    v161[0] = v150;
    sub_1001D8900((uint64_t)&v152, (uint64_t)&v159);
    uint64_t v117 = v152;
    long long v118 = v151;
    *(_OWORD *)(v116 + 32) = v150;
    *(_OWORD *)(v116 + 48) = v118;
    *(void *)(v116 + 64) = v117;
    id v119 = v115;
    sub_1001D8968((uint64_t)v161);
    sub_1001D8968((uint64_t)&v160);
    sub_1001D8994(&v159);
    sub_100383B0C(v116);
    sub_1001D89C0((uint64_t)v161);
    sub_1001D89C0((uint64_t)&v160);
    sub_1001D89EC(&v159);
    long long v158 = v153;
    sub_1001D89C0((uint64_t)&v158);
    long long v157 = v154;
    sub_1001D89C0((uint64_t)&v157);
    sub_1001D8900((uint64_t)&v155, (uint64_t)&v156);
    sub_1001D89EC(&v156);
    swift_setDeallocating();
  }
  swift_arrayDestroy();
}

void sub_100517E7C()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView;
  [*(id *)&v0[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView] setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_10005D034(&qword_1006AF2D0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10055B950;
  id v3 = [*(id *)&v0[v1] topAnchor];
  id v4 = [v0 view];
  if (!v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = v4;
  id v6 = [v4 topAnchor];

  id v7 = [v3 constraintEqualToAnchor:v6];
  *(void *)(v2 + 32) = v7;
  id v8 = [*(id *)&v0[v1] bottomAnchor];
  id v9 = [v0 view];
  if (!v9)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v10 = v9;
  id v11 = [v9 bottomAnchor];

  id v12 = [v8 constraintEqualToAnchor:v11];
  *(void *)(v2 + 40) = v12;
  id v13 = [*(id *)&v0[v1] leadingAnchor];
  id v14 = [v0 view];
  if (!v14)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v15 = v14;
  id v16 = [v14 leadingAnchor];

  id v17 = [v13 constraintEqualToAnchor:v16];
  *(void *)(v2 + 48) = v17;
  id v18 = [*(id *)&v0[v1] trailingAnchor];
  id v19 = [v0 view];
  if (!v19)
  {
LABEL_11:
    __break(1u);
    return;
  }
  uint64_t v20 = v19;
  uint64_t v21 = self;
  id v22 = [v20 trailingAnchor];

  id v23 = [v18 constraintEqualToAnchor:v22];
  *(void *)(v2 + 56) = v23;
  specialized Array._endMutation()();
  sub_100006060(0, (unint64_t *)&qword_1006AEE60);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v21 activateConstraints:isa];
}

void sub_100518170()
{
  uint64_t v1 = type metadata accessor for FMIPFeatures();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v7 = (char *)&v29 - v6;
  uint64_t v8 = type metadata accessor for FMIPDevice();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  Swift::String v33 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v13 = (char *)&v29 - v12;
  uint64_t v34 = v0;
  id v31 = *(void (**)(char *))(v9 + 16);
  uint64_t v32 = v0 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove;
  v31((char *)&v29 - v12);
  FMIPDevice.features.getter();
  char v30 = *(void (**)(char *, uint64_t))(v9 + 8);
  v30(v13, v8);
  static FMIPFeatures.isRemoveUIv2Supported.getter();
  sub_100045D54((unint64_t *)&qword_1006B36D0, (void (*)(uint64_t))&type metadata accessor for FMIPFeatures);
  char v14 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15(v5, v1);
  v15(v7, v1);
  if (v14)
  {
    id v16 = objc_allocWithZone((Class)UITapGestureRecognizer);
    uint64_t v17 = v34;
    id v18 = [v16 initWithTarget:v34 action:"performRemoveAccessory"];
  }
  else
  {
    id v19 = v33;
    uint64_t v17 = v34;
    uint64_t v21 = (void (*)(char *, uint64_t, uint64_t))v31;
    uint64_t v20 = v32;
    ((void (*)(char *, uint64_t, uint64_t))v31)(v33, v32, v8);
    char v22 = FMIPDevice.isConsideredAccessory.getter();
    id v23 = v19;
    uint64_t v24 = v30;
    v30(v23, v8);
    if ((v22 & 1) != 0
      && (v21(v13, v20, v8), char v25 = FMIPDevice.isAppleAudioAccessory.getter(), v24(v13, v8), (v25 & 1) != 0))
    {
      uint64_t v26 = "removeItem";
    }
    else
    {
      uint64_t v26 = "performRemoveDevice";
    }
    id v18 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v17 action:v26];
  }
  id v27 = v18;
  id v28 = objc_retain(*(id *)(*(void *)(v17 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView)
                          + OBJC_IVAR____TtC6FindMy19FMActionLandingView_performButton));
  [v28 addGestureRecognizer:v27];
}

uint64_t sub_1005184E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPDevice();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(unsigned char **)&v0[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView];
  v6[OBJC_IVAR____TtC6FindMy19FMActionLandingView_showsActivity] = 1;
  id v7 = v6;
  sub_1001BFB84();

  id v8 = [v1 navigationItem];
  id v9 = [v8 leftBarButtonItem];

  if (v9)
  {
    [v9 setEnabled:0];
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, (uint64_t)v1 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove, v2);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v1;
  swift_retain();
  sub_1000D1520((uint64_t)v5, (uint64_t)v1, (uint64_t)sub_10051D990, v10);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1005186C0(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  unint64_t v78 = a4;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v73 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v72 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10005D034(&qword_1006B2AF0);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FMIPActionStatus();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = v6;
  uint64_t v77 = v5;
  uint64_t v75 = v9;
  id v74 = v8;
  if (!a2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    goto LABEL_7;
  }
  swift_getErrorValue();
  uint64_t v18 = sub_10027E880(v79);
  uint64_t v20 = v19;
  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!v20)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    BOOL v23 = 0;
    goto LABEL_10;
  }
  if (v18 == v21 && v20 == v22)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL v23 = 0;
    if ((v24 & 1) == 0) {
      goto LABEL_10;
    }
  }
  swift_getErrorValue();
  BOOL v23 = sub_10027E720(v80) == (id)-7003;
LABEL_10:
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for FMIPActionStatus.error(_:), v14);
  sub_100045D54(&qword_1006C03C0, (void (*)(uint64_t))&type metadata accessor for FMIPActionStatus);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  char v25 = aBlock;
  uint64_t v26 = v87;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (v25 == v26)
  {
    id v27 = v78;
    id v28 = *(unsigned char **)&v78[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView];
    v28[OBJC_IVAR____TtC6FindMy19FMActionLandingView_showsActivity] = 0;
    uint64_t v29 = v28;
    sub_1001BFB84();

    if (v23)
    {
      id v30 = [v27 navigationItem];
      id v31 = [v30 leftBarButtonItem];

      if (v31)
      {
        [v31 setEnabled:1];
      }
    }
    else
    {
      uint64_t v32 = &v27[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove];
      Swift::String v71 = &v27[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove];
      uint64_t v33 = type metadata accessor for FMIPDevice();
      uint64_t v34 = *(void *)(v33 - 8);
      Swift::String v35 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
      v35(v13, v32, v33);
      id v36 = *(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56);
      v36(v13, 0, 1, v33);
      uint64_t v37 = sub_10022FDEC(0xD00000000000001FLL, 0x80000001005A17E0, (uint64_t)v13);
      Swift::String v39 = v38;
      uint64_t v41 = v40;
      unint64_t v43 = v42;
      swift_bridgeObjectRetain();
      sub_10022F23C(v37, v39, v41, v43, 0, 0);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      sub_100003F10((uint64_t)v13, &qword_1006B2AF0);
      v35(v13, v71, v33);
      v36(v13, 0, 1, v33);
      uint64_t v44 = sub_10022FDEC(0xD000000000000021, 0x80000001005A1800, (uint64_t)v13);
      Swift::String_optional v46 = v45;
      uint64_t v48 = v47;
      Swift::String v50 = v49;
      swift_bridgeObjectRetain();
      sub_10022F23C(v44, v46, v48, v50, 0, 0);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      sub_100003F10((uint64_t)v13, &qword_1006B2AF0);
      NSString v51 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v52 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v53 = [self alertControllerWithTitle:v51 message:v52 preferredStyle:1];

      uint64_t aBlock = 0;
      unint64_t v82 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      id v54 = [self mainBundle];
      v88._object = (void *)0x800000010057F840;
      v55._uint64_t countAndFlagsBits = 0x4F545455425F4B4FLL;
      v55._object = (void *)0xEF454C5449545F4ELL;
      v56._uint64_t countAndFlagsBits = 0;
      v56._object = (void *)0xE000000000000000;
      v88._uint64_t countAndFlagsBits = 0xD000000000000021;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v55, (Swift::String_optional)0, (NSBundle)v54, v56, v88);

      uint64_t v57 = swift_allocObject();
      uint64_t v58 = v78;
      *(void *)(v57 + 16) = v78;
      uint64_t v59 = v58;
      NSString v60 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      uint64_t v85 = sub_10051D998;
      uint64_t v86 = v57;
      uint64_t aBlock = _NSConcreteStackBlock;
      unint64_t v82 = 1107296256;
      uint64_t v83 = sub_10000841C;
      uint64_t v84 = &unk_100643D80;
      Swift::String v61 = _Block_copy(&aBlock);
      swift_release();
      id v62 = [self actionWithTitle:v60 style:0 handler:v61];
      _Block_release(v61);

      [v53 addAction:v62];
      sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
      Swift::String v63 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v64 = swift_allocObject();
      *(void *)(v64 + 16) = v59;
      *(void *)(v64 + 24) = v53;
      uint64_t v85 = sub_1000B7854;
      uint64_t v86 = v64;
      uint64_t aBlock = _NSConcreteStackBlock;
      unint64_t v82 = 1107296256;
      uint64_t v83 = sub_10003C410;
      uint64_t v84 = &unk_100643DD0;
      id v65 = _Block_copy(&aBlock);
      uint64_t v66 = v59;
      id v67 = v53;
      swift_release();
      NSBundle v68 = v72;
      static DispatchQoS.unspecified.getter();
      uint64_t aBlock = (void **)_swiftEmptyArrayStorage;
      sub_100045D54((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10005D034((uint64_t *)&unk_1006AE4B0);
      sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
      Swift::String v69 = v74;
      uint64_t v70 = v77;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v65);

      (*(void (**)(char *, uint64_t))(v76 + 8))(v69, v70);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v68, v75);
    }
  }
  else
  {
    sub_10051C750();
  }
}

void sub_100519100()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_viewModel];
  if (v1[*(int *)(type metadata accessor for FMDeviceDetailViewModel() + 172)] == 1)
  {
    uint64_t v2 = self;
    id v3 = [v2 mainBundle];
    v4._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
    v36._object = (void *)0x800000010058CBA0;
    v4._object = (void *)0x80000001005A1710;
    v5.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v5.value._object = (void *)0xEC00000031656C62;
    v6._uint64_t countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    v36._uint64_t countAndFlagsBits = 0xD000000000000017;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v36);

    id v7 = [v2 mainBundle];
    v8._uint64_t countAndFlagsBits = 0xD000000000000032;
    v37._object = (void *)0x800000010058CBA0;
    v8._object = (void *)0x80000001005A1740;
    v9.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v9.value._object = (void *)0xEC00000031656C62;
    v10._uint64_t countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    v37._uint64_t countAndFlagsBits = 0xD000000000000017;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v37);

    id v11 = [v2 mainBundle];
    v12._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
    v38._object = (void *)0x800000010058CBA0;
    v12._object = (void *)0x80000001005A1780;
    v13.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v13.value._object = (void *)0xEC00000031656C62;
    v14._uint64_t countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    v38._uint64_t countAndFlagsBits = 0xD000000000000017;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v38);

    id v15 = [v2 mainBundle];
    v16._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
    v39._object = (void *)0x800000010058CBA0;
    v16._object = (void *)0x80000001005A17B0;
    v17.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v17.value._object = (void *)0xEC00000031656C62;
    v18._uint64_t countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    v39._uint64_t countAndFlagsBits = 0xD000000000000017;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v15, v18, v39);

    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v21 = [self alertControllerWithTitle:v19 message:v20 preferredStyle:1];

    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    BOOL v23 = self;
    id v24 = [v23 actionWithTitle:v22 style:1 handler:0];

    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v0;
    uint64_t v26 = v0;
    NSString v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_10051D96C;
    aBlock[5] = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10000841C;
    aBlock[3] = &unk_100643D08;
    id v28 = _Block_copy(aBlock);
    swift_release();
    id v29 = [v23 actionWithTitle:v27 style:2 handler:v28];
    _Block_release(v28);

    [v21 addAction:v29];
    [v21 addAction:v24];
    id v30 = [v21 popoverPresentationController];
    if (v30)
    {
      id v31 = v30;
      [v30 setSourceView:*(void *)(*(void *)&v26[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView]+ OBJC_IVAR____TtC6FindMy19FMActionLandingView_performButton)];
    }
    id v32 = [v21 popoverPresentationController];
    if (v32)
    {
      uint64_t v33 = v32;
      [*(id *)(*(void *)&v26[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView]+ OBJC_IVAR____TtC6FindMy19FMActionLandingView_performButton) bounds];
      [v33 setSourceRect:];
    }
    [v26 presentViewController:v21 animated:1 completion:0];
  }
  else
  {
    sub_10051963C();
  }
}

uint64_t sub_10051963C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPDevice();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  Swift::String_optional v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000606BC(v6, (uint64_t)qword_1006D1E98);
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    Swift::String_optional v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String_optional v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "FMRemoveDeviceViewController: Remove device button pressed for accessory", v9, 2u);
    swift_slowDealloc();
  }

  Swift::String v10 = *(unsigned char **)&v1[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView];
  v10[OBJC_IVAR____TtC6FindMy19FMActionLandingView_showsActivity] = 1;
  id v11 = v10;
  sub_1001BFB84();

  id v12 = [v1 navigationItem];
  id v13 = [v12 leftBarButtonItem];

  if (v13)
  {
    [v13 setEnabled:0];
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, &v1[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove], v2);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v1;
  swift_retain();
  sub_1000D1520((uint64_t)v5, (uint64_t)v1, (uint64_t)sub_10051D964, v14);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1005198D8(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  os_log_type_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v51 = *(void *)(v9 - 8);
  uint64_t v52 = v9;
  __chkstk_darwin(v9);
  id v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FMIPActionStatus();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for FMIPActionStatus.error(_:), v12);
  sub_100045D54(&qword_1006C03C0, (void (*)(uint64_t))&type metadata accessor for FMIPActionStatus);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  uint64_t v16 = aBlock;
  Swift::String_optional v17 = v59;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (v16 != v17) {
    return sub_10051C750();
  }
  Swift::String v18 = *(unsigned char **)&a4[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView];
  v18[OBJC_IVAR____TtC6FindMy19FMActionLandingView_showsActivity] = 0;
  NSString v19 = v18;
  sub_1001BFB84();

  NSString v20 = self;
  uint64_t v49 = v5;
  id v21 = [v20 mainBundle];
  v22._uint64_t countAndFlagsBits = 0xD000000000000022;
  uint64_t v48 = v8;
  v60._object = (void *)0x800000010058CBA0;
  v22._object = (void *)0x80000001005A16B0;
  v23.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v23.value._object = (void *)0xEC00000031656C62;
  v24._uint64_t countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v60._uint64_t countAndFlagsBits = 0xD000000000000017;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v60);

  id v25 = [v20 mainBundle];
  v26._uint64_t countAndFlagsBits = 0xD000000000000024;
  v61._object = (void *)0x800000010058CBA0;
  v26._object = (void *)0x80000001005A16E0;
  v27.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v27.value._object = (void *)0xEC00000031656C62;
  v28._uint64_t countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  v61._uint64_t countAndFlagsBits = 0xD000000000000017;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v26, v27, (NSBundle)v25, v28, v61);
  uint64_t v50 = v6;

  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v31 = [self alertControllerWithTitle:v29 message:v30 preferredStyle:1];

  uint64_t aBlock = 0;
  unint64_t v54 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v32 = [v20 mainBundle];
  v62._uint64_t countAndFlagsBits = 0xD000000000000021;
  v62._object = (void *)0x800000010057F840;
  v33._uint64_t countAndFlagsBits = 0x4F545455425F4B4FLL;
  v33._object = (void *)0xEF454C5449545F4ELL;
  v34._uint64_t countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v33, (Swift::String_optional)0, (NSBundle)v32, v34, v62);

  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = a4;
  Swift::String v36 = a4;
  NSString v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v57 = sub_10051DB40;
  uint64_t v58 = v35;
  uint64_t aBlock = _NSConcreteStackBlock;
  unint64_t v54 = 1107296256;
  Swift::String v55 = sub_10000841C;
  Swift::String v56 = &unk_100643C68;
  Swift::String v38 = _Block_copy(&aBlock);
  swift_release();
  id v39 = [self actionWithTitle:v37 style:0 handler:v38];
  _Block_release(v38);

  [v31 addAction:v39];
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v40 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = v36;
  *(void *)(v41 + 24) = v31;
  uint64_t v57 = sub_10051DB88;
  uint64_t v58 = v41;
  uint64_t aBlock = _NSConcreteStackBlock;
  unint64_t v54 = 1107296256;
  Swift::String v55 = sub_10003C410;
  Swift::String v56 = &unk_100643CB8;
  Swift::String v42 = _Block_copy(&aBlock);
  unint64_t v43 = v36;
  id v44 = v31;
  swift_release();
  static DispatchQoS.unspecified.getter();
  uint64_t aBlock = (void **)_swiftEmptyArrayStorage;
  sub_100045D54((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  Swift::String_optional v46 = v48;
  uint64_t v45 = v49;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v42);

  (*(void (**)(char *, uint64_t))(v50 + 8))(v46, v45);
  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v11, v52);
}

void sub_10051A040(int a1, id a2)
{
  id v2 = [a2 navigationItem];
  id v3 = [v2 leftBarButtonItem];

  if (v3)
  {
    [v3 setEnabled:1];
  }
}

void sub_10051A124()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10005D034(&qword_1006B36B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FMIPDevice();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  os_log_type_t v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMIPItemGroup();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  v33[1] = v12;
  Swift::String v34 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v35 = (char *)v33 - v13;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_1000606BC(v14, (uint64_t)qword_1006D1E98);
  id v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    Swift::String_optional v17 = (uint8_t *)swift_slowAlloc();
    v33[0] = v4;
    *(_WORD *)Swift::String_optional v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "FMRemoveDeviceViewController: Remove device button pressed", v17, 2u);
    uint64_t v4 = (char *)v33[0];
    swift_slowDealloc();
  }

  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, &v1[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove], v5);
  FMIPDevice.itemGroup.getter();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9) == 1)
  {
    sub_100003F10((uint64_t)v4, &qword_1006B36B0);
    Swift::String v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      NSString v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "FMRemoveDeviceViewController: Can't remove an unknown device", v20, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    v33[0] = *(void *)(v10 + 32);
    id v21 = v35;
    ((void (*)(char *, char *, uint64_t))v33[0])(v35, v4, v9);
    [v1 setModalInPresentation:1];
    uint64_t v36 = 0;
    unint64_t v37 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    Swift::String v22 = v1;
    id v23 = [self mainBundle];
    v38._uint64_t countAndFlagsBits = 0xD00000000000003ALL;
    v38._object = (void *)0x80000001005A1410;
    v24._object = (void *)0x80000001005A13E0;
    v24._uint64_t countAndFlagsBits = 0xD000000000000028;
    v25._uint64_t countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    Swift::String v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v38);

    Swift::String_optional v27 = *(void **)(*(void *)&v22[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_mediator] + 16);
    Swift::String v28 = v34;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v34, v21, v9);
    unint64_t v29 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v22;
    ((void (*)(unint64_t, char *, uint64_t))v33[0])(v30 + v29, v28, v9);
    uint64_t v31 = v10;
    id v32 = v27;
    sub_1003E6054((uint64_t)v32, v26._countAndFlagsBits, (uint64_t)v26._object, v22, (void (*)(uint64_t))sub_10051D6F8, v30);
    swift_bridgeObjectRelease();

    swift_release();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v35, v9);
  }
}

void sub_10051A674(char a1, void *a2, NSObject *a3)
{
  os_log_t v41 = a3;
  uint64_t v5 = type metadata accessor for FMIPItemGroup();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  os_log_type_t v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t aBlock = 0;
    unint64_t v43 = 0xE000000000000000;
    uint64_t v40 = a2;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    uint64_t v9 = self;
    id v10 = [v9 mainBundle];
    v49._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
    v49._object = (void *)0x80000001005A1470;
    v11._object = (void *)0x80000001005A1450;
    v11._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
    v12._uint64_t countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    v39[2] = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v49)._countAndFlagsBits;

    uint64_t aBlock = 0;
    unint64_t v43 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v13 = [v9 mainBundle];
    v14._uint64_t countAndFlagsBits = 0xD000000000000022;
    v50._uint64_t countAndFlagsBits = 0xD000000000000034;
    v50._object = (void *)0x80000001005A14D0;
    v14._object = (void *)0x80000001005A14A0;
    v15._uint64_t countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    v39[1] = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v50)._countAndFlagsBits;

    uint64_t aBlock = 0;
    unint64_t v43 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v16 = [v9 mainBundle];
    v17._uint64_t countAndFlagsBits = 0xD000000000000023;
    v51._uint64_t countAndFlagsBits = 0xD000000000000035;
    v51._object = (void *)0x80000001005A1540;
    v17._object = (void *)0x80000001005A1510;
    v18._uint64_t countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    v39[3] = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v51)._countAndFlagsBits;

    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v20 = [self alertControllerWithTitle:0 message:v19 preferredStyle:0];

    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Swift::String v22 = self;
    id v23 = [v22 actionWithTitle:v21 style:1 handler:0];

    (*(void (**)(char *, os_log_t, uint64_t))(v6 + 16))((char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v41, v5);
    unint64_t v24 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v25 = swift_allocObject();
    Swift::String v26 = v40;
    *(void *)(v25 + 16) = v40;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v25 + v24, v8, v5);
    Swift::String_optional v27 = v26;
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Swift::String_optional v46 = sub_10051D770;
    uint64_t v47 = v25;
    uint64_t aBlock = _NSConcreteStackBlock;
    unint64_t v43 = 1107296256;
    id v44 = sub_10000841C;
    uint64_t v45 = &unk_100643B78;
    unint64_t v29 = _Block_copy(&aBlock);
    swift_release();
    id v30 = [v22 actionWithTitle:v28 style:2 handler:v29];
    _Block_release(v29);

    [v20 addAction:v30];
    [v20 addAction:v23];
    id v31 = [v20 popoverPresentationController];
    if (v31)
    {
      id v32 = v31;
      [v31 setSourceView:*(void *)(*(void *)&v27[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView]+ OBJC_IVAR____TtC6FindMy19FMActionLandingView_performButton)];
    }
    id v33 = [v20 popoverPresentationController];
    if (v33)
    {
      Swift::String v34 = v33;
      [*(id *)(*(void *)&v27[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView]+ OBJC_IVAR____TtC6FindMy19FMActionLandingView_performButton) bounds];
      [v34 setSourceRect:];
    }
    [v27 presentViewController:v20 animated:1 completion:0];
  }
  else
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    sub_1000606BC(v35, (uint64_t)qword_1006D1E98);
    os_log_t v41 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v41, v36))
    {
      unint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v36, "FMRemoveDeviceViewController: Couldn't remove item, BT is off", v37, 2u);
      swift_slowDealloc();
    }
    os_log_t v38 = v41;
  }
}

uint64_t sub_10051AC80(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v31 = a3;
  uint64_t v4 = type metadata accessor for FMIPItemGroup();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView;
  os_log_type_t v8 = *(unsigned char **)&a2[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView];
  v8[OBJC_IVAR____TtC6FindMy19FMActionLandingView_showsActivity] = 1;
  uint64_t v9 = v8;
  sub_1001BFB84();

  id v10 = *(void **)&a2[v7];
  uint64_t v32 = 0;
  unint64_t v33 = 0xE000000000000000;
  Swift::String v11 = v10;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v12 = [self mainBundle];
  v34._uint64_t countAndFlagsBits = 0xD000000000000028;
  v34._object = (void *)0x80000001005A15A0;
  v13._object = (void *)0x80000001005A1580;
  v13._uint64_t countAndFlagsBits = 0xD000000000000016;
  v14._uint64_t countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  Swift::String v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v34);

  id v16 = (Swift::String *)&v11[OBJC_IVAR____TtC6FindMy19FMActionLandingView_title];
  *id v16 = v15;
  swift_bridgeObjectRelease();
  Swift::String v17 = *(void **)&v11[OBJC_IVAR____TtC6FindMy19FMActionLandingView_titleLabel];
  if (v16->_object)
  {
    id v18 = v17;
    swift_bridgeObjectRetain();
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v20 = v17;
    NSString v19 = 0;
  }
  [v17 setText:v19];

  id v21 = [a2 navigationItem];
  id v22 = [v21 leftBarButtonItem];

  if (v22)
  {
    [v22 setEnabled:0];
  }
  id v23 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v24 = v31;
  v23((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v31, v4);
  type metadata accessor for FMIPRemoveItemGroupAction();
  swift_allocObject();
  uint64_t v25 = FMIPRemoveItemGroupAction.init(itemGroup:forced:)();
  v23((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v4);
  unint64_t v26 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v27 + v26, (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_retain();
  NSString v28 = a2;
  sub_1000CA23C(v25, (uint64_t)sub_10051D8B4, v27);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_10051AFF8(uint64_t a1, uint64_t a2, uint64_t a3, id a4, uint64_t a5)
{
  uint64_t v8 = sub_10005D034(&qword_1006B5AD8);
  __chkstk_darwin(v8 - 8);
  Swift::String v69 = (char *)v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMIPItemActionControllerError();
  Swift::String v11 = *(void (**)(char *, uint64_t))(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  id v67 = (char *)v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  id v16 = (char *)v62 - v15;
  __chkstk_darwin(v14);
  id v18 = (char *)v62 - v17;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  uint64_t v20 = sub_1000606BC(v19, (uint64_t)qword_1006D1E98);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v66 = v20;
  id v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    id v65 = v11;
    uint64_t v24 = (uint8_t *)v23;
    uint64_t v25 = swift_slowAlloc();
    NSBundle v68 = v18;
    uint64_t v70 = a3;
    uint64_t aBlock = v25;
    Swift::String v63 = (char *)a5;
    id v64 = a4;
    *(_DWORD *)uint64_t v24 = 136315138;
    sub_10005D034(&qword_1006B4220);
    uint64_t v26 = Optional.debugDescription.getter();
    uint64_t v70 = sub_1000606F4(v26, v27, &aBlock);
    a5 = (uint64_t)v63;
    a4 = v64;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "FMRemoveDeviceViewController: Performed action successfuly? %s", v24, 0xCu);
    swift_arrayDestroy();
    id v18 = v68;
    swift_slowDealloc();
    Swift::String v11 = v65;
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v28 = (uint64_t)v69;
  if (!a3)
  {
    (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v11 + 7))(v69, 1, 1, v10);
    sub_100003F10(v28, &qword_1006B5AD8);
    sub_10051C750();
    return;
  }
  uint64_t aBlock = a3;
  swift_errorRetain();
  sub_10005D034((uint64_t *)&unk_1006AEEE0);
  int v29 = swift_dynamicCast();
  (*((void (**)(uint64_t, void, uint64_t, uint64_t))v11 + 7))(v28, v29 ^ 1u, 1, v10);
  if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v11 + 6))(v28, 1, v10) == 1)
  {
    sub_100003F10(v28, &qword_1006B5AD8);
LABEL_14:
    sub_10051B9C0(a5);
    return;
  }
  (*((void (**)(char *, uint64_t, uint64_t))v11 + 4))(v18, v28, v10);
  (*((void (**)(char *, void, uint64_t))v11 + 13))(v16, enum case for FMIPItemActionControllerError.tagInUseRemoveFailed(_:), v10);
  char v30 = static FMIPItemActionControllerError.== infix(_:_:)();
  uint64_t v31 = (void (*)(char *, uint64_t))*((void *)v11 + 1);
  v31(v16, v10);
  if ((v30 & 1) == 0)
  {
    v31(v18, v10);
    goto LABEL_14;
  }
  id v65 = v31;
  Swift::String v63 = v16;
  uint64_t aBlock = 0;
  unint64_t v72 = 0xE000000000000000;
  NSBundle v68 = v18;
  Swift::String v69 = (char *)v10;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  uint64_t v32 = self;
  id v33 = [v32 mainBundle];
  v34._uint64_t countAndFlagsBits = 0xD000000000000023;
  v77._uint64_t countAndFlagsBits = 0xD000000000000035;
  v77._object = (void *)0x80000001005A1600;
  v34._object = (void *)0x80000001005A15D0;
  v35._uint64_t countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v34, (Swift::String_optional)0, (NSBundle)v33, v35, v77);

  uint64_t aBlock = 0;
  unint64_t v72 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v36 = [v32 mainBundle];
  v37._uint64_t countAndFlagsBits = 0xD000000000000026;
  v78._uint64_t countAndFlagsBits = 0xD000000000000038;
  v78._object = (void *)0x80000001005A1670;
  v37._object = (void *)0x80000001005A1640;
  v38._uint64_t countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v37, (Swift::String_optional)0, (NSBundle)v36, v38, v78);

  NSString v39 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v41 = [self alertControllerWithTitle:v39 message:v40 preferredStyle:1];

  uint64_t aBlock = 0;
  unint64_t v72 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v42 = [v32 mainBundle];
  v79._object = (void *)0x800000010057F840;
  v43._uint64_t countAndFlagsBits = 0x4F545455425F4B4FLL;
  v43._object = (void *)0xEF454C5449545F4ELL;
  v44._uint64_t countAndFlagsBits = 0;
  v44._object = (void *)0xE000000000000000;
  v79._uint64_t countAndFlagsBits = 0xD000000000000021;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v43, (Swift::String_optional)0, (NSBundle)v42, v44, v79);

  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = a4;
  id v46 = a4;
  NSString v47 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v75 = sub_10051D940;
  uint64_t v76 = v45;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  unint64_t v72 = 1107296256;
  uint64_t v73 = sub_10000841C;
  id v74 = &unk_100643BF0;
  uint64_t v48 = _Block_copy(&aBlock);
  swift_release();
  id v49 = [self actionWithTitle:v47 style:1 handler:v48];
  _Block_release(v48);

  Swift::String v50 = v68;
  [v41 addAction:v49];

  Swift::String v51 = v69;
  id v64 = v41;
  [v46 presentViewController:v41 animated:1 completion:0];
  uint64_t v52 = (void (*)(char *, char *, char *))*((void *)v11 + 2);
  id v53 = v67;
  v52(v67, v50, v51);
  unint64_t v54 = Logger.logObject.getter();
  os_log_type_t v55 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v54, v55))
  {
    uint64_t v56 = swift_slowAlloc();
    uint64_t v66 = (uint64_t)v11 + 8;
    uint64_t v57 = (uint8_t *)v56;
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v57 = 136315138;
    v62[1] = v57 + 4;
    v52(v63, v53, v51);
    uint64_t v58 = String.init<A>(describing:)();
    uint64_t v70 = sub_1000606F4(v58, v59, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    Swift::String v60 = (void (*)(char *, char *))v65;
    v65(v53, (uint64_t)v51);
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "FMRemoveItemViewController: error: %s", v57, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v60(v68, v51);
  }
  else
  {

    Swift::String v61 = (void (*)(char *, char *))v65;
    v65(v53, (uint64_t)v51);
    v61(v50, v51);
  }
}

void sub_10051B9C0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v46 = a1;
  uint64_t v3 = type metadata accessor for FMIPItemGroup();
  uint64_t v47 = *(void *)(v3 - 8);
  uint64_t v48 = v3;
  __chkstk_darwin(v3);
  Swift::String v44 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = v4;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000606BC(v5, (uint64_t)qword_1006D1E98);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMRemoveDeviceViewController: Presenting force unpair", v8, 2u);
    swift_slowDealloc();
  }

  uint64_t aBlock = 0;
  unint64_t v50 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  uint64_t v9 = self;
  id v10 = [v9 mainBundle];
  v11._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v55._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  v55._object = (void *)0x80000001005A12C0;
  v11._object = (void *)0x80000001005A12A0;
  v12._uint64_t countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v55);

  uint64_t aBlock = 0;
  unint64_t v50 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v13 = [v9 mainBundle];
  v56._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  uint64_t v42 = 0xD00000000000002FLL;
  v56._object = (void *)0x80000001005A1310;
  v14._object = (void *)0x80000001005A12F0;
  v14._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  v15._uint64_t countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v56);

  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v43 = [self alertControllerWithTitle:v16 message:v17 preferredStyle:1];

  uint64_t aBlock = 0;
  unint64_t v50 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v18 = [v9 mainBundle];
  v19._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v57._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v57._object = (void *)0x80000001005A1360;
  v19._object = (void *)0x80000001005A1340;
  v20._uint64_t countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v18, v20, v57);

  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v2;
  id v22 = v2;
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v53 = (uint64_t (*)(uint64_t))sub_10051DB3C;
  uint64_t v54 = v21;
  uint64_t aBlock = _NSConcreteStackBlock;
  unint64_t v50 = 1107296256;
  Swift::String v51 = sub_10000841C;
  uint64_t v52 = &unk_100643A88;
  uint64_t v24 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v25 = self;
  id v41 = [v25 actionWithTitle:v23 style:1 handler:v24];
  _Block_release(v24);

  uint64_t aBlock = 0;
  unint64_t v50 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v26 = [v9 mainBundle];
  v58._object = (void *)0x80000001005A13B0;
  v27._object = (void *)0x80000001005A1390;
  v27._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  v28._uint64_t countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  v58._uint64_t countAndFlagsBits = v42;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v26, v28, v58);

  uint64_t v29 = v47;
  char v30 = v44;
  uint64_t v31 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v44, v46, v48);
  unint64_t v32 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  unint64_t v33 = (v45 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v34 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v34 + v32, v30, v31);
  *(void *)(v34 + v33) = v22;
  id v35 = v22;
  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v53 = sub_10051D630;
  uint64_t v54 = v34;
  uint64_t aBlock = _NSConcreteStackBlock;
  unint64_t v50 = 1107296256;
  Swift::String v51 = sub_10000841C;
  uint64_t v52 = &unk_100643AD8;
  Swift::String v37 = _Block_copy(&aBlock);
  swift_release();
  id v38 = [v25 actionWithTitle:v36 style:2 handler:v37];
  _Block_release(v37);

  id v39 = v43;
  [v43 addAction:v38];
  NSString v40 = v41;
  [v39 addAction:v41];
  [v35 presentViewController:v39 animated:1 completion:0];
}

uint64_t sub_10051C05C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for FMIPItemGroup();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_1000606BC(v9, (uint64_t)qword_1006D1E98);
  id v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    Swift::String v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMRemoveDeviceViewController: User agreed to force unpair", v12, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  type metadata accessor for FMIPRemoveItemGroupAction();
  swift_allocObject();
  uint64_t v13 = FMIPRemoveItemGroupAction.init(itemGroup:forced:)();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a3;
  swift_retain();
  id v15 = a3;
  sub_1000CA23C(v13, (uint64_t)sub_10051D6CC, v14);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_10051C280()
{
  uint64_t v1 = v0;
  [v0 setModalInPresentation:0];
  uint64_t v2 = OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView;
  uint64_t v3 = *(unsigned char **)&v0[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView];
  v3[OBJC_IVAR____TtC6FindMy19FMActionLandingView_showsActivity] = 0;
  uint64_t v4 = v3;
  sub_1001BFB84();

  id v5 = [v1 navigationItem];
  id v6 = [v5 leftBarButtonItem];

  if (v6)
  {
    [v6 setEnabled:1];
  }
  uint64_t v7 = (char *)*(id *)&v1[v2];
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v8 = [self mainBundle];
  v18._uint64_t countAndFlagsBits = 0xD000000000000026;
  v18._object = (void *)0x80000001005A1270;
  v9._object = (void *)0x80000001005A1250;
  v9._uint64_t countAndFlagsBits = 0xD000000000000014;
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v18);

  Swift::String v12 = (Swift::String *)&v7[OBJC_IVAR____TtC6FindMy19FMActionLandingView_title];
  *Swift::String v12 = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void **)&v7[OBJC_IVAR____TtC6FindMy19FMActionLandingView_titleLabel];
  if (v12->_object)
  {
    id v14 = v13;
    swift_bridgeObjectRetain();
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v15 = v13;
    NSString v16 = 0;
  }
  [v13 setText:v16];
}

uint64_t sub_10051C488(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000606BC(v4, (uint64_t)qword_1006D1E98);
  swift_errorRetain();
  id v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "FMRemoveDeviceViewController: Show remove failed if needed %{BOOL}d", v7, 8u);
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v8 = self;
  id v9 = [v8 mainBundle];
  v10._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v19._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v19._object = (void *)0x80000001005A11D0;
  v10._object = (void *)0x80000001005A11B0;
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v19);

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v13 = [v8 mainBundle];
  v20._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v20._object = (void *)0x80000001005A1220;
  v14._object = (void *)0x80000001005A1200;
  v14._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v15._uint64_t countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  Swift::String v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v20);

  swift_errorRetain();
  id v17 = v2;
  sub_1001CA208(a1, v17, v16._countAndFlagsBits, (uint64_t)v16._object, v12._countAndFlagsBits, (uint64_t)v12._object, a1, v17);

  swift_errorRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_10051C744(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_10051C750()
{
  uint64_t v1 = type metadata accessor for FMSelectedSection();
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  os_log_type_t v6 = &v10[-v5];
  uint64_t v7 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_mediator) + 56);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = v7 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess();
  sub_100028164(v8, (uint64_t)v4);
  swift_beginAccess();
  swift_retain();
  sub_100009A88((uint64_t)v6, v8);
  swift_endAccess();
  sub_100053CA0((unint64_t)v4);
  sub_100057F94((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  sub_100057F94((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
  return swift_release();
}

void sub_10051C8A0()
{
  uint64_t v1 = type metadata accessor for FMIPDevice();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove, v1);
  os_log_type_t v6 = v5;
  uint64_t v7 = FMIPDevice.name.getter();
  uint64_t v9 = v8;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  Swift::String v10 = (uint64_t *)&v6[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceName];
  *Swift::String v10 = v7;
  v10[1] = v9;
  swift_bridgeObjectRelease();
  Swift::String v11 = *(void **)&v6[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceNameLabel];
  if (v10[1])
  {
    id v12 = v11;
    swift_bridgeObjectRetain();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v14 = v11;
    NSString v13 = 0;
  }
  [v11 setText:v13];
}

id sub_10051CA78()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMRemoveDeviceViewController();
  return [super dealloc];
}

uint64_t sub_10051CB94()
{
  return type metadata accessor for FMRemoveDeviceViewController();
}

uint64_t type metadata accessor for FMRemoveDeviceViewController()
{
  uint64_t result = qword_1006C1B90;
  if (!qword_1006C1B90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10051CBE8()
{
  uint64_t result = type metadata accessor for FMDeviceDetailViewModel();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FMIPDevice();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

id sub_10051CCE0(uint64_t a1, uint64_t a2)
{
  return sub_10051CD20(a2);
}

uint64_t sub_10051CCEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(*(void *)(*v2 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView)
                 + OBJC_IVAR____TtC6FindMy19FMActionLandingView_scrollHandler);
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
  v3[1] = a2;
  return sub_100036B90(v4);
}

id sub_10051CD20(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FMSelectedSection();
  __chkstk_darwin(v4);
  os_log_type_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMIPDevice();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  Swift::String v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  NSString v13 = (char *)&v25 - v12;
  sub_100028164(a1, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_100057F94((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    return [v2 dismissViewControllerAnimated:1 completion:0];
  }
  uint64_t v15 = (uint64_t)&v6[*(int *)(sub_10005D034(&qword_1006BAF00) + 48)];
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
  sub_100003F10(v15, (uint64_t *)&unk_1006AFE30);
  uint64_t v16 = FMIPDevice.identifier.getter();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, (uint64_t)v2 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove, v7);
  uint64_t v19 = FMIPDevice.identifier.getter();
  uint64_t v21 = v20;
  id v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v11, v7);
  if (v16 == v19 && v18 == v21)
  {
    swift_bridgeObjectRelease_n();
    return (id)((uint64_t (*)(char *, uint64_t))v22)(v13, v7);
  }
  else
  {
    char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id result = (id)((uint64_t (*)(char *, uint64_t))v22)(v13, v7);
    if ((v24 & 1) == 0) {
      return [v2 dismissViewControllerAnimated:1 completion:0];
    }
  }
  return result;
}

uint64_t sub_10051CFB8()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v8 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  aBlock[4] = sub_10051D2D0;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = &unk_100643A38;
  uint64_t v10 = _Block_copy(aBlock);
  id v11 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100045D54((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

uint64_t sub_10051D298()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10051D2D0()
{
}

void sub_10051D2F4(uint64_t a1)
{
  if (a1)
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_1000606BC(v1, (uint64_t)qword_1006D1E98);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 136315138;
      swift_errorRetain();
      sub_10005D034(&qword_1006B4220);
      uint64_t v5 = String.init<A>(describing:)();
      sub_1000606F4(v5, v6, &v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "FMRemoveDeviceViewController: error forcing unpairing %s", v4, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    sub_10051C280();
  }
  else
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_1000606BC(v7, (uint64_t)qword_1006D1E98);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMRemoveDeviceViewController: succesfully forced unpairing", v10, 2u);
      swift_slowDealloc();
    }

    sub_10051C750();
  }
}

uint64_t sub_10051D58C()
{
  uint64_t v1 = type metadata accessor for FMIPItemGroup();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10051D630(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FMIPItemGroup() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void **)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_10051C05C(a1, v1 + v4, v5);
}

uint64_t sub_10051D6CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10051C488(a3);
}

void sub_10051D6F8(char a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FMIPItemGroup() - 8);
  unint64_t v4 = *(void **)(v1 + 16);
  uint64_t v5 = (v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));

  sub_10051A674(a1, v4, v5);
}

uint64_t sub_10051D770(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FMIPItemGroup() - 8);
  unint64_t v4 = *(char **)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10051AC80(a1, v4, v5);
}

uint64_t sub_10051D7E8()
{
  uint64_t v1 = type metadata accessor for FMIPItemGroup();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_10051D8B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for FMIPItemGroup() - 8);
  uint64_t v8 = *(void **)(v3 + 16);
  uint64_t v9 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  sub_10051AFF8(a1, a2, a3, v8, v9);
}

void sub_10051D940()
{
}

uint64_t sub_10051D964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005198D8(a1, a2, a3, *(char **)(v3 + 16));
}

uint64_t sub_10051D96C()
{
  return sub_10051963C();
}

void sub_10051D990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1005186C0(a1, a2, a3, *(char **)(v3 + 16));
}

void sub_10051D998(int a1)
{
  sub_10051A040(a1, *(id *)(v1 + 16));
}

uint64_t sub_10051D9B4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10051D9F4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10051DA2C()
{
  uint64_t v1 = type metadata accessor for FMIPDevice();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10051DAFC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10051DB34(void **a1)
{
}

char *sub_10051DBB4(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    char v30 = a2[1];
    *((void *)a1 + 1) = v30;
    *((void *)a1 + 2) = v8;
    uint64_t v9 = a2[4];
    *((void *)a1 + 3) = a2[3];
    *((void *)a1 + 4) = v9;
    uint64_t v10 = a2[6];
    *((void *)a1 + 5) = a2[5];
    *((void *)a1 + 6) = v10;
    uint64_t v11 = a2[8];
    *((void *)a1 + 7) = a2[7];
    *((void *)a1 + 8) = v11;
    uint64_t v12 = a2[10];
    *((void *)a1 + 9) = a2[9];
    *((void *)a1 + 10) = v12;
    uint64_t v13 = a2[12];
    *((void *)a1 + 11) = a2[11];
    *((void *)a1 + 12) = v13;
    a1[104] = *((unsigned char *)a2 + 104);
    uint64_t v14 = a3[13];
    uint64_t v28 = (uint64_t)a2 + v14;
    uint64_t v29 = &a1[v14];
    uint64_t v15 = type metadata accessor for Date();
    Swift::String v27 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
    uint64_t v16 = v4;
    uint64_t v17 = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27(v29, v28, v15);
    uint64_t v18 = a3[14];
    uint64_t v19 = a3[15];
    uint64_t v20 = *(char **)((char *)a2 + v18);
    *(void *)&v7[v18] = v20;
    uint64_t v21 = &v7[v19];
    uint64_t v22 = (uint64_t)a2 + v19;
    uint64_t v23 = type metadata accessor for PeopleListPersonRow.State();
    char v24 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
    id v25 = v20;
    v24(v21, v22, v23);
  }
  return v7;
}

uint64_t sub_10051DD74(id *a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (char *)a1 + a2[13];
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  uint64_t v6 = (char *)a1 + a2[15];
  uint64_t v7 = type metadata accessor for PeopleListPersonRow.State();
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t sub_10051DE70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  uint64_t v11 = *(void *)(a2 + 80);
  uint64_t v12 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v12;
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v13 = a3[13];
  uint64_t v27 = a2 + v13;
  uint64_t v28 = a1 + v13;
  *(void *)(a1 + 80) = v11;
  uint64_t v14 = type metadata accessor for Date();
  id v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  id v15 = v6;
  id v16 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26(v28, v27, v14);
  uint64_t v17 = a3[14];
  uint64_t v18 = a3[15];
  uint64_t v19 = *(void **)(a2 + v17);
  *(void *)(a1 + v17) = v19;
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  uint64_t v22 = type metadata accessor for PeopleListPersonRow.State();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
  id v24 = v19;
  v23(v20, v21, v22);
  return a1;
}

uint64_t sub_10051DFE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  uint64_t v9 = *(void **)(a1 + 8);
  uint64_t v10 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v10;
  id v11 = v10;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v12 = a3[13];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = a3[14];
  uint64_t v17 = *(void **)(a1 + v16);
  uint64_t v18 = *(void **)(a2 + v16);
  *(void *)(a1 + v16) = v18;
  id v19 = v18;

  uint64_t v20 = a3[15];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = type metadata accessor for PeopleListPersonRow.State();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  return a1;
}

uint64_t sub_10051E19C(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 64);
  long long v9 = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v10 = a3[13];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(_OWORD *)(a1 + 64) = v8;
  *(_OWORD *)(a1 + 80) = v9;
  uint64_t v13 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = type metadata accessor for PeopleListPersonRow.State();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

uint64_t sub_10051E298(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  long long v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v13 = a3[13];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = a3[14];
  uint64_t v18 = *(void **)(a1 + v17);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);

  uint64_t v19 = a3[15];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = type metadata accessor for PeopleListPersonRow.State();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t sub_10051E3F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10051E40C);
}

uint64_t sub_10051E40C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 52);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for PeopleListPersonRow.State();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 60);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10051E538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10051E54C);
}

uint64_t sub_10051E54C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 52);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for PeopleListPersonRow.State();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 60);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_10051E678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, Swift::String *a5@<X4>, uint64_t a6@<X5>, Swift::String *a7@<X8>)
{
  uint64_t v236 = a6;
  v237 = a5;
  LODWORD(v225) = a3;
  uint64_t v254 = a1;
  uint64_t v255 = a2;
  uint64_t v9 = sub_10005D034(&qword_1006B0B50);
  __chkstk_darwin(v9 - 8);
  v235 = (char *)&v201 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t MyRelativeDate = type metadata accessor for FindMyRelativeDate();
  uint64_t v248 = *(void *)(MyRelativeDate - 8);
  uint64_t v249 = MyRelativeDate;
  __chkstk_darwin(MyRelativeDate);
  v208 = (char *)&v201 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10005D034(&qword_1006B0B78);
  __chkstk_darwin(v13 - 8);
  uint64_t v231 = (char *)&v201 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for PeopleListPersonRow.State.ID();
  __chkstk_darwin(v15 - 8);
  v230 = (char *)&v201 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v234 = type metadata accessor for PeopleListPersonRow.State();
  uint64_t v233 = *(void *)(v234 - 8);
  __chkstk_darwin(v234);
  v232 = (char *)&v201 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v252 = type metadata accessor for FMFLocationAlert();
  uint64_t v250 = *(void *)(v252 - 8);
  uint64_t v18 = __chkstk_darwin(v252);
  v226 = (char *)&v201 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v223 = v19;
  __chkstk_darwin(v18);
  uint64_t v224 = (char *)&v201 - v20;
  uint64_t v21 = sub_10005D034(&qword_1006B0B48);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v229 = (uint64_t)&v201 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v228 = (uint64_t)&v201 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v247 = (uint64_t)&v201 - v27;
  __chkstk_darwin(v26);
  uint64_t v246 = (uint64_t)&v201 - v28;
  uint64_t v257 = type metadata accessor for FMFFriend();
  uint64_t v251 = *(void *)(v257 - 8);
  uint64_t v29 = __chkstk_darwin(v257);
  v210 = (char *)&v201 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v256 = (char *)&v201 - v31;
  uint64_t v207 = sub_10005D034(&qword_1006B0B70);
  uint64_t v32 = __chkstk_darwin(v207);
  uint64_t v206 = (char *)&v201 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v32);
  v201 = (unsigned __int8 *)&v201 - v35;
  __chkstk_darwin(v34);
  v209 = (char *)&v201 - v36;
  uint64_t v37 = sub_10005D034(&qword_1006AF740);
  uint64_t v38 = __chkstk_darwin(v37 - 8);
  uint64_t v205 = (uint64_t)&v201 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v238 = (void (*)(char *, uint64_t, uint64_t))((char *)&v201 - v41);
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v213 = (uint64_t *)((char *)&v201 - v43);
  __chkstk_darwin(v42);
  uint64_t v240 = (uint64_t)&v201 - v44;
  uint64_t v45 = sub_10005D034(&qword_1006B0B60);
  uint64_t v46 = __chkstk_darwin(v45 - 8);
  uint64_t v227 = (uint64_t)&v201 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  uint64_t v245 = (uint64_t)&v201 - v48;
  uint64_t MyRelative = type metadata accessor for FindMyRelativeDate.RecencyKey();
  __chkstk_darwin(MyRelative - 8);
  uint64_t v204 = (char *)&v201 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_10005D034(&qword_1006B0BD8);
  uint64_t v52 = __chkstk_darwin(v51 - 8);
  uint64_t v222 = (uint64_t)&v201 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v52);
  uint64_t v253 = (uint64_t)&v201 - v54;
  uint64_t v55 = sub_10005D034((uint64_t *)&unk_1006AF6E0);
  uint64_t v56 = __chkstk_darwin(v55 - 8);
  v211 = (char *)&v201 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __chkstk_darwin(v56);
  v212 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&v201 - v59);
  __chkstk_darwin(v58);
  Swift::String v61 = (char *)&v201 - v60;
  uint64_t v241 = type metadata accessor for Date();
  uint64_t v239 = *(void *)(v241 - 8);
  uint64_t v62 = __chkstk_darwin(v241);
  BOOL v203 = (char *)&v201 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __chkstk_darwin(v62);
  uint64_t v202 = (char *)&v201 - v65;
  __chkstk_darwin(v64);
  uint64_t v217 = (char *)&v201 - v66;
  uint64_t v221 = type metadata accessor for UUID();
  v220 = *(Swift::String **)(v221 - 8);
  __chkstk_darwin(v221);
  uint64_t v216 = (char *)&v201 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  a7->_uint64_t countAndFlagsBits = 0;
  a7->_object = 0;
  uint64_t v258 = a4;
  uint64_t v68 = FMFFriend.name.getter();
  uint64_t v70 = v69;
  uint64_t v260 = 0;
  unint64_t v261 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  Swift::String v71 = self;
  id v72 = [v71 mainBundle];
  v262._uint64_t countAndFlagsBits = 0xD000000000000025;
  uint64_t v215 = (uint64_t)"FENCE_REQUEST_ALLOW";
  v262._object = (void *)0x80000001005A1D30;
  unint64_t v214 = (unint64_t)"ewController.swift";
  v73._object = (void *)0x80000001005A1D10;
  v73._uint64_t countAndFlagsBits = 0xD000000000000013;
  v74._uint64_t countAndFlagsBits = 0;
  v74._object = (void *)0xE000000000000000;
  Swift::String v75 = NSLocalizedString(_:tableName:bundle:value:comment:)(v73, (Swift::String_optional)0, (NSBundle)v72, v74, v262);

  a7[2] = v75;
  uint64_t v260 = 0;
  unint64_t v261 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v242 = v71;
  id v76 = [v71 mainBundle];
  v77._uint64_t countAndFlagsBits = 0xD000000000000018;
  v263._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  unint64_t v219 = (unint64_t)"FENCE_REQUEST_DONT_ALLOW";
  v263._object = (void *)0x80000001005A1D80;
  unint64_t v218 = (unint64_t)"g FENCE_REQUEST_ALLOW";
  v77._object = (void *)0x80000001005A1D60;
  v78._uint64_t countAndFlagsBits = 0;
  v78._object = (void *)0xE000000000000000;
  Swift::String v79 = NSLocalizedString(_:tableName:bundle:value:comment:)(v77, (Swift::String_optional)0, (NSBundle)v76, v78, v263);

  a7[3] = v79;
  sub_100290F94();
  uint64_t v80 = (void *)FMFLocationAlert.fence.getter();
  NSString v81 = String._bridgeToObjectiveC()();
  NSString v82 = String._bridgeToObjectiveC()();
  id v83 = [v80 localizedRequestNotificationStringForFollower:v81 locationName:v82];

  uint64_t v84 = a7;
  uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v87 = v86;
  swift_bridgeObjectRelease();

  a7[4]._uint64_t countAndFlagsBits = v85;
  a7[4]._object = v87;
  uint64_t v243 = v70;
  uint64_t v244 = v68;
  a7[5]._uint64_t countAndFlagsBits = v68;
  a7[5]._object = v70;
  swift_bridgeObjectRetain();
  uint64_t v88 = FMFLocationAlert.identifier.getter();
  if (v89)
  {
    uint64_t v90 = v88;
    id v91 = v89;
  }
  else
  {
    Swift::String_optional v92 = v216;
    UUID.init()();
    uint64_t v90 = UUID.uuidString.getter();
    id v91 = v93;
    ((void (*)(char *, uint64_t))v220->_object)(v92, v221);
  }
  a7[1]._uint64_t countAndFlagsBits = v90;
  a7[1]._object = v91;
  uint64_t v94 = type metadata accessor for FMAllowLocationAlertCellViewModel();
  id v95 = v237;
  *(uint64_t *)((char *)&a7->_countAndFlagsBits + *(int *)(v94 + 56)) = (uint64_t)v237;
  v220 = v95;
  FMFLocationAlert.updateTimestamp.getter();
  uint64_t v96 = v239;
  id v97 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v239 + 48);
  uint64_t v98 = v241;
  int v99 = v97(v61, 1, v241);
  Swift::String v100 = v217;
  if (v99 == 1)
  {
    static Date.distantFuture.getter();
    sub_100003F10((uint64_t)v61, (uint64_t *)&unk_1006AF6E0);
    uint64_t v101 = *(void (**)(char *, char *, uint64_t))(v96 + 32);
  }
  else
  {
    uint64_t v101 = *(void (**)(char *, char *, uint64_t))(v96 + 32);
    v101(v217, v61, v98);
  }
  uint64_t v221 = v94;
  v101((char *)v84 + *(int *)(v94 + 52), v100, v98);
  v84[6]._uint64_t countAndFlagsBits = 0x4043000000000000;
  v237 = v84;
  LOBYTE(v84[6]._object) = 0;
  sub_100290F94();
  NSString v102 = (void *)FMFLocationAlert.fence.getter();
  NSString v103 = String._bridgeToObjectiveC()();
  NSString v104 = String._bridgeToObjectiveC()();
  id v105 = [v102 localizedRequestNotificationStringForFollower:v103 locationName:v104];

  uint64_t v217 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v216 = v106;
  swift_bridgeObjectRelease();

  uint64_t v107 = v241;
  static PublishedLocation.Constants.generalTimestampRecencyDuration.getter();
  static Duration.seconds(_:)();
  uint64_t v108 = (uint64_t)v212;
  FMFLocationAlert.updateTimestamp.getter();
  uint64_t v109 = v211;
  sub_100006AB0(v108, (uint64_t)v211, (uint64_t *)&unk_1006AF6E0);
  uint64_t v110 = 1;
  if (v97(v109, 1, v107) != 1)
  {
    id v111 = v202;
    v101(v202, v109, v107);
    uint64_t v112 = v239;
    (*(void (**)(char *, char *, uint64_t))(v239 + 16))(v203, v111, v107);
    static FindMyRelativeDate.RecencyKey.now(recencyDuration:)();
    FindMyRelativeDate.init(date:recencyKey:)();
    (*(void (**)(char *, uint64_t))(v112 + 8))(v111, v107);
    uint64_t v110 = 0;
  }
  uint64_t v113 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v248 + 56))(v253, v110, 1, v249);
  sub_100003F10(v108, (uint64_t *)&unk_1006AF6E0);
  uint64_t v114 = type metadata accessor for PeopleListPersonRow.State.DetailOrProgress();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(v245, 1, 1, v114);
  uint64_t updated = dispatch thunk of FMFManager.pendingUpdateFriends.getter();
  uint64_t v116 = *(void *)(updated + 16);
  uint64_t v117 = v257;
  uint64_t v118 = v251;
  if (v116)
  {
    id v119 = *(void (**)(char *, unint64_t, uint64_t))(v251 + 16);
    unint64_t v120 = updated + ((*(unsigned __int8 *)(v251 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v251 + 80));
    Swift::String v121 = (void (**)(char *, uint64_t))(v251 + 8);
    uint64_t v122 = *(void *)(v251 + 72);
    swift_bridgeObjectRetain();
    long long v123 = v256;
    while (1)
    {
      v119(v123, v120, v117);
      uint64_t v124 = FMFFriend.identifier.getter();
      uint64_t v126 = v125;
      if (v124 == FMFFriend.identifier.getter() && v126 == v127) {
        break;
      }
      char v128 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v128) {
        goto LABEL_18;
      }
      long long v123 = v256;
      uint64_t v117 = v257;
      (*v121)(v256, v257);
      v120 += v122;
      if (!--v116)
      {
        swift_bridgeObjectRelease();
        uint64_t v113 = 1;
        uint64_t v118 = v251;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_18:
    uint64_t v130 = (uint64_t)v238;
    uint64_t v131 = v210;
    uint64_t v132 = (uint64_t)v209;
    Swift::String v133 = v256;
    swift_bridgeObjectRelease();
    uint64_t v118 = v251;
    uint64_t v129 = v240;
    uint64_t v117 = v257;
    (*(void (**)(uint64_t, char *, uint64_t))(v251 + 32))(v240, v133, v257);
    uint64_t v113 = 0;
  }
  else
  {
LABEL_16:
    uint64_t v129 = v240;
    uint64_t v130 = (uint64_t)v238;
    uint64_t v131 = v210;
    uint64_t v132 = (uint64_t)v209;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v118 + 56))(v129, v113, 1, v117);
  swift_bridgeObjectRelease();
  uint64_t v134 = (void (*)(void, void, void))v213;
  sub_100006AB0(v129, (uint64_t)v213, &qword_1006AF740);
  uint64_t v241 = *(void *)(v118 + 48);
  if (((unsigned int (*)(void, uint64_t, uint64_t))v241)(v134, 1, v117) == 1)
  {
    sub_100003F10((uint64_t)v134, &qword_1006AF740);
    uint64_t v135 = type metadata accessor for FMFPendingUpdateReason();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v135 - 8) + 56))(v132, 1, 1, v135);
LABEL_22:
    int v138 = 2;
    goto LABEL_23;
  }
  FMFFriend.pendingUpdateReason.getter();
  (*(void (**)(void (*)(void, void, void), uint64_t))(v118 + 8))(v134, v117);
  uint64_t v136 = type metadata accessor for FMFPendingUpdateReason();
  uint64_t v137 = *(void *)(v136 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v137 + 48))(v132, 1, v136) == 1) {
    goto LABEL_22;
  }
  long long v153 = v201;
  sub_100006AB0(v132, (uint64_t)v201, &qword_1006B0B70);
  int v154 = (*(uint64_t (**)(unsigned __int8 *, uint64_t))(v137 + 88))(v153, v136);
  if (v154 == enum case for FMFPendingUpdateReason.respondToInvite(_:))
  {
    (*(void (**)(unsigned __int8 *, uint64_t))(v137 + 96))(v153, v136);
    int v138 = *v153;
  }
  else
  {
    if (v154 != enum case for FMFPendingUpdateReason.startSharing(_:))
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v137 + 8))(v153, v136);
      goto LABEL_22;
    }
    int v138 = 1;
  }
LABEL_23:
  LODWORD(v256) = v138;
  sub_100003F10(v132, &qword_1006B0B70);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v139 = type metadata accessor for Logger();
  sub_1000606BC(v139, (uint64_t)qword_1006D1E98);
  (*(void (**)(char *, uint64_t, uint64_t))(v118 + 16))(v131, v258, v117);
  sub_100006AB0(v129, v130, &qword_1006AF740);
  uint64_t v140 = Logger.logObject.getter();
  int v141 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v140, (os_log_type_t)v141))
  {
    LODWORD(v239) = v141;
    uint64_t v142 = v117;
    uint64_t v143 = swift_slowAlloc();
    uint64_t v213 = (uint64_t *)swift_slowAlloc();
    uint64_t v260 = (void (*)(void, void, void))v213;
    *(_DWORD *)uint64_t v143 = 136315650;
    uint64_t v144 = FMFFriend.name.getter();
    uint64_t v259 = sub_1000606F4(v144, v145, (uint64_t *)&v260);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    Swift::Int v146 = v131;
    id v147 = *(void (**)(char *, uint64_t))(v118 + 8);
    v147(v146, v142);
    *(_WORD *)(v143 + 12) = 2080;
    LOBYTE(v259) = (_BYTE)v256;
    sub_10005D034(&qword_1006B0BC8);
    uint64_t v148 = String.init<A>(describing:)();
    uint64_t v259 = sub_1000606F4(v148, v149, (uint64_t *)&v260);
    uint64_t v150 = (uint64_t)v238;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v143 + 22) = 2080;
    uint64_t v151 = v205;
    sub_100006AB0(v150, v205, &qword_1006AF740);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v241)(v151, 1, v142) == 1)
    {
      sub_100003F10(v151, &qword_1006AF740);
      uint64_t v152 = type metadata accessor for FMFPendingUpdateReason();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v152 - 8) + 56))(v206, 1, 1, v152);
    }
    else
    {
      FMFFriend.pendingUpdateReason.getter();
      v147((char *)v151, v142);
    }
    uint64_t v155 = String.init<A>(describing:)();
    uint64_t v259 = sub_1000606F4(v155, v156, (uint64_t *)&v260);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100003F10(v150, &qword_1006AF740);
    _os_log_impl((void *)&_mh_execute_header, v140, (os_log_type_t)v239, "FMAllowLocationAlertCellViewModel: %s %s, %s", (uint8_t *)v143, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v131, v117);
    sub_100003F10(v130, &qword_1006AF740);
  }

  uint64_t v260 = 0;
  unint64_t v261 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v157 = [v242 mainBundle];
  v264._uint64_t countAndFlagsBits = 0xD000000000000025;
  v264._object = (void *)(v215 | 0x8000000000000000);
  v158._object = (void *)(v214 | 0x8000000000000000);
  v158._uint64_t countAndFlagsBits = 0xD000000000000013;
  v159._uint64_t countAndFlagsBits = 0;
  v159._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v158, (Swift::String_optional)0, (NSBundle)v157, v159, v264);

  char v160 = (char)v256;
  BOOL v161 = v256 != 2;
  uint64_t v241 = sub_10005D034(&qword_1006B0B90);
  uint64_t v162 = v246;
  Swift::String v163 = (void *)(v246 + *(int *)(v241 + 48));
  LODWORD(v239) = v225 & 1;
  BOOL v164 = (v160 & 1) == 0 && v161;
  LODWORD(v256) = v164;
  GenericControl.Info.Label.init(title:symbol:forceStyleProminent:forceInProgressState:forceDisabledState:)();
  uint64_t v165 = swift_allocObject();
  swift_weakInit();
  uint64_t v166 = v250;
  uint64_t v238 = *(void (**)(char *, uint64_t, uint64_t))(v250 + 16);
  Swift::String v167 = v224;
  uint64_t v168 = v252;
  v238(v224, v255, v252);
  uint64_t v169 = *(unsigned __int8 *)(v166 + 80);
  uint64_t v170 = (v169 + 16) & ~v169;
  uint64_t v215 = v169 | 7;
  uint64_t v225 = v170;
  unint64_t v171 = (v223 + v170 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v223 = v171 + 8;
  unint64_t v172 = v171;
  unint64_t v214 = v171;
  uint64_t v173 = swift_allocObject();
  uint64_t v213 = *(uint64_t **)(v166 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v213)(v173 + v170, v167, v168);
  v210 = (char *)v165;
  *(void *)(v173 + v172) = v165;
  *Swift::String v163 = &unk_1006C1CA0;
  v163[1] = v173;
  uint64_t v174 = enum case for GenericControl.Info.button(_:);
  LODWORD(v224) = enum case for GenericControl.Info.button(_:);
  uint64_t v175 = type metadata accessor for GenericControl.Info();
  uint64_t v176 = *(void *)(v175 - 8);
  v212 = *(void (**)(uint64_t, uint64_t, uint64_t))(v176 + 104);
  v212(v162, v174, v175);
  v211 = *(char **)(v176 + 56);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v211)(v162, 0, 1, v175);
  uint64_t v260 = 0;
  unint64_t v261 = 0xE000000000000000;
  swift_retain();
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  id v177 = [v242 mainBundle];
  v178._uint64_t countAndFlagsBits = 0xD000000000000018;
  v265._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  v265._object = (void *)(v219 | 0x8000000000000000);
  v178._object = (void *)(v218 | 0x8000000000000000);
  v179._uint64_t countAndFlagsBits = 0;
  v179._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v178, (Swift::String_optional)0, (NSBundle)v177, v179, v265);

  uint64_t v180 = v247;
  uint64_t v181 = (void *)(v247 + *(int *)(v241 + 48));
  GenericControl.Info.Label.init(title:symbol:forceStyleProminent:forceInProgressState:forceDisabledState:)();
  uint64_t v182 = swift_allocObject();
  swift_weakInit();
  uint64_t v183 = v226;
  uint64_t v184 = v252;
  v238(v226, v255, v252);
  uint64_t v185 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v213)(v185 + v225, v183, v184);
  *(void *)(v185 + v214) = v182;
  *uint64_t v181 = &unk_1006C1CB0;
  v181[1] = v185;
  v212(v180, v224, v175);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v211)(v180, 0, 1, v175);
  swift_release();
  FMFFriend.identifier.getter();
  PeopleListPersonRow.State.ID.init(rawValue:)();
  uint64_t v186 = v222;
  sub_100006AB0(v253, v222, &qword_1006B0BD8);
  uint64_t v188 = v248;
  uint64_t v187 = v249;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v248 + 48))(v186, 1, v249) == 1)
  {
    uint64_t v189 = type metadata accessor for PeopleListPersonRow.State.RelativeDateOrString();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v189 - 8) + 56))(v231, 1, 1, v189);
  }
  else
  {
    Swift::String v190 = v208;
    (*(void (**)(char *, uint64_t, uint64_t))(v188 + 32))(v208, v186, v187);
    v191 = v231;
    (*(void (**)(char *, char *, uint64_t))(v188 + 16))(v231, v190, v187);
    uint64_t v192 = enum case for PeopleListPersonRow.State.RelativeDateOrString.date(_:);
    uint64_t v193 = type metadata accessor for PeopleListPersonRow.State.RelativeDateOrString();
    uint64_t v194 = *(void *)(v193 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v194 + 104))(v191, v192, v193);
    (*(void (**)(char *, uint64_t))(v188 + 8))(v190, v187);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v194 + 56))(v191, 0, 1, v193);
  }
  uint64_t v195 = v245;
  sub_100006AB0(v245, v227, &qword_1006B0B60);
  uint64_t v196 = type metadata accessor for Badge();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v196 - 8) + 56))(v235, 1, 1, v196);
  uint64_t v197 = v246;
  sub_100006AB0(v246, v228, &qword_1006B0B48);
  uint64_t v198 = v247;
  sub_100006AB0(v247, v229, &qword_1006B0B48);
  unint64_t v199 = v232;
  PeopleListPersonRow.State.init(id:title:subtitle:subtitleExtra:detailOrProgress:badge:contact:primaryControl:secondaryControl:)();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v250 + 8))(v255, v252);
  sub_100003F10(v198, &qword_1006B0B48);
  sub_100003F10(v197, &qword_1006B0B48);
  sub_100003F10(v240, &qword_1006AF740);
  sub_100003F10(v195, &qword_1006B0B60);
  sub_100003F10(v253, &qword_1006B0BD8);
  (*(void (**)(uint64_t, uint64_t))(v251 + 8))(v258, v257);
  return (*(uint64_t (**)(char *, char *, uint64_t))(v233 + 32))((char *)v237 + *(int *)(v221 + 60), v199, v234);
}

uint64_t sub_100520378(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = type metadata accessor for ContinuousClock();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  sub_10005D034((uint64_t *)&unk_1006C2200);
  v2[10] = swift_task_alloc();
  sub_10005D034((uint64_t *)&unk_1006AF6F0);
  v2[11] = swift_task_alloc();
  sub_10005D034((uint64_t *)&unk_1006C2210);
  v2[12] = swift_task_alloc();
  sub_10005D034(&qword_1006AF730);
  v2[13] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for FMFLocationAlert();
  v2[14] = v4;
  v2[15] = *(void *)(v4 - 8);
  v2[16] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[17] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[18] = v6;
  v2[19] = v5;
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_100520588, v6, v5);
}

uint64_t sub_100520588()
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000606BC(v1, (uint64_t)qword_1006D1E98);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "FMPeopleListDataSource: new handleAllowFenceRequest()", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[15];
  uint64_t v6 = v0[16];
  uint64_t v7 = v0[13];
  uint64_t v8 = v0[14];
  uint64_t v9 = v0[12];
  uint64_t v21 = v0[11];
  uint64_t v10 = v0[10];
  uint64_t v11 = v0[5];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v6, v11, v8);
  uint64_t v12 = type metadata accessor for FMFAddress();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 1, 1, v12);
  uint64_t v13 = type metadata accessor for FMFLocationAlertTriggerType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v9, 1, 1, v13);
  uint64_t v14 = type metadata accessor for FMFSchedule();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v21, 1, 1, v14);
  uint64_t v15 = enum case for FMFLocationAlertAcceptanceStatus.accepted(_:);
  uint64_t v16 = type metadata accessor for FMFLocationAlertAcceptanceStatus();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 104))(v10, v15, v16);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v10, 0, 1, v16);
  type metadata accessor for FMFUpdateLocationAlertAction();
  swift_allocObject();
  uint64_t v18 = FMFUpdateLocationAlertAction.init(locationAlert:location:radius:address:label:triggerType:isOn:repeating:phoneNumbers:emails:schedule:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:)();
  v0[20] = v18;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    swift_retain();
    swift_release();
    sub_1000F4F54(v18, (uint64_t)sub_100520BE0, 0);
    swift_release();
  }
  ContinuousClock.init()();
  uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1006C1CB8 + dword_1006C1CB8);
  unint64_t v19 = (void *)swift_task_alloc();
  v0[21] = v19;
  *unint64_t v19 = v0;
  v19[1] = sub_10052098C;
  return v22(0x8AC7230489E80000, 0, 0, 0, 1);
}

uint64_t sub_10052098C()
{
  os_log_type_t v3 = (void *)*v1;
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v4 = v2[9];
  uint64_t v5 = v2[8];
  uint64_t v6 = v2[7];
  if (v0)
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = v3[18];
    uint64_t v8 = v3[19];
    uint64_t v9 = sub_100522020;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = v3[18];
    uint64_t v8 = v3[19];
    uint64_t v9 = sub_100520B20;
  }
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(v9, v7, v8);
}

uint64_t sub_100520B20()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100520BE0(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_100520BEC(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = type metadata accessor for ContinuousClock();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for FMFLocationAlert();
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[13] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[14] = v6;
  v2[15] = v5;
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(sub_100520D3C, v6, v5);
}

uint64_t sub_100520D3C()
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000606BC(v1, (uint64_t)qword_1006D1E98);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "FMPeopleListDataSource: new handleDeclineFenceRequest()", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = v0[11];
  uint64_t v5 = v0[12];
  uint64_t v7 = v0[10];
  uint64_t v8 = v0[5];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
  type metadata accessor for FMFRemoveLocationAlertAction();
  swift_allocObject();
  uint64_t v9 = FMFRemoveLocationAlertAction.init(locationAlert:)();
  v0[16] = v9;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    swift_retain();
    swift_release();
    sub_1000F4F54(v9, (uint64_t)sub_1005211BC, 0);
    swift_release();
  }
  ContinuousClock.init()();
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1006C1CB8 + dword_1006C1CB8);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[17] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_100520FA0;
  return v12(0x8AC7230489E80000, 0, 0, 0, 1);
}

uint64_t sub_100520FA0()
{
  os_log_type_t v3 = (void *)*v1;
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v4 = v2[9];
  uint64_t v5 = v2[8];
  uint64_t v6 = v2[7];
  if (v0)
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = v3[14];
    uint64_t v8 = v3[15];
    uint64_t v9 = sub_10052201C;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = v3[14];
    uint64_t v8 = v3[15];
    uint64_t v9 = sub_100521134;
  }
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))_swift_task_switch)(v9, v7, v8);
}

uint64_t sub_100521134()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1005211BC(uint64_t a1, uint64_t a2)
{
}

void sub_1005211C8(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v6 = type metadata accessor for FMFActionStatus();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_1000606BC(v10, (uint64_t)qword_1006D1E98);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v17 = a3;
    uint64_t v18 = 0;
    *(_DWORD *)uint64_t v13 = 136315394;
    unint64_t v19 = 0xE000000000000000;
    uint64_t v20 = v14;
    _print_unlocked<A, B>(_:_:)();
    uint64_t v18 = sub_1000606F4(v18, v19, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v18 = a2;
    swift_errorRetain();
    sub_10005D034(&qword_1006B4220);
    uint64_t v15 = String.init<A>(describing:)();
    uint64_t v18 = sub_1000606F4(v15, v16, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, v17, (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_errorRelease();
    swift_errorRelease();
  }
}

uint64_t sub_1005214CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)v0;
  if (*(void *)v0)
  {
    Hasher._combine(_:)(1u);
    id v3 = v2;
    NSObject.hash(into:)();

    uint64_t v4 = *(void **)(v1 + 8);
    if (v4)
    {
LABEL_3:
      Hasher._combine(_:)(1u);
      id v5 = v4;
      NSObject.hash(into:)();

      goto LABEL_6;
    }
  }
  else
  {
    Hasher._combine(_:)(0);
    uint64_t v4 = *(void **)(v0 + 8);
    if (v4) {
      goto LABEL_3;
    }
  }
  Hasher._combine(_:)(0);
LABEL_6:
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + 40))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    if (*(void *)(v1 + 56))
    {
LABEL_8:
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
  }
  else
  {
    Hasher._combine(_:)(0);
    if (*(void *)(v1 + 56)) {
      goto LABEL_8;
    }
  }
  Hasher._combine(_:)(0);
LABEL_11:
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if ((*(void *)(v1 + 96) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v6 = *(void *)(v1 + 96);
  }
  else {
    Swift::UInt64 v6 = 0;
  }
  Hasher._combine(_:)(v6);
  Hasher._combine(_:)(*(unsigned char *)(v1 + 104));
  uint64_t v7 = type metadata accessor for FMAllowLocationAlertCellViewModel();
  type metadata accessor for Date();
  sub_1000077E4(&qword_1006B0B30, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v8 = *(void **)(v1 + *(int *)(v7 + 56));
  if (v8)
  {
    Hasher._combine(_:)(1u);
    id v9 = v8;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  type metadata accessor for PeopleListPersonRow.State();
  sub_1000077E4(&qword_1006B0B38, (void (*)(uint64_t))&type metadata accessor for PeopleListPersonRow.State);
  return dispatch thunk of Hashable.hash(into:)();
}

void *sub_100521788(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + *(int *)(a1 + 56));
  id v3 = v2;
  return v2;
}

uint64_t sub_1005217B4()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

double sub_1005217E4()
{
  return *(double *)(v0 + 96);
}

uint64_t sub_1005217EC()
{
  return *(unsigned __int8 *)(v0 + 104);
}

Swift::Int sub_1005217F4()
{
  return Hasher._finalize()();
}

Swift::Int sub_100521838()
{
  return Hasher._finalize()();
}

uint64_t sub_100521874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = type metadata accessor for ContinuousClock.Instant();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_100521978, 0, 0);
}

uint64_t sub_100521978()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = type metadata accessor for ContinuousClock();
  uint64_t v5 = sub_1000077E4(&qword_1006C1CC0, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  dispatch thunk of Clock.now.getter();
  sub_1000077E4(&qword_1006C1CC8, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  dispatch thunk of InstantProtocol.advanced(by:)();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  void *v7 = v0;
  v7[1] = sub_100521B18;
  uint64_t v8 = v0[11];
  return dispatch thunk of Clock.sleep(until:tolerance:)(v8, v0 + 2, v4, v5);
}

uint64_t sub_100521B18()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(void *)(v5 + 8);
    __asm { BRAA            X1, X16 }
  }
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_100521CD4, 0, 0);
}

uint64_t sub_100521CD4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100521D40()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100521D7C()
{
  uint64_t v2 = *(void *)(type metadata accessor for FMFLocationAlert() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1000D6E0C;
  return sub_100520378(v4, v5);
}

uint64_t sub_100521E7C()
{
  uint64_t v1 = type metadata accessor for FMFLocationAlert();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100521F20()
{
  uint64_t v2 = *(void *)(type metadata accessor for FMFLocationAlert() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *unint64_t v6 = v1;
  v6[1] = sub_1000E5A7C;
  return sub_100520BEC(v4, v5);
}

uint64_t sub_100522024(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v23 = a3;
  uint64_t v6 = sub_10005D034(&qword_1006C1E10);
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10005D034(a1);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10005D034(a2);
  uint64_t v14 = __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v23 - v17;
  uint64_t v19 = v3 + *(void *)(*(void *)v3 + 112);
  uint64_t v20 = sub_10005D034(v23);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v18, 1, 1, v20);
  sub_100006AB0((uint64_t)v18, (uint64_t)v16, a2);
  Published.init(initialValue:)();
  sub_100003F10((uint64_t)v18, a2);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v19, v12, v9);
  uint64_t v21 = v3 + *(void *)(*(void *)v3 + 120);
  unint64_t v26 = sub_10014BFC8((uint64_t)_swiftEmptyArrayStorage);
  sub_10005D034(qword_1006B2E90);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v21, v8, v25);
  return v3;
}

uint64_t sub_1005222D4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v26 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10005D034(a3);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10005D034(a4);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (uint64_t)&v17[*(int *)(v15 + 56)];
  sub_100006AB0(a1, (uint64_t)v17, a3);
  sub_100006AB0(a2, v18, a3);
  uint64_t v19 = sub_10005D034((uint64_t *)&unk_1006BB350);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
  if (v20((uint64_t)v17, 1, v19) == 1)
  {
    if (v20(v18, 1, v19) == 1)
    {
      char v21 = -1;
    }
    else
    {
      a3 = a4;
      char v21 = 0;
    }
  }
  else
  {
    sub_100006AB0((uint64_t)v17, (uint64_t)v13, a3);
    if (v20(v18, 1, v19) == 1)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v26);
      char v21 = 0;
      a3 = a4;
    }
    else
    {
      uint64_t v22 = v26;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v10, v18, v26);
      char v21 = static UUID.== infix(_:_:)();
      uint64_t v23 = *(void (**)(char *, uint64_t))(v8 + 8);
      v23(v10, v22);
      v23(v13, v22);
    }
  }
  sub_100003F10((uint64_t)v17, a3);
  return v21 & 1;
}

void *sub_100522588(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v49 = a1;
  uint64_t v50 = a3;
  id v46 = a2;
  uint64_t v45 = sub_10005D034(&qword_1006B2BF0);
  uint64_t v40 = *(void *)(v45 - 8);
  uint64_t v41 = v45 - 8;
  uint64_t v42 = (char *)v40;
  uint64_t v4 = __chkstk_darwin(v45 - 8);
  uint64_t v48 = (uint64_t)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v47 = (uint64_t)v39 - v6;
  uint64_t v44 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v7 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v10);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v11 - 8);
  uint64_t v43 = *(char **)(qword_1006D1610 + (swift_isaMask & *(void *)v3) + 40);
  v39[1] = sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v12 = v3;
  static DispatchQoS.unspecified.getter();
  uint64_t v51 = _swiftEmptyArrayStorage;
  sub_100535294((unint64_t *)&unk_1006AE490, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10005D034((uint64_t *)&unk_1006B6C50);
  sub_1000450A0((unint64_t *)&unk_1006AE4A0, (uint64_t *)&unk_1006B6C50);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v44);
  *(void *)&v43[(void)v3] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *((unsigned char *)v12 + *(void *)(qword_1006D1610 + (swift_isaMask & *v12) + 56)) = 1;
  sub_10005D034(&qword_1006C1EF8);
  swift_allocObject();
  uint64_t v13 = sub_100522024((uint64_t *)&unk_1006C1F40, (uint64_t *)&unk_1006BB330, &qword_1006B2BF0);
  *(void *)((char *)v12 + *(void *)(qword_1006D1610 + (swift_isaMask & *v12) + 32)) = v50;
  *(void *)((char *)v12 + *(void *)(qword_1006D1610 + (swift_isaMask & *v12) + 48)) = v13;
  swift_retain();
  swift_retain_n();

  id v46 = v46;
  uint64_t v44 = v13;
  uint64_t v43 = (char *)(id)UITableViewDiffableDataSource.init(tableView:cellProvider:)();
  sub_100523730();
  sub_10005D034(&qword_1006C1F00);
  uint64_t v14 = *(void *)(v40 + 72);
  unint64_t v15 = (v42[80] + 32) & ~(unint64_t)v42[80];
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10055B960;
  uint64_t v17 = v16 + v15;
  uint64_t v18 = sub_10005D034((uint64_t *)&unk_1006BB350);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
  v20(v17, 1, 1, v18);
  uint64_t v21 = v17 + v14;
  UUID.init()();
  v20(v17 + v14, 0, 1, v18);
  uint64_t v22 = v47;
  swift_bridgeObjectRetain();
  sub_100006AB0(v17, v22, &qword_1006B2BF0);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  if (v23(v22, 1, v18) == 1)
  {
    type metadata accessor for FMAccessoryDiscoverySearchingCell();
  }
  else
  {
    type metadata accessor for FMAccessoryDiscoveryAccessoryCell();
    uint64_t v24 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v22, v24);
  }
  uint64_t v25 = v48;
  sub_100006AB0(v17, v48, &qword_1006B2BF0);
  unsigned int v26 = v23(v25, 1, v18);
  uint64_t v42 = ".beaconscanner.datasource";
  if (v26 != 1)
  {
    uint64_t v27 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v25, v27);
  }
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v46 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v29];

  uint64_t v30 = v47;
  sub_100006AB0(v21, v47, &qword_1006B2BF0);
  if (v23(v30, 1, v18) == 1)
  {
    type metadata accessor for FMAccessoryDiscoverySearchingCell();
  }
  else
  {
    type metadata accessor for FMAccessoryDiscoveryAccessoryCell();
    uint64_t v31 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
  }
  uint64_t v32 = v48;
  sub_100006AB0(v21, v48, &qword_1006B2BF0);
  if (v23(v32, 1, v18) != 1)
  {
    uint64_t v33 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
  }
  uint64_t v34 = swift_getObjCClassFromMetadata();
  NSString v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v36 = v46;
  [v46 registerClass:v34 forCellReuseIdentifier:v35];
  swift_bridgeObjectRelease();

  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v37 = v43;
  sub_100524570(0);
  swift_release();

  swift_release();
  swift_release();
  return v37;
}

void *sub_100522E5C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v49 = a1;
  uint64_t v50 = a3;
  id v46 = a2;
  uint64_t v45 = sub_10005D034((uint64_t *)&unk_1006B2B40);
  uint64_t v40 = *(void *)(v45 - 8);
  uint64_t v41 = v45 - 8;
  uint64_t v42 = (char *)v40;
  uint64_t v4 = __chkstk_darwin(v45 - 8);
  uint64_t v48 = (uint64_t)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v47 = (uint64_t)v39 - v6;
  uint64_t v44 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v7 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v10);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v11 - 8);
  uint64_t v43 = *(char **)(qword_1006D1610 + (swift_isaMask & *(void *)v3) + 40);
  v39[1] = sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v12 = v3;
  static DispatchQoS.unspecified.getter();
  uint64_t v51 = _swiftEmptyArrayStorage;
  sub_100535294((unint64_t *)&unk_1006AE490, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10005D034((uint64_t *)&unk_1006B6C50);
  sub_1000450A0((unint64_t *)&unk_1006AE4A0, (uint64_t *)&unk_1006B6C50);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v44);
  *(void *)&v43[(void)v3] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *((unsigned char *)v12 + *(void *)(qword_1006D1610 + (swift_isaMask & *v12) + 56)) = 1;
  sub_10005D034(&qword_1006C1EB0);
  swift_allocObject();
  uint64_t v13 = sub_100522024(&qword_1006C1DC0, (uint64_t *)&unk_1006C1D38, (uint64_t *)&unk_1006B2B40);
  *(void *)((char *)v12 + *(void *)(qword_1006D1610 + (swift_isaMask & *v12) + 32)) = v50;
  *(void *)((char *)v12 + *(void *)(qword_1006D1610 + (swift_isaMask & *v12) + 48)) = v13;
  swift_retain();
  swift_retain_n();

  id v46 = v46;
  uint64_t v44 = v13;
  uint64_t v43 = (char *)(id)UITableViewDiffableDataSource.init(tableView:cellProvider:)();
  sub_100523AA0();
  sub_10005D034((uint64_t *)&unk_1006C1E90);
  uint64_t v14 = *(void *)(v40 + 72);
  unint64_t v15 = (v42[80] + 32) & ~(unint64_t)v42[80];
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10055B960;
  uint64_t v17 = v16 + v15;
  uint64_t v18 = sub_10005D034((uint64_t *)&unk_1006BB350);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
  v20(v17, 1, 1, v18);
  uint64_t v21 = v17 + v14;
  UUID.init()();
  v20(v17 + v14, 0, 1, v18);
  uint64_t v22 = v47;
  swift_bridgeObjectRetain();
  sub_100006AB0(v17, v22, (uint64_t *)&unk_1006B2B40);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  if (v23(v22, 1, v18) == 1)
  {
    type metadata accessor for FMAccessoryDiscoverySearchingCell();
  }
  else
  {
    type metadata accessor for FMAccessoryDiscoveryAccessoryCell();
    uint64_t v24 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v22, v24);
  }
  uint64_t v25 = v48;
  sub_100006AB0(v17, v48, (uint64_t *)&unk_1006B2B40);
  unsigned int v26 = v23(v25, 1, v18);
  uint64_t v42 = ".beaconscanner.datasource";
  if (v26 != 1)
  {
    uint64_t v27 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v25, v27);
  }
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v46 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v29];

  uint64_t v30 = v47;
  sub_100006AB0(v21, v47, (uint64_t *)&unk_1006B2B40);
  if (v23(v30, 1, v18) == 1)
  {
    type metadata accessor for FMAccessoryDiscoverySearchingCell();
  }
  else
  {
    type metadata accessor for FMAccessoryDiscoveryAccessoryCell();
    uint64_t v31 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
  }
  uint64_t v32 = v48;
  sub_100006AB0(v21, v48, (uint64_t *)&unk_1006B2B40);
  if (v23(v32, 1, v18) != 1)
  {
    uint64_t v33 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
  }
  uint64_t v34 = swift_getObjCClassFromMetadata();
  NSString v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v36 = v46;
  [v46 registerClass:v34 forCellReuseIdentifier:v35];
  swift_bridgeObjectRelease();

  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v37 = v43;
  sub_100524D14(0);
  swift_release();

  swift_release();
  swift_release();
  return v37;
}

uint64_t sub_100523730()
{
  uint64_t v1 = v0;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for FMIPAccessoryDiscoveryController();
  sub_100535294((unint64_t *)&unk_1006BB340, (void (*)(uint64_t))&type metadata accessor for FMIPAccessoryDiscoveryController);
  swift_retain();
  uint64_t v2 = (void (*)(void *, void))dispatch thunk of FMIPAccessoryDiscoveryControllerProtocol.callbacks.modify();
  type metadata accessor for FMIPAccessoryDiscoveryController.Callbacks();
  sub_100535294(&qword_1006C1F20, (void (*)(uint64_t))&type metadata accessor for FMIPAccessoryDiscoveryController.Callbacks);
  dispatch thunk of FMIPAccessoryDiscoveryControllerCallbacks.discoveredAccessoriesCallback.setter();
  v2(v11, 0);
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  uint64_t v3 = (void (*)(void *, void))dispatch thunk of FMIPAccessoryDiscoveryControllerProtocol.callbacks.modify();
  dispatch thunk of FMIPAccessoryDiscoveryControllerCallbacks.lostAccessoriesCallback.setter();
  v3(v11, 0);
  swift_release();
  uint64_t v4 = dispatch thunk of FMIPAccessoryDiscoveryControllerProtocol.discoveredAccessories.getter();
  uint64_t v5 = *(NSObject **)((char *)v1 + *(void *)(qword_1006D1610 + (swift_isaMask & *v1) + 40));
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1005359B4;
  *(void *)(v7 + 24) = v6;
  v11[4] = sub_1004FC52C;
  v11[5] = v7;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_100024A40;
  v11[3] = &unk_100644510;
  uint64_t v8 = _Block_copy(v11);
  swift_bridgeObjectRetain();
  uint64_t v9 = v1;
  swift_retain();
  swift_release();
  dispatch_sync(v5, v8);
  _Block_release(v8);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t result = swift_release();
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100523AA0()
{
  uint64_t v1 = v0;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for FMIPUnknownAccessoryDiscoveryController();
  sub_100535294(&qword_1006C1D48, (void (*)(uint64_t))&type metadata accessor for FMIPUnknownAccessoryDiscoveryController);
  swift_retain();
  uint64_t v2 = (void (*)(void *, void))dispatch thunk of FMIPAccessoryDiscoveryControllerProtocol.callbacks.modify();
  type metadata accessor for FMIPUnknownAccessoryDiscoveryController.Callbacks();
  sub_100535294((unint64_t *)&unk_1006C1EB8, (void (*)(uint64_t))&type metadata accessor for FMIPUnknownAccessoryDiscoveryController.Callbacks);
  dispatch thunk of FMIPAccessoryDiscoveryControllerCallbacks.discoveredAccessoriesCallback.setter();
  v2(v11, 0);
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  uint64_t v3 = (void (*)(void *, void))dispatch thunk of FMIPAccessoryDiscoveryControllerProtocol.callbacks.modify();
  dispatch thunk of FMIPAccessoryDiscoveryControllerCallbacks.lostAccessoriesCallback.setter();
  v3(v11, 0);
  swift_release();
  uint64_t v4 = dispatch thunk of FMIPAccessoryDiscoveryControllerProtocol.discoveredAccessories.getter();
  uint64_t v5 = *(NSObject **)((char *)v1 + *(void *)(qword_1006D1610 + (swift_isaMask & *v1) + 40));
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_100535800;
  *(void *)(v7 + 24) = v6;
  v11[4] = sub_100024A90;
  v11[5] = v7;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_100024A40;
  v11[3] = &unk_100644268;
  uint64_t v8 = _Block_copy(v11);
  swift_bridgeObjectRetain();
  uint64_t v9 = v1;
  swift_retain();
  swift_release();
  dispatch_sync(v5, v8);
  _Block_release(v8);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t result = swift_release();
  if (v1) {
    __break(1u);
  }
  return result;
}

void *sub_100523E10(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = *(NSObject **)((char *)result + *(void *)(qword_1006D1610 + (swift_isaMask & *result) + 40));
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    *(void *)(v5 + 24) = v3;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_100535D28;
    *(void *)(v6 + 24) = v5;
    aBlock[4] = sub_1004FC52C;
    aBlock[5] = v6;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100024A40;
    aBlock[3] = &unk_1006446F0;
    uint64_t v7 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    id v8 = v3;
    swift_retain();
    swift_release();
    dispatch_sync(v4, v7);
    _Block_release(v7);
    LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();

    swift_release();
    uint64_t result = (void *)swift_release();
    if (v3) {
      __break(1u);
    }
  }
  return result;
}

void *sub_100523FE8(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = *(NSObject **)((char *)result + *(void *)(qword_1006D1610 + (swift_isaMask & *result) + 40));
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    *(void *)(v5 + 24) = v3;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_100535D24;
    *(void *)(v6 + 24) = v5;
    aBlock[4] = sub_1004FC52C;
    aBlock[5] = v6;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100024A40;
    aBlock[3] = &unk_100644470;
    uint64_t v7 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    id v8 = v3;
    swift_retain();
    swift_release();
    dispatch_sync(v4, v7);
    _Block_release(v7);
    LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();

    swift_release();
    uint64_t result = (void *)swift_release();
    if (v3) {
      __break(1u);
    }
  }
  return result;
}

void *sub_1005241C0(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = *(NSObject **)((char *)result + *(void *)(qword_1006D1610 + (swift_isaMask & *result) + 40));
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    *(void *)(v5 + 24) = v3;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_100535CF8;
    *(void *)(v6 + 24) = v5;
    aBlock[4] = sub_1004FC52C;
    aBlock[5] = v6;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100024A40;
    aBlock[3] = &unk_100644650;
    uint64_t v7 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    id v8 = v3;
    swift_retain();
    swift_release();
    dispatch_sync(v4, v7);
    _Block_release(v7);
    LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();

    swift_release();
    uint64_t result = (void *)swift_release();
    if (v3) {
      __break(1u);
    }
  }
  return result;
}

void *sub_100524398(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = *(NSObject **)((char *)result + *(void *)(qword_1006D1610 + (swift_isaMask & *result) + 40));
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    *(void *)(v5 + 24) = v3;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_100535920;
    *(void *)(v6 + 24) = v5;
    aBlock[4] = sub_1004FC52C;
    aBlock[5] = v6;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100024A40;
    aBlock[3] = &unk_1006443D0;
    uint64_t v7 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    id v8 = v3;
    swift_retain();
    swift_release();
    dispatch_sync(v4, v7);
    _Block_release(v7);
    LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();

    swift_release();
    uint64_t result = (void *)swift_release();
    if (v3) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100524570(int a1)
{
  uint64_t v2 = v1;
  int v46 = a1;
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v47 = *(void *)(v3 - 8);
  uint64_t v48 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10005D034(&qword_1006B2BF0);
  uint64_t v49 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10005D034(&qword_1006C1F08);
  uint64_t v45 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v15 = (void *)((char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  *unint64_t v15 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  char v16 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if (v16)
  {
    uint64_t v43 = v9;
    sub_100535718();
    sub_1000450A0((unint64_t *)&unk_1006C1F10, &qword_1006B2BF0);
    uint64_t v42 = v11;
    uint64_t v17 = NSDiffableDataSourceSnapshot.init()();
    uint64_t v44 = v2;
    __chkstk_darwin(v17);
    uint64_t v18 = type metadata accessor for FMIPAccessoryDiscoveryController();
    v41[-4] = v18;
    uint64_t v19 = sub_100535294((unint64_t *)&unk_1006BB340, (void (*)(uint64_t))&type metadata accessor for FMIPAccessoryDiscoveryController);
    v41[-3] = v19;
    v41[-2] = &off_100626250;
    v41[-1] = &off_100628FC8;
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    v41[-4] = v18;
    v41[-3] = v19;
    v41[-2] = &off_100626250;
    v41[-1] = &off_100628FC8;
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v21 = swift_bridgeObjectRetain();
    uint64_t v22 = sub_1004AEAF8(v21);
    swift_bridgeObjectRelease();
    uint64_t v50 = v22;
    sub_100530C14(&v50);
    swift_bridgeObjectRelease();
    uint64_t v23 = v50;
    int64_t v24 = v50[2];
    if (v24)
    {
      uint64_t v50 = _swiftEmptyArrayStorage;
      sub_10013E810(0, v24, 0);
      uint64_t v25 = v47 + 16;
      unsigned int v26 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
      uint64_t v27 = *(unsigned __int8 *)(v47 + 80);
      v41[1] = v23;
      uint64_t v28 = (char *)v23 + ((v27 + 32) & ~v27);
      uint64_t v47 = *(void *)(v47 + 72);
      do
      {
        uint64_t v29 = v48;
        v26(v5, v28, v48);
        v26(v8, v5, v29);
        uint64_t v30 = sub_10005D034((uint64_t *)&unk_1006BB350);
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v8, 0, 1, v30);
        (*(void (**)(char *, uint64_t))(v25 - 8))(v5, v29);
        uint64_t v31 = v50;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10013E810(0, v31[2] + 1, 1);
          uint64_t v31 = v50;
        }
        unint64_t v33 = v31[2];
        unint64_t v32 = v31[3];
        if (v33 >= v32 >> 1)
        {
          sub_10013E810(v32 > 1, v33 + 1, 1);
          uint64_t v31 = v50;
        }
        v31[2] = v33 + 1;
        sub_100067E48((uint64_t)v8, (uint64_t)v31+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v33, &qword_1006B2BF0);
        v28 += v47;
        --v24;
      }
      while (v24);
    }
    swift_release();
    NSString v35 = v42;
    uint64_t v34 = v43;
    NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_10061EE48);
    LOBYTE(v50) = 0;
    NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
    swift_bridgeObjectRelease();
    if (*((unsigned char *)v44 + *(void *)(qword_1006D1610 + (swift_isaMask & *v44) + 56)))
    {
      sub_10005D034(&qword_1006C1F00);
      unint64_t v36 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_10055B970;
      unint64_t v38 = v37 + v36;
      uint64_t v39 = sub_10005D034((uint64_t *)&unk_1006BB350);
      (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 1, 1, v39);
      LOBYTE(v50) = 0;
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
      swift_bridgeObjectRelease();
    }
    dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v35, v34);
  }
  else
  {
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  return result;
}

uint64_t sub_100524D14(int a1)
{
  uint64_t v2 = v1;
  int v46 = a1;
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v47 = *(void *)(v3 - 8);
  uint64_t v48 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10005D034((uint64_t *)&unk_1006B2B40);
  uint64_t v49 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10005D034(&qword_1006C1E78);
  uint64_t v45 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v15 = (void *)((char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  *unint64_t v15 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  char v16 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if (v16)
  {
    uint64_t v43 = v9;
    sub_100535718();
    sub_1000450A0(&qword_1006C1E88, (uint64_t *)&unk_1006B2B40);
    uint64_t v42 = v11;
    uint64_t v17 = NSDiffableDataSourceSnapshot.init()();
    uint64_t v44 = v2;
    __chkstk_darwin(v17);
    uint64_t v18 = type metadata accessor for FMIPUnknownAccessoryDiscoveryController();
    v41[-4] = v18;
    uint64_t v19 = sub_100535294(&qword_1006C1D48, (void (*)(uint64_t))&type metadata accessor for FMIPUnknownAccessoryDiscoveryController);
    v41[-3] = v19;
    v41[-2] = &off_100626268;
    v41[-1] = &off_100628FC0;
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    v41[-4] = v18;
    v41[-3] = v19;
    v41[-2] = &off_100626268;
    v41[-1] = &off_100628FC0;
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v21 = swift_bridgeObjectRetain();
    uint64_t v22 = sub_1004AEAF8(v21);
    swift_bridgeObjectRelease();
    uint64_t v50 = v22;
    sub_100530C14(&v50);
    swift_bridgeObjectRelease();
    uint64_t v23 = v50;
    int64_t v24 = v50[2];
    if (v24)
    {
      uint64_t v50 = _swiftEmptyArrayStorage;
      sub_10013E840(0, v24, 0);
      uint64_t v25 = v47 + 16;
      unsigned int v26 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
      uint64_t v27 = *(unsigned __int8 *)(v47 + 80);
      v41[1] = v23;
      uint64_t v28 = (char *)v23 + ((v27 + 32) & ~v27);
      uint64_t v47 = *(void *)(v47 + 72);
      do
      {
        uint64_t v29 = v48;
        v26(v5, v28, v48);
        v26(v8, v5, v29);
        uint64_t v30 = sub_10005D034((uint64_t *)&unk_1006BB350);
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v8, 0, 1, v30);
        (*(void (**)(char *, uint64_t))(v25 - 8))(v5, v29);
        uint64_t v31 = v50;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10013E840(0, v31[2] + 1, 1);
          uint64_t v31 = v50;
        }
        unint64_t v33 = v31[2];
        unint64_t v32 = v31[3];
        if (v33 >= v32 >> 1)
        {
          sub_10013E840(v32 > 1, v33 + 1, 1);
          uint64_t v31 = v50;
        }
        v31[2] = v33 + 1;
        sub_100067E48((uint64_t)v8, (uint64_t)v31+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v33, (uint64_t *)&unk_1006B2B40);
        v28 += v47;
        --v24;
      }
      while (v24);
    }
    swift_release();
    NSString v35 = v42;
    uint64_t v34 = v43;
    NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_10061EE70);
    LOBYTE(v50) = 0;
    NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
    swift_bridgeObjectRelease();
    if (*((unsigned char *)v44 + *(void *)(qword_1006D1610 + (swift_isaMask & *v44) + 56)))
    {
      sub_10005D034((uint64_t *)&unk_1006C1E90);
      unint64_t v36 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_10055B970;
      unint64_t v38 = v37 + v36;
      uint64_t v39 = sub_10005D034((uint64_t *)&unk_1006BB350);
      (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 1, 1, v39);
      LOBYTE(v50) = 0;
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
      swift_bridgeObjectRelease();
    }
    dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v35, v34);
  }
  else
  {
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  return result;
}

uint64_t sub_1005254B8(uint64_t a1, void *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t v31 = a6;
  uint64_t v9 = sub_10005D034(a3);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10005D034(&qword_1006AF770);
  __chkstk_darwin(v13 - 8);
  unint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10005D034(a4);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v21 = (void *)result;
    uint64_t v29 = a5;
    uint64_t v30 = v10;
    uint64_t v22 = a2[3];
    uint64_t v23 = a2[4];
    sub_10002CEB8(a2, v22);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
    uint64_t v24 = sub_10005D034((uint64_t *)&unk_1006BB350);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v19, 0, 1, v24);
    dispatch thunk of UITableViewDiffableDataSource.indexPath(for:)();
    uint64_t v25 = type metadata accessor for IndexPath();
    int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v15, 1, v25);
    sub_100003F10((uint64_t)v15, &qword_1006AF770);
    if (v26 == 1)
    {
      v31(1);
    }
    else
    {
      dispatch thunk of UITableViewDiffableDataSource.snapshot()();
      sub_10005D034(v29);
      unint64_t v27 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_10055B970;
      sub_100006AB0((uint64_t)v19, v28 + v27, a4);
      NSDiffableDataSourceSnapshot.reloadItems(_:)((Swift::OpaquePointer)v28);
      swift_bridgeObjectRelease();
      dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

      (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v9);
    }
    return sub_100003F10((uint64_t)v19, a4);
  }
  return result;
}

uint64_t sub_100525814(uint64_t a1, void *a2)
{
  uint64_t v91 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v90 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v89 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for DispatchQoS();
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v86 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v112 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10005D034(&qword_1006B4230);
  __chkstk_darwin(v8 - 8);
  id v111 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_10005D034(&qword_1006B4238);
  uint64_t v10 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v109 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_10005D034((uint64_t *)&unk_1006B4240);
  uint64_t v12 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v107 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v15 = __chkstk_darwin(v14);
  id v105 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  id v115 = (char *)&v86 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v128 = (uint64_t)&v86 - v20;
  uint64_t v106 = v21;
  __chkstk_darwin(v19);
  NSString v104 = (char *)&v86 - v23;
  uint64_t v24 = *(void *)(a1 + 56);
  uint64_t v96 = a1 + 56;
  uint64_t v25 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v26 = -1;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  unint64_t v27 = v26 & v24;
  uint64_t v28 = swift_isaMask & *a2;
  uint64_t v125 = a2;
  uint64_t v103 = *(void *)(qword_1006D1610 + v28 + 32);
  uint64_t v29 = *(void *)(qword_1006D1610 + v28 + 48);
  uint64_t v102 = *(void *)(qword_1006D1610 + v28 + 40);
  int64_t v97 = (unint64_t)(v25 + 63) >> 6;
  uint64_t v123 = v22 + 32;
  uint64_t v124 = v22 + 16;
  id v95 = v130;
  uint64_t v101 = v29;
  uint64_t v126 = v22;
  uint64_t v122 = v22 + 8;
  Swift::String v100 = (void (**)(char *, uint64_t))(v10 + 8);
  int v99 = (void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v98 = (void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v114 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v31 = 0;
  *(void *)&long long v32 = 136315138;
  long long v94 = v32;
  id v93 = (void *)0x80000001005A1F50;
  Swift::String_optional v92 = (char *)&type metadata for Any + 8;
  uint64_t v127 = v14;
  while (1)
  {
    if (v27)
    {
      unint64_t v61 = __clz(__rbit64(v27));
      uint64_t v62 = (v27 - 1) & v27;
      unint64_t v63 = v61 | (v31 << 6);
      uint64_t v64 = v115;
      goto LABEL_21;
    }
    int64_t v65 = v31 + 1;
    uint64_t v64 = v115;
    if (__OFADD__(v31, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v65 >= v97) {
      goto LABEL_25;
    }
    unint64_t v66 = *(void *)(v96 + 8 * v65);
    ++v31;
    if (!v66)
    {
      int64_t v31 = v65 + 1;
      if (v65 + 1 >= v97) {
        goto LABEL_25;
      }
      unint64_t v66 = *(void *)(v96 + 8 * v31);
      if (!v66)
      {
        int64_t v31 = v65 + 2;
        if (v65 + 2 >= v97) {
          goto LABEL_25;
        }
        unint64_t v66 = *(void *)(v96 + 8 * v31);
        if (!v66) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v62 = (v66 - 1) & v66;
    unint64_t v63 = __clz(__rbit64(v66)) + (v31 << 6);
LABEL_21:
    uint64_t v68 = v126;
    Swift::String v69 = *(void (**)(char *, unint64_t, uint64_t))(v126 + 16);
    uint64_t v70 = v104;
    v69(v104, *(void *)(v114 + 48) + *(void *)(v126 + 72) * v63, v14);
    Swift::String v71 = *(void (**)(uint64_t, char *, uint64_t))(v68 + 32);
    uint64_t v72 = v128;
    v71(v128, v70, v14);
    uint64_t v117 = (void (*)(char *, uint64_t, uint64_t))v69;
    v69(v64, v72, v14);
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v73 = type metadata accessor for Logger();
    sub_1000606BC(v73, (uint64_t)qword_1006D1E98);
    Swift::String v74 = Logger.logObject.getter();
    os_log_type_t v75 = static os_log_type_t.default.getter();
    BOOL v76 = os_log_type_enabled(v74, v75);
    unint64_t v120 = v62;
    int64_t v121 = v31;
    uint64_t v118 = (void (*)(unint64_t, char *, uint64_t))v71;
    if (v76)
    {
      Swift::String v77 = (uint8_t *)swift_slowAlloc();
      id v131 = (id)swift_slowAlloc();
      *(_DWORD *)Swift::String v77 = v94;
      uint64_t aBlock = 0;
      v130[0] = 0xE000000000000000;
      _StringGuts.grow(_:)(23);
      v78._uint64_t countAndFlagsBits = 0xD000000000000015;
      v78._object = v93;
      String.append(_:)(v78);
      _print_unlocked<A, B>(_:_:)();
      v79._uint64_t countAndFlagsBits = 0;
      v79._object = (void *)0xE000000000000000;
      String.append(_:)(v79);
      uint64_t aBlock = (void *)sub_1000606F4((uint64_t)aBlock, v130[0], (uint64_t *)&v131);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v74, v75, "FMAccessoryDiscoveryDataSource: %s", v77, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    id v119 = *(void (**)(char *, uint64_t))(v126 + 8);
    v119(v64, v14);
    unint64_t v33 = v125;
    uint64_t aBlock = (void *)sub_1005321D0(v128, 0, *(void *)((char *)v125 + v103));
    id v131 = *(id *)((char *)v33 + v102);
    id v34 = v131;
    uint64_t v35 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    uint64_t v116 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
    uint64_t v36 = (uint64_t)v111;
    v116(v111, 1, 1, v35);
    uint64_t v37 = v34;
    sub_10005D034(&qword_1006B31A0);
    sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
    sub_1000450A0((unint64_t *)&unk_1006B4250, &qword_1006B31A0);
    sub_10053546C((unint64_t *)&qword_1006BE230, (unint64_t *)&qword_1006AF7A0);
    unint64_t v38 = v109;
    Publisher.subscribe<A>(on:options:)();
    sub_100003F10(v36, &qword_1006B4230);

    swift_release();
    uint64_t aBlock = v37;
    v116((char *)v36, 1, 1, v35);
    sub_1000450A0(&qword_1006B4260, &qword_1006B4238);
    uint64_t v39 = v37;
    uint64_t v40 = v107;
    uint64_t v41 = v110;
    Publisher.receive<A>(on:options:)();
    sub_100003F10(v36, &qword_1006B4230);

    (*v100)(v38, v41);
    uint64_t v42 = swift_allocObject();
    uint64_t v43 = v125;
    swift_unknownObjectWeakInit();
    uint64_t v44 = v105;
    v117(v105, v128, v127);
    unint64_t v45 = (*(unsigned __int8 *)(v126 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80);
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = v42;
    v118(v46 + v45, v44, v127);
    sub_1000450A0(&qword_1006B4268, (uint64_t *)&unk_1006B4240);
    uint64_t v47 = v108;
    uint64_t v48 = Publisher.sink(receiveCompletion:receiveValue:)();
    swift_release();
    (*v99)(v40, v47);
    uint64_t v118 = (void (*)(unint64_t, char *, uint64_t))FMIPDiscoveredAccessory.displayName.getter();
    uint64_t v50 = v49;
    uint64_t v117 = *(void (**)(char *, uint64_t, uint64_t))((char *)v43 + v101);
    swift_retain();
    uint64_t v51 = (uint64_t)v112;
    uint64_t v52 = FMIPDiscoveredAccessory.identifier.getter();
    __chkstk_darwin(v52);
    uint64_t v53 = type metadata accessor for FMIPAccessoryDiscoveryController();
    *(&v86 - 4) = (char *)v53;
    uint64_t v54 = sub_100535294((unint64_t *)&unk_1006BB340, (void (*)(uint64_t))&type metadata accessor for FMIPAccessoryDiscoveryController);
    *(&v86 - 3) = (char *)v54;
    *(&v86 - 2) = (char *)&off_100626250;
    *(&v86 - 1) = (char *)&off_100628FC8;
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v86 - 4) = (char *)v53;
    *(&v86 - 3) = (char *)v54;
    *(&v86 - 2) = (char *)&off_100626250;
    *(&v86 - 1) = (char *)&off_100628FC8;
    swift_getKeyPath();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v56 = (void (*)(void **, void))static Published.subscript.modify();
    uint64_t v58 = v57;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v131 = *v58;
    *uint64_t v58 = (id)0x8000000000000000;
    sub_1001B81E0((uint64_t)v118, v50, 0, v48, v51, isUniquelyReferenced_nonNull_native);
    *uint64_t v58 = v131;
    swift_bridgeObjectRelease();
    uint64_t v60 = v127;
    (*v98)(v51, v113);
    v56(&aBlock, 0);
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v14 = v60;
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v119)(v128, v60);
    unint64_t v27 = v120;
    int64_t v31 = v121;
  }
  int64_t v67 = v65 + 3;
  if (v67 >= v97)
  {
LABEL_25:
    swift_release();
    sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
    uint64_t v80 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v81 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v130[3] = (unint64_t)sub_100535B60;
    v130[4] = v81;
    uint64_t aBlock = _NSConcreteStackBlock;
    v130[0] = 1107296256;
    v130[1] = (unint64_t)sub_10003C410;
    v130[2] = (unint64_t)&unk_100644560;
    NSString v82 = _Block_copy(&aBlock);
    swift_release();
    id v83 = v86;
    static DispatchQoS.unspecified.getter();
    uint64_t aBlock = _swiftEmptyArrayStorage;
    sub_100535294((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10005D034((uint64_t *)&unk_1006AE4B0);
    sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
    uint64_t v84 = v89;
    uint64_t v85 = v91;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v82);

    (*(void (**)(char *, uint64_t))(v90 + 8))(v84, v85);
    return (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v83, v88);
  }
  unint64_t v66 = *(void *)(v96 + 8 * v67);
  if (v66)
  {
    int64_t v31 = v67;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v31 = v67 + 1;
    if (__OFADD__(v67, 1)) {
      break;
    }
    if (v31 >= v97) {
      goto LABEL_25;
    }
    unint64_t v66 = *(void *)(v96 + 8 * v31);
    ++v67;
    if (v66) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100526840(uint64_t a1, void *a2)
{
  uint64_t v91 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v90 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v89 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for DispatchQoS();
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v86 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v112 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10005D034(&qword_1006B4230);
  __chkstk_darwin(v8 - 8);
  id v111 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_10005D034(&qword_1006B4238);
  uint64_t v10 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v109 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_10005D034((uint64_t *)&unk_1006B4240);
  uint64_t v12 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v107 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FMIPUnknownItem();
  uint64_t v15 = __chkstk_darwin(v14);
  id v105 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  id v115 = (char *)&v86 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v128 = (uint64_t)&v86 - v20;
  uint64_t v106 = v21;
  __chkstk_darwin(v19);
  NSString v104 = (char *)&v86 - v23;
  uint64_t v24 = *(void *)(a1 + 56);
  uint64_t v96 = a1 + 56;
  uint64_t v25 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v26 = -1;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  unint64_t v27 = v26 & v24;
  uint64_t v28 = swift_isaMask & *a2;
  uint64_t v125 = a2;
  uint64_t v103 = *(void *)(qword_1006D1610 + v28 + 32);
  uint64_t v29 = *(void *)(qword_1006D1610 + v28 + 48);
  uint64_t v102 = *(void *)(qword_1006D1610 + v28 + 40);
  int64_t v97 = (unint64_t)(v25 + 63) >> 6;
  uint64_t v123 = v22 + 32;
  uint64_t v124 = v22 + 16;
  id v95 = v130;
  uint64_t v101 = v29;
  uint64_t v126 = v22;
  uint64_t v122 = v22 + 8;
  Swift::String v100 = (void (**)(char *, uint64_t))(v10 + 8);
  int v99 = (void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v98 = (void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v114 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v31 = 0;
  *(void *)&long long v32 = 136315138;
  long long v94 = v32;
  id v93 = (void *)0x80000001005A1F50;
  Swift::String_optional v92 = (char *)&type metadata for Any + 8;
  uint64_t v127 = v14;
  while (1)
  {
    if (v27)
    {
      unint64_t v61 = __clz(__rbit64(v27));
      uint64_t v62 = (v27 - 1) & v27;
      unint64_t v63 = v61 | (v31 << 6);
      uint64_t v64 = v115;
      goto LABEL_21;
    }
    int64_t v65 = v31 + 1;
    uint64_t v64 = v115;
    if (__OFADD__(v31, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v65 >= v97) {
      goto LABEL_25;
    }
    unint64_t v66 = *(void *)(v96 + 8 * v65);
    ++v31;
    if (!v66)
    {
      int64_t v31 = v65 + 1;
      if (v65 + 1 >= v97) {
        goto LABEL_25;
      }
      unint64_t v66 = *(void *)(v96 + 8 * v31);
      if (!v66)
      {
        int64_t v31 = v65 + 2;
        if (v65 + 2 >= v97) {
          goto LABEL_25;
        }
        unint64_t v66 = *(void *)(v96 + 8 * v31);
        if (!v66) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v62 = (v66 - 1) & v66;
    unint64_t v63 = __clz(__rbit64(v66)) + (v31 << 6);
LABEL_21:
    uint64_t v68 = v126;
    Swift::String v69 = *(void (**)(char *, unint64_t, uint64_t))(v126 + 16);
    uint64_t v70 = v104;
    v69(v104, *(void *)(v114 + 48) + *(void *)(v126 + 72) * v63, v14);
    Swift::String v71 = *(void (**)(uint64_t, char *, uint64_t))(v68 + 32);
    uint64_t v72 = v128;
    v71(v128, v70, v14);
    uint64_t v117 = (void (*)(char *, uint64_t, uint64_t))v69;
    v69(v64, v72, v14);
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v73 = type metadata accessor for Logger();
    sub_1000606BC(v73, (uint64_t)qword_1006D1E98);
    Swift::String v74 = Logger.logObject.getter();
    os_log_type_t v75 = static os_log_type_t.default.getter();
    BOOL v76 = os_log_type_enabled(v74, v75);
    unint64_t v120 = v62;
    int64_t v121 = v31;
    uint64_t v118 = (void (*)(unint64_t, char *, uint64_t))v71;
    if (v76)
    {
      Swift::String v77 = (uint8_t *)swift_slowAlloc();
      id v131 = (id)swift_slowAlloc();
      *(_DWORD *)Swift::String v77 = v94;
      uint64_t aBlock = 0;
      v130[0] = 0xE000000000000000;
      _StringGuts.grow(_:)(23);
      v78._uint64_t countAndFlagsBits = 0xD000000000000015;
      v78._object = v93;
      String.append(_:)(v78);
      _print_unlocked<A, B>(_:_:)();
      v79._uint64_t countAndFlagsBits = 0;
      v79._object = (void *)0xE000000000000000;
      String.append(_:)(v79);
      uint64_t aBlock = (void *)sub_1000606F4((uint64_t)aBlock, v130[0], (uint64_t *)&v131);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v74, v75, "FMAccessoryDiscoveryDataSource: %s", v77, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    id v119 = *(void (**)(char *, uint64_t))(v126 + 8);
    v119(v64, v14);
    unint64_t v33 = v125;
    uint64_t aBlock = (void *)sub_100532C68(v128, 0, *(void *)((char *)v125 + v103));
    id v131 = *(id *)((char *)v33 + v102);
    id v34 = v131;
    uint64_t v35 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    uint64_t v116 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
    uint64_t v36 = (uint64_t)v111;
    v116(v111, 1, 1, v35);
    uint64_t v37 = v34;
    sub_10005D034(&qword_1006B31A0);
    sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
    sub_1000450A0((unint64_t *)&unk_1006B4250, &qword_1006B31A0);
    sub_10053546C((unint64_t *)&qword_1006BE230, (unint64_t *)&qword_1006AF7A0);
    unint64_t v38 = v109;
    Publisher.subscribe<A>(on:options:)();
    sub_100003F10(v36, &qword_1006B4230);

    swift_release();
    uint64_t aBlock = v37;
    v116((char *)v36, 1, 1, v35);
    sub_1000450A0(&qword_1006B4260, &qword_1006B4238);
    uint64_t v39 = v37;
    uint64_t v40 = v107;
    uint64_t v41 = v110;
    Publisher.receive<A>(on:options:)();
    sub_100003F10(v36, &qword_1006B4230);

    (*v100)(v38, v41);
    uint64_t v42 = swift_allocObject();
    uint64_t v43 = v125;
    swift_unknownObjectWeakInit();
    uint64_t v44 = v105;
    v117(v105, v128, v127);
    unint64_t v45 = (*(unsigned __int8 *)(v126 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80);
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = v42;
    v118(v46 + v45, v44, v127);
    sub_1000450A0(&qword_1006B4268, (uint64_t *)&unk_1006B4240);
    uint64_t v47 = v108;
    uint64_t v48 = Publisher.sink(receiveCompletion:receiveValue:)();
    swift_release();
    (*v99)(v40, v47);
    uint64_t v118 = (void (*)(unint64_t, char *, uint64_t))FMIPUnknownItem.name.getter();
    uint64_t v50 = v49;
    uint64_t v117 = *(void (**)(char *, uint64_t, uint64_t))((char *)v43 + v101);
    swift_retain();
    uint64_t v51 = (uint64_t)v112;
    uint64_t v52 = FMIPUnknownItem.identifier.getter();
    __chkstk_darwin(v52);
    uint64_t v53 = type metadata accessor for FMIPUnknownAccessoryDiscoveryController();
    *(&v86 - 4) = (char *)v53;
    uint64_t v54 = sub_100535294(&qword_1006C1D48, (void (*)(uint64_t))&type metadata accessor for FMIPUnknownAccessoryDiscoveryController);
    *(&v86 - 3) = (char *)v54;
    *(&v86 - 2) = (char *)&off_100626268;
    *(&v86 - 1) = (char *)&off_100628FC0;
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v86 - 4) = (char *)v53;
    *(&v86 - 3) = (char *)v54;
    *(&v86 - 2) = (char *)&off_100626268;
    *(&v86 - 1) = (char *)&off_100628FC0;
    swift_getKeyPath();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v56 = (void (*)(void **, void))static Published.subscript.modify();
    uint64_t v58 = v57;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v131 = *v58;
    *uint64_t v58 = (id)0x8000000000000000;
    sub_1001B81E0((uint64_t)v118, v50, 0, v48, v51, isUniquelyReferenced_nonNull_native);
    *uint64_t v58 = v131;
    swift_bridgeObjectRelease();
    uint64_t v60 = v127;
    (*v98)(v51, v113);
    v56(&aBlock, 0);
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v14 = v60;
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v119)(v128, v60);
    unint64_t v27 = v120;
    int64_t v31 = v121;
  }
  int64_t v67 = v65 + 3;
  if (v67 >= v97)
  {
LABEL_25:
    swift_release();
    sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
    uint64_t v80 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v81 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v130[3] = (unint64_t)sub_10053585C;
    v130[4] = v81;
    uint64_t aBlock = _NSConcreteStackBlock;
    v130[0] = 1107296256;
    v130[1] = (unint64_t)sub_10003C410;
    v130[2] = (unint64_t)&unk_1006442B8;
    NSString v82 = _Block_copy(&aBlock);
    swift_release();
    id v83 = v86;
    static DispatchQoS.unspecified.getter();
    uint64_t aBlock = _swiftEmptyArrayStorage;
    sub_100535294((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10005D034((uint64_t *)&unk_1006AE4B0);
    sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
    uint64_t v84 = v89;
    uint64_t v85 = v91;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v82);

    (*(void (**)(char *, uint64_t))(v90 + 8))(v84, v85);
    return (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v83, v88);
  }
  unint64_t v66 = *(void *)(v96 + 8 * v67);
  if (v66)
  {
    int64_t v31 = v67;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v31 = v67 + 1;
    if (__OFADD__(v67, 1)) {
      break;
    }
    if (v31 >= v97) {
      goto LABEL_25;
    }
    unint64_t v66 = *(void *)(v96 + 8 * v31);
    ++v67;
    if (v66) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_10052786C(uint64_t a1, void (*a2)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    a2(1);
  }
}

uint64_t sub_1005278CC(uint64_t a1, void *a2)
{
  uint64_t v134 = sub_10005D034(&qword_1006C1F28);
  __chkstk_darwin(v134);
  uint64_t v133 = (uint64_t)&v124 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = sub_10005D034(&qword_1006B2BF0);
  uint64_t v5 = *(void *)(v171 - 8);
  uint64_t v6 = __chkstk_darwin(v171 - 8);
  uint64_t v132 = (uint64_t)&v124 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v137 = (uint64_t)&v124 - v8;
  uint64_t v129 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v128 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  uint64_t v127 = (char *)&v124 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = type metadata accessor for DispatchQoS();
  uint64_t v125 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v124 = (char *)&v124 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_10005D034((uint64_t *)&unk_1006C1F30);
  __chkstk_darwin(v156);
  uint64_t v160 = (uint64_t)&v124 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10005D034((uint64_t *)&unk_1006BB330);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v136 = (uint64_t)&v124 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v135 = (char *)&v124 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v144 = (uint64_t)&v124 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v161 = (uint64_t)&v124 - v20;
  __chkstk_darwin(v19);
  uint64_t v164 = (uint64_t)&v124 - v21;
  uint64_t v159 = type metadata accessor for UUID();
  uint64_t v22 = *(void *)(v159 - 8);
  uint64_t v23 = __chkstk_darwin(v159);
  id v131 = (char *)&v124 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v170 = (char *)&v124 - v25;
  uint64_t v26 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v124 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v27);
  long long v32 = (char *)&v124 - v31;
  __chkstk_darwin(v30);
  int v154 = (char *)&v124 - v34;
  uint64_t v35 = *(void *)(a1 + 56);
  uint64_t v142 = a1 + 56;
  uint64_t v36 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v37 = -1;
  if (v36 < 64) {
    uint64_t v37 = ~(-1 << v36);
  }
  uint64_t v153 = *(void *)(qword_1006D1610 + (swift_isaMask & *a2) + 48);
  int64_t v143 = (unint64_t)(v36 + 63) >> 6;
  uint64_t v152 = v33 + 16;
  uint64_t v151 = v33 + 32;
  uint64_t v155 = v33;
  unint64_t v38 = (void (**)(void, void))(v33 + 8);
  id v147 = (void (**)(char *, uint64_t))(v22 + 8);
  Swift::String v163 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v150 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  uint64_t v141 = v22;
  uint64_t v130 = (void (**)(char *, uint64_t, uint64_t))(v22 + 32);
  uint64_t v157 = a1;
  unint64_t v39 = v37 & v35;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v41 = 0;
  *(void *)&long long v42 = 136315138;
  long long v140 = v42;
  uint64_t v139 = (void *)0x80000001005A1FB0;
  int v138 = (char *)&type metadata for Any + 8;
  uint64_t v145 = v26;
  unint64_t v149 = v29;
  uint64_t v169 = v32;
  uint64_t v148 = v38;
  Swift::Int v146 = a2;
  while (1)
  {
    if (v39)
    {
      uint64_t v167 = (v39 - 1) & v39;
      int64_t v168 = v41;
      unint64_t v53 = __clz(__rbit64(v39)) | (v41 << 6);
      goto LABEL_25;
    }
    int64_t v54 = v41 + 1;
    if (__OFADD__(v41, 1))
    {
      __break(1u);
      goto LABEL_51;
    }
    if (v54 >= v143) {
      goto LABEL_49;
    }
    unint64_t v55 = *(void *)(v142 + 8 * v54);
    int64_t v56 = v41 + 1;
    if (!v55)
    {
      int64_t v56 = v41 + 2;
      if (v41 + 2 >= v143) {
        goto LABEL_49;
      }
      unint64_t v55 = *(void *)(v142 + 8 * v56);
      if (!v55)
      {
        int64_t v56 = v41 + 3;
        if (v41 + 3 >= v143) {
          goto LABEL_49;
        }
        unint64_t v55 = *(void *)(v142 + 8 * v56);
        if (!v55) {
          break;
        }
      }
    }
LABEL_24:
    uint64_t v167 = (v55 - 1) & v55;
    int64_t v168 = v56;
    unint64_t v53 = __clz(__rbit64(v55)) + (v56 << 6);
LABEL_25:
    uint64_t v58 = v155;
    uint64_t v59 = *(void (**)(char *, unint64_t, uint64_t))(v155 + 16);
    uint64_t v60 = v154;
    v59(v154, *(void *)(v157 + 48) + *(void *)(v155 + 72) * v53, v26);
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v32, v60, v26);
    v59(v29, (unint64_t)v32, v26);
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v61 = type metadata accessor for Logger();
    sub_1000606BC(v61, (uint64_t)qword_1006D1E98);
    uint64_t v62 = Logger.logObject.getter();
    os_log_type_t v63 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = swift_slowAlloc();
      uint64_t v181 = swift_slowAlloc();
      *(_DWORD *)uint64_t v64 = v140;
      uint64_t aBlock = 0;
      unint64_t v176 = 0xE000000000000000;
      _StringGuts.grow(_:)(18);
      v65._uint64_t countAndFlagsBits = 0xD000000000000010;
      v65._object = v139;
      String.append(_:)(v65);
      _print_unlocked<A, B>(_:_:)();
      v66._uint64_t countAndFlagsBits = 0;
      v66._object = (void *)0xE000000000000000;
      String.append(_:)(v66);
      *(void *)(v64 + 4) = sub_1000606F4((uint64_t)aBlock, v176, &v181);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "FMAccessoryDiscoveryDataSource: %s", (uint8_t *)v64, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v166 = (void (*)(char *, uint64_t))*v38;
    v166(v29, v26);
    uint64_t v67 = *(void *)((char *)a2 + v153);
    uint64_t v68 = (uint64_t)v170;
    uint64_t v69 = FMIPDiscoveredAccessory.identifier.getter();
    __chkstk_darwin(v69);
    uint64_t v70 = type metadata accessor for FMIPAccessoryDiscoveryController();
    *(&v124 - 4) = (char *)v70;
    uint64_t v71 = sub_100535294((unint64_t *)&unk_1006BB340, (void (*)(uint64_t))&type metadata accessor for FMIPAccessoryDiscoveryController);
    *(&v124 - 3) = (char *)v71;
    *(&v124 - 2) = (char *)&off_100626250;
    *(&v124 - 1) = (char *)&off_100628FC8;
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    uint64_t v172 = v71;
    uint64_t v173 = (char *)v70;
    *(&v124 - 4) = (char *)v70;
    *(&v124 - 3) = (char *)v71;
    *(&v124 - 2) = (char *)&off_100626250;
    *(&v124 - 1) = (char *)&off_100628FC8;
    uint64_t v73 = swift_getKeyPath();
    uint64_t v174 = v67;
    uint64_t v165 = static Published.subscript.modify();
    os_log_type_t v75 = v74;
    swift_bridgeObjectRetain();
    unint64_t v76 = sub_1001AF8D4(v68);
    char v78 = v77;
    swift_bridgeObjectRelease();
    if (v78)
    {
      uint64_t v158 = v73;
      uint64_t v162 = (uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))KeyPath;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v181 = *v75;
      uint64_t *v75 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1001BA410();
      }
      uint64_t v80 = *(void (**)(unint64_t, uint64_t))(v141 + 8);
      uint64_t v81 = (unint64_t)v147 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v82 = v159;
      v80(*(void *)(v181 + 48) + *(void *)(v141 + 72) * v76, v159);
      uint64_t v83 = v181;
      uint64_t v84 = (uint64_t *)(*(void *)(v181 + 56) + 32 * v76);
      uint64_t v85 = *v84;
      uint64_t v86 = v84[1];
      uint64_t v87 = (void *)v84[2];
      sub_1001B6B74(v76, v181);
      uint64_t *v75 = v83;
      swift_bridgeObjectRelease();
      uint64_t v88 = v81;
      uint64_t v89 = (void (*)(char *, uint64_t))v80;
      uint64_t v90 = v82;
    }
    else
    {
      uint64_t v85 = 0;
      uint64_t v86 = 0;
      uint64_t v87 = 0;
      uint64_t v89 = *v147;
      uint64_t v88 = (unint64_t)v147 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v90 = v159;
    }
    uint64_t v91 = (void (*)(void ***, void))v165;
    uint64_t v165 = (uint64_t)v89;
    uint64_t v158 = v88;
    v89(v170, v90);
    sub_100535938(v85, v86, v87);
    v91(&aBlock, 0);
    swift_release();
    uint64_t v92 = swift_release();
    __chkstk_darwin(v92);
    long long v94 = (char *)v172;
    id v93 = v173;
    *(&v124 - 4) = v173;
    *(&v124 - 3) = v94;
    *(&v124 - 2) = (char *)&off_100626250;
    *(&v124 - 1) = (char *)&off_100628FC8;
    uint64_t v95 = swift_getKeyPath();
    __chkstk_darwin(v95);
    *(&v124 - 4) = v93;
    *(&v124 - 3) = v94;
    *(&v124 - 2) = (char *)&off_100626250;
    *(&v124 - 1) = (char *)&off_100628FC8;
    swift_getKeyPath();
    uint64_t v96 = v164;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v97 = v161;
    FMIPDiscoveredAccessory.identifier.getter();
    uint64_t v98 = sub_10005D034((uint64_t *)&unk_1006BB350);
    uint64_t v99 = *(void *)(v98 - 8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v99 + 56))(v97, 0, 1, v98);
    uint64_t v100 = v171;
    uint64_t v162 = *v163;
    v162((char *)v97, 0, 1, v171);
    uint64_t v101 = v160;
    uint64_t v102 = v160 + *(int *)(v156 + 48);
    sub_100006AB0(v96, v160, (uint64_t *)&unk_1006BB330);
    sub_100006AB0(v97, v102, (uint64_t *)&unk_1006BB330);
    uint64_t v103 = *v150;
    if ((*v150)(v101, 1, v100) == 1)
    {
      sub_100003F10(v97, (uint64_t *)&unk_1006BB330);
      sub_100003F10(v96, (uint64_t *)&unk_1006BB330);
      uint64_t v44 = v171;
      int v104 = v103(v102, 1, v171);
      a2 = v146;
      uint64_t v26 = v145;
      if (v104 != 1) {
        goto LABEL_39;
      }
LABEL_6:
      sub_100003F10(v101, (uint64_t *)&unk_1006BB330);
      uint64_t v45 = (uint64_t)v135;
      uint64_t v46 = v162(v135, 1, 1, v44);
      __chkstk_darwin(v46);
      uint64_t v47 = v173;
      uint64_t v48 = a2;
      uint64_t v49 = (char *)v172;
      *(&v124 - 4) = v173;
      *(&v124 - 3) = v49;
      *(&v124 - 2) = (char *)&off_100626250;
      *(&v124 - 1) = (char *)&off_100628FC8;
      uint64_t v50 = swift_getKeyPath();
      __chkstk_darwin(v50);
      *(&v124 - 4) = v47;
      *(&v124 - 3) = v49;
      a2 = v48;
      *(&v124 - 2) = (char *)&off_100626250;
      *(&v124 - 1) = (char *)&off_100628FC8;
      swift_getKeyPath();
      sub_100006AB0(v45, v136, (uint64_t *)&unk_1006BB330);
      swift_retain();
      static Published.subscript.setter();
      uint64_t v51 = v45;
      uint64_t v52 = (uint64_t *)&unk_1006BB330;
LABEL_7:
      sub_100003F10(v51, v52);
      goto LABEL_8;
    }
    id v105 = (void (*)(uint64_t, uint64_t))v165;
    uint64_t v106 = v144;
    sub_100006AB0(v101, v144, (uint64_t *)&unk_1006BB330);
    if (v103(v102, 1, v171) == 1)
    {
      sub_100003F10(v97, (uint64_t *)&unk_1006BB330);
      sub_100003F10(v164, (uint64_t *)&unk_1006BB330);
      sub_100003F10(v106, &qword_1006B2BF0);
      a2 = v146;
      uint64_t v26 = v145;
LABEL_39:
      uint64_t v51 = v101;
      uint64_t v52 = (uint64_t *)&unk_1006C1F30;
      goto LABEL_7;
    }
    uint64_t v107 = v171;
    uint64_t v108 = v137;
    sub_100067E48(v102, v137, &qword_1006B2BF0);
    uint64_t v109 = v133;
    uint64_t v110 = v133 + *(int *)(v134 + 48);
    sub_100006AB0(v106, v133, &qword_1006B2BF0);
    sub_100006AB0(v108, v110, &qword_1006B2BF0);
    id v111 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v99 + 48);
    if (v111(v109, 1, v98) == 1)
    {
      int v112 = v111(v110, 1, v98);
      a2 = v146;
      if (v112 == 1)
      {
        sub_100003F10(v109, &qword_1006B2BF0);
        uint64_t v43 = v144;
LABEL_5:
        sub_100003F10(v137, &qword_1006B2BF0);
        sub_100003F10(v161, (uint64_t *)&unk_1006BB330);
        sub_100003F10(v164, (uint64_t *)&unk_1006BB330);
        sub_100003F10(v43, &qword_1006B2BF0);
        uint64_t v26 = v145;
        uint64_t v44 = v107;
        goto LABEL_6;
      }
      goto LABEL_45;
    }
    uint64_t v113 = v132;
    sub_100006AB0(v109, v132, &qword_1006B2BF0);
    int v114 = v111(v110, 1, v98);
    a2 = v146;
    if (v114 == 1)
    {
      v105(v113, v159);
      uint64_t v101 = v160;
LABEL_45:
      sub_100003F10(v109, &qword_1006C1F28);
      uint64_t v43 = v144;
      goto LABEL_46;
    }
    id v115 = v131;
    uint64_t v116 = v159;
    (*v130)(v131, v110, v159);
    char v117 = static UUID.== infix(_:_:)();
    v105((uint64_t)v115, v116);
    v105(v113, v116);
    sub_100003F10(v109, &qword_1006B2BF0);
    uint64_t v101 = v160;
    uint64_t v43 = v144;
    if (v117) {
      goto LABEL_5;
    }
LABEL_46:
    sub_100003F10(v137, &qword_1006B2BF0);
    sub_100003F10(v161, (uint64_t *)&unk_1006BB330);
    sub_100003F10(v164, (uint64_t *)&unk_1006BB330);
    sub_100003F10(v43, &qword_1006B2BF0);
    sub_100003F10(v101, (uint64_t *)&unk_1006BB330);
    uint64_t v26 = v145;
LABEL_8:
    uint64_t v29 = v149;
    int64_t v41 = v168;
    long long v32 = v169;
    unint64_t v38 = v148;
    unint64_t v39 = v167;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v166)(v169, v26);
  }
  uint64_t v57 = v41 + 4;
  if (v41 + 4 >= v143)
  {
LABEL_49:
    swift_release();
    sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
    uint64_t v118 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v119 = swift_allocObject();
    swift_unknownObjectWeakInit();
    Swift::String v179 = sub_100535B60;
    uint64_t v180 = v119;
    uint64_t aBlock = _NSConcreteStackBlock;
    unint64_t v176 = 1107296256;
    id v177 = sub_10003C410;
    Swift::String v178 = &unk_100644678;
    unint64_t v120 = _Block_copy(&aBlock);
    swift_release();
    int64_t v121 = v124;
    static DispatchQoS.unspecified.getter();
    uint64_t aBlock = (void **)_swiftEmptyArrayStorage;
    sub_100535294((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10005D034((uint64_t *)&unk_1006AE4B0);
    sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
    uint64_t v122 = v127;
    uint64_t v123 = v129;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v120);

    (*(void (**)(char *, uint64_t))(v128 + 8))(v122, v123);
    return (*(uint64_t (**)(char *, uint64_t))(v125 + 8))(v121, v126);
  }
  unint64_t v55 = *(void *)(v142 + 8 * v57);
  if (v55)
  {
    int64_t v56 = v41 + 4;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v56 = v57 + 1;
    if (__OFADD__(v57, 1)) {
      break;
    }
    if (v56 >= v143) {
      goto LABEL_49;
    }
    unint64_t v55 = *(void *)(v142 + 8 * v56);
    ++v57;
    if (v55) {
      goto LABEL_24;
    }
  }
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_100528D10(uint64_t a1, void *a2)
{
  uint64_t v134 = sub_10005D034(&qword_1006C1EE8);
  __chkstk_darwin(v134);
  uint64_t v133 = (uint64_t)&v124 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = sub_10005D034((uint64_t *)&unk_1006B2B40);
  uint64_t v5 = *(void *)(v171 - 8);
  uint64_t v6 = __chkstk_darwin(v171 - 8);
  uint64_t v132 = (uint64_t)&v124 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v137 = (uint64_t)&v124 - v8;
  uint64_t v129 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v128 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  uint64_t v127 = (char *)&v124 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = type metadata accessor for DispatchQoS();
  uint64_t v125 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v124 = (char *)&v124 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_10005D034(&qword_1006C1EF0);
  __chkstk_darwin(v156);
  uint64_t v160 = (uint64_t)&v124 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10005D034((uint64_t *)&unk_1006C1D38);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v136 = (uint64_t)&v124 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v135 = (char *)&v124 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v144 = (uint64_t)&v124 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v161 = (uint64_t)&v124 - v20;
  __chkstk_darwin(v19);
  uint64_t v164 = (uint64_t)&v124 - v21;
  uint64_t v159 = type metadata accessor for UUID();
  uint64_t v22 = *(void *)(v159 - 8);
  uint64_t v23 = __chkstk_darwin(v159);
  id v131 = (char *)&v124 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v170 = (char *)&v124 - v25;
  uint64_t v26 = type metadata accessor for FMIPUnknownItem();
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v124 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v27);
  long long v32 = (char *)&v124 - v31;
  __chkstk_darwin(v30);
  int v154 = (char *)&v124 - v34;
  uint64_t v35 = *(void *)(a1 + 56);
  uint64_t v142 = a1 + 56;
  uint64_t v36 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v37 = -1;
  if (v36 < 64) {
    uint64_t v37 = ~(-1 << v36);
  }
  uint64_t v153 = *(void *)(qword_1006D1610 + (swift_isaMask & *a2) + 48);
  int64_t v143 = (unint64_t)(v36 + 63) >> 6;
  uint64_t v152 = v33 + 16;
  uint64_t v151 = v33 + 32;
  uint64_t v155 = v33;
  unint64_t v38 = (void (**)(void, void))(v33 + 8);
  id v147 = (void (**)(char *, uint64_t))(v22 + 8);
  Swift::String v163 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v150 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  uint64_t v141 = v22;
  uint64_t v130 = (void (**)(char *, uint64_t, uint64_t))(v22 + 32);
  uint64_t v157 = a1;
  unint64_t v39 = v37 & v35;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v41 = 0;
  *(void *)&long long v42 = 136315138;
  long long v140 = v42;
  uint64_t v139 = (void *)0x80000001005A1FB0;
  int v138 = (char *)&type metadata for Any + 8;
  uint64_t v145 = v26;
  unint64_t v149 = v29;
  uint64_t v169 = v32;
  uint64_t v148 = v38;
  Swift::Int v146 = a2;
  while (1)
  {
    if (v39)
    {
      uint64_t v167 = (v39 - 1) & v39;
      int64_t v168 = v41;
      unint64_t v53 = __clz(__rbit64(v39)) | (v41 << 6);
      goto LABEL_25;
    }
    int64_t v54 = v41 + 1;
    if (__OFADD__(v41, 1))
    {
      __break(1u);
      goto LABEL_51;
    }
    if (v54 >= v143) {
      goto LABEL_49;
    }
    unint64_t v55 = *(void *)(v142 + 8 * v54);
    int64_t v56 = v41 + 1;
    if (!v55)
    {
      int64_t v56 = v41 + 2;
      if (v41 + 2 >= v143) {
        goto LABEL_49;
      }
      unint64_t v55 = *(void *)(v142 + 8 * v56);
      if (!v55)
      {
        int64_t v56 = v41 + 3;
        if (v41 + 3 >= v143) {
          goto LABEL_49;
        }
        unint64_t v55 = *(void *)(v142 + 8 * v56);
        if (!v55) {
          break;
        }
      }
    }
LABEL_24:
    uint64_t v167 = (v55 - 1) & v55;
    int64_t v168 = v56;
    unint64_t v53 = __clz(__rbit64(v55)) + (v56 << 6);
LABEL_25:
    uint64_t v58 = v155;
    uint64_t v59 = *(void (**)(char *, unint64_t, uint64_t))(v155 + 16);
    uint64_t v60 = v154;
    v59(v154, *(void *)(v157 + 48) + *(void *)(v155 + 72) * v53, v26);
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v32, v60, v26);
    v59(v29, (unint64_t)v32, v26);
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v61 = type metadata accessor for Logger();
    sub_1000606BC(v61, (uint64_t)qword_1006D1E98);
    uint64_t v62 = Logger.logObject.getter();
    os_log_type_t v63 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = swift_slowAlloc();
      uint64_t v181 = swift_slowAlloc();
      *(_DWORD *)uint64_t v64 = v140;
      uint64_t aBlock = 0;
      unint64_t v176 = 0xE000000000000000;
      _StringGuts.grow(_:)(18);
      v65._uint64_t countAndFlagsBits = 0xD000000000000010;
      v65._object = v139;
      String.append(_:)(v65);
      _print_unlocked<A, B>(_:_:)();
      v66._uint64_t countAndFlagsBits = 0;
      v66._object = (void *)0xE000000000000000;
      String.append(_:)(v66);
      *(void *)(v64 + 4) = sub_1000606F4((uint64_t)aBlock, v176, &v181);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "FMAccessoryDiscoveryDataSource: %s", (uint8_t *)v64, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v166 = (void (*)(char *, uint64_t))*v38;
    v166(v29, v26);
    uint64_t v67 = *(void *)((char *)a2 + v153);
    uint64_t v68 = (uint64_t)v170;
    uint64_t v69 = FMIPUnknownItem.identifier.getter();
    __chkstk_darwin(v69);
    uint64_t v70 = type metadata accessor for FMIPUnknownAccessoryDiscoveryController();
    *(&v124 - 4) = (char *)v70;
    uint64_t v71 = sub_100535294(&qword_1006C1D48, (void (*)(uint64_t))&type metadata accessor for FMIPUnknownAccessoryDiscoveryController);
    *(&v124 - 3) = (char *)v71;
    *(&v124 - 2) = (char *)&off_100626268;
    *(&v124 - 1) = (char *)&off_100628FC0;
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    uint64_t v172 = v71;
    uint64_t v173 = (char *)v70;
    *(&v124 - 4) = (char *)v70;
    *(&v124 - 3) = (char *)v71;
    *(&v124 - 2) = (char *)&off_100626268;
    *(&v124 - 1) = (char *)&off_100628FC0;
    uint64_t v73 = swift_getKeyPath();
    uint64_t v174 = v67;
    uint64_t v165 = static Published.subscript.modify();
    os_log_type_t v75 = v74;
    swift_bridgeObjectRetain();
    unint64_t v76 = sub_1001AF8D4(v68);
    char v78 = v77;
    swift_bridgeObjectRelease();
    if (v78)
    {
      uint64_t v158 = v73;
      uint64_t v162 = (uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))KeyPath;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v181 = *v75;
      uint64_t *v75 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1001BA410();
      }
      uint64_t v80 = *(void (**)(unint64_t, uint64_t))(v141 + 8);
      uint64_t v81 = (unint64_t)v147 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v82 = v159;
      v80(*(void *)(v181 + 48) + *(void *)(v141 + 72) * v76, v159);
      uint64_t v83 = v181;
      uint64_t v84 = (uint64_t *)(*(void *)(v181 + 56) + 32 * v76);
      uint64_t v85 = *v84;
      uint64_t v86 = v84[1];
      uint64_t v87 = (void *)v84[2];
      sub_1001B6B74(v76, v181);
      uint64_t *v75 = v83;
      swift_bridgeObjectRelease();
      uint64_t v88 = v81;
      uint64_t v89 = (void (*)(char *, uint64_t))v80;
      uint64_t v90 = v82;
    }
    else
    {
      uint64_t v85 = 0;
      uint64_t v86 = 0;
      uint64_t v87 = 0;
      uint64_t v89 = *v147;
      uint64_t v88 = (unint64_t)v147 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v90 = v159;
    }
    uint64_t v91 = (void (*)(void ***, void))v165;
    uint64_t v165 = (uint64_t)v89;
    uint64_t v158 = v88;
    v89(v170, v90);
    sub_100535938(v85, v86, v87);
    v91(&aBlock, 0);
    swift_release();
    uint64_t v92 = swift_release();
    __chkstk_darwin(v92);
    long long v94 = (char *)v172;
    id v93 = v173;
    *(&v124 - 4) = v173;
    *(&v124 - 3) = v94;
    *(&v124 - 2) = (char *)&off_100626268;
    *(&v124 - 1) = (char *)&off_100628FC0;
    uint64_t v95 = swift_getKeyPath();
    __chkstk_darwin(v95);
    *(&v124 - 4) = v93;
    *(&v124 - 3) = v94;
    *(&v124 - 2) = (char *)&off_100626268;
    *(&v124 - 1) = (char *)&off_100628FC0;
    swift_getKeyPath();
    uint64_t v96 = v164;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v97 = v161;
    FMIPUnknownItem.identifier.getter();
    uint64_t v98 = sub_10005D034((uint64_t *)&unk_1006BB350);
    uint64_t v99 = *(void *)(v98 - 8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v99 + 56))(v97, 0, 1, v98);
    uint64_t v100 = v171;
    uint64_t v162 = *v163;
    v162((char *)v97, 0, 1, v171);
    uint64_t v101 = v160;
    uint64_t v102 = v160 + *(int *)(v156 + 48);
    sub_100006AB0(v96, v160, (uint64_t *)&unk_1006C1D38);
    sub_100006AB0(v97, v102, (uint64_t *)&unk_1006C1D38);
    uint64_t v103 = *v150;
    if ((*v150)(v101, 1, v100) == 1)
    {
      sub_100003F10(v97, (uint64_t *)&unk_1006C1D38);
      sub_100003F10(v96, (uint64_t *)&unk_1006C1D38);
      uint64_t v44 = v171;
      int v104 = v103(v102, 1, v171);
      a2 = v146;
      uint64_t v26 = v145;
      if (v104 != 1) {
        goto LABEL_39;
      }
LABEL_6:
      sub_100003F10(v101, (uint64_t *)&unk_1006C1D38);
      uint64_t v45 = (uint64_t)v135;
      uint64_t v46 = v162(v135, 1, 1, v44);
      __chkstk_darwin(v46);
      uint64_t v47 = v173;
      uint64_t v48 = a2;
      uint64_t v49 = (char *)v172;
      *(&v124 - 4) = v173;
      *(&v124 - 3) = v49;
      *(&v124 - 2) = (char *)&off_100626268;
      *(&v124 - 1) = (char *)&off_100628FC0;
      uint64_t v50 = swift_getKeyPath();
      __chkstk_darwin(v50);
      *(&v124 - 4) = v47;
      *(&v124 - 3) = v49;
      a2 = v48;
      *(&v124 - 2) = (char *)&off_100626268;
      *(&v124 - 1) = (char *)&off_100628FC0;
      swift_getKeyPath();
      sub_100006AB0(v45, v136, (uint64_t *)&unk_1006C1D38);
      swift_retain();
      static Published.subscript.setter();
      uint64_t v51 = v45;
      uint64_t v52 = (uint64_t *)&unk_1006C1D38;
LABEL_7:
      sub_100003F10(v51, v52);
      goto LABEL_8;
    }
    id v105 = (void (*)(uint64_t, uint64_t))v165;
    uint64_t v106 = v144;
    sub_100006AB0(v101, v144, (uint64_t *)&unk_1006C1D38);
    if (v103(v102, 1, v171) == 1)
    {
      sub_100003F10(v97, (uint64_t *)&unk_1006C1D38);
      sub_100003F10(v164, (uint64_t *)&unk_1006C1D38);
      sub_100003F10(v106, (uint64_t *)&unk_1006B2B40);
      a2 = v146;
      uint64_t v26 = v145;
LABEL_39:
      uint64_t v51 = v101;
      uint64_t v52 = &qword_1006C1EF0;
      goto LABEL_7;
    }
    uint64_t v107 = v171;
    uint64_t v108 = v137;
    sub_100067E48(v102, v137, (uint64_t *)&unk_1006B2B40);
    uint64_t v109 = v133;
    uint64_t v110 = v133 + *(int *)(v134 + 48);
    sub_100006AB0(v106, v133, (uint64_t *)&unk_1006B2B40);
    sub_100006AB0(v108, v110, (uint64_t *)&unk_1006B2B40);
    id v111 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v99 + 48);
    if (v111(v109, 1, v98) == 1)
    {
      int v112 = v111(v110, 1, v98);
      a2 = v146;
      if (v112 == 1)
      {
        sub_100003F10(v109, (uint64_t *)&unk_1006B2B40);
        uint64_t v43 = v144;
LABEL_5:
        sub_100003F10(v137, (uint64_t *)&unk_1006B2B40);
        sub_100003F10(v161, (uint64_t *)&unk_1006C1D38);
        sub_100003F10(v164, (uint64_t *)&unk_1006C1D38);
        sub_100003F10(v43, (uint64_t *)&unk_1006B2B40);
        uint64_t v26 = v145;
        uint64_t v44 = v107;
        goto LABEL_6;
      }
      goto LABEL_45;
    }
    uint64_t v113 = v132;
    sub_100006AB0(v109, v132, (uint64_t *)&unk_1006B2B40);
    int v114 = v111(v110, 1, v98);
    a2 = v146;
    if (v114 == 1)
    {
      v105(v113, v159);
      uint64_t v101 = v160;
LABEL_45:
      sub_100003F10(v109, &qword_1006C1EE8);
      uint64_t v43 = v144;
      goto LABEL_46;
    }
    id v115 = v131;
    uint64_t v116 = v159;
    (*v130)(v131, v110, v159);
    char v117 = static UUID.== infix(_:_:)();
    v105((uint64_t)v115, v116);
    v105(v113, v116);
    sub_100003F10(v109, (uint64_t *)&unk_1006B2B40);
    uint64_t v101 = v160;
    uint64_t v43 = v144;
    if (v117) {
      goto LABEL_5;
    }
LABEL_46:
    sub_100003F10(v137, (uint64_t *)&unk_1006B2B40);
    sub_100003F10(v161, (uint64_t *)&unk_1006C1D38);
    sub_100003F10(v164, (uint64_t *)&unk_1006C1D38);
    sub_100003F10(v43, (uint64_t *)&unk_1006B2B40);
    sub_100003F10(v101, (uint64_t *)&unk_1006C1D38);
    uint64_t v26 = v145;
LABEL_8:
    uint64_t v29 = v149;
    int64_t v41 = v168;
    long long v32 = v169;
    unint64_t v38 = v148;
    unint64_t v39 = v167;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v166)(v169, v26);
  }
  uint64_t v57 = v41 + 4;
  if (v41 + 4 >= v143)
  {
LABEL_49:
    swift_release();
    sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
    uint64_t v118 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v119 = swift_allocObject();
    swift_unknownObjectWeakInit();
    Swift::String v179 = sub_10053585C;
    uint64_t v180 = v119;
    uint64_t aBlock = _NSConcreteStackBlock;
    unint64_t v176 = 1107296256;
    id v177 = sub_10003C410;
    Swift::String v178 = &unk_1006443F8;
    unint64_t v120 = _Block_copy(&aBlock);
    swift_release();
    int64_t v121 = v124;
    static DispatchQoS.unspecified.getter();
    uint64_t aBlock = (void **)_swiftEmptyArrayStorage;
    sub_100535294((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10005D034((uint64_t *)&unk_1006AE4B0);
    sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
    uint64_t v122 = v127;
    uint64_t v123 = v129;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v120);

    (*(void (**)(char *, uint64_t))(v128 + 8))(v122, v123);
    return (*(uint64_t (**)(char *, uint64_t))(v125 + 8))(v121, v126);
  }
  unint64_t v55 = *(void *)(v142 + 8 * v57);
  if (v55)
  {
    int64_t v56 = v41 + 4;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v56 = v57 + 1;
    if (__OFADD__(v57, 1)) {
      break;
    }
    if (v56 >= v143) {
      goto LABEL_49;
    }
    unint64_t v55 = *(void *)(v142 + 8 * v56);
    ++v57;
    if (v55) {
      goto LABEL_24;
    }
  }
LABEL_51:
  __break(1u);
  return result;
}

void *sub_10052A154(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v119 = a4;
  uint64_t v124 = a3;
  uint64_t v110 = sub_10005D034((uint64_t *)&unk_1006C1F30);
  __chkstk_darwin(v110);
  uint64_t v113 = (uint64_t)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10005D034((uint64_t *)&unk_1006BB330);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v111 = (uint64_t)&v102 - v12;
  __chkstk_darwin(v11);
  int v112 = (char *)&v102 - v13;
  uint64_t v14 = sub_10005D034(&qword_1006B6C60);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v121 = (uint64_t)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v107 = (char *)&v102 - v17;
  uint64_t v118 = type metadata accessor for UUID();
  uint64_t v120 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v106 = (char *)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for UIListContentConfiguration();
  uint64_t v19 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v123 = (char *)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_10005D034(&qword_1006B2BF0);
  uint64_t v21 = *(void *)(v109 - 8);
  uint64_t v22 = __chkstk_darwin(v109);
  uint64_t v104 = (uint64_t)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v117 = (uint64_t)&v102 - v25;
  __chkstk_darwin(v24);
  uint64_t v116 = (char *)&v102 - v26;
  uint64_t v27 = type metadata accessor for IndexPath();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v102 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for Logger();
  sub_1000606BC(v31, (uint64_t)qword_1006D1E98);
  long long v32 = *(void (**)(char *, void *, uint64_t))(v28 + 16);
  id v122 = a2;
  v32(v30, a2, v27);
  uint64_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.default.getter();
  BOOL v35 = os_log_type_enabled(v33, v34);
  uint64_t v114 = v19;
  id v105 = v10;
  uint64_t v108 = v21;
  if (v35)
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    uint64_t v103 = a1;
    v126[0] = v37;
    *(_DWORD *)uint64_t v36 = 136315138;
    sub_100535294(&qword_1006B6C70, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t v38 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v125 = sub_1000606F4(v38, v39, v126);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "FMAccessoryDiscoveryDataSource: dequeueConfiguredReusableCell(for: %s)", v36, 0xCu);
    swift_arrayDestroy();
    a1 = v103;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  }

  uint64_t v40 = v116;
  sub_100006AB0(v124, (uint64_t)v116, &qword_1006B2BF0);
  uint64_t v41 = sub_10005D034((uint64_t *)&unk_1006BB350);
  long long v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48);
  if (v42(v40, 1, v41) != 1) {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v40, v118);
  }
  NSString v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v45 = [a1 dequeueReusableCellWithIdentifier:v43 forIndexPath:isa];

  uint64_t v46 = (char *)self;
  id v47 = v45;
  id v48 = [v46 systemGroupedBackgroundColor];
  [v47 setBackgroundColor:v48];
  id v122 = v47;

  uint64_t v49 = v123;
  static UIListContentConfiguration.cell()();
  uint64_t v50 = v117;
  sub_100006AB0(v124, v117, &qword_1006B2BF0);
  unsigned int v51 = v42((char *)v50, 1, v41);
  uint64_t v116 = v46;
  if (v51 == 1)
  {
    id v52 = [self mainBundle];
    v127._uint64_t countAndFlagsBits = 0xD000000000000018;
    v53._uint64_t countAndFlagsBits = 0xD000000000000027;
    v127._object = (void *)0x800000010057EF80;
    v53._object = (void *)0x800000010058D610;
    v54.value._object = (void *)0x800000010057EF60;
    v54.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v55._uint64_t countAndFlagsBits = 0;
    v55._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v53, v54, (NSBundle)v52, v55, v127);

    UIListContentConfiguration.text.setter();
    id v56 = [v46 secondaryLabelColor];
    uint64_t v57 = (void (*)(uint64_t *, void))UIListContentConfiguration.textProperties.modify();
    UIListContentConfiguration.TextProperties.color.setter();
    v57(v126, 0);
    [objc_allocWithZone((Class)UIImage) init];
    UIListContentConfiguration.image.setter();
  }
  else
  {
    uint64_t v58 = v120;
    uint64_t v59 = (uint64_t)v106;
    uint64_t v60 = v118;
    uint64_t v61 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v120 + 32))(v106, v50, v118);
    __chkstk_darwin(v61);
    uint64_t v62 = type metadata accessor for FMIPAccessoryDiscoveryController();
    *(&v102 - 4) = v62;
    uint64_t v63 = sub_100535294((unint64_t *)&unk_1006BB340, (void (*)(uint64_t))&type metadata accessor for FMIPAccessoryDiscoveryController);
    *(&v102 - 3) = v63;
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v102 - 4) = v62;
    *(&v102 - 3) = v63;
    v127._object = &off_100626250;
    uint64_t v101 = &off_100628FC8;
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    sub_1004919C4(v59, v126[0]);
    uint64_t v66 = v65;
    uint64_t v68 = v67;
    swift_bridgeObjectRelease();
    if (!v66)
    {
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v59, v60);
      uint64_t v71 = v114;
      uint64_t v80 = v115;
      uint64_t v98 = v122;
      uint64_t v99 = v123;
      goto LABEL_23;
    }
    swift_bridgeObjectRetain();
    uint64_t v69 = v123;
    UIListContentConfiguration.text.setter();
    id v70 = v68;
    UIListContentConfiguration.image.setter();

    uint64_t v49 = v69;
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v59, v60);
  }
  uint64_t v71 = v114;
  uint64_t v72 = (void (*)(uint64_t *, void))UIListContentConfiguration.imageProperties.modify();
  UIListContentConfiguration.ImageProperties.maximumSize.setter();
  v72(v126, 0);
  uint64_t v73 = (void (*)(uint64_t *, void))UIListContentConfiguration.imageProperties.modify();
  UIListContentConfiguration.ImageProperties.reservedLayoutSize.setter();
  v73(v126, 0);
  uint64_t v74 = (uint64_t)v107;
  static UIBackgroundConfiguration.clear()();
  uint64_t v75 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v76 = *(void *)(v75 - 8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v76 + 56))(v74, 0, 1, v75);
  UITableViewCell.backgroundConfiguration.setter();
  uint64_t v77 = v121;
  UITableViewCell.backgroundConfiguration.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v77, 1, v75))
  {
    uint64_t v78 = v121;
    sub_100006AB0(v121, v74, &qword_1006B6C60);
    UITableViewCell.backgroundConfiguration.setter();
    sub_100003F10(v78, &qword_1006B6C60);
  }
  else
  {
    id v79 = [v116 secondarySystemBackgroundColor];
    UIBackgroundConfiguration.backgroundColor.setter();
    UITableViewCell.backgroundConfiguration.setter();
  }
  uint64_t v80 = v115;
  v126[3] = v115;
  v126[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  uint64_t v81 = sub_100042804(v126);
  (*(void (**)(uint64_t *, char *, uint64_t))(v71 + 16))(v81, v49, v80);
  uint64_t v82 = UITableViewCell.contentConfiguration.setter();
  __chkstk_darwin(v82);
  uint64_t v83 = type metadata accessor for FMIPAccessoryDiscoveryController();
  *(&v102 - 4) = v83;
  uint64_t v84 = sub_100535294((unint64_t *)&unk_1006BB340, (void (*)(uint64_t))&type metadata accessor for FMIPAccessoryDiscoveryController);
  *(&v102 - 3) = v84;
  uint64_t v85 = swift_getKeyPath();
  __chkstk_darwin(v85);
  *(&v102 - 4) = v83;
  *(&v102 - 3) = v84;
  v127._object = &off_100626250;
  uint64_t v101 = &off_100628FC8;
  swift_getKeyPath();
  uint64_t v86 = (uint64_t)v112;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v87 = v111;
  sub_100006AB0(v124, v111, &qword_1006B2BF0);
  uint64_t v88 = v108;
  uint64_t v89 = v109;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v108 + 56))(v87, 0, 1, v109);
  uint64_t v90 = v113;
  uint64_t v91 = v113 + *(int *)(v110 + 48);
  uint64_t v92 = (uint64_t *)&unk_1006BB330;
  sub_100006AB0(v86, v113, (uint64_t *)&unk_1006BB330);
  sub_100006AB0(v87, v91, (uint64_t *)&unk_1006BB330);
  id v93 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48);
  if (v93(v90, 1, v89) == 1)
  {
    sub_100003F10(v87, (uint64_t *)&unk_1006BB330);
    sub_100003F10(v86, (uint64_t *)&unk_1006BB330);
    if (v93(v91, 1, v89) == 1)
    {
      char v94 = -1;
    }
    else
    {
      uint64_t v92 = (uint64_t *)&unk_1006C1F30;
      char v94 = 0;
    }
  }
  else
  {
    uint64_t v95 = v89;
    uint64_t v96 = (uint64_t)v105;
    sub_100006AB0(v90, (uint64_t)v105, (uint64_t *)&unk_1006BB330);
    if (v93(v91, 1, v95) == 1)
    {
      sub_100003F10(v87, (uint64_t *)&unk_1006BB330);
      sub_100003F10(v86, (uint64_t *)&unk_1006BB330);
      sub_100003F10(v96, &qword_1006B2BF0);
      char v94 = 0;
      uint64_t v92 = (uint64_t *)&unk_1006C1F30;
    }
    else
    {
      uint64_t v97 = v104;
      sub_100067E48(v91, v104, &qword_1006B2BF0);
      char v94 = sub_1005222D4(v96, v97, &qword_1006B2BF0, &qword_1006C1F28);
      sub_100003F10(v97, &qword_1006B2BF0);
      uint64_t v92 = (uint64_t *)&unk_1006BB330;
      sub_100003F10(v87, (uint64_t *)&unk_1006BB330);
      sub_100003F10(v86, (uint64_t *)&unk_1006BB330);
      sub_100003F10(v96, &qword_1006B2BF0);
    }
  }
  uint64_t v98 = v122;
  sub_100003F10(v90, v92);
  [v98 setSelected:v94 & 1];
  uint64_t v99 = v123;
LABEL_23:
  (*(void (**)(char *, uint64_t))(v71 + 8))(v99, v80);
  return v98;
}

void *sub_10052B084(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v119 = a4;
  uint64_t v124 = a3;
  uint64_t v110 = sub_10005D034(&qword_1006C1EF0);
  __chkstk_darwin(v110);
  uint64_t v113 = (uint64_t)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10005D034((uint64_t *)&unk_1006C1D38);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v111 = (uint64_t)&v102 - v12;
  __chkstk_darwin(v11);
  int v112 = (char *)&v102 - v13;
  uint64_t v14 = sub_10005D034(&qword_1006B6C60);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v121 = (uint64_t)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v107 = (char *)&v102 - v17;
  uint64_t v118 = type metadata accessor for UUID();
  uint64_t v120 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v106 = (char *)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for UIListContentConfiguration();
  uint64_t v19 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v123 = (char *)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_10005D034((uint64_t *)&unk_1006B2B40);
  uint64_t v21 = *(void *)(v109 - 8);
  uint64_t v22 = __chkstk_darwin(v109);
  uint64_t v104 = (uint64_t)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v117 = (uint64_t)&v102 - v25;
  __chkstk_darwin(v24);
  uint64_t v116 = (char *)&v102 - v26;
  uint64_t v27 = type metadata accessor for IndexPath();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v102 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for Logger();
  sub_1000606BC(v31, (uint64_t)qword_1006D1E98);
  long long v32 = *(void (**)(char *, void *, uint64_t))(v28 + 16);
  id v122 = a2;
  v32(v30, a2, v27);
  uint64_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.default.getter();
  BOOL v35 = os_log_type_enabled(v33, v34);
  uint64_t v114 = v19;
  id v105 = v10;
  uint64_t v108 = v21;
  if (v35)
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    uint64_t v103 = a1;
    v126[0] = v37;
    *(_DWORD *)uint64_t v36 = 136315138;
    sub_100535294(&qword_1006B6C70, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t v38 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v125 = sub_1000606F4(v38, v39, v126);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "FMAccessoryDiscoveryDataSource: dequeueConfiguredReusableCell(for: %s)", v36, 0xCu);
    swift_arrayDestroy();
    a1 = v103;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  }

  uint64_t v40 = v116;
  sub_100006AB0(v124, (uint64_t)v116, (uint64_t *)&unk_1006B2B40);
  uint64_t v41 = sub_10005D034((uint64_t *)&unk_1006BB350);
  long long v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48);
  if (v42(v40, 1, v41) != 1) {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v40, v118);
  }
  NSString v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v45 = [a1 dequeueReusableCellWithIdentifier:v43 forIndexPath:isa];

  uint64_t v46 = (char *)self;
  id v47 = v45;
  id v48 = [v46 systemGroupedBackgroundColor];
  [v47 setBackgroundColor:v48];
  id v122 = v47;

  uint64_t v49 = v123;
  static UIListContentConfiguration.cell()();
  uint64_t v50 = v117;
  sub_100006AB0(v124, v117, (uint64_t *)&unk_1006B2B40);
  unsigned int v51 = v42((char *)v50, 1, v41);
  uint64_t v116 = v46;
  if (v51 == 1)
  {
    id v52 = [self mainBundle];
    v127._uint64_t countAndFlagsBits = 0xD000000000000018;
    v53._uint64_t countAndFlagsBits = 0xD000000000000027;
    v127._object = (void *)0x800000010057EF80;
    v53._object = (void *)0x800000010058D610;
    v54.value._object = (void *)0x800000010057EF60;
    v54.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v55._uint64_t countAndFlagsBits = 0;
    v55._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v53, v54, (NSBundle)v52, v55, v127);

    UIListContentConfiguration.text.setter();
    id v56 = [v46 secondaryLabelColor];
    uint64_t v57 = (void (*)(uint64_t *, void))UIListContentConfiguration.textProperties.modify();
    UIListContentConfiguration.TextProperties.color.setter();
    v57(v126, 0);
    [objc_allocWithZone((Class)UIImage) init];
    UIListContentConfiguration.image.setter();
  }
  else
  {
    uint64_t v58 = v120;
    uint64_t v59 = (uint64_t)v106;
    uint64_t v60 = v118;
    uint64_t v61 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v120 + 32))(v106, v50, v118);
    __chkstk_darwin(v61);
    uint64_t v62 = type metadata accessor for FMIPUnknownAccessoryDiscoveryController();
    *(&v102 - 4) = v62;
    uint64_t v63 = sub_100535294(&qword_1006C1D48, (void (*)(uint64_t))&type metadata accessor for FMIPUnknownAccessoryDiscoveryController);
    *(&v102 - 3) = v63;
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v102 - 4) = v62;
    *(&v102 - 3) = v63;
    v127._object = &off_100626268;
    uint64_t v101 = &off_100628FC0;
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    sub_1004919C4(v59, v126[0]);
    uint64_t v66 = v65;
    uint64_t v68 = v67;
    swift_bridgeObjectRelease();
    if (!v66)
    {
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v59, v60);
      uint64_t v71 = v114;
      uint64_t v80 = v115;
      uint64_t v98 = v122;
      uint64_t v99 = v123;
      goto LABEL_23;
    }
    swift_bridgeObjectRetain();
    uint64_t v69 = v123;
    UIListContentConfiguration.text.setter();
    id v70 = v68;
    UIListContentConfiguration.image.setter();

    uint64_t v49 = v69;
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v59, v60);
  }
  uint64_t v71 = v114;
  uint64_t v72 = (void (*)(uint64_t *, void))UIListContentConfiguration.imageProperties.modify();
  UIListContentConfiguration.ImageProperties.maximumSize.setter();
  v72(v126, 0);
  uint64_t v73 = (void (*)(uint64_t *, void))UIListContentConfiguration.imageProperties.modify();
  UIListContentConfiguration.ImageProperties.reservedLayoutSize.setter();
  v73(v126, 0);
  uint64_t v74 = (uint64_t)v107;
  static UIBackgroundConfiguration.clear()();
  uint64_t v75 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v76 = *(void *)(v75 - 8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v76 + 56))(v74, 0, 1, v75);
  UITableViewCell.backgroundConfiguration.setter();
  uint64_t v77 = v121;
  UITableViewCell.backgroundConfiguration.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v77, 1, v75))
  {
    uint64_t v78 = v121;
    sub_100006AB0(v121, v74, &qword_1006B6C60);
    UITableViewCell.backgroundConfiguration.setter();
    sub_100003F10(v78, &qword_1006B6C60);
  }
  else
  {
    id v79 = [v116 secondarySystemBackgroundColor];
    UIBackgroundConfiguration.backgroundColor.setter();
    UITableViewCell.backgroundConfiguration.setter();
  }
  uint64_t v80 = v115;
  v126[3] = v115;
  v126[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  uint64_t v81 = sub_100042804(v126);
  (*(void (**)(uint64_t *, char *, uint64_t))(v71 + 16))(v81, v49, v80);
  uint64_t v82 = UITableViewCell.contentConfiguration.setter();
  __chkstk_darwin(v82);
  uint64_t v83 = type metadata accessor for FMIPUnknownAccessoryDiscoveryController();
  *(&v102 - 4) = v83;
  uint64_t v84 = sub_100535294(&qword_1006C1D48, (void (*)(uint64_t))&type metadata accessor for FMIPUnknownAccessoryDiscoveryController);
  *(&v102 - 3) = v84;
  uint64_t v85 = swift_getKeyPath();
  __chkstk_darwin(v85);
  *(&v102 - 4) = v83;
  *(&v102 - 3) = v84;
  v127._object = &off_100626268;
  uint64_t v101 = &off_100628FC0;
  swift_getKeyPath();
  uint64_t v86 = (uint64_t)v112;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v87 = v111;
  sub_100006AB0(v124, v111, (uint64_t *)&unk_1006B2B40);
  uint64_t v88 = v108;
  uint64_t v89 = v109;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v108 + 56))(v87, 0, 1, v109);
  uint64_t v90 = v113;
  uint64_t v91 = v113 + *(int *)(v110 + 48);
  uint64_t v92 = (uint64_t *)&unk_1006C1D38;
  sub_100006AB0(v86, v113, (uint64_t *)&unk_1006C1D38);
  sub_100006AB0(v87, v91, (uint64_t *)&unk_1006C1D38);
  id v93 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48);
  if (v93(v90, 1, v89) == 1)
  {
    sub_100003F10(v87, (uint64_t *)&unk_1006C1D38);
    sub_100003F10(v86, (uint64_t *)&unk_1006C1D38);
    if (v93(v91, 1, v89) == 1)
    {
      char v94 = -1;
    }
    else
    {
      uint64_t v92 = &qword_1006C1EF0;
      char v94 = 0;
    }
  }
  else
  {
    uint64_t v95 = v89;
    uint64_t v96 = (uint64_t)v105;
    sub_100006AB0(v90, (uint64_t)v105, (uint64_t *)&unk_1006C1D38);
    if (v93(v91, 1, v95) == 1)
    {
      sub_100003F10(v87, (uint64_t *)&unk_1006C1D38);
      sub_100003F10(v86, (uint64_t *)&unk_1006C1D38);
      sub_100003F10(v96, (uint64_t *)&unk_1006B2B40);
      char v94 = 0;
      uint64_t v92 = &qword_1006C1EF0;
    }
    else
    {
      uint64_t v97 = v104;
      sub_100067E48(v91, v104, (uint64_t *)&unk_1006B2B40);
      char v94 = sub_1005222D4(v96, v97, (uint64_t *)&unk_1006B2B40, &qword_1006C1EE8);
      sub_100003F10(v97, (uint64_t *)&unk_1006B2B40);
      uint64_t v92 = (uint64_t *)&unk_1006C1D38;
      sub_100003F10(v87, (uint64_t *)&unk_1006C1D38);
      sub_100003F10(v86, (uint64_t *)&unk_1006C1D38);
      sub_100003F10(v96, (uint64_t *)&unk_1006B2B40);
    }
  }
  uint64_t v98 = v122;
  sub_100003F10(v90, v92);
  [v98 setSelected:v94 & 1];
  uint64_t v99 = v123;
LABEL_23:
  (*(void (**)(char *, uint64_t))(v71 + 8))(v99, v80);
  return v98;
}

id sub_10052BFB4(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_stackView;
  id v4 = objc_allocWithZone((Class)UIStackView);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_headerView;
  if (qword_1006AE130 != -1) {
    swift_once();
  }
  long long v7 = xmmword_1006D1CA8;
  long long v8 = xmmword_1006D1CB8;
  id v9 = objc_allocWithZone((Class)type metadata accessor for FMAccessoryDiscoveryListHeaderView());
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)&v5[v6] = sub_1002D2FA0(v7, *((uint64_t *)&v7 + 1), v8, *((uint64_t *)&v8 + 1));
  uint64_t v10 = OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_continueButton;
  uint64_t v11 = (char *)objc_allocWithZone((Class)type metadata accessor for FMEmptyListButton());
  uint64_t v12 = OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor;
  uint64_t v13 = self;
  uint64_t v14 = v11;
  *(void *)&v11[v12] = [v13 systemBlueColor];
  v14[OBJC_IVAR____TtC6FindMy17FMEmptyListButton_isEnabled] = 1;

  id v15 = [v13 tertiarySystemFillColor];
  id v16 = sub_10004E188(v15, 1, 1, 0);

  *(void *)&v5[v10] = v16;
  *(void *)&v5[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_cancellables] = _swiftEmptyArrayStorage;
  uint64_t v17 = &v5[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_scrollHandler];
  type metadata accessor for FMIPUnknownAccessoryDiscoveryController();
  *(void *)uint64_t v17 = 0;
  *((void *)v17 + 1) = 0;
  swift_allocObject();
  uint64_t v18 = FMIPUnknownAccessoryDiscoveryController.init()();
  id v19 = [objc_allocWithZone((Class)type metadata accessor for FMSafeAreaInsetsPropagatingTableView()) initWithFrame:2 style:0.0, 0.0, 0.0, 0.0];
  uint64_t v20 = *(void *)(a1 + 64);
  objc_allocWithZone((Class)sub_10005D034((uint64_t *)&unk_1006C1EA0));
  swift_retain();
  id v21 = v19;
  swift_retain();
  uint64_t v22 = sub_100522E5C(v18, v21, v20);
  *(void *)&v5[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_discoveryController] = v18;
  *(void *)&v5[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_tableView] = v21;
  *(void *)&v5[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_dataSource] = v22;
  swift_retain();
  id v23 = v21;
  id v24 = v22;

  *(void *)&v5[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] = a1;
  v27.receiver = v5;
  v27.super_class = (Class)type metadata accessor for FMMediatedViewController();
  id v25 = [super initWithNibName:0 bundle:0];

  swift_release();
  return v25;
}

void sub_10052C320(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v36 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10005D034(&qword_1006AF770);
  __chkstk_darwin(v7 - 8);
  uint64_t v37 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = (objc_class *)type metadata accessor for FMFindUnknownItemViewController();
  v39.receiver = v2;
  v39.super_class = v9;
  [super viewWillAppear:a1 & 1];
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  uint64_t v10 = (void (*)(char *, void))dispatch thunk of FMIPUnknownAccessoryDiscoveryController.callbacks.modify();
  FMIPUnknownAccessoryDiscoveryController.Callbacks.errorHandler.setter();
  v10(v38, 0);
  swift_release();
  dispatch thunk of FMIPUnknownAccessoryDiscoveryController.startDiscovery(completion:)();
  id v35 = *(id *)&v2[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_tableView];
  id v11 = [v35 indexPathsForSelectedRows];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v31 = v2;
    uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v14 = *(void *)(v13 + 16);
    v30[2] = v13;
    if (v14)
    {
      id v16 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v15 = v5 + 16;
      unint64_t v17 = v13 + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64));
      uint64_t v32 = *(void *)(v15 + 56);
      uint64_t v33 = v16;
      uint64_t v18 = v15;
      id v19 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 40);
      uint64_t v20 = (unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 32);
      id v21 = (void (**)(char *, char *, uint64_t))(v18 + 16);
      uint64_t v34 = v18;
      uint64_t v22 = (void (**)(char *, uint64_t))(v18 - 8);
      swift_bridgeObjectRetain();
      v30[1] = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      id v24 = v36;
      id v23 = v37;
      while (1)
      {
        v33(v23, v17, v4);
        id v25 = *v19;
        (*v19)(v23, 0, 1, v4);
        if ((*v20)(v23, 1, v4) == 1) {
          break;
        }
        (*v21)(v24, v23, v4);
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        [v35 deselectRowAtIndexPath:isa animated:1];

        id v23 = v37;
        (*v22)(v24, v4);
        v17 += v32;
        if (!--v14) {
          goto LABEL_8;
        }
      }
    }
    else
    {
      id v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      swift_bridgeObjectRetain();
      id v23 = v37;
LABEL_8:
      v25(v23, 1, 1, v4);
    }
    swift_bridgeObjectRelease_n();
    uint64_t v2 = v31;
  }
  sub_10052D26C();
  id v27 = [v2 view];
  if (v27)
  {
    uint64_t v28 = v27;
    id v29 = [self systemBackgroundColor];
    [v28 setBackgroundColor:v29];
  }
  else
  {
    __break(1u);
  }
}

void sub_10052C6FC(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    sub_10052FB04(a1);
  }
}

uint64_t sub_10052C7AC(char a1)
{
  uint64_t v2 = v1;
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for FMFindUnknownItemViewController();
  [super viewDidDisappear:a1 & 1];
  dispatch thunk of FMIPUnknownAccessoryDiscoveryController.stopDiscovery(completion:)();
  uint64_t v4 = &v2[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_cancellables];
  swift_beginAccess();
  unint64_t v5 = *(void *)v4;
  if (!(v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v6) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v6 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      AnyCancellable.cancel()();
      swift_release();
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

void sub_10052CA10()
{
  sub_10052CB5C();
  sub_10052CCF0();
  id v1 = [self buttonWithType:7];
  [v1 addTarget:v0 action:"handleCloseButtonWithSender:" forControlEvents:64];
  id v2 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v1];
  id v3 = [v0 navigationItem];
  [v3 setRightBarButtonItem:v2];

  sub_10052D0C8();
  sub_10052D26C();
  id v4 = [v0 view];
  if (v4)
  {
    unint64_t v5 = v4;
    id v6 = [self systemBackgroundColor];
    [v5 setBackgroundColor:v6];
  }
  else
  {
    __break(1u);
  }
}

void sub_10052CB5C()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_tableView];
  id v2 = [self clearColor];
  [v1 setBackgroundColor:v2];

  [v1 setDelegate:v0];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v1 setAllowsSelection:1];
  [v1 setAllowsMultipleSelection:0];
  [v1 _setSectionContentInset:0.0, COERCE_DOUBLE(1), 0.0, COERCE_DOUBLE(1)];
  id v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_stackView];
  [v3 setAxis:1];
  [v3 setSpacing:1.17549435e-38];
  [v3 addArrangedSubview:v1];
  [v3 addArrangedSubview:*(void *)&v0[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_continueButton]];
  id v4 = [v0 view];
  if (v4)
  {
    id v5 = v4;
    [v4 addSubview:v3];
  }
  else
  {
    __break(1u);
  }
}

void sub_10052CCF0()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_stackView];
  id v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_continueButton];
  id v3 = *(id *)&v0[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_tableView];
  id v4 = v1;
  id v5 = v2;
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];

  sub_10005D034(&qword_1006AF2D0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10055B950;
  id v7 = [v4 leadingAnchor];
  id v8 = [v0 view];
  if (!v8)
  {
    __break(1u);
    goto LABEL_9;
  }
  objc_super v9 = v8;
  id v10 = [v8 layoutMarginsGuide];

  id v11 = [v10 leadingAnchor];
  id v12 = [v7 constraintEqualToAnchor:v11];

  *(void *)(v6 + 32) = v12;
  id v13 = [v4 trailingAnchor];
  id v14 = [v0 view];
  if (!v14)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v15 = v14;
  id v16 = [v14 layoutMarginsGuide];

  id v17 = [v16 trailingAnchor];
  id v18 = [v13 constraintEqualToAnchor:v17];

  *(void *)(v6 + 40) = v18;
  id v19 = [v4 topAnchor];
  id v20 = [v0 view];
  if (!v20)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v21 = v20;
  id v22 = [v20 layoutMarginsGuide];

  id v23 = [v22 topAnchor];
  id v24 = [v19 constraintEqualToAnchor:v23];

  *(void *)(v6 + 48) = v24;
  id v25 = [v4 bottomAnchor];
  id v26 = [v0 view];
  if (!v26)
  {
LABEL_11:
    __break(1u);
    return;
  }
  id v27 = v26;
  uint64_t v28 = self;
  id v29 = [v27 layoutMarginsGuide];

  id v30 = [v29 bottomAnchor];
  id v31 = [v25 constraintEqualToAnchor:v30 constant:-18.0];

  *(void *)(v6 + 56) = v31;
  specialized Array._endMutation()();
  sub_100006060(0, (unint64_t *)&qword_1006AEE60);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v28 activateConstraints:isa];
}

void sub_10052D0C8()
{
  uint64_t v1 = v0;
  id v2 = *(char **)(v0 + OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_continueButton);
  id v3 = *(void **)&v2[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label];
  id v4 = self;
  id v5 = v3;
  id v6 = [v4 mainBundle];
  v13._uint64_t countAndFlagsBits = 0xD000000000000018;
  v7._uint64_t countAndFlagsBits = 0xD000000000000023;
  v13._object = (void *)0x800000010057EF80;
  v7._object = (void *)0x8000000100596480;
  v8.value._object = (void *)0x800000010057EF60;
  v8.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v9._uint64_t countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v13);

  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v5 setText:v10];

  id v11 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v1 action:"handleContinueButton"];
  [v2 addGestureRecognizer:v11];
  [v2 setUserInteractionEnabled:0];
  v2[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_activityIndicatorPosition] = 1;
  sub_10004DC28();
}

uint64_t sub_10052D26C()
{
  uint64_t v97 = sub_10005D034(&qword_1006C1D50);
  uint64_t v98 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v95 = (char *)v78 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_10005D034(&qword_1006C1D58);
  uint64_t v100 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v96 = (char *)v78 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_10005D034(&qword_1006C1D60);
  uint64_t v92 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v89 = (char *)v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_10005D034(&qword_1006C1D68);
  uint64_t v94 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v90 = (char *)v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_10005D034(&qword_1006C1D70);
  uint64_t v86 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v83 = (char *)v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_10005D034(&qword_1006C1D78);
  uint64_t v88 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v84 = (char *)v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_10005D034(&qword_1006C1D80);
  uint64_t v131 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  uint64_t v118 = (char *)v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_10005D034(&qword_1006C1D88);
  uint64_t v130 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v117 = (char *)v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_10005D034(&qword_1006C1D90);
  uint64_t v124 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v119 = (char *)v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_10005D034((uint64_t *)&unk_1006C1D98);
  uint64_t v82 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v80 = (char *)v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10005D034(&qword_1006B5A10);
  __chkstk_darwin(v11 - 8);
  Swift::String v13 = (char *)v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10005D034(&qword_1006C1DA8);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v17 = (char *)v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10005D034(&qword_1006C1DB0);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  id v21 = (char *)v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_10005D034(&qword_1006C1DB8);
  uint64_t v125 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  id v23 = (char *)v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_dataSource);
  uint64_t v104 = *(void *)(qword_1006D1610 + (swift_isaMask & *v126) + 48);
  swift_beginAccess();
  sub_10005D034(&qword_1006C1DC0);
  Published.projectedValue.getter();
  swift_endAccess();
  uint64_t v114 = &protocol conformance descriptor for Published<A>.Publisher;
  sub_1000450A0(&qword_1006C1DC8, &qword_1006C1DA8);
  id v24 = (void *)Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  id v133 = v24;
  sub_10005D034(&qword_1006C1DD0);
  uint64_t v108 = &protocol conformance descriptor for AnyPublisher<A, B>;
  sub_1000450A0(&qword_1006C1DD8, &qword_1006C1DD0);
  Publisher.map<A>(_:)();
  swift_release();
  id v107 = self;
  id v133 = [v107 mainRunLoop];
  uint64_t v105 = type metadata accessor for NSRunLoop.SchedulerOptions();
  uint64_t v25 = *(void *)(v105 - 8);
  uint64_t v129 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
  uint64_t v106 = v25 + 56;
  v129(v13, 1, 1, v105);
  uint64_t v128 = sub_100006060(0, (unint64_t *)&qword_1006C1DE0);
  sub_1000450A0(&qword_1006C1DE8, &qword_1006C1DB0);
  uint64_t v127 = sub_10053546C((unint64_t *)&qword_1006C1DF0, (unint64_t *)&qword_1006C1DE0);
  uint64_t v102 = v13;
  Publisher.receive<A>(on:options:)();
  sub_100003F10((uint64_t)v13, &qword_1006B5A10);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  swift_getKeyPath();
  id v26 = v121;
  id v133 = *(id *)&v121[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_continueButton];
  id v27 = v133;
  uint64_t v103 = &protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
  sub_1000450A0(&qword_1006C1DF8, &qword_1006C1DB8);
  id v28 = v27;
  uint64_t v29 = v116;
  Publisher<>.assign<A>(to:on:)();

  swift_release();
  (*(void (**)(char *, uint64_t))(v125 + 8))(v23, v29);
  uint64_t v101 = &v26[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_cancellables];
  swift_beginAccess();
  uint64_t v125 = sub_10005D034(&qword_1006C1E00);
  uint64_t v116 = sub_1000450A0(&qword_1006C1E08, &qword_1006C1E00);
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  uint64_t v115 = sub_10005D034(&qword_1006C1E10);
  id v30 = v118;
  Published.projectedValue.getter();
  swift_endAccess();
  uint64_t v114 = (void *)sub_1000450A0(&qword_1006C1E18, &qword_1006C1D80);
  uint64_t v113 = sub_10014A648;
  id v31 = v117;
  uint64_t v32 = v123;
  Publisher.map<A>(_:)();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v131 + 8);
  v131 += 8;
  int v112 = v33;
  v33(v30, v32);
  v78[1] = &protocol conformance descriptor for Publishers.Map<A, B>;
  uint64_t v111 = sub_1000450A0(&qword_1006C1E20, &qword_1006C1D88);
  uint64_t v34 = v122;
  id v35 = (void *)Publisher.eraseToAnyPublisher()();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v130 + 8);
  v130 += 8;
  uint64_t v110 = v36;
  v36(v31, v34);
  id v133 = v35;
  uint64_t v109 = sub_10005D034(&qword_1006C1E28);
  uint64_t v108 = (void *)sub_1000450A0(&qword_1006C1E30, &qword_1006C1E28);
  uint64_t v37 = v119;
  Publisher.map<A>(_:)();
  swift_release();
  id v38 = v107;
  id v133 = [v107 mainRunLoop];
  uint64_t v39 = (uint64_t)v102;
  uint64_t v40 = v105;
  v129(v102, 1, 1, v105);
  sub_1000450A0(&qword_1006C1E38, &qword_1006C1D90);
  uint64_t v41 = v80;
  uint64_t v42 = v120;
  Publisher.receive<A>(on:options:)();
  sub_100003F10(v39, &qword_1006B5A10);

  NSString v43 = *(void (**)(char *, uint64_t))(v124 + 8);
  v124 += 8;
  id v79 = v43;
  v43(v37, v42);
  swift_getKeyPath();
  id v133 = v28;
  sub_1000450A0(&qword_1006C1E40, (uint64_t *)&unk_1006C1D98);
  id v44 = v28;
  uint64_t v45 = v81;
  Publisher<>.assign<A>(to:on:)();

  swift_release();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v41, v45);
  swift_beginAccess();
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  uint64_t v46 = v118;
  Published.projectedValue.getter();
  swift_endAccess();
  id v47 = v117;
  uint64_t v48 = v123;
  Publisher.map<A>(_:)();
  v112(v46, v48);
  uint64_t v49 = v122;
  uint64_t v50 = (void *)Publisher.eraseToAnyPublisher()();
  v110(v47, v49);
  id v133 = v50;
  id v132 = [v38 mainRunLoop];
  uint64_t v51 = (uint64_t)v102;
  v129(v102, 1, 1, v40);
  id v52 = v83;
  Publisher.receive<A>(on:options:)();
  uint64_t v53 = v51;
  sub_100003F10(v51, &qword_1006B5A10);

  swift_release();
  sub_1000450A0(&qword_1006C1E48, &qword_1006C1D70);
  Swift::String_optional v54 = v84;
  uint64_t v55 = v85;
  Publisher.map<A>(_:)();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v52, v55);
  swift_getKeyPath();
  id v56 = v126;
  id v133 = v126;
  sub_1000450A0(&qword_1006C1E50, &qword_1006C1D78);
  id v57 = v56;
  uint64_t v58 = v87;
  Publisher<>.assign<A>(to:on:)();

  swift_release();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v54, v58);
  swift_beginAccess();
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  Published.projectedValue.getter();
  swift_endAccess();
  uint64_t v59 = v123;
  Publisher.map<A>(_:)();
  v112(v46, v59);
  uint64_t v60 = v122;
  uint64_t v61 = (void *)Publisher.eraseToAnyPublisher()();
  v110(v47, v60);
  id v133 = v61;
  uint64_t v62 = v119;
  Publisher.map<A>(_:)();
  swift_release();
  uint64_t v63 = v89;
  uint64_t v64 = v120;
  Publishers.Map.map<A>(_:)();
  v79(v62, v64);
  id v133 = [v107 mainRunLoop];
  v129((char *)v53, 1, 1, v105);
  sub_1000450A0(&qword_1006C1E58, &qword_1006C1D60);
  uint64_t v65 = v90;
  uint64_t v66 = v91;
  Publisher.receive<A>(on:options:)();
  sub_100003F10(v53, &qword_1006B5A10);

  (*(void (**)(char *, uint64_t))(v92 + 8))(v63, v66);
  uint64_t v67 = swift_allocObject();
  uint64_t v68 = v121;
  *(void *)(v67 + 16) = v121;
  sub_1000450A0(&qword_1006C1E60, &qword_1006C1D68);
  uint64_t v69 = v68;
  uint64_t v70 = v93;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v65, v70);
  swift_beginAccess();
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v71 = *(void **)&v69[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_tableView];
  swift_getKeyPath();
  uint64_t v72 = v95;
  _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1000450A0(&qword_1006C1E68, &qword_1006C1D50);
  uint64_t v73 = v96;
  uint64_t v74 = v97;
  Publisher.map<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v72, v74);
  swift_getKeyPath();
  id v133 = v71;
  sub_1000450A0(&qword_1006C1E70, &qword_1006C1D58);
  id v75 = v71;
  uint64_t v76 = v99;
  Publisher<>.assign<A>(to:on:)();

  swift_release();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v73, v76);
  swift_beginAccess();
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10052E908@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006B2B40);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4);
  *a2 = result != 1;
  return result;
}

void *sub_10052E978@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 0;
  return result;
}

void *sub_10052E98C@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result > 0;
  return result;
}

void sub_10052E9A0(char *a1@<X0>, Swift::String *a2@<X8>)
{
  char v23 = *a1;
  NSString v3 = String._bridgeToObjectiveC()();
  int v4 = MGGetBoolAnswer();

  uint64_t v5 = sub_10022F8F0(0xD000000000000022, (void *)0x80000001005A1E90);
  unint64_t v7 = v6;
  uint64_t v8 = self;
  id v9 = [v8 mainBundle];
  v24._uint64_t countAndFlagsBits = 0xD000000000000018;
  v24._object = (void *)0x800000010057EF80;
  v10._object = (void *)0x8000000100592210;
  v11.value._object = (void *)0x800000010057EF60;
  v10._uint64_t countAndFlagsBits = 0xD000000000000022;
  v11.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v12._uint64_t countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  Swift::String v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v24);

  if (!v4) {
    goto LABEL_8;
  }
  uint64_t v14 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v14 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v14)
  {
    uint64_t v15 = &off_100686000;
    if ((v23 & 1) == 0)
    {
      v21._uint64_t countAndFlagsBits = v5;
      v21._object = (void *)v7;
      String.append(_:)(v21);
      swift_bridgeObjectRelease();
      v22._uint64_t countAndFlagsBits = 2570;
      v22._object = (void *)0xE200000000000000;
      String.append(_:)(v22);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v15 = &off_100686000;
  }
  id v16 = [v8 v15[292]];
  v25._uint64_t countAndFlagsBits = 0xD000000000000018;
  v17._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v25._object = (void *)0x800000010057EF80;
  v17._object = (void *)0x80000001005921F0;
  v18.value._object = (void *)0x800000010057EF60;
  v18.value._uint64_t countAndFlagsBits = 0xD000000000000013;
  v19._uint64_t countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  Swift::String v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v25);

  *a2 = v20;
  a2[1] = v13;
}

uint64_t sub_10052EBC0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  unint64_t v6 = (uint64_t *)(*(void *)(a2 + OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_headerView)
                 + OBJC_IVAR____TtC6FindMy34FMAccessoryDiscoveryListHeaderView_configuration);
  uint64_t result = *v6;
  uint64_t v8 = v6[2];
  uint64_t v9 = v6[3];
  BOOL v10 = *v6 == v3 && v6[1] == v2;
  if (!v10 && (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) == 0)
    || (v8 == v5 ? (BOOL v11 = v9 == v4) : (BOOL v11 = 0),
        !v11 && (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) == 0)))
  {
    *unint64_t v6 = v3;
    v6[1] = v2;
    _OWORD v6[2] = v5;
    v6[3] = v4;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1002D3280();
    return sub_100524D14(0);
  }
  return result;
}

void sub_10052ECC8(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  double v3 = *(double *)(a1 + 8);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    id v6 = *(id *)(Strong + OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_tableView);

    [v6 bounds];
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    CGFloat v12 = v11;
    CGFloat v14 = v13;

    v16.origin.x = v8;
    v16.origin.y = v10;
    v16.size.width = v12;
    v16.size.double height = v14;
    double Height = CGRectGetHeight(v16);
  }
  else
  {
    double Height = 0.0;
  }
  *a2 = Height < v3;
}

uint64_t sub_10052EDB4()
{
  uint64_t v1 = type metadata accessor for FMIPAccessoryError();
  uint64_t v44 = *(void *)(v1 - 8);
  uint64_t v45 = (void (*)(char *, uint64_t, uint64_t))v1;
  __chkstk_darwin(v1);
  double v3 = (uint64_t *)((char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006AEE50);
  __chkstk_darwin(v4 - 8);
  id v38 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMIPUnknownItem();
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v40 = v6;
  uint64_t v7 = *(void *)(v39 + 64);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v36 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v37 = (char *)&v35 - v9;
  uint64_t v10 = sub_10005D034((uint64_t *)&unk_1006C1D38);
  __chkstk_darwin(v10 - 8);
  CGFloat v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v42 = *(void *)(v13 - 8);
  uint64_t v43 = v13;
  __chkstk_darwin(v13);
  uint64_t v41 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = v0;
  uint64_t v15 = type metadata accessor for FMIPUnknownAccessoryDiscoveryController();
  uint64_t v51 = v15;
  uint64_t v16 = sub_100535294(&qword_1006C1D48, (void (*)(uint64_t))&type metadata accessor for FMIPUnknownAccessoryDiscoveryController);
  uint64_t v52 = v16;
  uint64_t v53 = &off_100626268;
  Swift::String_optional v54 = &off_100628FC0;
  swift_getKeyPath();
  uint64_t v47 = v15;
  uint64_t v48 = v16;
  uint64_t v49 = &off_100626268;
  uint64_t v50 = &off_100628FC0;
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v17 = sub_10005D034((uint64_t *)&unk_1006B2B40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v12, 1, v17) == 1)
  {
    Swift::String_optional v18 = (uint64_t *)&unk_1006C1D38;
LABEL_5:
    sub_100003F10((uint64_t)v12, v18);
    goto LABEL_6;
  }
  uint64_t v19 = sub_10005D034((uint64_t *)&unk_1006BB350);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v12, 1, v19) == 1)
  {
    Swift::String_optional v18 = (uint64_t *)&unk_1006B2B40;
    goto LABEL_5;
  }
  Swift::String v24 = v41;
  uint64_t v23 = v42;
  uint64_t v25 = v43;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v41, v12, v43);
  uint64_t v26 = (uint64_t)v38;
  dispatch thunk of FMIPUnknownAccessoryDiscoveryController.accessory(with:)();
  uint64_t v28 = v39;
  uint64_t v27 = v40;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v26, 1, v40) != 1)
  {
    uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 32);
    uint64_t v29 = v26;
    id v30 = v37;
    v45(v37, v29, v27);
    uint64_t v31 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v32 = v36;
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v36, v30, v27);
    unint64_t v33 = (*(unsigned __int8 *)(v28 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v31;
    v45((char *)(v34 + v33), (uint64_t)v32, v27);
    swift_retain();
    dispatch thunk of FMIPUnknownAccessoryDiscoveryController.stopDiscovery(completion:)();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
    return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v41, v43);
  }
  (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v25);
  sub_100003F10(v26, (uint64_t *)&unk_1006AEE50);
LABEL_6:
  *double v3 = 0;
  uint64_t v21 = v44;
  Swift::String v20 = v45;
  (*(void (**)(void *, void, void))(v44 + 104))(v3, enum case for FMIPAccessoryError.unknown(_:), v45);
  sub_10052FB2C((uint64_t)v3);
  return (*(uint64_t (**)(void *, void (*)(char *, uint64_t, uint64_t)))(v21 + 8))(v3, v20);
}

void sub_10052F42C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a3;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMIPUnknownItem();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = sub_10005D034((uint64_t *)&unk_1006B2548);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v17 = (void *)Strong;
    sub_100006AB0(a1, (uint64_t)v15, (uint64_t *)&unk_1006B2548);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_100003F10((uint64_t)v15, (uint64_t *)&unk_1006B2548);
      os_log_type_t v18 = static os_log_type_t.default.getter();
      sub_100534C94(v18);
    }
    else
    {
      sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
      uint64_t v26 = static OS_dispatch_queue.main.getter();
      uint64_t v19 = swift_allocObject();
      swift_unknownObjectWeakInit();
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v27, v10);
      unint64_t v20 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v19;
      (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v21 + v20, (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
      aBlock[4] = sub_100535408;
      aBlock[5] = v21;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10003C410;
      aBlock[3] = &unk_1006441A0;
      Swift::String v22 = _Block_copy(aBlock);
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_100535294((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10005D034((uint64_t *)&unk_1006AE4B0);
      sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
      uint64_t v23 = v31;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      Swift::String v24 = (void *)v26;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v22);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v23);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
    }
  }
}

void sub_10052F8B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for FMIPUnknownItem();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (char *)Strong;
    uint64_t v9 = *(void *)(Strong + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
    uint64_t v10 = self;
    swift_retain();
    id v11 = [v10 mainBundle];
    v21._uint64_t countAndFlagsBits = 0xD000000000000018;
    v12._uint64_t countAndFlagsBits = 0xD000000000000022;
    v21._object = (void *)0x800000010057EF80;
    v12._object = (void *)0x8000000100594D10;
    v13.value._object = (void *)0x800000010057EF60;
    v13.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v14._uint64_t countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    Swift::String v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v21);

    uint64_t v16 = *(void *)&v8[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_discoveryController];
    objc_allocWithZone((Class)type metadata accessor for FMUTAccessoryInformationViewController());
    swift_retain();
    id v17 = sub_100186E78(v9, (uint64_t)v6, v15._countAndFlagsBits, (uint64_t)v15._object, 0, 1, v16);
    swift_release();
    swift_release();
    id v18 = [v8 navigationController];
    if (v18)
    {
      uint64_t v19 = v18;
      [v18 pushViewController:v17 animated:1];
    }
  }
}

uint64_t sub_10052FB04(uint64_t a1)
{
  return sub_10052FB54(a1, (uint64_t)&unk_100644110, (uint64_t)sub_1005352F4, (uint64_t)&unk_100644128);
}

uint64_t sub_10052FB2C(uint64_t a1)
{
  return sub_10052FB54(a1, (uint64_t)&unk_1006440C0, (uint64_t)sub_10053528C, (uint64_t)&unk_1006440D8);
}

uint64_t sub_10052FB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  v20[1] = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v26 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v24 = *(void *)(v8 - 8);
  uint64_t v25 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FMIPAccessoryError();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v21 = static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v14;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v16 + v15, (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  aBlock[4] = v22;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  aBlock[3] = v23;
  id v17 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100535294((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  id v18 = (void *)v21;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v10, v25);
}

void sub_10052FF0C(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    sub_10052FF7C(a2, a3 & 1);
  }
}

void sub_10052FF7C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (void *)((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  *uint64_t v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  char v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    FMIPAccessoryError.localizedAlertTitle.getter();
    FMIPAccessoryError.localizedDescription.getter();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v12 = [self alertControllerWithTitle:v10 message:v11 preferredStyle:1];

    id v13 = [self mainBundle];
    v23._uint64_t countAndFlagsBits = 0xD000000000000018;
    v14._uint64_t countAndFlagsBits = 0xD000000000000021;
    v23._object = (void *)0x800000010057EF80;
    v14._object = (void *)0x80000001005A1E10;
    v15.value._object = (void *)0x800000010057EF60;
    v15.value._uint64_t countAndFlagsBits = 0xD000000000000013;
    v16._uint64_t countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v23);

    uint64_t v17 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v18 = swift_allocObject();
    *(unsigned char *)(v18 + 16) = a2 & 1;
    *(void *)(v18 + 24) = v17;
    swift_retain();
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_100535268;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10000841C;
    aBlock[3] = &unk_100644088;
    uint64_t v20 = _Block_copy(aBlock);
    swift_release();
    id v21 = [self actionWithTitle:v19 style:0 handler:v20];
    _Block_release(v20);
    swift_release();

    [v12 addAction:v21];
    [v3 presentViewController:v12 animated:1 completion:0];
  }
  else
  {
    __break(1u);
  }
}

void sub_100530318(uint64_t a1, char a2)
{
  if (a2)
  {
    swift_beginAccess();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v3 = Strong;
      id v4 = [Strong navigationController];

      if (v4)
      {
        id v5 = [v4 popViewControllerAnimated:1];
      }
    }
  }
}

uint64_t sub_1005303B4()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_scrollHandler);

  return sub_100036B90(v1);
}

id sub_100530458()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFindUnknownItemViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for FMFindUnknownItemViewController()
{
  return self;
}

uint64_t sub_100530560(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(*v2 + OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_scrollHandler);
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
  v3[1] = a2;
  return sub_100036B90(v4);
}

uint64_t sub_100530630@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006B2B40);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10005D034(&qword_1006AF770);
  __chkstk_darwin(v7 - 8);
  char v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10005D034((uint64_t *)&unk_1006BB350);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
  dispatch thunk of UITableViewDiffableDataSource.indexPath(for:)();
  sub_100003F10((uint64_t)v6, (uint64_t *)&unk_1006B2B40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_100003F10((uint64_t)v9, &qword_1006AF770);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    char v15 = static IndexPath.== infix(_:_:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if ((v15 & 1) == 0)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a2, a1, v10);
      uint64_t v16 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, v16, 1, v10);
    }
  }
  uint64_t v16 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, v16, 1, v10);
}

uint64_t sub_100530B74()
{
  return sub_100149B70();
}

uint64_t sub_100530B98(uint64_t a1)
{
  return sub_10014BA74(a1);
}

uint64_t sub_100530BBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100149C68();
  *a1 = result;
  return result;
}

uint64_t sub_100530BE8()
{
  return sub_100149D58();
}

Swift::Int sub_100530C14(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1002688AC(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_100530CBC(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_100530CBC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void **)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v136 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v151 = (char *)&v131 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  Swift::Int v146 = (char *)&v131 - v11;
  __chkstk_darwin(v10);
  id v147 = (char *)&v131 - v12;
  Swift::Int v13 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v13);
  if (result >= v13)
  {
    if (v13 < 0) {
      goto LABEL_140;
    }
    if (v13) {
      return sub_10053187C(0, v13, 1, a1);
    }
    return result;
  }
  if (v13 >= 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 + 1;
  }
  if (v13 < -1) {
    goto LABEL_148;
  }
  uint64_t v149 = v4;
  uint64_t v150 = a1;
  Swift::Int v133 = result;
  if (v13 < 2)
  {
    NSString v19 = (char *)_swiftEmptyArrayStorage;
    unint64_t v138 = (unint64_t)_swiftEmptyArrayStorage
         + ((*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80));
    id v132 = _swiftEmptyArrayStorage;
    if (v13 != 1)
    {
      unint64_t v21 = _swiftEmptyArrayStorage[2];
LABEL_106:
      if (v21 >= 2)
      {
        uint64_t v125 = *v150;
        do
        {
          unint64_t v126 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_135;
          }
          if (!v125) {
            goto LABEL_147;
          }
          uint64_t v127 = *(void *)&v19[16 * v126 + 32];
          uint64_t v128 = *(void *)&v19[16 * v21 + 24];
          sub_100531B9C(v125 + v5[9] * v127, v125 + v5[9] * *(void *)&v19[16 * v21 + 16], v125 + v5[9] * v128, v138);
          if (v2) {
            break;
          }
          if (v128 < v127) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            NSString v19 = sub_1002687F8((uint64_t)v19);
          }
          if (v126 >= *((void *)v19 + 2)) {
            goto LABEL_137;
          }
          uint64_t v129 = &v19[16 * v126 + 32];
          *(void *)uint64_t v129 = v127;
          *((void *)v129 + 1) = v128;
          unint64_t v130 = *((void *)v19 + 2);
          if (v21 > v130) {
            goto LABEL_138;
          }
          memmove(&v19[16 * v21 + 16], &v19[16 * v21 + 32], 16 * (v130 - v21));
          *((void *)v19 + 2) = v130 - 1;
          unint64_t v21 = v130 - 1;
        }
        while (v130 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      v132[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v16 = v15 >> 1;
    uint64_t v17 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v17 + 16) = v16;
    unint64_t v18 = (*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80);
    id v132 = (void *)v17;
    unint64_t v138 = v17 + v18;
  }
  Swift::Int v20 = 0;
  uint64_t v144 = (void (**)(char *, uint64_t))(v5 + 1);
  uint64_t v145 = v5 + 2;
  int v154 = (void (**)(char *, uint64_t, uint64_t))(v5 + 4);
  NSString v19 = (char *)_swiftEmptyArrayStorage;
  uint64_t v139 = v5;
  while (1)
  {
    Swift::Int v22 = v20;
    Swift::Int v23 = v20 + 1;
    Swift::Int v137 = v20;
    if (v20 + 1 >= v13) {
      goto LABEL_37;
    }
    uint64_t v24 = v149;
    uint64_t v25 = *v150;
    uint64_t v141 = v25;
    Swift::Int v142 = v20 + 1;
    Swift::Int v153 = v139[9];
    Swift::Int v26 = v153;
    uint64_t v27 = (void (*)(char *, uint64_t, uint64_t))v139[2];
    v27(v147, v25 + v153 * v23, v149);
    uint64_t v28 = v25 + v26 * v22;
    uint64_t v29 = v146;
    v27(v146, v28, v24);
    uint64_t v30 = sub_100535294(&qword_1006C0B08, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v31 = v147;
    Swift::Int v148 = v30;
    LODWORD(v152) = dispatch thunk of static Comparable.< infix(_:_:)();
    Swift::Int v32 = v13;
    unint64_t v33 = (void (*)(char *, uint64_t))v139[1];
    uint64_t v34 = v29;
    Swift::Int v22 = v137;
    v33(v34, v24);
    v33(v31, v24);
    Swift::Int v35 = v153;
    Swift::Int v23 = v22 + 2;
    Swift::Int v143 = v32;
    if (v22 + 2 >= v32)
    {
      Swift::Int v13 = v143;
      if ((v152 & 1) == 0) {
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t v134 = v19;
      uint64_t v131 = v2;
      v142 *= v153;
      uint64_t v36 = v141;
      Swift::Int v37 = v153 * v23;
      while (1)
      {
        Swift::Int v38 = v23;
        uint64_t v39 = v147;
        uint64_t v40 = v149;
        v27(v147, v36 + v37, v149);
        uint64_t v41 = v146;
        v27(v146, v36 + v142, v40);
        int v42 = dispatch thunk of static Comparable.< infix(_:_:)();
        v33(v41, v40);
        v33(v39, v40);
        if ((v152 ^ v42)) {
          break;
        }
        Swift::Int v23 = v38 + 1;
        Swift::Int v35 = v153;
        v36 += v153;
        if (v143 == v38 + 1)
        {
          Swift::Int v13 = v143;
          Swift::Int v23 = v143;
          uint64_t v2 = v131;
          NSString v19 = v134;
          Swift::Int v22 = v137;
          if (v152) {
            goto LABEL_25;
          }
          goto LABEL_37;
        }
      }
      uint64_t v2 = v131;
      NSString v19 = v134;
      Swift::Int v23 = v38;
      Swift::Int v22 = v137;
      Swift::Int v13 = v143;
      Swift::Int v35 = v153;
      if ((v152 & 1) == 0) {
        goto LABEL_37;
      }
    }
LABEL_25:
    if (v23 < v22) {
      goto LABEL_141;
    }
    if (v22 >= v23)
    {
LABEL_37:
      uint64_t v47 = v150;
      goto LABEL_38;
    }
    uint64_t v134 = v19;
    uint64_t v43 = 0;
    uint64_t v44 = v35 * (v23 - 1);
    Swift::Int v45 = v23 * v35;
    uint64_t v46 = v22 * v35;
    uint64_t v47 = v150;
    Swift::Int v148 = v23;
    do
    {
      if (v22 != v23 + v43 - 1)
      {
        uint64_t v49 = v141;
        if (!v141) {
          goto LABEL_146;
        }
        uint64_t v50 = v2;
        unint64_t v51 = v141 + v46;
        uint64_t v52 = (char *)(v141 + v44);
        uint64_t v152 = *v154;
        v152(v136, v141 + v46, v149);
        if (v46 < v44 || v51 >= v49 + v45)
        {
          uint64_t v48 = v149;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v48 = v149;
          if (v46 != v44) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v152(v52, (uint64_t)v136, v48);
        uint64_t v2 = v50;
        uint64_t v47 = v150;
        Swift::Int v23 = v148;
        Swift::Int v35 = v153;
      }
      ++v22;
      --v43;
      v44 -= v35;
      v45 -= v35;
      v46 += v35;
    }
    while (v22 < v23 + v43);
    NSString v19 = v134;
    Swift::Int v22 = v137;
    Swift::Int v13 = v143;
LABEL_38:
    uint64_t v53 = v149;
    if (v23 >= v13) {
      goto LABEL_57;
    }
    if (__OFSUB__(v23, v22)) {
      goto LABEL_139;
    }
    if (v23 - v22 >= v133) {
      goto LABEL_57;
    }
    if (__OFADD__(v22, v133)) {
      goto LABEL_142;
    }
    Swift::Int v54 = v22 + v133 >= v13 ? v13 : v22 + v133;
    if (v54 < v22) {
      break;
    }
    if (v23 != v54)
    {
      uint64_t v134 = v19;
      uint64_t v131 = v2;
      uint64_t v55 = v139[9];
      long long v140 = (void (*)(char *, uint64_t, uint64_t))v139[2];
      uint64_t v141 = v55;
      uint64_t v56 = v55 * (v23 - 1);
      Swift::Int v57 = v23 * v55;
      Swift::Int v135 = v54;
      do
      {
        uint64_t v59 = 0;
        Swift::Int v148 = v23;
        Swift::Int v142 = v57;
        Swift::Int v143 = v56;
        while (1)
        {
          uint64_t v60 = *v47;
          uint64_t v152 = (void (*)(char *, uint64_t, uint64_t))(v57 + v59);
          Swift::Int v153 = v22;
          Swift::Int v61 = v57 + v59 + v60;
          uint64_t v62 = v147;
          uint64_t v63 = v47;
          uint64_t v64 = v140;
          v140(v147, v61, v53);
          uint64_t v65 = v56 + v59 + v60;
          uint64_t v66 = v146;
          v64(v146, v65, v53);
          sub_100535294(&qword_1006C0B08, (void (*)(uint64_t))&type metadata accessor for UUID);
          LOBYTE(v60) = dispatch thunk of static Comparable.< infix(_:_:)();
          uint64_t v67 = *v144;
          (*v144)(v66, v53);
          v67(v62, v53);
          if ((v60 & 1) == 0) {
            break;
          }
          uint64_t v68 = *v63;
          if (!*v63) {
            goto LABEL_144;
          }
          Swift::Int v57 = v142;
          uint64_t v56 = v143;
          uint64_t v69 = (char *)(v68 + v143 + v59);
          uint64_t v70 = *v154;
          uint64_t v71 = v149;
          (*v154)(v151, v68 + v142 + v59, v149);
          uint64_t v53 = v71;
          swift_arrayInitWithTakeFrontToBack();
          v70(v69, (uint64_t)v151, v71);
          v59 -= v141;
          Swift::Int v22 = v153 + 1;
          Swift::Int v58 = v148;
          uint64_t v47 = v150;
          if (v148 == v153 + 1) {
            goto LABEL_49;
          }
        }
        Swift::Int v58 = v148;
        uint64_t v53 = v149;
        uint64_t v47 = v63;
        Swift::Int v57 = v142;
        uint64_t v56 = v143;
LABEL_49:
        Swift::Int v23 = v58 + 1;
        v56 += v141;
        v57 += v141;
        Swift::Int v22 = v137;
      }
      while (v23 != v135);
      Swift::Int v23 = v135;
      uint64_t v2 = v131;
      NSString v19 = v134;
    }
LABEL_57:
    if (v23 < v22) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v148 = v23;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      NSString v19 = sub_100268068(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v74 = *((void *)v19 + 2);
    unint64_t v73 = *((void *)v19 + 3);
    unint64_t v21 = v74 + 1;
    if (v74 >= v73 >> 1) {
      NSString v19 = sub_100268068((char *)(v73 > 1), v74 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v21;
    id v75 = v19 + 32;
    uint64_t v76 = &v19[16 * v74 + 32];
    Swift::Int v77 = v148;
    *(void *)uint64_t v76 = v22;
    *((void *)v76 + 1) = v77;
    if (v74)
    {
      while (1)
      {
        unint64_t v78 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v83 = &v75[16 * v21];
          uint64_t v84 = *((void *)v83 - 8);
          uint64_t v85 = *((void *)v83 - 7);
          BOOL v89 = __OFSUB__(v85, v84);
          uint64_t v86 = v85 - v84;
          if (v89) {
            goto LABEL_123;
          }
          uint64_t v88 = *((void *)v83 - 6);
          uint64_t v87 = *((void *)v83 - 5);
          BOOL v89 = __OFSUB__(v87, v88);
          uint64_t v81 = v87 - v88;
          char v82 = v89;
          if (v89) {
            goto LABEL_124;
          }
          unint64_t v90 = v21 - 2;
          uint64_t v91 = &v75[16 * v21 - 32];
          uint64_t v93 = *(void *)v91;
          uint64_t v92 = *((void *)v91 + 1);
          BOOL v89 = __OFSUB__(v92, v93);
          uint64_t v94 = v92 - v93;
          if (v89) {
            goto LABEL_126;
          }
          BOOL v89 = __OFADD__(v81, v94);
          uint64_t v95 = v81 + v94;
          if (v89) {
            goto LABEL_129;
          }
          if (v95 >= v86)
          {
            uint64_t v113 = &v75[16 * v78];
            uint64_t v115 = *(void *)v113;
            uint64_t v114 = *((void *)v113 + 1);
            BOOL v89 = __OFSUB__(v114, v115);
            uint64_t v116 = v114 - v115;
            if (v89) {
              goto LABEL_133;
            }
            BOOL v106 = v81 < v116;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v107 = *((void *)v19 + 4);
            uint64_t v108 = *((void *)v19 + 5);
            BOOL v89 = __OFSUB__(v108, v107);
            uint64_t v100 = v108 - v107;
            char v101 = v89;
            goto LABEL_88;
          }
          uint64_t v80 = *((void *)v19 + 4);
          uint64_t v79 = *((void *)v19 + 5);
          BOOL v89 = __OFSUB__(v79, v80);
          uint64_t v81 = v79 - v80;
          char v82 = v89;
        }
        if (v82) {
          goto LABEL_125;
        }
        unint64_t v90 = v21 - 2;
        uint64_t v96 = &v75[16 * v21 - 32];
        uint64_t v98 = *(void *)v96;
        uint64_t v97 = *((void *)v96 + 1);
        BOOL v99 = __OFSUB__(v97, v98);
        uint64_t v100 = v97 - v98;
        char v101 = v99;
        if (v99) {
          goto LABEL_128;
        }
        uint64_t v102 = &v75[16 * v78];
        uint64_t v104 = *(void *)v102;
        uint64_t v103 = *((void *)v102 + 1);
        BOOL v89 = __OFSUB__(v103, v104);
        uint64_t v105 = v103 - v104;
        if (v89) {
          goto LABEL_131;
        }
        if (__OFADD__(v100, v105)) {
          goto LABEL_132;
        }
        if (v100 + v105 >= v81)
        {
          BOOL v106 = v81 < v105;
LABEL_94:
          if (v106) {
            unint64_t v78 = v90;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v101) {
          goto LABEL_127;
        }
        uint64_t v109 = &v75[16 * v78];
        uint64_t v111 = *(void *)v109;
        uint64_t v110 = *((void *)v109 + 1);
        BOOL v89 = __OFSUB__(v110, v111);
        uint64_t v112 = v110 - v111;
        if (v89) {
          goto LABEL_130;
        }
        if (v112 < v100) {
          goto LABEL_14;
        }
LABEL_96:
        unint64_t v117 = v78 - 1;
        if (v78 - 1 >= v21)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!*v150) {
          goto LABEL_145;
        }
        uint64_t v118 = v19;
        uint64_t v119 = &v75[16 * v117];
        uint64_t v120 = *(void *)v119;
        uint64_t v121 = &v75[16 * v78];
        uint64_t v122 = *((void *)v121 + 1);
        sub_100531B9C(*v150 + v139[9] * *(void *)v119, *v150 + v139[9] * *(void *)v121, *v150 + v139[9] * v122, v138);
        if (v2) {
          goto LABEL_117;
        }
        if (v122 < v120) {
          goto LABEL_120;
        }
        if (v78 > *((void *)v118 + 2)) {
          goto LABEL_121;
        }
        uint64_t v123 = v118;
        *(void *)uint64_t v119 = v120;
        *(void *)&v75[16 * v117 + 8] = v122;
        unint64_t v124 = *((void *)v118 + 2);
        if (v78 >= v124) {
          goto LABEL_122;
        }
        NSString v19 = v123;
        unint64_t v21 = v124 - 1;
        memmove(&v75[16 * v78], v121 + 16, 16 * (v124 - 1 - v78));
        *((void *)v19 + 2) = v124 - 1;
        if (v124 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_14:
    Swift::Int v13 = v150[1];
    Swift::Int v20 = v148;
    uint64_t v5 = v139;
    if (v148 >= v13) {
      goto LABEL_106;
    }
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10053187C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = a1;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v41 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  Swift::Int v37 = (char *)&v29 - v11;
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v36 = (char *)&v29 - v14;
  uint64_t v39 = a3;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v15 = v13 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    Swift::Int v32 = (uint64_t (**)(char *, uint64_t))(v15 - 8);
    unint64_t v33 = v16;
    uint64_t v34 = a4;
    uint64_t v35 = v15;
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v44 = v17 * (v39 - 1);
    uint64_t v38 = v17;
    uint64_t v43 = v17 * v39;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v42 = v31;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v43 + v18 + *a4;
      unint64_t v21 = v36;
      Swift::Int v22 = v33;
      v33(v36, v20, v7);
      Swift::Int v23 = v37;
      v22(v37, v44 + v18 + v19, v7);
      sub_100535294(&qword_1006C0B08, (void (*)(uint64_t))&type metadata accessor for UUID);
      LOBYTE(v22) = dispatch thunk of static Comparable.< infix(_:_:)();
      uint64_t v24 = *v32;
      (*v32)(v23, v7);
      uint64_t v25 = v21;
      a4 = v34;
      uint64_t result = v24(v25, v7);
      if ((v22 & 1) == 0)
      {
LABEL_4:
        v44 += v38;
        v43 += v38;
        if (++v39 == v30) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v26 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v27 = v26 + v44 + v18;
      uint64_t v28 = *v40;
      (*v40)(v41, v26 + v43 + v18, v7);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v27, v41, v7);
      v18 -= v38;
      if (v39 == ++v42) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100531B9C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v56 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v55 = (char *)v49 - v12;
  uint64_t v57 = *(void *)(v13 + 72);
  if (!v57)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v57 == -1) {
    goto LABEL_68;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v57 == -1) {
    goto LABEL_69;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v57;
  unint64_t v60 = a1;
  unint64_t v59 = a4;
  uint64_t v16 = v14 / v57;
  if (v15 >= v14 / v57)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v57;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
        uint64_t v19 = v9;
      }
      else
      {
        uint64_t v19 = v9;
        if (a4 != a2) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v34 = a4 + v18;
      unint64_t v58 = a4 + v18;
      unint64_t v60 = a2;
      unint64_t v52 = a1;
      if (v18 >= 1 && a1 < a2)
      {
        unint64_t v36 = -v57;
        uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
        uint64_t v37 = v19 + 16;
        v49[1] = v37 - 8;
        uint64_t v50 = v38;
        unint64_t v53 = -v57;
        uint64_t v54 = v37;
        unint64_t v51 = a4;
        uint64_t v39 = v55;
        uint64_t v40 = (void (**)(char *, uint64_t))(v37 - 8);
        do
        {
          uint64_t v57 = a3 + v36;
          uint64_t v41 = v50;
          v50(v39, v34 + v36, v8);
          unint64_t v42 = a2 + v36;
          unint64_t v43 = a3;
          uint64_t v44 = v56;
          v41(v56, v42, v8);
          sub_100535294(&qword_1006C0B08, (void (*)(uint64_t))&type metadata accessor for UUID);
          LOBYTE(v41) = dispatch thunk of static Comparable.< infix(_:_:)();
          Swift::Int v45 = *v40;
          (*v40)(v44, v8);
          v45(v39, v8);
          if (v41)
          {
            a3 = v57;
            if (v43 < a2 || v57 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v46 = v51;
            }
            else
            {
              unint64_t v46 = v51;
              if (v43 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            unint64_t v36 = v53;
            v60 += v53;
          }
          else
          {
            a3 = v57;
            unint64_t v47 = v58;
            v58 += v53;
            if (v43 < v47 || v57 >= v47)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v42 = a2;
              unint64_t v36 = v53;
              unint64_t v46 = v51;
            }
            else
            {
              unint64_t v46 = v51;
              if (v43 != v47) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v42 = a2;
              unint64_t v36 = v53;
            }
          }
          unint64_t v34 = v58;
          if (v58 <= v46) {
            break;
          }
          a2 = v42;
        }
        while (v42 > v52);
      }
      goto LABEL_66;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v57;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v53 = a4 + v17;
    unint64_t v58 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      unint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      uint64_t v54 = v9 + 16;
      Swift::Int v22 = (void (**)(char *, uint64_t))(v9 + 8);
      do
      {
        unint64_t v23 = a3;
        uint64_t v24 = v55;
        v21(v55, a2, v8);
        unint64_t v25 = a4;
        uint64_t v26 = v56;
        v21(v56, v25, v8);
        sub_100535294(&qword_1006C0B08, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v27 = dispatch thunk of static Comparable.< infix(_:_:)();
        uint64_t v28 = *v22;
        (*v22)(v26, v8);
        v28(v24, v8);
        unint64_t v29 = v60;
        if (v27)
        {
          unint64_t v30 = a2 + v57;
          if (v60 < a2 || v60 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v60 == a2) {
              unint64_t v29 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v32 = v59 + v57;
          if (v60 < v59 || v60 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v60 != v59) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v59 = v32;
          unint64_t v30 = a2;
        }
        unint64_t v60 = v29 + v57;
        a4 = v59;
        if (v59 >= v53) {
          break;
        }
        a2 = v30;
      }
      while (v30 < a3);
    }
LABEL_66:
    sub_100268420(&v60, &v59, (uint64_t *)&v58);
    return 1;
  }
LABEL_70:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005321D0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v85 = a3;
  unsigned int v84 = a2;
  uint64_t v83 = a1;
  uint64_t v72 = sub_10005D034(&qword_1006B5208);
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v70 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10005D034(&qword_1006B3700);
  __chkstk_darwin(v4 - 8);
  uint64_t v69 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v67 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v75 = (char *)&v66 - v10;
  uint64_t v78 = type metadata accessor for FMIPUnknownItem();
  uint64_t v74 = *(void *)(v78 - 8);
  uint64_t v11 = __chkstk_darwin(v78);
  unint64_t v73 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v76 = (char *)&v66 - v13;
  uint64_t v82 = type metadata accessor for FMIPDevice();
  uint64_t v80 = *(void *)(v82 - 8);
  uint64_t v14 = *(void *)(v80 + 64);
  uint64_t v15 = __chkstk_darwin(v82);
  Swift::Int v77 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v79 = (char *)&v66 - v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v66 - v18;
  uint64_t v81 = type metadata accessor for FMIPProductType();
  uint64_t v20 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  Swift::Int v22 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for FMIPItem();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  char v27 = (char *)&v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  unint64_t v29 = (char *)&v66 - v28;
  uint64_t v91 = v6;
  uint64_t v92 = &off_100628FC8;
  unint64_t v30 = sub_100042804(v90);
  uint64_t v68 = v7;
  uint64_t v31 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v32 = v83;
  uint64_t v83 = v6;
  v31(v30, v32, v6);
  sub_10005FAA4((uint64_t)v90, (uint64_t)v89);
  sub_10005D034(&qword_1006C1EC8);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v27, v29, v23);
    FMIPItem.productType.getter();
    uint64_t v33 = sub_1001AB070((uint64_t)v22, v84);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v81);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
  }
  else
  {
    uint64_t v34 = v82;
    if (swift_dynamicCast())
    {
      unint64_t v36 = v79;
      uint64_t v35 = v80;
      uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
      v37(v79, v19, v34);
      uint64_t v38 = swift_allocObject();
      swift_weakInit();
      uint64_t v39 = v77;
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v77, v36, v34);
      unint64_t v40 = (*(unsigned __int8 *)(v35 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = v38;
      v37((char *)(v41 + v40), v39, v34);
      *(unsigned char *)(v41 + v40 + v14) = v84;
      sub_10005D034((uint64_t *)&unk_1006B31B0);
      swift_allocObject();
      uint64_t v87 = Future.init(_:)();
      sub_1000450A0(&qword_1006C1EE0, (uint64_t *)&unk_1006B31B0);
      uint64_t v33 = Publisher.eraseToAnyPublisher()();
      swift_release();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v34);
    }
    else
    {
      unint64_t v42 = v76;
      uint64_t v43 = v78;
      if (swift_dynamicCast())
      {
        uint64_t v44 = v74;
        uint64_t v45 = (uint64_t)v73;
        (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v73, v42, v43);
        uint64_t v33 = sub_1001AB4F8(v45, v84);
        (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v45, v43);
      }
      else
      {
        unint64_t v46 = v75;
        uint64_t v47 = v83;
        int v48 = swift_dynamicCast();
        uint64_t v49 = v84;
        if (v48)
        {
          uint64_t v50 = v68;
          unint64_t v51 = v67;
          (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v67, v46, v47);
          uint64_t v52 = (uint64_t)v69;
          FMIPDiscoveredAccessory.productInformation.getter();
          uint64_t v33 = sub_1001AC2B4(v52, v49);
          sub_100003F10(v52, &qword_1006B3700);
          (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v47);
        }
        else
        {
          uint64_t v87 = 0;
          unint64_t v88 = 0xE000000000000000;
          _StringGuts.grow(_:)(50);
          v53._object = (void *)0x80000001005A1F70;
          v53._uint64_t countAndFlagsBits = 0xD000000000000030;
          String.append(_:)(v53);
          sub_10002CEB8(v90, v91);
          swift_getDynamicType();
          v54._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
          String.append(_:)(v54);
          swift_bridgeObjectRelease();
          v55._uint64_t countAndFlagsBits = 0;
          v55._object = (void *)0xE000000000000000;
          String.append(_:)(v55);
          uint64_t v57 = v87;
          unint64_t v56 = v88;
          if (qword_1006AE190 != -1) {
            swift_once();
          }
          uint64_t v58 = type metadata accessor for Logger();
          sub_1000606BC(v58, (uint64_t)qword_1006D1E98);
          os_log_type_t v59 = static os_log_type_t.error.getter();
          swift_bridgeObjectRetain_n();
          unint64_t v60 = Logger.logObject.getter();
          os_log_type_t v61 = v59;
          if (os_log_type_enabled(v60, v59))
          {
            uint64_t v62 = (uint8_t *)swift_slowAlloc();
            uint64_t v87 = swift_slowAlloc();
            *(_DWORD *)uint64_t v62 = 136315138;
            swift_bridgeObjectRetain();
            uint64_t v86 = sub_1000606F4(v57, v56, &v87);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v60, v61, "%s", v62, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
            swift_bridgeObjectRelease();
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          sub_100006060(0, (unint64_t *)&qword_1006BA4D0);
          sub_1001BF4E4();
          uint64_t v63 = v70;
          Fail.init(error:)();
          sub_1000450A0((unint64_t *)&unk_1006C1ED0, &qword_1006B5208);
          uint64_t v64 = v72;
          uint64_t v33 = Publisher.eraseToAnyPublisher()();
          (*(void (**)(char *, uint64_t))(v71 + 8))(v63, v64);
        }
      }
    }
  }
  sub_10002CEFC((uint64_t)v89);
  sub_10002CEFC((uint64_t)v90);
  return v33;
}

uint64_t sub_100532C68(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v82 = a3;
  unsigned int v81 = a2;
  uint64_t v80 = a1;
  uint64_t v69 = sub_10005D034(&qword_1006B5208);
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v67 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10005D034(&qword_1006B3700);
  __chkstk_darwin(v4 - 8);
  uint64_t v66 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v65 = *(void *)(v73 - 8);
  uint64_t v6 = __chkstk_darwin(v73);
  uint64_t v64 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v72 = (char *)&v63 - v8;
  uint64_t v9 = type metadata accessor for FMIPUnknownItem();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v70 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v74 = (char *)&v63 - v13;
  uint64_t v79 = type metadata accessor for FMIPDevice();
  uint64_t v77 = *(void *)(v79 - 8);
  uint64_t v14 = *(void *)(v77 + 64);
  uint64_t v15 = __chkstk_darwin(v79);
  id v75 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v76 = (char *)&v63 - v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v63 - v18;
  uint64_t v78 = type metadata accessor for FMIPProductType();
  uint64_t v20 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  Swift::Int v22 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for FMIPItem();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  char v27 = (char *)&v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  unint64_t v29 = (char *)&v63 - v28;
  uint64_t v88 = v9;
  BOOL v89 = &off_100628FC0;
  unint64_t v30 = sub_100042804(v87);
  uint64_t v71 = v10;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 16))(v30, v80, v9);
  sub_10005FAA4((uint64_t)v87, (uint64_t)v86);
  sub_10005D034(&qword_1006C1EC8);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v27, v29, v23);
    FMIPItem.productType.getter();
    uint64_t v31 = sub_1001AB070((uint64_t)v22, v81);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v78);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
  }
  else
  {
    uint64_t v32 = v79;
    if (swift_dynamicCast())
    {
      uint64_t v34 = v76;
      uint64_t v33 = v77;
      uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v77 + 32);
      v35(v76, v19, v32);
      uint64_t v36 = swift_allocObject();
      swift_weakInit();
      uint64_t v37 = v75;
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v75, v34, v32);
      unint64_t v38 = (*(unsigned __int8 *)(v33 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = v36;
      v35((char *)(v39 + v38), v37, v32);
      *(unsigned char *)(v39 + v38 + v14) = v81;
      sub_10005D034((uint64_t *)&unk_1006B31B0);
      swift_allocObject();
      uint64_t v84 = Future.init(_:)();
      sub_1000450A0(&qword_1006C1EE0, (uint64_t *)&unk_1006B31B0);
      uint64_t v31 = Publisher.eraseToAnyPublisher()();
      swift_release();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
    }
    else
    {
      unint64_t v40 = v74;
      if (swift_dynamicCast())
      {
        uint64_t v41 = v71;
        uint64_t v42 = (uint64_t)v70;
        (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v70, v40, v9);
        uint64_t v31 = sub_1001AB4F8(v42, v81);
        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v9);
      }
      else
      {
        uint64_t v43 = v72;
        uint64_t v44 = v73;
        int v45 = swift_dynamicCast();
        uint64_t v46 = v81;
        if (v45)
        {
          uint64_t v47 = v65;
          int v48 = v64;
          (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v64, v43, v44);
          uint64_t v49 = (uint64_t)v66;
          FMIPDiscoveredAccessory.productInformation.getter();
          uint64_t v31 = sub_1001AC2B4(v49, v46);
          sub_100003F10(v49, &qword_1006B3700);
          (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v44);
        }
        else
        {
          uint64_t v84 = 0;
          unint64_t v85 = 0xE000000000000000;
          _StringGuts.grow(_:)(50);
          v50._object = (void *)0x80000001005A1F70;
          v50._uint64_t countAndFlagsBits = 0xD000000000000030;
          String.append(_:)(v50);
          sub_10002CEB8(v87, v88);
          swift_getDynamicType();
          v51._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
          String.append(_:)(v51);
          swift_bridgeObjectRelease();
          v52._uint64_t countAndFlagsBits = 0;
          v52._object = (void *)0xE000000000000000;
          String.append(_:)(v52);
          uint64_t v54 = v84;
          unint64_t v53 = v85;
          if (qword_1006AE190 != -1) {
            swift_once();
          }
          uint64_t v55 = type metadata accessor for Logger();
          sub_1000606BC(v55, (uint64_t)qword_1006D1E98);
          os_log_type_t v56 = static os_log_type_t.error.getter();
          swift_bridgeObjectRetain_n();
          uint64_t v57 = Logger.logObject.getter();
          os_log_type_t v58 = v56;
          if (os_log_type_enabled(v57, v56))
          {
            os_log_type_t v59 = (uint8_t *)swift_slowAlloc();
            uint64_t v84 = swift_slowAlloc();
            *(_DWORD *)os_log_type_t v59 = 136315138;
            swift_bridgeObjectRetain();
            uint64_t v83 = sub_1000606F4(v54, v53, &v84);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v57, v58, "%s", v59, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
            swift_bridgeObjectRelease();
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          sub_100006060(0, (unint64_t *)&qword_1006BA4D0);
          sub_1001BF4E4();
          unint64_t v60 = v67;
          Fail.init(error:)();
          sub_1000450A0((unint64_t *)&unk_1006C1ED0, &qword_1006B5208);
          uint64_t v61 = v69;
          uint64_t v31 = Publisher.eraseToAnyPublisher()();
          (*(void (**)(char *, uint64_t))(v68 + 8))(v60, v61);
        }
      }
    }
  }
  sub_10002CEFC((uint64_t)v86);
  sub_10002CEFC((uint64_t)v87);
  return v31;
}

void sub_1005336FC(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    a4(a3, v6, Strong);
  }
}

uint64_t sub_100533774(uint64_t a1, void *a2, uint8_t *a3)
{
  id v55 = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  os_log_type_t v58 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for DispatchQoS();
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  os_log_type_t v56 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v60 = *(void *)(v9 - 8);
  uint64_t v61 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for FMIPDiscoveredAccessory();
  v68[3] = v16;
  v68[4] = (uint64_t)&off_100626250;
  uint64_t v17 = sub_100042804(v68);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v17, a1, v16);
  uint64_t v18 = *(void **)&a3[*(void *)(qword_1006D1610 + (swift_isaMask & *(void *)a3) + 40)];
  *uint64_t v15 = v18;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  id v19 = v18;
  LOBYTE(v18) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  if (v18)
  {
    uint64_t v53 = v6;
    if (qword_1006AE190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v54 = v5;
  uint64_t v20 = type metadata accessor for Logger();
  sub_1000606BC(v20, (uint64_t)qword_1006D1E98);
  sub_10005FAA4((uint64_t)v68, (uint64_t)aBlock);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    id v52 = (id)swift_slowAlloc();
    *(void *)&v67[0] = v52;
    *(_DWORD *)uint64_t v23 = 136315138;
    Swift::String v51 = v23 + 4;
    sub_10002CEB8(aBlock, (uint64_t)v64);
    FMIPDiscoveredAccessory.identifier.getter();
    sub_100535294((unint64_t *)&qword_1006B6CC0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v24 = v61;
    uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v27 = v26;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v24);
    uint64_t v62 = sub_1000606F4(v25, v27, (uint64_t *)v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10002CEFC((uint64_t)aBlock);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "FMAccessoryDiscoveryDataSource: Retrieved image for accessory: %s", v23, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10002CEFC((uint64_t)aBlock);
  }

  uint64_t v50 = FMIPDiscoveredAccessory.displayName.getter();
  uint64_t v49 = v28;
  uint64_t v48 = *(void *)&a3[*(void *)(qword_1006D1610 + (swift_isaMask & *(void *)a3) + 48)];
  Swift::String v51 = a3;
  uint64_t v29 = (uint64_t)v55;
  id v30 = v55;
  uint64_t v31 = FMIPDiscoveredAccessory.identifier.getter();
  __chkstk_darwin(v31);
  uint64_t v32 = type metadata accessor for FMIPAccessoryDiscoveryController();
  *(&v48 - 4) = v32;
  uint64_t v33 = sub_100535294((unint64_t *)&unk_1006BB340, (void (*)(uint64_t))&type metadata accessor for FMIPAccessoryDiscoveryController);
  *(&v48 - 3) = v33;
  *(&v48 - 2) = (uint64_t)&off_100626250;
  *(&v48 - 1) = (uint64_t)&off_100628FC8;
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  *(&v48 - 4) = v32;
  *(&v48 - 3) = v33;
  *(&v48 - 2) = (uint64_t)&off_100626250;
  *(&v48 - 1) = (uint64_t)&off_100628FC8;
  swift_getKeyPath();
  id v52 = v30;
  uint64_t v35 = v49;
  swift_bridgeObjectRetain();
  uint64_t v36 = (void (*)(void *, void))static Published.subscript.modify();
  unint64_t v38 = v37;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v67[0] = *v38;
  *unint64_t v38 = 0x8000000000000000;
  sub_1001B81E0(v50, v35, v29, 0, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
  *unint64_t v38 = *(void *)&v67[0];
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v61);
  v36(aBlock, 0);
  swift_release();
  swift_release();
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  unint64_t v40 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v41 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_10005FAA4((uint64_t)v68, (uint64_t)v67);
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = v41;
  sub_100042868(v67, v42 + 24);
  uint64_t v65 = sub_100535BD4;
  uint64_t v66 = v42;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  uint64_t v64 = &unk_1006445B0;
  uint64_t v43 = _Block_copy(aBlock);
  swift_release();
  uint64_t v44 = v56;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100535294((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  int v45 = v58;
  uint64_t v46 = v54;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v43);

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v45, v46);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v44, v59);
  return sub_10002CEFC((uint64_t)v68);
}

uint64_t sub_100534110(uint64_t a1, void *a2, uint8_t *a3)
{
  id v55 = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  os_log_type_t v58 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for DispatchQoS();
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  os_log_type_t v56 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v60 = *(void *)(v9 - 8);
  uint64_t v61 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for FMIPUnknownItem();
  v68[3] = v16;
  v68[4] = (uint64_t)&off_100626268;
  uint64_t v17 = sub_100042804(v68);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v17, a1, v16);
  uint64_t v18 = *(void **)&a3[*(void *)(qword_1006D1610 + (swift_isaMask & *(void *)a3) + 40)];
  *uint64_t v15 = v18;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  id v19 = v18;
  LOBYTE(v18) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  if (v18)
  {
    uint64_t v53 = v6;
    if (qword_1006AE190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v54 = v5;
  uint64_t v20 = type metadata accessor for Logger();
  sub_1000606BC(v20, (uint64_t)qword_1006D1E98);
  sub_10005FAA4((uint64_t)v68, (uint64_t)aBlock);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    id v52 = (id)swift_slowAlloc();
    *(void *)&v67[0] = v52;
    *(_DWORD *)uint64_t v23 = 136315138;
    Swift::String v51 = v23 + 4;
    sub_10002CEB8(aBlock, (uint64_t)v64);
    FMIPUnknownItem.identifier.getter();
    sub_100535294((unint64_t *)&qword_1006B6CC0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v24 = v61;
    uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v27 = v26;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v24);
    uint64_t v62 = sub_1000606F4(v25, v27, (uint64_t *)v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10002CEFC((uint64_t)aBlock);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "FMAccessoryDiscoveryDataSource: Retrieved image for accessory: %s", v23, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10002CEFC((uint64_t)aBlock);
  }

  uint64_t v50 = FMIPUnknownItem.name.getter();
  uint64_t v49 = v28;
  uint64_t v48 = *(void *)&a3[*(void *)(qword_1006D1610 + (swift_isaMask & *(void *)a3) + 48)];
  Swift::String v51 = a3;
  uint64_t v29 = (uint64_t)v55;
  id v30 = v55;
  uint64_t v31 = FMIPUnknownItem.identifier.getter();
  __chkstk_darwin(v31);
  uint64_t v32 = type metadata accessor for FMIPUnknownAccessoryDiscoveryController();
  *(&v48 - 4) = v32;
  uint64_t v33 = sub_100535294(&qword_1006C1D48, (void (*)(uint64_t))&type metadata accessor for FMIPUnknownAccessoryDiscoveryController);
  *(&v48 - 3) = v33;
  *(&v48 - 2) = (uint64_t)&off_100626268;
  *(&v48 - 1) = (uint64_t)&off_100628FC0;
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  *(&v48 - 4) = v32;
  *(&v48 - 3) = v33;
  *(&v48 - 2) = (uint64_t)&off_100626268;
  *(&v48 - 1) = (uint64_t)&off_100628FC0;
  swift_getKeyPath();
  id v52 = v30;
  uint64_t v35 = v49;
  swift_bridgeObjectRetain();
  uint64_t v36 = (void (*)(void *, void))static Published.subscript.modify();
  unint64_t v38 = v37;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v67[0] = *v38;
  *unint64_t v38 = 0x8000000000000000;
  sub_1001B81E0(v50, v35, v29, 0, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
  *unint64_t v38 = *(void *)&v67[0];
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v61);
  v36(aBlock, 0);
  swift_release();
  swift_release();
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  unint64_t v40 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v41 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_10005FAA4((uint64_t)v68, (uint64_t)v67);
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = v41;
  sub_100042868(v67, v42 + 24);
  uint64_t v65 = sub_100535890;
  uint64_t v66 = v42;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  uint64_t v64 = &unk_100644308;
  uint64_t v43 = _Block_copy(aBlock);
  swift_release();
  uint64_t v44 = v56;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100535294((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  int v45 = v58;
  uint64_t v46 = v54;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v43);

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v45, v46);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v44, v59);
  return sub_10002CEFC((uint64_t)v68);
}

void sub_100534AAC()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_stackView;
  *(void *)&v1[v2] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v3 = OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_headerView;
  if (qword_1006AE130 != -1) {
    swift_once();
  }
  long long v4 = xmmword_1006D1CA8;
  long long v5 = xmmword_1006D1CB8;
  id v6 = objc_allocWithZone((Class)type metadata accessor for FMAccessoryDiscoveryListHeaderView());
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)&v1[v3] = sub_1002D2FA0(v4, *((uint64_t *)&v4 + 1), v5, *((uint64_t *)&v5 + 1));
  uint64_t v7 = OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_continueButton;
  uint64_t v8 = (char *)objc_allocWithZone((Class)type metadata accessor for FMEmptyListButton());
  uint64_t v9 = OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor;
  uint64_t v10 = self;
  uint64_t v11 = v8;
  *(void *)&v8[v9] = [v10 systemBlueColor];
  v11[OBJC_IVAR____TtC6FindMy17FMEmptyListButton_isEnabled] = 1;

  id v12 = [v10 tertiarySystemFillColor];
  id v13 = sub_10004E188(v12, 1, 1, 0);

  *(void *)&v1[v7] = v13;
  *(void *)&v1[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_cancellables] = _swiftEmptyArrayStorage;
  uint64_t v14 = &v1[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_scrollHandler];
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100534C94(os_log_type_t a1)
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000606BC(v2, (uint64_t)qword_1006D1E98);
  os_log_type_t v3 = a1;
  log = Logger.logObject.getter();
  if (os_log_type_enabled(log, a1))
  {
    long long v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)long long v4 = 136315138;
    sub_1000606F4(0xD000000000000042, 0x80000001005A1E40, &v6);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, log, v3, "FMFindUnknownItemViewController: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_100534E34()
{
  uint64_t v1 = sub_10005D034((uint64_t *)&unk_1006C1D38);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  long long v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)v22 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v22 - v8;
  uint64_t v10 = sub_10005D034((uint64_t *)&unk_1006B2B40);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_dataSource);
  dispatch thunk of UITableViewDiffableDataSource.itemIdentifier(for:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    uint64_t v15 = (uint64_t *)&unk_1006C1D38;
    uint64_t v16 = (uint64_t)v9;
  }
  else
  {
    sub_100067E48((uint64_t)v9, (uint64_t)v13, (uint64_t *)&unk_1006B2B40);
    v22[1] = *(void *)((char *)v14 + *(void *)(qword_1006D1610 + (swift_isaMask & *v14) + 48));
    sub_100006AB0((uint64_t)v13, (uint64_t)v7, (uint64_t *)&unk_1006B2B40);
    uint64_t v17 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    __chkstk_darwin(v17);
    uint64_t v18 = type metadata accessor for FMIPUnknownAccessoryDiscoveryController();
    v22[-4] = v18;
    uint64_t v19 = sub_100535294(&qword_1006C1D48, (void (*)(uint64_t))&type metadata accessor for FMIPUnknownAccessoryDiscoveryController);
    v22[-3] = v19;
    v22[-2] = &off_100626268;
    v22[-1] = &off_100628FC0;
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    v22[-4] = v18;
    v22[-3] = v19;
    v22[-2] = &off_100626268;
    v22[-1] = &off_100628FC0;
    swift_getKeyPath();
    sub_100006AB0((uint64_t)v7, (uint64_t)v4, (uint64_t *)&unk_1006C1D38);
    swift_retain();
    static Published.subscript.setter();
    sub_100003F10((uint64_t)v7, (uint64_t *)&unk_1006C1D38);
    uint64_t v16 = (uint64_t)v13;
    uint64_t v15 = (uint64_t *)&unk_1006B2B40;
  }
  return sub_100003F10(v16, v15);
}

uint64_t sub_100535198()
{
  return sub_100149B70();
}

uint64_t sub_1005351BC(uint64_t a1)
{
  return sub_10014BA74(a1);
}

uint64_t sub_1005351E0()
{
  return 32;
}

__n128 sub_1005351EC(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1005351F8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100535230()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100535268(uint64_t a1)
{
  sub_100530318(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_100535274()
{
  return sub_1005359E4((uint64_t (*)(void))&type metadata accessor for FMIPAccessoryError);
}

void sub_10053528C()
{
}

uint64_t sub_100535294(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005352DC()
{
  return sub_1005359E4((uint64_t (*)(void))&type metadata accessor for FMIPAccessoryError);
}

void sub_1005352F4()
{
}

void sub_1005352FC(char a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FMIPAccessoryError() - 8);
  sub_10052FF0C(*(void *)(v1 + 16), v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_100535364()
{
  return sub_1005359E4((uint64_t (*)(void))&type metadata accessor for FMIPUnknownItem);
}

void sub_10053537C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FMIPUnknownItem() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_10052F42C(a1, v4, v5);
}

uint64_t sub_1005353F0()
{
  return sub_1005359E4((uint64_t (*)(void))&type metadata accessor for FMIPUnknownItem);
}

void sub_100535408()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMIPUnknownItem() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_10052F8B8(v2, v3);
}

uint64_t sub_10053546C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006060(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

const char *sub_1005354B0()
{
  return "isUserInteractionEnabled";
}

id sub_1005354BC@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isUserInteractionEnabled];
  *a2 = (_BYTE)result;
  return result;
}

id sub_1005354F0(unsigned __int8 *a1, id *a2)
{
  return [*a2 setUserInteractionEnabled:*a1];
}

void *sub_100535504@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_showActivityIndicator);
  return result;
}

id sub_100535520(unsigned char *a1, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_showActivityIndicator) = *a1;
  return sub_1002C5EB4();
}

void *sub_100535558@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + *(void *)(qword_1006D1610 + (swift_isaMask & *(void *)*result) + 56));
  return result;
}

uint64_t sub_1005355B0(unsigned char *a1, void *a2)
{
  *(unsigned char *)(*a2 + *(void *)(qword_1006D1610 + (swift_isaMask & *(void *)*a2) + 56)) = *a1;
  return sub_100524D14(1);
}

uint64_t sub_100535628()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100535660(uint64_t *a1)
{
  return sub_10052EBC0(a1, *(void *)(v1 + 16));
}

const char *sub_100535668()
{
  return "contentSize";
}

id sub_100535674@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 contentSize];
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_1005356A8(double *a1, id *a2)
{
  return [*a2 setContentSize:*a1 a1[1]];
}

void sub_1005356BC(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
}

const char *sub_1005356C4()
{
  return "isScrollEnabled";
}

id sub_1005356D0@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isScrollEnabled];
  *a2 = (_BYTE)result;
  return result;
}

id sub_100535704(unsigned __int8 *a1, id *a2)
{
  return [*a2 setScrollEnabled:*a1];
}

unint64_t sub_100535718()
{
  unint64_t result = qword_1006C1E80;
  if (!qword_1006C1E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C1E80);
  }
  return result;
}

uint64_t sub_10053576C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100149C68();
  *a1 = result;
  return result;
}

uint64_t sub_100535798()
{
  return sub_100149D58();
}

uint64_t sub_1005357C4()
{
  return 32;
}

__n128 sub_1005357D0(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

void sub_1005357DC(uint64_t a1)
{
}

void *sub_1005357E4(void *a1, void *a2, uint64_t a3)
{
  return sub_10052B084(a1, a2, a3, v3);
}

void *sub_1005357EC(uint64_t a1)
{
  return sub_100523FE8(a1);
}

void *sub_1005357F4(uint64_t a1)
{
  return sub_100524398(a1);
}

uint64_t sub_100535800()
{
  return sub_100526840(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100535808()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100535818()
{
  return sub_1005359E4((uint64_t (*)(void))&type metadata accessor for FMIPUnknownItem);
}

void sub_100535830(uint64_t *a1)
{
}

void sub_10053585C()
{
  sub_10052786C(v0, (void (*)(uint64_t))sub_100524D14);
}

uint64_t sub_100535890()
{
  return sub_1005254B8(*(void *)(v0 + 16), (void *)(v0 + 24), &qword_1006C1E78, (uint64_t *)&unk_1006B2B40, (uint64_t *)&unk_1006C1E90, (void (*)(uint64_t))sub_100524D14);
}

uint64_t sub_1005358DC()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100535920()
{
  return sub_100528D10(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100535928()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100535938(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRelease();

    return swift_release();
  }
  return result;
}

uint64_t sub_100535988()
{
  return _swift_deallocObject(v0, 32, 7);
}

void *sub_100535998(void *a1, void *a2, uint64_t a3)
{
  return sub_10052A154(a1, a2, a3, v3);
}

void *sub_1005359A0(uint64_t a1)
{
  return sub_100523E10(a1);
}

void *sub_1005359A8(uint64_t a1)
{
  return sub_1005241C0(a1);
}

uint64_t sub_1005359B4()
{
  return sub_100525814(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1005359BC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005359CC()
{
  return sub_1005359E4((uint64_t (*)(void))&type metadata accessor for FMIPDiscoveredAccessory);
}

uint64_t sub_1005359E4(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 24) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v6, v7);
}

void sub_100535AB8(uint64_t *a1)
{
}

void sub_100535AE4(uint64_t *a1, uint64_t (*a2)(void), void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(a2(0) - 8);
  sub_1005336FC(a1, *(void *)(v3 + 16), v3 + ((*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), a3);
}

void sub_100535B60()
{
  sub_10052786C(v0, (void (*)(uint64_t))sub_100524570);
}

uint64_t sub_100535B94()
{
  swift_release();
  sub_10002CEFC(v0 + 24);

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100535BD4()
{
  return sub_1005254B8(*(void *)(v0 + 16), (void *)(v0 + 24), &qword_1006C1F08, &qword_1006B2BF0, &qword_1006C1F00, (void (*)(uint64_t))sub_100524570);
}

uint64_t sub_100535C24()
{
  uint64_t v1 = type metadata accessor for FMIPDevice();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100535CF8()
{
  return sub_1005278CC(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100535D00()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100535D14()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_100535D90()
{
  uint64_t v1 = v0;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000606BC(v2, (uint64_t)qword_1006D1E98);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMLocationProvider: stopLocationMonitoring", v5, 2u);
    swift_slowDealloc();
  }

  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_includeHeading) == 1) {
    [*(id *)(v1 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_locationManager) stopUpdatingHeading];
  }
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_locationManager);

  return [v6 stopUpdatingLocation];
}

id sub_100535EB8(char a1)
{
  uint64_t v2 = v1;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  int v4 = a1 & 1;
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000606BC(v5, (uint64_t)qword_1006D1E98);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v9 = String.init<A>(describing:)();
    uint64_t v16 = sub_1000606F4(v9, v10, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMLocationProvider: updateConfigurationType: %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v11 = OBJC_IVAR____TtC6FindMy18FMLocationProvider_locationManager;
  id result = *(id *)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_locationManager);
  if (result)
  {
    id v13 = &kCLLocationAccuracyBest;
    if (!v4) {
      id v13 = &kCLLocationAccuracyHundredMeters;
    }
    [result setDesiredAccuracy:*v13, v16, v17];
    id result = *(id *)(v2 + v11);
    if (result)
    {
      double v14 = kCLDistanceFilterNone;
      if (!v4) {
        double v14 = 100.0;
      }
      [result setDistanceFilter:v14];
      id result = *(id *)(v2 + v11);
      if (result)
      {
        if (v4) {
          uint64_t v15 = 3;
        }
        else {
          uint64_t v15 = 1;
        }
        return [result setActivityType:v15];
      }
    }
  }
  return result;
}

uint64_t sub_100536148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v17 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  id v13 = (void *)swift_allocObject();
  v13[2] = a2;
  v13[3] = a1;
  v13[4] = a3;
  aBlock[4] = sub_100536B40;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  void aBlock[3] = &unk_100644790;
  double v14 = _Block_copy(aBlock);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10005FE54();
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_10005ECA8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v16);
}

uint64_t sub_1005363F8(uint64_t a1, void *a2)
{
  if (a1)
  {
    sub_10005D034(&qword_1006B2B80);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_10055B970;
    swift_errorRetain();
    _StringGuts.grow(_:)(50);
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    v4._uint64_t countAndFlagsBits = Error.localizedDescription.getter();
    String.append(_:)(v4);
    swift_bridgeObjectRelease();
    *(void *)(v3 + 56) = &type metadata for String;
    *(void *)(v3 + 32) = 0xD000000000000030;
    *(void *)(v3 + 40) = 0x80000001005A2120;
    print(_:separator:terminator:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  if (a2) {
    unint64_t v5 = (unint64_t)a2;
  }
  else {
    unint64_t v5 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v33 = a2;
    if (!v6) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v33 = a2;
    if (!v6) {
      goto LABEL_20;
    }
  }
  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v7 = 0;
  uint64_t v8 = _swiftEmptyArrayStorage;
  do
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v9 = *(id *)(v5 + 8 * v7 + 32);
    }
    uint64_t v10 = v9;
    [v9 confidence];
    Double.write<A>(to:)();
    v11._uint64_t countAndFlagsBits = 2108704;
    v11._object = (void *)0xE300000000000000;
    String.append(_:)(v11);
    id v12 = [v10 description];
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;

    v16._uint64_t countAndFlagsBits = v13;
    v16._object = v15;
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_10007D258(0, v8[2] + 1, 1, v8);
    }
    unint64_t v18 = v8[2];
    unint64_t v17 = v8[3];
    if (v18 >= v17 >> 1) {
      uint64_t v8 = sub_10007D258((void *)(v17 > 1), v18 + 1, 1, v8);
    }
    ++v7;
    v8[2] = v18 + 1;
    uint64_t v19 = &v8[2 * v18];
    v19[4] = 0;
    v19[5] = 0xE000000000000000;
  }
  while (v6 != v7);
LABEL_20:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v21 = (void *)Strong;
    *(void *)(Strong + OBJC_IVAR____TtC6FindMy18FMLocationProvider_poiLocations) = v33;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v22 = swift_unknownObjectWeakLoadStrong();
  if (!v22) {
    goto LABEL_37;
  }
  a2 = (void *)v22;
  uint64_t v23 = (uint64_t *)(v22 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions);
  swift_beginAccess();
  uint64_t v6 = *v23;
  if (!((unint64_t)*v23 >> 62))
  {
    uint64_t v24 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v24) {
      goto LABEL_25;
    }
LABEL_36:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_37:
    sub_10005D034(&qword_1006B2B80);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_10055B970;
    _StringGuts.grow(_:)(45);
    swift_bridgeObjectRelease();
    v32._uint64_t countAndFlagsBits = Array.description.getter();
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v31 + 56) = &type metadata for String;
    *(void *)(v31 + 32) = 0xD00000000000002BLL;
    *(void *)(v31 + 40) = 0x80000001005A20F0;
    print(_:separator:terminator:)();
    return swift_bridgeObjectRelease();
  }
LABEL_35:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v24 = result;
  if (!result) {
    goto LABEL_36;
  }
LABEL_25:
  if (v24 >= 1)
  {
    for (uint64_t i = 0; i != v24; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0)
      {
        uint64_t v27 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v27 = *(void *)(v6 + 8 * i + 32);
        swift_retain();
      }
      uint64_t v28 = v27 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v29 = *(void *)(v28 + 8);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(void *, unint64_t, uint64_t, uint64_t))(v29 + 24))(a2, v5, ObjectType, v29);
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    goto LABEL_36;
  }
  __break(1u);
  return result;
}

uint64_t sub_100536954(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  unint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_100006060(0, &qword_1006C1A40);
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_1005369F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMLocationProvider();
  return [super dealloc];
}

uint64_t sub_100536AB8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100536AF0(uint64_t a1, uint64_t a2)
{
  return sub_100536148(a1, a2, v2);
}

uint64_t sub_100536AF8()
{
  swift_errorRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100536B40()
{
  return sub_1005363F8(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_100536B4C()
{
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000606BC(v0, (uint64_t)qword_1006D1E98);
  swift_errorRetain();
  swift_errorRetain();
  oslog = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136315138;
    swift_getErrorValue();
    uint64_t v3 = Error.localizedDescription.getter();
    sub_1000606F4(v3, v4, &v6);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "FMLocationProvider: location manager failed with error: %s", v2, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
}

uint64_t sub_100536D54()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100536D9C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100536DDC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

unsigned char *storeEnumTagSinglePayload for FMLocationManagerConfigurationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100536EF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMLocationManagerConfigurationType()
{
  return &type metadata for FMLocationManagerConfigurationType;
}

unint64_t sub_100536F34()
{
  unint64_t result = qword_1006C2080;
  if (!qword_1006C2080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C2080);
  }
  return result;
}

id LocateDeviceIntent.__allocating_init(identifier:class:name:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = [objc_allocWithZone(v3) init];
  type metadata accessor for Device();
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v7 = v5;
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = [v6 initWithIdentifier:v8 displayString:v9];

  [v7 setDevice:v10];
  [v7 setLocateDeviceClass:a3];

  return v7;
}

Swift::Bool __swiftcall CLLocation.fmifIsNearBy(_:inBTRangeDistanceInMeters:)(CLLocation _, Swift::Double inBTRangeDistanceInMeters)
{
  Class isa = _.super.isa;
  [v2 distanceFromLocation:_.super.isa];
  double v6 = v5;
  [v2 horizontalAccuracy];
  double v8 = v7;
  [(objc_class *)isa horizontalAccuracy];
  return v6 / sqrt(inBTRangeDistanceInMeters * inBTRangeDistanceInMeters + v8 * v8 + v9 * v9) < 1.5;
}

id sub_1005371D4()
{
  return sub_100537634(type metadata accessor for FMOBBlueGrayBoldTrayButton);
}

uint64_t type metadata accessor for FMOBBlueGrayBoldTrayButton()
{
  return self;
}

id sub_1005372AC()
{
  return sub_100537634(type metadata accessor for FMOBWhiteBlueBoldTrayButton);
}

uint64_t type metadata accessor for FMOBWhiteBlueBoldTrayButton()
{
  return self;
}

id sub_100537384()
{
  return sub_100537634(type metadata accessor for FMOBRedGrayBoldTrayButton);
}

uint64_t type metadata accessor for FMOBRedGrayBoldTrayButton()
{
  return self;
}

id sub_1005373E0(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t (*a7)(void), SEL *a8)
{
  v18.receiver = a1;
  v18.super_class = (Class)a7();
  [super initWithFrame:a2, a3, a4, a5];
  double v14 = self;
  id v15 = v13;
  id v16 = [v14 *a8];
  [v15 setTintColor:v16];

  return v15;
}

void sub_1005374D4(void *a1, uint64_t a2, void *a3, uint64_t a4, SEL *a5, uint64_t (*a6)(void))
{
  id v10 = self;
  id v11 = a3;
  id v12 = a1;
  id v13 = [v10 *a5];
  double v14 = (objc_class *)a6();
  v17.receiver = v12;
  v17.super_class = v14;
  [super setTitleColor:v13 forState:0];

  id v15 = [v10 *a5];
  v16.receiver = v12;
  v16.super_class = v14;
  [super setTitleColor:v15 forState:1];
}

id sub_10053761C()
{
  return sub_100537634(type metadata accessor for FMOBRedWhiteBoldTrayButton);
}

id sub_100537634(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for FMOBRedWhiteBoldTrayButton()
{
  return self;
}

void *sub_100537690(uint64_t a1)
{
  return sub_100042664(a1, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel, (uint64_t (*)(void))type metadata accessor for FMItemCellViewModel, (uint64_t)&off_1006353C8);
}

void *sub_1005376C4(uint64_t a1)
{
  return sub_100042664(a1, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel, (uint64_t (*)(void))type metadata accessor for FMDeviceCellViewModel, (uint64_t)&off_100634190);
}

void *sub_1005376F8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    id v13 = _swiftEmptyArrayStorage;
    sub_10013E8DC(0, v1, 0);
    uint64_t v2 = _swiftEmptyArrayStorage;
    unsigned int v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      id v13 = v2;
      unint64_t v7 = v2[2];
      unint64_t v8 = v2[3];
      swift_bridgeObjectRetain();
      if (v7 >= v8 >> 1)
      {
        sub_10013E8DC(v8 > 1, v7 + 1, 1);
        uint64_t v2 = v13;
      }
      v4 += 2;
      id v11 = &type metadata for String;
      unint64_t v12 = sub_10007F2C8();
      *(void *)&long long v10 = v6;
      *((void *)&v10 + 1) = v5;
      v2[2] = v7 + 1;
      sub_100042868(&v10, (uint64_t)&v2[5 * v7 + 4]);
      --v1;
    }
    while (v1);
  }
  return v2;
}

void *sub_1005377F4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    double v9 = _swiftEmptyArrayStorage;
    sub_10013E90C(0, v1, 0);
    uint64_t v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10013E90C(0, v2[2] + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_10013E90C(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      v2[2] = v6 + 1;
      sub_100053C2C(&v8, &v2[4 * v6 + 4]);
      --v1;
    }
    while (v1);
  }
  return v2;
}

void *sub_10053791C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10013E97C(0, v1, 0);
    uint64_t v3 = a1 + 32;
    do
    {
      swift_bridgeObjectRetain_n();
      sub_10005D034(&qword_1006B2C10);
      sub_10005D034(&qword_1006B2C00);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_10013E97C(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v5 = _swiftEmptyArrayStorage[2];
      unint64_t v4 = _swiftEmptyArrayStorage[3];
      if (v5 >= v4 >> 1) {
        sub_10013E97C(v4 > 1, v5 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v5 + 1;
      _swiftEmptyArrayStorage[v5 + 4] = v7;
      v3 += 8;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100537A60(unint64_t a1)
{
  return sub_100537C50(a1, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10013E90C, (void (*)(uint64_t, unint64_t))&specialized _ArrayBuffer._getElementSlowPath(_:), (unint64_t *)&unk_1006B9AE0);
}

void *sub_100537A9C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10013EA54(0, v1, 0);
    uint64_t v3 = (void **)(a1 + 48);
    do
    {
      unint64_t v4 = *v3;
      swift_bridgeObjectRetain_n();
      id v5 = v4;
      sub_10005D034(&qword_1006AF000);
      sub_10005D034((uint64_t *)&unk_1006B2BE0);
      swift_dynamicCast();

      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_10013EA54(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v7 = _swiftEmptyArrayStorage[2];
      unint64_t v6 = _swiftEmptyArrayStorage[3];
      if (v7 >= v6 >> 1) {
        sub_10013EA54(v6 > 1, v7 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v7 + 1;
      long long v8 = &_swiftEmptyArrayStorage[3 * v7];
      void v8[4] = v10;
      *(_OWORD *)(v8 + 5) = v11;
      v3 += 3;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100537C14(unint64_t a1)
{
  return sub_100537C50(a1, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_100143140, (void (*)(uint64_t, unint64_t))sub_10053FE98, (unint64_t *)&qword_1006B9BF0);
}

uint64_t sub_100537C50(unint64_t a1, uint64_t (*a2)(BOOL, uint64_t, uint64_t), void (*a3)(uint64_t, unint64_t), unint64_t *a4)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  long long v8 = _swiftEmptyArrayStorage;
  if (!v7) {
    return (uint64_t)v8;
  }
  uint64_t v19 = _swiftEmptyArrayStorage;
  uint64_t result = a2(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        a3(i, a1);
        sub_100006060(0, a4);
        swift_dynamicCast();
        long long v8 = v19;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          a2(0, v8[2] + 1, 1);
          long long v8 = v19;
        }
        unint64_t v12 = v8[2];
        unint64_t v11 = v8[3];
        if (v12 >= v11 >> 1)
        {
          a2(v11 > 1, v12 + 1, 1);
          long long v8 = v19;
        }
        v8[2] = v12 + 1;
        sub_100053C2C(v18, &v8[4 * v12 + 4]);
      }
    }
    else
    {
      id v13 = (id *)(a1 + 32);
      sub_100006060(0, a4);
      do
      {
        id v14 = *v13;
        swift_dynamicCast();
        long long v8 = v19;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          a2(0, v8[2] + 1, 1);
          long long v8 = v19;
        }
        unint64_t v16 = v8[2];
        unint64_t v15 = v8[3];
        if (v16 >= v15 >> 1)
        {
          a2(v15 > 1, v16 + 1, 1);
          long long v8 = v19;
        }
        v8[2] = v16 + 1;
        sub_100053C2C(v18, &v8[4 * v16 + 4]);
        ++v13;
        --v7;
      }
      while (v7);
    }
    return (uint64_t)v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_100537ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10005D034(&qword_1006C2228);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v29 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10005D034((uint64_t *)&unk_1006C2230);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  double v9 = (unint64_t *)((char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v33 = (uint64_t *)((char *)&v28 - v10);
  unint64_t v11 = *(void *)(a2 + 16);
  uint64_t v31 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v4 + 48);
  Swift::String v32 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  uint64_t v30 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v13 = 0;
  while (1)
  {
    if (v13 == v11)
    {
      uint64_t v14 = 1;
      unint64_t v13 = v11;
      goto LABEL_6;
    }
    if (v13 >= v11) {
      break;
    }
    uint64_t v15 = *(void *)(type metadata accessor for FMPeopleCellViewModel() - 8);
    uint64_t v16 = (uint64_t)&v29[*(int *)(v3 + 48)];
    sub_100059D88(v30+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v13, v16, (uint64_t (*)(void))type metadata accessor for FMPeopleCellViewModel);
    uint64_t v17 = (uint64_t)v9 + *(int *)(v3 + 48);
    *double v9 = v13;
    sub_100059E50(v16, v17, (uint64_t (*)(void))type metadata accessor for FMPeopleCellViewModel);
    uint64_t v14 = 0;
    ++v13;
LABEL_6:
    (*v32)(v9, v14, 1, v3);
    objc_super v18 = v33;
    sub_100541B58((uint64_t)v9, (uint64_t)v33);
    if ((*v31)(v18, 1, v3) == 1)
    {
      uint64_t v20 = 0;
LABEL_15:
      swift_bridgeObjectRelease();
      return v20;
    }
    unint64_t v19 = v11;
    uint64_t v20 = *v18;
    uint64_t v21 = v3;
    uint64_t v22 = (uint64_t *)((char *)v18 + *(int *)(v3 + 48));
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    swift_bridgeObjectRetain();
    sub_100059DF0((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FMPeopleCellViewModel);
    if (v24 == FMFFriend.identifier.getter() && v23 == v25)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v30 = v23;
      goto LABEL_15;
    }
    char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v11 = v19;
    uint64_t v3 = v21;
    if (v27) {
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

double sub_100538220()
{
  return sub_1000406C8(sub_100538238);
}

double sub_100538238()
{
  return sub_1000407B0((double (*)(void))sub_100538238);
}

id sub_100538250(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FMAllowLocationAlertCellViewModel();
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  double v9 = (char *)&v47 - v8;
  sub_100538B70(a1);
  uint64_t v10 = *(void **)&v1[qword_1006B6748];
  swift_bridgeObjectRetain();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v10 setText:v11];

  NSString v12 = String._bridgeToObjectiveC()();
  [v10 setAccessibilityIdentifier:v12];

  unint64_t v13 = *(void **)&v2[qword_1006B6750];
  swift_bridgeObjectRetain();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v13 setText:v14];

  NSString v15 = String._bridgeToObjectiveC()();
  [v13 setAccessibilityIdentifier:v15];

  uint64_t v16 = *(void **)&v2[qword_1006B6758];
  [v16 setText:0];
  id v17 = [self secondaryLabelColor];
  [v16 setTextColor:v17];

  NSString v18 = String._bridgeToObjectiveC()();
  [v16 setAccessibilityIdentifier:v18];

  unint64_t v19 = *(char **)&v2[qword_1006B6760];
  [v19 setHidden:1];
  *(void *)&v19[OBJC_IVAR____TtC6FindMy13FMBatteryView_level] = 0;
  sub_100056AFC();
  v19[OBJC_IVAR____TtC6FindMy13FMBatteryView_shouldShowLowPowerWarning] = 0;
  sub_100056578();
  v19[OBJC_IVAR____TtC6FindMy13FMBatteryView_isLowPowerEnabled] = 0;
  sub_100056578();
  v19[OBJC_IVAR____TtC6FindMy13FMBatteryView_isCharging] = 0;
  [*(id *)&v19[OBJC_IVAR____TtC6FindMy13FMBatteryView_chargingView] setHidden:1];
  NSString v20 = String._bridgeToObjectiveC()();
  [v19 setAccessibilityIdentifier:v20];

  [*(id *)&v2[qword_1006B6778] setHidden:1];
  [v16 setHidden:0];
  uint64_t v21 = *(void **)&v2[qword_1006B6768];
  [v21 setHidden:1];
  [v21 stopAnimating];
  if (qword_1006AE080 != -1) {
    swift_once();
  }
  if (byte_1006D1988 == 1)
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_1000606BC(v22, (uint64_t)qword_1006D1E98);
    sub_100059D88((uint64_t)a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMAllowLocationAlertCellViewModel);
    sub_100059D88((uint64_t)a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMAllowLocationAlertCellViewModel);
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      uint64_t v50 = v48;
      *(_DWORD *)uint64_t v25 = 136316162;
      uint64_t v26 = *((void *)v9 + 10);
      unint64_t v27 = *((void *)v9 + 11);
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_1000606F4(v26, v27, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100059DF0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMAllowLocationAlertCellViewModel);
      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v29 = *((void *)v7 + 8);
      unint64_t v28 = *((void *)v7 + 9);
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_1000606F4(v29, v28, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100059DF0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMAllowLocationAlertCellViewModel);
      *(_WORD *)(v25 + 22) = 2080;
      uint64_t v49 = sub_1000606F4(7104878, 0xE300000000000000, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v25 + 32) = 1024;
      LODWORD(v49) = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v25 + 38) = 1024;
      LODWORD(v49) = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "FMTableViewCell: Content\ntitle: %s\nsubtitle: %s\ndistance: %s\nlocating: %{BOOL}d\nbatteryIndicatorShowing: %{BOOL}d", (uint8_t *)v25, 0x2Cu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100059DF0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMAllowLocationAlertCellViewModel);
      sub_100059DF0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMAllowLocationAlertCellViewModel);
    }
  }
  v2[qword_1006B6790] = 0;
  uint64_t v30 = self;
  id v31 = [v30 mainScreen];
  UIRoundToScreenScale();
  double v33 = v32;

  id v34 = [v2 containerView];
  [v34 bounds];
  double v36 = v35;

  uint64_t v37 = *(void **)&v2[qword_1006B6770];
  double v38 = sub_1000406C8(sub_100538238);
  [v37 setFrame:v38, v36 - v33, sub_100538238(), v33];
  id v39 = [v30 mainScreen];
  UIRoundToScreenScale();
  double v41 = v40;

  id v42 = [v2 containerView];
  [v42 bounds];
  double v44 = v43;

  double v45 = sub_1000406C8(sub_100538238);
  return [v37 setFrame:v45, v44 - v41, sub_100538238(), v41];
}

id sub_100538A20(uint64_t a1)
{
  v1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_hasBackplate] = *(unsigned char *)(a1 + 64);
  id v3 = [self systemGray6Color];
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_backplateStrokeColor];
  *(void *)&v1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_backplateStrokeColor] = v3;

  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_badgeView];
  uint64_t v6 = *(void *)(a1 + 8);
  [v5 setImage:v6];
  [v5 setBackgroundColor:*(void *)(a1 + 16)];
  [v5 setHidden:v6 == 0];
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_imageView];
  [v7 setImage:*(void *)a1];
  [v7 frame];
  [v7 setFrame:];
  [v7 setHidden:0];
  [v1 setHidden:0];

  return [v1 setNeedsLayout];
}

id sub_100538B70(uint64_t *a1)
{
  v1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_hasBackplate] = *((unsigned char *)a1 + 104);
  id v3 = [self systemGray6Color];
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_backplateStrokeColor];
  *(void *)&v1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_backplateStrokeColor] = v3;

  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_badgeView];
  uint64_t v6 = *a1;
  [v5 setImage:*a1];
  [v5 setBackgroundColor:a1[1]];
  [v5 setHidden:v6 == 0];
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_imageView];
  [v7 setImage:*(uint64_t *)((char *)a1 + *(int *)(type metadata accessor for FMAllowLocationAlertCellViewModel() + 56))];
  [v7 frame];
  [v7 setFrame:];
  [v7 setHidden:0];
  [v1 setHidden:0];

  return [v1 setNeedsLayout];
}

void sub_100538CCC(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  uint64_t v6 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  uint64_t v7 = _Block_copy(aBlock);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  swift_retain();
  id v10 = a2;
  id v9 = a3;
  v6(v10, v9, sub_1005420D8, v8);
  swift_release();
  swift_release();
}

id sub_100538DA0(uint64_t *a1)
{
  uint64_t v3 = sub_10005D034(&qword_1006C2288);
  __chkstk_darwin(v3 - 8);
  uint64_t v46 = (uint64_t)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10005D034((uint64_t *)&unk_1006C2290);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  double v44 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v9 = (char *)v42 - v8;
  uint64_t v10 = sub_10005D034(&qword_1006B86E8);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  double v45 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  NSString v15 = (char *)v42 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  NSString v18 = (char *)v42 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)v42 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)v42 - v22;
  os_log_type_t v24 = *(void **)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0x198));
  UIButton.configuration.getter();
  uint64_t v25 = type metadata accessor for UIButton.Configuration();
  uint64_t v26 = *(void *)(v25 - 8);
  unint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  uint64_t v48 = v26 + 48;
  uint64_t v49 = v27;
  unsigned int v28 = v27(v23, 1, v25);
  uint64_t v47 = a1;
  if (v28)
  {
    sub_100006AB0((uint64_t)v23, (uint64_t)v21, &qword_1006B86E8);
    UIButton.configuration.setter();
    sub_100003F10((uint64_t)v23, &qword_1006B86E8);
  }
  else
  {
    if (a1[5])
    {
      v42[1] = a1[4];
      double v43 = v1;
      swift_bridgeObjectRetain();
      sub_10053944C();
      uint64_t v29 = type metadata accessor for AttributedString();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v9, 0, 1, v29);

      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v30 = type metadata accessor for AttributedString();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v9, 1, 1, v30);
    }
    UIButton.Configuration.attributedTitle.setter();
    UIButton.configuration.setter();
  }
  UIButton.configuration.getter();
  if (v49(v18, 1, v25))
  {
    sub_100006AB0((uint64_t)v18, (uint64_t)v21, &qword_1006B86E8);
    UIButton.configuration.setter();
    sub_100003F10((uint64_t)v18, &qword_1006B86E8);
  }
  else
  {
    UIButton.Configuration.showsActivityIndicator.setter();
    UIButton.configuration.setter();
  }
  id v31 = v47;
  double v32 = *(void **)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0x1A0));
  UIButton.configuration.getter();
  if (v49(v15, 1, v25))
  {
    sub_100006AB0((uint64_t)v15, (uint64_t)v21, &qword_1006B86E8);
    UIButton.configuration.setter();
    sub_100003F10((uint64_t)v15, &qword_1006B86E8);
  }
  else
  {
    if (v31[7])
    {
      double v33 = v1;
      swift_bridgeObjectRetain();
      id v34 = v44;
      sub_10053944C();
      uint64_t v35 = type metadata accessor for AttributedString();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 0, 1, v35);

      id v31 = v47;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v36 = type metadata accessor for AttributedString();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v44, 1, 1, v36);
    }
    UIButton.Configuration.attributedTitle.setter();
    UIButton.configuration.setter();
  }
  uint64_t v37 = (uint64_t)v45;
  UIButton.configuration.getter();
  if (v49((char *)v37, 1, v25))
  {
    sub_100006AB0(v37, (uint64_t)v21, &qword_1006B86E8);
    UIButton.configuration.setter();
    sub_100003F10(v37, &qword_1006B86E8);
  }
  else
  {
    UIButton.Configuration.showsActivityIndicator.setter();
    UIButton.configuration.setter();
  }
  [v24 setEnabled:1];
  [v32 setEnabled:1];
  uint64_t v38 = v46;
  sub_100059D88((uint64_t)v31, v46, (uint64_t (*)(void))type metadata accessor for FMAllowLocationAlertCellViewModel);
  uint64_t v39 = type metadata accessor for FMAllowLocationAlertCellViewModel();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 0, 1, v39);
  uint64_t v40 = (uint64_t)v1 + *(void *)((swift_isaMask & *v1) + 0x190);
  swift_beginAccess();
  sub_1005422A4(v38, v40);
  swift_endAccess();
  return sub_100538250(v31);
}

uint64_t sub_10053944C()
{
  uint64_t v0 = type metadata accessor for AttributeContainer();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)v11 - v5;
  AttributeContainer.init()();
  id v7 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
  [v7 setAlignment:1];
  LODWORD(v8) = 1.0;
  [v7 setHyphenationFactor:v8];
  [v7 setLineBreakMode:0];
  v11[0] = swift_getKeyPath();
  swift_getKeyPath();
  v11[1] = v7;
  sub_10036419C();
  id v9 = v7;
  AttributeContainer.subscript.setter();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  swift_bridgeObjectRetain();
  AttributedString.init(_:attributes:)();

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v6, v0);
}

uint64_t sub_100539630()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t sub_10053968C()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

void sub_1005396D4()
{
}

void sub_1005396FC()
{
}

uint64_t sub_100539718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_100539740()
{
  uint64_t v1 = type metadata accessor for FMFLocationAlertAcceptanceStatus();
  uint64_t v81 = *(void *)(v1 - 8);
  uint64_t v82 = v1;
  __chkstk_darwin(v1);
  uint64_t v77 = &v67[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v76 = sub_10005D034((uint64_t *)&unk_1006AEE30);
  __chkstk_darwin(v76);
  uint64_t v78 = &v67[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006C2200);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v74 = &v67[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v80 = &v67[-v8];
  __chkstk_darwin(v7);
  unint64_t v85 = &v67[-v9];
  uint64_t v87 = type metadata accessor for FMFLocationAlertTriggerType();
  uint64_t v79 = *(void *)(v87 - 8);
  uint64_t v10 = __chkstk_darwin(v87);
  uint64_t v86 = &v67[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v13 = &v67[-v12];
  uint64_t v14 = type metadata accessor for FMFLocationAlertTarget();
  uint64_t v84 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v83 = &v67[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  NSString v18 = &v67[-v17];
  uint64_t v19 = type metadata accessor for FMFLocationAlert();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v91 = &v67[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = &v67[-v24];
  uint64_t v26 = __chkstk_darwin(v23);
  unsigned int v28 = &v67[-v27];
  __chkstk_darwin(v26);
  uint64_t v30 = &v67[-v29];
  char v31 = FMFLocationAlert.setOnMe.getter();
  double v32 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v20 + 16);
  uint64_t v88 = v0;
  BOOL v89 = v32;
  uint64_t v90 = v20 + 16;
  v32(v30, v0, v19);
  if (v31)
  {
    uint64_t v72 = v25;
    uint64_t v73 = v28;
    uint64_t v69 = v13;
    uint64_t v75 = v19;
    FMFLocationAlert.locationAlertTarget.getter();
    id v34 = v83;
    uint64_t v33 = v84;
    (*(void (**)(unsigned char *, void, uint64_t))(v84 + 104))(v83, enum case for FMFLocationAlertTarget.alertMe(_:), v14);
    sub_100045D9C((unint64_t *)&unk_1006C22D0, (void (*)(uint64_t))&type metadata accessor for FMFLocationAlertTarget);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v71 = v30;
    if (v94 == v92 && v95 == v93)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v35 = *(void (**)(unsigned char *, uint64_t))(v33 + 8);
      v35(v34, v14);
      v35(v18, v14);
      uint64_t v36 = v73;
      uint64_t v37 = v30;
      uint64_t v19 = v75;
      uint64_t v38 = v89;
      v89(v73, v37, v75);
      uint64_t v40 = v86;
      uint64_t v39 = v87;
      goto LABEL_7;
    }
    int v68 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    double v43 = *(void (**)(unsigned char *, uint64_t))(v33 + 8);
    v43(v34, v14);
    v43(v18, v14);
    uint64_t v36 = v73;
    double v44 = v30;
    uint64_t v19 = v75;
    uint64_t v38 = v89;
    v89(v73, v44, v75);
    uint64_t v40 = v86;
    uint64_t v39 = v87;
    if (v68)
    {
LABEL_7:
      char v45 = FMFLocationAlert.repeating.getter();
      uint64_t v46 = v72;
      v38(v72, v36, v19);
      uint64_t v70 = v20;
      if (v45)
      {
        uint64_t v47 = v36;
        double v41 = *(void (**)(unsigned char *, uint64_t))(v20 + 8);
        v41(v46, v19);
        v41(v47, v19);
        v41(v71, v19);
        v38(v91, v88, v19);
        uint64_t v49 = v81;
        uint64_t v48 = v82;
        uint64_t v50 = v85;
        uint64_t v51 = (uint64_t)v80;
      }
      else
      {
        FMFLocationAlert.triggerType.getter();
        (*(void (**)(unsigned char *, void, uint64_t))(v79 + 104))(v40, enum case for FMFLocationAlertTriggerType.scheduled(_:), v39);
        sub_100045D9C(&qword_1006AF788, (void (*)(uint64_t))&type metadata accessor for FMFLocationAlertTriggerType);
        dispatch thunk of RawRepresentable.rawValue.getter();
        dispatch thunk of RawRepresentable.rawValue.getter();
        uint64_t v49 = v81;
        uint64_t v48 = v82;
        uint64_t v50 = v85;
        uint64_t v51 = (uint64_t)v80;
        if (v94 == v92 && v95 == v93) {
          char v52 = 1;
        }
        else {
          char v52 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        uint64_t v55 = v79;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        os_log_type_t v56 = *(void (**)(unsigned char *, uint64_t))(v55 + 8);
        uint64_t v57 = v87;
        v56(v86, v87);
        v56(v69, v57);
        double v41 = *(void (**)(unsigned char *, uint64_t))(v70 + 8);
        v41(v72, v19);
        v41(v73, v19);
        v41(v71, v19);
        id v42 = v91;
        v89(v91, v88, v19);
        if ((v52 & 1) == 0)
        {
          char v54 = 0;
          goto LABEL_24;
        }
      }
      FMFLocationAlert.acceptanceStatus.getter();
      (*(void (**)(uint64_t, void, uint64_t))(v49 + 104))(v51, enum case for FMFLocationAlertAcceptanceStatus.pending(_:), v48);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v51, 0, 1, v48);
      os_log_type_t v58 = v78;
      uint64_t v59 = (uint64_t)&v78[*(int *)(v76 + 48)];
      sub_100006AB0((uint64_t)v50, (uint64_t)v78, (uint64_t *)&unk_1006C2200);
      sub_100006AB0(v51, v59, (uint64_t *)&unk_1006C2200);
      uint64_t v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
      if (v60((uint64_t)v58, 1, v48) == 1)
      {
        sub_100003F10(v51, (uint64_t *)&unk_1006C2200);
        sub_100003F10((uint64_t)v50, (uint64_t *)&unk_1006C2200);
        int v61 = v60(v59, 1, v48);
        id v42 = v91;
        if (v61 == 1)
        {
          sub_100003F10((uint64_t)v58, (uint64_t *)&unk_1006C2200);
          char v54 = 1;
          uint64_t v19 = v75;
          goto LABEL_24;
        }
      }
      else
      {
        uint64_t v62 = v77;
        uint64_t v63 = v74;
        sub_100006AB0((uint64_t)v58, (uint64_t)v74, (uint64_t *)&unk_1006C2200);
        int v64 = v60(v59, 1, v48);
        id v42 = v91;
        if (v64 != 1)
        {
          (*(void (**)(unsigned char *, uint64_t, uint64_t))(v49 + 32))(v62, v59, v48);
          sub_100045D9C((unint64_t *)&unk_1006AEE70, (void (*)(uint64_t))&type metadata accessor for FMFLocationAlertAcceptanceStatus);
          char v54 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v65 = *(void (**)(unsigned char *, uint64_t))(v49 + 8);
          v65(v62, v48);
          sub_100003F10(v51, (uint64_t *)&unk_1006C2200);
          sub_100003F10((uint64_t)v85, (uint64_t *)&unk_1006C2200);
          v65(v74, v48);
          sub_100003F10((uint64_t)v58, (uint64_t *)&unk_1006C2200);
          uint64_t v19 = v75;
          goto LABEL_24;
        }
        sub_100003F10(v51, (uint64_t *)&unk_1006C2200);
        sub_100003F10((uint64_t)v85, (uint64_t *)&unk_1006C2200);
        (*(void (**)(unsigned char *, uint64_t))(v49 + 8))(v63, v48);
      }
      sub_100003F10((uint64_t)v58, (uint64_t *)&unk_1006AEE30);
      char v54 = 0;
      uint64_t v19 = v75;
      goto LABEL_24;
    }
    uint64_t v53 = v36;
    double v41 = *(void (**)(unsigned char *, uint64_t))(v20 + 8);
    v41(v53, v19);
    v41(v71, v19);
    id v42 = v91;
    v38(v91, v88, v19);
  }
  else
  {
    double v41 = *(void (**)(unsigned char *, uint64_t))(v20 + 8);
    v41(v30, v19);
    id v42 = v91;
    v89(v91, v88, v19);
  }
  char v54 = 0;
LABEL_24:
  v41(v42, v19);
  return v54 & 1;
}

uint64_t sub_10053A27C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  if (IndexPath.section.getter() == 2)
  {
    unint64_t v4 = IndexPath.row.getter();
    uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_cellsViewModel);
    uint64_t result = swift_beginAccess();
    if ((v4 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v7 = *v5;
      if (v4 < *(void *)(v7 + 16))
      {
        uint64_t v8 = *(void *)(type metadata accessor for FMPeopleCellViewModel() - 8);
        uint64_t v9 = (uint64_t *)(v7
                       + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
                       + *(void *)(v8 + 72) * v4);
        uint64_t v10 = *v9;
        uint64_t v11 = v9[1];
        swift_retain();
        sub_1000AFD74(v10, v11, a1);
        return swift_release();
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v12 = type metadata accessor for FMFFriend();
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    return v13(a1, 1, 1, v12);
  }
  return result;
}

uint64_t sub_10053A3F4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v82 = a1;
  uint64_t v3 = sub_10005D034(&qword_1006AF740);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v86 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v94 = (char *)&v80 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v80 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v80 - v11;
  uint64_t v13 = type metadata accessor for FMFFriend();
  uint64_t v96 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v102 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v80 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v105 = (char *)&v80 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v87 = (char *)&v80 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v81 = (char *)&v80 - v23;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v80 - v24;
  uint64_t v26 = FMFLocationAlert.friendId.getter();
  if (v27)
  {
    uint64_t v28 = v26;
    uint64_t v29 = v27;
    swift_retain();
    sub_1000AFD74(v28, v29, v12);
    swift_release();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v12, 1, v13) != 1)
    {
      uint64_t v73 = v96;
      uint64_t v74 = *(void (**)(char *, char *, uint64_t))(v96 + 32);
      v74(v25, v12, v13);
      uint64_t v75 = v82;
      v74(v82, v25, v13);
      return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v75, 0, 1, v13);
    }
    sub_100003F10((uint64_t)v12, &qword_1006AF740);
  }
  uint64_t result = FMFLocationAlert.followerIds.getter();
  if (!result) {
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v96 + 56))(v82, 1, 1, v13);
  }
  uint64_t v31 = result;
  uint64_t v93 = *(void *)(result + 16);
  if (!v93)
  {
LABEL_49:
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v96 + 56))(v82, 1, 1, v13);
  }
  unint64_t v32 = 0;
  uint64_t v91 = *(void *)(v2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator);
  uint64_t v90 = result + 32;
  BOOL v106 = (void (**)(char *, uint64_t))(v96 + 8);
  uint64_t v107 = v96 + 16;
  uint64_t v95 = (void (**)(char *, char *, uint64_t))(v96 + 32);
  uint64_t v103 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48);
  uint64_t v104 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v96 + 56);
  uint64_t v88 = v10;
  uint64_t v89 = result;
  while (v32 < *(void *)(v31 + 16))
  {
    unint64_t v97 = v32;
    uint64_t v33 = (uint64_t *)(v90 + 16 * v32);
    uint64_t v35 = *v33;
    uint64_t v34 = v33[1];
    uint64_t v36 = *(void *)(v91 + 48);
    unint64_t v37 = *(void *)(v36 + 40);
    swift_bridgeObjectRetain();
    uint64_t v98 = v36;
    swift_retain();
    uint64_t v38 = dispatch thunk of FMFManager.friends.getter();
    uint64_t v39 = *(void *)(v38 + 16);
    if (v39)
    {
      unint64_t v101 = v37;
      unint64_t v40 = v38 + ((*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80));
      uint64_t v41 = *(void *)(v96 + 72);
      id v42 = *(void (**)(char *, unint64_t, uint64_t))(v96 + 16);
      swift_bridgeObjectRetain();
      double v43 = v105;
      while (1)
      {
        v42(v43, v40, v13);
        if (FMFFriend.identifier.getter() == v35 && v44 == v34) {
          break;
        }
        char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v45) {
          goto LABEL_17;
        }
        double v43 = v105;
        (*v106)(v105, v13);
        v40 += v41;
        if (!--v39)
        {
          swift_bridgeObjectRelease();
          uint64_t v10 = v88;
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
LABEL_17:
      swift_bridgeObjectRelease();
      uint64_t v47 = (uint64_t)v94;
      (*v95)(v94, v105, v13);
      uint64_t v46 = *v104;
      (*v104)(v47, 0, 1, v13);
      uint64_t v10 = v88;
    }
    else
    {
LABEL_15:
      uint64_t v46 = *v104;
      uint64_t v47 = (uint64_t)v94;
      (*v104)((uint64_t)v94, 1, 1, v13);
    }
    swift_bridgeObjectRelease();
    uint64_t v48 = *v103;
    if ((*v103)(v47, 1, v13) == 1)
    {
      sub_100003F10(v47, &qword_1006AF740);
      uint64_t v49 = dispatch thunk of FMFManager.friends.getter();
      uint64_t v50 = *(void *)(v49 + 16);
      uint64_t v92 = v48;
      if (v50)
      {
        uint64_t v51 = v50;
        unint64_t v85 = v46;
        unint64_t v101 = v49 + ((*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80));
        uint64_t v52 = *(void *)(v96 + 72);
        BOOL v99 = *(void (**)(char *, unint64_t, uint64_t))(v96 + 16);
        uint64_t v100 = v52;
        uint64_t v84 = v49;
        swift_bridgeObjectRetain();
        uint64_t v53 = 0;
        char v54 = v102;
        do
        {
          v99(v54, v101 + v100 * v53, v13);
          uint64_t v55 = FMFFriend.contactHandles.getter();
          if (*(void *)(v55 + 16))
          {
            Hasher.init(_seed:)();
            String.hash(into:)();
            Swift::Int v56 = Hasher._finalize()();
            uint64_t v57 = -1 << *(unsigned char *)(v55 + 32);
            unint64_t v58 = v56 & ~v57;
            if ((*(void *)(v55 + 56 + ((v58 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v58))
            {
              uint64_t v59 = *(void *)(v55 + 48);
              uint64_t v60 = (void *)(v59 + 16 * v58);
              BOOL v61 = *v60 == v35 && v60[1] == v34;
              if (v61 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
LABEL_36:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v65 = (uint64_t)v86;
                (*v95)(v86, v102, v13);
                uint64_t v66 = 0;
                goto LABEL_37;
              }
              uint64_t v62 = ~v57;
              while (1)
              {
                unint64_t v58 = (v58 + 1) & v62;
                if (((*(void *)(v55 + 56 + ((v58 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v58) & 1) == 0) {
                  break;
                }
                uint64_t v63 = (void *)(v59 + 16 * v58);
                BOOL v64 = *v63 == v35 && v63[1] == v34;
                if (v64 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                  goto LABEL_36;
                }
              }
            }
          }
          ++v53;
          swift_bridgeObjectRelease();
          char v54 = v102;
          (*v106)(v102, v13);
        }
        while (v53 != v51);
        swift_bridgeObjectRelease();
        uint64_t v66 = 1;
        uint64_t v65 = (uint64_t)v86;
LABEL_37:
        uint64_t v10 = v88;
        uint64_t v31 = v89;
        uint64_t v46 = v85;
        uint64_t v48 = v92;
        v85(v65, v66, 1, v13);
      }
      else
      {
        uint64_t v31 = v89;
        uint64_t v65 = (uint64_t)v86;
        v46((uint64_t)v86, 1, 1, v13);
      }
      swift_bridgeObjectRelease();
      if (v48(v65, 1, v13) == 1)
      {
        sub_100003F10(v65, &qword_1006AF740);
        v46((uint64_t)v10, 1, 1, v13);
      }
      else
      {
        uint64_t v70 = v46;
        uint64_t v71 = *v95;
        uint64_t v72 = v83;
        (*v95)(v83, (char *)v65, v13);
        v71(v10, v72, v13);
        uint64_t v46 = v70;
        uint64_t v48 = v92;
        v70((uint64_t)v10, 0, 1, v13);
      }
    }
    else
    {
      uint64_t v67 = v46;
      int v68 = *v95;
      uint64_t v69 = v87;
      (*v95)(v87, (char *)v47, v13);
      v68(v10, v69, v13);
      uint64_t v46 = v67;
      uint64_t v31 = v89;
      v67((uint64_t)v10, 0, 1, v13);
    }
    swift_release();
    swift_bridgeObjectRelease();
    if (v48((uint64_t)v10, 1, v13) != 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v76 = (uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v46;
      uint64_t v77 = *v95;
      uint64_t v78 = v81;
      (*v95)(v81, v10, v13);
      uint64_t v79 = v82;
      v77(v82, v78, v13);
      return v76((uint64_t)v79, 0, 1, v13);
    }
    unint64_t v32 = v97 + 1;
    uint64_t result = sub_100003F10((uint64_t)v10, &qword_1006AF740);
    if (v32 == v93) {
      goto LABEL_49;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10053AE18(uint64_t a1)
{
  uint64_t v2 = sub_10005D034(&qword_1006C2280);
  __chkstk_darwin(v2 - 8);
  sub_100006AB0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1006C2280);
  return EnvironmentValues.backgroundMaterial.setter();
}

void sub_10053AEAC(char a1, uint64_t a2)
{
  id Strong = (id)swift_unknownObjectUnownedLoadStrong();
  if (a1) {
    sub_10053EDF4(a2);
  }
  else {
    sub_10053F594(a2);
  }
}

uint64_t sub_10053AF18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10005D034(&qword_1006C2280);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PeopleListPersonRow.State();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PeopleListPersonRow();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  PeopleListPersonRow.init(state:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v16 = type metadata accessor for Material();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
  uint64_t v17 = (uint64_t *)(a2 + *(int *)(sub_10005D034(&qword_1006C2258) + 36));
  uint64_t v18 = sub_10005D034(&qword_1006C2278);
  sub_100006AB0((uint64_t)v6, (uint64_t)v17 + *(int *)(v18 + 28), &qword_1006C2280);
  *uint64_t v17 = KeyPath;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(a2, v14, v11);
  sub_100003F10((uint64_t)v6, &qword_1006C2280);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

void sub_10053B190(int a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  LODWORD(v6) = a1;
  uint64_t v7 = type metadata accessor for FMPeopleCellViewModel();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_1000606BC(v10, (uint64_t)qword_1006D1E98);
  sub_100059D88((uint64_t)a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMPeopleCellViewModel);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v24 = a4;
    uint64_t v13 = swift_slowAlloc();
    int v23 = (int)v6;
    uint64_t v6 = (uint8_t *)v13;
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v26 = v14;
    uint64_t v15 = (uint64_t *)&v9[*(int *)(v7 + 24)];
    uint64_t v22 = a2;
    uint64_t v17 = *v15;
    unint64_t v16 = v15[1];
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1000606F4(v17, v16, &v26);
    a4 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a2 = v22;
    swift_bridgeObjectRelease();
    sub_100059DF0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMPeopleCellViewModel);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMPeopleListDataSource: accept action for %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    LOBYTE(v6) = v23;
    swift_slowDealloc();
  }
  else
  {
    sub_100059DF0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMPeopleCellViewModel);
  }

  id Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v20 = *a2;
  uint64_t v19 = a2[1];
  if (v6)
  {
    swift_retain();
    sub_10053D210(v20, v19, (void (*)(char *, uint64_t))sub_1005423CC, a4);

    swift_release();
  }
  else
  {
    sub_10053D5E0(v20, v19);
  }
}

void sub_10053B45C()
{
  uint64_t v0 = type metadata accessor for FMFActionStatus();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for FMFActionStatus.success(_:), v0);
  sub_100045D9C((unint64_t *)&unk_1006C22B0, (void (*)(uint64_t))&type metadata accessor for FMFActionStatus);
  char v4 = dispatch thunk of static Equatable.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if ((v4 & 1) == 0)
  {
    swift_beginAccess();
    id Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v6 = Strong;
      [Strong reloadData];
    }
  }
}

id sub_10053B5DC()
{
  swift_beginAccess();
  id Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v1 = Strong, v2 = [Strong isHighlighted], v1, (v2 & 1) != 0))
  {
    uint64_t v3 = &selRef_systemFillColor;
  }
  else
  {
    uint64_t v3 = &selRef_clearColor;
  }
  id v4 = [self *v3];

  return v4;
}

uint64_t sub_10053B67C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWallTime();
  uint64_t v20 = *(void *)(v4 - 8);
  uint64_t v21 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v19 = (char *)&v19 - v8;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  __chkstk_darwin(v9);
  uint64_t v10 = OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_delayedUpdateWorkItem;
  if (*(void *)(a1 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_delayedUpdateWorkItem))
  {
    swift_retain();
    dispatch thunk of DispatchWorkItem.cancel()();
    swift_release();
  }
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = a2;
  aBlock[4] = sub_100541A50;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  void aBlock[3] = &unk_100644BB0;
  _Block_copy(aBlock);
  uint64_t v22 = _swiftEmptyArrayStorage;
  sub_100045D9C((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  swift_retain();
  swift_retain();
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for DispatchWorkItem();
  swift_allocObject();
  uint64_t v13 = DispatchWorkItem.init(flags:block:)();
  swift_release();
  swift_release();
  *(void *)(a1 + v10) = v13;
  swift_retain();
  swift_release();
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchWallTime.now()();
  uint64_t v15 = v19;
  + infix(_:_:)();
  uint64_t v16 = v21;
  uint64_t v17 = *(void (**)(char *, uint64_t))(v20 + 8);
  v17(v7, v21);
  OS_dispatch_queue.asyncAfter(wallDeadline:execute:)();
  swift_release();

  return ((uint64_t (*)(char *, uint64_t))v17)(v15, v16);
}

void sub_10053B9F8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = dispatch thunk of FMFManager.friends.getter();
    swift_beginAccess();
    uint64_t v3 = swift_unknownObjectWeakLoadStrong();
    if (v3)
    {
      uint64_t v4 = (void *)v3;
      uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator);
      swift_retain();

      uint64_t v6 = (char *)*(id *)(v5 + 40);
      swift_release();
      uint64_t v7 = *(void **)&v6[OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation];
      id v8 = v7;
    }
    else
    {
      uint64_t v7 = 0;
    }
    sub_100043D38(v2, v7, 0, 0);

    swift_bridgeObjectRelease();
  }
}

void sub_10053BAF4(uint64_t a1, NSObject *a2)
{
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator);
  swift_retain();
  uint64_t v4 = dispatch thunk of FMFManager.friends.getter();
  swift_release();
  uint64_t v5 = *(void **)(*(void *)(v3 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  id v6 = v5;
  sub_100043D38(v4, v5, a2, 0);
  swift_bridgeObjectRelease();
}

id sub_10053BBAC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator);
  swift_retain();
  uint64_t v2 = dispatch thunk of FMFManager.friends.getter();
  swift_release();
  uint64_t v3 = *(void **)(*(void *)(v1 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  id v4 = v3;
  sub_100043D38(v2, v3, 0, 0);
  swift_bridgeObjectRelease();

  return sub_100039EF8();
}

uint64_t sub_10053BC4C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  __chkstk_darwin(v4);
  id v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMSelectedSection();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v34 - v11;
  uint64_t v13 = sub_10005D034(&qword_1006AF740);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for FMFFriend();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = a1;
  sub_10053A27C(v15);
  int v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  uint64_t v37 = v7;
  if (v20 == 1)
  {
    uint64_t v35 = v10;
    uint64_t v36 = v12;
    sub_100003F10((uint64_t)v15, &qword_1006AF740);
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_1000606BC(v21, (uint64_t)qword_1006D1E98);
    uint64_t v22 = v38;
    uint64_t v23 = v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v6, v40, v39);
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      v42[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136315138;
      uint64_t v34 = v26 + 4;
      sub_100045D9C(&qword_1006B6C70, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v41 = sub_1000606F4(v27, v28, v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v23);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "FMPeopleListDataSource: cannnot select person at indexPath: %s", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v23);
    }

    uint64_t v10 = v35;
    uint64_t v12 = v36;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    uint64_t v29 = *(void *)(*(void *)(v2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator) + 56);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v12, v19, v16);
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = v29 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess();
    sub_100059D88(v30, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    swift_beginAccess();
    swift_retain();
    sub_100009A88((uint64_t)v12, v30);
    swift_endAccess();
    sub_100053CA0((unint64_t)v10);
    sub_100059DF0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    sub_100059DF0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    swift_release();
    swift_retain();
    dispatch thunk of FMFManager.updateLastActiveTimestamp()();
    swift_release();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  uint64_t result = IndexPath.section.getter();
  if (!result)
  {
    uint64_t v32 = *(void *)(*(void *)(v2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator) + 56);
    swift_storeEnumTagMultiPayload();
    uint64_t v33 = v32 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess();
    sub_100059D88(v33, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    swift_beginAccess();
    swift_retain();
    sub_100009A88((uint64_t)v12, v33);
    swift_endAccess();
    sub_100053CA0((unint64_t)v10);
    sub_100059DF0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    sub_100059DF0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    return swift_release();
  }
  return result;
}

void sub_10053C268()
{
  uint64_t v1 = type metadata accessor for FMSelectedSection();
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  id v6 = (char *)&v19 - v5;
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator);
  swift_retain();
  char v8 = dispatch thunk of FMFManager.friendsOperationsRestricted.getter();
  swift_release();
  if (v8)
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_1000606BC(v9, (uint64_t)qword_1006D1E98);
    os_log_t v20 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v10, "Add friend operation is restricted.", v11, 2u);
      swift_slowDealloc();
    }
    os_log_t v12 = v20;
  }
  else
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_1000606BC(v13, (uint64_t)qword_1006D1E98);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "FMPeopleListDataSource: add person requested", v16, 2u);
      swift_slowDealloc();
    }

    uint64_t v17 = *(void *)(v7 + 56);
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = v17 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess();
    sub_100059D88(v18, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    swift_beginAccess();
    swift_retain();
    sub_100009A88((uint64_t)v6, v18);
    swift_endAccess();
    sub_100053CA0((unint64_t)v4);
    sub_100059DF0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    sub_100059DF0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMSelectedSection);
    swift_release();
  }
}

void *sub_10053C5C4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v88 = *(void *)(v4 - 8);
  uint64_t v89 = v4;
  uint64_t v5 = *(void *)(v88 + 64);
  __chkstk_darwin(v4);
  uint64_t v87 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10005D034(&qword_1006AF740);
  __chkstk_darwin(v6 - 8);
  char v8 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMFFriend();
  uint64_t v93 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v93 + 64);
  uint64_t v11 = __chkstk_darwin(v9);
  __chkstk_darwin(v11);
  uint64_t v92 = (char *)&v81 - v12;
  uint64_t v13 = (int *)type metadata accessor for FMPeopleCellViewModel();
  uint64_t v14 = *((void *)v13 - 1);
  __chkstk_darwin(v13);
  uint64_t v91 = (uint64_t)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = IndexPath.section.getter();
  uint64_t result = 0;
  if (v16 == 2)
  {
    uint64_t v90 = v9;
    unint64_t v100 = (unint64_t)_swiftEmptyArrayStorage;
    unint64_t v18 = IndexPath.row.getter();
    uint64_t v19 = &v2[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_cellsViewModel];
    swift_beginAccess();
    if ((v18 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v20 = *(void *)v19;
      if (v18 < *(void *)(*(void *)v19 + 16))
      {
        uint64_t v85 = v10;
        uint64_t v86 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v21 = v2;
        uint64_t v22 = v91;
        sub_100059D88(v20+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v18, v91, (uint64_t (*)(void))type metadata accessor for FMPeopleCellViewModel);
        uint64_t v23 = v13[21];
        int v84 = *(unsigned __int8 *)(v22 + v13[20]);
        int v82 = *(unsigned __int8 *)(v22 + v23);
        swift_retain();
        char v24 = dispatch thunk of FMFManager.friendsOperationsRestricted.getter();
        swift_release();
        char v25 = *(unsigned char *)(v22 + v13[22]);
        sub_10053A27C(v8);
        uint64_t v26 = v93;
        uint64_t v27 = v90;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v8, 1, v90) == 1)
        {
          sub_100059DF0(v22, (uint64_t (*)(void))type metadata accessor for FMPeopleCellViewModel);
          sub_100003F10((uint64_t)v8, &qword_1006AF740);
          return _swiftEmptyArrayStorage;
        }
        uint64_t v81 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
        v81(v92, v8, v27);
        id v83 = v21;
        if (v24 & 1 | ((v25 & 1) == 0))
        {
LABEL_9:
          if (v84)
          {
            uint64_t aBlock = 0;
            unint64_t v95 = 0xE000000000000000;
            _StringGuts.grow(_:)(20);
            swift_bridgeObjectRelease();
            id v46 = [self mainBundle];
            v101._uint64_t countAndFlagsBits = 0xD00000000000003BLL;
            v101._object = (void *)0x80000001005856A0;
            v47._object = (void *)0x8000000100585670;
            v47._uint64_t countAndFlagsBits = 0xD000000000000029;
            v48._uint64_t countAndFlagsBits = 0;
            v48._object = (void *)0xE000000000000000;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v47, (Swift::String_optional)0, (NSBundle)v46, v48, v101);

            uint64_t v49 = v93 + 16;
            uint64_t v50 = v86;
            uint64_t v51 = v90;
            (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v86, v92, v90);
            unint64_t v52 = (*(unsigned __int8 *)(v49 + 64) + 24) & ~(unint64_t)*(unsigned __int8 *)(v49 + 64);
            uint64_t v53 = swift_allocObject();
            id v54 = v83;
            *(void *)(v53 + 16) = v83;
            v81((char *)(v53 + v52), v50, v51);
            uint64_t v55 = swift_allocObject();
            *(void *)(v55 + 16) = sub_100541DA8;
            *(void *)(v55 + 24) = v53;
            id v56 = v54;
            NSString v57 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            uint64_t v98 = sub_100542488;
            uint64_t v99 = v55;
            uint64_t aBlock = _NSConcreteStackBlock;
            unint64_t v95 = 1107296256;
            uint64_t v96 = sub_100538CCC;
            unint64_t v97 = &unk_100644EA8;
            unint64_t v58 = _Block_copy(&aBlock);
            id v59 = [self contextualActionWithStyle:0 title:v57 handler:v58];

            _Block_release(v58);
            swift_release();
            NSString v60 = String._bridgeToObjectiveC()();
            id v61 = [self systemImageNamed:v60];

            [v59 setImage:v61];
            id v62 = v59;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            uint64_t v63 = v91;
            if (*(void *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              goto LABEL_11;
            }
          }
          else
          {
            uint64_t v63 = v91;
            if (!v82) {
              goto LABEL_15;
            }
            uint64_t aBlock = 0;
            unint64_t v95 = 0xE000000000000000;
            _StringGuts.grow(_:)(20);
            swift_bridgeObjectRelease();
            id v64 = [self mainBundle];
            v65._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
            v102._uint64_t countAndFlagsBits = 0xD00000000000003ELL;
            v102._object = (void *)0x8000000100585710;
            v65._object = (void *)0x80000001005856E0;
            v66._uint64_t countAndFlagsBits = 0;
            v66._object = (void *)0xE000000000000000;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v65, (Swift::String_optional)0, (NSBundle)v64, v66, v102);

            uint64_t v67 = v93 + 16;
            int v68 = v86;
            uint64_t v69 = v90;
            (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v86, v92, v90);
            unint64_t v70 = (*(unsigned __int8 *)(v67 + 64) + 24) & ~(unint64_t)*(unsigned __int8 *)(v67 + 64);
            uint64_t v71 = swift_allocObject();
            id v72 = v83;
            *(void *)(v71 + 16) = v83;
            v81((char *)(v71 + v70), v68, v69);
            uint64_t v73 = swift_allocObject();
            *(void *)(v73 + 16) = sub_100541C60;
            *(void *)(v73 + 24) = v71;
            id v74 = v72;
            NSString v75 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            uint64_t v98 = sub_100541CB0;
            uint64_t v99 = v73;
            uint64_t aBlock = _NSConcreteStackBlock;
            unint64_t v95 = 1107296256;
            uint64_t v96 = sub_100538CCC;
            unint64_t v97 = &unk_100644E30;
            uint64_t v76 = _Block_copy(&aBlock);
            id v77 = [self contextualActionWithStyle:0 title:v75 handler:v76];

            _Block_release(v76);
            swift_release();
            NSString v78 = String._bridgeToObjectiveC()();
            id v79 = [self systemImageNamed:v78];

            [v77 setImage:v79];
            id v80 = [self systemBlueColor];
            [v77 setBackgroundColor:v80];

            id v62 = v77;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            {
LABEL_11:
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();

LABEL_15:
              (*(void (**)(char *, uint64_t))(v93 + 8))(v92, v90);
              sub_100059DF0(v63, (uint64_t (*)(void))type metadata accessor for FMPeopleCellViewModel);
              return (void *)v100;
            }
          }
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          goto LABEL_11;
        }
        uint64_t v28 = v93 + 16;
        uint64_t v29 = v86;
        uint64_t v30 = v90;
        (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v86, v92, v90);
        uint64_t v31 = v88;
        uint64_t v32 = v87;
        uint64_t v33 = a1;
        uint64_t v34 = v89;
        (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v87, v33, v89);
        unint64_t v35 = (*(unsigned __int8 *)(v28 + 64) + 24) & ~(unint64_t)*(unsigned __int8 *)(v28 + 64);
        unint64_t v36 = (v85 + *(unsigned __int8 *)(v31 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
        uint64_t v37 = swift_allocObject();
        *(void *)(v37 + 16) = v83;
        v81((char *)(v37 + v35), v29, v30);
        (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v37 + v36, v32, v34);
        uint64_t v38 = swift_allocObject();
        *(void *)(v38 + 16) = sub_100541FB0;
        *(void *)(v38 + 24) = v37;
        uint64_t v98 = sub_100542488;
        uint64_t v99 = v38;
        uint64_t aBlock = _NSConcreteStackBlock;
        unint64_t v95 = 1107296256;
        uint64_t v96 = sub_100538CCC;
        unint64_t v97 = &unk_100644F20;
        uint64_t v39 = _Block_copy(&aBlock);
        uint64_t v40 = self;
        id v41 = v83;
        id v42 = [v40 contextualActionWithStyle:1 title:0 handler:v39];
        _Block_release(v39);
        swift_release();
        NSString v43 = String._bridgeToObjectiveC()();
        id v44 = [self systemImageNamed:v43];

        [v42 setImage:v44];
        id v45 = [self systemRedColor];
        [v42 setBackgroundColor:v45];

        char v8 = (char *)v42;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        {
LABEL_8:
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          goto LABEL_9;
        }
LABEL_19:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        goto LABEL_8;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
  return result;
}

void sub_10053D210(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4)
{
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v7 = type metadata accessor for FMFRelationshipType();
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v13 = sub_10005D034(&qword_1006AF740);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for FMFFriend();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = ((char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v29 = v4;
  swift_retain();
  sub_1000AFD74(a1, a2, v15);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_100003F10((uint64_t)v15, &qword_1006AF740);
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_1000606BC(v20, (uint64_t)qword_1006D1E98);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "FMPeopleListDataSource: Cannot accept action for unknown friend", v23, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    (*(void (**)(NSObject *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    FMFFriend.relationshipType.getter();
    static FMFRelationshipType.willFollowMyLocation.getter();
    sub_100045D9C((unint64_t *)&unk_1006B6110, (void (*)(uint64_t))&type metadata accessor for FMFRelationshipType);
    char v24 = dispatch thunk of SetAlgebra.isSuperset(of:)();
    char v25 = *(void (**)(char *, uint64_t))(v30 + 8);
    v25(v10, v7);
    v25(v12, v7);
    if (v24)
    {
      sub_10053DB04(v19);
    }
    else
    {
      char v26 = FMFFriend.optedNotToShare.getter();
      if (v26 != 2 && (v26 & 1) == 0) {
        sub_10053D9D0((uint64_t)v19, v27, v28);
      }
    }
    (*(void (**)(NSObject *, uint64_t))(v17 + 8))(v19, v16);
  }
}

void sub_10053D5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FMFRelationshipType();
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = sub_10005D034(&qword_1006AF740);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FMFFriend();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *(void *)(v2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator);
  swift_retain();
  sub_1000AFD74(a1, a2, v13);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    FMFFriend.relationshipType.getter();
    static FMFRelationshipType.willFollowMyLocation.getter();
    sub_100045D9C((unint64_t *)&unk_1006B6110, (void (*)(uint64_t))&type metadata accessor for FMFRelationshipType);
    char v22 = dispatch thunk of SetAlgebra.isSuperset(of:)();
    uint64_t v23 = *(void (**)(char *, uint64_t))(v26 + 8);
    v23(v8, v5);
    v23(v10, v5);
    if (v22)
    {
      swift_retain();
      sub_1000F4438((uint64_t)v17);
    }
    else
    {
      char v24 = FMFFriend.optedNotToShare.getter();
      if (v24 == 2 || (v24 & 1) != 0) {
        goto LABEL_13;
      }
      swift_retain();
      sub_1000F47A4((uint64_t)v17);
    }
    swift_release();
LABEL_13:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    return;
  }
  sub_100003F10((uint64_t)v13, &qword_1006AF740);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_1000606BC(v18, (uint64_t)qword_1006D1E98);
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMPeopleListDataSource: Cannot decline action for unknown friend", v21, 2u);
    swift_slowDealloc();
  }
}

void sub_10053D9D0(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3)
{
  uint64_t v7 = *(void **)(v3 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_tableView);
  id v8 = [v7 traitCollection];
  id v9 = [v8 horizontalSizeClass];

  swift_retain();
  id v10 = v7;
  while (1)
  {
    uint64_t v11 = v10;
    id v13 = [v10 nextResponder];

    if (!v13) {
      break;
    }
    self;
    uint64_t v12 = (void *)swift_dynamicCastObjCClass();
    id v10 = v13;
    if (v12) {
      goto LABEL_6;
    }
  }
  uint64_t v12 = 0;
LABEL_6:
  sub_1000F1328(a1, v9 != (id)1, v12, 0, a2, a3);
  swift_release();
}

void sub_10053DB04(NSObject *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_tableView);
  swift_retain();
  id v4 = v3;
  while (1)
  {
    uint64_t v5 = v4;
    id v7 = [v4 nextResponder];

    if (!v7) {
      break;
    }
    self;
    uint64_t v6 = (void *)swift_dynamicCastObjCClass();
    id v4 = v7;
    if (v6) {
      goto LABEL_6;
    }
  }
  uint64_t v6 = 0;
LABEL_6:
  sub_1000F3EA0(a1, v6);
  swift_release();
}

uint64_t sub_10053DBE4(uint64_t a1)
{
  return sub_10053DC5C(a1, "FMPeopleListDataSource: Favorite button pressed", (uint64_t)&unk_100644D78, (uint64_t)sub_100541C00, (void (*)(char *, uint64_t, uint64_t))sub_1000F710C);
}

uint64_t sub_10053DC20(uint64_t a1)
{
  return sub_10053DC5C(a1, "FMPeopleListDataSource: Unfavorite button pressed", (uint64_t)&unk_100644D00, (uint64_t)sub_100541BC0, (void (*)(char *, uint64_t, uint64_t))sub_1000F7138);
}

uint64_t sub_10053DC5C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, void (*a5)(char *, uint64_t, uint64_t))
{
  id v9 = v5;
  uint64_t v11 = sub_10005D034(&qword_1006AF740);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_1000606BC(v14, (uint64_t)qword_1006D1E98);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, a2, v17, 2u);
    swift_slowDealloc();
  }

  uint64_t v18 = type metadata accessor for FMFFriend();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v13, a1, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v18);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v9;
  swift_retain();
  id v21 = v9;
  a5(v13, a4, v20);
  swift_release();
  swift_release();
  return sub_100003F10((uint64_t)v13, &qword_1006AF740);
}

uint64_t sub_10053DE90(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v21 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v15 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  aBlock[4] = a5;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  void aBlock[3] = a6;
  uint64_t v17 = _Block_copy(aBlock);
  id v18 = a3;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100045D9C((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v20);
}

uint64_t sub_10053E164(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v55 = a2;
  uint64_t v5 = sub_10005D034(&qword_1006AF740);
  __chkstk_darwin(v5 - 8);
  id v62 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMPeopleCellViewModel();
  __chkstk_darwin(v7 - 8);
  uint64_t v54 = (uint64_t)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMFFriend();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v58 = v12;
  id v59 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v53 - v13;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_1000606BC(v15, (uint64_t)qword_1006D1E98);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    id v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "FMPeopleListDataSource: Remove button pressed", v18, 2u);
    swift_slowDealloc();
  }

  v2[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_isRemovingCell] = 1;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v61 = a1;
  id v56 = v19;
  uint64_t v57 = v10 + 16;
  v19(v14, a1, v9);
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v60 = v10;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v53 = v2;
    char v24 = (uint8_t *)v23;
    v64[0] = swift_slowAlloc();
    *(_DWORD *)char v24 = 136315138;
    uint64_t v25 = FMFFriend.debugDescription.getter();
    uint64_t v63 = sub_1000606F4(v25, v26, v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v27 = v14;
    uint64_t v28 = v9;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v27, v9);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "FMPeopleListDataSource: Continue action pressed for person: %s", v24, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v3 = v53;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v29 = v14;
    uint64_t v28 = v9;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
  }

  uint64_t v30 = (uint64_t *)&v3[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_cellsViewModel];
  swift_beginAccess();
  uint64_t v31 = *v30;
  swift_bridgeObjectRetain();
  uint64_t v32 = v61;
  unint64_t v33 = sub_100537ED8(v61, v31);
  char v35 = v34;
  swift_bridgeObjectRelease();
  if ((v35 & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v36 = v54;
    sub_100257CC4(v33, v54);
    sub_100059DF0(v36, (uint64_t (*)(void))type metadata accessor for FMPeopleCellViewModel);
    swift_endAccess();
    uint64_t v37 = *(void **)&v3[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_tableView];
    [v37 beginUpdates];
    sub_10005D034(&qword_1006AF778);
    uint64_t v38 = type metadata accessor for IndexPath();
    uint64_t v39 = *(void *)(v38 - 8);
    uint64_t v40 = v3;
    unint64_t v41 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_10055B970;
    unint64_t v43 = v42 + v41;
    uint64_t v3 = v40;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v39 + 16))(v43, v55, v38);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v37 deleteRowsAtIndexPaths:isa withRowAnimation:2];

    [v37 endUpdates];
  }
  uint64_t v45 = (uint64_t)v62;
  id v46 = v56;
  v56(v62, v32, v28);
  uint64_t v47 = v60;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56))(v45, 0, 1, v28);
  Swift::String v48 = v59;
  v46(v59, v32, v28);
  unint64_t v49 = (*(unsigned __int8 *)(v47 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = v3;
  (*(void (**)(unint64_t, char *, uint64_t))(v47 + 32))(v50 + v49, v48, v28);
  swift_retain();
  uint64_t v51 = v3;
  sub_1000F6EB8(v45, (uint64_t)sub_100541AD4, v50);
  swift_release();
  swift_release();
  return sub_100003F10(v45, &qword_1006AF740);
}

uint64_t sub_10053E7C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v40 = a4;
  uint64_t v41 = type metadata accessor for FMFFriend();
  uint64_t v5 = *(void *)(v41 - 8);
  uint64_t v6 = __chkstk_darwin(v41);
  uint64_t v39 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v38 - v8;
  uint64_t v10 = type metadata accessor for FMFActionStatus();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_retain();
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = sub_100042664(v14, (uint64_t (*)(void))type metadata accessor for FMPeopleCellViewModel, (uint64_t (*)(void))type metadata accessor for FMPeopleCellViewModel, (uint64_t)&off_1006238C0);
  swift_bridgeObjectRelease();
  sub_10005E24C((uint64_t)v15);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v42 = a3;
  *(unsigned char *)(a3 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_isRemovingCell) = 0;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for FMFActionStatus.success(_:), v10);
  sub_100045D9C(&qword_1006C2220, (void (*)(uint64_t))&type metadata accessor for FMFActionStatus);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  uint64_t v17 = v43;
  uint64_t v16 = v44;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v16 == v17)
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_1000606BC(v18, (uint64_t)qword_1006D1E98);
    uint64_t v19 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v9, v40, v41);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      BOOL v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      *(_DWORD *)BOOL v22 = 136315138;
      uint64_t v23 = FMFFriend.debugDescription.getter();
      uint64_t v43 = sub_1000606F4(v23, v24, &v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v19);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "FMPeopleListDataSource: Remove completed succesfully for person: %s", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v19);
    }
  }
  else
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_1000606BC(v25, (uint64_t)qword_1006D1E98);
    unint64_t v26 = v39;
    uint64_t v27 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v39, v40, v41);
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136315138;
      uint64_t v31 = FMFFriend.debugDescription.getter();
      uint64_t v43 = sub_1000606F4(v31, v32, &v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v26, v27);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "FMPeopleListDataSource: Remove failed for person: %s", v30, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v26, v27);
    }
  }
  uint64_t v33 = v42;
  uint64_t v34 = v42 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v36 = *(void *)(v34 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v36 + 8))(v33, &off_100644900, ObjectType, v36);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10053EDF4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006C2200);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10005D034((uint64_t *)&unk_1006AF6F0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10005D034((uint64_t *)&unk_1006C2210);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10005D034(&qword_1006AF730);
  __chkstk_darwin(v13 - 8);
  id v59 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10005D034(&qword_1006BB9A0);
  __chkstk_darwin(v15 - 8);
  uint64_t v61 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for FMFLocationAlert();
  uint64_t v17 = *(void *)(v63 - 8);
  uint64_t v18 = __chkstk_darwin(v63);
  uint64_t v57 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  BOOL v22 = (char *)&v52 - v21;
  __chkstk_darwin(v20);
  uint64_t v58 = (char *)&v52 - v23;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  sub_1000606BC(v24, (uint64_t)qword_1006D1E98);
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v27 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "FMPeopleListDataSource: handleAllowFenceRequest()", v27, 2u);
    swift_slowDealloc();
  }

  uint64_t v28 = *(void *)(a1 + 16);
  uint64_t v62 = *(void *)(a1 + 24);
  uint64_t v56 = *(void *)(v2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator);
  swift_retain();
  uint64_t v29 = dispatch thunk of FMFManager.locationAlerts.getter();
  swift_release();
  if (!v29)
  {
    uint64_t v40 = (uint64_t)v61;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v61, 1, 1, v63);
    return sub_100003F10(v40, &qword_1006BB9A0);
  }
  uint64_t v60 = v17;
  uint64_t v30 = *(void *)(v29 + 16);
  uint64_t v31 = v63;
  if (!v30)
  {
    uint64_t v41 = 1;
LABEL_17:
    uint64_t v42 = v60;
    uint64_t v40 = (uint64_t)v61;
    goto LABEL_19;
  }
  uint64_t v53 = v12;
  uint64_t v54 = v9;
  uint64_t v55 = v6;
  unint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v60 + 16);
  unint64_t v33 = v29 + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80));
  uint64_t v34 = (void (**)(char *, uint64_t))(v60 + 8);
  uint64_t v35 = v29;
  uint64_t v36 = *(void *)(v60 + 72);
  uint64_t v52 = v35;
  swift_bridgeObjectRetain();
  while (1)
  {
    v32(v22, v33, v31);
    uint64_t v38 = FMFLocationAlert.identifier.getter();
    if (!v39) {
      goto LABEL_9;
    }
    if (v38 == v28 && v39 == v62) {
      break;
    }
    char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v37) {
      goto LABEL_18;
    }
LABEL_9:
    uint64_t v31 = v63;
    (*v34)(v22, v63);
    v33 += v36;
    if (!--v30)
    {
      swift_bridgeObjectRelease();
      uint64_t v41 = 1;
      uint64_t v9 = v54;
      uint64_t v6 = v55;
      uint64_t v12 = v53;
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRelease();
LABEL_18:
  swift_bridgeObjectRelease();
  uint64_t v42 = v60;
  uint64_t v40 = (uint64_t)v61;
  uint64_t v31 = v63;
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v61, v22, v63);
  uint64_t v41 = 0;
  uint64_t v9 = v54;
  uint64_t v6 = v55;
  uint64_t v12 = v53;
LABEL_19:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56))(v40, v41, 1, v31);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v40, 1, v31) == 1) {
    return sub_100003F10(v40, &qword_1006BB9A0);
  }
  uint64_t v44 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v58, v40, v31);
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v57, v44, v31);
  uint64_t v45 = type metadata accessor for FMFAddress();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v59, 1, 1, v45);
  uint64_t v46 = type metadata accessor for FMFLocationAlertTriggerType();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v12, 1, 1, v46);
  uint64_t v47 = type metadata accessor for FMFSchedule();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v9, 1, 1, v47);
  uint64_t v48 = enum case for FMFLocationAlertAcceptanceStatus.accepted(_:);
  uint64_t v49 = type metadata accessor for FMFLocationAlertAcceptanceStatus();
  uint64_t v50 = *(void *)(v49 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 104))(v6, v48, v49);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v6, 0, 1, v49);
  type metadata accessor for FMFUpdateLocationAlertAction();
  swift_allocObject();
  uint64_t v51 = FMFUpdateLocationAlertAction.init(locationAlert:location:radius:address:label:triggerType:isOn:repeating:phoneNumbers:emails:schedule:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:)();
  swift_retain();
  sub_1000F4F54(v51, (uint64_t)sub_10053F588, 0);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v44, v63);
}

void sub_10053F588(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_10053F594(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10005D034(&qword_1006BB9A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMFLocationAlert();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v40 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v36 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v36 - v14;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_1000606BC(v16, (uint64_t)qword_1006D1E98);
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "FMPeopleListDataSource: handleDeclineFenceRequest()", v19, 2u);
    swift_slowDealloc();
  }

  uint64_t v20 = *(void *)(a1 + 16);
  uint64_t v42 = *(void *)(a1 + 24);
  uint64_t v21 = *(void *)(v2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator);
  swift_retain();
  uint64_t v22 = dispatch thunk of FMFManager.locationAlerts.getter();
  swift_release();
  if (!v22)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    return sub_100003F10((uint64_t)v6, &qword_1006BB9A0);
  }
  uint64_t v39 = v6;
  uint64_t v23 = *(void *)(v22 + 16);
  if (!v23)
  {
    uint64_t v33 = 1;
    uint64_t v6 = v39;
    goto LABEL_18;
  }
  v36[1] = v21;
  char v37 = v15;
  uint64_t v38 = v8;
  uint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v24 = v8 + 16;
  uint64_t v41 = v25;
  unint64_t v26 = v22 + ((*(unsigned __int8 *)(v24 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 64));
  uint64_t v27 = v22;
  uint64_t v28 = *(void *)(v24 + 56);
  v36[0] = v27;
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v30 = v7;
    v41(v13, v26, v7);
    uint64_t v31 = FMFLocationAlert.identifier.getter();
    if (!v32) {
      goto LABEL_9;
    }
    if (v31 == v20 && v32 == v42) {
      break;
    }
    char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v29) {
      goto LABEL_17;
    }
LABEL_9:
    uint64_t v7 = v30;
    (*(void (**)(char *, uint64_t))(v24 - 8))(v13, v30);
    v26 += v28;
    if (!--v23)
    {
      swift_bridgeObjectRelease();
      uint64_t v33 = 1;
      uint64_t v15 = v37;
      uint64_t v8 = v38;
      uint64_t v6 = v39;
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRelease();
LABEL_17:
  swift_bridgeObjectRelease();
  uint64_t v8 = v38;
  uint64_t v6 = v39;
  uint64_t v7 = v30;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v39, v13, v30);
  uint64_t v33 = 0;
  uint64_t v15 = v37;
LABEL_18:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v33, 1, v7);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_100003F10((uint64_t)v6, &qword_1006BB9A0);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v15, v6, v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v40, v15, v7);
  type metadata accessor for FMFRemoveLocationAlertAction();
  swift_allocObject();
  uint64_t v35 = FMFRemoveLocationAlertAction.init(locationAlert:)();
  swift_retain();
  sub_1000F4F54(v35, (uint64_t)sub_10053FA68, 0);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v15, v7);
}

void sub_10053FA68(uint64_t a1, uint64_t a2)
{
}

void sub_10053FA74(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v6 = type metadata accessor for FMFActionStatus();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_1000606BC(v10, (uint64_t)qword_1006D1E98);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v17 = a3;
    uint64_t v18 = 0;
    *(_DWORD *)uint64_t v13 = 136315394;
    unint64_t v19 = 0xE000000000000000;
    uint64_t v20 = v14;
    _print_unlocked<A, B>(_:_:)();
    uint64_t v18 = sub_1000606F4(v18, v19, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v18 = a2;
    swift_errorRetain();
    sub_10005D034(&qword_1006B4220);
    uint64_t v15 = String.init<A>(describing:)();
    uint64_t v18 = sub_1000606F4(v15, v16, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, v17, (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_errorRelease();
    swift_errorRelease();
  }
}

id sub_10053FDA8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPeopleListDataSource();
  return [super dealloc];
}

void sub_10053FDDC()
{
}

uint64_t sub_10053FDE8(uint64_t a1, uint64_t a2)
{
  return sub_100540B1C(a2);
}

uint64_t sub_10053FDF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005412CC(a1, a3);
}

uint64_t sub_10053FDF8(uint64_t a1, char a2)
{
  return sub_100540F08(a2);
}

uint64_t sub_10053FE00(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

char *sub_10053FE4C(uint64_t a1, void *a2)
{
  id v4 = objc_allocWithZone((Class)type metadata accessor for FMPeopleListDataSource());
  return sub_100049A5C(a1, a2);
}

uint64_t sub_10053FE98(unint64_t a1, unint64_t a2)
{
  sub_100006060(0, (unint64_t *)&qword_1006B9BF0);
  if (a2 >> 62)
  {
    uint64_t v4 = _CocoaArrayWrapper.subscript.getter();
    self;
    if (swift_dynamicCastObjCClass()) {
      return v4;
    }
LABEL_10:
    _StringGuts.grow(_:)(85);
    unint64_t v6 = 0xD000000000000046;
    unint64_t v5 = 0x80000001005A2420;
    goto LABEL_11;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
  swift_unknownObjectRetain();
  self;
  if (swift_dynamicCastObjCClass()) {
    return v4;
  }
  _StringGuts.grow(_:)(82);
  unint64_t v5 = 0x80000001005A23D0;
  unint64_t v6 = 0xD000000000000043;
LABEL_11:
  String.append(_:)(*(Swift::String *)&v6);
  v8._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 0x756F662074756220;
  v9._object = (void *)0xEB0000000020646ELL;
  String.append(_:)(v9);
  swift_getObjectType();
  swift_unknownObjectRelease();
  v10._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  uint64_t result = _assertionFailure(_:_:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100540084(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v94 = a1;
  uint64_t v7 = type metadata accessor for FMPeopleCellViewModel();
  uint64_t v8 = __chkstk_darwin(v7);
  unint64_t v95 = (uint64_t *)((char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v93 = (uint64_t *)((char *)&v90 - v11);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (uint64_t *)((char *)&v90 - v13);
  __chkstk_darwin(v12);
  uint64_t v17 = (uint64_t *)((char *)&v90 - v16);
  uint64_t v19 = *(void *)(v18 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  if (a2 - v94 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_73;
  }
  int64_t v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_74;
  }
  uint64_t v21 = (uint64_t)(a2 - v94) / v19;
  unint64_t v103 = v94;
  unint64_t v102 = a4;
  uint64_t v22 = v20 / v19;
  uint64_t v96 = v15;
  if (v21 >= v20 / v19)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      uint64_t v24 = v22 * v19;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v54 = a4 + v24;
      unint64_t v101 = a4 + v24;
      unint64_t v103 = a2;
      if (v24 >= 1 && v94 < a2)
      {
        uint64_t v56 = -v19;
        uint64_t v91 = -v19;
        uint64_t v57 = v93;
        do
        {
          sub_100059D88(v54 + v56, (uint64_t)v57, (uint64_t (*)(void))type metadata accessor for FMPeopleCellViewModel);
          unint64_t v58 = a2 + v56;
          id v59 = v95;
          sub_100059D88(a2 + v56, (uint64_t)v95, (uint64_t (*)(void))type metadata accessor for FMPeopleCellViewModel);
          uint64_t v60 = (uint64_t)v59;
          uint64_t v61 = v96;
          uint64_t v62 = v96[17];
          double v63 = *(double *)((char *)v57 + v62);
          double v64 = *(double *)((char *)v59 + v62);
          BOOL v65 = v63 < v64;
          if (v63 == v64
            && (uint64_t v66 = v96[16],
                double v67 = *(double *)((char *)v57 + v66),
                double v68 = *(double *)((char *)v59 + v66),
                BOOL v65 = v67 < v68,
                v67 == v68))
          {
            uint64_t v69 = (uint64_t *)((char *)v57 + v96[6]);
            uint64_t v70 = v69[1];
            uint64_t v72 = *v57;
            uint64_t v71 = (void *)v57[1];
            uint64_t v99 = *v69;
            uint64_t v100 = v70;
            swift_bridgeObjectRetain();
            v73._uint64_t countAndFlagsBits = v72;
            v73._object = v71;
            String.append(_:)(v73);
            unint64_t v74 = a4;
            uint64_t v76 = v99;
            uint64_t v75 = v100;
            id v77 = (void *)((char *)v95 + v61[6]);
            uint64_t v78 = v77[1];
            uint64_t v79 = *v95;
            id v80 = (void *)v95[1];
            uint64_t v99 = *v77;
            uint64_t v100 = v78;
            swift_bridgeObjectRetain();
            v81._uint64_t countAndFlagsBits = v79;
            v81._object = v80;
            String.append(_:)(v81);
            uint64_t v82 = v99;
            uint64_t v83 = v100;
            uint64_t v99 = v76;
            uint64_t v100 = v75;
            a4 = v74;
            int v84 = v95;
            uint64_t v97 = v82;
            uint64_t v98 = v83;
            sub_100059EB8();
            uint64_t v85 = StringProtocol.caseInsensitiveCompare<A>(_:)();
            uint64_t v56 = v91;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v60 = (uint64_t)v84;
            BOOL v86 = v85 == -1;
          }
          else
          {
            BOOL v86 = v65;
          }
          unint64_t v87 = a3 + v56;
          sub_100059DF0(v60, (uint64_t (*)(void))type metadata accessor for FMPeopleCellViewModel);
          sub_100059DF0((uint64_t)v57, (uint64_t (*)(void))type metadata accessor for FMPeopleCellViewModel);
          if (v86)
          {
            if (a3 < a2 || v87 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v56 = v91;
            }
            else
            {
              uint64_t v56 = v91;
              if (a3 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v103 += v56;
          }
          else
          {
            unint64_t v88 = v101;
            v101 += v56;
            if (a3 < v88 || v87 >= v88)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v88)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v58 = a2;
          }
          unint64_t v54 = v101;
          if (v101 <= a4) {
            break;
          }
          a2 = v58;
          a3 = v87;
        }
        while (v58 > v94);
      }
      goto LABEL_71;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    uint64_t v23 = v21 * v19;
    unint64_t v92 = a3;
    if (a4 < v94 || v94 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v94)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v25 = a4 + v23;
    unint64_t v101 = a4 + v23;
    if (v23 >= 1 && a2 < v92)
    {
      do
      {
        sub_100059D88(a2, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMPeopleCellViewModel);
        sub_100059D88(a4, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMPeopleCellViewModel);
        uint64_t v27 = v96;
        uint64_t v28 = v96[17];
        double v29 = *(double *)((char *)v17 + v28);
        double v30 = *(double *)((char *)v14 + v28);
        BOOL v31 = v29 < v30;
        if (v29 == v30
          && (uint64_t v32 = v96[16],
              double v33 = *(double *)((char *)v17 + v32),
              double v34 = *(double *)((char *)v14 + v32),
              BOOL v31 = v33 < v34,
              v33 == v34))
        {
          uint64_t v35 = (uint64_t *)((char *)v17 + v96[6]);
          uint64_t v36 = v35[1];
          uint64_t v37 = *v17;
          uint64_t v38 = (void *)v17[1];
          uint64_t v99 = *v35;
          uint64_t v100 = v36;
          swift_bridgeObjectRetain();
          v39._uint64_t countAndFlagsBits = v37;
          v39._object = v38;
          String.append(_:)(v39);
          uint64_t v40 = v99;
          uint64_t v41 = v100;
          uint64_t v42 = (uint64_t *)((char *)v14 + v27[6]);
          uint64_t v43 = v42[1];
          uint64_t v44 = *v14;
          uint64_t v45 = (void *)v14[1];
          uint64_t v99 = *v42;
          uint64_t v100 = v43;
          swift_bridgeObjectRetain();
          v46._uint64_t countAndFlagsBits = v44;
          v46._object = v45;
          String.append(_:)(v46);
          uint64_t v47 = v99;
          uint64_t v48 = v100;
          uint64_t v99 = v40;
          uint64_t v100 = v41;
          uint64_t v97 = v47;
          uint64_t v98 = v48;
          sub_100059EB8();
          uint64_t v49 = StringProtocol.caseInsensitiveCompare<A>(_:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          BOOL v50 = v49 == -1;
        }
        else
        {
          BOOL v50 = v31;
        }
        sub_100059DF0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMPeopleCellViewModel);
        sub_100059DF0((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMPeopleCellViewModel);
        unint64_t v51 = v103;
        if (v50)
        {
          unint64_t v52 = a2 + v19;
          if (v103 < a2 || v103 >= v52)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v103 == a2)
          {
            unint64_t v51 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v53 = v102 + v19;
          if (v103 < v102 || v103 >= v53)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v103 != v102)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v102 = v53;
          unint64_t v52 = a2;
        }
        unint64_t v103 = v51 + v19;
        a4 = v102;
        if (v102 >= v25) {
          break;
        }
        a2 = v52;
      }
      while (v52 < v92);
    }
LABEL_71:
    sub_10026831C(&v103, &v102, (uint64_t *)&v101);
    return 1;
  }
LABEL_75:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100540788()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_1000606BC(v9, (uint64_t)qword_1006D1E98);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMPeopleListDataSource: didInitialize", v12, 2u);
    swift_slowDealloc();
  }

  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v1;
  aBlock[4] = sub_100541AB0;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  void aBlock[3] = &unk_100644CA0;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = v1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100045D9C((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v19);
}

uint64_t sub_100540B1C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_1000606BC(v11, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 134217984;
    aBlock[0] = *(void *)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMPeopleListDataSource: didUpdate %ld locationAlerts", v14, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v15 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v2;
  *(void *)(v16 + 24) = a1;
  aBlock[4] = sub_100541A70;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  void aBlock[3] = &unk_100644C00;
  uint64_t v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v18 = v2;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100045D9C((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v21);
}

uint64_t sub_100540F08(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_1000606BC(v11, (uint64_t)qword_1006D1E98);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 67109120;
    LODWORD(aBlock[0]) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMPeopleListDataSource: didUpdate friendsOperationsRestricted %{BOOL}d", v14, 8u);
    swift_slowDealloc();
  }

  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  uint64_t v15 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v2;
  aBlock[4] = sub_100541A24;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003C410;
  void aBlock[3] = &unk_100644AE8;
  uint64_t v17 = _Block_copy(aBlock);
  id v18 = v2;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100045D9C((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v21);
}

uint64_t sub_1005412CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v34 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v32 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for DispatchQoS();
  uint64_t v31 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  double v30 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMFFriend();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_1000606BC(v11, (uint64_t)qword_1006D1E98);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v28 = v4;
    aBlock[0] = v15;
    *(_DWORD *)uint64_t v14 = 136315138;
    uint64_t v27 = a1;
    uint64_t v16 = FMFFriend.debugDescription.getter();
    uint64_t v35 = sub_1000606F4(v16, v17, aBlock);
    a1 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMPeopleListDataSource: didUpdate image for %s", v14, 0xCu);
    swift_arrayDestroy();
    uint64_t v4 = v28;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

  sub_100006060(0, (unint64_t *)&qword_1006AF7A0);
  id v18 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v29;
  *(void *)(v19 + 16) = v29;
  *(void *)(v19 + 24) = a1;
  aBlock[4] = (uint64_t)sub_100541A44;
  aBlock[5] = v19;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10003C410;
  void aBlock[3] = (uint64_t)&unk_100644B38;
  uint64_t v21 = _Block_copy(aBlock);
  id v22 = v20;
  swift_retain();
  swift_release();
  uint64_t v23 = v30;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100045D9C((unint64_t *)&qword_1006AEEB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10005D034((uint64_t *)&unk_1006AE4B0);
  sub_1000450A0((unint64_t *)&qword_1006AEEC0, (uint64_t *)&unk_1006AE4B0);
  uint64_t v24 = v32;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v23, v33);
}

void sub_1005417F4()
{
  uint64_t v1 = v0;
  if (qword_1006AE190 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000606BC(v2, (uint64_t)qword_1006D1E98);
  swift_bridgeObjectRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    sub_10005D034((uint64_t *)&unk_1006B2B30);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v6 = isa;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMPeopleListDataSource: itemAger itemsDidAge %@", v5, 0xCu);
    sub_10005D034((uint64_t *)&unk_1006B5A50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator);
  swift_retain();
  uint64_t v8 = dispatch thunk of FMFManager.friends.getter();
  swift_release();
  uint64_t v9 = *(void **)(*(void *)(v7 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  id v10 = v9;
  sub_100043D38(v8, v9, 0, 0);
  swift_bridgeObjectRelease();
}

uint64_t sub_100541A0C()
{
  return sub_100008CE4((void (*)(void))&_swift_bridgeObjectRelease);
}

id sub_100541A24()
{
  return sub_10053BBAC(*(void *)(v0 + 16));
}

uint64_t sub_100541A2C()
{
  return sub_100008CE4((void (*)(void))&_swift_release);
}

uint64_t sub_100541A44()
{
  return sub_10053B67C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_100541A50()
{
}

uint64_t sub_100541A58()
{
  return sub_100008CE4((void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_100541A70()
{
  sub_10053BAF4(*(void *)(v0 + 16), *(NSObject **)(v0 + 24));
}

uint64_t sub_100541A78()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100541AB0()
{
  sub_100043C80(*(void *)(v0 + 16), 1);
}

uint64_t sub_100541AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for FMFFriend() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10053E7C0(a1, a2, v6, v7);
}

uint64_t sub_100541B58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034((uint64_t *)&unk_1006C2230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100541BC0(uint64_t a1, uint64_t a2)
{
  return sub_10053DE90(a1, a2, *(void **)(v2 + 16), (uint64_t)&unk_100644D28, (uint64_t)sub_100542484, (uint64_t)&unk_100644D40);
}

uint64_t sub_100541C00(uint64_t a1, uint64_t a2)
{
  return sub_10053DE90(a1, a2, *(void **)(v2 + 16), (uint64_t)&unk_100644DA0, (uint64_t)sub_100541C40, (uint64_t)&unk_100644DB8);
}

id sub_100541C40()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_tableView) reloadData];
}

uint64_t sub_100541C60(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  return sub_100541DC0(a1, a2, a3, a4, sub_10053DC20);
}

uint64_t sub_100541C78()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100541CB0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100541CDC()
{
  uint64_t v1 = type metadata accessor for FMFFriend();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100541DA8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  return sub_100541DC0(a1, a2, a3, a4, sub_10053DBE4);
}

uint64_t sub_100541DC0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v8 = *(void *)(type metadata accessor for FMFFriend() - 8);
  uint64_t v9 = v5 + ((*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  a3(1);
  return a5(v9);
}

uint64_t sub_100541E58()
{
  uint64_t v1 = type metadata accessor for FMFFriend();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_100541FB0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *(void *)(type metadata accessor for FMFFriend() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v9 = v3 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  a3(1);
  return sub_10053E164(v3 + v6, v9);
}

uint64_t sub_1005420A0()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005420D8(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

unint64_t sub_1005420F0()
{
  unint64_t result = qword_1006C2260;
  if (!qword_1006C2260)
  {
    sub_100046C48(&qword_1006C2258);
    sub_100045D9C(&qword_1006C2268, (void (*)(uint64_t))&type metadata accessor for PeopleListPersonRow);
    sub_1000450A0(&qword_1006C2270, &qword_1006C2278);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C2260);
  }
  return result;
}

uint64_t sub_1005421C0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

id sub_1005421F8()
{
  return sub_10053B5DC();
}

uint64_t sub_100542214()
{
  swift_unknownObjectUnownedDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100542250(int a1, uint64_t *a2)
{
  sub_10053B190(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100542258@<X0>(uint64_t a1@<X8>)
{
  return sub_10053AF18(*(void *)(v1 + 16), a1);
}

void sub_100542274(char a1, uint64_t a2)
{
}

uint64_t sub_10054227C()
{
  return EnvironmentValues.backgroundMaterial.getter();
}

uint64_t sub_1005422A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005D034(&qword_1006C2288);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_10054230C()
{
}

void sub_10054232C()
{
}

uint64_t sub_100542354()
{
  return 8;
}

uint64_t sub_100542360()
{
  return swift_release();
}

uint64_t sub_100542368(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_100542378()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

void *sub_1005423C0(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_1005423CC()
{
}

uint64_t sub_1005423D4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 65, 7);
}

uint64_t sub_100542434()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1005425D0(void *a1)
{
  if ([a1 state] == (id)1)
  {
    *(unsigned char *)(*(void *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground]
             + OBJC_IVAR____TtC6FindMy17FMPassthroughView_enabled) = 0;
    uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_passthroughView];
    if (!v3)
    {
LABEL_13:
      __break(1u);
      return;
    }
    *(unsigned char *)(v3 + OBJC_IVAR____TtC6FindMy17FMPassthroughView_enabled) = 0;
  }
  if ([a1 state] == (id)2) {
    sub_1005426F8(a1);
  }
  if ([a1 state] == (id)3) {
    sub_100542CF4(a1);
  }
  [a1 setTranslation:*(void *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer] inView:0.0, 0.0];
  id v4 = [v1 view];
  if (!v4)
  {
    __break(1u);
    goto LABEL_13;
  }
  id v5 = v4;
  [v4 layoutIfNeeded];
}

void sub_1005426F8(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [v1 traitCollection];
  id v5 = [v4 horizontalSizeClass];

  unint64_t v6 = &OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_compactCardTopConstraint;
  if (v5 != (id)1) {
    unint64_t v6 = &OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_regularCardTopConstraint;
  }
  uint64_t v7 = *(void **)&v2[*v6];
  if (v7)
  {
    uint64_t v8 = *(void **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController];
    if (v8)
    {
      uint64_t v62 = &v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController];
      uint64_t v9 = *(void *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController + 8];
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
      id v63 = v7;
      id v12 = v8;
      os_log_type_t v13 = (void *)v11(ObjectType, v9);

      if (!v13)
      {
LABEL_42:

        return;
      }
      double v14 = 0.0;
      double v15 = 0.0;
      if ((v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_isPanFromScrollView] & 1) == 0) {
        double v15 = *(double *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration + 24];
      }
      id v16 = [v2 traitCollection];
      id v17 = [v16 horizontalSizeClass];

      if (v17 == (id)1) {
        double v14 = *(double *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration + 32];
      }
      [a1 translationInView:*(void *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer]];
      double v19 = v18;
      [v63 constant];
      double v21 = v19 + v20;
      if (v21 > v14 - v15) {
        double v22 = v21;
      }
      else {
        double v22 = v14 - v15;
      }
      id v23 = [v2 view];
      if (v23)
      {
        uint64_t v24 = v23;
        [v23 frame];
        double v26 = v25;

        id v27 = [v2 view];
        if (v27)
        {
          uint64_t v28 = v27;
          [v27 safeAreaInsets];
          double v30 = v29;

          id v31 = [v2 view];
          if (v31)
          {
            uint64_t v32 = v31;
            if (v15 + v26 - v30 >= v22) {
              double v33 = v22;
            }
            else {
              double v33 = v15 + v26 - v30;
            }
            [v31 frame];
            double v35 = v34;

            sub_1000490B8();
            double v37 = v15 + v35 - v36;
            if (v37 >= v33) {
              double v38 = v33;
            }
            else {
              double v38 = v37;
            }
            [v13 contentOffset];
            if (v39 >= 1.0)
            {
LABEL_41:

              goto LABEL_42;
            }
            uint64_t v40 = (double *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration];
            double v64 = *(double *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration + 32];
            id v41 = [v2 view];
            if (v41)
            {
              uint64_t v42 = v41;
              sub_100048D68();
              double v44 = v43;
              sub_1000490B8();
              double v46 = v45;

              double v47 = round((v38 - v64) / (v44 - v46) * 1000.0) / 1000.0;
              sub_1000489A0(1, v47);
              double v48 = 0.64 - v47;
              if (0.64 - v47 <= 0.0) {
                double v48 = 0.0;
              }
              [*(id *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground] setAlpha:*v40 * v48];
              uint64_t v49 = (double *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_startPosition];
              if (v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_startPosition + 8])
              {
                *uint64_t v49 = v38;
                *((unsigned char *)v49 + 8) = 0;
                BOOL v50 = v62;
              }
              else
              {
                BOOL v50 = v62;
                if (vabdd_f64(*v49, v38) > 3.0)
                {
                  v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_isPanningCard] = 1;
                  unint64_t v51 = *(void **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_otherGesture];
                  if (v51) {
                    [v51 setEnabled:0];
                  }
                }
              }
              if (v47 <= 1.0)
              {
                unint64_t v52 = *(void **)v50;
                if (*(void *)v50)
                {
                  uint64_t v53 = *((void *)v50 + 1);
                  uint64_t v54 = swift_getObjectType();
                  uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v53 + 48);
                  id v56 = v52;
                  v55(v54, v53);
                }
              }
              if ([v13 isScrollEnabled] && v19 > 0.0)
              {
                [v13 setScrollEnabled:v47 <= 0.005];
                [v13 setBounces:v47 <= 0.005];
                if (qword_1006AE190 != -1) {
                  swift_once();
                }
                uint64_t v57 = type metadata accessor for Logger();
                sub_1000606BC(v57, (uint64_t)qword_1006D1E98);
                unint64_t v58 = v2;
                id v59 = Logger.logObject.getter();
                os_log_type_t v60 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v59, v60))
                {
                  uint64_t v61 = swift_slowAlloc();
                  *(_DWORD *)uint64_t v61 = 67109376;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  *(_WORD *)(v61 + 8) = 2048;
                  sub_100048C44();
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();

                  _os_log_impl((void *)&_mh_execute_header, v59, v60, "FMCardContainerViewController: disabling scroll on drag %{BOOL}d, percent: %f", (uint8_t *)v61, 0x12u);
                  swift_slowDealloc();

                  return;
                }

                goto LABEL_42;
              }
              goto LABEL_41;
            }
LABEL_49:
            __break(1u);
            return;
          }
LABEL_48:
          __break(1u);
          goto LABEL_49;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_48;
    }
  }
}

void sub_100542CF4(void *a1)
{
  uint64_t v2 = v1;
  [a1 velocityInView:*(void *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer]];
  double v4 = v3;
  sub_100048C44();
  BOOL v6 = v5 > 0.3 || v5 < -1.0;
  BOOL v7 = v5 >= 0.3 && v5 <= 0.85;
  if (v5 >= 0.3 && v5 <= 0.85) {
    char v8 = 1;
  }
  else {
    char v8 = 2;
  }
  if (!v6) {
    char v8 = 0;
  }
  char oslog = v8;
  uint64_t v9 = *(void *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_passthroughView];
  if (v9)
  {
    *(unsigned char *)(v9 + OBJC_IVAR____TtC6FindMy17FMPassthroughView_enabled) = 1;
    uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController];
    if (v10)
    {
      uint64_t v11 = *(void *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController + 8];
      uint64_t ObjectType = swift_getObjectType();
      os_log_type_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
      id v14 = v10;
      double v15 = (void *)v13(ObjectType, v11);

      if (v15)
      {
        [v15 contentOffset];
        if (v16 == 0.0)
        {
          if (qword_1006AE190 != -1) {
            swift_once();
          }
          uint64_t v17 = type metadata accessor for Logger();
          sub_1000606BC(v17, (uint64_t)qword_1006D1E98);
          double v18 = v2;
          double v19 = Logger.logObject.getter();
          os_log_type_t v20 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v19, v20))
          {
            uint64_t v21 = swift_slowAlloc();
            *(_DWORD *)uint64_t v21 = 134218240;
            sub_100048C44();
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            *(_WORD *)(v21 + 12) = 2048;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMCardContainerViewController: grabber didEnd percent: %f, velocity: %f", (uint8_t *)v21, 0x16u);
            swift_slowDealloc();
          }
          else
          {
          }
          if (v18[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent])
          {
            if (v18[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent] == 1)
            {
              if (!v6 || !v7)
              {
LABEL_29:
                LOBYTE(v25) = oslog;
                goto LABEL_43;
              }
            }
            else if (oslog != 2)
            {
              goto LABEL_29;
            }
          }
          else if (v6)
          {
            goto LABEL_29;
          }
          double v26 = *(double *)&v18[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration + 8];
          if (v26 >= v4)
          {
            LOBYTE(v25) = oslog;
            if (v4 >= -v26) {
              goto LABEL_43;
            }
            uint64_t v28 = Logger.logObject.getter();
            os_log_type_t v31 = static os_log_type_t.info.getter();
            if (!os_log_type_enabled(v28, v31))
            {
              unsigned int v27 = 0x10000;
              goto LABEL_42;
            }
            uint64_t v32 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v32 = 0;
            _os_log_impl((void *)&_mh_execute_header, v28, v31, "FMCardContainerViewController: next locking percent", v32, 2u);
            unsigned int v27 = 0x10000;
          }
          else
          {
            unsigned int v27 = 131585;
            uint64_t v28 = Logger.logObject.getter();
            os_log_type_t v29 = static os_log_type_t.info.getter();
            if (!os_log_type_enabled(v28, v29))
            {
              LOBYTE(v25) = oslog;
              goto LABEL_42;
            }
            double v30 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)double v30 = 0;
            _os_log_impl((void *)&_mh_execute_header, v28, v29, "FMCardContainerViewController: previous locking percent", v30, 2u);
            LOBYTE(v25) = oslog;
          }
          swift_slowDealloc();
LABEL_42:

          unsigned int v25 = v27 >> (8 * (v25 & 0x1F));
LABEL_43:
          double v33 = *(double *)&v18[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration + 16];
          if (v33 >= v4)
          {
            if (v4 >= -v33)
            {
LABEL_53:
              sub_100255784(v25, fabs(v4 / 1000.0));
              *(unsigned char *)(*(void *)&v18[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground]
                       + OBJC_IVAR____TtC6FindMy17FMPassthroughView_enabled) = 1;
              v18[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_isPanFromScrollView] = 0;
              v18[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_isPanningCard] = 0;
              uint64_t v39 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_otherGesture;
              [*(id *)&v18[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_otherGesture] setEnabled:1];
              uint64_t v40 = &v18[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_startPosition];
              *(void *)uint64_t v40 = 0;
              v40[8] = 1;
              id v41 = *(void **)&v18[v39];
              *(void *)&v18[v39] = 0;

              return;
            }
            double v34 = Logger.logObject.getter();
            os_log_type_t v37 = static os_log_type_t.info.getter();
            if (!os_log_type_enabled(v34, v37))
            {
              LOBYTE(v25) = 0;
              goto LABEL_52;
            }
            double v38 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)double v38 = 0;
            _os_log_impl((void *)&_mh_execute_header, v34, v37, "FMCardContainerViewController: locking to top", v38, 2u);
            LOBYTE(v25) = 0;
          }
          else
          {
            double v34 = Logger.logObject.getter();
            os_log_type_t v35 = static os_log_type_t.info.getter();
            if (!os_log_type_enabled(v34, v35))
            {
              LOBYTE(v25) = 2;
              goto LABEL_52;
            }
            double v36 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)double v36 = 0;
            _os_log_impl((void *)&_mh_execute_header, v34, v35, "FMCardContainerViewController: locking to bottom", v36, 2u);
            LOBYTE(v25) = 2;
          }
          swift_slowDealloc();
LABEL_52:

          goto LABEL_53;
        }
      }
    }
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_1000606BC(v22, (uint64_t)qword_1006D1E98);
    osloga = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(osloga, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, osloga, v23, "FMCardContainerViewController: disabling gesture end because scrollview is not at Zero", v24, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1005433EC(void *a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  sub_10005D034((uint64_t *)&unk_1006C22E0);
  if (String.init<A>(describing:)() == 0xD000000000000022 && v4 == 0x80000001005A2470)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    BOOL v6 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_otherGesture);
    *(void *)(v2 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_otherGesture) = a1;
    id v7 = a1;

    char v8 = *(unsigned char *)(v2 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_isPanningCard) ^ 1;
    return v8 & 1;
  }
  char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v5) {
    goto LABEL_5;
  }
  uint64_t v10 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController);
  if (v10
    && (uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController + 8),
        uint64_t ObjectType = swift_getObjectType(),
        os_log_type_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8),
        id v14 = v10,
        double v15 = (void *)v13(ObjectType, v11),
        v14,
        v15))
  {
    *(unsigned char *)(v2 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_isPanFromScrollView) = 1;
    [v15 contentOffset];
    double v17 = v16;

    char v8 = v17 <= 0.0;
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_100543590(void *a1)
{
  swift_getObjectType();
  sub_10005D034((uint64_t *)&unk_1006C22E0);
  if (String.init<A>(describing:)() == 0xD000000000000022 && v3 == 0x80000001005A2470)
  {
    swift_bridgeObjectRelease();
    char v4 = 1;
  }
  else
  {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
  }
  uint64_t result = (uint64_t)[a1 view];
  if (result)
  {
    BOOL v6 = (void *)result;
    self;
    id v7 = (void *)swift_dynamicCastObjCClass();
    if (v7 && (v4 & 1) == 0)
    {
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent))
      {

        return 1;
      }
      else
      {
        [v7 contentOffset];
        double v9 = v8;

        return v9 < 0.0;
      }
    }
    else
    {

      return 0;
    }
  }
  return result;
}

void *sub_1005436D8(uint64_t a1)
{
  BOOL v6 = _swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_1000607C8(i, (uint64_t)v5);
    sub_100006060(0, &qword_1006C2328);
    if (!swift_dynamicCast()) {
      break;
    }
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

void *sub_1005437F4(unint64_t a1)
{
  uint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  specialized ContiguousArray.reserveCapacity(_:)();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v4 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        double v8 = *(void **)(v6 + 8 * v5);
        self;
        uint64_t v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        ++v5;
        if (v7 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    specialized ContiguousArray.reserveCapacity(_:)();
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return _swiftEmptyArrayStorage;
}

void *sub_1005439DC(unint64_t a1)
{
  uint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  specialized ContiguousArray.reserveCapacity(_:)();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        type metadata accessor for FMFenceMapTableViewCell();
        if (!swift_dynamicCastClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v4 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        double v8 = *(void **)(v6 + 8 * v5);
        type metadata accessor for FMFenceMapTableViewCell();
        uint64_t v9 = swift_dynamicCastClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        ++v5;
        if (v7 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    specialized ContiguousArray.reserveCapacity(_:)();
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return _swiftEmptyArrayStorage;
}

id sub_100543BBC(uint64_t a1, unint64_t a2)
{
  uint64_t aBlock = 0;
  unint64_t v34 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  uint64_t v4 = self;
  id v5 = [v4 mainBundle];
  v6._uint64_t countAndFlagsBits = 0xD000000000000023;
  v39._uint64_t countAndFlagsBits = 0xD000000000000035;
  v39._object = (void *)0x800000010059D5A0;
  v6._object = (void *)0x800000010059D570;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v39);

  sub_10005D034((uint64_t *)&unk_1006AF790);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10055B970;
  *(void *)(v8 + 56) = &type metadata for String;
  unint64_t v9 = sub_10007F2C8();
  *(void *)(v8 + 64) = v9;
  *(void *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = a2;
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  LOBYTE(v8) = sub_100477034(a1, a2, 0);
  swift_bridgeObjectRelease();
  if (v8)
  {
    uint64_t aBlock = 0;
    unint64_t v34 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v10 = [v4 mainBundle];
    v40._uint64_t countAndFlagsBits = 0xD000000000000039;
    v40._object = (void *)0x800000010059D680;
    v11._object = (void *)0x800000010059D650;
    v11._uint64_t countAndFlagsBits = 0xD000000000000027;
    v12._uint64_t countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v40);

    os_log_type_t v13 = v4;
  }
  else
  {
    sub_100006060(0, (unint64_t *)&qword_1006B4570);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_10055B970;
    *(void *)(v14 + 56) = &type metadata for String;
    *(void *)(v14 + 64) = v9;
    *(void *)(v14 + 32) = 0xD000000000000029;
    *(void *)(v14 + 40) = 0x8000000100586570;
    double v15 = NSPredicate.init(format:_:)();
    NSString v16 = String._bridgeToObjectiveC()();
    unsigned int v17 = [v15 evaluateWithObject:v16];

    if (!v17)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t aBlock = 0;
    unint64_t v34 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v18 = [v4 mainBundle];
    v41._uint64_t countAndFlagsBits = 0xD000000000000039;
    v41._object = (void *)0x800000010059D610;
    v19._object = (void *)0x800000010059D5E0;
    v19._uint64_t countAndFlagsBits = 0xD000000000000027;
    v20._uint64_t countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v18, v20, v41);

    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_10055B970;
    *(void *)(v21 + 56) = &type metadata for String;
    *(void *)(v21 + 64) = v9;
    os_log_type_t v13 = v4;
    *(void *)(v21 + 32) = a1;
    *(void *)(v21 + 40) = a2;
    swift_bridgeObjectRetain();
    String.init(format:_:)();
    swift_bridgeObjectRelease();
  }
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v24 = [self alertControllerWithTitle:v22 message:v23 preferredStyle:1];

  if (v24)
  {
    id v25 = v24;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    id v26 = [v13 mainBundle];
    v42._uint64_t countAndFlagsBits = 0xD000000000000021;
    v42._object = (void *)0x800000010057F840;
    v27._uint64_t countAndFlagsBits = 0x4F545455425F4B4FLL;
    v27._object = (void *)0xEF454C5449545F4ELL;
    v28._uint64_t countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v26, v28, v42);

    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    os_log_type_t v37 = State.rawValue.getter;
    uint64_t v38 = 0;
    uint64_t aBlock = _NSConcreteStackBlock;
    unint64_t v34 = 1107296256;
    os_log_type_t v35 = sub_10000841C;
    double v36 = &unk_100645120;
    double v30 = _Block_copy(&aBlock);
    swift_release();
    id v31 = [self actionWithTitle:v29 style:0 handler:v30];
    _Block_release(v30);

    [v25 addAction:v31];
  }
  return v24;
}

void sub_100544178(uint64_t a1, uint64_t a2, char *a3)
{
  Swift::String v40 = a3;
  uint64_t v4 = sub_10005D034(&qword_1006BB9A0);
  __chkstk_darwin(v4 - 8);
  Swift::String v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10005D034(&qword_1006AF740);
  __chkstk_darwin(v7 - 8);
  unint64_t v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMFLocationAlertTarget();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  os_log_type_t v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16))
  {
    if (qword_1006AE190 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_1000606BC(v14, (uint64_t)qword_1006D1E98);
    swift_bridgeObjectRetain();
    double v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v39 = v10;
      id v18 = (uint8_t *)v17;
      Swift::String v19 = (void *)swift_slowAlloc();
      uint64_t v38 = v11;
      *(_DWORD *)id v18 = 138412290;
      v37[1] = v18 + 4;
      Swift::String v20 = v13;
      uint64_t v21 = v9;
      NSString v22 = v6;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      Class v41 = isa;
      uint64_t v11 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *Swift::String v19 = isa;
      Swift::String v6 = v22;
      unint64_t v9 = v21;
      os_log_type_t v13 = v20;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "FMRecipientsViewController: Sending location alerts to %@", v18, 0xCu);
      sub_10005D034((uint64_t *)&unk_1006B5A50);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v10 = v39;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    Swift::String v28 = v40;
    uint64_t v29 = *(void *)&v40[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_mediator];
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for FMFLocationAlertTarget.alertFriends(_:), v10);
    uint64_t v30 = type metadata accessor for FMFFriend();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v9, 1, 1, v30);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v31 = sub_1000EE764(a2);
    swift_bridgeObjectRelease();
    uint64_t v32 = type metadata accessor for FMFLocationAlert();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v6, 1, 1, v32);
    id v33 = objc_allocWithZone((Class)type metadata accessor for FMLocationAlertViewController(0));
    unint64_t v34 = (void *)sub_10008BA4C(v29, (uint64_t)v13, (uint64_t)v9, v31, (uint64_t)v6, 1, 1);
    id v35 = [v28 navigationController];
    if (v35)
    {
      double v36 = v35;
      [v35 pushViewController:v34 animated:1];
    }
    return;
  }
  id v24 = *(void **)&v40[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView];
  if (!v24)
  {
    __break(1u);
    goto LABEL_16;
  }
  id v25 = [v24 textView];
  if (!v25)
  {
LABEL_16:
    __break(1u);
    return;
  }
  id v26 = v25;
  [v25 resignFirstResponder];

  Swift::String v27 = v40;

  [v27 dismissViewControllerAnimated:1 completion:0];
}

id sub_1005446E0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMSendLocationAlertViewController();
  return [super dealloc];
}

uint64_t sub_100544718()
{
  return type metadata accessor for FMSendLocationAlertViewController();
}

uint64_t type metadata accessor for FMSendLocationAlertViewController()
{
  uint64_t result = qword_1006C2318;
  if (!qword_1006C2318) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10054476C()
{
  uint64_t v1 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView;
  uint64_t result = *(void *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t result = (uint64_t)[(id)result textView];
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v3 = (void *)result;
  [(id)result resignFirstResponder];

  unint64_t v4 = *(void *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientText + 8];
  if (v4)
  {
    if ((v4 & 0x2000000000000000) != 0
       ? HIBYTE(v4) & 0xF
       : *(void *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientText] & 0xFFFFFFFFFFFFLL)
    {
      uint64_t result = sub_10018E32C(0, 0);
      if ((result & 1) == 0) {
        return result;
      }
    }
  }
  uint64_t result = *(void *)&v0[v1];
  if (!result)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  uint64_t result = (uint64_t)[(id)result recipients];
  if (result)
  {
    Swift::String v6 = (void *)result;
    uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v8 = sub_1005436D8(v7);
    uint64_t result = swift_bridgeObjectRelease();
    if (v8)
    {
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = v0;
      uint64_t v10 = v0;
      uint64_t v11 = (void *)sub_1001942B4((unint64_t)v8, (uint64_t)sub_10054491C, v9);
      swift_bridgeObjectRelease();

      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1005448E4()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10054491C(uint64_t a1, uint64_t a2)
{
  sub_100544178(a1, a2, *(char **)(v2 + 16));
}

id LocateIntent.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocateIntent();
  return [super init];
}

uint64_t type metadata accessor for LocateIntent()
{
  return self;
}

id Device.__allocating_init(coder:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithCoder:a1];

  return v3;
}

id LocateIntent.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for LocateIntent();
  [super initWithCoder:a1];

  return v3;
}

id ToggleLocationSharingIntent.__allocating_init(identifier:backingStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v4 = v3;
  if (a2)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  id v7 = [objc_allocWithZone(v4) initWithIdentifier:v6 backingStore:a3];

  return v7;
}

id LocateIntent.init(identifier:backingStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for LocateIntent();
  id v6 = [super initWithIdentifier:v5 backingStore:a3];

  return v6;
}

id ToggleLocationSharingIntent.__allocating_init(domain:verb:parametersByName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a5)
  {
    v9.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v9.super.Class isa = 0;
  }
  id v10 = [objc_allocWithZone(v5) initWithDomain:v7 verb:v8 parametersByName:v9.super.isa];

  return v10;
}

id LocateIntent.init(domain:verb:parametersByName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a5)
  {
    v9.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v9.super.Class isa = 0;
  }
  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for LocateIntent();
  id v10 = [v12 initWithDomain:v7 verb:v8 parametersByName:v9.super.isa];

  return v10;
}

id LocateIntent.__deallocating_deinit()
{
  return sub_1005455B4(type metadata accessor for LocateIntent);
}

unint64_t ToggleLocationSharingIntentResponseCode.init(rawValue:)(unint64_t a1)
{
  return sub_1005455EC(a1);
}

unint64_t sub_100544F48@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1005455EC(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t LocateIntentResponse.code.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___LocateIntentResponse_code;
  swift_beginAccess();
  return *(void *)v1;
}

char *LocateIntentResponse.__allocating_init(code:userActivity:)(uint64_t a1, void *a2)
{
  NSString v5 = (char *)[objc_allocWithZone(v2) init];
  id v6 = &v5[OBJC_IVAR___LocateIntentResponse_code];
  swift_beginAccess();
  *(void *)id v6 = a1;
  NSString v7 = v5;
  [v7 setUserActivity:a2];

  return v7;
}

char *LocateIntentResponse.init(code:userActivity:)(uint64_t a1, void *a2)
{
  NSString v5 = (char *)[v2 init];
  id v6 = &v5[OBJC_IVAR___LocateIntentResponse_code];
  swift_beginAccess();
  *(void *)id v6 = a1;
  NSString v7 = v5;
  [v7 setUserActivity:a2];

  return v7;
}

id LocateIntentResponse.init()()
{
  *(void *)&v0[OBJC_IVAR___LocateIntentResponse_code] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocateIntentResponse();
  return [super init];
}

id LocateIntentResponse.init(coder:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR___LocateIntentResponse_code] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for LocateIntentResponse();
  [super initWithCoder:a1];

  return v3;
}

id ToggleLocationSharingIntentResponse.__allocating_init(backingStore:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithBackingStore:a1];

  return v3;
}

id LocateIntentResponse.init(backingStore:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR___LocateIntentResponse_code] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for LocateIntentResponse();
  [super initWithBackingStore:a1];

  return v3;
}

id sub_1005453BC(char *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  *(void *)&a1[OBJC_IVAR___LocateIntentResponse_code] = 0;
  v7.receiver = a1;
  v7.super_class = (Class)type metadata accessor for LocateIntentResponse();
  return [super a3];
}

id ToggleLocationSharingIntentResponse.__allocating_init(propertiesByName:)(uint64_t a1)
{
  if (a1)
  {
    v2.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v2.super.Class isa = 0;
  }
  id v3 = [objc_allocWithZone(v1) initWithPropertiesByName:v2.super.isa];

  return v3;
}

id LocateIntentResponse.init(propertiesByName:)(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR___LocateIntentResponse_code] = 0;
  if (a1)
  {
    v2.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v2.super.Class isa = 0;
  }
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for LocateIntentResponse();
  [v5 initWithPropertiesByName:v2.super.isa];

  if (v3) {
  return v3;
  }
}

id LocateIntentResponse.__deallocating_deinit()
{
  return sub_1005455B4(type metadata accessor for LocateIntentResponse);
}

id sub_1005455B4(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

unint64_t sub_1005455EC(unint64_t result)
{
  if (result > 6) {
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for LocateIntentResponse()
{
  return self;
}

unint64_t sub_100545624()
{
  unint64_t result = qword_1006C2338;
  if (!qword_1006C2338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C2338);
  }
  return result;
}

uint64_t sub_100545678@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  objc_super v3 = (void *)(*a1 + OBJC_IVAR___LocateIntentResponse_code);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1005456CC(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  objc_super v3 = (void *)(*a2 + OBJC_IVAR___LocateIntentResponse_code);
  uint64_t result = swift_beginAccess();
  *objc_super v3 = v2;
  return result;
}

ValueMetadata *type metadata accessor for LocateIntentResponseCode()
{
  return &type metadata for LocateIntentResponseCode;
}

id ToggleLocationSharingIntent.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ToggleLocationSharingIntent();
  return [super init];
}

uint64_t type metadata accessor for ToggleLocationSharingIntent()
{
  return self;
}

id ToggleLocationSharingIntent.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ToggleLocationSharingIntent();
  [super initWithCoder:a1];

  return v3;
}

id ToggleLocationSharingIntent.init(identifier:backingStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for ToggleLocationSharingIntent();
  [super initWithIdentifier:v5 backingStore:a3];

  return v6;
}

id ToggleLocationSharingIntent.init(domain:verb:parametersByName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a5)
  {
    v9.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v9.super.Class isa = 0;
  }
  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for ToggleLocationSharingIntent();
  id v10 = [super initWithDomain:v7 verb:v8 parametersByName:v9.super.isa];

  return v10;
}

id ToggleLocationSharingIntent.__deallocating_deinit()
{
  return sub_1005468C4(type metadata accessor for ToggleLocationSharingIntent);
}

uint64_t ToggleLocationSharingIntentResponse.code.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___ToggleLocationSharingIntentResponse_code;
  swift_beginAccess();
  return *(void *)v1;
}

char *ToggleLocationSharingIntentResponse.__allocating_init(code:userActivity:)(uint64_t a1, void *a2)
{
  NSString v5 = (char *)[objc_allocWithZone(v2) init];
  id v6 = &v5[OBJC_IVAR___ToggleLocationSharingIntentResponse_code];
  swift_beginAccess();
  *(void *)id v6 = a1;
  NSString v7 = v5;
  [v7 setUserActivity:a2];

  return v7;
}

char *ToggleLocationSharingIntentResponse.init(code:userActivity:)(uint64_t a1, void *a2)
{
  NSString v5 = (char *)[v2 init];
  id v6 = &v5[OBJC_IVAR___ToggleLocationSharingIntentResponse_code];
  swift_beginAccess();
  *(void *)id v6 = a1;
  NSString v7 = v5;
  [v7 setUserActivity:a2];

  return v7;
}

char *static ToggleLocationSharingIntentResponse.unspecified(state:)(uint64_t a1)
{
  objc_super v2 = (char *)[objc_allocWithZone((Class)type metadata accessor for ToggleLocationSharingIntentResponse()) init];
  id v3 = &v2[OBJC_IVAR___ToggleLocationSharingIntentResponse_code];
  swift_beginAccess();
  *(void *)id v3 = 0;
  [v2 setUserActivity:0];
  [v2 setState:a1];
  return v2;
}

char *static ToggleLocationSharingIntentResponse.ready(state:)(uint64_t a1)
{
  objc_super v2 = (char *)[objc_allocWithZone((Class)type metadata accessor for ToggleLocationSharingIntentResponse()) init];
  id v3 = &v2[OBJC_IVAR___ToggleLocationSharingIntentResponse_code];
  swift_beginAccess();
  *(void *)id v3 = 1;
  [v2 setUserActivity:0];
  [v2 setState:a1];
  return v2;
}

char *static ToggleLocationSharingIntentResponse.continueInApp(state:)(uint64_t a1)
{
  objc_super v2 = (char *)[objc_allocWithZone((Class)type metadata accessor for ToggleLocationSharingIntentResponse()) init];
  id v3 = &v2[OBJC_IVAR___ToggleLocationSharingIntentResponse_code];
  swift_beginAccess();
  *(void *)id v3 = 2;
  [v2 setUserActivity:0];
  [v2 setState:a1];
  return v2;
}

char *static ToggleLocationSharingIntentResponse.inProgress(state:)(uint64_t a1)
{
  objc_super v2 = (char *)[objc_allocWithZone((Class)type metadata accessor for ToggleLocationSharingIntentResponse()) init];
  id v3 = &v2[OBJC_IVAR___ToggleLocationSharingIntentResponse_code];
  swift_beginAccess();
  *(void *)id v3 = 3;
  [v2 setUserActivity:0];
  [v2 setState:a1];
  return v2;
}

char *static ToggleLocationSharingIntentResponse.success(state:)(uint64_t a1)
{
  objc_super v2 = (char *)[objc_allocWithZone((Class)type metadata accessor for ToggleLocationSharingIntentResponse()) init];
  id v3 = &v2[OBJC_IVAR___ToggleLocationSharingIntentResponse_code];
  swift_beginAccess();
  *(void *)id v3 = 4;
  [v2 setUserActivity:0];
  [v2 setState:a1];
  return v2;
}

char *static ToggleLocationSharingIntentResponse.failureRequiringAppLaunch(state:)(uint64_t a1)
{
  objc_super v2 = (char *)[objc_allocWithZone((Class)type metadata accessor for ToggleLocationSharingIntentResponse()) init];
  id v3 = &v2[OBJC_IVAR___ToggleLocationSharingIntentResponse_code];
  swift_beginAccess();
  *(void *)id v3 = 6;
  [v2 setUserActivity:0];
  [v2 setState:a1];
  return v2;
}

id ToggleLocationSharingIntentResponse.init()()
{
  *(void *)&v0[OBJC_IVAR___ToggleLocationSharingIntentResponse_code] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ToggleLocationSharingIntentResponse();
  return [super init];
}

id ToggleLocationSharingIntentResponse.init(coder:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR___ToggleLocationSharingIntentResponse_code] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ToggleLocationSharingIntentResponse();
  [super initWithCoder:a1];

  return v3;
}

id ToggleLocationSharingIntentResponse.init(backingStore:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR___ToggleLocationSharingIntentResponse_code] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ToggleLocationSharingIntentResponse();
  [super initWithBackingStore:a1];

  return v3;
}

id sub_100546750(char *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  *(void *)&a1[OBJC_IVAR___ToggleLocationSharingIntentResponse_code] = 0;
  v7.receiver = a1;
  v7.super_class = (Class)type metadata accessor for ToggleLocationSharingIntentResponse();
  return [super a3];
}

id ToggleLocationSharingIntentResponse.init(propertiesByName:)(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR___ToggleLocationSharingIntentResponse_code] = 0;
  if (a1)
  {
    v2.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v2.super.Class isa = 0;
  }
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ToggleLocationSharingIntentResponse();
  [super initWithPropertiesByName:v2.super.isa];

  if (v3) {
  return v3;
  }
}

id ToggleLocationSharingIntentResponse.__deallocating_deinit()
{
  return sub_1005468C4(type metadata accessor for ToggleLocationSharingIntentResponse);
}

id sub_1005468C4(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for ToggleLocationSharingIntentResponse()
{
  return self;
}

unint64_t sub_100546924()
{
  unint64_t result = qword_1006C2398;
  if (!qword_1006C2398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C2398);
  }
  return result;
}

uint64_t sub_100546978@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  objc_super v3 = (void *)(*a1 + OBJC_IVAR___ToggleLocationSharingIntentResponse_code);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1005469CC(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  objc_super v3 = (void *)(*a2 + OBJC_IVAR___ToggleLocationSharingIntentResponse_code);
  uint64_t result = swift_beginAccess();
  *objc_super v3 = v2;
  return result;
}

ValueMetadata *type metadata accessor for ToggleLocationSharingIntentResponseCode()
{
  return &type metadata for ToggleLocationSharingIntentResponseCode;
}

id LocateDeviceIntent.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocateDeviceIntent();
  return [super init];
}

uint64_t type metadata accessor for LocateDeviceIntent()
{
  return self;
}

id LocateDeviceIntent.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for LocateDeviceIntent();
  [super initWithCoder:a1];

  return v3;
}

id LocateDeviceIntent.init(identifier:backingStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for LocateDeviceIntent();
  [super initWithIdentifier:v5 backingStore:a3];

  return v6;
}

id LocateDeviceIntent.init(domain:verb:parametersByName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a5)
  {
    v9.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v9.super.Class isa = 0;
  }
  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for LocateDeviceIntent();
  id v10 = [super initWithDomain:v7 verb:v8 parametersByName:v9.super.isa];

  return v10;
}

id LocateDeviceIntent.__deallocating_deinit()
{
  return sub_100547414(type metadata accessor for LocateDeviceIntent);
}

uint64_t LocateDeviceIntentResponse.code.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___LocateDeviceIntentResponse_code;
  swift_beginAccess();
  return *(void *)v1;
}

char *LocateDeviceIntentResponse.__allocating_init(code:userActivity:)(uint64_t a1, void *a2)
{
  NSString v5 = (char *)[objc_allocWithZone(v2) init];
  id v6 = &v5[OBJC_IVAR___LocateDeviceIntentResponse_code];
  swift_beginAccess();
  *(void *)id v6 = a1;
  NSString v7 = v5;
  [v7 setUserActivity:a2];

  return v7;
}

char *LocateDeviceIntentResponse.init(code:userActivity:)(uint64_t a1, void *a2)
{
  NSString v5 = (char *)[v2 init];
  id v6 = &v5[OBJC_IVAR___LocateDeviceIntentResponse_code];
  swift_beginAccess();
  *(void *)id v6 = a1;
  NSString v7 = v5;
  [v7 setUserActivity:a2];

  return v7;
}

id LocateDeviceIntentResponse.init()()
{
  *(void *)&v0[OBJC_IVAR___LocateDeviceIntentResponse_code] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocateDeviceIntentResponse();
  return [super init];
}

id LocateDeviceIntentResponse.init(coder:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR___LocateDeviceIntentResponse_code] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for LocateDeviceIntentResponse();
  id v3 = [super initWithCoder:a1];

  return v3;
}

id LocateDeviceIntentResponse.init(backingStore:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR___LocateDeviceIntentResponse_code] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for LocateDeviceIntentResponse();
  [super initWithBackingStore:a1];

  return v3;
}

id sub_1005472A0(char *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  *(void *)&a1[OBJC_IVAR___LocateDeviceIntentResponse_code] = 0;
  v7.receiver = a1;
  v7.super_class = (Class)type metadata accessor for LocateDeviceIntentResponse();
  return [super a3];
}

id LocateDeviceIntentResponse.init(propertiesByName:)(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR___LocateDeviceIntentResponse_code] = 0;
  if (a1)
  {
    v2.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v2.super.Class isa = 0;
  }
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for LocateDeviceIntentResponse();
  [v5 initWithPropertiesByName:v2.super.isa];

  if (v3) {
  return v3;
  }
}

id LocateDeviceIntentResponse.__deallocating_deinit()
{
  return sub_100547414(type metadata accessor for LocateDeviceIntentResponse);
}

id sub_100547414(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for LocateDeviceIntentResponse()
{
  return self;
}

unint64_t sub_100547474()
{
  unint64_t result = qword_1006C23F8;
  if (!qword_1006C23F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C23F8);
  }
  return result;
}

uint64_t sub_1005474C8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  objc_super v3 = (void *)(*a1 + OBJC_IVAR___LocateDeviceIntentResponse_code);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_10054751C(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  objc_super v3 = (void *)(*a2 + OBJC_IVAR___LocateDeviceIntentResponse_code);
  uint64_t result = swift_beginAccess();
  *objc_super v3 = v2;
  return result;
}

ValueMetadata *type metadata accessor for LocateDeviceIntentResponseCode()
{
  return &type metadata for LocateDeviceIntentResponseCode;
}

id PlaySoundIntent.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaySoundIntent();
  return [super init];
}

uint64_t type metadata accessor for PlaySoundIntent()
{
  return self;
}

id PlaySoundIntent.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PlaySoundIntent();
  id v3 = [super initWithCoder:a1];

  return v3;
}

id PlaySoundIntent.init(identifier:backingStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for PlaySoundIntent();
  [super initWithIdentifier:v5 backingStore:a3];

  return v6;
}

id PlaySoundIntent.init(domain:verb:parametersByName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a5)
  {
    v9.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v9.super.Class isa = 0;
  }
  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for PlaySoundIntent();
  id v10 = [super initWithDomain:v7 verb:v8 parametersByName:v9.super.isa];

  return v10;
}

id PlaySoundIntent.__deallocating_deinit()
{
  return sub_100547F64(type metadata accessor for PlaySoundIntent);
}

uint64_t PlaySoundIntentResponse.code.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___PlaySoundIntentResponse_code;
  swift_beginAccess();
  return *(void *)v1;
}

char *PlaySoundIntentResponse.__allocating_init(code:userActivity:)(uint64_t a1, void *a2)
{
  NSString v5 = (char *)[objc_allocWithZone(v2) init];
  id v6 = &v5[OBJC_IVAR___PlaySoundIntentResponse_code];
  swift_beginAccess();
  *(void *)id v6 = a1;
  NSString v7 = v5;
  [v7 setUserActivity:a2];

  return v7;
}

char *PlaySoundIntentResponse.init(code:userActivity:)(uint64_t a1, void *a2)
{
  NSString v5 = (char *)[v2 init];
  id v6 = &v5[OBJC_IVAR___PlaySoundIntentResponse_code];
  swift_beginAccess();
  *(void *)id v6 = a1;
  NSString v7 = v5;
  [v7 setUserActivity:a2];

  return v7;
}

id PlaySoundIntentResponse.init()()
{
  *(void *)&v0[OBJC_IVAR___PlaySoundIntentResponse_code] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaySoundIntentResponse();
  return [super init];
}

id PlaySoundIntentResponse.init(coder:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR___PlaySoundIntentResponse_code] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PlaySoundIntentResponse();
  [super initWithCoder:a1];

  return v3;
}

id PlaySoundIntentResponse.init(backingStore:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR___PlaySoundIntentResponse_code] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PlaySoundIntentResponse();
  [super initWithBackingStore:a1];

  return v3;
}

id sub_100547DF0(char *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  *(void *)&a1[OBJC_IVAR___PlaySoundIntentResponse_code] = 0;
  v7.receiver = a1;
  v7.super_class = (Class)type metadata accessor for PlaySoundIntentResponse();
  return [super a3];
}

id PlaySoundIntentResponse.init(propertiesByName:)(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR___PlaySoundIntentResponse_code] = 0;
  if (a1)
  {
    v2.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v2.super.Class isa = 0;
  }
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PlaySoundIntentResponse();
  id v3 = [super initWithPropertiesByName:v2.super.isa];

  if (v3) {
  return v3;
  }
}

id PlaySoundIntentResponse.__deallocating_deinit()
{
  return sub_100547F64(type metadata accessor for PlaySoundIntentResponse);
}

id sub_100547F64(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for PlaySoundIntentResponse()
{
  return self;
}

unint64_t sub_100547FC4()
{
  unint64_t result = qword_1006C2458;
  if (!qword_1006C2458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C2458);
  }
  return result;
}

uint64_t sub_100548018@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  objc_super v3 = (void *)(*a1 + OBJC_IVAR___PlaySoundIntentResponse_code);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_10054806C(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  objc_super v3 = (void *)(*a2 + OBJC_IVAR___PlaySoundIntentResponse_code);
  uint64_t result = swift_beginAccess();
  *objc_super v3 = v2;
  return result;
}

ValueMetadata *type metadata accessor for PlaySoundIntentResponseCode()
{
  return &type metadata for PlaySoundIntentResponseCode;
}

unint64_t State.init(rawValue:)(unint64_t result)
{
  if (result > 2) {
    return 0;
  }
  return result;
}

uint64_t *sub_1005480DC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  BOOL v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2) {
    uint64_t v2 = 0;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  return result;
}

id static PlaySoundDeviceClassResolutionResult.success(with:)(uint64_t a1)
{
  return sub_100548150(a1, (SEL *)&selRef_successWithResolvedValue_);
}

id static PlaySoundDeviceClassResolutionResult.confirmationRequired(with:)(uint64_t a1)
{
  return sub_100548150(a1, (SEL *)&selRef_confirmationRequiredWithValueToConfirm_);
}

id sub_100548150(uint64_t a1, SEL *a2)
{
  id v2 = [swift_getObjCClassFromMetadata() *a2 a1];

  return v2;
}

id PlaySoundDeviceClassResolutionResult.__allocating_init(JSONDictionary:intent:)(uint64_t a1, void *a2)
{
  id v4 = objc_allocWithZone(v2);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithJSONDictionary:isa forIntent:a2];

  return v6;
}

id StateResolutionResult.init(JSONDictionary:intent:)(uint64_t a1, void *a2)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for StateResolutionResult();
  id v5 = [super initWithJSONDictionary:isa forIntent:a2];

  id v6 = v5;
  if (v6) {

  }
  return v6;
}

uint64_t type metadata accessor for StateResolutionResult()
{
  return self;
}

id StateResolutionResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateResolutionResult();
  return [super dealloc];
}

unint64_t sub_100548448()
{
  unint64_t result = qword_1006C24B0;
  if (!qword_1006C24B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C24B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for State()
{
  return &type metadata for State;
}

unint64_t LocateDeviceClass.init(rawValue:)(unint64_t a1)
{
  return sub_100548728(a1);
}

unint64_t sub_1005484C8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_100548728(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

id LocateDeviceClassResolutionResult.init(JSONDictionary:intent:)(uint64_t a1, void *a2)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for LocateDeviceClassResolutionResult();
  id v5 = [super initWithJSONDictionary:isa, a2];

  id v6 = v5;
  if (v6) {

  }
  return v6;
}

id LocateDeviceClassResolutionResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocateDeviceClassResolutionResult();
  return [super dealloc];
}

unint64_t sub_100548728(unint64_t result)
{
  if (result > 7 || result == 5) {
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for LocateDeviceClassResolutionResult()
{
  return self;
}

unint64_t sub_100548768()
{
  unint64_t result = qword_1006C24E0;
  if (!qword_1006C24E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C24E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocateDeviceClass()
{
  return &type metadata for LocateDeviceClass;
}

id PlaySoundDeviceClassResolutionResult.init(JSONDictionary:intent:)(uint64_t a1, void *a2)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for PlaySoundDeviceClassResolutionResult();
  id v5 = [super initWithJSONDictionary:isa, a2];

  id v6 = v5;
  if (v6) {

  }
  return v6;
}

id PlaySoundDeviceClassResolutionResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaySoundDeviceClassResolutionResult();
  [super dealloc];
}

uint64_t type metadata accessor for PlaySoundDeviceClassResolutionResult()
{
  return self;
}

unint64_t sub_100548A20()
{
  unint64_t result = qword_1006C2510;
  if (!qword_1006C2510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006C2510);
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaySoundDeviceClass()
{
  return &type metadata for PlaySoundDeviceClass;
}

id Device.__allocating_init(identifier:display:pronunciationHint:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v8 = 0;
  }
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a6)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  id v11 = [objc_allocWithZone(v6) initWithIdentifier:v8 displayString:v9 pronunciationHint:v10];

  return v11;
}

id Device.init(identifier:display:pronunciationHint:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v8 = 0;
  }
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a6)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  v13.receiver = v6;
  v13.super_class = (Class)type metadata accessor for Device();
  id v11 = [super initWithIdentifier:v8 displayString:v9 pronunciationHint:v10];

  return v11;
}

uint64_t type metadata accessor for Device()
{
  return self;
}

id Device.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for Device();
  [super initWithCoder:a1];

  return v3;
}

id Device.__deallocating_deinit()
{
  return sub_100549444(type metadata accessor for Device);
}

id static DeviceResolutionResult.success(with:)(uint64_t a1)
{
  v4.receiver = (id)swift_getObjCClassFromMetadata();
  v4.super_class = (Class)&OBJC_METACLASS___DeviceResolutionResult;
  [super successWithResolvedObject:a1];

  return v2;
}

id static DeviceResolutionResult.disambiguation(with:)(unint64_t a1)
{
  if (a1 >> 62)
  {
    sub_100548F5C();
    swift_bridgeObjectRetain();
    _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_100548F5C();
  }
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_100548F5C();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v5.receiver = ObjCClassFromMetadata;
  v5.super_class = (Class)&OBJC_METACLASS___DeviceResolutionResult;
  [super disambiguationWithObjectsToDisambiguate:isa];

  return v3;
}

unint64_t sub_100548F5C()
{
  unint64_t result = qword_1006C2568;
  if (!qword_1006C2568)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1006C2568);
  }
  return result;
}

id static DeviceResolutionResult.confirmationRequired(with:)(uint64_t a1)
{
  v4.receiver = (id)swift_getObjCClassFromMetadata();
  v4.super_class = (Class)&OBJC_METACLASS___DeviceResolutionResult;
  [super confirmationRequiredWithObjectToConfirm:a1];

  return v2;
}

void static DeviceResolutionResult.success(with:)()
{
}

void static DeviceResolutionResult.disambiguation(with:)()
{
}

void static DeviceResolutionResult.confirmationRequired(with:)()
{
}

id DeviceResolutionResult.init(JSONDictionary:intent:)(uint64_t a1, void *a2)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for DeviceResolutionResult();
  id v5 = [super initWithJSONDictionary:isa forIntent:a2];

  id v6 = v5;
  if (v6) {

  }
  return v6;
}

uint64_t type metadata accessor for DeviceResolutionResult()
{
  return self;
}

id DeviceResolutionResult.__deallocating_deinit()
{
  return sub_100549444(type metadata accessor for DeviceResolutionResult);
}

id sub_100549444(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t static SystemInfo.arrowChipID.getter()
{
  return static SystemInfo.arrowChipID.getter();
}

uint64_t static SystemInfo.isInternalBuild.getter()
{
  return static SystemInfo.isInternalBuild.getter();
}

uint64_t isFeatureEnabled(_:)()
{
  return isFeatureEnabled(_:)();
}

{
  return isFeatureEnabled(_:)();
}

uint64_t type metadata accessor for Feature.FindMy()
{
  return type metadata accessor for Feature.FindMy();
}

uint64_t type metadata accessor for Feature.FindMyUI()
{
  return type metadata accessor for Feature.FindMyUI();
}

uint64_t static FindMyRelativeDate.RecencyKey.now(recencyDuration:)()
{
  return static FindMyRelativeDate.RecencyKey.now(recencyDuration:)();
}

uint64_t static FindMyRelativeDate.RecencyKey.live(recencyDuration:)()
{
  return static FindMyRelativeDate.RecencyKey.live(recencyDuration:)();
}

uint64_t type metadata accessor for FindMyRelativeDate.RecencyKey()
{
  return type metadata accessor for FindMyRelativeDate.RecencyKey();
}

uint64_t FindMyRelativeDate.init(date:recencyKey:)()
{
  return FindMyRelativeDate.init(date:recencyKey:)();
}

uint64_t type metadata accessor for FindMyRelativeDate()
{
  return type metadata accessor for FindMyRelativeDate();
}

uint64_t PublishedLocation.Label.combinedNoFallbackLabel(maxLength:)()
{
  return PublishedLocation.Label.combinedNoFallbackLabel(maxLength:)();
}

uint64_t PublishedLocation.Label.primaryAndSecondaryNoFallbackLabel(detailLevel:)()
{
  return PublishedLocation.Label.primaryAndSecondaryNoFallbackLabel(detailLevel:)();
}

uint64_t static PublishedLocation.Label.noLocationLabel.getter()
{
  return static PublishedLocation.Label.noLocationLabel.getter();
}

uint64_t PublishedLocation.Label.init(customLabel:coarseLabel:streetLabel:smallLabel:mediumLabel:largeLabel:poiLabel:)()
{
  return PublishedLocation.Label.init(customLabel:coarseLabel:streetLabel:smallLabel:mediumLabel:largeLabel:poiLabel:)();
}

uint64_t type metadata accessor for PublishedLocation.Label.DetailLevel()
{
  return type metadata accessor for PublishedLocation.Label.DetailLevel();
}

uint64_t type metadata accessor for PublishedLocation.Label.Length()
{
  return type metadata accessor for PublishedLocation.Label.Length();
}

uint64_t type metadata accessor for PublishedLocation.Label()
{
  return type metadata accessor for PublishedLocation.Label();
}

uint64_t static PublishedLocation.Constants.liveLocationRecencyDuration.getter()
{
  return static PublishedLocation.Constants.liveLocationRecencyDuration.getter();
}

uint64_t static PublishedLocation.Constants.regularLocationRecencyDuration.getter()
{
  return static PublishedLocation.Constants.regularLocationRecencyDuration.getter();
}

uint64_t static PublishedLocation.Constants.generalTimestampRecencyDuration.getter()
{
  return static PublishedLocation.Constants.generalTimestampRecencyDuration.getter();
}

uint64_t static Badge.mute.getter()
{
  return static Badge.mute.getter();
}

uint64_t static Badge.favorite.getter()
{
  return static Badge.favorite.getter();
}

uint64_t static Badge.satellite.getter()
{
  return static Badge.satellite.getter();
}

uint64_t static Badge.temporary.getter()
{
  return static Badge.temporary.getter();
}

uint64_t type metadata accessor for Badge()
{
  return type metadata accessor for Badge();
}

uint64_t Person.Handle.init(rawValue:)()
{
  return Person.Handle.init(rawValue:)();
}

uint64_t Person.Handle.rawValue.getter()
{
  return Person.Handle.rawValue.getter();
}

uint64_t type metadata accessor for Person.Handle()
{
  return type metadata accessor for Person.Handle();
}

uint64_t NSNotFound.getter()
{
  return NSNotFound.getter();
}

uint64_t URLRequest.init(url:cachePolicy:timeoutInterval:)()
{
  return URLRequest.init(url:cachePolicy:timeoutInterval:)();
}

uint64_t type metadata accessor for URLRequest()
{
  return type metadata accessor for URLRequest();
}

uint64_t static FormatStyle.list<A>(type:width:)()
{
  return static FormatStyle.list<A>(type:width:)();
}

uint64_t dispatch thunk of JSONDecoder.decode<A>(_:from:)()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t JSONDecoder.init()()
{
  return JSONDecoder.init()();
}

uint64_t type metadata accessor for JSONDecoder()
{
  return type metadata accessor for JSONDecoder();
}

uint64_t dispatch thunk of JSONEncoder.encode<A>(_:)()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t JSONEncoder.init()()
{
  return JSONEncoder.init()();
}

uint64_t type metadata accessor for JSONEncoder()
{
  return type metadata accessor for JSONEncoder();
}

uint64_t static CharacterSet.whitespaces.getter()
{
  return static CharacterSet.whitespaces.getter();
}

uint64_t CharacterSet.init(charactersIn:)()
{
  return CharacterSet.init(charactersIn:)();
}

uint64_t static CharacterSet.decimalDigits.getter()
{
  return static CharacterSet.decimalDigits.getter();
}

uint64_t static CharacterSet.urlPathAllowed.getter()
{
  return static CharacterSet.urlPathAllowed.getter();
}

uint64_t static CharacterSet.controlCharacters.getter()
{
  return static CharacterSet.controlCharacters.getter();
}

uint64_t static CharacterSet.whitespacesAndNewlines.getter()
{
  return static CharacterSet.whitespacesAndNewlines.getter();
}

uint64_t CharacterSet.union(_:)()
{
  return CharacterSet.union(_:)();
}

Swift::Void __swiftcall CharacterSet.insert(charactersIn:)(Swift::String charactersIn)
{
}

uint64_t CharacterSet.insert(_:)()
{
  return CharacterSet.insert(_:)();
}

uint64_t CharacterSet.contains(_:)()
{
  return CharacterSet.contains(_:)();
}

uint64_t CharacterSet.inverted.getter()
{
  return CharacterSet.inverted.getter();
}

uint64_t type metadata accessor for CharacterSet()
{
  return type metadata accessor for CharacterSet();
}

uint64_t DataProtocol.bytes.getter()
{
  return DataProtocol.bytes.getter();
}

uint64_t static Notification._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Notification.userInfo.getter()
{
  return Notification.userInfo.getter();
}

uint64_t type metadata accessor for Notification()
{
  return type metadata accessor for Notification();
}

uint64_t URLQueryItem.init(name:value:)()
{
  return URLQueryItem.init(name:value:)();
}

uint64_t URLQueryItem.name.getter()
{
  return URLQueryItem.name.getter();
}

uint64_t URLQueryItem.value.getter()
{
  return URLQueryItem.value.getter();
}

uint64_t type metadata accessor for URLQueryItem()
{
  return type metadata accessor for URLQueryItem();
}

uint64_t URLComponents.queryItems.getter()
{
  return URLComponents.queryItems.getter();
}

uint64_t URLComponents.queryItems.setter()
{
  return URLComponents.queryItems.setter();
}

uint64_t URLComponents.init(url:resolvingAgainstBaseURL:)()
{
  return URLComponents.init(url:resolvingAgainstBaseURL:)();
}

uint64_t URLComponents.url.getter()
{
  return URLComponents.url.getter();
}

uint64_t URLComponents.host.setter()
{
  return URLComponents.host.setter();
}

uint64_t URLComponents.scheme.setter()
{
  return URLComponents.scheme.setter();
}

uint64_t URLComponents.init(string:)()
{
  return URLComponents.init(string:)();
}

uint64_t URLComponents.init()()
{
  return URLComponents.init()();
}

uint64_t type metadata accessor for URLComponents()
{
  return type metadata accessor for URLComponents();
}

uint64_t __DataStorage.init(bytes:length:)()
{
  return __DataStorage.init(bytes:length:)();
}

uint64_t __DataStorage._bytes.getter()
{
  return __DataStorage._bytes.getter();
}

uint64_t __DataStorage._length.getter()
{
  return __DataStorage._length.getter();
}

uint64_t __DataStorage._offset.getter()
{
  return __DataStorage._offset.getter();
}

uint64_t type metadata accessor for __DataStorage()
{
  return type metadata accessor for __DataStorage();
}

uint64_t DateComponents.day.getter()
{
  return DateComponents.day.getter();
}

uint64_t DateComponents.hour.getter()
{
  return DateComponents.hour.getter();
}

uint64_t DateComponents.hour.setter()
{
  return DateComponents.hour.setter();
}

uint64_t DateComponents.year.getter()
{
  return DateComponents.year.getter();
}

uint64_t DateComponents.month.getter()
{
  return DateComponents.month.getter();
}

uint64_t DateComponents.minute.getter()
{
  return DateComponents.minute.getter();
}

uint64_t DateComponents.minute.setter()
{
  return DateComponents.minute.setter();
}

uint64_t DateComponents.second.getter()
{
  return DateComponents.second.getter();
}

uint64_t DateComponents.weekday.setter()
{
  return DateComponents.weekday.setter();
}

uint64_t DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)()
{
  return DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
}

uint64_t DateComponents.timeZone.setter()
{
  return DateComponents.timeZone.setter();
}

uint64_t type metadata accessor for DateComponents()
{
  return type metadata accessor for DateComponents();
}

uint64_t AttributeScopes.FoundationAttributes.inlinePresentationIntent.getter()
{
  return AttributeScopes.FoundationAttributes.inlinePresentationIntent.getter();
}

uint64_t AttributeScopes.UIKitAttributes.paragraphStyle.getter()
{
  return AttributeScopes.UIKitAttributes.paragraphStyle.getter();
}

uint64_t AttributeScopes.UIKitAttributes.foregroundColor.getter()
{
  return AttributeScopes.UIKitAttributes.foregroundColor.getter();
}

uint64_t dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)()
{
  return dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
}

uint64_t AttributedString.subscript.setter()
{
  return AttributedString.subscript.setter();
}

uint64_t type metadata accessor for AttributedString()
{
  return type metadata accessor for AttributedString();
}

uint64_t AttributedString.init(_:attributes:)()
{
  return AttributedString.init(_:attributes:)();
}

Swift::String __swiftcall NSLocalizedString(_:tableName:bundle:value:comment:)(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  uint64_t v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(_._countAndFlagsBits, _._object, tableName.value._countAndFlagsBits, tableName.value._object, bundle.super.isa, value._countAndFlagsBits, value._object, comment._countAndFlagsBits);
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

uint64_t AttributeContainer.subscript.setter()
{
  return AttributeContainer.subscript.setter();
}

uint64_t AttributeContainer.init()()
{
  return AttributeContainer.init()();
}

uint64_t type metadata accessor for AttributeContainer()
{
  return type metadata accessor for AttributeContainer();
}

uint64_t PersonNameComponents.givenName.setter()
{
  return PersonNameComponents.givenName.setter();
}

uint64_t PersonNameComponents.familyName.setter()
{
  return PersonNameComponents.familyName.setter();
}

NSPersonNameComponents __swiftcall PersonNameComponents._bridgeToObjectiveC()()
{
  uint64_t v0 = (objc_class *)PersonNameComponents._bridgeToObjectiveC()();
  result._private = v1;
  result.super.Class isa = v0;
  return result;
}

uint64_t PersonNameComponents.nickname.setter()
{
  return PersonNameComponents.nickname.setter();
}

uint64_t PersonNameComponents.init()()
{
  return PersonNameComponents.init()();
}

uint64_t type metadata accessor for PersonNameComponents()
{
  return type metadata accessor for PersonNameComponents();
}

uint64_t static _BridgedStoredNSError.== infix(_:_:)()
{
  return static _BridgedStoredNSError.== infix(_:_:)();
}

uint64_t _BridgedStoredNSError.init(_:userInfo:)()
{
  return _BridgedStoredNSError.init(_:userInfo:)();
}

uint64_t AttributeDynamicLookup.subscript.getter()
{
  return AttributeDynamicLookup.subscript.getter();
}

{
  return AttributeDynamicLookup.subscript.getter();
}

uint64_t _convertErrorToNSError(_:)()
{
  return _convertErrorToNSError(_:)();
}

uint64_t _convertNSErrorToError(_:)()
{
  return _convertNSErrorToError(_:)();
}

uint64_t _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)()
{
  return _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
}

uint64_t static FormatStyleCapitalizationContext.middleOfSentence.getter()
{
  return static FormatStyleCapitalizationContext.middleOfSentence.getter();
}

uint64_t static FormatStyleCapitalizationContext.beginningOfSentence.getter()
{
  return static FormatStyleCapitalizationContext.beginningOfSentence.getter();
}

uint64_t type metadata accessor for FormatStyleCapitalizationContext()
{
  return type metadata accessor for FormatStyleCapitalizationContext();
}

uint64_t _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)()
{
  return _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();
}

uint64_t URL.absoluteString.getter()
{
  return URL.absoluteString.getter();
}

uint64_t URL.init(fileURLWithPath:)()
{
  return URL.init(fileURLWithPath:)();
}

uint64_t URL.lastPathComponent.getter()
{
  return URL.lastPathComponent.getter();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

uint64_t URL.appendingPathComponent(_:isDirectory:)()
{
  return URL.appendingPathComponent(_:isDirectory:)();
}

uint64_t URL.appendingPathComponent(_:)()
{
  return URL.appendingPathComponent(_:)();
}

uint64_t static URL.== infix(_:_:)()
{
  return static URL.== infix(_:_:)();
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t URL.init(string:)()
{
  return URL.init(string:)();
}

uint64_t type metadata accessor for URL()
{
  return type metadata accessor for URL();
}

uint64_t Data.init(contentsOf:options:)()
{
  return Data.init(contentsOf:options:)();
}

uint64_t Data.description.getter()
{
  return Data.description.getter();
}

uint64_t type metadata accessor for Data.RangeReference()
{
  return type metadata accessor for Data.RangeReference();
}

uint64_t Data.debugDescription.getter()
{
  return Data.debugDescription.getter();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)Data._bridgeToObjectiveC()();
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Data.write(to:options:)()
{
  return Data.write(to:options:)();
}

uint64_t Data.hash(algorithm:)()
{
  return Data.hash(algorithm:)();
}

uint64_t Date.timeIntervalSinceReferenceDate.getter()
{
  return Date.timeIntervalSinceReferenceDate.getter();
}

uint64_t static Date.FormatStyle.TimeStyle.omitted.getter()
{
  return static Date.FormatStyle.TimeStyle.omitted.getter();
}

uint64_t type metadata accessor for Date.FormatStyle.TimeStyle()
{
  return type metadata accessor for Date.FormatStyle.TimeStyle();
}

uint64_t static Date.FormatStyle.DateStyle.abbreviated.getter()
{
  return static Date.FormatStyle.DateStyle.abbreviated.getter();
}

uint64_t type metadata accessor for Date.FormatStyle.DateStyle()
{
  return type metadata accessor for Date.FormatStyle.DateStyle();
}

uint64_t static Date.distantPast.getter()
{
  return static Date.distantPast.getter();
}

uint64_t static Date.distantFuture.getter()
{
  return static Date.distantFuture.getter();
}

uint64_t Date.timeIntervalSince(_:)()
{
  return Date.timeIntervalSince(_:)();
}

uint64_t Date.addingTimeInterval(_:)()
{
  return Date.addingTimeInterval(_:)();
}

NSDate __swiftcall Date._bridgeToObjectiveC()()
{
  return (NSDate)Date._bridgeToObjectiveC()();
}

uint64_t static Date.> infix(_:_:)()
{
  return static Date.> infix(_:_:)();
}

uint64_t static Date.< infix(_:_:)()
{
  return static Date.< infix(_:_:)();
}

uint64_t Date.init(timeIntervalSinceNow:)()
{
  return Date.init(timeIntervalSinceNow:)();
}

uint64_t Date.timeIntervalSinceNow.getter()
{
  return Date.timeIntervalSinceNow.getter();
}

uint64_t Date.init(timeIntervalSince1970:)()
{
  return Date.init(timeIntervalSince1970:)();
}

uint64_t Date.timeIntervalSince1970.getter()
{
  return Date.timeIntervalSince1970.getter();
}

uint64_t static Date.== infix(_:_:)()
{
  return static Date.== infix(_:_:)();
}

uint64_t static Date._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t static Date.now.getter()
{
  return static Date.now.getter();
}

uint64_t Date.distance(to:)()
{
  return Date.distance(to:)();
}

uint64_t Date.formatted(date:time:)()
{
  return Date.formatted(date:time:)();
}

uint64_t Date.init()()
{
  return Date.init()();
}

uint64_t type metadata accessor for Date()
{
  return type metadata accessor for Date();
}

uint64_t UUID.init(bytes:)()
{
  return UUID.init(bytes:)();
}

uint64_t UUID.init(uuidString:)()
{
  return UUID.init(uuidString:)();
}

uint64_t UUID.uuidString.getter()
{
  return UUID.uuidString.getter();
}

NSUUID __swiftcall UUID._bridgeToObjectiveC()()
{
  return (NSUUID)UUID._bridgeToObjectiveC()();
}

uint64_t static UUID.== infix(_:_:)()
{
  return static UUID.== infix(_:_:)();
}

uint64_t static UUID._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t UUID.init()()
{
  return UUID.init()();
}

uint64_t type metadata accessor for UUID()
{
  return type metadata accessor for UUID();
}

uint64_t NSLog(_:_:)()
{
  return NSLog(_:_:)();
}

NSLocale __swiftcall Locale._bridgeToObjectiveC()()
{
  return (NSLocale)Locale._bridgeToObjectiveC()();
}

uint64_t static Locale.autoupdatingCurrent.getter()
{
  return static Locale.autoupdatingCurrent.getter();
}

uint64_t static Locale.current.getter()
{
  return static Locale.current.getter();
}

uint64_t type metadata accessor for Locale()
{
  return type metadata accessor for Locale();
}

uint64_t type metadata accessor for Calendar.Identifier()
{
  return type metadata accessor for Calendar.Identifier();
}

uint64_t Calendar.init(identifier:)()
{
  return Calendar.init(identifier:)();
}

uint64_t Calendar.startOfDay(for:)()
{
  return Calendar.startOfDay(for:)();
}

uint64_t Calendar.firstWeekday.getter()
{
  return Calendar.firstWeekday.getter();
}

uint64_t Calendar.isDateInToday(_:)()
{
  return Calendar.isDateInToday(_:)();
}

uint64_t type metadata accessor for Calendar.MatchingPolicy()
{
  return type metadata accessor for Calendar.MatchingPolicy();
}

uint64_t Calendar.dateComponents(_:from:to:)()
{
  return Calendar.dateComponents(_:from:to:)();
}

uint64_t Calendar.dateComponents(_:from:)()
{
  return Calendar.dateComponents(_:from:)();
}

uint64_t type metadata accessor for Calendar.SearchDirection()
{
  return type metadata accessor for Calendar.SearchDirection();
}

uint64_t type metadata accessor for Calendar.RepeatedTimePolicy()
{
  return type metadata accessor for Calendar.RepeatedTimePolicy();
}

NSCalendar __swiftcall Calendar._bridgeToObjectiveC()()
{
  return (NSCalendar)Calendar._bridgeToObjectiveC()();
}

uint64_t static Calendar.autoupdatingCurrent.getter()
{
  return static Calendar.autoupdatingCurrent.getter();
}

uint64_t Calendar.veryShortStandaloneWeekdaySymbols.getter()
{
  return Calendar.veryShortStandaloneWeekdaySymbols.getter();
}

uint64_t static Calendar._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Calendar._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Calendar.date(bySettingHour:minute:second:of:matchingPolicy:repeatedTimePolicy:direction:)()
{
  return Calendar.date(bySettingHour:minute:second:of:matchingPolicy:repeatedTimePolicy:direction:)();
}

uint64_t Calendar.date(from:)()
{
  return Calendar.date(from:)();
}

uint64_t Calendar.date(byAdding:value:to:wrappingComponents:)()
{
  return Calendar.date(byAdding:value:to:wrappingComponents:)();
}

uint64_t Calendar.locale.setter()
{
  return Calendar.locale.setter();
}

uint64_t static Calendar.current.getter()
{
  return static Calendar.current.getter();
}

uint64_t Calendar.nextDate(after:matching:matchingPolicy:repeatedTimePolicy:direction:)()
{
  return Calendar.nextDate(after:matching:matchingPolicy:repeatedTimePolicy:direction:)();
}

uint64_t Calendar.timeZone.setter()
{
  return Calendar.timeZone.setter();
}

uint64_t type metadata accessor for Calendar.Component()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t Calendar.component(_:from:)()
{
  return Calendar.component(_:from:)();
}

uint64_t type metadata accessor for Calendar()
{
  return type metadata accessor for Calendar();
}

void __swiftcall IndexSet._bridgeToObjectiveC()(NSIndexSet *__return_ptr retstr)
{
}

uint64_t IndexSet.init(integer:)()
{
  return IndexSet.init(integer:)();
}

uint64_t type metadata accessor for IndexSet()
{
  return type metadata accessor for IndexSet();
}

NSTimeZone __swiftcall TimeZone._bridgeToObjectiveC()()
{
  return (NSTimeZone)TimeZone._bridgeToObjectiveC()();
}

uint64_t static TimeZone.autoupdatingCurrent.getter()
{
  return static TimeZone.autoupdatingCurrent.getter();
}

uint64_t static TimeZone._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static TimeZone._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t static TimeZone.current.getter()
{
  return static TimeZone.current.getter();
}

uint64_t type metadata accessor for TimeZone()
{
  return type metadata accessor for TimeZone();
}

uint64_t IndexPath.description.getter()
{
  return IndexPath.description.getter();
}

uint64_t IndexPath.debugDescription.getter()
{
  return IndexPath.debugDescription.getter();
}

NSIndexPath __swiftcall IndexPath._bridgeToObjectiveC()()
{
  return (NSIndexPath)IndexPath._bridgeToObjectiveC()();
}

uint64_t static IndexPath.== infix(_:_:)()
{
  return static IndexPath.== infix(_:_:)();
}

uint64_t static IndexPath._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t IndexPath.init(row:section:)()
{
  return IndexPath.init(row:section:)();
}

uint64_t IndexPath.row.getter()
{
  return IndexPath.row.getter();
}

uint64_t IndexPath.init(item:section:)()
{
  return IndexPath.init(item:section:)();
}

uint64_t IndexPath.item.getter()
{
  return IndexPath.item.getter();
}

uint64_t IndexPath.section.getter()
{
  return IndexPath.section.getter();
}

uint64_t type metadata accessor for IndexPath()
{
  return type metadata accessor for IndexPath();
}

uint64_t static Selector.== infix(_:_:)()
{
  return static Selector.== infix(_:_:)();
}

uint64_t type metadata accessor for FMFindingTechnology()
{
  return type metadata accessor for FMFindingTechnology();
}

uint64_t FMFindingProductType.isAirPods.getter()
{
  return FMFindingProductType.isAirPods.getter();
}

uint64_t type metadata accessor for FMFindingProductType()
{
  return type metadata accessor for FMFindingProductType();
}

uint64_t dispatch thunk of FMFindingViewController.isSoundPlaying.setter()
{
  return dispatch thunk of FMFindingViewController.isSoundPlaying.setter();
}

uint64_t dispatch thunk of FMFindingViewController.dismissedHandler.setter()
{
  return dispatch thunk of FMFindingViewController.dismissedHandler.setter();
}

uint64_t dispatch thunk of FMFindingViewController.playSoundHandler.setter()
{
  return dispatch thunk of FMFindingViewController.playSoundHandler.setter();
}

uint64_t dispatch thunk of FMFindingViewController.willAppearHandler.setter()
{
  return dispatch thunk of FMFindingViewController.willAppearHandler.setter();
}

uint64_t dispatch thunk of FMFindingViewController.willDisappearHandler.setter()
{
  return dispatch thunk of FMFindingViewController.willDisappearHandler.setter();
}

uint64_t FMFindingViewController.init(session:)()
{
  return FMFindingViewController.init(session:)();
}

uint64_t type metadata accessor for FMFindingViewController()
{
  return type metadata accessor for FMFindingViewController();
}

uint64_t type metadata accessor for FMFindingUIAVPlayerVideoInfo()
{
  return type metadata accessor for FMFindingUIAVPlayerVideoInfo();
}

uint64_t type metadata accessor for FMFindingType()
{
  return type metadata accessor for FMFindingType();
}

uint64_t dispatch thunk of FMFindingSession.updateSessionForRemovedFriendship()()
{
  return dispatch thunk of FMFindingSession.updateSessionForRemovedFriendship()();
}

uint64_t dispatch thunk of FMFindingSession.findingSessionIdentifier.getter()
{
  return dispatch thunk of FMFindingSession.findingSessionIdentifier.getter();
}

uint64_t dispatch thunk of FMFindingSession.sessionTimedOut()()
{
  return dispatch thunk of FMFindingSession.sessionTimedOut()();
}

uint64_t FMFindingSession.__allocating_init(itemGroupFindables:primaryPart:groupName:findingTechnology:arSession:)()
{
  return FMFindingSession.__allocating_init(itemGroupFindables:primaryPart:groupName:findingTechnology:arSession:)();
}

uint64_t dispatch thunk of FMFindingSession.update(groupedItemIdentifiers:)()
{
  return dispatch thunk of FMFindingSession.update(groupedItemIdentifiers:)();
}

uint64_t FMFindingSession.__allocating_init(findable:findingTechnology:arSession:)()
{
  return FMFindingSession.__allocating_init(findable:findingTechnology:arSession:)();
}

uint64_t type metadata accessor for FMFindingSession()
{
  return type metadata accessor for FMFindingSession();
}

uint64_t FMFindingPartInfo.init(name:symbol:type:)()
{
  return FMFindingPartInfo.init(name:symbol:type:)();
}

uint64_t type metadata accessor for FMFindingPartInfo()
{
  return type metadata accessor for FMFindingPartInfo();
}

uint64_t type metadata accessor for FMFindingPartType()
{
  return type metadata accessor for FMFindingPartType();
}

uint64_t dispatch thunk of FMFindable.findingProductType.getter()
{
  return dispatch thunk of FMFindable.findingProductType.getter();
}

uint64_t static FMExperienceType.== infix(_:_:)()
{
  return static FMExperienceType.== infix(_:_:)();
}

uint64_t type metadata accessor for FMExperienceType()
{
  return type metadata accessor for FMExperienceType();
}

uint64_t FMFindableObject.init(name:findingIdentifier:findingTechnology:findingProductType:videoInfo:discoveryToken:)()
{
  return FMFindableObject.init(name:findingIdentifier:findingTechnology:findingProductType:videoInfo:discoveryToken:)();
}

uint64_t type metadata accessor for FMFindableObject()
{
  return type metadata accessor for FMFindableObject();
}

uint64_t dispatch thunk of FMConnectionManager.disconnect()()
{
  return dispatch thunk of FMConnectionManager.disconnect()();
}

uint64_t FMConnectionManager.identifiers.getter()
{
  return FMConnectionManager.identifiers.getter();
}

uint64_t static FMConnectionManager.hostSupportsRanging.getter()
{
  return static FMConnectionManager.hostSupportsRanging.getter();
}

uint64_t dispatch thunk of FMConnectionManager.type.getter()
{
  return dispatch thunk of FMConnectionManager.type.getter();
}

uint64_t dispatch thunk of FMConnectionManager.connect()()
{
  return dispatch thunk of FMConnectionManager.connect()();
}

uint64_t FMConnectionManager.findables.getter()
{
  return FMConnectionManager.findables.getter();
}

uint64_t type metadata accessor for FMConnectionManager()
{
  return type metadata accessor for FMConnectionManager();
}

uint64_t FMR1AirPodsVideoInfo.getter()
{
  return FMR1AirPodsVideoInfo.getter();
}

uint64_t FMR1AirTagZeusVideoInfo.getter()
{
  return FMR1AirTagZeusVideoInfo.getter();
}

uint64_t FMItemBTConnectionManager.init(findables:connectionContext:)()
{
  return FMItemBTConnectionManager.init(findables:connectionContext:)();
}

uint64_t type metadata accessor for FMItemBTConnectionManager()
{
  return type metadata accessor for FMItemBTConnectionManager();
}

uint64_t dispatch thunk of FMItemR1ConnectionManager.delegate.setter()
{
  return dispatch thunk of FMItemR1ConnectionManager.delegate.setter();
}

uint64_t FMItemR1ConnectionManager.init(findables:connectionContext:)()
{
  return FMItemR1ConnectionManager.init(findables:connectionContext:)();
}

uint64_t type metadata accessor for FMItemR1ConnectionManager()
{
  return type metadata accessor for FMItemR1ConnectionManager();
}

uint64_t FMR1AirTagDefaultVideoInfo.getter()
{
  return FMR1AirTagDefaultVideoInfo.getter();
}

uint64_t dispatch thunk of FMPrecisionConnectionManager.updateLocationForFindable(findable:location:)()
{
  return dispatch thunk of FMPrecisionConnectionManager.updateLocationForFindable(findable:location:)();
}

uint64_t dispatch thunk of FMPrecisionConnectionManager.delegate.setter()
{
  return dispatch thunk of FMPrecisionConnectionManager.delegate.setter();
}

uint64_t dispatch thunk of FMPrecisionConnectionManager.arSession.getter()
{
  return dispatch thunk of FMPrecisionConnectionManager.arSession.getter();
}

uint64_t FMPrecisionConnectionManager.init(findables:connectionContext:arSession:)()
{
  return FMPrecisionConnectionManager.init(findables:connectionContext:arSession:)();
}

uint64_t type metadata accessor for FMPrecisionConnectionManager()
{
  return type metadata accessor for FMPrecisionConnectionManager();
}

uint64_t ObservationRegistrar.init()()
{
  return ObservationRegistrar.init()();
}

uint64_t type metadata accessor for ObservationRegistrar()
{
  return type metadata accessor for ObservationRegistrar();
}

NSNumber __swiftcall CGFloat._bridgeToObjectiveC()()
{
  return (NSNumber)CGFloat._bridgeToObjectiveC()();
}

uint64_t static CGFloat._forceBridgeFromObjectiveC(_:result:)()
{
  return static CGFloat._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static CGFloat._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
}

Swift::Bool __swiftcall FeatureFlagsKey.isEnabled()()
{
  return FeatureFlagsKey.isEnabled()();
}

uint64_t type metadata accessor for ClientOrigin()
{
  return type metadata accessor for ClientOrigin();
}

uint64_t type metadata accessor for RequestOrigin()
{
  return type metadata accessor for RequestOrigin();
}

uint64_t RequestOrigin.init(_:)()
{
  return RequestOrigin.init(_:)();
}

uint64_t type metadata accessor for FriendshipExpiration()
{
  return type metadata accessor for FriendshipExpiration();
}

uint64_t static Fence.Error.errorDomain.getter()
{
  return static Fence.Error.errorDomain.getter();
}

uint64_t Fence.Error.rawValue.getter()
{
  return Fence.Error.rawValue.getter();
}

uint64_t type metadata accessor for Fence.Error()
{
  return type metadata accessor for Fence.Error();
}

uint64_t Handle.init(withID:serverID:pushIdentifiers:expiresByGroupId:siblingIdentifiers:)()
{
  return Handle.init(withID:serverID:pushIdentifiers:expiresByGroupId:siblingIdentifiers:)();
}

uint64_t type metadata accessor for Handle()
{
  return type metadata accessor for Handle();
}

uint64_t type metadata accessor for Session()
{
  return type metadata accessor for Session();
}

uint64_t Session.init(_:)()
{
  return Session.init(_:)();
}

uint64_t type metadata accessor for FindMyRelativeDateFormatStyle.DisplayStyle()
{
  return type metadata accessor for FindMyRelativeDateFormatStyle.DisplayStyle();
}

uint64_t FindMyRelativeDateFormatStyle.init(anchor:displayStyle:capitalizationContext:recencyKey:locale:calendar:)()
{
  return FindMyRelativeDateFormatStyle.init(anchor:displayStyle:capitalizationContext:recencyKey:locale:calendar:)();
}

uint64_t FindMyRelativeDateFormatStyle.format(_:)()
{
  return FindMyRelativeDateFormatStyle.format(_:)();
}

uint64_t type metadata accessor for FindMyRelativeDateFormatStyle()
{
  return type metadata accessor for FindMyRelativeDateFormatStyle();
}

uint64_t static GenericControl.Info.offerLocationMenu(compactTitleOnly:fromEmailDescription:forceInProgressState:forceDisabledState:action:)()
{
  return static GenericControl.Info.offerLocationMenu(compactTitleOnly:fromEmailDescription:forceInProgressState:forceDisabledState:action:)();
}

uint64_t GenericControl.Info.Label.init(title:symbol:forceStyleProminent:forceInProgressState:forceDisabledState:)()
{
  return GenericControl.Info.Label.init(title:symbol:forceStyleProminent:forceInProgressState:forceDisabledState:)();
}

uint64_t type metadata accessor for GenericControl.Info()
{
  return type metadata accessor for GenericControl.Info();
}

uint64_t DiscoveredAccessory.init(identifier:productType:productImage:)()
{
  return DiscoveredAccessory.init(identifier:productType:productImage:)();
}

uint64_t type metadata accessor for DiscoveredAccessory()
{
  return type metadata accessor for DiscoveredAccessory();
}

uint64_t type metadata accessor for OfferLocationDuration()
{
  return type metadata accessor for OfferLocationDuration();
}

Swift::Void __swiftcall AccessoryOnboardingCoordinator.start()()
{
}

uint64_t AccessoryOnboardingCoordinator.delegate.setter()
{
  return AccessoryOnboardingCoordinator.delegate.setter();
}

uint64_t AccessoryOnboardingCoordinator.init(presenter:accessory:)()
{
  return AccessoryOnboardingCoordinator.init(presenter:accessory:)();
}

uint64_t type metadata accessor for AccessoryOnboardingCoordinator()
{
  return type metadata accessor for AccessoryOnboardingCoordinator();
}

uint64_t FindMyAppCoreTester.init(text:)()
{
  return FindMyAppCoreTester.init(text:)();
}

uint64_t type metadata accessor for FindMyAppCoreTester()
{
  return type metadata accessor for FindMyAppCoreTester();
}

uint64_t static LostDevice.Capabilities.isLostModeEnabled.getter()
{
  return static LostDevice.Capabilities.isLostModeEnabled.getter();
}

uint64_t type metadata accessor for LostDevice.Capabilities()
{
  return type metadata accessor for LostDevice.Capabilities();
}

uint64_t LostDevice.init(name:capabilities:isConsideredAccessory:)()
{
  return LostDevice.init(name:capabilities:isConsideredAccessory:)();
}

uint64_t type metadata accessor for LostDevice()
{
  return type metadata accessor for LostDevice();
}

uint64_t LostModeInfo.phoneNumber.getter()
{
  return LostModeInfo.phoneNumber.getter();
}

uint64_t LostModeInfo.email.getter()
{
  return LostModeInfo.email.getter();
}

uint64_t LostModeInfo.init(handle:message:)()
{
  return LostModeInfo.init(handle:message:)();
}

uint64_t LostModeInfo.message.getter()
{
  return LostModeInfo.message.getter();
}

uint64_t type metadata accessor for LostModeInfo()
{
  return type metadata accessor for LostModeInfo();
}

uint64_t static LostAccessory.Capabilities.isLostModeEnabled.getter()
{
  return static LostAccessory.Capabilities.isLostModeEnabled.getter();
}

uint64_t static LostAccessory.Capabilities.isDelegatedSharesEnabled.getter()
{
  return static LostAccessory.Capabilities.isDelegatedSharesEnabled.getter();
}

uint64_t type metadata accessor for LostAccessory.Capabilities()
{
  return type metadata accessor for LostAccessory.Capabilities();
}

uint64_t LostAccessory.init(id:capabilities:accessoryType:)()
{
  return LostAccessory.init(id:capabilities:accessoryType:)();
}

uint64_t type metadata accessor for LostAccessory()
{
  return type metadata accessor for LostAccessory();
}

uint64_t type metadata accessor for ShareItemError()
{
  return type metadata accessor for ShareItemError();
}

uint64_t PunchoutHandler.init(urlPunchoutBlock:activityPunchoutBlock:)()
{
  return PunchoutHandler.init(urlPunchoutBlock:activityPunchoutBlock:)();
}

uint64_t type metadata accessor for PunchoutHandler()
{
  return type metadata accessor for PunchoutHandler();
}

uint64_t DelegatedURLShare.accessoryId.getter()
{
  return DelegatedURLShare.accessoryId.getter();
}

uint64_t DelegatedURLShare.numberOfViews.getter()
{
  return DelegatedURLShare.numberOfViews.getter();
}

uint64_t DelegatedURLShare.expirationDate.getter()
{
  return DelegatedURLShare.expirationDate.getter();
}

uint64_t DelegatedURLShare.init(url:expirationDate:accessoryId:accessoryName:accessoryType:numberOfViews:)()
{
  return DelegatedURLShare.init(url:expirationDate:accessoryId:accessoryName:accessoryType:numberOfViews:)();
}

uint64_t type metadata accessor for DelegatedURLShare()
{
  return type metadata accessor for DelegatedURLShare();
}

uint64_t type metadata accessor for LostAccessoryType()
{
  return type metadata accessor for LostAccessoryType();
}

uint64_t PasteboardHandler.init(copyURLBlock:)()
{
  return PasteboardHandler.init(copyURLBlock:)();
}

uint64_t type metadata accessor for PasteboardHandler()
{
  return type metadata accessor for PasteboardHandler();
}

uint64_t type metadata accessor for OfferLocationError()
{
  return type metadata accessor for OfferLocationError();
}

uint64_t type metadata accessor for PeopleListPersonRow.State.DetailOrProgress()
{
  return type metadata accessor for PeopleListPersonRow.State.DetailOrProgress();
}

uint64_t type metadata accessor for PeopleListPersonRow.State.RelativeDateOrString()
{
  return type metadata accessor for PeopleListPersonRow.State.RelativeDateOrString();
}

uint64_t PeopleListPersonRow.State.ID.init(rawValue:)()
{
  return PeopleListPersonRow.State.ID.init(rawValue:)();
}

uint64_t type metadata accessor for PeopleListPersonRow.State.ID()
{
  return type metadata accessor for PeopleListPersonRow.State.ID();
}

uint64_t static PeopleListPersonRow.State.== infix(_:_:)()
{
  return static PeopleListPersonRow.State.== infix(_:_:)();
}

uint64_t PeopleListPersonRow.State.init(id:title:subtitle:subtitleExtra:detailOrProgress:badge:contact:primaryControl:secondaryControl:)()
{
  return PeopleListPersonRow.State.init(id:title:subtitle:subtitleExtra:detailOrProgress:badge:contact:primaryControl:secondaryControl:)();
}

uint64_t type metadata accessor for PeopleListPersonRow.State()
{
  return type metadata accessor for PeopleListPersonRow.State();
}

uint64_t PeopleListPersonRow.init(state:)()
{
  return PeopleListPersonRow.init(state:)();
}

uint64_t type metadata accessor for PeopleListPersonRow()
{
  return type metadata accessor for PeopleListPersonRow();
}

uint64_t type metadata accessor for ItemProximityProvider.Proximity()
{
  return type metadata accessor for ItemProximityProvider.Proximity();
}

uint64_t ItemProximityProvider.init(stream:)()
{
  return ItemProximityProvider.init(stream:)();
}

uint64_t type metadata accessor for ItemProximityProvider()
{
  return type metadata accessor for ItemProximityProvider();
}

uint64_t ContactPickerViewModel.Dependencies.init(isReachable:isHandlePartOfSignedInAccount:excludedSuggestedContactHandles:)()
{
  return ContactPickerViewModel.Dependencies.init(isReachable:isHandlePartOfSignedInAccount:excludedSuggestedContactHandles:)();
}

uint64_t type metadata accessor for ContactPickerViewModel.Dependencies.ReachabilityResult()
{
  return type metadata accessor for ContactPickerViewModel.Dependencies.ReachabilityResult();
}

uint64_t type metadata accessor for ContactPickerViewModel.Dependencies.PartOfSignedInAccountResult()
{
  return type metadata accessor for ContactPickerViewModel.Dependencies.PartOfSignedInAccountResult();
}

uint64_t type metadata accessor for ContactPickerViewModel.Dependencies()
{
  return type metadata accessor for ContactPickerViewModel.Dependencies();
}

uint64_t DelegatedSharesUpdater.init(stream:)()
{
  return DelegatedSharesUpdater.init(stream:)();
}

uint64_t type metadata accessor for DelegatedSharesUpdater()
{
  return type metadata accessor for DelegatedSharesUpdater();
}

uint64_t ItemContactInfoUpdater.init(enableBlock:updateBlock:disableBlock:)()
{
  return ItemContactInfoUpdater.init(enableBlock:updateBlock:disableBlock:)();
}

uint64_t type metadata accessor for ItemContactInfoUpdater()
{
  return type metadata accessor for ItemContactInfoUpdater();
}

uint64_t type metadata accessor for LostModeReportingState()
{
  return type metadata accessor for LostModeReportingState();
}

uint64_t LostModeStatusProvider.init(streamCreationBlock:)()
{
  return LostModeStatusProvider.init(streamCreationBlock:)();
}

uint64_t type metadata accessor for LostModeStatusProvider()
{
  return type metadata accessor for LostModeStatusProvider();
}

uint64_t ItemContactInfoProvider.init(contactInfoBlock:notifyWhenFoundBlock:)()
{
  return ItemContactInfoProvider.init(contactInfoBlock:notifyWhenFoundBlock:)();
}

uint64_t type metadata accessor for ItemContactInfoProvider()
{
  return type metadata accessor for ItemContactInfoProvider();
}

uint64_t ItemContactInfoFormatter.init(phoneNumberFormatBlock:phoneNumberUnformatBlock:)()
{
  return ItemContactInfoFormatter.init(phoneNumberFormatBlock:phoneNumberUnformatBlock:)();
}

uint64_t type metadata accessor for ItemContactInfoFormatter()
{
  return type metadata accessor for ItemContactInfoFormatter();
}

uint64_t ItemContactInfoValidator.init(emailValidationBlock:phoneNumberValidationBlock:)()
{
  return ItemContactInfoValidator.init(emailValidationBlock:phoneNumberValidationBlock:)();
}

uint64_t type metadata accessor for ItemContactInfoValidator()
{
  return type metadata accessor for ItemContactInfoValidator();
}

uint64_t DelegatedSharesInvalidator.init(urlInvalidationBlock:)()
{
  return DelegatedSharesInvalidator.init(urlInvalidationBlock:)();
}

uint64_t type metadata accessor for DelegatedSharesInvalidator()
{
  return type metadata accessor for DelegatedSharesInvalidator();
}

uint64_t ShareItemContactPickerView.init(dependencies:isCapabilityEnabled:isAirTag:maxCircleMembersSharingLimits:performAction:showOfferSuccess:)()
{
  return ShareItemContactPickerView.init(dependencies:isCapabilityEnabled:isAirTag:maxCircleMembersSharingLimits:performAction:showOfferSuccess:)();
}

uint64_t type metadata accessor for ShareItemContactPickerView()
{
  return type metadata accessor for ShareItemContactPickerView();
}

uint64_t type metadata accessor for DeviceLostModeReportingState()
{
  return type metadata accessor for DeviceLostModeReportingState();
}

uint64_t DeviceLostModeStatusProvider.init(stream:)()
{
  return DeviceLostModeStatusProvider.init(stream:)();
}

uint64_t type metadata accessor for DeviceLostModeStatusProvider()
{
  return type metadata accessor for DeviceLostModeStatusProvider();
}

uint64_t type metadata accessor for DelegatedSharesReportingState()
{
  return type metadata accessor for DelegatedSharesReportingState();
}

uint64_t LostModeManagementSectionView.init(viewModel:)()
{
  return LostModeManagementSectionView.init(viewModel:)();
}

uint64_t type metadata accessor for LostModeManagementSectionView()
{
  return type metadata accessor for LostModeManagementSectionView();
}

uint64_t ShareLiveLocationURLGenerator.init(maxShareLocationLimit:shareURLGenerator:)()
{
  return ShareLiveLocationURLGenerator.init(maxShareLocationLimit:shareURLGenerator:)();
}

uint64_t type metadata accessor for ShareLiveLocationURLGenerator()
{
  return type metadata accessor for ShareLiveLocationURLGenerator();
}

uint64_t type metadata accessor for DelegatedURLShareAccessoryType()
{
  return type metadata accessor for DelegatedURLShareAccessoryType();
}

uint64_t OfferLocationContactPickerView.init(dependencies:fromEmail:performAction:showOfferSuccess:)()
{
  return OfferLocationContactPickerView.init(dependencies:fromEmail:performAction:showOfferSuccess:)();
}

uint64_t type metadata accessor for OfferLocationContactPickerView()
{
  return type metadata accessor for OfferLocationContactPickerView();
}

uint64_t ItemContactInfoEditItemsProvider.init(visibleEditItemsBlock:userInteractableEditItemsBlock:)()
{
  return ItemContactInfoEditItemsProvider.init(visibleEditItemsBlock:userInteractableEditItemsBlock:)();
}

uint64_t type metadata accessor for ItemContactInfoEditItemsProvider.EditType()
{
  return type metadata accessor for ItemContactInfoEditItemsProvider.EditType();
}

uint64_t static ItemContactInfoEditItemsProvider.EditItems.contactInfo.getter()
{
  return static ItemContactInfoEditItemsProvider.EditItems.contactInfo.getter();
}

uint64_t static ItemContactInfoEditItemsProvider.EditItems.notifyWhenFound.getter()
{
  return static ItemContactInfoEditItemsProvider.EditItems.notifyWhenFound.getter();
}

uint64_t static ItemContactInfoEditItemsProvider.EditItems.message.getter()
{
  return static ItemContactInfoEditItemsProvider.EditItems.message.getter();
}

uint64_t type metadata accessor for ItemContactInfoEditItemsProvider.EditItems()
{
  return type metadata accessor for ItemContactInfoEditItemsProvider.EditItems();
}

uint64_t type metadata accessor for ItemContactInfoEditItemsProvider()
{
  return type metadata accessor for ItemContactInfoEditItemsProvider();
}

uint64_t DeviceLostModeManagementViewModel.init(lostDevice:dependencies:)()
{
  return DeviceLostModeManagementViewModel.init(lostDevice:dependencies:)();
}

uint64_t DeviceLostModeManagementViewModel.lostModePresentationBlock.setter()
{
  return DeviceLostModeManagementViewModel.lostModePresentationBlock.setter();
}

uint64_t DeviceLostModeManagementViewModel.Dependencies.init(lostModeStatusProvider:)()
{
  return DeviceLostModeManagementViewModel.Dependencies.init(lostModeStatusProvider:)();
}

uint64_t type metadata accessor for DeviceLostModeManagementViewModel.Dependencies()
{
  return type metadata accessor for DeviceLostModeManagementViewModel.Dependencies();
}

uint64_t type metadata accessor for DeviceLostModeManagementViewModel()
{
  return type metadata accessor for DeviceLostModeManagementViewModel();
}

uint64_t LostModeManagementSectionViewModel.updateLostAccessoryCapabilities(capabilities:)()
{
  return LostModeManagementSectionViewModel.updateLostAccessoryCapabilities(capabilities:)();
}

uint64_t LostModeManagementSectionViewModel.Dependencies.init(delegatedSharesStatusProvider:lostModeStatusProvider:linkGenerator:pasteboardHandler:punchoutHandler:delegatedSharesInvalidator:delegatedSharesUpdater:itemProximityProvider:contactInfoProvider:contactInfoFormatter:contactInfoValidator:contactInfoUpdater:contactInfoEditItemsProvider:)()
{
  return LostModeManagementSectionViewModel.Dependencies.init(delegatedSharesStatusProvider:lostModeStatusProvider:linkGenerator:pasteboardHandler:punchoutHandler:delegatedSharesInvalidator:delegatedSharesUpdater:itemProximityProvider:contactInfoProvider:contactInfoFormatter:contactInfoValidator:contactInfoUpdater:contactInfoEditItemsProvider:)();
}

uint64_t type metadata accessor for LostModeManagementSectionViewModel.Dependencies()
{
  return type metadata accessor for LostModeManagementSectionViewModel.Dependencies();
}

uint64_t LostModeManagementSectionViewModel.init(initialDestination:lostAccessory:dependencies:)()
{
  return LostModeManagementSectionViewModel.init(initialDestination:lostAccessory:dependencies:)();
}

Swift::Void __swiftcall LostModeManagementSectionViewModel.stopObservingUpdates()()
{
}

Swift::Void __swiftcall LostModeManagementSectionViewModel.startObservingUpdates()()
{
}

uint64_t LostModeManagementSectionViewModel.presentShareeLandingPageAsPendingAction(reportingState:)()
{
  return LostModeManagementSectionViewModel.presentShareeLandingPageAsPendingAction(reportingState:)();
}

uint64_t type metadata accessor for LostModeManagementSectionViewModel()
{
  return type metadata accessor for LostModeManagementSectionViewModel();
}

uint64_t DeviceLostModeManagementSectionView.init(viewModel:)()
{
  return DeviceLostModeManagementSectionView.init(viewModel:)();
}

uint64_t type metadata accessor for DeviceLostModeManagementSectionView()
{
  return type metadata accessor for DeviceLostModeManagementSectionView();
}

uint64_t DelegatedSharesReportingStatusProvider.init(stream:)()
{
  return DelegatedSharesReportingStatusProvider.init(stream:)();
}

uint64_t type metadata accessor for DelegatedSharesReportingStatusProvider()
{
  return type metadata accessor for DelegatedSharesReportingStatusProvider();
}

uint64_t static _CFObject.== infix(_:_:)()
{
  return static _CFObject.== infix(_:_:)();
}

uint64_t _CFObject.hash(into:)()
{
  return _CFObject.hash(into:)();
}

uint64_t _CFObject.hashValue.getter()
{
  return _CFObject.hashValue.getter();
}

uint64_t type metadata accessor for MessagingCapability()
{
  return type metadata accessor for MessagingCapability();
}

uint64_t Destination.init(string:)()
{
  return Destination.init(string:)();
}

uint64_t type metadata accessor for Destination()
{
  return type metadata accessor for Destination();
}

uint64_t QueryController.__allocating_init(serviceName:)()
{
  return QueryController.__allocating_init(serviceName:)();
}

uint64_t type metadata accessor for QueryController()
{
  return type metadata accessor for QueryController();
}

uint64_t os_log(_:dso:log:type:_:)()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t os_log(_:dso:log:_:_:)()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t OSAllocatedUnfairLock.callAsFunction<A>(_:)()
{
  return OSAllocatedUnfairLock.callAsFunction<A>(_:)();
}

uint64_t Logger.logObject.getter()
{
  return Logger.logObject.getter();
}

uint64_t Logger.init(subsystem:category:)()
{
  return Logger.init(subsystem:category:)();
}

uint64_t Logger.init()()
{
  return Logger.init()();
}

uint64_t type metadata accessor for Logger()
{
  return type metadata accessor for Logger();
}

uint64_t static _UIKitNumericRawRepresentable.+ infix(_:_:)()
{
  return static _UIKitNumericRawRepresentable.+ infix(_:_:)();
}

uint64_t static _UIKitNumericRawRepresentable.- infix(_:_:)()
{
  return static _UIKitNumericRawRepresentable.- infix(_:_:)();
}

uint64_t UICellConfigurationState.isSelected.getter()
{
  return UICellConfigurationState.isSelected.getter();
}

uint64_t UICellConfigurationState.isHighlighted.getter()
{
  return UICellConfigurationState.isHighlighted.getter();
}

UICellConfigurationState __swiftcall UICellConfigurationState._bridgeToObjectiveC()()
{
  return (UICellConfigurationState)UICellConfigurationState._bridgeToObjectiveC()();
}

uint64_t static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t type metadata accessor for UICellConfigurationState()
{
  return type metadata accessor for UICellConfigurationState();
}

UIViewConfigurationState __swiftcall UIViewConfigurationState._bridgeToObjectiveC()()
{
  return (UIViewConfigurationState)UIViewConfigurationState._bridgeToObjectiveC()();
}

uint64_t static UIViewConfigurationState._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UIViewConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t UIViewConfigurationState.isPinned.getter()
{
  return UIViewConfigurationState.isPinned.getter();
}

uint64_t type metadata accessor for UIViewConfigurationState()
{
  return type metadata accessor for UIViewConfigurationState();
}

uint64_t UIBackgroundConfiguration.strokeColor.setter()
{
  return UIBackgroundConfiguration.strokeColor.setter();
}

uint64_t UIBackgroundConfiguration.cornerRadius.setter()
{
  return UIBackgroundConfiguration.cornerRadius.setter();
}

uint64_t static UIBackgroundConfiguration.listPlainCell()()
{
  return static UIBackgroundConfiguration.listPlainCell()();
}

uint64_t UIBackgroundConfiguration.backgroundColor.setter()
{
  return UIBackgroundConfiguration.backgroundColor.setter();
}

uint64_t UIBackgroundConfiguration.backgroundColorTransformer.setter()
{
  return UIBackgroundConfiguration.backgroundColorTransformer.setter();
}

uint64_t static UIBackgroundConfiguration.clear()()
{
  return static UIBackgroundConfiguration.clear()();
}

uint64_t UIBackgroundConfiguration.updated(for:)()
{
  return UIBackgroundConfiguration.updated(for:)();
}

uint64_t type metadata accessor for UIBackgroundConfiguration()
{
  return type metadata accessor for UIBackgroundConfiguration();
}

uint64_t static UIListContentConfiguration.groupedHeader()()
{
  return static UIListContentConfiguration.groupedHeader()();
}

uint64_t UIListContentConfiguration.secondaryText.setter()
{
  return UIListContentConfiguration.secondaryText.setter();
}

uint64_t type metadata accessor for UIListContentConfiguration.TextProperties.TextTransform()
{
  return type metadata accessor for UIListContentConfiguration.TextProperties.TextTransform();
}

uint64_t UIListContentConfiguration.TextProperties.font.setter()
{
  return UIListContentConfiguration.TextProperties.font.setter();
}

uint64_t UIListContentConfiguration.TextProperties.color.setter()
{
  return UIListContentConfiguration.TextProperties.color.setter();
}

uint64_t UIListContentConfiguration.TextProperties.transform.setter()
{
  return UIListContentConfiguration.TextProperties.transform.setter();
}

uint64_t UIListContentConfiguration.textProperties.modify()
{
  return UIListContentConfiguration.textProperties.modify();
}

uint64_t UIListContentConfiguration.ImageProperties.maximumSize.setter()
{
  return UIListContentConfiguration.ImageProperties.maximumSize.setter();
}

uint64_t UIListContentConfiguration.ImageProperties.reservedLayoutSize.getter()
{
  return UIListContentConfiguration.ImageProperties.reservedLayoutSize.getter();
}

uint64_t UIListContentConfiguration.ImageProperties.reservedLayoutSize.setter()
{
  return UIListContentConfiguration.ImageProperties.reservedLayoutSize.setter();
}

uint64_t type metadata accessor for UIListContentConfiguration.ImageProperties()
{
  return type metadata accessor for UIListContentConfiguration.ImageProperties();
}

uint64_t UIListContentConfiguration.imageProperties.modify()
{
  return UIListContentConfiguration.imageProperties.modify();
}

uint64_t UIListContentConfiguration.imageProperties.getter()
{
  return UIListContentConfiguration.imageProperties.getter();
}

uint64_t UIListContentConfiguration.secondaryTextProperties.modify()
{
  return UIListContentConfiguration.secondaryTextProperties.modify();
}

uint64_t UIListContentConfiguration.directionalLayoutMargins.setter()
{
  return UIListContentConfiguration.directionalLayoutMargins.setter();
}

uint64_t UIListContentConfiguration.textToSecondaryTextVerticalPadding.setter()
{
  return UIListContentConfiguration.textToSecondaryTextVerticalPadding.setter();
}

uint64_t UIListContentConfiguration.axesPreservingSuperviewLayoutMargins.setter()
{
  return UIListContentConfiguration.axesPreservingSuperviewLayoutMargins.setter();
}

uint64_t static UIListContentConfiguration.cell()()
{
  return static UIListContentConfiguration.cell()();
}

uint64_t UIListContentConfiguration.text.setter()
{
  return UIListContentConfiguration.text.setter();
}

uint64_t UIListContentConfiguration.image.setter()
{
  return UIListContentConfiguration.image.setter();
}

uint64_t type metadata accessor for UIListContentConfiguration()
{
  return type metadata accessor for UIListContentConfiguration();
}

uint64_t NSDiffableDataSourceSnapshot.appendItems(_:toSection:)()
{
  return NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.reloadItems(_:)(Swift::OpaquePointer a1)
{
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.appendSections(_:)(Swift::OpaquePointer a1)
{
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.reconfigureItems(_:)(Swift::OpaquePointer a1)
{
}

uint64_t NSDiffableDataSourceSnapshot.init()()
{
  return NSDiffableDataSourceSnapshot.init()();
}

uint64_t type metadata accessor for NSDiffableDataSourceSnapshot()
{
  return type metadata accessor for NSDiffableDataSourceSnapshot();
}

uint64_t UITableViewDiffableDataSource.__allocating_init(tableView:cellProvider:)()
{
  return UITableViewDiffableDataSource.__allocating_init(tableView:cellProvider:)();
}

uint64_t UITableViewDiffableDataSource.init(tableView:cellProvider:)()
{
  return UITableViewDiffableDataSource.init(tableView:cellProvider:)();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.itemIdentifier(for:)()
{
  return dispatch thunk of UITableViewDiffableDataSource.itemIdentifier(for:)();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.defaultRowAnimation.setter()
{
  return dispatch thunk of UITableViewDiffableDataSource.defaultRowAnimation.setter();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)()
{
  return dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.snapshot()()
{
  return dispatch thunk of UITableViewDiffableDataSource.snapshot()();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.indexPath(for:)()
{
  return dispatch thunk of UITableViewDiffableDataSource.indexPath(for:)();
}

uint64_t type metadata accessor for UITableViewDiffableDataSource()
{
  return type metadata accessor for UITableViewDiffableDataSource();
}

uint64_t type metadata accessor for UIConfigurationColorTransformer()
{
  return type metadata accessor for UIConfigurationColorTransformer();
}

uint64_t UIConfigurationColorTransformer.init(_:)()
{
  return UIConfigurationColorTransformer.init(_:)();
}

uint64_t type metadata accessor for UIConfigurationTextAttributesTransformer()
{
  return type metadata accessor for UIConfigurationTextAttributesTransformer();
}

uint64_t UIConfigurationTextAttributesTransformer.init(_:)()
{
  return UIConfigurationTextAttributesTransformer.init(_:)();
}

uint64_t Publishers.Map.map<A>(_:)()
{
  return Publishers.Map.map<A>(_:)();
}

uint64_t Publishers.MergeMany.init<A>(_:)()
{
  return Publishers.MergeMany.init<A>(_:)();
}

uint64_t static Subscribers.Demand.unlimited.getter()
{
  return static Subscribers.Demand.unlimited.getter();
}

uint64_t AnyCancellable.store(in:)()
{
  return AnyCancellable.store(in:)();
}

uint64_t AnyCancellable.store<A>(in:)()
{
  return AnyCancellable.store<A>(in:)();
}

Swift::Void __swiftcall AnyCancellable.cancel()()
{
}

uint64_t type metadata accessor for AnyCancellable()
{
  return type metadata accessor for AnyCancellable();
}

uint64_t ObservableObject<>.objectWillChange.getter()
{
  return ObservableObject<>.objectWillChange.getter();
}

uint64_t CurrentValueSubject.send(_:)()
{
  return CurrentValueSubject.send(_:)();
}

uint64_t CurrentValueSubject.init(_:)()
{
  return CurrentValueSubject.init(_:)();
}

uint64_t Fail.init(error:)()
{
  return Fail.init(error:)();
}

uint64_t Just.setFailureType<A>(to:)()
{
  return Just.setFailureType<A>(to:)();
}

uint64_t Just.init(_:)()
{
  return Just.init(_:)();
}

uint64_t Future.init(_:)()
{
  return Future.init(_:)();
}

uint64_t Published.init(initialValue:)()
{
  return Published.init(initialValue:)();
}

uint64_t Published.projectedValue.getter()
{
  return Published.projectedValue.getter();
}

uint64_t static Published.subscript.modify()
{
  return static Published.subscript.modify();
}

uint64_t static Published.subscript.getter()
{
  return static Published.subscript.getter();
}

uint64_t static Published.subscript.setter()
{
  return static Published.subscript.setter();
}

uint64_t type metadata accessor for Published()
{
  return type metadata accessor for Published();
}

uint64_t Publisher.oneshot(_:)()
{
  return Publisher.oneshot(_:)();
}

uint64_t Publisher.eraseToAnyPublisher()()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t Publisher.replaceError(with:)()
{
  return Publisher.replaceError(with:)();
}

uint64_t Publisher.map<A>(_:)()
{
  return Publisher.map<A>(_:)();
}

uint64_t Publisher.sink(receiveCompletion:receiveValue:)()
{
  return Publisher.sink(receiveCompletion:receiveValue:)();
}

uint64_t Publisher.catch<A>(_:)()
{
  return Publisher.catch<A>(_:)();
}

uint64_t Publisher.share()()
{
  return Publisher.share()();
}

uint64_t Publisher.filter(_:)()
{
  return Publisher.filter(_:)();
}

uint64_t Publisher.tryMap<A>(_:)()
{
  return Publisher.tryMap<A>(_:)();
}

uint64_t Publisher.collect()()
{
  return Publisher.collect()();
}

uint64_t Publisher.flatMap<A, B>(maxPublishers:_:)()
{
  return Publisher.flatMap<A, B>(maxPublishers:_:)();
}

uint64_t Publisher.receive<A>(on:options:)()
{
  return Publisher.receive<A>(on:options:)();
}

uint64_t Publisher.timeout<A>(_:scheduler:options:customError:)()
{
  return Publisher.timeout<A>(_:scheduler:options:customError:)();
}

uint64_t Publisher.mapError<A>(_:)()
{
  return Publisher.mapError<A>(_:)();
}

uint64_t Publisher.tryCatch<A>(_:)()
{
  return Publisher.tryCatch<A>(_:)();
}

uint64_t Publisher.subscribe<A>(on:options:)()
{
  return Publisher.subscribe<A>(on:options:)();
}

uint64_t Publisher<>.removeDuplicates()()
{
  return Publisher<>.removeDuplicates()();
}

uint64_t Publisher<>.sink(receiveValue:)()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t Publisher<>.assign<A>(to:on:)()
{
  return Publisher<>.assign<A>(to:on:)();
}

uint64_t static FMFCoreHelper.displayName(for:)()
{
  return static FMFCoreHelper.displayName(for:)();
}

uint64_t static FMFCoreHelper.contact(for:keysToFetch:)()
{
  return static FMFCoreHelper.contact(for:keysToFetch:)();
}

uint64_t type metadata accessor for FMFCoreHelper()
{
  return type metadata accessor for FMFCoreHelper();
}

uint64_t FMFAddress.postalAddress.getter()
{
  return FMFAddress.postalAddress.getter();
}

uint64_t FMFAddress.displayAddress.getter()
{
  return FMFAddress.displayAddress.getter();
}

uint64_t FMFAddress.formattedAddress.getter()
{
  return FMFAddress.formattedAddress.getter();
}

uint64_t FMFAddress.poiAddressModern.getter()
{
  return FMFAddress.poiAddressModern.getter();
}

uint64_t FMFAddress.largeAddressModern.getter()
{
  return FMFAddress.largeAddressModern.getter();
}

uint64_t FMFAddress.smallAddressModern.getter()
{
  return FMFAddress.smallAddressModern.getter();
}

uint64_t FMFAddress.coarseAddressModern.getter()
{
  return FMFAddress.coarseAddressModern.getter();
}

uint64_t FMFAddress.mapFormattedAddress.getter()
{
  return FMFAddress.mapFormattedAddress.getter();
}

uint64_t FMFAddress.mediumAddressModern.getter()
{
  return FMFAddress.mediumAddressModern.getter();
}

uint64_t FMFAddress.streetAddressModern.getter()
{
  return FMFAddress.streetAddressModern.getter();
}

uint64_t static FMFAddress.formattedAddressLines(for:)()
{
  return static FMFAddress.formattedAddressLines(for:)();
}

uint64_t FMFAddress.formattedAddressLines.getter()
{
  return FMFAddress.formattedAddressLines.getter();
}

uint64_t FMFAddress.displayAddressWithStreetName.getter()
{
  return FMFAddress.displayAddressWithStreetName.getter();
}

uint64_t FMFAddress.displayAddressWithoutStreetName.getter()
{
  return FMFAddress.displayAddressWithoutStreetName.getter();
}

uint64_t FMFAddress.init(from:)()
{
  return FMFAddress.init(from:)();
}

uint64_t FMFAddress.levelType.getter()
{
  return FMFAddress.levelType.getter();
}

uint64_t type metadata accessor for FMFAddress()
{
  return type metadata accessor for FMFAddress();
}

uint64_t FMFContact.displayName.getter()
{
  return FMFContact.displayName.getter();
}

uint64_t FMFContact.storeUUID.getter()
{
  return FMFContact.storeUUID.getter();
}

uint64_t type metadata accessor for FMFContact()
{
  return type metadata accessor for FMFContact();
}

uint64_t dispatch thunk of FMFManager.initialize()()
{
  return dispatch thunk of FMFManager.initialize()();
}

uint64_t dispatch thunk of FMFManager.myLocation.getter()
{
  return dispatch thunk of FMFManager.myLocation.getter();
}

uint64_t dispatch thunk of FMFManager.preferences.getter()
{
  return dispatch thunk of FMFManager.preferences.getter();
}

uint64_t FMFManager.init(configuration:tabInfo:)()
{
  return FMFManager.init(configuration:tabInfo:)();
}

uint64_t dispatch thunk of FMFManager.isInitialized.getter()
{
  return dispatch thunk of FMFManager.isInitialized.getter();
}

uint64_t dispatch thunk of FMFManager.locationAlerts.getter()
{
  return dispatch thunk of FMFManager.locationAlerts.getter();
}

uint64_t dispatch thunk of FMFManager.selectedFriend.setter()
{
  return dispatch thunk of FMFManager.selectedFriend.setter();
}

uint64_t dispatch thunk of FMFManager.stopRefreshing()()
{
  return dispatch thunk of FMFManager.stopRefreshing()();
}

uint64_t dispatch thunk of FMFManager.startRefreshing()()
{
  return dispatch thunk of FMFManager.startRefreshing()();
}

uint64_t dispatch thunk of FMFManager.stopLiveLocation(for:)()
{
  return dispatch thunk of FMFManager.stopLiveLocation(for:)();
}

uint64_t dispatch thunk of FMFManager.labelledLocations.getter()
{
  return dispatch thunk of FMFManager.labelledLocations.getter();
}

uint64_t dispatch thunk of FMFManager.startLiveLocation(for:clientApp:)()
{
  return dispatch thunk of FMFManager.startLiveLocation(for:clientApp:)();
}

uint64_t dispatch thunk of FMFManager.unshiftedLocation(for:)()
{
  return dispatch thunk of FMFManager.unshiftedLocation(for:)();
}

uint64_t dispatch thunk of FMFManager.contactsController.getter()
{
  return dispatch thunk of FMFManager.contactsController.getter();
}

uint64_t dispatch thunk of FMFManager.myUnshiftedLocation.getter()
{
  return dispatch thunk of FMFManager.myUnshiftedLocation.getter();
}

uint64_t dispatch thunk of FMFManager.pendingDeleteFriends.getter()
{
  return dispatch thunk of FMFManager.pendingDeleteFriends.getter();
}

uint64_t dispatch thunk of FMFManager.pendingUpdateFriends.getter()
{
  return dispatch thunk of FMFManager.pendingUpdateFriends.getter();
}

uint64_t dispatch thunk of FMFManager.restartMonitoringLocation()()
{
  return dispatch thunk of FMFManager.restartMonitoringLocation()();
}

uint64_t dispatch thunk of FMFManager.updateLastActiveTimestamp()()
{
  return dispatch thunk of FMFManager.updateLastActiveTimestamp()();
}

uint64_t dispatch thunk of FMFManager.friendsOperationsRestricted.getter()
{
  return dispatch thunk of FMFManager.friendsOperationsRestricted.getter();
}

uint64_t dispatch thunk of FMFManager.config.getter()
{
  return dispatch thunk of FMFManager.config.getter();
}

uint64_t dispatch thunk of FMFManager.labels.getter()
{
  return dispatch thunk of FMFManager.labels.getter();
}

uint64_t dispatch thunk of FMFManager.myInfo.getter()
{
  return dispatch thunk of FMFManager.myInfo.getter();
}

uint64_t dispatch thunk of FMFManager.devices.getter()
{
  return dispatch thunk of FMFManager.devices.getter();
}

uint64_t dispatch thunk of FMFManager.friends.getter()
{
  return dispatch thunk of FMFManager.friends.getter();
}

uint64_t dispatch thunk of FMFManager.perform(action:completion:)()
{
  return dispatch thunk of FMFManager.perform(action:completion:)();
}

uint64_t dispatch thunk of FMFManager.delegate.setter()
{
  return dispatch thunk of FMFManager.delegate.setter();
}

uint64_t type metadata accessor for FMFManager()
{
  return type metadata accessor for FMFManager();
}

uint64_t FMFLocation.identifier.getter()
{
  return FMFLocation.identifier.getter();
}

uint64_t FMFLocation.isLivePaused.getter()
{
  return FMFLocation.isLivePaused.getter();
}

uint64_t FMFLocation.isLivePending.getter()
{
  return FMFLocation.isLivePending.getter();
}

uint64_t FMFLocation.locationSource.getter()
{
  return FMFLocation.locationSource.getter();
}

uint64_t FMFLocation.debugDescription.getter()
{
  return FMFLocation.debugDescription.getter();
}

uint64_t FMFLocation.isSecureLocation.getter()
{
  return FMFLocation.isSecureLocation.getter();
}

uint64_t FMFLocation.locateInProgress.getter()
{
  return FMFLocation.locateInProgress.getter();
}

uint64_t FMFLocation.motionActivityState.getter()
{
  return FMFLocation.motionActivityState.getter();
}

uint64_t FMFLocation.init(from:address:label:labels:)()
{
  return FMFLocation.init(from:address:label:labels:)();
}

uint64_t FMFLocation.isOld.getter()
{
  return FMFLocation.isOld.getter();
}

uint64_t FMFLocation.label.getter()
{
  return FMFLocation.label.getter();
}

uint64_t FMFLocation.address.getter()
{
  return FMFLocation.address.getter();
}

uint64_t FMFLocation.location.getter()
{
  return FMFLocation.location.getter();
}

uint64_t type metadata accessor for FMFLocation()
{
  return type metadata accessor for FMFLocation();
}

uint64_t static FMFSchedule.DaysOfWeek.none.getter()
{
  return static FMFSchedule.DaysOfWeek.none.getter();
}

uint64_t static FMFSchedule.DaysOfWeek.friday.getter()
{
  return static FMFSchedule.DaysOfWeek.friday.getter();
}

uint64_t static FMFSchedule.DaysOfWeek.monday.getter()
{
  return static FMFSchedule.DaysOfWeek.monday.getter();
}

uint64_t static FMFSchedule.DaysOfWeek.sunday.getter()
{
  return static FMFSchedule.DaysOfWeek.sunday.getter();
}

uint64_t static FMFSchedule.DaysOfWeek.tuesday.getter()
{
  return static FMFSchedule.DaysOfWeek.tuesday.getter();
}

uint64_t static FMFSchedule.DaysOfWeek.saturday.getter()
{
  return static FMFSchedule.DaysOfWeek.saturday.getter();
}

uint64_t static FMFSchedule.DaysOfWeek.thursday.getter()
{
  return static FMFSchedule.DaysOfWeek.thursday.getter();
}

uint64_t static FMFSchedule.DaysOfWeek.wednesday.getter()
{
  return static FMFSchedule.DaysOfWeek.wednesday.getter();
}

uint64_t type metadata accessor for FMFSchedule.DaysOfWeek()
{
  return type metadata accessor for FMFSchedule.DaysOfWeek();
}

uint64_t FMFSchedule.daysOfWeek.getter()
{
  return FMFSchedule.daysOfWeek.getter();
}

uint64_t FMFSchedule.daysOfWeek.setter()
{
  return FMFSchedule.daysOfWeek.setter();
}

uint64_t FMFSchedule.endMin.getter()
{
  return FMFSchedule.endMin.getter();
}

uint64_t FMFSchedule.endMin.setter()
{
  return FMFSchedule.endMin.setter();
}

uint64_t FMFSchedule.endHour.getter()
{
  return FMFSchedule.endHour.getter();
}

uint64_t FMFSchedule.endHour.setter()
{
  return FMFSchedule.endHour.setter();
}

uint64_t FMFSchedule.startMin.getter()
{
  return FMFSchedule.startMin.getter();
}

uint64_t FMFSchedule.startMin.setter()
{
  return FMFSchedule.startMin.setter();
}

uint64_t FMFSchedule.timeZone.getter()
{
  return FMFSchedule.timeZone.getter();
}

uint64_t FMFSchedule.timeZone.setter()
{
  return FMFSchedule.timeZone.setter();
}

uint64_t FMFSchedule.startHour.getter()
{
  return FMFSchedule.startHour.getter();
}

uint64_t FMFSchedule.startHour.setter()
{
  return FMFSchedule.startHour.setter();
}

uint64_t FMFSchedule.init()()
{
  return FMFSchedule.init()();
}

uint64_t type metadata accessor for FMFSchedule()
{
  return type metadata accessor for FMFSchedule();
}

uint64_t type metadata accessor for FMFAlertType()
{
  return type metadata accessor for FMFAlertType();
}

uint64_t type metadata accessor for FMFDemoError()
{
  return type metadata accessor for FMFDemoError();
}

uint64_t dispatch thunk of FMImageCache.cachedImage(for:completion:)()
{
  return dispatch thunk of FMImageCache.cachedImage(for:completion:)();
}

{
  return dispatch thunk of FMImageCache.cachedImage(for:completion:)();
}

uint64_t dispatch thunk of FMImageCache.preload(requests:)()
{
  return dispatch thunk of FMImageCache.preload(requests:)();
}

{
  return dispatch thunk of FMImageCache.preload(requests:)();
}

uint64_t FMImageCache.init(converter:)()
{
  return FMImageCache.init(converter:)();
}

uint64_t method lookup function for FMImageCache()
{
  return method lookup function for FMImageCache();
}

uint64_t FMImageCache.deinit()
{
  return FMImageCache.deinit();
}

uint64_t static FMDemoManager.peopleDemoEnabled.getter()
{
  return static FMDemoManager.peopleDemoEnabled.getter();
}

uint64_t type metadata accessor for FMDemoManager()
{
  return type metadata accessor for FMDemoManager();
}

{
  return type metadata accessor for FMDemoManager();
}

uint64_t dispatch thunk of FMFBaseAction.debugDescription.getter()
{
  return dispatch thunk of FMFBaseAction.debugDescription.getter();
}

uint64_t type metadata accessor for FMFConfigValue()
{
  return type metadata accessor for FMFConfigValue();
}

uint64_t FMFPreferences.hideLocation.getter()
{
  return FMFPreferences.hideLocation.getter();
}

uint64_t FMFPreferences.primaryEmail.getter()
{
  return FMFPreferences.primaryEmail.getter();
}

uint64_t FMFPreferences.debugDescription.getter()
{
  return FMFPreferences.debugDescription.getter();
}

uint64_t FMFPreferences.allowFriendRequests.getter()
{
  return FMFPreferences.allowFriendRequests.getter();
}

uint64_t FMFPreferences.init(prefs:allowFriendRequests:)()
{
  return FMFPreferences.init(prefs:allowFriendRequests:)();
}

uint64_t type metadata accessor for FMFPreferences()
{
  return type metadata accessor for FMFPreferences();
}

uint64_t InitialTabInfo.init(lastVisitedTimes:currentTab:timeSpent:)()
{
  return InitialTabInfo.init(lastVisitedTimes:currentTab:timeSpent:)();
}

uint64_t InitialTabInfo.init()()
{
  return InitialTabInfo.init()();
}

uint64_t type metadata accessor for InitialTabInfo()
{
  return type metadata accessor for InitialTabInfo();
}

uint64_t FMFActionStatus.rawValue.getter()
{
  return FMFActionStatus.rawValue.getter();
}

uint64_t type metadata accessor for FMFActionStatus()
{
  return type metadata accessor for FMFActionStatus();
}

uint64_t static FMFActionsError.== infix(_:_:)()
{
  return static FMFActionsError.== infix(_:_:)();
}

uint64_t type metadata accessor for FMFActionsError()
{
  return type metadata accessor for FMFActionsError();
}

uint64_t FMFDefaultLabel.localizedLabel.getter()
{
  return FMFDefaultLabel.localizedLabel.getter();
}

uint64_t FMFDefaultLabel.init(rawValue:)()
{
  return FMFDefaultLabel.init(rawValue:)();
}

uint64_t FMFDefaultLabel.rawValue.getter()
{
  return FMFDefaultLabel.rawValue.getter();
}

uint64_t type metadata accessor for FMFDefaultLabel()
{
  return type metadata accessor for FMFDefaultLabel();
}

uint64_t FMFGlobalConfig<A>(_:fallback:)()
{
  return FMFGlobalConfig<A>(_:fallback:)();
}

uint64_t FMFNotNowAction.init(friend:)()
{
  return FMFNotNowAction.init(friend:)();
}

uint64_t type metadata accessor for FMFNotNowAction()
{
  return type metadata accessor for FMFNotNowAction();
}

uint64_t FMFActionURLInfo.email.getter()
{
  return FMFActionURLInfo.email.getter();
}

uint64_t FMFActionURLInfo.actionURL.getter()
{
  return FMFActionURLInfo.actionURL.getter();
}

uint64_t type metadata accessor for FMFActionURLInfo()
{
  return type metadata accessor for FMFActionURLInfo();
}

uint64_t type metadata accessor for FMFLabelSaveType()
{
  return type metadata accessor for FMFLabelSaveType();
}

uint64_t FMFLocationAlert.init(locationAlert:location:radius:address:label:triggerType:isOn:repeating:schedule:phoneNumbers:emails:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:muteEndDate:)()
{
  return FMFLocationAlert.init(locationAlert:location:radius:address:label:triggerType:isOn:repeating:schedule:phoneNumbers:emails:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:muteEndDate:)();
}

uint64_t FMFLocationAlert.locationAlertTarget.getter()
{
  return FMFLocationAlert.locationAlertTarget.getter();
}

uint64_t FMFLocationAlert.identifier.getter()
{
  return FMFLocationAlert.identifier.getter();
}

uint64_t FMFLocationAlert.followerIds.getter()
{
  return FMFLocationAlert.followerIds.getter();
}

uint64_t FMFLocationAlert.muteEndDate.getter()
{
  return FMFLocationAlert.muteEndDate.getter();
}

uint64_t FMFLocationAlert.triggerType.getter()
{
  return FMFLocationAlert.triggerType.getter();
}

uint64_t FMFLocationAlert.displayLabel.getter()
{
  return FMFLocationAlert.displayLabel.getter();
}

uint64_t FMFLocationAlert.updateTimestamp.getter()
{
  return FMFLocationAlert.updateTimestamp.getter();
}

uint64_t FMFLocationAlert.acceptanceStatus.getter()
{
  return FMFLocationAlert.acceptanceStatus.getter();
}

uint64_t FMFLocationAlert.debugDescription.getter()
{
  return FMFLocationAlert.debugDescription.getter();
}

uint64_t FMFLocationAlert.isOn.getter()
{
  return FMFLocationAlert.isOn.getter();
}

uint64_t FMFLocationAlert.fence.getter()
{
  return FMFLocationAlert.fence.getter();
}

uint64_t FMFLocationAlert.label.getter()
{
  return FMFLocationAlert.label.getter();
}

uint64_t FMFLocationAlert.emails.getter()
{
  return FMFLocationAlert.emails.getter();
}

uint64_t FMFLocationAlert.radius.getter()
{
  return FMFLocationAlert.radius.getter();
}

uint64_t FMFLocationAlert.address.getter()
{
  return FMFLocationAlert.address.getter();
}

uint64_t FMFLocationAlert.setByMe.getter()
{
  return FMFLocationAlert.setByMe.getter();
}

uint64_t FMFLocationAlert.setOnMe.getter()
{
  return FMFLocationAlert.setOnMe.getter();
}

uint64_t FMFLocationAlert.friendId.getter()
{
  return FMFLocationAlert.friendId.getter();
}

uint64_t FMFLocationAlert.location.getter()
{
  return FMFLocationAlert.location.getter();
}

uint64_t FMFLocationAlert.schedule.getter()
{
  return FMFLocationAlert.schedule.getter();
}

uint64_t FMFLocationAlert.repeating.getter()
{
  return FMFLocationAlert.repeating.getter();
}

uint64_t type metadata accessor for FMFLocationAlert()
{
  return type metadata accessor for FMFLocationAlert();
}

uint64_t type metadata accessor for FMFLocationSource()
{
  return type metadata accessor for FMFLocationSource();
}

uint64_t type metadata accessor for FMImageCacheError()
{
  return type metadata accessor for FMImageCacheError();
}

uint64_t dispatch thunk of FMLocationShifter.shift(requests:completion:)()
{
  return dispatch thunk of FMLocationShifter.shift(requests:completion:)();
}

{
  return dispatch thunk of FMLocationShifter.shift(requests:completion:)();
}

uint64_t FMLocationShifter.init()()
{
  return FMLocationShifter.init()();
}

{
  return FMLocationShifter.init()();
}

uint64_t type metadata accessor for FMLocationShifter()
{
  return type metadata accessor for FMLocationShifter();
}

{
  return type metadata accessor for FMLocationShifter();
}

uint64_t type metadata accessor for FMFLabelSourceType()
{
  return type metadata accessor for FMFLabelSourceType();
}

uint64_t FMFManagerDelegate.fmfManager(_:didReceive:)()
{
  return FMFManagerDelegate.fmfManager(_:didReceive:)();
}

uint64_t FMFManagerDelegate.fmfManager(_:friendsToShallowLocate:)()
{
  return FMFManagerDelegate.fmfManager(_:friendsToShallowLocate:)();
}

uint64_t FMFManagerDelegate.fmfManager(_:legacyFallbackFriendIdentifiers:didFallback:)()
{
  return FMFManagerDelegate.fmfManager(_:legacyFallbackFriendIdentifiers:didFallback:)();
}

uint64_t FMFManagerDelegate.fmfManagerDidCompleteFirstFetch(_:)()
{
  return FMFManagerDelegate.fmfManagerDidCompleteFirstFetch(_:)();
}

uint64_t FMTabInfoTimeSpent.getter()
{
  return FMTabInfoTimeSpent.getter();
}

uint64_t type metadata accessor for FMFAddressLevelType()
{
  return type metadata accessor for FMFAddressLevelType();
}

uint64_t FMFGetURLInfoAction.init(url:)()
{
  return FMFGetURLInfoAction.init(url:)();
}

uint64_t type metadata accessor for FMFGetURLInfoAction()
{
  return type metadata accessor for FMFGetURLInfoAction();
}

uint64_t FMFLabelledLocation.label.getter()
{
  return FMFLabelledLocation.label.getter();
}

uint64_t FMFLabelledLocation.userId.getter()
{
  return FMFLabelledLocation.userId.getter();
}

uint64_t FMFLabelledLocation.latitude.getter()
{
  return FMFLabelledLocation.latitude.getter();
}

uint64_t FMFLabelledLocation.longitude.getter()
{
  return FMFLabelledLocation.longitude.getter();
}

uint64_t type metadata accessor for FMFLabelledLocation()
{
  return type metadata accessor for FMFLabelledLocation();
}

uint64_t FMFMuteFencesAction.init(friendId:endDate:)()
{
  return FMFMuteFencesAction.init(friendId:endDate:)();
}

uint64_t type metadata accessor for FMFMuteFencesAction()
{
  return type metadata accessor for FMFMuteFencesAction();
}

uint64_t static FMFRelationshipType.followsMyLocation.getter()
{
  return static FMFRelationshipType.followsMyLocation.getter();
}

uint64_t static FMFRelationshipType.sharesLocationWithMe.getter()
{
  return static FMFRelationshipType.sharesLocationWithMe.getter();
}

uint64_t static FMFRelationshipType.willFollowMyLocation.getter()
{
  return static FMFRelationshipType.willFollowMyLocation.getter();
}

uint64_t static FMFRelationshipType.willShareLocationWithMe.getter()
{
  return static FMFRelationshipType.willShareLocationWithMe.getter();
}

uint64_t static FMFRelationshipType.none.getter()
{
  return static FMFRelationshipType.none.getter();
}

uint64_t type metadata accessor for FMFRelationshipType()
{
  return type metadata accessor for FMFRelationshipType();
}

uint64_t FMTabInfoCurrentTab.getter()
{
  return FMTabInfoCurrentTab.getter();
}

uint64_t FMFAskToFollowAction.init(friend:)()
{
  return FMFAskToFollowAction.init(friend:)();
}

uint64_t type metadata accessor for FMFAskToFollowAction()
{
  return type metadata accessor for FMFAskToFollowAction();
}

uint64_t FMFSetFavoriteAction.init(friend:order:)()
{
  return FMFSetFavoriteAction.init(friend:order:)();
}

uint64_t type metadata accessor for FMFSetFavoriteAction()
{
  return type metadata accessor for FMFSetFavoriteAction();
}

uint64_t FMFStopSharingAction.init(friend:)()
{
  return FMFStopSharingAction.init(friend:)();
}

uint64_t type metadata accessor for FMFStopSharingAction()
{
  return type metadata accessor for FMFStopSharingAction();
}

uint64_t FMFUpdatePrefsAction.init(prefs:)()
{
  return FMFUpdatePrefsAction.init(prefs:)();
}

uint64_t type metadata accessor for FMFUpdatePrefsAction()
{
  return type metadata accessor for FMFUpdatePrefsAction();
}

uint64_t FMFWaldoGlobalConfig<A>(_:fallback:)()
{
  return FMFWaldoGlobalConfig<A>(_:fallback:)();
}

uint64_t FMTabInfoLastVisited.getter()
{
  return FMTabInfoLastVisited.getter();
}

uint64_t FMFRemoveFriendAction.init(friend:)()
{
  return FMFRemoveFriendAction.init(friend:)();
}

uint64_t type metadata accessor for FMFRemoveFriendAction()
{
  return type metadata accessor for FMFRemoveFriendAction();
}

uint64_t FMFRemoveLabelsAction.init(labels:)()
{
  return FMFRemoveLabelsAction.init(labels:)();
}

uint64_t type metadata accessor for FMFRemoveLabelsAction()
{
  return type metadata accessor for FMFRemoveLabelsAction();
}

uint64_t type metadata accessor for FMFLocationAlertTarget()
{
  return type metadata accessor for FMFLocationAlertTarget();
}

uint64_t type metadata accessor for FMFPendingUpdateReason()
{
  return type metadata accessor for FMFPendingUpdateReason();
}

uint64_t FMFShareLocationAction.init(handles:friendId:duration:)()
{
  return FMFShareLocationAction.init(handles:friendId:duration:)();
}

uint64_t type metadata accessor for FMFShareLocationAction()
{
  return type metadata accessor for FMFShareLocationAction();
}

uint64_t FMFAddUpdateLabelAction.init(locationToLabel:label:)()
{
  return FMFAddUpdateLabelAction.init(locationToLabel:label:)();
}

uint64_t type metadata accessor for FMFAddUpdateLabelAction()
{
  return type metadata accessor for FMFAddUpdateLabelAction();
}

uint64_t static FMFManagerConfiguration.default.getter()
{
  return static FMFManagerConfiguration.default.getter();
}

uint64_t type metadata accessor for FMFManagerConfiguration()
{
  return type metadata accessor for FMFManagerConfiguration();
}

uint64_t FMFUpdateMeDeviceAction.init(meDevice:)()
{
  return FMFUpdateMeDeviceAction.init(meDevice:)();
}

uint64_t type metadata accessor for FMFUpdateMeDeviceAction()
{
  return type metadata accessor for FMFUpdateMeDeviceAction();
}

uint64_t FMFDimplekeyGlobalConfig<A>(_:fallback:)()
{
  return FMFDimplekeyGlobalConfig<A>(_:fallback:)();
}

uint64_t FMFRespondToInviteAction.init(friendId:accepted:)()
{
  return FMFRespondToInviteAction.init(friendId:accepted:)();
}

uint64_t type metadata accessor for FMFRespondToInviteAction()
{
  return type metadata accessor for FMFRespondToInviteAction();
}

uint64_t FMFAddLocationAlertAction.init(friendId:followerIds:emails:phoneNumbers:location:address:label:addressType:radius:locationAlertTarget:triggerType:repeating:schedule:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:)()
{
  return FMFAddLocationAlertAction.init(friendId:followerIds:emails:phoneNumbers:location:address:label:addressType:radius:locationAlertTarget:triggerType:repeating:schedule:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:)();
}

uint64_t type metadata accessor for FMFAddLocationAlertAction()
{
  return type metadata accessor for FMFAddLocationAlertAction();
}

uint64_t dispatch thunk of FMFContactsDataController.searchInStore(handle:keysToFetch:)()
{
  return dispatch thunk of FMFContactsDataController.searchInStore(handle:keysToFetch:)();
}

uint64_t FMFContactsDataController.init(isSnapshotMode:)()
{
  return FMFContactsDataController.init(isSnapshotMode:)();
}

uint64_t dispatch thunk of FMFContactsDataController.contact(for:keysToFetch:)()
{
  return dispatch thunk of FMFContactsDataController.contact(for:keysToFetch:)();
}

uint64_t type metadata accessor for FMFContactsDataController()
{
  return type metadata accessor for FMFContactsDataController();
}

uint64_t FMFShowHideLocationAction.init(hideLocation:)()
{
  return FMFShowHideLocationAction.init(hideLocation:)();
}

uint64_t type metadata accessor for FMFShowHideLocationAction()
{
  return type metadata accessor for FMFShowHideLocationAction();
}

uint64_t FMLocationShiftingRequest.init(identifier:location:)()
{
  return FMLocationShiftingRequest.init(identifier:location:)();
}

{
  return FMLocationShiftingRequest.init(identifier:location:)();
}

uint64_t FMLocationShiftingRequest.location.getter()
{
  return FMLocationShiftingRequest.location.getter();
}

{
  return FMLocationShiftingRequest.location.getter();
}

uint64_t type metadata accessor for FMLocationShiftingRequest()
{
  return type metadata accessor for FMLocationShiftingRequest();
}

{
  return type metadata accessor for FMLocationShiftingRequest();
}

uint64_t type metadata accessor for FMFLocationAlertAddressType()
{
  return type metadata accessor for FMFLocationAlertAddressType();
}

uint64_t FMFLocationAlertTriggerType.rawValue.getter()
{
  return FMFLocationAlertTriggerType.rawValue.getter();
}

uint64_t type metadata accessor for FMFLocationAlertTriggerType()
{
  return type metadata accessor for FMFLocationAlertTriggerType();
}

uint64_t FMFRemoveLocationAlertAction.init(locationAlert:)()
{
  return FMFRemoveLocationAlertAction.init(locationAlert:)();
}

uint64_t type metadata accessor for FMFRemoveLocationAlertAction()
{
  return type metadata accessor for FMFRemoveLocationAlertAction();
}

uint64_t FMFUpdateLocationAlertAction.init(locationAlert:location:radius:address:label:triggerType:isOn:repeating:phoneNumbers:emails:schedule:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:)()
{
  return FMFUpdateLocationAlertAction.init(locationAlert:location:radius:address:label:triggerType:isOn:repeating:phoneNumbers:emails:schedule:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:)();
}

uint64_t type metadata accessor for FMFUpdateLocationAlertAction()
{
  return type metadata accessor for FMFUpdateLocationAlertAction();
}

uint64_t FMFUpdateStewieLocationAction.init(publishReason:)()
{
  return FMFUpdateStewieLocationAction.init(publishReason:)();
}

uint64_t type metadata accessor for FMFUpdateStewieLocationAction()
{
  return type metadata accessor for FMFUpdateStewieLocationAction();
}

uint64_t type metadata accessor for FMFLocationAlertAcceptanceStatus()
{
  return type metadata accessor for FMFLocationAlertAcceptanceStatus();
}

uint64_t dispatch thunk of FMFAlert.okButtonLabel.getter()
{
  return dispatch thunk of FMFAlert.okButtonLabel.getter();
}

uint64_t dispatch thunk of FMFAlert.debugDescription.getter()
{
  return dispatch thunk of FMFAlert.debugDescription.getter();
}

uint64_t dispatch thunk of FMFAlert.cancelButtonLabel.getter()
{
  return dispatch thunk of FMFAlert.cancelButtonLabel.getter();
}

uint64_t dispatch thunk of FMFAlert.title.getter()
{
  return dispatch thunk of FMFAlert.title.getter();
}

uint64_t dispatch thunk of FMFAlert.message.getter()
{
  return dispatch thunk of FMFAlert.message.getter();
}

uint64_t FMFAlert.alertType.getter()
{
  return FMFAlert.alertType.getter();
}

uint64_t FMFLabel.defaultLabel.getter()
{
  return FMFLabel.defaultLabel.getter();
}

uint64_t static FMFLabel.defaultLabels(includingOther:)()
{
  return static FMFLabel.defaultLabels(includingOther:)();
}

uint64_t FMFLabel.labelSaveType.getter()
{
  return FMFLabel.labelSaveType.getter();
}

uint64_t FMFLabel.localizedValue.getter()
{
  return FMFLabel.localizedValue.getter();
}

uint64_t static FMFLabel.defaultLabelFor(localizedLabel:)()
{
  return static FMFLabel.defaultLabelFor(localizedLabel:)();
}

uint64_t FMFLabel.labelSourceType.getter()
{
  return FMFLabel.labelSourceType.getter();
}

uint64_t FMFLabel.init(value:labelSaveType:labelSourceType:)()
{
  return FMFLabel.init(value:labelSaveType:labelSourceType:)();
}

uint64_t FMFLabel.value.getter()
{
  return FMFLabel.value.getter();
}

uint64_t type metadata accessor for FMFLabel()
{
  return type metadata accessor for FMFLabel();
}

uint64_t FMFConfig.maxNotifyMeFences.getter()
{
  return FMFConfig.maxNotifyMeFences.getter();
}

uint64_t type metadata accessor for FMFConfig()
{
  return type metadata accessor for FMFConfig();
}

uint64_t FMFDevice.identifier.getter()
{
  return FMFDevice.identifier.getter();
}

uint64_t FMFDevice.autoMeCapable.getter()
{
  return FMFDevice.autoMeCapable.getter();
}

uint64_t FMFDevice.name.getter()
{
  return FMFDevice.name.getter();
}

uint64_t type metadata accessor for FMFDevice()
{
  return type metadata accessor for FMFDevice();
}

uint64_t FMFFriend.identifier.getter()
{
  return FMFFriend.identifier.getter();
}

uint64_t FMFFriend.properName.getter()
{
  return FMFFriend.properName.getter();
}

uint64_t FMFFriend.shareExpires.getter()
{
  return FMFFriend.shareExpires.getter();
}

uint64_t FMFFriend.favoriteOrder.getter()
{
  return FMFFriend.favoriteOrder.getter();
}

uint64_t FMFFriend.contactHandles.getter()
{
  return FMFFriend.contactHandles.getter();
}

uint64_t FMFFriend.optedNotToShare.getter()
{
  return FMFFriend.optedNotToShare.getter();
}

uint64_t FMFFriend.debugDescription.getter()
{
  return FMFFriend.debugDescription.getter();
}

uint64_t FMFFriend.fallbackToLegacy.getter()
{
  return FMFFriend.fallbackToLegacy.getter();
}

uint64_t FMFFriend.relationshipType.getter()
{
  return FMFFriend.relationshipType.getter();
}

uint64_t FMFFriend.locationAlertsOnMe.getter()
{
  return FMFFriend.locationAlertsOnMe.getter();
}

uint64_t FMFFriend.pendingUpdateReason.getter()
{
  return FMFFriend.pendingUpdateReason.getter();
}

uint64_t FMFFriend.locationAlertsOnFriend.getter()
{
  return FMFFriend.locationAlertsOnFriend.getter();
}

uint64_t FMFFriend.isWaitingForShallowLocation.getter()
{
  return FMFFriend.isWaitingForShallowLocation.getter();
}

uint64_t static FMFFriend.== infix(_:_:)()
{
  return static FMFFriend.== infix(_:_:)();
}

uint64_t FMFFriend.supportsShallowOrLiveLocations.getter()
{
  return FMFFriend.supportsShallowOrLiveLocations.getter();
}

uint64_t FMFFriend.name.getter()
{
  return FMFFriend.name.getter();
}

uint64_t FMFFriend.contact.getter()
{
  return FMFFriend.contact.getter();
}

uint64_t FMFFriend.location.getter()
{
  return FMFFriend.location.getter();
}

uint64_t FMFFriend.shortName.getter()
{
  return FMFFriend.shortName.getter();
}

uint64_t type metadata accessor for FMFFriend()
{
  return type metadata accessor for FMFFriend();
}

uint64_t FMFMyInfo.meDeviceId.getter()
{
  return FMFMyInfo.meDeviceId.getter();
}

uint64_t FMFMyInfo.debugDescription.getter()
{
  return FMFMyInfo.debugDescription.getter();
}

uint64_t FMFMyInfo.deviceId.getter()
{
  return FMFMyInfo.deviceId.getter();
}

uint64_t type metadata accessor for FMFMyInfo()
{
  return type metadata accessor for FMFMyInfo();
}

uint64_t EdgeInsets.init(_all:)()
{
  return EdgeInsets.init(_all:)();
}

uint64_t LazyVStack.init(alignment:spacing:pinnedViews:content:)()
{
  return LazyVStack.init(alignment:spacing:pinnedViews:content:)();
}

uint64_t ScrollView.init(_:showsIndicators:content:)()
{
  return ScrollView.init(_:showsIndicators:content:)();
}

uint64_t type metadata accessor for ControlSize()
{
  return type metadata accessor for ControlSize();
}

uint64_t type metadata accessor for Environment.Content()
{
  return type metadata accessor for Environment.Content();
}

uint64_t StateObject.wrappedValue.getter()
{
  return StateObject.wrappedValue.getter();
}

uint64_t StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)()
{
  return StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
}

uint64_t ScaledMetric.init(wrappedValue:relativeTo:)()
{
  return ScaledMetric.init(wrappedValue:relativeTo:)();
}

uint64_t type metadata accessor for ScaledMetric()
{
  return type metadata accessor for ScaledMetric();
}

uint64_t _FrameLayout.init(width:height:alignment:)()
{
  return _FrameLayout.init(width:height:alignment:)();
}

uint64_t static SymbolVariants.fill.getter()
{
  return static SymbolVariants.fill.getter();
}

uint64_t static SymbolVariants.circle.getter()
{
  return static SymbolVariants.circle.getter();
}

uint64_t type metadata accessor for SymbolVariants()
{
  return type metadata accessor for SymbolVariants();
}

uint64_t type metadata accessor for DynamicTypeSize()
{
  return type metadata accessor for DynamicTypeSize();
}

uint64_t NavigationStack.init<>(root:)()
{
  return NavigationStack.init<>(root:)();
}

uint64_t PlainButtonStyle.init()()
{
  return PlainButtonStyle.init()();
}

uint64_t type metadata accessor for PlainButtonStyle()
{
  return type metadata accessor for PlainButtonStyle();
}

uint64_t type metadata accessor for PresentationMode()
{
  return type metadata accessor for PresentationMode();
}

uint64_t type metadata accessor for RoundedRectangle._Inset()
{
  return type metadata accessor for RoundedRectangle._Inset();
}

uint64_t type metadata accessor for RoundedRectangle()
{
  return type metadata accessor for RoundedRectangle();
}

uint64_t _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t EnvironmentValues.controlSize.getter()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t EnvironmentValues.controlSize.setter()
{
  return EnvironmentValues.controlSize.setter();
}

uint64_t EnvironmentValues.dynamicTypeSize.getter()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t EnvironmentValues.dynamicTypeSize.setter()
{
  return EnvironmentValues.dynamicTypeSize.setter();
}

uint64_t EnvironmentValues.foregroundColor.getter()
{
  return EnvironmentValues.foregroundColor.getter();
}

uint64_t EnvironmentValues.foregroundColor.setter()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t EnvironmentValues.presentationMode.getter()
{
  return EnvironmentValues.presentationMode.getter();
}

uint64_t EnvironmentValues.backgroundMaterial.getter()
{
  return EnvironmentValues.backgroundMaterial.getter();
}

uint64_t EnvironmentValues.backgroundMaterial.setter()
{
  return EnvironmentValues.backgroundMaterial.setter();
}

uint64_t EnvironmentValues.minimumScaleFactor.getter()
{
  return EnvironmentValues.minimumScaleFactor.getter();
}

uint64_t EnvironmentValues.minimumScaleFactor.setter()
{
  return EnvironmentValues.minimumScaleFactor.setter();
}

uint64_t EnvironmentValues.multilineTextAlignment.getter()
{
  return EnvironmentValues.multilineTextAlignment.getter();
}

uint64_t EnvironmentValues.multilineTextAlignment.setter()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t EnvironmentValues.font.getter()
{
  return EnvironmentValues.font.getter();
}

uint64_t EnvironmentValues.font.setter()
{
  return EnvironmentValues.font.setter();
}

uint64_t EnvironmentValues.isEnabled.getter()
{
  return EnvironmentValues.isEnabled.getter();
}

uint64_t EnvironmentValues.isEnabled.setter()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t EnvironmentValues.lineLimit.getter()
{
  return EnvironmentValues.lineLimit.getter();
}

uint64_t EnvironmentValues.lineLimit.setter()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t EnvironmentValues.tintColor.getter()
{
  return EnvironmentValues.tintColor.getter();
}

uint64_t EnvironmentValues.tintColor.setter()
{
  return EnvironmentValues.tintColor.setter();
}

uint64_t EnvironmentValues.init()()
{
  return EnvironmentValues.init()();
}

uint64_t type metadata accessor for EnvironmentValues()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t static VerticalAlignment.center.getter()
{
  return static VerticalAlignment.center.getter();
}

uint64_t LocalizedStringKey.init(stringLiteral:)()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t type metadata accessor for RoundedCornerStyle()
{
  return type metadata accessor for RoundedCornerStyle();
}

uint64_t static AccessibilityTraits.isSelected.getter()
{
  return static AccessibilityTraits.isSelected.getter();
}

uint64_t type metadata accessor for AccessibilityTraits()
{
  return type metadata accessor for AccessibilityTraits();
}

uint64_t static HorizontalAlignment.center.getter()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t static HorizontalAlignment.leading.getter()
{
  return static HorizontalAlignment.leading.getter();
}

uint64_t dispatch thunk of UIHostingController.sizingOptions.setter()
{
  return dispatch thunk of UIHostingController.sizingOptions.setter();
}

uint64_t UIHostingController.init(rootView:)()
{
  return UIHostingController.init(rootView:)();
}

uint64_t UIViewRepresentable._resetUIView(_:coordinator:destroy:)()
{
  return UIViewRepresentable._resetUIView(_:coordinator:destroy:)();
}

uint64_t static UIViewRepresentable.dismantleUIView(_:coordinator:)()
{
  return static UIViewRepresentable.dismantleUIView(_:coordinator:)();
}

uint64_t UIViewRepresentable.sizeThatFits(_:uiView:context:)()
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)();
}

uint64_t static UIViewRepresentable._layoutOptions(_:)()
{
  return static UIViewRepresentable._layoutOptions(_:)();
}

uint64_t UIViewRepresentable._identifiedViewTree(in:)()
{
  return UIViewRepresentable._identifiedViewTree(in:)();
}

uint64_t UIViewRepresentable._overrideLayoutTraits(_:for:)()
{
  return UIViewRepresentable._overrideLayoutTraits(_:for:)();
}

uint64_t static UIViewRepresentable._modifyBridgedViewInputs(_:)()
{
  return static UIViewRepresentable._modifyBridgedViewInputs(_:)();
}

uint64_t UIViewRepresentable.body.getter()
{
  return UIViewRepresentable.body.getter();
}

uint64_t UIViewRepresentable<>.makeCoordinator()()
{
  return UIViewRepresentable<>.makeCoordinator()();
}

uint64_t _ConditionalContent<>.init(storage:)()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t type metadata accessor for PinnedScrollableViews()
{
  return type metadata accessor for PinnedScrollableViews();
}

uint64_t UIHostingConfiguration<>.init(content:)()
{
  return UIHostingConfiguration<>.init(content:)();
}

uint64_t BorderedProminentButtonStyle.init()()
{
  return BorderedProminentButtonStyle.init()();
}

uint64_t type metadata accessor for BorderedProminentButtonStyle()
{
  return type metadata accessor for BorderedProminentButtonStyle();
}

uint64_t static UIHostingControllerSizingOptions.intrinsicContentSize.getter()
{
  return static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
}

uint64_t type metadata accessor for UIHostingControllerSizingOptions()
{
  return type metadata accessor for UIHostingControllerSizingOptions();
}

uint64_t static Log.runtimeIssuesLog.getter()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t static Axis.Set.vertical.getter()
{
  return static Axis.Set.vertical.getter();
}

uint64_t static Edge.Set.horizontal.getter()
{
  return static Edge.Set.horizontal.getter();
}

uint64_t static Edge.Set.all.getter()
{
  return static Edge.Set.all.getter();
}

uint64_t static Edge.Set.vertical.getter()
{
  return static Edge.Set.vertical.getter();
}

uint64_t static Font.largeTitle.getter()
{
  return static Font.largeTitle.getter();
}

uint64_t static Font.subheadline.getter()
{
  return static Font.subheadline.getter();
}

uint64_t static Font.title.getter()
{
  return static Font.title.getter();
}

uint64_t type metadata accessor for Font.TextStyle()
{
  return type metadata accessor for Font.TextStyle();
}

uint64_t Menu.init(content:label:)()
{
  return Menu.init(content:label:)();
}

uint64_t Text.bold()()
{
  return Text.bold()();
}

uint64_t Text.font(_:)()
{
  return Text.font(_:)();
}

uint64_t Text.init(_:tableName:bundle:comment:)()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t Text.init<A>(_:)()
{
  return Text.init<A>(_:)();
}

uint64_t static View._makeView(view:inputs:)()
{
  return static View._makeView(view:inputs:)();
}

uint64_t static View._makeViewList(view:inputs:)()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t View.buttonStyle<A>(_:)()
{
  return View.buttonStyle<A>(_:)();
}

uint64_t View.accessibility(addTraits:)()
{
  return View.accessibility(addTraits:)();
}

uint64_t View.symbolVariant(_:)()
{
  return View.symbolVariant(_:)();
}

uint64_t static View._viewListCount(inputs:)()
{
  return static View._viewListCount(inputs:)();
}

uint64_t View.dynamicTypeSize<A>(_:)()
{
  return View.dynamicTypeSize<A>(_:)();
}

uint64_t View.accessibilityLabel<A>(_:)()
{
  return View.accessibilityLabel<A>(_:)();
}

uint64_t Color.init(uiColor:)()
{
  return Color.init(uiColor:)();
}

uint64_t static Color.secondary.getter()
{
  return static Color.secondary.getter();
}

uint64_t Color.init(_:)()
{
  return Color.init(_:)();
}

uint64_t Image.init(uiImage:)()
{
  return Image.init(uiImage:)();
}

uint64_t Image.init(systemName:)()
{
  return Image.init(systemName:)();
}

uint64_t type metadata accessor for Image.ResizingMode()
{
  return type metadata accessor for Image.ResizingMode();
}

uint64_t Image.resizable(capInsets:resizingMode:)()
{
  return Image.resizable(capInsets:resizingMode:)();
}

uint64_t Image.init(_:bundle:)()
{
  return Image.init(_:bundle:)();
}

uint64_t Button.init(action:label:)()
{
  return Button.init(action:label:)();
}

uint64_t Toggle<>.init<A>(_:isOn:)()
{
  return Toggle<>.init<A>(_:isOn:)();
}

uint64_t Binding.init(get:set:)()
{
  return Binding.init(get:set:)();
}

uint64_t static Material.regular.getter()
{
  return static Material.regular.getter();
}

uint64_t type metadata accessor for Material()
{
  return type metadata accessor for Material();
}

uint64_t static Alignment.topLeading.getter()
{
  return static Alignment.topLeading.getter();
}

uint64_t static Alignment.bottom.getter()
{
  return static Alignment.bottom.getter();
}

uint64_t static Alignment.center.getter()
{
  return static Alignment.center.getter();
}

uint64_t type metadata accessor for DispatchTimeInterval()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t static DispatchWorkItemFlags.barrier.getter()
{
  return static DispatchWorkItemFlags.barrier.getter();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t type metadata accessor for DispatchQoS.QoSClass()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t static DispatchQoS.userInitiated.getter()
{
  return static DispatchQoS.userInitiated.getter();
}

uint64_t static DispatchQoS.userInteractive.getter()
{
  return static DispatchQoS.userInteractive.getter();
}

uint64_t static DispatchQoS.default.getter()
{
  return static DispatchQoS.default.getter();
}

uint64_t static DispatchQoS.utility.getter()
{
  return static DispatchQoS.utility.getter();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t static DispatchTime.now()()
{
  return static DispatchTime.now()();
}

uint64_t type metadata accessor for DispatchTime()
{
  return type metadata accessor for DispatchTime();
}

uint64_t static DispatchWallTime.now()()
{
  return static DispatchWallTime.now()();
}

uint64_t type metadata accessor for DispatchWallTime()
{
  return type metadata accessor for DispatchWallTime();
}

uint64_t DispatchWorkItem.init(flags:block:)()
{
  return DispatchWorkItem.init(flags:block:)();
}

uint64_t dispatch thunk of DispatchWorkItem.cancel()()
{
  return dispatch thunk of DispatchWorkItem.cancel()();
}

uint64_t type metadata accessor for DispatchWorkItem()
{
  return type metadata accessor for DispatchWorkItem();
}

uint64_t type metadata accessor for DispatchPredicate()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t + infix(_:_:)()
{
  return + infix(_:_:)();
}

{
  return + infix(_:_:)();
}

{
  return + infix(_:_:)();
}

uint64_t _dispatchPreconditionTest(_:)()
{
  return _dispatchPreconditionTest(_:)();
}

uint64_t FMIPDevice.beaconType.getter()
{
  return FMIPDevice.beaconType.getter();
}

uint64_t FMIPDevice.identifier.getter()
{
  return FMIPDevice.identifier.getter();
}

uint64_t FMIPDevice.isLocating.getter()
{
  return FMIPDevice.isLocating.getter();
}

uint64_t FMIPDevice.hasLocation.getter()
{
  return FMIPDevice.hasLocation.getter();
}

uint64_t FMIPDevice.baIdentifier.getter()
{
  return FMIPDevice.baIdentifier.getter();
}

uint64_t FMIPDevice.batteryLevel.getter()
{
  return FMIPDevice.batteryLevel.getter();
}

uint64_t FMIPDevice.bestLocation.getter()
{
  return FMIPDevice.bestLocation.getter();
}

uint64_t FMIPDevice.lockMetadata.getter()
{
  return FMIPDevice.lockMetadata.getter();
}

uint64_t FMIPDevice.lostMetadata.getter()
{
  return FMIPDevice.lostMetadata.getter();
}

uint64_t FMIPDevice.audioChannels.getter()
{
  return FMIPDevice.audioChannels.getter();
}

uint64_t FMIPDevice.batteryStatus.getter()
{
  return FMIPDevice.batteryStatus.getter();
}

uint64_t FMIPDevice.eraseMetadata.getter()
{
  return FMIPDevice.eraseMetadata.getter();
}

uint64_t FMIPDevice.lostTimestamp.getter()
{
  return FMIPDevice.lostTimestamp.getter();
}

uint64_t FMIPDevice.safeLocations.getter()
{
  return FMIPDevice.safeLocations.getter();
}

uint64_t FMIPDevice.soundMetadata.getter()
{
  return FMIPDevice.soundMetadata.getter();
}

uint64_t FMIPDevice.passcodeLength.getter()
{
  return FMIPDevice.passcodeLength.getter();
}

uint64_t FMIPDevice.wipedTimestamp.getter()
{
  return FMIPDevice.wipedTimestamp.getter();
}

uint64_t FMIPDevice.isLocalFindable.getter()
{
  return FMIPDevice.isLocalFindable.getter();
}

uint64_t FMIPDevice.lockedTimestamp.getter()
{
  return FMIPDevice.lockedTimestamp.getter();
}

uint64_t FMIPDevice.ownerIdentifier.getter()
{
  return FMIPDevice.ownerIdentifier.getter();
}

uint64_t FMIPDevice.debugDescription.getter()
{
  return FMIPDevice.debugDescription.getter();
}

uint64_t FMIPDevice.isLostModeActive.getter()
{
  return FMIPDevice.isLostModeActive.getter();
}

uint64_t FMIPDevice.maxMessageLength.getter()
{
  return FMIPDevice.maxMessageLength.getter();
}

uint64_t FMIPDevice.modelDisplayName.getter()
{
  return FMIPDevice.modelDisplayName.getter();
}

uint64_t FMIPDevice.pairingIncomplete.getter()
{
  return FMIPDevice.pairingIncomplete.getter();
}

uint64_t FMIPDevice.historicalLocations.getter()
{
  return FMIPDevice.historicalLocations.getter();
}

uint64_t FMIPDevice.crowdSourcedLocation.getter()
{
  return FMIPDevice.crowdSourcedLocation.getter();
}

uint64_t FMIPDevice.deviceConnectedState.getter()
{
  return FMIPDevice.deviceConnectedState.getter();
}

uint64_t FMIPDevice.skipPasswordOnRemove.getter()
{
  return FMIPDevice.skipPasswordOnRemove.getter();
}

uint64_t FMIPDevice.isAppleAudioAccessory.getter()
{
  return FMIPDevice.isAppleAudioAccessory.getter();
}

uint64_t FMIPDevice.isConsideredAccessory.getter()
{
  return FMIPDevice.isConsideredAccessory.getter();
}

Swift::Bool __swiftcall FMIPDevice.canEnableNotifyWhenFound()()
{
  return FMIPDevice.canEnableNotifyWhenFound()();
}

uint64_t FMIPDevice.removePairingLockLocally.getter()
{
  return FMIPDevice.removePairingLockLocally.getter();
}

uint64_t FMIPDevice.deviceConnectedWithBeacon.getter()
{
  return FMIPDevice.deviceConnectedWithBeacon.getter();
}

uint64_t FMIPDevice.warnLockOnUnattachedRemove.getter()
{
  return FMIPDevice.warnLockOnUnattachedRemove.getter();
}

uint64_t FMIPDevice.pendingRemoveUntilTimestamp.getter()
{
  return FMIPDevice.pendingRemoveUntilTimestamp.getter();
}

uint64_t static FMIPDevice.== infix(_:_:)()
{
  return static FMIPDevice.== infix(_:_:)();
}

uint64_t FMIPDevice.shouldDisplaySeparatedLocation.getter()
{
  return FMIPDevice.shouldDisplaySeparatedLocation.getter();
}

uint64_t FMIPDevice.name.getter()
{
  return FMIPDevice.name.getter();
}

uint64_t FMIPDevice.color.getter()
{
  return FMIPDevice.color.getter();
}

uint64_t FMIPDevice.state.getter()
{
  return FMIPDevice.state.getter();
}

uint64_t FMIPDevice.status.getter()
{
  return FMIPDevice.status.getter();
}

uint64_t FMIPDevice.address.getter()
{
  return FMIPDevice.address.getter();
}

uint64_t FMIPDevice.isOwned.getter()
{
  return FMIPDevice.isOwned.getter();
}

uint64_t FMIPDevice.category.getter()
{
  return FMIPDevice.category.getter();
}

uint64_t FMIPDevice.features.getter()
{
  return FMIPDevice.features.getter();
}

uint64_t FMIPDevice.location.getter()
{
  return FMIPDevice.location.getter();
}

uint64_t FMIPDevice.rawModel.getter()
{
  return FMIPDevice.rawModel.getter();
}

uint64_t FMIPDevice.itemGroup.getter()
{
  return FMIPDevice.itemGroup.getter();
}

uint64_t type metadata accessor for FMIPDevice()
{
  return type metadata accessor for FMIPDevice();
}

uint64_t FMIPPerson.identifier.getter()
{
  return FMIPPerson.identifier.getter();
}

uint64_t FMIPPerson.phoneNumber.getter()
{
  return FMIPPerson.phoneNumber.getter();
}

uint64_t FMIPPerson.username.getter()
{
  return FMIPPerson.username.getter();
}

uint64_t FMIPPerson.firstName.getter()
{
  return FMIPPerson.firstName.getter();
}

uint64_t type metadata accessor for FMIPPerson()
{
  return type metadata accessor for FMIPPerson();
}

uint64_t FMIPAddress.streetName.getter()
{
  return FMIPAddress.streetName.getter();
}

uint64_t FMIPAddress.streetAddress.getter()
{
  return FMIPAddress.streetAddress.getter();
}

uint64_t FMIPAddress.displayAddress.getter()
{
  return FMIPAddress.displayAddress.getter();
}

uint64_t FMIPAddress.poiAddressModern.getter()
{
  return FMIPAddress.poiAddressModern.getter();
}

uint64_t FMIPAddress.largeAddressModern.getter()
{
  return FMIPAddress.largeAddressModern.getter();
}

uint64_t FMIPAddress.smallAddressModern.getter()
{
  return FMIPAddress.smallAddressModern.getter();
}

uint64_t FMIPAddress.coarseAddressModern.getter()
{
  return FMIPAddress.coarseAddressModern.getter();
}

uint64_t FMIPAddress.mediumAddressModern.getter()
{
  return FMIPAddress.mediumAddressModern.getter();
}

uint64_t FMIPAddress.streetAddressModern.getter()
{
  return FMIPAddress.streetAddressModern.getter();
}

uint64_t FMIPAddress.formattedAddressLines.getter()
{
  return FMIPAddress.formattedAddressLines.getter();
}

uint64_t FMIPAddress.mapItemFormattedAddress.getter()
{
  return FMIPAddress.mapItemFormattedAddress.getter();
}

uint64_t FMIPAddress.label.getter()
{
  return FMIPAddress.label.getter();
}

uint64_t type metadata accessor for FMIPAddress()
{
  return type metadata accessor for FMIPAddress();
}

Swift::Void __swiftcall FMIPManager.initialize()()
{
}

uint64_t FMIPManager.isCompanion(completion:)()
{
  return FMIPManager.isCompanion(completion:)();
}

uint64_t FMIPManager.unknownItems.getter()
{
  return FMIPManager.unknownItems.getter();
}

uint64_t FMIPManager.init(configuration:ownerSession:)()
{
  return FMIPManager.init(configuration:ownerSession:)();
}

uint64_t FMIPManager.familyMembers.getter()
{
  return FMIPManager.familyMembers.getter();
}

uint64_t FMIPManager.isInitialized.getter()
{
  return FMIPManager.isInitialized.getter();
}

uint64_t FMIPManager.refreshShares(completion:)()
{
  return FMIPManager.refreshShares(completion:)();
}

uint64_t FMIPManager.safeLocations.getter()
{
  return FMIPManager.safeLocations.getter();
}

uint64_t FMIPManager.refreshBeacons(completion:)()
{
  return FMIPManager.refreshBeacons(completion:)();
}

uint64_t FMIPManager.selectedDevice.setter()
{
  return FMIPManager.selectedDevice.setter();
}

Swift::Void __swiftcall FMIPManager.stopRefreshing()()
{
}

Swift::Void __swiftcall FMIPManager.startRefreshing()()
{
}

uint64_t FMIPManager.debugDescription.getter()
{
  return FMIPManager.debugDescription.getter();
}

uint64_t FMIPManager.rangingParameters.getter()
{
  return FMIPManager.rangingParameters.getter();
}

Swift::Void __swiftcall FMIPManager.forceStartRefreshing()()
{
}

uint64_t FMIPManager.refreshSafeLocations(completion:)()
{
  return FMIPManager.refreshSafeLocations(completion:)();
}

uint64_t FMIPManager.refreshUnknownBeacons(completion:)()
{
  return FMIPManager.refreshUnknownBeacons(completion:)();
}

Swift::Void __swiftcall FMIPManager.updateLastLocationStatus(enabled:)(Swift::Bool enabled)
{
}

uint64_t FMIPManager.separationMonitoringState.getter()
{
  return FMIPManager.separationMonitoringState.getter();
}

Swift::Void __swiftcall FMIPManager.updateLastActiveTimestamp()()
{
}

Swift::Void __swiftcall FMIPManager.pauseThrottleOfflineLocationRefreshing(pause:)(Swift::Bool pause)
{
}

uint64_t FMIPManager.items.getter()
{
  return FMIPManager.items.getter();
}

uint64_t FMIPManager.owner.getter()
{
  return FMIPManager.owner.getter();
}

uint64_t FMIPManager.handle(url:completion:)()
{
  return FMIPManager.handle(url:completion:)();
}

uint64_t FMIPManager.devices.getter()
{
  return FMIPManager.devices.getter();
}

uint64_t FMIPManager.enqueue(actionEvent:)()
{
  return FMIPManager.enqueue(actionEvent:)();
}

uint64_t FMIPManager.enqueue(separationEvent:)()
{
  return FMIPManager.enqueue(separationEvent:)();
}

uint64_t FMIPManager.enqueue(mapInteractionEvent:)()
{
  return FMIPManager.enqueue(mapInteractionEvent:)();
}

uint64_t FMIPManager.enqueue(airpodsPlaySoundEvent:)()
{
  return FMIPManager.enqueue(airpodsPlaySoundEvent:)();
}

uint64_t FMIPManager.enqueue(notificationLaunchEvent:)()
{
  return FMIPManager.enqueue(notificationLaunchEvent:)();
}

uint64_t FMIPManager.enqueue(notificationPromptEvent:)()
{
  return FMIPManager.enqueue(notificationPromptEvent:)();
}

uint64_t FMIPManager.enqueue(satelliteLocationUpdateEvent:)()
{
  return FMIPManager.enqueue(satelliteLocationUpdateEvent:)();
}

uint64_t FMIPManager.enqueue(satelliteLocationNotificationEvent:)()
{
  return FMIPManager.enqueue(satelliteLocationNotificationEvent:)();
}

uint64_t FMIPManager.enqueue(event:)()
{
  return FMIPManager.enqueue(event:)();
}

uint64_t FMIPManager.enqueue(UTEvent:item:)()
{
  return FMIPManager.enqueue(UTEvent:item:)();
}

uint64_t FMIPManager.perform(action:completion:)()
{
  return FMIPManager.perform(action:completion:)();
}

{
  return FMIPManager.perform(action:completion:)();
}

{
  return FMIPManager.perform(action:completion:)();
}

{
  return FMIPManager.perform(action:completion:)();
}

{
  return FMIPManager.perform(action:completion:)();
}

{
  return FMIPManager.perform(action:completion:)();
}

{
  return FMIPManager.perform(action:completion:)();
}

{
  return FMIPManager.perform(action:completion:)();
}

{
  return FMIPManager.perform(action:completion:)();
}

{
  return FMIPManager.perform(action:completion:)();
}

{
  return FMIPManager.perform(action:completion:)();
}

uint64_t FMIPManager.delegate.setter()
{
  return FMIPManager.delegate.setter();
}

uint64_t type metadata accessor for FMIPManager()
{
  return type metadata accessor for FMIPManager();
}

uint64_t FMIPURLInfo.identifier.getter()
{
  return FMIPURLInfo.identifier.getter();
}

uint64_t FMIPURLInfo.manufacturer.getter()
{
  return FMIPURLInfo.manufacturer.getter();
}

uint64_t FMIPURLInfo.partIdentifier.getter()
{
  return FMIPURLInfo.partIdentifier.getter();
}

uint64_t FMIPURLInfo.action.getter()
{
  return FMIPURLInfo.action.getter();
}

uint64_t type metadata accessor for FMIPURLInfo()
{
  return type metadata accessor for FMIPURLInfo();
}

uint64_t static FMIPFeatures.isWipeEnabled.getter()
{
  return static FMIPFeatures.isWipeEnabled.getter();
}

uint64_t static FMIPFeatures.isKeypadEnabled.getter()
{
  return static FMIPFeatures.isKeypadEnabled.getter();
}

uint64_t static FMIPFeatures.isRemoveEnabled.getter()
{
  return static FMIPFeatures.isRemoveEnabled.getter();
}

uint64_t static FMIPFeatures.isLostModeEnabled.getter()
{
  return static FMIPFeatures.isLostModeEnabled.getter();
}

uint64_t static FMIPFeatures.isRepairSupported.getter()
{
  return static FMIPFeatures.isRepairSupported.getter();
}

uint64_t static FMIPFeatures.canBeLeashedByHost.getter()
{
  return static FMIPFeatures.canBeLeashedByHost.getter();
}

uint64_t static FMIPFeatures.isPlaySoundEnabled.getter()
{
  return static FMIPFeatures.isPlaySoundEnabled.getter();
}

uint64_t static FMIPFeatures.isBluetoothRequired.getter()
{
  return static FMIPFeatures.isBluetoothRequired.getter();
}

uint64_t static FMIPFeatures.isLeashingSupported.getter()
{
  return static FMIPFeatures.isLeashingSupported.getter();
}

uint64_t static FMIPFeatures.isBTFindingSupported.getter()
{
  return static FMIPFeatures.isBTFindingSupported.getter();
}

uint64_t static FMIPFeatures.isPinRequiredForWipe.getter()
{
  return static FMIPFeatures.isPinRequiredForWipe.getter();
}

uint64_t static FMIPFeatures.isStopSoundSupported.getter()
{
  return static FMIPFeatures.isStopSoundSupported.getter();
}

uint64_t static FMIPFeatures.isRemoveUIv2Supported.getter()
{
  return static FMIPFeatures.isRemoveUIv2Supported.getter();
}

uint64_t static FMIPFeatures.isPendingRemoveCapable.getter()
{
  return static FMIPFeatures.isPendingRemoveCapable.getter();
}

uint64_t static FMIPFeatures.isLockAndMessageEnabled.getter()
{
  return static FMIPFeatures.isLockAndMessageEnabled.getter();
}

uint64_t static FMIPFeatures.isWipeAndMessageEnabled.getter()
{
  return static FMIPFeatures.isWipeAndMessageEnabled.getter();
}

uint64_t static FMIPFeatures.isEraseAfterLockSupported.getter()
{
  return static FMIPFeatures.isEraseAfterLockSupported.getter();
}

uint64_t static FMIPFeatures.locateAfterEraseSupported.getter()
{
  return static FMIPFeatures.locateAfterEraseSupported.getter();
}

uint64_t static FMIPFeatures.isMultiChannelSoundEnabled.getter()
{
  return static FMIPFeatures.isMultiChannelSoundEnabled.getter();
}

uint64_t static FMIPFeatures.isNotifyWhenFoundSupported.getter()
{
  return static FMIPFeatures.isNotifyWhenFoundSupported.getter();
}

uint64_t static FMIPFeatures.isNotifyWhenDetachedSupported.getter()
{
  return static FMIPFeatures.isNotifyWhenDetachedSupported.getter();
}

uint64_t static FMIPFeatures.isShowContactDetailsSupported.getter()
{
  return static FMIPFeatures.isShowContactDetailsSupported.getter();
}

uint64_t static FMIPFeatures.isLostModeWithLocationServiceEnabled.getter()
{
  return static FMIPFeatures.isLostModeWithLocationServiceEnabled.getter();
}

uint64_t type metadata accessor for FMIPFeatures()
{
  return type metadata accessor for FMIPFeatures();
}

uint64_t FMIPItemRole.identifier.getter()
{
  return FMIPItemRole.identifier.getter();
}

uint64_t FMIPItemRole.name.getter()
{
  return FMIPItemRole.name.getter();
}

uint64_t FMIPItemRole.emoji.getter()
{
  return FMIPItemRole.emoji.getter();
}

uint64_t type metadata accessor for FMIPItemRole()
{
  return type metadata accessor for FMIPItemRole();
}

uint64_t FMIPLocation.locationType.getter()
{
  return FMIPLocation.locationType.getter();
}

uint64_t FMIPLocation.debugDescription.getter()
{
  return FMIPLocation.debugDescription.getter();
}

uint64_t FMIPLocation.isOld.getter()
{
  return FMIPLocation.isOld.getter();
}

uint64_t FMIPLocation.init(location:type:)()
{
  return FMIPLocation.init(location:type:)();
}

uint64_t FMIPLocation.location.getter()
{
  return FMIPLocation.location.getter();
}

uint64_t type metadata accessor for FMIPLocation()
{
  return type metadata accessor for FMIPLocation();
}

uint64_t FMIPPartInfo.name.getter()
{
  return FMIPPartInfo.name.getter();
}

uint64_t FMIPPartInfo.type.getter()
{
  return FMIPPartInfo.type.getter();
}

uint64_t FMIPPartInfo.symbol.getter()
{
  return FMIPPartInfo.symbol.getter();
}

uint64_t type metadata accessor for FMIPPartInfo()
{
  return type metadata accessor for FMIPPartInfo();
}

uint64_t static FMIPPartType.isEqualSortOrder(lhs:rhs:)()
{
  return static FMIPPartType.isEqualSortOrder(lhs:rhs:)();
}

uint64_t static FMIPPartType.< infix(_:_:)()
{
  return static FMIPPartType.< infix(_:_:)();
}

uint64_t type metadata accessor for FMIPPartType()
{
  return type metadata accessor for FMIPPartType();
}

uint64_t dispatch thunk of FMImageCache.purge()()
{
  return dispatch thunk of FMImageCache.purge()();
}

uint64_t static FMOSActivity.start(_:execute:)()
{
  return static FMOSActivity.start(_:execute:)();
}

uint64_t type metadata accessor for DiscoveryType()
{
  return type metadata accessor for DiscoveryType();
}

uint64_t static FMDemoManager.devicesDemoEnabled.getter()
{
  return static FMDemoManager.devicesDemoEnabled.getter();
}

uint64_t type metadata accessor for FMIPAlertType()
{
  return type metadata accessor for FMIPAlertType();
}

uint64_t static FMIPAnalytics.sendItemEvent(item:)()
{
  return static FMIPAnalytics.sendItemEvent(item:)();
}

uint64_t static FMIPAnalytics.sendDeviceEvent(device:primaryPartIdentifier:)()
{
  return static FMIPAnalytics.sendDeviceEvent(device:primaryPartIdentifier:)();
}

uint64_t static FMIPAnalytics.sendRangingEventAnalytics(eventType:)()
{
  return static FMIPAnalytics.sendRangingEventAnalytics(eventType:)();
}

uint64_t static FMIPItemGroup.primaryPart(group:)()
{
  return static FMIPItemGroup.primaryPart(group:)();
}

uint64_t FMIPItemGroup.capabilities.getter()
{
  return FMIPItemGroup.capabilities.getter();
}

uint64_t FMIPItemGroup.groupedItems.getter()
{
  return FMIPItemGroup.groupedItems.getter();
}

uint64_t FMIPItemGroup.lostMetadata.getter()
{
  return FMIPItemGroup.lostMetadata.getter();
}

uint64_t FMIPItemGroup.itemPairingStateMap.getter()
{
  return FMIPItemGroup.itemPairingStateMap.getter();
}

uint64_t FMIPItemGroup.groupedItemIdentifiers.getter()
{
  return FMIPItemGroup.groupedItemIdentifiers.getter();
}

uint64_t FMIPItemGroup.partsAtMultipleLocations.getter()
{
  return FMIPItemGroup.partsAtMultipleLocations.getter();
}

uint64_t FMIPItemGroup.name.getter()
{
  return FMIPItemGroup.name.getter();
}

uint64_t FMIPItemGroup.items.getter()
{
  return FMIPItemGroup.items.getter();
}

uint64_t FMIPItemGroup.state.getter()
{
  return FMIPItemGroup.state.getter();
}

uint64_t type metadata accessor for FMIPItemGroup()
{
  return type metadata accessor for FMIPItemGroup();
}

uint64_t static FMIPItemState.isLocating.getter()
{
  return static FMIPItemState.isLocating.getter();
}

uint64_t static FMIPItemState.soundError.getter()
{
  return static FMIPItemState.soundError.getter();
}

uint64_t static FMIPItemState.soundQueued.getter()
{
  return static FMIPItemState.soundQueued.getter();
}

uint64_t static FMIPItemState.soundPending.getter()
{
  return static FMIPItemState.soundPending.getter();
}

uint64_t static FMIPItemState.soundPlaying.getter()
{
  return static FMIPItemState.soundPlaying.getter();
}

uint64_t static FMIPItemState.isBTConnected.getter()
{
  return static FMIPItemState.isBTConnected.getter();
}

uint64_t static FMIPItemState.pairingLocked.getter()
{
  return static FMIPItemState.pairingLocked.getter();
}

uint64_t static FMIPItemState.markLostActive.getter()
{
  return static FMIPItemState.markLostActive.getter();
}

uint64_t static FMIPItemState.pairingIncomplete.getter()
{
  return static FMIPItemState.pairingIncomplete.getter();
}

uint64_t static FMIPItemState.isFirmwareUpdating.getter()
{
  return static FMIPItemState.isFirmwareUpdating.getter();
}

uint64_t static FMIPItemState.isFirmwareUpdatePending.getter()
{
  return static FMIPItemState.isFirmwareUpdatePending.getter();
}

uint64_t static FMIPItemState.isNotifyWhenFoundActive.getter()
{
  return static FMIPItemState.isNotifyWhenFoundActive.getter();
}

uint64_t static FMIPItemState.separationWarningActive.getter()
{
  return static FMIPItemState.separationWarningActive.getter();
}

uint64_t static FMIPItemState.normal.getter()
{
  return static FMIPItemState.normal.getter();
}

uint64_t static FMIPItemState.isInCase.getter()
{
  return static FMIPItemState.isInCase.getter();
}

uint64_t type metadata accessor for FMIPItemState()
{
  return type metadata accessor for FMIPItemState();
}

uint64_t type metadata accessor for FMIPURLAction()
{
  return type metadata accessor for FMIPURLAction();
}

uint64_t static FMNetworkUtil.relevantNetworkAlert(alertType:)()
{
  return static FMNetworkUtil.relevantNetworkAlert(alertType:)();
}

uint64_t type metadata accessor for FMNetworkUtil()
{
  return type metadata accessor for FMNetworkUtil();
}

uint64_t static FMIPBeaconType.== infix(_:_:)()
{
  return static FMIPBeaconType.== infix(_:_:)();
}

uint64_t type metadata accessor for FMIPBeaconType()
{
  return type metadata accessor for FMIPBeaconType();
}

uint64_t FMIPItemAction.debugDescription.getter()
{
  return FMIPItemAction.debugDescription.getter();
}

uint64_t FMIPLockAction.init(device:message:passcode:)()
{
  return FMIPLockAction.init(device:message:passcode:)();
}

uint64_t type metadata accessor for FMIPLockAction()
{
  return type metadata accessor for FMIPLockAction();
}

Swift::Double_optional __swiftcall FMUserDefaults.double(for:)(Swift::String a1)
{
  char v1 = FMUserDefaults.double(for:)(a1._countAndFlagsBits, a1._object);
  result.value = v2;
  result.is_nil = v1;
  return result;
}

uint64_t static FMUserDefaults.shared.getter()
{
  return static FMUserDefaults.shared.getter();
}

uint64_t type metadata accessor for FMUserDefaults()
{
  return type metadata accessor for FMUserDefaults();
}

uint64_t FMIPActionEvent.init(type:ownerContext:productType:)()
{
  return FMIPActionEvent.init(type:ownerContext:productType:)();
}

uint64_t type metadata accessor for FMIPActionEvent()
{
  return type metadata accessor for FMIPActionEvent();
}

uint64_t FMIPBeaconShare.isDefaultOwnedShare.getter()
{
  return FMIPBeaconShare.isDefaultOwnedShare.getter();
}

uint64_t FMIPBeaconShare.identifier.getter()
{
  return FMIPBeaconShare.identifier.getter();
}

uint64_t FMIPBeaconShare.ownerHandle.getter()
{
  return FMIPBeaconShare.ownerHandle.getter();
}

uint64_t FMIPBeaconShare.creationDate.getter()
{
  return FMIPBeaconShare.creationDate.getter();
}

uint64_t FMIPBeaconShare.shareeHandle.getter()
{
  return FMIPBeaconShare.shareeHandle.getter();
}

uint64_t FMIPBeaconShare.visitorCount.getter()
{
  return FMIPBeaconShare.visitorCount.getter();
}

uint64_t static FMIPBeaconShare.directionSort(lhs:rhs:)()
{
  return static FMIPBeaconShare.directionSort(lhs:rhs:)();
}

uint64_t FMIPBeaconShare.expirationDate.getter()
{
  return FMIPBeaconShare.expirationDate.getter();
}

uint64_t FMIPBeaconShare.beaconIdentifier.getter()
{
  return FMIPBeaconShare.beaconIdentifier.getter();
}

uint64_t FMIPBeaconShare.delegationStatus.getter()
{
  return FMIPBeaconShare.delegationStatus.getter();
}

uint64_t FMIPBeaconShare.otherPartyHandle.getter()
{
  return FMIPBeaconShare.otherPartyHandle.getter();
}

uint64_t FMIPBeaconShare.requiresResponse.getter()
{
  return FMIPBeaconShare.requiresResponse.getter();
}

uint64_t FMIPBeaconShare.delegatedSharesURL.getter()
{
  return FMIPBeaconShare.delegatedSharesURL.getter();
}

uint64_t FMIPBeaconShare.otherShareeShouldBeHidden.getter()
{
  return FMIPBeaconShare.otherShareeShouldBeHidden.getter();
}

uint64_t FMIPBeaconShare.state.getter()
{
  return FMIPBeaconShare.state.getter();
}

uint64_t FMIPBeaconShare.amOwner.getter()
{
  return FMIPBeaconShare.amOwner.getter();
}

uint64_t type metadata accessor for FMIPBeaconShare()
{
  return type metadata accessor for FMIPBeaconShare();
}

uint64_t FMIPConfigValue.rawValue.getter()
{
  return FMIPConfigValue.rawValue.getter();
}

uint64_t type metadata accessor for FMIPConfigValue()
{
  return type metadata accessor for FMIPConfigValue();
}

uint64_t static FMIPDeviceState.isLocating.getter()
{
  return static FMIPDeviceState.isLocating.getter();
}

uint64_t static FMIPDeviceState.isThisDevice.getter()
{
  return static FMIPDeviceState.isThisDevice.getter();
}

uint64_t static FMIPDeviceState.isInRepairMode.getter()
{
  return static FMIPDeviceState.isInRepairMode.getter();
}

uint64_t static FMIPDeviceState.isDeviceWithYou.getter()
{
  return static FMIPDeviceState.isDeviceWithYou.getter();
}

uint64_t static FMIPDeviceState.isLocationCapable.getter()
{
  return static FMIPDeviceState.isLocationCapable.getter();
}

uint64_t static FMIPDeviceState.isLocationEnabled.getter()
{
  return static FMIPDeviceState.isLocationEnabled.getter();
}

uint64_t static FMIPDeviceState.isLostModeEnabled.getter()
{
  return static FMIPDeviceState.isLostModeEnabled.getter();
}

uint64_t static FMIPDeviceState.isActivationLocked.getter()
{
  return static FMIPDeviceState.isActivationLocked.getter();
}

uint64_t static FMIPDeviceState.isFamilySharedDevice.getter()
{
  return static FMIPDeviceState.isFamilySharedDevice.getter();
}

uint64_t static FMIPDeviceState.isLowPowerModeEnabled.getter()
{
  return static FMIPDeviceState.isLowPowerModeEnabled.getter();
}

uint64_t static FMIPDeviceState.isCrowdsourcedLocating.getter()
{
  return static FMIPDeviceState.isCrowdsourcedLocating.getter();
}

uint64_t static FMIPDeviceState.isDeviceInPendingRemove.getter()
{
  return static FMIPDeviceState.isDeviceInPendingRemove.getter();
}

uint64_t static FMIPDeviceState.separationWarningActive.getter()
{
  return static FMIPDeviceState.separationWarningActive.getter();
}

uint64_t static FMIPDeviceState.separationWarningPaused.getter()
{
  return static FMIPDeviceState.separationWarningPaused.getter();
}

uint64_t static FMIPDeviceState.isNotifyWhenFoundEnabled.getter()
{
  return static FMIPDeviceState.isNotifyWhenFoundEnabled.getter();
}

uint64_t static FMIPDeviceState.isNotifyWhenDetachedEnabled.getter()
{
  return static FMIPDeviceState.isNotifyWhenDetachedEnabled.getter();
}

uint64_t static FMIPDeviceState.isShowContactDetailsEnabled.getter()
{
  return static FMIPDeviceState.isShowContactDetailsEnabled.getter();
}

uint64_t static FMIPDeviceState.isMacOS.getter()
{
  return static FMIPDeviceState.isMacOS.getter();
}

uint64_t type metadata accessor for FMIPDeviceState()
{
  return type metadata accessor for FMIPDeviceState();
}

uint64_t FMIPEraseAction.init(device:message:phoneNumber:passcode:)()
{
  return FMIPEraseAction.init(device:message:phoneNumber:passcode:)();
}

uint64_t type metadata accessor for FMIPEraseAction()
{
  return type metadata accessor for FMIPEraseAction();
}

uint64_t FMIPProductType.isAccessory.getter()
{
  return FMIPProductType.isAccessory.getter();
}

uint64_t FMIPProductType.productInformation.getter()
{
  return FMIPProductType.productInformation.getter();
}

uint64_t static FMIPProductType.== infix(_:_:)()
{
  return static FMIPProductType.== infix(_:_:)();
}

uint64_t FMIPProductType.isZeus.getter()
{
  return FMIPProductType.isZeus.getter();
}

uint64_t FMIPProductType.isAirTag.getter()
{
  return FMIPProductType.isAirTag.getter();
}

uint64_t type metadata accessor for FMIPProductType()
{
  return type metadata accessor for FMIPProductType();
}

uint64_t FMIPUnknownItem.alertState.getter()
{
  return FMIPUnknownItem.alertState.getter();
}

uint64_t FMIPUnknownItem.identifier.getter()
{
  return FMIPUnknownItem.identifier.getter();
}

uint64_t FMIPUnknownItem.utMetadata.getter()
{
  return FMIPUnknownItem.utMetadata.getter();
}

uint64_t FMIPUnknownItem.productType.getter()
{
  return FMIPUnknownItem.productType.getter();
}

uint64_t FMIPUnknownItem.capabilities.getter()
{
  return FMIPUnknownItem.capabilities.getter();
}

uint64_t FMIPUnknownItem.isRequestable.getter()
{
  return FMIPUnknownItem.isRequestable.getter();
}

uint64_t FMIPUnknownItem.unknownBeacon.getter()
{
  return FMIPUnknownItem.unknownBeacon.getter();
}

uint64_t FMIPUnknownItem.isFindMyNetwork.getter()
{
  return FMIPUnknownItem.isFindMyNetwork.getter();
}

uint64_t FMIPUnknownItem.observationType.getter()
{
  return FMIPUnknownItem.observationType.getter();
}

uint64_t FMIPUnknownItem.debugDescription.getter()
{
  return FMIPUnknownItem.debugDescription.getter();
}

uint64_t FMIPUnknownItem.isAppleAudioAccessory.getter()
{
  return FMIPUnknownItem.isAppleAudioAccessory.getter();
}

uint64_t static FMIPUnknownItem.== infix(_:_:)()
{
  return static FMIPUnknownItem.== infix(_:_:)();
}

uint64_t FMIPUnknownItem.name.getter()
{
  return FMIPUnknownItem.name.getter();
}

uint64_t FMIPUnknownItem.state.getter()
{
  return FMIPUnknownItem.state.getter();
}

uint64_t FMIPUnknownItem.handle.getter()
{
  return FMIPUnknownItem.handle.getter();
}

uint64_t FMIPUnknownItem.isPosh.getter()
{
  return FMIPUnknownItem.isPosh.getter();
}

uint64_t FMIPUnknownItem.isIgnored.getter()
{
  return FMIPUnknownItem.isIgnored.getter();
}

uint64_t FMIPUnknownItem.locations.getter()
{
  return FMIPUnknownItem.locations.getter();
}

uint64_t type metadata accessor for FMIPUnknownItem()
{
  return type metadata accessor for FMIPUnknownItem();
}

uint64_t FMIPActionStatus.isActionSuccessful.getter()
{
  return FMIPActionStatus.isActionSuccessful.getter();
}

uint64_t type metadata accessor for FMIPActionStatus()
{
  return type metadata accessor for FMIPActionStatus();
}

uint64_t FMIPAudioChannel.name.getter()
{
  return FMIPAudioChannel.name.getter();
}

uint64_t FMIPAudioChannel.isPlaying.getter()
{
  return FMIPAudioChannel.isPlaying.getter();
}

uint64_t type metadata accessor for FMIPAudioChannel()
{
  return type metadata accessor for FMIPAudioChannel();
}

uint64_t dispatch thunk of FMIPDeviceAction.authenticationContext.setter()
{
  return dispatch thunk of FMIPDeviceAction.authenticationContext.setter();
}

uint64_t dispatch thunk of FMIPDeviceAction.trustedDeviceConfirmation.setter()
{
  return dispatch thunk of FMIPDeviceAction.trustedDeviceConfirmation.setter();
}

uint64_t FMIPDeviceAction.device.getter()
{
  return FMIPDeviceAction.device.getter();
}

uint64_t type metadata accessor for FMIPDeviceAction()
{
  return type metadata accessor for FMIPDeviceAction();
}

uint64_t type metadata accessor for FMIPDeviceStatus()
{
  return type metadata accessor for FMIPDeviceStatus();
}

uint64_t FMIPGlobalConfig<A>(_:fallback:)()
{
  return FMIPGlobalConfig<A>(_:fallback:)();
}

uint64_t type metadata accessor for FMIPLocationType()
{
  return type metadata accessor for FMIPLocationType();
}

uint64_t FMIPLockMetadata.status.getter()
{
  return FMIPLockMetadata.status.getter();
}

uint64_t FMIPLockMetadata.timestamp.getter()
{
  return FMIPLockMetadata.timestamp.getter();
}

uint64_t type metadata accessor for FMIPLockMetadata()
{
  return type metadata accessor for FMIPLockMetadata();
}

uint64_t FMIPNotifyAction.init(device:type:enabled:)()
{
  return FMIPNotifyAction.init(device:type:enabled:)();
}

uint64_t type metadata accessor for FMIPNotifyAction()
{
  return type metadata accessor for FMIPNotifyAction();
}

uint64_t FMIPSafeLocation.init(identifier:label:location:placemark:)()
{
  return FMIPSafeLocation.init(identifier:label:location:placemark:)();
}

uint64_t FMIPSafeLocation.identifier.getter()
{
  return FMIPSafeLocation.identifier.getter();
}

uint64_t FMIPSafeLocation.approvalState.getter()
{
  return FMIPSafeLocation.approvalState.getter();
}

uint64_t FMIPSafeLocation.name.getter()
{
  return FMIPSafeLocation.name.getter();
}

uint64_t FMIPSafeLocation.type.getter()
{
  return FMIPSafeLocation.type.getter();
}

uint64_t FMIPSafeLocation.address.getter()
{
  return FMIPSafeLocation.address.getter();
}

uint64_t FMIPSafeLocation.address.setter()
{
  return FMIPSafeLocation.address.setter();
}

uint64_t FMIPSafeLocation.location.getter()
{
  return FMIPSafeLocation.location.getter();
}

uint64_t type metadata accessor for FMIPSafeLocation()
{
  return type metadata accessor for FMIPSafeLocation();
}

uint64_t FMIPUTAlertEvent.productType.setter()
{
  return FMIPUTAlertEvent.productType.setter();
}

uint64_t FMIPUTAlertEvent.playSoundCount.modify()
{
  return FMIPUTAlertEvent.playSoundCount.modify();
}

uint64_t FMIPUTAlertEvent.observationType.setter()
{
  return FMIPUTAlertEvent.observationType.setter();
}

uint64_t FMIPUTAlertEvent.completionAction.setter()
{
  return FMIPUTAlertEvent.completionAction.setter();
}

uint64_t FMIPUTAlertEvent.disableItemTapped.setter()
{
  return FMIPUTAlertEvent.disableItemTapped.setter();
}

uint64_t FMIPUTAlertEvent.precisionFindingSessionCount.modify()
{
  return FMIPUTAlertEvent.precisionFindingSessionCount.modify();
}

uint64_t FMIPUTAlertEvent.proximityFindingSessionCount.modify()
{
  return FMIPUTAlertEvent.proximityFindingSessionCount.modify();
}

uint64_t FMIPUTAlertEvent.isPosh.setter()
{
  return FMIPUTAlertEvent.isPosh.setter();
}

uint64_t FMIPUTAlertEvent.init(sheetType:completionAction:disableItemTapped:didCloseSheet:playSoundCount:tracksCount:tracksElapsedTime:precisionFindingSessionCount:proximityFindingSessionCount:productType:observationType:isPosh:)()
{
  return FMIPUTAlertEvent.init(sheetType:completionAction:disableItemTapped:didCloseSheet:playSoundCount:tracksCount:tracksElapsedTime:precisionFindingSessionCount:proximityFindingSessionCount:productType:observationType:isPosh:)();
}

uint64_t type metadata accessor for FMIPUTAlertEvent()
{
  return type metadata accessor for FMIPUTAlertEvent();
}

uint64_t FMIPUTAlertState.rawValue.getter()
{
  return FMIPUTAlertState.rawValue.getter();
}

uint64_t type metadata accessor for FMIPUTAlertState()
{
  return type metadata accessor for FMIPUTAlertState();
}

uint64_t FMIPUTItemAction.debugDescription.getter()
{
  return FMIPUTItemAction.debugDescription.getter();
}

uint64_t type metadata accessor for FMIPBatteryStatus()
{
  return type metadata accessor for FMIPBatteryStatus();
}

uint64_t FMIPEraseMetadata.status.getter()
{
  return FMIPEraseMetadata.status.getter();
}

uint64_t FMIPEraseMetadata.timestamp.getter()
{
  return FMIPEraseMetadata.timestamp.getter();
}

uint64_t type metadata accessor for FMIPEraseMetadata()
{
  return type metadata accessor for FMIPEraseMetadata();
}

uint64_t type metadata accessor for FMIPItemImageSize()
{
  return type metadata accessor for FMIPItemImageSize();
}

uint64_t FMIPAccessoryError.init(underlyingError:discoveryType:)()
{
  return FMIPAccessoryError.init(underlyingError:discoveryType:)();
}

uint64_t FMIPAccessoryError.localizedAlertTitle.getter()
{
  return FMIPAccessoryError.localizedAlertTitle.getter();
}

uint64_t FMIPAccessoryError.localizedDescription.getter()
{
  return FMIPAccessoryError.localizedDescription.getter();
}

uint64_t type metadata accessor for FMIPAccessoryError()
{
  return type metadata accessor for FMIPAccessoryError();
}

uint64_t FMIPItemImageCache.deinit()
{
  return FMIPItemImageCache.deinit();
}

uint64_t FMIPLostModeAction.init(device:message:phoneNumber:email:passcode:trackingEnabled:emailUpdatesEnabled:)()
{
  return FMIPLostModeAction.init(device:message:phoneNumber:email:passcode:trackingEnabled:emailUpdatesEnabled:)();
}

uint64_t type metadata accessor for FMIPLostModeAction()
{
  return type metadata accessor for FMIPLostModeAction();
}

uint64_t static FMItemCapabilities.canBTFinding.getter()
{
  return static FMItemCapabilities.canBTFinding.getter();
}

uint64_t static FMItemCapabilities.canPlaySound.getter()
{
  return static FMItemCapabilities.canPlaySound.getter();
}

uint64_t static FMItemCapabilities.canEnableSharing.getter()
{
  return static FMItemCapabilities.canEnableSharing.getter();
}

uint64_t static FMItemCapabilities.canDisableSharing.getter()
{
  return static FMItemCapabilities.canDisableSharing.getter();
}

uint64_t static FMItemCapabilities.canEnableLeashing.getter()
{
  return static FMItemCapabilities.canEnableLeashing.getter();
}

uint64_t static FMItemCapabilities.canEnableLostMode.getter()
{
  return static FMItemCapabilities.canEnableLostMode.getter();
}

uint64_t static FMItemCapabilities.canEnableDelegatedShares.getter()
{
  return static FMItemCapabilities.canEnableDelegatedShares.getter();
}

uint64_t static FMItemCapabilities.canEnableNotifyWhenFound.getter()
{
  return static FMItemCapabilities.canEnableNotifyWhenFound.getter();
}

uint64_t static FMItemCapabilities.canInteractWithDelegatedShares.getter()
{
  return static FMItemCapabilities.canInteractWithDelegatedShares.getter();
}

uint64_t static FMItemCapabilities.canR1.getter()
{
  return static FMItemCapabilities.canR1.getter();
}

uint64_t static FMItemCapabilities.canRemove.getter()
{
  return static FMItemCapabilities.canRemove.getter();
}

uint64_t static FMItemCapabilities.canRename.getter()
{
  return static FMItemCapabilities.canRename.getter();
}

uint64_t type metadata accessor for FMItemCapabilities()
{
  return type metadata accessor for FMItemCapabilities();
}

uint64_t type metadata accessor for FMIPDeviceImageSize()
{
  return type metadata accessor for FMIPDeviceImageSize();
}

uint64_t type metadata accessor for FMIPItemGroupAction()
{
  return type metadata accessor for FMIPItemGroupAction();
}

uint64_t FMIPItemsTabEnabled.getter()
{
  return FMIPItemsTabEnabled.getter();
}

uint64_t FMIPManagerDelegate.fmipManagerDidLoadCache(_:)()
{
  return FMIPManagerDelegate.fmipManagerDidLoadCache(_:)();
}

uint64_t static FMIPPlaySoundMethod.== infix(_:_:)()
{
  return static FMIPPlaySoundMethod.== infix(_:_:)();
}

uint64_t type metadata accessor for FMIPPlaySoundMethod()
{
  return type metadata accessor for FMIPPlaySoundMethod();
}

uint64_t FMIPSeparationEvent.addToAllTapped.setter()
{
  return FMIPSeparationEvent.addToAllTapped.setter();
}

uint64_t FMIPSeparationEvent.init(itemOrDeviceCount:addSafeLocationTapped:addToAllTapped:homeRemoved:)()
{
  return FMIPSeparationEvent.init(itemOrDeviceCount:addSafeLocationTapped:addToAllTapped:homeRemoved:)();
}

uint64_t FMIPSeparationEvent.addSafeLocationTapped.setter()
{
  return FMIPSeparationEvent.addSafeLocationTapped.setter();
}

uint64_t type metadata accessor for FMIPSeparationEvent()
{
  return type metadata accessor for FMIPSeparationEvent();
}

uint64_t FMIPShareItemAction.init(item:handles:)()
{
  return FMIPShareItemAction.init(item:handles:)();
}

uint64_t type metadata accessor for FMIPShareItemAction()
{
  return type metadata accessor for FMIPShareItemAction();
}

uint64_t FMIPBeaconShareState.baseState.getter()
{
  return FMIPBeaconShareState.baseState.getter();
}

uint64_t static FMIPBeaconShareState.== infix(_:_:)()
{
  return static FMIPBeaconShareState.== infix(_:_:)();
}

uint64_t FMIPBeaconShareState.isActive.getter()
{
  return FMIPBeaconShareState.isActive.getter();
}

uint64_t type metadata accessor for FMIPBeaconShareState()
{
  return type metadata accessor for FMIPBeaconShareState();
}

uint64_t FMIPDeviceImageCache.init(converter:)()
{
  return FMIPDeviceImageCache.init(converter:)();
}

uint64_t FMIPDeviceImageCache.deinit()
{
  return FMIPDeviceImageCache.deinit();
}

uint64_t FMIPIgnoreItemAction.init(unknownItem:until:)()
{
  return FMIPIgnoreItemAction.init(unknownItem:until:)();
}

uint64_t type metadata accessor for FMIPIgnoreItemAction()
{
  return type metadata accessor for FMIPIgnoreItemAction();
}

uint64_t FMIPItemActionStatus.isActionSuccessful.getter()
{
  return FMIPItemActionStatus.isActionSuccessful.getter();
}

uint64_t type metadata accessor for FMIPItemActionStatus()
{
  return type metadata accessor for FMIPItemActionStatus();
}

uint64_t type metadata accessor for FMIPItemPairingState()
{
  return type metadata accessor for FMIPItemPairingState();
}

uint64_t type metadata accessor for FMIPManagerSubsystem()
{
  return type metadata accessor for FMIPManagerSubsystem();
}

uint64_t type metadata accessor for FMIPNotifyActionType()
{
  return type metadata accessor for FMIPNotifyActionType();
}

uint64_t FMIPNotifyItemAction.init(item:type:state:)()
{
  return FMIPNotifyItemAction.init(item:type:state:)();
}

uint64_t type metadata accessor for FMIPNotifyItemAction()
{
  return type metadata accessor for FMIPNotifyItemAction();
}

uint64_t type metadata accessor for FMIPRangingEventType()
{
  return type metadata accessor for FMIPRangingEventType();
}

uint64_t FMIPRemoveItemAction.init(item:forced:)()
{
  return FMIPRemoveItemAction.init(item:forced:)();
}

uint64_t type metadata accessor for FMIPRemoveItemAction()
{
  return type metadata accessor for FMIPRemoveItemAction();
}

uint64_t FMIPSafeLocationType.rawValue.getter()
{
  return FMIPSafeLocationType.rawValue.getter();
}

uint64_t type metadata accessor for FMIPSafeLocationType()
{
  return type metadata accessor for FMIPSafeLocationType();
}

uint64_t type metadata accessor for FMIPUTAlertSheetType()
{
  return type metadata accessor for FMIPUTAlertSheetType();
}

uint64_t FMIPAcceptShareAction.init(shareIdentifier:)()
{
  return FMIPAcceptShareAction.init(shareIdentifier:)();
}

uint64_t type metadata accessor for FMIPAcceptShareAction()
{
  return type metadata accessor for FMIPAcceptShareAction();
}

uint64_t type metadata accessor for FMIPAuthEventResponse()
{
  return type metadata accessor for FMIPAuthEventResponse();
}

uint64_t FMIPCancelEraseAction.init(device:)()
{
  return FMIPCancelEraseAction.init(device:)();
}

uint64_t type metadata accessor for FMIPCancelEraseAction()
{
  return type metadata accessor for FMIPCancelEraseAction();
}

uint64_t type metadata accessor for FMIPItemBatteryStatus()
{
  return type metadata accessor for FMIPItemBatteryStatus();
}

uint64_t type metadata accessor for FMIPItemSharingAction()
{
  return type metadata accessor for FMIPItemSharingAction();
}

uint64_t type metadata accessor for FMIPPlaySoundChannels()
{
  return type metadata accessor for FMIPPlaySoundChannels();
}

uint64_t FMIPPlaySoundMetadata.alertTitle.getter()
{
  return FMIPPlaySoundMetadata.alertTitle.getter();
}

uint64_t FMIPPlaySoundMetadata.cancelButtonTitle.getter()
{
  return FMIPPlaySoundMetadata.cancelButtonTitle.getter();
}

uint64_t FMIPPlaySoundMetadata.continueButtonTitle.getter()
{
  return FMIPPlaySoundMetadata.continueButtonTitle.getter();
}

uint64_t FMIPPlaySoundMetadata.status.getter()
{
  return FMIPPlaySoundMetadata.status.getter();
}

uint64_t FMIPPlaySoundMetadata.alertText.getter()
{
  return FMIPPlaySoundMetadata.alertText.getter();
}

uint64_t FMIPPlaySoundMetadata.timestamp.getter()
{
  return FMIPPlaySoundMetadata.timestamp.getter();
}

uint64_t type metadata accessor for FMIPPlaySoundMetadata()
{
  return type metadata accessor for FMIPPlaySoundMetadata();
}

uint64_t FMIPPlayUTSoundAction.init(unknownItem:context:)()
{
  return FMIPPlayUTSoundAction.init(unknownItem:context:)();
}

uint64_t type metadata accessor for FMIPPlayUTSoundAction()
{
  return type metadata accessor for FMIPPlayUTSoundAction();
}

uint64_t FMIPRangingParameters.inBTRangeDistanceInMeters.getter()
{
  return FMIPRangingParameters.inBTRangeDistanceInMeters.getter();
}

uint64_t FMIPRangingParameters.init()()
{
  return FMIPRangingParameters.init()();
}

uint64_t type metadata accessor for FMIPRangingParameters()
{
  return type metadata accessor for FMIPRangingParameters();
}

uint64_t FMIPStopSharingAction.init(beaconIdentifier:force:isDelegated:)()
{
  return FMIPStopSharingAction.init(beaconIdentifier:force:isDelegated:)();
}

uint64_t FMIPStopSharingAction.init(beaconIdentifier:force:)()
{
  return FMIPStopSharingAction.init(beaconIdentifier:force:)();
}

uint64_t type metadata accessor for FMIPStopSharingAction()
{
  return type metadata accessor for FMIPStopSharingAction();
}

uint64_t FMIPDeclineShareAction.init(shareIdentifier:)()
{
  return FMIPDeclineShareAction.init(shareIdentifier:)();
}

uint64_t type metadata accessor for FMIPDeclineShareAction()
{
  return type metadata accessor for FMIPDeclineShareAction();
}

uint64_t type metadata accessor for FMIPDeviceImageVariant()
{
  return type metadata accessor for FMIPDeviceImageVariant();
}

uint64_t FMIPHistoricalLocation.location.getter()
{
  return FMIPHistoricalLocation.location.getter();
}

uint64_t type metadata accessor for FMIPHistoricalLocation()
{
  return type metadata accessor for FMIPHistoricalLocation();
}

uint64_t FMIPLostModeItemAction.init(item:message:phoneNumber:email:trackingEnabled:emailUpdatesEnabled:)()
{
  return FMIPLostModeItemAction.init(item:message:phoneNumber:email:trackingEnabled:emailUpdatesEnabled:)();
}

uint64_t type metadata accessor for FMIPLostModeItemAction()
{
  return type metadata accessor for FMIPLostModeItemAction();
}

uint64_t FMIPPeopleFindingEvent.withinNearbyRange.setter()
{
  return FMIPPeopleFindingEvent.withinNearbyRange.setter();
}

uint64_t FMIPPeopleFindingEvent.startedDiscovering.setter()
{
  return FMIPPeopleFindingEvent.startedDiscovering.setter();
}

uint64_t FMIPPeopleFindingEvent.availabilityLatency.setter()
{
  return FMIPPeopleFindingEvent.availabilityLatency.setter();
}

uint64_t FMIPPeopleFindingEvent.findButtonAvailable.setter()
{
  return FMIPPeopleFindingEvent.findButtonAvailable.setter();
}

uint64_t FMIPPeopleFindingEvent.init(hasToken:findButtonAvailable:availabilityLatency:withinNearbyRange:startedDiscovering:)()
{
  return FMIPPeopleFindingEvent.init(hasToken:findButtonAvailable:availabilityLatency:withinNearbyRange:startedDiscovering:)();
}

uint64_t FMIPPeopleFindingEvent.hasToken.setter()
{
  return FMIPPeopleFindingEvent.hasToken.setter();
}

uint64_t type metadata accessor for FMIPPeopleFindingEvent()
{
  return type metadata accessor for FMIPPeopleFindingEvent();
}

uint64_t FMIPRemoveDeviceAction.init(device:)()
{
  return FMIPRemoveDeviceAction.init(device:)();
}

uint64_t type metadata accessor for FMIPRemoveDeviceAction()
{
  return type metadata accessor for FMIPRemoveDeviceAction();
}

uint64_t FMIPRepairDeviceAction.init(device:)()
{
  return FMIPRepairDeviceAction.init(device:)();
}

uint64_t type metadata accessor for FMIPRepairDeviceAction()
{
  return type metadata accessor for FMIPRepairDeviceAction();
}

uint64_t FMIPRequestShareAction.init(beaconIdentifier:)()
{
  return FMIPRequestShareAction.init(beaconIdentifier:)();
}

uint64_t type metadata accessor for FMIPRequestShareAction()
{
  return type metadata accessor for FMIPRequestShareAction();
}

uint64_t FMIPSeparationLocation.with(address:)()
{
  return FMIPSeparationLocation.with(address:)();
}

uint64_t FMIPSeparationLocation.address.getter()
{
  return FMIPSeparationLocation.address.getter();
}

uint64_t FMIPSeparationLocation.init(location:address:timestamp:)()
{
  return FMIPSeparationLocation.init(location:address:timestamp:)();
}

uint64_t type metadata accessor for FMIPSeparationLocation()
{
  return type metadata accessor for FMIPSeparationLocation();
}

uint64_t FMIPShowLocationSource.getter()
{
  return FMIPShowLocationSource.getter();
}

uint64_t type metadata accessor for FMIPUTAlertProductType()
{
  return type metadata accessor for FMIPUTAlertProductType();
}

uint64_t type metadata accessor for FMIPAnalyticsActionType()
{
  return type metadata accessor for FMIPAnalyticsActionType();
}

uint64_t FMIPBeaconSharingLimits.maxCircleMembers.getter()
{
  return FMIPBeaconSharingLimits.maxCircleMembers.getter();
}

uint64_t FMIPBeaconSharingLimits.maxDelegatedShares.getter()
{
  return FMIPBeaconSharingLimits.maxDelegatedShares.getter();
}

uint64_t static FMIPBeaconSharingLimits.default.getter()
{
  return static FMIPBeaconSharingLimits.default.getter();
}

uint64_t type metadata accessor for FMIPBeaconSharingLimits()
{
  return type metadata accessor for FMIPBeaconSharingLimits();
}

uint64_t FMIPDiscoveredAccessory.identifier.getter()
{
  return FMIPDiscoveredAccessory.identifier.getter();
}

uint64_t FMIPDiscoveredAccessory.defaultRole.getter()
{
  return FMIPDiscoveredAccessory.defaultRole.getter();
}

uint64_t FMIPDiscoveredAccessory.displayName.getter()
{
  return FMIPDiscoveredAccessory.displayName.getter();
}

uint64_t FMIPDiscoveredAccessory.capabilities.getter()
{
  return FMIPDiscoveredAccessory.capabilities.getter();
}

uint64_t FMIPDiscoveredAccessory.productInformation.getter()
{
  return FMIPDiscoveredAccessory.productInformation.getter();
}

uint64_t FMIPDiscoveredAccessory.isEligibleForPairing.getter()
{
  return FMIPDiscoveredAccessory.isEligibleForPairing.getter();
}

uint64_t FMIPDiscoveredAccessory.batteryReplacementURL.getter()
{
  return FMIPDiscoveredAccessory.batteryReplacementURL.getter();
}

uint64_t type metadata accessor for FMIPDiscoveredAccessory()
{
  return type metadata accessor for FMIPDiscoveredAccessory();
}

uint64_t FMIPMapInteractionEvent.init(mapPOITapped:mapPOIOpenInMaps:)()
{
  return FMIPMapInteractionEvent.init(mapPOITapped:mapPOIOpenInMaps:)();
}

uint64_t type metadata accessor for FMIPMapInteractionEvent()
{
  return type metadata accessor for FMIPMapInteractionEvent();
}

uint64_t FMIPPlaySoundItemAction.init(item:context:)()
{
  return FMIPPlaySoundItemAction.init(item:context:)();
}

uint64_t type metadata accessor for FMIPPlaySoundItemAction()
{
  return type metadata accessor for FMIPPlaySoundItemAction();
}

uint64_t FMIPWithdrawShareAction.init(shareIdentifier:)()
{
  return FMIPWithdrawShareAction.init(shareIdentifier:)();
}

uint64_t type metadata accessor for FMIPWithdrawShareAction()
{
  return type metadata accessor for FMIPWithdrawShareAction();
}

uint64_t type metadata accessor for FMIPAirPodsPlaySoundType()
{
  return type metadata accessor for FMIPAirPodsPlaySoundType();
}

uint64_t FMIPAnalyticsProductType.init(unknownItem:)()
{
  return FMIPAnalyticsProductType.init(unknownItem:)();
}

uint64_t FMIPAnalyticsProductType.init(item:)()
{
  return FMIPAnalyticsProductType.init(item:)();
}

uint64_t FMIPAnalyticsProductType.init(device:)()
{
  return FMIPAnalyticsProductType.init(device:)();
}

uint64_t type metadata accessor for FMIPAnalyticsProductType()
{
  return type metadata accessor for FMIPAnalyticsProductType();
}

uint64_t FMIPFirmwareUpdateAction.init(item:updateInitiated:)()
{
  return FMIPFirmwareUpdateAction.init(item:updateInitiated:)();
}

uint64_t type metadata accessor for FMIPFirmwareUpdateAction()
{
  return type metadata accessor for FMIPFirmwareUpdateAction();
}

uint64_t FMIPItemLostModeMetadata.ownerNumber.getter()
{
  return FMIPItemLostModeMetadata.ownerNumber.getter();
}

uint64_t FMIPItemLostModeMetadata.email.getter()
{
  return FMIPItemLostModeMetadata.email.getter();
}

uint64_t FMIPItemLostModeMetadata.message.getter()
{
  return FMIPItemLostModeMetadata.message.getter();
}

uint64_t FMIPItemLostModeMetadata.timestamp.getter()
{
  return FMIPItemLostModeMetadata.timestamp.getter();
}

uint64_t type metadata accessor for FMIPItemLostModeMetadata()
{
  return type metadata accessor for FMIPItemLostModeMetadata();
}

uint64_t FMIPManagerConfiguration.preferredLocale.getter()
{
  return FMIPManagerConfiguration.preferredLocale.getter();
}

uint64_t FMIPManagerConfiguration.__allocating_init(enabledSubsystems:preferredLocale:authenticationUIProvider:snapshotHandlers:)()
{
  return FMIPManagerConfiguration.__allocating_init(enabledSubsystems:preferredLocale:authenticationUIProvider:snapshotHandlers:)();
}

uint64_t FMIPManagerConfiguration.enabledSubsystems.getter()
{
  return FMIPManagerConfiguration.enabledSubsystems.getter();
}

uint64_t static FMIPManagerConfiguration.default.getter()
{
  return static FMIPManagerConfiguration.default.getter();
}

uint64_t type metadata accessor for FMIPManagerConfiguration()
{
  return type metadata accessor for FMIPManagerConfiguration();
}

uint64_t FMIPNoItemsKBArticleLink.getter()
{
  return FMIPNoItemsKBArticleLink.getter();
}

uint64_t type metadata accessor for FMIPNotifyItemActionType()
{
  return type metadata accessor for FMIPNotifyItemActionType();
}

uint64_t FMIPAirPodsPlaySoundEvent.init(soundEventType:includedCase:includedLeftBud:includedRightBud:onlinePlaySoundAttempted:onlinePlaySoundSuccess:onlinePlaySoundError:offlinePlaySoundAttempted:offlinePlaySoundSuccess:offlinePlaySoundError:userShownPlayingState:userShownFinishedPlayingState:)()
{
  return FMIPAirPodsPlaySoundEvent.init(soundEventType:includedCase:includedLeftBud:includedRightBud:onlinePlaySoundAttempted:onlinePlaySoundSuccess:onlinePlaySoundError:offlinePlaySoundAttempted:offlinePlaySoundSuccess:offlinePlaySoundError:userShownPlayingState:userShownFinishedPlayingState:)();
}

uint64_t FMIPAirPodsPlaySoundEvent.onlinePlaySoundError.setter()
{
  return FMIPAirPodsPlaySoundEvent.onlinePlaySoundError.setter();
}

uint64_t FMIPAirPodsPlaySoundEvent.onlinePlaySoundSuccess.setter()
{
  return FMIPAirPodsPlaySoundEvent.onlinePlaySoundSuccess.setter();
}

uint64_t FMIPAirPodsPlaySoundEvent.onlinePlaySoundAttempted.setter()
{
  return FMIPAirPodsPlaySoundEvent.onlinePlaySoundAttempted.setter();
}

uint64_t FMIPAirPodsPlaySoundEvent.offlinePlaySoundSuccess.setter()
{
  return FMIPAirPodsPlaySoundEvent.offlinePlaySoundSuccess.setter();
}

uint64_t FMIPAirPodsPlaySoundEvent.offlinePlaySoundAttempted.setter()
{
  return FMIPAirPodsPlaySoundEvent.offlinePlaySoundAttempted.setter();
}

uint64_t FMIPAirPodsPlaySoundEvent.userShownPlayingState.setter()
{
  return FMIPAirPodsPlaySoundEvent.userShownPlayingState.setter();
}

uint64_t type metadata accessor for FMIPAirPodsPlaySoundEvent()
{
  return type metadata accessor for FMIPAirPodsPlaySoundEvent();
}

uint64_t type metadata accessor for FMIPAnalyticsOwnerContext()
{
  return type metadata accessor for FMIPAnalyticsOwnerContext();
}

uint64_t dispatch thunk of FMIPAnyProductInformation.manufacturerName.getter()
{
  return dispatch thunk of FMIPAnyProductInformation.manufacturerName.getter();
}

uint64_t dispatch thunk of FMIPAnyProductInformation.productIdentifier.getter()
{
  return dispatch thunk of FMIPAnyProductInformation.productIdentifier.getter();
}

uint64_t dispatch thunk of FMIPAnyProductInformation.appBundleIdentifier.getter()
{
  return dispatch thunk of FMIPAnyProductInformation.appBundleIdentifier.getter();
}

uint64_t dispatch thunk of FMIPAnyProductInformation.modelName.getter()
{
  return dispatch thunk of FMIPAnyProductInformation.modelName.getter();
}

uint64_t FMIPItemImageCacheRequest.init(emoji:size:scale:backgroundColor:osVersion:)()
{
  return FMIPItemImageCacheRequest.init(emoji:size:scale:backgroundColor:osVersion:)();
}

uint64_t FMIPItemImageCacheRequest.emoji.getter()
{
  return FMIPItemImageCacheRequest.emoji.getter();
}

uint64_t type metadata accessor for FMIPItemImageCacheRequest()
{
  return type metadata accessor for FMIPItemImageCacheRequest();
}

uint64_t FMIPPlaySoundDeviceAction.soundMethod.getter()
{
  return FMIPPlaySoundDeviceAction.soundMethod.getter();
}

uint64_t FMIPPlaySoundDeviceAction.safetyWarningConfirmed.getter()
{
  return FMIPPlaySoundDeviceAction.safetyWarningConfirmed.getter();
}

uint64_t FMIPPlaySoundDeviceAction.soundQueueingConfirmed.getter()
{
  return FMIPPlaySoundDeviceAction.soundQueueingConfirmed.getter();
}

uint64_t FMIPPlaySoundDeviceAction.init(device:channels:safetyWarningConfirmed:soundQueueingConfirmed:soundMethod:)()
{
  return FMIPPlaySoundDeviceAction.init(device:channels:safetyWarningConfirmed:soundQueueingConfirmed:soundMethod:)();
}

uint64_t FMIPPlaySoundDeviceAction.channels.getter()
{
  return FMIPPlaySoundDeviceAction.channels.getter();
}

uint64_t FMIPPlaySoundDeviceAction.issueDate.getter()
{
  return FMIPPlaySoundDeviceAction.issueDate.getter();
}

uint64_t type metadata accessor for FMIPPlaySoundDeviceAction()
{
  return type metadata accessor for FMIPPlaySoundDeviceAction();
}

uint64_t FMIPRemoveItemGroupAction.init(itemGroup:forced:)()
{
  return FMIPRemoveItemGroupAction.init(itemGroup:forced:)();
}

uint64_t type metadata accessor for FMIPRemoveItemGroupAction()
{
  return type metadata accessor for FMIPRemoveItemGroupAction();
}

uint64_t FMIPReverseGeocodingCache.init(preferredLocale:)()
{
  return FMIPReverseGeocodingCache.init(preferredLocale:)();
}

uint64_t dispatch thunk of FMIPReverseGeocodingCache.address(for:completion:)()
{
  return dispatch thunk of FMIPReverseGeocodingCache.address(for:completion:)();
}

{
  return dispatch thunk of FMIPReverseGeocodingCache.address(for:completion:)();
}

uint64_t type metadata accessor for FMIPReverseGeocodingCache()
{
  return type metadata accessor for FMIPReverseGeocodingCache();
}

uint64_t type metadata accessor for FMIPUTAlertCompletionType()
{
  return type metadata accessor for FMIPUTAlertCompletionType();
}

uint64_t type metadata accessor for FMIPUnknownItemAlertState()
{
  return type metadata accessor for FMIPUnknownItemAlertState();
}

uint64_t FMIPUnknownItemUTMetadata.disableInfo.getter()
{
  return FMIPUnknownItemUTMetadata.disableInfo.getter();
}

uint64_t FMIPUnknownItemUTMetadata.learnMoreInfo.getter()
{
  return FMIPUnknownItemUTMetadata.learnMoreInfo.getter();
}

uint64_t type metadata accessor for FMIPUnknownItemUTMetadata()
{
  return type metadata accessor for FMIPUnknownItemUTMetadata();
}

uint64_t FMIPDefaultOwnerIdentifier.getter()
{
  return FMIPDefaultOwnerIdentifier.getter();
}

uint64_t FMIPDeviceLostModeMetadata.canStopLostMode.getter()
{
  return FMIPDeviceLostModeMetadata.canStopLostMode.getter();
}

uint64_t FMIPDeviceLostModeMetadata.ownerNumber.getter()
{
  return FMIPDeviceLostModeMetadata.ownerNumber.getter();
}

uint64_t FMIPDeviceLostModeMetadata.isEmailUpdatesEnabled.getter()
{
  return FMIPDeviceLostModeMetadata.isEmailUpdatesEnabled.getter();
}

uint64_t FMIPDeviceLostModeMetadata.email.getter()
{
  return FMIPDeviceLostModeMetadata.email.getter();
}

uint64_t FMIPDeviceLostModeMetadata.status.getter()
{
  return FMIPDeviceLostModeMetadata.status.getter();
}

uint64_t FMIPDeviceLostModeMetadata.message.getter()
{
  return FMIPDeviceLostModeMetadata.message.getter();
}

uint64_t FMIPDeviceLostModeMetadata.timestamp.getter()
{
  return FMIPDeviceLostModeMetadata.timestamp.getter();
}

uint64_t type metadata accessor for FMIPDeviceLostModeMetadata()
{
  return type metadata accessor for FMIPDeviceLostModeMetadata();
}

uint64_t type metadata accessor for FMIPUTAlertObservationType()
{
  return type metadata accessor for FMIPUTAlertObservationType();
}

uint64_t type metadata accessor for FMIPZeusProductInformation()
{
  return type metadata accessor for FMIPZeusProductInformation();
}

uint64_t static FMIPDeviceImageCacheRequest.allRequests(for:scale:)()
{
  return static FMIPDeviceImageCacheRequest.allRequests(for:scale:)();
}

uint64_t FMIPDeviceImageCacheRequest.debugDescription.getter()
{
  return FMIPDeviceImageCacheRequest.debugDescription.getter();
}

uint64_t FMIPDeviceImageCacheRequest.init(class:model:color:size:variant:scale:)()
{
  return FMIPDeviceImageCacheRequest.init(class:model:color:size:variant:scale:)();
}

uint64_t FMIPDeviceImageCacheRequest.class.getter()
{
  return FMIPDeviceImageCacheRequest.class.getter();
}

uint64_t FMIPDeviceImageCacheRequest.color.getter()
{
  return FMIPDeviceImageCacheRequest.color.getter();
}

uint64_t FMIPDeviceImageCacheRequest.model.getter()
{
  return FMIPDeviceImageCacheRequest.model.getter();
}

uint64_t FMIPDeviceImageCacheRequest.init(device:size:scale:)()
{
  return FMIPDeviceImageCacheRequest.init(device:size:scale:)();
}

uint64_t FMIPDeviceImageCacheRequest.init(itemParts:device:size:scale:)()
{
  return FMIPDeviceImageCacheRequest.init(itemParts:device:size:scale:)();
}

uint64_t type metadata accessor for FMIPDeviceImageCacheRequest()
{
  return type metadata accessor for FMIPDeviceImageCacheRequest();
}

uint64_t static FMIPDeviceConnectedStateType.== infix(_:_:)()
{
  return static FMIPDeviceConnectedStateType.== infix(_:_:)();
}

uint64_t type metadata accessor for FMIPDeviceConnectedStateType()
{
  return type metadata accessor for FMIPDeviceConnectedStateType();
}

uint64_t FMIPShowContactDetailsAction.init(device:phoneNumber:enabled:)()
{
  return FMIPShowContactDetailsAction.init(device:phoneNumber:enabled:)();
}

uint64_t type metadata accessor for FMIPShowContactDetailsAction()
{
  return type metadata accessor for FMIPShowContactDetailsAction();
}

uint64_t type metadata accessor for FMFSatelliteEducationFlowType()
{
  return type metadata accessor for FMFSatelliteEducationFlowType();
}

uint64_t type metadata accessor for FMFSatelliteLocationTapSource()
{
  return type metadata accessor for FMFSatelliteLocationTapSource();
}

uint64_t type metadata accessor for FMIPHawkeyeProductInformation.AssetScale()
{
  return type metadata accessor for FMIPHawkeyeProductInformation.AssetScale();
}

uint64_t FMIPHawkeyeProductInformation.identifier.getter()
{
  return FMIPHawkeyeProductInformation.identifier.getter();
}

uint64_t FMIPHawkeyeProductInformation.productIdentifier.getter()
{
  return FMIPHawkeyeProductInformation.productIdentifier.getter();
}

uint64_t FMIPHawkeyeProductInformation.requiresAudioSafetyAlert.getter()
{
  return FMIPHawkeyeProductInformation.requiresAudioSafetyAlert.getter();
}

uint64_t FMIPHawkeyeProductInformation.requiresAdditionalConnectionTime.getter()
{
  return FMIPHawkeyeProductInformation.requiresAdditionalConnectionTime.getter();
}

uint64_t FMIPHawkeyeProductInformation.assetURL(for:scale:)()
{
  return FMIPHawkeyeProductInformation.assetURL(for:scale:)();
}

uint64_t static FMIPHawkeyeProductInformation.AssetType.== infix(_:_:)()
{
  return static FMIPHawkeyeProductInformation.AssetType.== infix(_:_:)();
}

uint64_t type metadata accessor for FMIPHawkeyeProductInformation.AssetType()
{
  return type metadata accessor for FMIPHawkeyeProductInformation.AssetType();
}

uint64_t type metadata accessor for FMIPHawkeyeProductInformation()
{
  return type metadata accessor for FMIPHawkeyeProductInformation();
}

uint64_t static FMIPItemActionControllerError.== infix(_:_:)()
{
  return static FMIPItemActionControllerError.== infix(_:_:)();
}

uint64_t type metadata accessor for FMIPItemActionControllerError()
{
  return type metadata accessor for FMIPItemActionControllerError();
}

uint64_t type metadata accessor for FMIPSafeLocationApprovalState()
{
  return type metadata accessor for FMIPSafeLocationApprovalState();
}

uint64_t FMIPSeparationMonitoringState.allowsSeparationMonitoringConfiguration.getter()
{
  return FMIPSeparationMonitoringState.allowsSeparationMonitoringConfiguration.getter();
}

uint64_t FMIPSeparationMonitoringState.allowsSeparationMonitoringUI.getter()
{
  return FMIPSeparationMonitoringState.allowsSeparationMonitoringUI.getter();
}

uint64_t type metadata accessor for FMIPSeparationMonitoringState()
{
  return type metadata accessor for FMIPSeparationMonitoringState();
}

uint64_t FMIPEditSafeLocationItemAction.init(safeLocation:)()
{
  return FMIPEditSafeLocationItemAction.init(safeLocation:)();
}

uint64_t type metadata accessor for FMIPEditSafeLocationItemAction()
{
  return type metadata accessor for FMIPEditSafeLocationItemAction();
}

uint64_t type metadata accessor for FMIPUnknownItemObservationType()
{
  return type metadata accessor for FMIPUnknownItemObservationType();
}

uint64_t FMIPUnknownItemProductMetadata.disableURL.getter()
{
  return FMIPUnknownItemProductMetadata.disableURL.getter();
}

uint64_t FMIPUnknownItemProductMetadata.heatzonePercentX.getter()
{
  return FMIPUnknownItemProductMetadata.heatzonePercentX.getter();
}

uint64_t FMIPUnknownItemProductMetadata.heatzonePercentY.getter()
{
  return FMIPUnknownItemProductMetadata.heatzonePercentY.getter();
}

uint64_t FMIPUnknownItemProductMetadata.moreDescriptionBulletPoints.getter()
{
  return FMIPUnknownItemProductMetadata.moreDescriptionBulletPoints.getter();
}

uint64_t FMIPUnknownItemProductMetadata.image.getter()
{
  return FMIPUnknownItemProductMetadata.image.getter();
}

uint64_t FMIPUnknownItemProductMetadata.title.getter()
{
  return FMIPUnknownItemProductMetadata.title.getter();
}

uint64_t type metadata accessor for FMIPUnknownItemProductMetadata()
{
  return type metadata accessor for FMIPUnknownItemProductMetadata();
}

uint64_t FMFSatelliteLocationUpdateEvent.sendLocationTapped.setter()
{
  return FMFSatelliteLocationUpdateEvent.sendLocationTapped.setter();
}

uint64_t FMFSatelliteLocationUpdateEvent.updateFlowCanceled.setter()
{
  return FMFSatelliteLocationUpdateEvent.updateFlowCanceled.setter();
}

uint64_t FMFSatelliteLocationUpdateEvent.updateFlowLSOffOkPressed.setter()
{
  return FMFSatelliteLocationUpdateEvent.updateFlowLSOffOkPressed.setter();
}

uint64_t FMFSatelliteLocationUpdateEvent.updateFlowLSOffGoToSettingsPressed.setter()
{
  return FMFSatelliteLocationUpdateEvent.updateFlowLSOffGoToSettingsPressed.setter();
}

uint64_t FMFSatelliteLocationUpdateEvent.init(flowType:educationFlowInitiatedTapSource:sendLocationTapped:updateFlowBlockingCondition:updateFlowOffline:updateFlowCanceled:updateFlowLSOffGoToSettingsPressed:updateFlowLSOffOkPressed:)()
{
  return FMFSatelliteLocationUpdateEvent.init(flowType:educationFlowInitiatedTapSource:sendLocationTapped:updateFlowBlockingCondition:updateFlowOffline:updateFlowCanceled:updateFlowLSOffGoToSettingsPressed:updateFlowLSOffOkPressed:)();
}

uint64_t type metadata accessor for FMFSatelliteLocationUpdateEvent()
{
  return type metadata accessor for FMFSatelliteLocationUpdateEvent();
}

uint64_t FMIPFetchEncryptedPayloadAction.init(unknownItem:)()
{
  return FMIPFetchEncryptedPayloadAction.init(unknownItem:)();
}

uint64_t type metadata accessor for FMIPFetchEncryptedPayloadAction()
{
  return type metadata accessor for FMIPFetchEncryptedPayloadAction();
}

uint64_t FMIPNotificationAuthLaunchEvent.init(findMyNotificationAuthStatus:utAlertAuthStatus:)()
{
  return FMIPNotificationAuthLaunchEvent.init(findMyNotificationAuthStatus:utAlertAuthStatus:)();
}

uint64_t type metadata accessor for FMIPNotificationAuthLaunchEvent()
{
  return type metadata accessor for FMIPNotificationAuthLaunchEvent();
}

uint64_t FMIPNotificationAuthPromptEvent.init(authEventResponse:)()
{
  return FMIPNotificationAuthPromptEvent.init(authEventResponse:)();
}

uint64_t type metadata accessor for FMIPNotificationAuthPromptEvent()
{
  return type metadata accessor for FMIPNotificationAuthPromptEvent();
}

uint64_t FMIPStopDelegatedURLShareAction.init(beaconIdentifier:)()
{
  return FMIPStopDelegatedURLShareAction.init(beaconIdentifier:)();
}

uint64_t type metadata accessor for FMIPStopDelegatedURLShareAction()
{
  return type metadata accessor for FMIPStopDelegatedURLShareAction();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryController.stopDiscovery(localFindable:completion:)()
{
  return dispatch thunk of FMIPAccessoryDiscoveryController.stopDiscovery(localFindable:completion:)();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryController.startDiscovery(localFindable:completion:)()
{
  return dispatch thunk of FMIPAccessoryDiscoveryController.startDiscovery(localFindable:completion:)();
}

uint64_t FMIPAccessoryDiscoveryController.init(discoveryType:)()
{
  return FMIPAccessoryDiscoveryController.init(discoveryType:)();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryController.finalizePairing(accessory:name:emoji:completion:)()
{
  return dispatch thunk of FMIPAccessoryDiscoveryController.finalizePairing(accessory:name:emoji:completion:)();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryController.initiatePairing(accessory:completion:)()
{
  return dispatch thunk of FMIPAccessoryDiscoveryController.initiatePairing(accessory:completion:)();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryController.invalidatePairing(accessory:completion:)()
{
  return dispatch thunk of FMIPAccessoryDiscoveryController.invalidatePairing(accessory:completion:)();
}

uint64_t FMIPAccessoryDiscoveryController.Callbacks.errorHandler.setter()
{
  return FMIPAccessoryDiscoveryController.Callbacks.errorHandler.setter();
}

uint64_t FMIPAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback.setter()
{
  return FMIPAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback.setter();
}

uint64_t type metadata accessor for FMIPAccessoryDiscoveryController.Callbacks()
{
  return type metadata accessor for FMIPAccessoryDiscoveryController.Callbacks();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryController.accessory(with:)()
{
  return dispatch thunk of FMIPAccessoryDiscoveryController.accessory(with:)();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryController.callbacks.modify()
{
  return dispatch thunk of FMIPAccessoryDiscoveryController.callbacks.modify();
}

uint64_t type metadata accessor for FMIPAccessoryDiscoveryController()
{
  return type metadata accessor for FMIPAccessoryDiscoveryController();
}

uint64_t FMIPDefaultBeaconOwnerIdentifier.getter()
{
  return FMIPDefaultBeaconOwnerIdentifier.getter();
}

uint64_t FMIPShowCrowdSourcedLocationOnly.getter()
{
  return FMIPShowCrowdSourcedLocationOnly.getter();
}

uint64_t FMIPCreateDelegatedURLShareAction.init(beaconIdentifier:)()
{
  return FMIPCreateDelegatedURLShareAction.init(beaconIdentifier:)();
}

uint64_t type metadata accessor for FMIPCreateDelegatedURLShareAction()
{
  return type metadata accessor for FMIPCreateDelegatedURLShareAction();
}

uint64_t type metadata accessor for FMFSatelliteUpdateBlockingCondition()
{
  return type metadata accessor for FMFSatelliteUpdateBlockingCondition();
}

uint64_t FMIPOldLocationAgeThresholdInSeconds.getter()
{
  return FMIPOldLocationAgeThresholdInSeconds.getter();
}

uint64_t FMFSatelliteLocationNotificationEvent.init(notificationPresentedToUser:notificationTapped:)()
{
  return FMFSatelliteLocationNotificationEvent.init(notificationPresentedToUser:notificationTapped:)();
}

uint64_t type metadata accessor for FMFSatelliteLocationNotificationEvent()
{
  return type metadata accessor for FMFSatelliteLocationNotificationEvent();
}

uint64_t FMIPAddMultipleSafeLocationsItemAction.init(beaconUUIDs:location:originalIdentifier:)()
{
  return FMIPAddMultipleSafeLocationsItemAction.init(beaconUUIDs:location:originalIdentifier:)();
}

uint64_t type metadata accessor for FMIPAddMultipleSafeLocationsItemAction()
{
  return type metadata accessor for FMIPAddMultipleSafeLocationsItemAction();
}

uint64_t dispatch thunk of FMIPUnknownAccessoryDiscoveryController.stopDiscovery(completion:)()
{
  return dispatch thunk of FMIPUnknownAccessoryDiscoveryController.stopDiscovery(completion:)();
}

uint64_t dispatch thunk of FMIPUnknownAccessoryDiscoveryController.startDiscovery(completion:)()
{
  return dispatch thunk of FMIPUnknownAccessoryDiscoveryController.startDiscovery(completion:)();
}

uint64_t dispatch thunk of FMIPUnknownAccessoryDiscoveryController.discoveredAccessories.getter()
{
  return dispatch thunk of FMIPUnknownAccessoryDiscoveryController.discoveredAccessories.getter();
}

uint64_t dispatch thunk of FMIPUnknownAccessoryDiscoveryController.initiateFetchEncryptedPayloadForUnknownBeacon(beacon:completion:)()
{
  return dispatch thunk of FMIPUnknownAccessoryDiscoveryController.initiateFetchEncryptedPayloadForUnknownBeacon(beacon:completion:)();
}

uint64_t FMIPUnknownAccessoryDiscoveryController.Callbacks.accessoryDiscoveryFinished.setter()
{
  return FMIPUnknownAccessoryDiscoveryController.Callbacks.accessoryDiscoveryFinished.setter();
}

uint64_t FMIPUnknownAccessoryDiscoveryController.Callbacks.errorHandler.setter()
{
  return FMIPUnknownAccessoryDiscoveryController.Callbacks.errorHandler.setter();
}

uint64_t FMIPUnknownAccessoryDiscoveryController.Callbacks.lostAccessoriesCallback.setter()
{
  return FMIPUnknownAccessoryDiscoveryController.Callbacks.lostAccessoriesCallback.setter();
}

uint64_t FMIPUnknownAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback.setter()
{
  return FMIPUnknownAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback.setter();
}

uint64_t type metadata accessor for FMIPUnknownAccessoryDiscoveryController.Callbacks()
{
  return type metadata accessor for FMIPUnknownAccessoryDiscoveryController.Callbacks();
}

uint64_t dispatch thunk of FMIPUnknownAccessoryDiscoveryController.accessory(with:)()
{
  return dispatch thunk of FMIPUnknownAccessoryDiscoveryController.accessory(with:)();
}

uint64_t dispatch thunk of FMIPUnknownAccessoryDiscoveryController.callbacks.modify()
{
  return dispatch thunk of FMIPUnknownAccessoryDiscoveryController.callbacks.modify();
}

uint64_t FMIPUnknownAccessoryDiscoveryController.init()()
{
  return FMIPUnknownAccessoryDiscoveryController.init()();
}

uint64_t type metadata accessor for FMIPUnknownAccessoryDiscoveryController()
{
  return type metadata accessor for FMIPUnknownAccessoryDiscoveryController();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryControllerProtocol.discoveredAccessories.getter()
{
  return dispatch thunk of FMIPAccessoryDiscoveryControllerProtocol.discoveredAccessories.getter();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryControllerProtocol.callbacks.modify()
{
  return dispatch thunk of FMIPAccessoryDiscoveryControllerProtocol.callbacks.modify();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryControllerCallbacks.lostAccessoriesCallback.setter()
{
  return dispatch thunk of FMIPAccessoryDiscoveryControllerCallbacks.lostAccessoriesCallback.setter();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryControllerCallbacks.discoveredAccessoriesCallback.setter()
{
  return dispatch thunk of FMIPAccessoryDiscoveryControllerCallbacks.discoveredAccessoriesCallback.setter();
}

uint64_t FMIPAssignMultipleSafeLocationsItemAction.init(beaconUUIDs:location:)()
{
  return FMIPAssignMultipleSafeLocationsItemAction.init(beaconUUIDs:location:)();
}

uint64_t type metadata accessor for FMIPAssignMultipleSafeLocationsItemAction()
{
  return type metadata accessor for FMIPAssignMultipleSafeLocationsItemAction();
}

uint64_t FMIPRemoveMultipleSafeLocationItemsAction.init(beaconUUIDs:location:)()
{
  return FMIPRemoveMultipleSafeLocationItemsAction.init(beaconUUIDs:location:)();
}

uint64_t type metadata accessor for FMIPRemoveMultipleSafeLocationItemsAction()
{
  return type metadata accessor for FMIPRemoveMultipleSafeLocationItemsAction();
}

uint64_t FMIPAddSafeLocationToAllSupportedBeaconsAction.init(safeLocation:)()
{
  return FMIPAddSafeLocationToAllSupportedBeaconsAction.init(safeLocation:)();
}

uint64_t type metadata accessor for FMIPAddSafeLocationToAllSupportedBeaconsAction()
{
  return type metadata accessor for FMIPAddSafeLocationToAllSupportedBeaconsAction();
}

uint64_t FMIPAssignSafeLocationToAllSupportedBeaconsAction.init(location:)()
{
  return FMIPAssignSafeLocationToAllSupportedBeaconsAction.init(location:)();
}

uint64_t type metadata accessor for FMIPAssignSafeLocationToAllSupportedBeaconsAction()
{
  return type metadata accessor for FMIPAssignSafeLocationToAllSupportedBeaconsAction();
}

uint64_t FMIPItem.identifier.getter()
{
  return FMIPItem.identifier.getter();
}

uint64_t FMIPItem.productType.getter()
{
  return FMIPItem.productType.getter();
}

uint64_t FMIPItem.capabilities.getter()
{
  return FMIPItem.capabilities.getter();
}

uint64_t FMIPItem.lostMetadata.getter()
{
  return FMIPItem.lostMetadata.getter();
}

uint64_t FMIPItem.serialNumber.getter()
{
  return FMIPItem.serialNumber.getter();
}

uint64_t FMIPItem.batteryStatus.getter()
{
  return FMIPItem.batteryStatus.getter();
}

uint64_t FMIPItem.safeLocations.getter()
{
  return FMIPItem.safeLocations.getter();
}

uint64_t FMIPItem.systemVersion.getter()
{
  return FMIPItem.systemVersion.getter();
}

uint64_t FMIPItem.groupIdentifier.getter()
{
  return FMIPItem.groupIdentifier.getter();
}

uint64_t FMIPItem.primaryItemPart.getter()
{
  return FMIPItem.primaryItemPart.getter();
}

uint64_t FMIPItem.debugDescription.getter()
{
  return FMIPItem.debugDescription.getter();
}

uint64_t FMIPItem.productIdentifier.getter()
{
  return FMIPItem.productIdentifier.getter();
}

uint64_t FMIPItem.isAppleAudioAccessory.getter()
{
  return FMIPItem.isAppleAudioAccessory.getter();
}

Swift::Bool __swiftcall FMIPItem.canEnableNotifyWhenFound()()
{
  return FMIPItem.canEnableNotifyWhenFound()();
}

uint64_t FMIPItem.isFirmwareUpdateMandatory.getter()
{
  return FMIPItem.isFirmwareUpdateMandatory.getter();
}

uint64_t static FMIPItem.== infix(_:_:)()
{
  return static FMIPItem.== infix(_:_:)();
}

uint64_t FMIPItem.name.getter()
{
  return FMIPItem.name.getter();
}

uint64_t FMIPItem.role.getter()
{
  return FMIPItem.role.getter();
}

uint64_t FMIPItem.owner.getter()
{
  return FMIPItem.owner.getter();
}

uint64_t FMIPItem.state.getter()
{
  return FMIPItem.state.getter();
}

uint64_t FMIPItem.address.getter()
{
  return FMIPItem.address.getter();
}

uint64_t FMIPItem.isOwner.getter()
{
  return FMIPItem.isOwner.getter();
}

uint64_t FMIPItem.location.getter()
{
  return FMIPItem.location.getter();
}

uint64_t FMIPItem.partInfo.getter()
{
  return FMIPItem.partInfo.getter();
}

uint64_t FMIPItem.partType.getter()
{
  return FMIPItem.partType.getter();
}

uint64_t type metadata accessor for FMIPItem()
{
  return type metadata accessor for FMIPItem();
}

uint64_t FMIPAlert.okButtonURL.getter()
{
  return FMIPAlert.okButtonURL.getter();
}

uint64_t FMIPAlert.okButtonLabel.getter()
{
  return FMIPAlert.okButtonLabel.getter();
}

uint64_t FMIPAlert.cancelButtonURL.getter()
{
  return FMIPAlert.cancelButtonURL.getter();
}

uint64_t dispatch thunk of FMIPAlert.debugDescription.getter()
{
  return dispatch thunk of FMIPAlert.debugDescription.getter();
}

uint64_t FMIPAlert.cancelButtonLabel.getter()
{
  return FMIPAlert.cancelButtonLabel.getter();
}

uint64_t FMIPAlert.type.getter()
{
  return FMIPAlert.type.getter();
}

uint64_t FMIPAlert.title.getter()
{
  return FMIPAlert.title.getter();
}

uint64_t FMIPAlert.message.getter()
{
  return FMIPAlert.message.getter();
}

uint64_t type metadata accessor for FMIPAlert()
{
  return type metadata accessor for FMIPAlert();
}

uint64_t type metadata accessor for HashAlgorithm()
{
  return type metadata accessor for HashAlgorithm();
}

uint64_t dispatch thunk of HashFunction.update(bufferPointer:)()
{
  return dispatch thunk of HashFunction.update(bufferPointer:)();
}

uint64_t dispatch thunk of HashFunction.finalize()()
{
  return dispatch thunk of HashFunction.finalize()();
}

uint64_t dispatch thunk of HashFunction.init()()
{
  return dispatch thunk of HashFunction.init()();
}

uint64_t Insecure.MD5.finalize()()
{
  return Insecure.MD5.finalize()();
}

uint64_t Insecure.MD5.init()()
{
  return Insecure.MD5.init()();
}

uint64_t type metadata accessor for Insecure.MD5()
{
  return type metadata accessor for Insecure.MD5();
}

uint64_t type metadata accessor for Insecure.MD5Digest()
{
  return type metadata accessor for Insecure.MD5Digest();
}

uint64_t CancellationError.init()()
{
  return CancellationError.init()();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)Dictionary._bridgeToObjectiveC()();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Dictionary.description.getter()
{
  return Dictionary.description.getter();
}

uint64_t Dictionary.debugDescription.getter()
{
  return Dictionary.debugDescription.getter();
}

uint64_t Dictionary.init(dictionaryLiteral:)()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t type metadata accessor for Dictionary()
{
  return type metadata accessor for Dictionary();
}

uint64_t Dictionary.subscript.getter()
{
  return Dictionary.subscript.getter();
}

uint64_t Dictionary.subscript.setter()
{
  return Dictionary.subscript.setter();
}

uint64_t dispatch thunk of Hashable._rawHashValue(seed:)()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t dispatch thunk of Hashable.hash(into:)()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t dispatch thunk of Hashable.hashValue.getter()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

uint64_t BidirectionalCollection<>.starts<A>(with:)()
{
  return BidirectionalCollection<>.starts<A>(with:)();
}

uint64_t BidirectionalCollection<>.joined(separator:)()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t dispatch thunk of static Comparable.< infix(_:_:)()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t dispatch thunk of static Comparable.<= infix(_:_:)()
{
  return dispatch thunk of static Comparable.<= infix(_:_:)();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t String.nilIfEmpty.getter()
{
  return String.nilIfEmpty.getter();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)String._bridgeToObjectiveC()();
}

uint64_t static String.localizedStringWithFormat(_:_:)()
{
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t static String._forceBridgeFromObjectiveC(_:result:)()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t String.data(using:allowLossyConversion:)()
{
  return String.data(using:allowLossyConversion:)();
}

uint64_t String.init(format:arguments:)()
{
  return String.init(format:arguments:)();
}

uint64_t String.init(format:_:)()
{
  return String.init(format:_:)();
}

uint64_t static String.Encoding.utf8.getter()
{
  return static String.Encoding.utf8.getter();
}

uint64_t type metadata accessor for String.Encoding()
{
  return type metadata accessor for String.Encoding();
}

Swift::String __swiftcall String.init(_:)(NSString a1)
{
  uint64_t v1 = String.init(_:)(a1);
  result._object = v2;
  result._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t String.init<A>(describing:)()
{
  return String.init<A>(describing:)();
}

Swift::String __swiftcall String.lowercased()()
{
  uint64_t v0 = String.lowercased()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

Swift::String __swiftcall String.uppercased()()
{
  uint64_t v0 = String.uppercased()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t static String._fromSubstring(_:)()
{
  return static String._fromSubstring(_:)();
}

uint64_t String.removeSubrange(_:)()
{
  return String.removeSubrange(_:)();
}

Swift::Void __swiftcall String.reserveCapacity(_:)(Swift::Int a1)
{
}

uint64_t String.UnicodeScalarView.append(_:)()
{
  return String.UnicodeScalarView.append(_:)();
}

uint64_t static String._uncheckedFromUTF8(_:)()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t String.hash(into:)()
{
  return String.hash(into:)();
}

uint64_t String.Index.init<A>(utf16Offset:in:)()
{
  return String.Index.init<A>(utf16Offset:in:)();
}

uint64_t String.Index.utf16Offset<A>(in:)()
{
  return String.Index.utf16Offset<A>(in:)();
}

uint64_t String.count.getter()
{
  return String.count.getter();
}

uint64_t String.index(_:offsetBy:limitedBy:)()
{
  return String.index(_:offsetBy:limitedBy:)();
}

uint64_t String.append<A>(contentsOf:)()
{
  return String.append<A>(contentsOf:)();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

{
  String.append(_:)(a1._countAndFlagsBits, a1._object);
}

uint64_t String.init(cString:)()
{
  return String.init(cString:)();
}

uint64_t String.isPhoneNumber.getter()
{
  return String.isPhoneNumber.getter();
}

uint64_t String.characterCount.getter()
{
  return String.characterCount.getter();
}

Swift::String __swiftcall String.deletingPrefix(_:)(Swift::String a1)
{
  uint64_t v1 = String.deletingPrefix(_:)(a1._countAndFlagsBits, a1._object);
  result._object = v2;
  result._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t static String.emailPredicate.getter()
{
  return static String.emailPredicate.getter();
}

uint64_t String.isEmail.getter()
{
  return String.isEmail.getter();
}

Swift::String_optional __swiftcall String.Iterator.next()()
{
  uint64_t v0 = String.Iterator.next()();
  result.value._object = v1;
  result.value._uint64_t countAndFlagsBits = v0;
  return result;
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return String.UTF8View._foreignCount()();
}

uint64_t String.UTF8View._foreignIndex(after:)()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t String.UTF8View._foreignIndex(_:offsetBy:)()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t String.UTF8View._foreignDistance(from:to:)()
{
  return String.UTF8View._foreignDistance(from:to:)();
}

uint64_t String.UTF8View._foreignSubscript(position:)()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t String.UTF16View.index(_:offsetBy:)()
{
  return String.UTF16View.index(_:offsetBy:)();
}

Swift::Bool __swiftcall String.hasPrefix(_:)(Swift::String a1)
{
  return String.hasPrefix(_:)(a1._countAndFlagsBits, a1._object);
}

uint64_t String.hashValue.getter()
{
  return String.hashValue.getter();
}

uint64_t String.subscript.getter()
{
  return String.subscript.getter();
}

{
  return String.subscript.getter();
}

uint64_t String.init<A>(_:)()
{
  return String.init<A>(_:)();
}

uint64_t Sequence.formatted<A>(_:)()
{
  return Sequence.formatted<A>(_:)();
}

uint64_t dispatch thunk of Sequence.makeIterator()()
{
  return dispatch thunk of Sequence.makeIterator()();
}

uint64_t dispatch thunk of Sequence.underestimatedCount.getter()
{
  return dispatch thunk of Sequence.underestimatedCount.getter();
}

uint64_t Sequence.sorted(by:)()
{
  return Sequence.sorted(by:)();
}

uint64_t dispatch thunk of RawRepresentable.rawValue.getter()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t RawRepresentable<>.encode(to:)()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t RawRepresentable<>.init(from:)()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)Array._bridgeToObjectiveC()();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Array.description.getter()
{
  return Array.description.getter();
}

uint64_t specialized Array._endMutation()()
{
  return specialized Array._endMutation()();
}

uint64_t static Array._adoptStorage(_:count:)()
{
  return static Array._adoptStorage(_:count:)();
}

uint64_t Array._checkSubscript(_:wasNativeTypeChecked:)()
{
  return Array._checkSubscript(_:wasNativeTypeChecked:)();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t Array.debugDescription.getter()
{
  return Array.debugDescription.getter();
}

uint64_t static Array._allocateUninitialized(_:)()
{
  return static Array._allocateUninitialized(_:)();
}

uint64_t static Array._allocateBufferUninitialized(minimumCapacity:)()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

Swift::Bool __swiftcall Array._hoistableIsNativeTypeChecked()()
{
  return Array._hoistableIsNativeTypeChecked()();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t Array.endIndex.getter()
{
  return Array.endIndex.getter();
}

uint64_t type metadata accessor for Array()
{
  return type metadata accessor for Array();
}

uint64_t Array.subscript.getter()
{
  return Array.subscript.getter();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t CheckedContinuation.resume(throwing:)()
{
  return CheckedContinuation.resume(throwing:)();
}

uint64_t CheckedContinuation.resume(returning:)()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t type metadata accessor for CancellationError()
{
  return type metadata accessor for CancellationError();
}

uint64_t static MainActor.shared.getter()
{
  return static MainActor.shared.getter();
}

uint64_t type metadata accessor for MainActor()
{
  return type metadata accessor for MainActor();
}

uint64_t TaskPriority.rawValue.getter()
{
  return TaskPriority.rawValue.getter();
}

uint64_t type metadata accessor for TaskPriority()
{
  return type metadata accessor for TaskPriority();
}

uint64_t AsyncStream.Continuation.yield(_:)()
{
  return AsyncStream.Continuation.yield(_:)();
}

uint64_t AsyncStream.init(_:bufferingPolicy:_:)()
{
  return AsyncStream.init(_:bufferingPolicy:_:)();
}

Swift::Void __swiftcall Task.cancel()()
{
}

uint64_t static Task<>.isCancelled.getter()
{
  return static Task<>.isCancelled.getter();
}

uint64_t static Task<>.checkCancellation()()
{
  return static Task<>.checkCancellation()();
}

NSNumber __swiftcall Double._bridgeToObjectiveC()()
{
  return (NSNumber)Double._bridgeToObjectiveC()();
}

uint64_t Double.description.getter()
{
  return Double.description.getter();
}

uint64_t Double.write<A>(to:)()
{
  return Double.write<A>(to:)();
}

uint64_t Double.hashValue.getter()
{
  return Double.hashValue.getter();
}

NSNumber __swiftcall Float._bridgeToObjectiveC()()
{
  return (NSNumber)Float._bridgeToObjectiveC()();
}

uint64_t static Float._forceBridgeFromObjectiveC(_:result:)()
{
  return static Float._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static Float._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Float._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Float._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Float._unconditionallyBridgeFromObjectiveC(_:)();
}

NSSet __swiftcall Set._bridgeToObjectiveC()()
{
  return (NSSet)Set._bridgeToObjectiveC()();
}

uint64_t static Set._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Set._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Set.description.getter()
{
  return Set.description.getter();
}

uint64_t Set.init(minimumCapacity:)()
{
  return Set.init(minimumCapacity:)();
}

uint64_t Set.Iterator.init(_cocoa:)()
{
  return Set.Iterator.init(_cocoa:)();
}

NSNumber __swiftcall Int._bridgeToObjectiveC()()
{
  return (NSNumber)Int._bridgeToObjectiveC()();
}

uint64_t dispatch thunk of Collection.startIndex.getter()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t dispatch thunk of Collection.count.getter()
{
  return dispatch thunk of Collection.count.getter();
}

uint64_t dispatch thunk of Collection.formIndex(after:)()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t Collection.isEmpty.getter()
{
  return Collection.isEmpty.getter();
}

uint64_t dispatch thunk of Collection.subscript.read()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t Range<>.init(_:in:)()
{
  return Range<>.init(_:in:)();
}

uint64_t UITableViewHeaderFooterView.contentConfiguration.setter()
{
  return UITableViewHeaderFooterView.contentConfiguration.setter();
}

uint64_t CGColorRef.components.getter()
{
  return CGColorRef.components.getter();
}

uint64_t NSPredicate.init(format:_:)()
{
  return NSPredicate.init(format:_:)();
}

uint64_t CGContextRef.textPosition.getter()
{
  return CGContextRef.textPosition.getter();
}

uint64_t CGContextRef.textPosition.setter()
{
  return CGContextRef.textPosition.setter();
}

uint64_t CGContextRef.draw(_:in:byTiling:)()
{
  return CGContextRef.draw(_:in:byTiling:)();
}

uint64_t static FMSystemInfo.isKoreaSKU()()
{
  return static FMSystemInfo.isKoreaSKU()();
}

uint64_t NSDictionary.init(dictionaryLiteral:)()
{
  return NSDictionary.init(dictionaryLiteral:)();
}

uint64_t type metadata accessor for NSURLSession.DataTaskPublisher()
{
  return type metadata accessor for NSURLSession.DataTaskPublisher();
}

uint64_t NSURLSession.dataTaskPublisher(for:)()
{
  return NSURLSession.dataTaskPublisher(for:)();
}

uint64_t static os_log_type_t.info.getter()
{
  return static os_log_type_t.info.getter();
}

uint64_t static os_log_type_t.debug.getter()
{
  return static os_log_type_t.debug.getter();
}

uint64_t static os_log_type_t.error.getter()
{
  return static os_log_type_t.error.getter();
}

uint64_t static os_log_type_t.fault.getter()
{
  return static os_log_type_t.fault.getter();
}

uint64_t static os_log_type_t.default.getter()
{
  return static os_log_type_t.default.getter();
}

uint64_t SPUnknownBeacon.productId.getter()
{
  return SPUnknownBeacon.productId.getter();
}

UIBarButtonItem __swiftcall UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItem systemItem, UIAction_optional primaryAction, UIMenu_optional menu)
{
  return (UIBarButtonItem)UIBarButtonItem.init(systemItem:primaryAction:menu:)(systemItem, primaryAction.value.super.super.isa, *(void *)&primaryAction.is_nil, menu.value.super.super.isa, *(void *)&menu.is_nil);
}

uint64_t UITableViewCell.contentConfiguration.getter()
{
  return UITableViewCell.contentConfiguration.getter();
}

uint64_t UITableViewCell.contentConfiguration.setter()
{
  return UITableViewCell.contentConfiguration.setter();
}

uint64_t UITableViewCell.backgroundConfiguration.getter()
{
  return UITableViewCell.backgroundConfiguration.getter();
}

uint64_t UITableViewCell.backgroundConfiguration.setter()
{
  return UITableViewCell.backgroundConfiguration.setter();
}

uint64_t CGMutablePathRef.addEllipse(in:transform:)()
{
  return CGMutablePathRef.addEllipse(in:transform:)();
}

uint64_t CGMutablePathRef.addRect(_:transform:)()
{
  return CGMutablePathRef.addRect(_:transform:)();
}

uint64_t static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)()
{
  return static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
}

uint64_t OS_dispatch_group.notify(qos:flags:queue:execute:)()
{
  return OS_dispatch_group.notify(qos:flags:queue:execute:)();
}

uint64_t static OS_dispatch_queue.Attributes.concurrent.getter()
{
  return static OS_dispatch_queue.Attributes.concurrent.getter();
}

uint64_t type metadata accessor for OS_dispatch_queue.Attributes()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t OS_dispatch_queue.asyncAfter(wallDeadline:execute:)()
{
  return OS_dispatch_queue.asyncAfter(wallDeadline:execute:)();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:execute:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.SchedulerOptions()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerOptions();
}

uint64_t type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t OS_dispatch_queue.sync<A>(flags:execute:)()
{
  return OS_dispatch_queue.sync<A>(flags:execute:)();
}

uint64_t OS_dispatch_queue.sync<A>(execute:)()
{
  return OS_dispatch_queue.sync<A>(execute:)();
}

uint64_t OS_dispatch_queue.async(group:qos:flags:execute:)()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t static OS_dispatch_queue.global(qos:)()
{
  return static OS_dispatch_queue.global(qos:)();
}

uint64_t type metadata accessor for OS_dispatch_source.TimerFlags()
{
  return type metadata accessor for OS_dispatch_source.TimerFlags();
}

uint64_t static OS_dispatch_source.makeTimerSource(flags:queue:)()
{
  return static OS_dispatch_source.makeTimerSource(flags:queue:)();
}

uint64_t OS_dispatch_source.setEventHandler(qos:flags:handler:)()
{
  return OS_dispatch_source.setEventHandler(qos:flags:handler:)();
}

Swift::Void __swiftcall OS_dispatch_source.cancel()()
{
}

Swift::Void __swiftcall OS_dispatch_source.resume()()
{
}

Swift::Void __swiftcall OS_dispatch_semaphore.wait()()
{
}

Swift::Int __swiftcall OS_dispatch_semaphore.signal()()
{
  return OS_dispatch_semaphore.signal()();
}

uint64_t UIContentSizeCategory.isAccessibilityCategory.getter()
{
  return UIContentSizeCategory.isAccessibilityCategory.getter();
}

uint64_t OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)()
{
  return OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
}

uint64_t UISheetPresentationControllerDetent.resolvedValue(in:)()
{
  return UISheetPresentationControllerDetent.resolvedValue(in:)();
}

uint64_t static UISheetPresentationControllerDetent.custom(identifier:resolver:)()
{
  return static UISheetPresentationControllerDetent.custom(identifier:resolver:)();
}

uint64_t NSSet.init(arrayLiteral:)()
{
  return NSSet.init(arrayLiteral:)();
}

__C::CMTime __swiftcall CMTime.init(seconds:preferredTimescale:)(Swift::Double seconds, Swift::Int32 preferredTimescale)
{
  Swift::Int64 v2 = CMTime.init(seconds:preferredTimescale:)(*(void *)&preferredTimescale, seconds);
  result.epoch = v4;
  result.timescale = v3;
  result.flags = *(__C::CMTimeFlags *)((char *)&v3 + 4);
  result.value = v2;
  return result;
}

uint64_t CMTime.seconds.getter()
{
  return CMTime.seconds.getter();
}

UIMenu __swiftcall UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(Swift::String title, Swift::String_optional subtitle, UIImage_optional image, UIMenuIdentifier_optional identifier, UIMenuOptions options, UIMenuElementSize preferredElementSize, Swift::OpaquePointer children)
{
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(title, subtitle, image, identifier, options, preferredElementSize, children);
}

uint64_t CGPoint.debugDescription.getter()
{
  return CGPoint.debugDescription.getter();
}

UIImage __swiftcall UIImage.init(imageLiteralResourceName:)(Swift::String imageLiteralResourceName)
{
  return (UIImage)UIImage.init(imageLiteralResourceName:)(imageLiteralResourceName._countAndFlagsBits, imageLiteralResourceName._object);
}

NSNumber __swiftcall NSNumber.init(floatLiteral:)(Swift::Double floatLiteral)
{
  return (NSNumber)NSNumber.init(floatLiteral:)(floatLiteral);
}

Swift::Int __swiftcall NSObject._rawHashValue(seed:)(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t static NSObject.== infix(_:_:)()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t NSObject.hash(into:)()
{
  return NSObject.hash(into:)();
}

uint64_t NSObject.hashValue.getter()
{
  return NSObject.hashValue.getter();
}

uint64_t UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)()
{
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t UIButton.Configuration.preferredSymbolConfigurationForImage.setter()
{
  return UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
}

uint64_t UIButton.Configuration.background.modify()
{
  return UIButton.Configuration.background.modify();
}

uint64_t UIButton.Configuration.background.setter()
{
  return UIButton.Configuration.background.setter();
}

uint64_t UIButton.Configuration.buttonSize.setter()
{
  return UIButton.Configuration.buttonSize.setter();
}

uint64_t type metadata accessor for UIButton.Configuration.CornerStyle()
{
  return type metadata accessor for UIButton.Configuration.CornerStyle();
}

uint64_t UIButton.Configuration.cornerStyle.setter()
{
  return UIButton.Configuration.cornerStyle.setter();
}

uint64_t UIButton.Configuration.imagePadding.setter()
{
  return UIButton.Configuration.imagePadding.setter();
}

uint64_t type metadata accessor for UIButton.Configuration.MacIdiomStyle()
{
  return type metadata accessor for UIButton.Configuration.MacIdiomStyle();
}

uint64_t UIButton.Configuration.contentInsets.modify()
{
  return UIButton.Configuration.contentInsets.modify();
}

uint64_t UIButton.Configuration.macIdiomStyle.setter()
{
  return UIButton.Configuration.macIdiomStyle.setter();
}

uint64_t UIButton.Configuration.attributedTitle.setter()
{
  return UIButton.Configuration.attributedTitle.setter();
}

uint64_t UIButton.Configuration.baseBackgroundColor.setter()
{
  return UIButton.Configuration.baseBackgroundColor.setter();
}

uint64_t UIButton.Configuration.baseForegroundColor.setter()
{
  return UIButton.Configuration.baseForegroundColor.setter();
}

uint64_t UIButton.Configuration.imageColorTransformer.setter()
{
  return UIButton.Configuration.imageColorTransformer.setter();
}

uint64_t UIButton.Configuration.showsActivityIndicator.setter()
{
  return UIButton.Configuration.showsActivityIndicator.setter();
}

uint64_t UIButton.Configuration.subtitleTextAttributesTransformer.setter()
{
  return UIButton.Configuration.subtitleTextAttributesTransformer.setter();
}

uint64_t type metadata accessor for UIButton.Configuration.Size()
{
  return type metadata accessor for UIButton.Configuration.Size();
}

uint64_t UIButton.Configuration.image.setter()
{
  return UIButton.Configuration.image.setter();
}

uint64_t static UIButton.Configuration.plain()()
{
  return static UIButton.Configuration.plain()();
}

uint64_t UIButton.Configuration.subtitle.setter()
{
  return UIButton.Configuration.subtitle.setter();
}

uint64_t type metadata accessor for UIButton.Configuration()
{
  return type metadata accessor for UIButton.Configuration();
}

uint64_t UIButton.init(configuration:primaryAction:)()
{
  return UIButton.init(configuration:primaryAction:)();
}

uint64_t UIButton.configuration.getter()
{
  return UIButton.configuration.getter();
}

uint64_t UIButton.configuration.setter()
{
  return UIButton.configuration.setter();
}

uint64_t type metadata accessor for NSRunLoop.SchedulerOptions()
{
  return type metadata accessor for NSRunLoop.SchedulerOptions();
}

uint64_t NSRunLoop.SchedulerTimeType.Stride.init(integerLiteral:)()
{
  return NSRunLoop.SchedulerTimeType.Stride.init(integerLiteral:)();
}

uint64_t type metadata accessor for NSRunLoop.SchedulerTimeType.Stride()
{
  return type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
}

uint64_t static OS_os_log.default.getter()
{
  return static OS_os_log.default.getter();
}

uint64_t Optional.debugDescription.getter()
{
  return Optional.debugDescription.getter();
}

uint64_t type metadata accessor for Optional()
{
  return type metadata accessor for Optional();
}

uint64_t Substring.init(_:)()
{
  return Substring.init(_:)();
}

uint64_t Substring.init<A>(_:)()
{
  return Substring.init<A>(_:)();
}

NSNumber __swiftcall UInt._bridgeToObjectiveC()()
{
  return (NSNumber)UInt._bridgeToObjectiveC()();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t StringProtocol.components(separatedBy:)()
{
  return StringProtocol.components(separatedBy:)();
}

uint64_t StringProtocol.components<A>(separatedBy:)()
{
  return StringProtocol.components<A>(separatedBy:)();
}

uint64_t StringProtocol.capitalized.getter()
{
  return StringProtocol.capitalized.getter();
}

uint64_t StringProtocol.rangeOfCharacter(from:options:range:)()
{
  return StringProtocol.rangeOfCharacter(from:options:range:)();
}

uint64_t StringProtocol.localizedUppercase.getter()
{
  return StringProtocol.localizedUppercase.getter();
}

uint64_t StringProtocol.trimmingCharacters(in:)()
{
  return StringProtocol.trimmingCharacters(in:)();
}

uint64_t StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t StringProtocol.addingPercentEncoding(withAllowedCharacters:)()
{
  return StringProtocol.addingPercentEncoding(withAllowedCharacters:)();
}

uint64_t StringProtocol.caseInsensitiveCompare<A>(_:)()
{
  return StringProtocol.caseInsensitiveCompare<A>(_:)();
}

uint64_t StringProtocol.localizedCaseInsensitiveCompare<A>(_:)()
{
  return StringProtocol.localizedCaseInsensitiveCompare<A>(_:)();
}

uint64_t StringProtocol.range<A>(of:options:range:locale:)()
{
  return StringProtocol.range<A>(of:options:range:locale:)();
}

uint64_t StringProtocol.contains<A>(_:)()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)()
{
  return StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t dispatch thunk of SetAlgebra.isSuperset(of:)()
{
  return dispatch thunk of SetAlgebra.isSuperset(of:)();
}

uint64_t dispatch thunk of SetAlgebra.intersection(_:)()
{
  return dispatch thunk of SetAlgebra.intersection(_:)();
}

uint64_t dispatch thunk of SetAlgebra.isEmpty.getter()
{
  return dispatch thunk of SetAlgebra.isEmpty.getter();
}

uint64_t dispatch thunk of SetAlgebra.subtract(_:)()
{
  return dispatch thunk of SetAlgebra.subtract(_:)();
}

uint64_t dispatch thunk of SetAlgebra.formUnion(_:)()
{
  return dispatch thunk of SetAlgebra.formUnion(_:)();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t _HashTable.previousHole(before:)()
{
  return _HashTable.previousHole(before:)();
}

uint64_t _HashTable.nextHole(atOrAfter:)()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t __CocoaSet.startIndex.getter()
{
  return __CocoaSet.startIndex.getter();
}

uint64_t __CocoaSet.makeIterator()()
{
  return __CocoaSet.makeIterator()();
}

uint64_t static __CocoaSet.Index.== infix(_:_:)()
{
  return static __CocoaSet.Index.== infix(_:_:)();
}

uint64_t __CocoaSet.Index.age.getter()
{
  return __CocoaSet.Index.age.getter();
}

uint64_t __CocoaSet.Index.element.getter()
{
  return __CocoaSet.Index.element.getter();
}

uint64_t __CocoaSet.count.getter()
{
  return __CocoaSet.count.getter();
}

uint64_t __CocoaSet.member(for:)()
{
  return __CocoaSet.member(for:)();
}

uint64_t __CocoaSet.element(at:)()
{
  return __CocoaSet.element(at:)();
}

uint64_t __CocoaSet.Iterator.next()()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t __CocoaSet.endIndex.getter()
{
  return __CocoaSet.endIndex.getter();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t static CommandLine.unsafeArgv.getter()
{
  return static CommandLine.unsafeArgv.getter();
}

uint64_t static CommandLine.argc.getter()
{
  return static CommandLine.argc.getter();
}

uint64_t static _SetStorage.copy(original:)()
{
  return static _SetStorage.copy(original:)();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t static _SetStorage.convert(_:capacity:)()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return static _SetStorage.allocate(capacity:)();
}

uint64_t _StringGuts._slowWithCString<A>(_:)()
{
  return _StringGuts._slowWithCString<A>(_:)();
}

uint64_t _StringGuts.foreignErrorCorrectedScalar(startingAt:)()
{
  return _StringGuts.foreignErrorCorrectedScalar(startingAt:)();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return _StringGuts.copyUTF8(into:)();
}

Swift::Void __swiftcall _ArrayBuffer._typeCheckSlowPath(_:)(Swift::Int a1)
{
}

uint64_t _ArrayBuffer._getElementSlowPath(_:)()
{
  return _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t _decodeScalar(_:startingAt:)()
{
  return _decodeScalar(_:startingAt:)();
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return specialized ContiguousArray._endMutation()();
}

Swift::Void __swiftcall ContiguousArray.reserveCapacity(_:)(Swift::Int a1)
{
}

uint64_t specialized ContiguousArray.reserveCapacity(_:)()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t ContiguousArray.append(_:)()
{
  return ContiguousArray.append(_:)();
}

uint64_t ContiguousArray.init()()
{
  return ContiguousArray.init()();
}

uint64_t type metadata accessor for ContiguousArray()
{
  return type metadata accessor for ContiguousArray();
}

uint64_t type metadata accessor for ContinuousClock.Instant()
{
  return type metadata accessor for ContinuousClock.Instant();
}

uint64_t ContinuousClock.init()()
{
  return ContinuousClock.init()();
}

uint64_t type metadata accessor for ContinuousClock()
{
  return type metadata accessor for ContinuousClock();
}

uint64_t dispatch thunk of InstantProtocol.advanced(by:)()
{
  return dispatch thunk of InstantProtocol.advanced(by:)();
}

uint64_t _print_unlocked<A, B>(_:_:)()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t _assertionFailure(_:_:flags:)()
{
  return _assertionFailure(_:_:flags:)();
}

uint64_t _bridgeCocoaArray<A>(_:)()
{
  return _bridgeCocoaArray<A>(_:)();
}

uint64_t LazyFilterSequence.filter(_:)()
{
  return LazyFilterSequence.filter(_:)();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t _CocoaArrayWrapper.subscript.getter()
{
  return _CocoaArrayWrapper.subscript.getter();
}

{
  return _CocoaArrayWrapper.subscript.getter();
}

uint64_t static _DictionaryStorage.copy(original:)()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t _SwiftNewtypeWrapper<>._toCustomAnyHashable()()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases._rawValue, string._countAndFlagsBits, string._object);
}

uint64_t KeyedDecodingContainer.decodeIfPresent(_:forKey:)()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decode(_:forKey:)()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decode<A>(_:forKey:)()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encodeIfPresent(_:forKey:)()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encode(_:forKey:)()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encode<A>(_:forKey:)()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

Swift::Int __swiftcall _minimumMergeRunLength(_:)(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t _stringCompareInternal(_:_:_:_:expecting:)()
{
  return _stringCompareInternal(_:_:_:_:expecting:)();
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t type metadata accessor for _ContiguousArrayStorage()
{
  return type metadata accessor for _ContiguousArrayStorage();
}

uint64_t _getErrorEmbeddedNSError<A>(_:)()
{
  return _getErrorEmbeddedNSError<A>(_:)();
}

uint64_t _bridgeAnythingToObjectiveC<A>(_:)()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t _diagnoseUnexpectedEnumCase<A>(type:)()
{
  return _diagnoseUnexpectedEnumCase<A>(type:)();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter()
{
  return dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
}

uint64_t type metadata accessor for __ContiguousArrayStorageBase()
{
  return type metadata accessor for __ContiguousArrayStorageBase();
}

uint64_t _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)()
{
  return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
}

uint64_t _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t dispatch thunk of Clock.now.getter()
{
  return dispatch thunk of Clock.now.getter();
}

uint64_t Error.localizedDescription.getter()
{
  return Error.localizedDescription.getter();
}

uint64_t Error._getEmbeddedNSError()()
{
  return Error._getEmbeddedNSError()();
}

uint64_t Error._code.getter()
{
  return Error._code.getter();
}

uint64_t Error._domain.getter()
{
  return Error._domain.getter();
}

uint64_t Error._userInfo.getter()
{
  return Error._userInfo.getter();
}

uint64_t print(_:separator:terminator:)()
{
  return print(_:separator:terminator:)();
}

uint64_t Hasher.init(_seed:)()
{
  return Hasher.init(_seed:)();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt8 a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt32 a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt64 a1)
{
}

Swift::Int __swiftcall Hasher.finalize()()
{
  return Hasher.finalize()();
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return Hasher._finalize()();
}

uint64_t Hasher.init()()
{
  return Hasher.init()();
}

uint64_t dispatch thunk of Decoder.container<A>(keyedBy:)()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t dispatch thunk of Encoder.container<A>(keyedBy:)()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t static Duration.seconds(_:)()
{
  return static Duration.seconds(_:)();
}

uint64_t dispatch thunk of OptionSet.init(rawValue:)()
{
  return dispatch thunk of OptionSet.init(rawValue:)();
}

uint64_t _typeName(_:qualified:)()
{
  return _typeName(_:qualified:)();
}

CGRect AVMakeRectWithAspectRatioInsideRect(CGSize aspectRatio, CGRect boundingRect)
{
  return _AVMakeRectWithAspectRatioInsideRect(aspectRatio, boundingRect);
}

uint64_t BiomeLibrary()
{
  return _BiomeLibrary();
}

CATransform3D *__cdecl CATransform3DMakeRotation(CATransform3D *__return_ptr retstr, CGFloat angle, CGFloat x, CGFloat y, CGFloat z)
{
  return _CATransform3DMakeRotation(retstr, angle, x, y, z);
}

CATransform3D *__cdecl CATransform3DMakeScale(CATransform3D *__return_ptr retstr, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return _CATransform3DMakeScale(retstr, sx, sy, sz);
}

CATransform3D *__cdecl CATransform3DMakeTranslation(CATransform3D *__return_ptr retstr, CGFloat tx, CGFloat ty, CGFloat tz)
{
  return _CATransform3DMakeTranslation(retstr, tx, ty, tz);
}

CATransform3D *__cdecl CATransform3DScale(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return _CATransform3DScale(retstr, t, sx, sy, sz);
}

uint64_t CEMStringIsSingleEmoji()
{
  return _CEMStringIsSingleEmoji();
}

CFAttributedStringRef CFAttributedStringCreate(CFAllocatorRef alloc, CFStringRef str, CFDictionaryRef attributes)
{
  return _CFAttributedStringCreate(alloc, str, attributes);
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return _CFNotificationCenterGetDarwinNotifyCenter();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
}

uint64_t CFPhoneNumberCreate()
{
  return _CFPhoneNumberCreate();
}

uint64_t CFPhoneNumberCreateString()
{
  return _CFPhoneNumberCreateString();
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return _CGAffineTransformMakeScale(retstr, sx, sy);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return _CGBitmapContextCreate(data, width, height, bitsPerComponent, bytesPerRow, space, bitmapInfo);
}

CGImageRef CGBitmapContextCreateImage(CGContextRef context)
{
  return _CGBitmapContextCreateImage(context);
}

const CGFloat *__cdecl CGColorGetComponents(CGColorRef color)
{
  return _CGColorGetComponents(color);
}

CGColorSpaceRef CGColorSpaceCreateDeviceGray(void)
{
  return _CGColorSpaceCreateDeviceGray();
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return _CGColorSpaceCreateDeviceRGB();
}

void CGContextAddEllipseInRect(CGContextRef c, CGRect rect)
{
}

void CGContextFillPath(CGContextRef c)
{
}

void CGContextRestoreGState(CGContextRef c)
{
}

void CGContextSaveGState(CGContextRef c)
{
}

void CGContextScaleCTM(CGContextRef c, CGFloat sx, CGFloat sy)
{
}

void CGContextSetFillColor(CGContextRef c, const CGFloat *components)
{
}

void CGContextSetLineJoin(CGContextRef c, CGLineJoin join)
{
}

void CGContextSetLineWidth(CGContextRef c, CGFloat width)
{
}

void CGContextSetRGBFillColor(CGContextRef c, CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
}

void CGContextSetRGBStrokeColor(CGContextRef c, CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
}

void CGContextSetStrokeColor(CGContextRef c, const CGFloat *components)
{
}

void CGContextSetTextDrawingMode(CGContextRef c, CGTextDrawingMode mode)
{
}

void CGContextStrokePath(CGContextRef c)
{
}

void CGContextTranslateCTM(CGContextRef c, CGFloat tx, CGFloat ty)
{
}

CFDataRef CGDataProviderCopyData(CGDataProviderRef provider)
{
  return _CGDataProviderCopyData(provider);
}

CGImageRef CGImageCreateWithImageInRect(CGImageRef image, CGRect rect)
{
  return _CGImageCreateWithImageInRect(image, rect);
}

CGDataProviderRef CGImageGetDataProvider(CGImageRef image)
{
  return _CGImageGetDataProvider(image);
}

size_t CGImageGetHeight(CGImageRef image)
{
  return _CGImageGetHeight(image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return _CGImageGetWidth(image);
}

CGMutablePathRef CGPathCreateMutable(void)
{
  return _CGPathCreateMutable();
}

CGPathRef CGPathCreateWithEllipseInRect(CGRect rect, const CGAffineTransform *transform)
{
  return _CGPathCreateWithEllipseInRect(rect, transform);
}

CGPathRef CGPathCreateWithRect(CGRect rect, const CGAffineTransform *transform)
{
  return _CGPathCreateWithRect(rect, transform);
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return _CGRectContainsPoint(rect, point);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return _CGRectEqualToRect(rect1, rect2);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  return _CGRectGetMaxX(rect);
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  return _CGRectGetMaxY(rect);
}

CGFloat CGRectGetMidX(CGRect rect)
{
  return _CGRectGetMidX(rect);
}

CGFloat CGRectGetMidY(CGRect rect)
{
  return _CGRectGetMidY(rect);
}

CGFloat CGRectGetMinX(CGRect rect)
{
  return _CGRectGetMinX(rect);
}

CGFloat CGRectGetMinY(CGRect rect)
{
  return _CGRectGetMinY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectInset(rect, dx, dy);
}

CGRect CGRectIntegral(CGRect rect)
{
  return _CGRectIntegral(rect);
}

BOOL CGRectIntersectsRect(CGRect rect1, CGRect rect2)
{
  return _CGRectIntersectsRect(rect1, rect2);
}

CGRect CGRectOffset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectOffset(rect, dx, dy);
}

CGRect CGRectUnion(CGRect r1, CGRect r2)
{
  return _CGRectUnion(r1, r2);
}

uint64_t CLLocationCoordinate2DGetDistanceFrom()
{
  return _CLLocationCoordinate2DGetDistanceFrom();
}

BOOL CLLocationCoordinate2DIsValid(CLLocationCoordinate2D coord)
{
  return _CLLocationCoordinate2DIsValid(coord);
}

CLLocationCoordinate2D CLLocationCoordinate2DMake(CLLocationDegrees latitude, CLLocationDegrees longitude)
{
  CLLocationCoordinate2D v4 = _CLLocationCoordinate2DMake(latitude, longitude);
  double v3 = v4.longitude;
  double v2 = v4.latitude;
  result.longitude = v3;
  result.latitude = v2;
  return result;
}

int32_t CMTimeCompare(CMTime *time1, CMTime *time2)
{
  return _CMTimeCompare(time1, time2);
}

uint64_t CPPhoneNumberCopyActiveCountryCode()
{
  return _CPPhoneNumberCopyActiveCountryCode();
}

uint64_t CPPhoneNumberCopyHomeCountryCode()
{
  return _CPPhoneNumberCopyHomeCountryCode();
}

uint64_t CPPhoneNumberCopyLastKnownNetworkCountryCode()
{
  return _CPPhoneNumberCopyLastKnownNetworkCountryCode();
}

uint64_t CPPhoneNumberCopyNetworkCountryCode()
{
  return _CPPhoneNumberCopyNetworkCountryCode();
}

CTFontRef CTFontCreateWithFontDescriptor(CTFontDescriptorRef descriptor, CGFloat size, const CGAffineTransform *matrix)
{
  return _CTFontCreateWithFontDescriptor(descriptor, size, matrix);
}

CTFontDescriptorRef CTFontDescriptorCreateWithAttributes(CFDictionaryRef attributes)
{
  return _CTFontDescriptorCreateWithAttributes(attributes);
}

void CTFrameDraw(CTFrameRef frame, CGContextRef context)
{
}

CTFrameRef CTFramesetterCreateFrame(CTFramesetterRef framesetter, CFRange stringRange, CGPathRef path, CFDictionaryRef frameAttributes)
{
  return _CTFramesetterCreateFrame(framesetter, stringRange, path, frameAttributes);
}

CTFramesetterRef CTFramesetterCreateWithAttributedString(CFAttributedStringRef attrString)
{
  return _CTFramesetterCreateWithAttributedString(attrString);
}

CGSize CTFramesetterSuggestFrameSizeWithConstraints(CTFramesetterRef framesetter, CFRange stringRange, CFDictionaryRef frameAttributes, CGSize constraints, CFRange *fitRange)
{
  CGSize v7 = _CTFramesetterSuggestFrameSizeWithConstraints(framesetter, stringRange, frameAttributes, constraints, fitRange);
  double height = v7.height;
  double width = v7.width;
  result.double height = height;
  result.double width = width;
  return result;
}

uint64_t IDSCopyIDForEmailAddress()
{
  return _IDSCopyIDForEmailAddress();
}

uint64_t IDSCopyIDForPhoneNumber()
{
  return _IDSCopyIDForPhoneNumber();
}

uint64_t IDSCopyRawAddressForDestination()
{
  return _IDSCopyRawAddressForDestination();
}

uint64_t MAGetActivationState()
{
  return _MAGetActivationState();
}

uint64_t MGGetBoolAnswer()
{
  return _MGGetBoolAnswer();
}

uint64_t MGGetSInt32Answer()
{
  return _MGGetSInt32Answer();
}

CLLocationCoordinate2D MKCoordinateForMapPoint(MKMapPoint mapPoint)
{
  CLLocationCoordinate2D v3 = _MKCoordinateForMapPoint(mapPoint);
  double longitude = v3.longitude;
  double latitude = v3.latitude;
  result.double longitude = longitude;
  result.double latitude = latitude;
  return result;
}

MKCoordinateRegion MKCoordinateRegionForMapRect(MKMapRect rect)
{
  return _MKCoordinateRegionForMapRect(rect);
}

MKCoordinateRegion MKCoordinateRegionMakeWithDistance(CLLocationCoordinate2D centerCoordinate, CLLocationDistance latitudinalMeters, CLLocationDistance longitudinalMeters)
{
  return _MKCoordinateRegionMakeWithDistance(centerCoordinate, latitudinalMeters, longitudinalMeters);
}

MKMapPoint MKMapPointForCoordinate(CLLocationCoordinate2D coordinate)
{
  MKMapPoint v3 = _MKMapPointForCoordinate(coordinate);
  double y = v3.y;
  double x = v3.x;
  result.double y = y;
  result.double x = x;
  return result;
}

double MKMapPointsPerMeterAtLatitude(CLLocationDegrees latitude)
{
  return _MKMapPointsPerMeterAtLatitude(latitude);
}

uint64_t MKMapRectForCoordinateRegion()
{
  return _MKMapRectForCoordinateRegion();
}

BOOL MKMapRectIntersectsRect(MKMapRect rect1, MKMapRect rect2)
{
  return _MKMapRectIntersectsRect(rect1, rect2);
}

uint64_t MKMapRectMakeWithRadialDistance()
{
  return _MKMapRectMakeWithRadialDistance();
}

MKMapRect MKMapRectOffset(MKMapRect rect, double dx, double dy)
{
  return _MKMapRectOffset(rect, dx, dy);
}

MKMapRect MKMapRectUnion(MKMapRect rect1, MKMapRect rect2)
{
  return _MKMapRectUnion(rect1, rect2);
}

CLLocationDistance MKMetersBetweenMapPoints(MKMapPoint a, MKMapPoint b)
{
  return _MKMetersBetweenMapPoints(a, b);
}

uint64_t MobileGestalt_get_current_device()
{
  return _MobileGestalt_get_current_device();
}

uint64_t MobileGestalt_get_deviceSupportsFindApplePencil()
{
  return _MobileGestalt_get_deviceSupportsFindApplePencil();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

uint64_t SBSIsSystemApertureAvailable()
{
  return _SBSIsSystemApertureAvailable();
}

uint64_t SFAdjustmentFiltersForAssetTypeAndURL()
{
  return _SFAdjustmentFiltersForAssetTypeAndURL();
}

void UIAccessibilityPostNotification(UIAccessibilityNotifications notification, id argument)
{
}

int UIApplicationMain(int argc, char **argv, NSString *principalClassName, NSString *delegateClassName)
{
  return _UIApplicationMain(argc, argv, principalClassName, delegateClassName);
}

BOOL UIContentSizeCategoryIsAccessibilityCategory(UIContentSizeCategory category)
{
  return _UIContentSizeCategoryIsAccessibilityCategory(category);
}

void UIGraphicsBeginImageContext(CGSize size)
{
}

void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale)
{
}

void UIGraphicsEndImageContext(void)
{
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return _UIGraphicsGetCurrentContext();
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return _UIGraphicsGetImageFromCurrentImageContext();
}

NSData *__cdecl UIImagePNGRepresentation(UIImage *image)
{
  return _UIImagePNGRepresentation(image);
}

uint64_t UIRoundToScreenScale()
{
  return _UIRoundToScreenScale();
}

uint64_t UIRoundToViewScale()
{
  return _UIRoundToViewScale();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

uint64_t _UIContentSizeCategoryCompareToContentSizeCategory()
{
  return __UIContentSizeCategoryCompareToContentSizeCategory();
}

__double2 __sincos_stret(double a1)
{
  __double2 v3 = ___sincos_stret(a1);
  double cosval = v3.__cosval;
  double sinval = v3.__sinval;
  result.__double cosval = cosval;
  result.__double sinval = sinval;
  return result;
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return __swift_stdlib_strtod_clocale();
}

long double atan2(long double __y, long double __x)
{
  return _atan2(__y, __x);
}

void bzero(void *a1, size_t a2)
{
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

long double exp(long double __x)
{
  return _exp(__x);
}

float expf(float a1)
{
  return _expf(a1);
}

long double fmod(long double __x, long double __y)
{
  return _fmod(__x, __y);
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_destroyWeak(id *location)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return _objc_getAssociatedObject(object, key);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_conformsToProtocol2()
{
  return _swift_conformsToProtocol2();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_deallocUninitializedObject()
{
  return _swift_deallocUninitializedObject();
}

uint64_t swift_defaultActor_destroy()
{
  return _swift_defaultActor_destroy();
}

uint64_t swift_defaultActor_initialize()
{
  return _swift_defaultActor_initialize();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return _swift_dynamicCastClassUnconditional();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return _swift_dynamicCastObjCClassUnconditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getDynamicType()
{
  return _swift_getDynamicType();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout2()
{
  return _swift_getTupleTypeLayout2();
}

uint64_t swift_getTupleTypeLayout3()
{
  return _swift_getTupleTypeLayout3();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return _swift_getTupleTypeMetadata2();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return _swift_initEnumMetadataSinglePayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isClassType()
{
  return _swift_isClassType();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull()
{
  return _swift_isUniquelyReferenced_nonNull();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_projectBox()
{
  return _swift_projectBox();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unexpectedError()
{
  return _swift_unexpectedError();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectUnownedDestroy()
{
  return _swift_unknownObjectUnownedDestroy();
}

uint64_t swift_unknownObjectUnownedInit()
{
  return _swift_unknownObjectUnownedInit();
}

uint64_t swift_unknownObjectUnownedLoadStrong()
{
  return _swift_unknownObjectUnownedLoadStrong();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

sysdir_search_path_enumeration_state sysdir_get_next_search_path_enumeration(sysdir_search_path_enumeration_state state, char *path)
{
  return _sysdir_get_next_search_path_enumeration(state, path);
}

uint64_t sysdir_start_search_path_enumeration_private()
{
  return _sysdir_start_search_path_enumeration_private();
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return _[a1 CGColor];
}

id objc_msgSend_CGPath(void *a1, const char *a2, ...)
{
  return _[a1 CGPath];
}

id objc_msgSend_actionWithTitle_style_handler_(void *a1, const char *a2, ...)
{
  return [a1 actionWithTitle:style:handler:];
}

id objc_msgSend_addAction_(void *a1, const char *a2, ...)
{
  return [a1 addAction:];
}

id objc_msgSend_addAnimation_forKey_(void *a1, const char *a2, ...)
{
  return [a1 addAnimation:forKey:];
}

id objc_msgSend_addCharactersInString_(void *a1, const char *a2, ...)
{
  return [a1 addCharactersInString:];
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return [a1 addGestureRecognizer:];
}

id objc_msgSend_addLineToPoint_(void *a1, const char *a2, ...)
{
  return [a1 addLineToPoint:];
}

id objc_msgSend_addSublayer_(void *a1, const char *a2, ...)
{
  return [a1 addSublayer:];
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return [a1 addSubview:];
}

id objc_msgSend_alertControllerWithTitle_message_preferredStyle_(void *a1, const char *a2, ...)
{
  return [a1 alertControllerWithTitle:message:preferredStyle:];
}

id objc_msgSend_alertPresenterViewController(void *a1, const char *a2, ...)
{
  return _[a1 alertPresenterViewController];
}

id objc_msgSend_animateHandleIn_(void *a1, const char *a2, ...)
{
  return [a1 animateHandleIn:];
}

id objc_msgSend_animateWithDuration_animations_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateWithDuration:animations:completion:];
}

id objc_msgSend_animation(void *a1, const char *a2, ...)
{
  return _[a1 animation];
}

id objc_msgSend_animationWithKeyPath_(void *a1, const char *a2, ...)
{
  return [a1 animationWithKeyPath:];
}

id objc_msgSend_annotation(void *a1, const char *a2, ...)
{
  return _[a1 annotation];
}

id objc_msgSend_arrayWithObjects_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObjects:];
}

id objc_msgSend_beginningOfDocument(void *a1, const char *a2, ...)
{
  return _[a1 beginningOfDocument];
}

id objc_msgSend_bezierPath(void *a1, const char *a2, ...)
{
  return _[a1 bezierPath];
}

id objc_msgSend_bezierPathWithEndPoint_(void *a1, const char *a2, ...)
{
  return [a1 bezierPathWithEndPoint:];
}

id objc_msgSend_boldSystemFontOfSize_(void *a1, const char *a2, ...)
{
  return [a1 boldSystemFontOfSize:];
}

id objc_msgSend_boundingMapRect(void *a1, const char *a2, ...)
{
  return _[a1 boundingMapRect];
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _[a1 bounds];
}

id objc_msgSend_center(void *a1, const char *a2, ...)
{
  return _[a1 center];
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _[a1 clearColor];
}

id objc_msgSend_colorWithAlphaComponent_(void *a1, const char *a2, ...)
{
  return [a1 colorWithAlphaComponent:];
}

id objc_msgSend_contactFor_(void *a1, const char *a2, ...)
{
  return [a1 contactFor:];
}

id objc_msgSend_convertCoordinate_toPointToView_(void *a1, const char *a2, ...)
{
  return [a1 convertCoordinate:toPointToView:];
}

id objc_msgSend_convertPoint_toCoordinateFromView_(void *a1, const char *a2, ...)
{
  return [a1 convertPoint:toCoordinateFromView:];
}

id objc_msgSend_convertRegion_toRectToView_(void *a1, const char *a2, ...)
{
  return [a1 convertRegion:toRectToView:];
}

id objc_msgSend_coordinate(void *a1, const char *a2, ...)
{
  return _[a1 coordinate];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_currentHandleDistance(void *a1, const char *a2, ...)
{
  return _[a1 currentHandleDistance];
}

id objc_msgSend_currentHandleDistanceNormalized(void *a1, const char *a2, ...)
{
  return _[a1 currentHandleDistanceNormalized];
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return _[a1 currentHandler];
}

id objc_msgSend_decimalDigitCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 decimalDigitCharacterSet];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithObjects:forKeys:count:];
}

id objc_msgSend_didStopDraggingHandle_(void *a1, const char *a2, ...)
{
  return [a1 didStopDraggingHandle:];
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return [a1 dismissViewControllerAnimated:YES completion:nil];
}

id objc_msgSend_displayNameFor_(void *a1, const char *a2, ...)
{
  return [a1 displayNameFor:];
}

id objc_msgSend_distanceFromLocation_(void *a1, const char *a2, ...)
{
  return [a1 distanceFromLocation:];
}

id objc_msgSend_drawInRect_withAttributes_(void *a1, const char *a2, ...)
{
  return [a1 drawInRect:withAttributes:];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_fmfOrangeColor(void *a1, const char *a2, ...)
{
  return _[a1 fmfOrangeColor];
}

id objc_msgSend_fmfOverlayColor(void *a1, const char *a2, ...)
{
  return _[a1 fmfOverlayColor];
}

id objc_msgSend_formatWithPhoneNumber_(void *a1, const char *a2, ...)
{
  return [a1 formatWithPhoneNumber:];
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _[a1 frame];
}

id objc_msgSend_functionWithName_(void *a1, const char *a2, ...)
{
  return [a1 functionWithName:];
}

id objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return [a1 handleFailureInMethod:object:file:lineNumber:description:];
}

id objc_msgSend_handleImageView(void *a1, const char *a2, ...)
{
  return _[a1 handleImageView];
}

id objc_msgSend_imageNamed_(void *a1, const char *a2, ...)
{
  return [a1 imageNamed:];
}

id objc_msgSend_initWithImage_highlightedImage_(void *a1, const char *a2, ...)
{
  return [a1 initWithImage:highlightedImage:];
}

id objc_msgSend_initWithLatitude_longitude_(void *a1, const char *a2, ...)
{
  return [a1 initWithLatitude:longitude:];
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithTarget:action:];
}

id objc_msgSend_initialize(void *a1, const char *a2, ...)
{
  return _[a1 initialize];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_isBeingDismissed(void *a1, const char *a2, ...)
{
  return _[a1 isBeingDismissed];
}

id objc_msgSend_isDragging(void *a1, const char *a2, ...)
{
  return _[a1 isDragging];
}

id objc_msgSend_isEmailValidWithEmail_(void *a1, const char *a2, ...)
{
  return [a1 isEmailValidWithEmail:];
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToString:];
}

id objc_msgSend_isMaximum(void *a1, const char *a2, ...)
{
  return _[a1 isMaximum];
}

id objc_msgSend_isMinimum(void *a1, const char *a2, ...)
{
  return _[a1 isMinimum];
}

id objc_msgSend_isPhoneNumberValidWithPhoneNumber_(void *a1, const char *a2, ...)
{
  return [a1 isPhoneNumberValidWithPhoneNumber:];
}

id objc_msgSend_keyWindow(void *a1, const char *a2, ...)
{
  return _[a1 keyWindow];
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return _[a1 layer];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringForKey:value:table:];
}

id objc_msgSend_localizedStringFromNumber_numberStyle_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringFromNumber:numberStyle:];
}

id objc_msgSend_locationInView_(void *a1, const char *a2, ...)
{
  return [a1 locationInView:];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_mapView(void *a1, const char *a2, ...)
{
  return _[a1 mapView];
}

id objc_msgSend_maxPoint(void *a1, const char *a2, ...)
{
  return _[a1 maxPoint];
}

id objc_msgSend_maximumRadiusNormalized(void *a1, const char *a2, ...)
{
  return _[a1 maximumRadiusNormalized];
}

id objc_msgSend_measurementSystem(void *a1, const char *a2, ...)
{
  return _[a1 measurementSystem];
}

id objc_msgSend_minPoint(void *a1, const char *a2, ...)
{
  return _[a1 minPoint];
}

id objc_msgSend_minimumInMeters(void *a1, const char *a2, ...)
{
  return _[a1 minimumInMeters];
}

id objc_msgSend_minimumRadiusNormalized(void *a1, const char *a2, ...)
{
  return _[a1 minimumRadiusNormalized];
}

id objc_msgSend_moveToPoint_(void *a1, const char *a2, ...)
{
  return [a1 moveToPoint:];
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return [a1 numberWithFloat:];
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return [a1 numberWithUnsignedInteger:];
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return [a1 objectForKey:];
}

id objc_msgSend_overlay(void *a1, const char *a2, ...)
{
  return _[a1 overlay];
}

id objc_msgSend_performSelector_withObject_afterDelay_(void *a1, const char *a2, ...)
{
  return [a1 performSelector:withObject:afterDelay:];
}

id objc_msgSend_popAnimateHandle(void *a1, const char *a2, ...)
{
  return _[a1 popAnimateHandle];
}

id objc_msgSend_popoverPresentationController(void *a1, const char *a2, ...)
{
  return _[a1 popoverPresentationController];
}

id objc_msgSend_positionFromPosition_offset_(void *a1, const char *a2, ...)
{
  return [a1 positionFromPosition:offset:];
}

id objc_msgSend_preferredContentSizeCategory(void *a1, const char *a2, ...)
{
  return _[a1 preferredContentSizeCategory];
}

id objc_msgSend_presentViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return [a1 presentViewController:animated:completion:];
}

id objc_msgSend_presentedViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentedViewController];
}

id objc_msgSend_presentingViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentingViewController];
}

id objc_msgSend_rangeOfCharacterFromSet_(void *a1, const char *a2, ...)
{
  return [a1 rangeOfCharacterFromSet:];
}

id objc_msgSend_removeFromSuperlayer(void *a1, const char *a2, ...)
{
  return _[a1 removeFromSuperlayer];
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return _[a1 removeFromSuperview];
}

id objc_msgSend_rootViewController(void *a1, const char *a2, ...)
{
  return _[a1 rootViewController];
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _[a1 set];
}

id objc_msgSend_setAlignment_(void *a1, const char *a2, ...)
{
  return [a1 setAlignment:];
}

id objc_msgSend_setAlpha_(void *a1, const char *a2, ...)
{
  return [a1 setAlpha:];
}

id objc_msgSend_setAnnotation_(void *a1, const char *a2, ...)
{
  return [a1 setAnnotation:];
}

id objc_msgSend_setBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setBarButtonItem:];
}

id objc_msgSend_setCenter_(void *a1, const char *a2, ...)
{
  return [a1 setCenter:];
}

id objc_msgSend_setConstrainMechanisms_(void *a1, const char *a2, ...)
{
  return [a1 setConstrainMechanisms:];
}

id objc_msgSend_setConstrainPersonIdType_(void *a1, const char *a2, ...)
{
  return [a1 setConstrainPersonIdType:];
}

id objc_msgSend_setCustomRadius_(void *a1, const char *a2, ...)
{
  return [a1 setCustomRadius:];
}

id objc_msgSend_setDamping_(void *a1, const char *a2, ...)
{
  return [a1 setDamping:];
}

id objc_msgSend_setDidZoomOnSelection_(void *a1, const char *a2, ...)
{
  return [a1 setDidZoomOnSelection:];
}

id objc_msgSend_setDuration_(void *a1, const char *a2, ...)
{
  return [a1 setDuration:];
}

id objc_msgSend_setFillColor_(void *a1, const char *a2, ...)
{
  return [a1 setFillColor:];
}

id objc_msgSend_setFillMode_(void *a1, const char *a2, ...)
{
  return [a1 setFillMode:];
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return [a1 setFrame:];
}

id objc_msgSend_setFromValue_(void *a1, const char *a2, ...)
{
  return [a1 setFromValue:];
}

id objc_msgSend_setHandleImageView_(void *a1, const char *a2, ...)
{
  return [a1 setHandleImageView:];
}

id objc_msgSend_setHighlighted_(void *a1, const char *a2, ...)
{
  return [a1 setHighlighted:];
}

id objc_msgSend_setIsDragging_(void *a1, const char *a2, ...)
{
  return [a1 setIsDragging:];
}

id objc_msgSend_setIsMaximum_(void *a1, const char *a2, ...)
{
  return [a1 setIsMaximum:];
}

id objc_msgSend_setIsMinimum_(void *a1, const char *a2, ...)
{
  return [a1 setIsMinimum:];
}

id objc_msgSend_setKeyTimes_(void *a1, const char *a2, ...)
{
  return [a1 setKeyTimes:];
}

id objc_msgSend_setLineBreakMode_(void *a1, const char *a2, ...)
{
  return [a1 setLineBreakMode:];
}

id objc_msgSend_setLineCap_(void *a1, const char *a2, ...)
{
  return [a1 setLineCap:];
}

id objc_msgSend_setLineCapStyle_(void *a1, const char *a2, ...)
{
  return [a1 setLineCapStyle:];
}

id objc_msgSend_setLineDash_count_phase_(void *a1, const char *a2, ...)
{
  return [a1 setLineDash:count:phase:];
}

id objc_msgSend_setLineDashPattern_(void *a1, const char *a2, ...)
{
  return [a1 setLineDashPattern:];
}

id objc_msgSend_setLineWidth_(void *a1, const char *a2, ...)
{
  return [a1 setLineWidth:];
}

id objc_msgSend_setMass_(void *a1, const char *a2, ...)
{
  return [a1 setMass:];
}

id objc_msgSend_setNeedsDisplay(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsDisplay];
}

id objc_msgSend_setPath_(void *a1, const char *a2, ...)
{
  return [a1 setPath:];
}

id objc_msgSend_setPermittedArrowDirections_(void *a1, const char *a2, ...)
{
  return [a1 setPermittedArrowDirections:];
}

id objc_msgSend_setRemovedOnCompletion_(void *a1, const char *a2, ...)
{
  return [a1 setRemovedOnCompletion:];
}

id objc_msgSend_setSelectedTextRange_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedTextRange:];
}

id objc_msgSend_setShapeLayer_(void *a1, const char *a2, ...)
{
  return [a1 setShapeLayer:];
}

id objc_msgSend_setShareActionsheet_(void *a1, const char *a2, ...)
{
  return [a1 setShareActionsheet:];
}

id objc_msgSend_setSourceRect_(void *a1, const char *a2, ...)
{
  return [a1 setSourceRect:];
}

id objc_msgSend_setSourceView_(void *a1, const char *a2, ...)
{
  return [a1 setSourceView:];
}

id objc_msgSend_setStiffness_(void *a1, const char *a2, ...)
{
  return [a1 setStiffness:];
}

id objc_msgSend_setStrokeColor_(void *a1, const char *a2, ...)
{
  return [a1 setStrokeColor:];
}

id objc_msgSend_setStrokeEnd_(void *a1, const char *a2, ...)
{
  return [a1 setStrokeEnd:];
}

id objc_msgSend_setStrokeStart_(void *a1, const char *a2, ...)
{
  return [a1 setStrokeStart:];
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return [a1 setText:];
}

id objc_msgSend_setTimingFunction_(void *a1, const char *a2, ...)
{
  return [a1 setTimingFunction:];
}

id objc_msgSend_setTimingFunctions_(void *a1, const char *a2, ...)
{
  return [a1 setTimingFunctions:];
}

id objc_msgSend_setToValue_(void *a1, const char *a2, ...)
{
  return [a1 setToValue:];
}

id objc_msgSend_setValues_(void *a1, const char *a2, ...)
{
  return [a1 setValues:];
}

id objc_msgSend_setVelocity_(void *a1, const char *a2, ...)
{
  return [a1 setVelocity:];
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return [a1 setWithArray:];
}

id objc_msgSend_setZPosition_(void *a1, const char *a2, ...)
{
  return [a1 setZPosition:];
}

id objc_msgSend_settings(void *a1, const char *a2, ...)
{
  return _[a1 settings];
}

id objc_msgSend_shapeLayer(void *a1, const char *a2, ...)
{
  return _[a1 shapeLayer];
}

id objc_msgSend_shapeLayerWithEndPoint_(void *a1, const char *a2, ...)
{
  return [a1 shapeLayerWithEndPoint:];
}

id objc_msgSend_shareActionsheet(void *a1, const char *a2, ...)
{
  return _[a1 shareActionsheet];
}

id objc_msgSend_sharedApplication(void *a1, const char *a2, ...)
{
  return _[a1 sharedApplication];
}

id objc_msgSend_showOfferAlertStyleInViewController_withTitle_message_popoverAnchoredAtView_orAnchoredOnBarButtonItem_withCompletion_cancelButtonTitle_cancelHandler_withStyle_showAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showOfferAlertStyleInViewController:withTitle:message:popoverAnchoredAtView:orAnchoredOnBarButtonItem:withCompletion:cancelButtonTitle:cancelHandler:withStyle:showAlert:");
}

id objc_msgSend_showSimpleAlertWithTitle_message_(void *a1, const char *a2, ...)
{
  return [a1 showSimpleAlertWithTitle:message:];
}

id objc_msgSend_showSimpleAlertWithTitle_message_okButtonTitle_sender_(void *a1, const char *a2, ...)
{
  return [a1 showSimpleAlertWithTitle:message:okButtonTitle:sender:];
}

id objc_msgSend_showSimpleAlertWithTitle_message_okButtonTitle_sender_handler_(void *a1, const char *a2, ...)
{
  return [a1 showSimpleAlertWithTitle:message:okButtonTitle:sender:handler:];
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 standardUserDefaults];
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _[a1 state];
}

id objc_msgSend_stringByReplacingCharactersInRange_withString_(void *a1, const char *a2, ...)
{
  return [a1 stringByReplacingCharactersInRange:withString:];
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return [a1 stringByReplacingOccurrencesOfString:withString:];
}

id objc_msgSend_stringByTrimmingCharactersInSet_(void *a1, const char *a2, ...)
{
  return [a1 stringByTrimmingCharactersInSet:];
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 stringWithFormat:];
}

id objc_msgSend_stroke(void *a1, const char *a2, ...)
{
  return _[a1 stroke];
}

id objc_msgSend_substringToIndex_(void *a1, const char *a2, ...)
{
  return [a1 substringToIndex:];
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return [a1 substringWithRange:];
}

id objc_msgSend_superlayer(void *a1, const char *a2, ...)
{
  return _[a1 superlayer];
}

id objc_msgSend_superview(void *a1, const char *a2, ...)
{
  return _[a1 superview];
}

id objc_msgSend_systemBlueColor(void *a1, const char *a2, ...)
{
  return _[a1 systemBlueColor];
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _[a1 text];
}

id objc_msgSend_textRangeFromPosition_toPosition_(void *a1, const char *a2, ...)
{
  return [a1 textRangeFromPosition:toPosition:];
}

id objc_msgSend_tintedImageWithColor_(void *a1, const char *a2, ...)
{
  return [a1 tintedImageWithColor:];
}

id objc_msgSend_transform(void *a1, const char *a2, ...)
{
  return _[a1 transform];
}

id objc_msgSend_transformedMapTypeForType_(void *a1, const char *a2, ...)
{
  return [a1 transformedMapTypeForType];
}

id objc_msgSend_unformatWithPhoneNumber_(void *a1, const char *a2, ...)
{
  return [a1 unformatWithPhoneNumber:];
}

id objc_msgSend_usesMetric(void *a1, const char *a2, ...)
{
  return _[a1 usesMetric];
}

id objc_msgSend_valueWithCATransform3D_(void *a1, const char *a2, ...)
{
  return [a1 valueWithCATransform3D:];
}

id objc_msgSend_visibleMapRect(void *a1, const char *a2, ...)
{
  return _[a1 visibleMapRect];
}

id objc_msgSend_willStartDraggingHandle_(void *a1, const char *a2, ...)
{
  return [a1 willStartDraggingHandle:];
}