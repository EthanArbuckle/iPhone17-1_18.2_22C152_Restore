uint64_t sub_100313080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (**v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  NSString v58;
  id v59;
  uint64_t v60;
  void *v61;
  Class isa;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t KeyPath;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  char v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  void (**v163)(char *, uint64_t);
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char v168;
  unsigned char v169[7];
  unsigned char v170[7];
  char v171;
  char v172;
  unsigned char v173[168];
  unsigned char v174[140];
  long long v175;
  char v176;
  unsigned char v177[7];
  uint64_t v178;
  uint64_t v179;
  char v180;
  unsigned char v181[7];
  char v182;
  unsigned char v183[7];
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char v188;
  unsigned char v189[7];
  char v190;
  unsigned char v191[7];
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  long long v197;
  _OWORD v198[10];

  v164 = a2;
  v3 = type metadata accessor for Calendar.Component();
  v158 = *(void *)(v3 - 8);
  v159 = v3;
  __chkstk_darwin(v3);
  v157 = (char *)&v143 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Calendar();
  v160 = *(void *)(v5 - 8);
  v161 = v5;
  __chkstk_darwin(v5);
  v154 = (char *)&v143 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v7 - 8);
  v156 = (char *)&v143 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = type metadata accessor for Date();
  v155 = *(void *)(v165 - 8);
  __chkstk_darwin(v165);
  v153 = (char *)&v143 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v162 = (char *)&v143 - v11;
  v152 = type metadata accessor for WheelPickerStyle();
  v163 = *(void (***)(char *, uint64_t))(v152 - 8);
  __chkstk_darwin(v152);
  v145 = (char *)&v143 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_1000AFA94(&qword_100956C48);
  v150 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  v14 = (char *)&v143 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_1000AFA94(&qword_100956C50);
  v148 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  v144 = (char *)&v143 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000AFA94(&qword_100956C58);
  v17 = v16 - 8;
  __chkstk_darwin(v16);
  v19 = (char *)&v143 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_1000AFA94(&qword_100956C60) - 8;
  __chkstk_darwin(v149);
  v21 = (void (**)(char *, uint64_t))((char *)&v143 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  v167 = (uint64_t)&v143 - v23;
  LocalizedStringKey.init(stringLiteral:)();
  v197 = *(_OWORD *)(a1 + 32);
  v166 = a1;
  v175 = *(_OWORD *)(a1 + 32);
  v147 = sub_1000AFA94(&qword_10094C330);
  State.projectedValue.getter();
  sub_1000AFA94(&qword_100956C68);
  sub_1003151C0();
  Picker<>.init(_:selection:content:)();
  v24 = v145;
  WheelPickerStyle.init()();
  sub_1000A132C(&qword_100956C78, &qword_100956C48);
  v25 = v144;
  v26 = v146;
  v27 = v152;
  View.pickerStyle<A>(_:)();
  v163[1](v24, v27);
  (*(void (**)(char *, uint64_t))(v150 + 8))(v14, v26);
  LOBYTE(a1) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v36 = v148;
  v37 = v151;
  (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v19, v25, v151);
  v38 = &v19[*(int *)(v17 + 44)];
  *v38 = a1;
  *((void *)v38 + 1) = v29;
  *((void *)v38 + 2) = v31;
  *((void *)v38 + 3) = v33;
  *((void *)v38 + 4) = v35;
  v38[40] = 0;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v25, v37);
  LOBYTE(a1) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  v40 = v39;
  v42 = v41;
  v44 = v43;
  v46 = v45;
  sub_1000AEF2C((uint64_t)v19, (uint64_t)v21, &qword_100956C58);
  v47 = (char *)v21 + *(int *)(v149 + 44);
  *v47 = a1;
  *((void *)v47 + 1) = v40;
  *((void *)v47 + 2) = v42;
  *((void *)v47 + 3) = v44;
  *((void *)v47 + 4) = v46;
  v47[40] = 0;
  sub_10008DB18((uint64_t)v19, &qword_100956C58);
  v163 = v21;
  sub_1000AEEC8((uint64_t)v21, v167, &qword_100956C60);
  v48 = v154;
  static Calendar.current.getter();
  v50 = v157;
  v49 = v158;
  v51 = v159;
  (*(void (**)(char *, void, uint64_t))(v158 + 104))(v157, enum case for Calendar.Component.day(_:), v159);
  v198[0] = v197;
  State.wrappedValue.getter();
  v52 = v153;
  Date.init()();
  v53 = (uint64_t)v156;
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  v54 = v165;
  v55 = v155;
  v56 = v155 + 8;
  v153 = *(char **)(v155 + 8);
  ((void (*)(char *, uint64_t))v153)(v52, v165);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
  (*(void (**)(char *, uint64_t))(v160 + 8))(v48, v161);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54) == 1)
  {
    sub_10008DB18(v53, (uint64_t *)&unk_10095B890);
    sub_10031522C(&v175);
  }
  else
  {
    v161 = v56;
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v162, v53, v54);
    v57 = [self mainBundle];
    v58 = String._bridgeToObjectiveC()();
    v59 = [v57 localizedStringForKey:v58 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();

    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = xmmword_1007509E0;
    if (qword_10094A958 != -1) {
      swift_once();
    }
    v61 = (void *)qword_100956BE0;
    isa = Date._bridgeToObjectiveC()().super.isa;
    v63 = [v61 stringFromDate:isa];

    v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v66 = v65;

    *(void *)(v60 + 56) = &type metadata for String;
    *(void *)(v60 + 64) = sub_1000AA64C();
    *(void *)(v60 + 32) = v64;
    *(void *)(v60 + 40) = v66;
    v67 = String.init(format:_:)();
    v69 = v68;
    swift_bridgeObjectRelease();
    *(void *)&v198[0] = v67;
    *((void *)&v198[0] + 1) = v69;
    sub_1000A06D0();
    v70 = Text.init<A>(_:)();
    v72 = v71;
    v74 = v73 & 1;
    static Font.body.getter();
    v75 = Text.font(_:)();
    v77 = v76;
    v79 = v78;
    swift_release();
    LOBYTE(v63) = v79 & 1;
    sub_1000A06C0(v70, v72, v74);
    swift_bridgeObjectRelease();
    static Font.Weight.regular.getter();
    v80 = Text.fontWeight(_:)();
    v82 = v81;
    v84 = v83;
    v86 = v85;
    sub_1000A06C0(v75, v77, (char)v63);
    swift_bridgeObjectRelease();
    KeyPath = swift_getKeyPath();
    LOBYTE(v63) = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    v89 = v88;
    v91 = v90;
    v93 = v92;
    v95 = v94;
    LOBYTE(v75) = static Edge.Set.bottom.getter();
    EdgeInsets.init(_all:)();
    v97 = v96;
    v99 = v98;
    v101 = v100;
    v103 = v102;
    v172 = v84 & 1;
    v171 = 0;
    v168 = 0;
    ((void (*)(char *, uint64_t))v153)(v162, v165);
    *(_DWORD *)v177 = v198[0];
    *(_DWORD *)&v177[3] = *(_DWORD *)((char *)v198 + 3);
    *(_DWORD *)v181 = *(_DWORD *)v174;
    *(_DWORD *)&v181[3] = *(_DWORD *)&v174[3];
    *(_DWORD *)v183 = *(_DWORD *)v173;
    *(_DWORD *)&v183[3] = *(_DWORD *)&v173[3];
    *(_DWORD *)&v189[3] = *(_DWORD *)&v170[3];
    *(_DWORD *)v189 = *(_DWORD *)v170;
    *(_DWORD *)&v191[3] = *(_DWORD *)&v169[3];
    *(_DWORD *)v191 = *(_DWORD *)v169;
    *(void *)&v175 = v80;
    *((void *)&v175 + 1) = v82;
    v176 = v172;
    v178 = v86;
    v179 = KeyPath;
    v180 = 1;
    v182 = (char)v63;
    v184 = v89;
    v185 = v91;
    v186 = v93;
    v187 = v95;
    v188 = v171;
    v190 = v75;
    v192 = v97;
    v193 = v99;
    v194 = v101;
    v195 = v103;
    v196 = v168;
    ASFriendListDisplayMode.id.getter(&v175);
  }
  sub_1000AEEC8((uint64_t)&v175, (uint64_t)v198, &qword_100956C80);
  LocalizedStringKey.init(stringLiteral:)();
  v104 = Text.init(_:tableName:bundle:comment:)();
  v106 = v105;
  v108 = v107 & 1;
  static Font.body.getter();
  v109 = Text.font(_:)();
  v111 = v110;
  v113 = v112;
  swift_release();
  v114 = v113 & 1;
  sub_1000A06C0(v104, v106, v108);
  swift_bridgeObjectRelease();
  static Font.Weight.regular.getter();
  v115 = Text.fontWeight(_:)();
  v117 = v116;
  v119 = v118 & 1;
  sub_1000A06C0(v109, v111, v114);
  swift_bridgeObjectRelease();
  *(void *)&v175 = static Color.secondary.getter();
  v165 = Text.foregroundStyle<A>(_:)();
  v166 = v120;
  v122 = v121;
  v124 = v123 & 1;
  sub_1000A06C0(v115, v117, v119);
  swift_release();
  swift_bridgeObjectRelease();
  v125 = swift_getKeyPath();
  LODWORD(v162) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  v127 = v126;
  v129 = v128;
  v131 = v130;
  v133 = v132;
  v134 = v167;
  v135 = (uint64_t)v163;
  sub_1000AEF2C(v167, (uint64_t)v163, &qword_100956C60);
  sub_1000AEEC8((uint64_t)v198, (uint64_t)v173, &qword_100956C80);
  v136 = v164;
  sub_1000AEF2C(v135, v164, &qword_100956C60);
  v137 = sub_1000AFA94(&qword_100956C88);
  v138 = v136 + *(int *)(v137 + 48);
  sub_1000AEEC8((uint64_t)v173, (uint64_t)v174, &qword_100956C80);
  sub_1000AEEC8((uint64_t)v174, v138, &qword_100956C80);
  v139 = v136 + *(int *)(v137 + 64);
  v141 = v165;
  v140 = v166;
  *(void *)v139 = v165;
  *(void *)(v139 + 8) = v122;
  *(unsigned char *)(v139 + 16) = v124;
  *(void *)(v139 + 24) = v140;
  *(void *)(v139 + 32) = v125;
  *(unsigned char *)(v139 + 40) = 1;
  *(unsigned char *)(v139 + 48) = (_BYTE)v162;
  *(void *)(v139 + 56) = v127;
  *(void *)(v139 + 64) = v129;
  *(void *)(v139 + 72) = v131;
  *(void *)(v139 + 80) = v133;
  *(unsigned char *)(v139 + 88) = 0;
  sub_100315250((uint64_t)v174, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10029432C);
  sub_1000A1750(v141, v122, v124);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10008DB18(v134, &qword_100956C60);
  sub_1000A06C0(v141, v122, v124);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000AEEC8((uint64_t)v173, (uint64_t)&v175, &qword_100956C80);
  sub_100315250((uint64_t)&v175, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10029437C);
  return sub_10008DB18(v135, &qword_100956C60);
}

uint64_t sub_100313F70()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_10031401C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  id v4 = [self mainBundle];
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 localizedStringForKey:v5 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1007509E0;
  *(void *)(v7 + 56) = &type metadata for Int;
  *(void *)(v7 + 64) = &protocol witness table for Int;
  *(void *)(v7 + 32) = v3;
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  sub_1000A06D0();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v9;
  *(unsigned char *)(a2 + 16) = v10 & 1;
  *(void *)(a2 + 24) = v11;
  return result;
}

uint64_t sub_100314168@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v28 = sub_1000AFA94(&qword_100956C30);
  __chkstk_darwin(v28);
  v27 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_100956C38);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v26 - v8;
  uint64_t v10 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_1000AFA94(&qword_10094E148);
  uint64_t v29 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v26 - v15;
  static ToolbarItemPlacement.topBarTrailing.getter();
  v32 = a1;
  sub_1000AFA94(&qword_10094E150);
  sub_1000A132C(&qword_10094E158, &qword_10094E150);
  v30 = v16;
  ToolbarItem<>.init(placement:content:)();
  if (a1[9])
  {
    uint64_t v20 = static ToolbarItemPlacement.topBarLeading.getter();
    v26 = v9;
    __chkstk_darwin(v20);
    *(&v26 - 2) = a1;
    ToolbarItem<>.init(placement:content:)();
    uint64_t v9 = v26;
    uint64_t v21 = sub_1000A132C(&qword_10094E160, &qword_10094E148);
    static ToolbarContentBuilder.buildBlock<A>(_:)();
    uint64_t v22 = sub_1000AFA94(&qword_100956C40);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v6, 0, 1, v22);
    uint64_t v33 = v11;
    uint64_t v34 = v21;
    swift_getOpaqueTypeConformance2();
    static ToolbarContentBuilder.buildIf<A>(_:)();
    sub_10008DB18((uint64_t)v6, &qword_100956C38);
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v11);
  }
  else
  {
    uint64_t v17 = sub_1000AFA94(&qword_100956C40);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v6, 1, 1, v17);
    uint64_t v18 = sub_1000A132C(&qword_10094E160, &qword_10094E148);
    uint64_t v33 = v11;
    uint64_t v34 = v18;
    swift_getOpaqueTypeConformance2();
    static ToolbarContentBuilder.buildIf<A>(_:)();
    sub_10008DB18((uint64_t)v6, &qword_100956C38);
    uint64_t v19 = v29;
  }
  uint64_t v23 = (uint64_t)&v27[*(int *)(v28 + 48)];
  v24 = v30;
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v27, v30, v11);
  sub_1000AEF2C((uint64_t)v9, v23, &qword_100956C38);
  TupleToolbarContent.init(_:)();
  sub_10008DB18((uint64_t)v9, &qword_100956C38);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v24, v11);
}

uint64_t sub_100314664()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v41 = *(void *)(v1 - 8);
  uint64_t v42 = v1;
  __chkstk_darwin(v1);
  v39 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for DispatchQoS();
  uint64_t v38 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  v37 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Calendar.Component();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Calendar();
  uint64_t v43 = *(void *)(v8 - 8);
  uint64_t v44 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v11 - 8);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v45 = (char *)&v35 - v19;
  static Calendar.current.getter();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Calendar.Component.day(_:), v4);
  long long v52 = *(_OWORD *)(v0 + 32);
  uint64_t v46 = v0;
  long long aBlock = *(_OWORD *)(v0 + 32);
  sub_1000AFA94(&qword_10094C330);
  State.wrappedValue.getter();
  Date.init()();
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  v36 = *(void (**)(char *, uint64_t))(v15 + 8);
  v36(v17, v14);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v10, v44);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    uint64_t v20 = sub_10008DB18((uint64_t)v13, (uint64_t *)&unk_10095B890);
    return (*(uint64_t (**)(uint64_t))(v46 + 16))(v20);
  }
  else
  {
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    uint64_t v23 = v45;
    v22(v45, v13, v14);
    sub_1000DF004();
    uint64_t v44 = v15 + 8;
    uint64_t v43 = static OS_dispatch_queue.main.getter();
    v24 = (_OWORD *)v46;
    v25 = *(void **)v46;
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v23, v14);
    unint64_t v26 = (*(unsigned __int8 *)(v15 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v27 = (char *)swift_allocObject();
    long long v28 = v24[1];
    *((_OWORD *)v27 + 1) = *v24;
    *((_OWORD *)v27 + 2) = v28;
    *((_OWORD *)v27 + 3) = v24[2];
    v22(&v27[v26], v17, v14);
    v50 = sub_10031515C;
    v51 = v27;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    v48 = sub_100070394;
    v49 = &unk_1008C1728;
    uint64_t v29 = _Block_copy(&aBlock);
    id v30 = v25;
    swift_retain();
    sub_1000E2358((uint64_t)&v52);
    swift_release();
    uint64_t v31 = v37;
    static DispatchQoS.unspecified.getter();
    *(void *)&long long aBlock = _swiftEmptyArrayStorage;
    sub_100075B54();
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
    v32 = v39;
    uint64_t v33 = v42;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v34 = (void *)v43;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v33);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v31, v40);
    return ((uint64_t (*)(char *, uint64_t))v36)(v45, v14);
  }
}

uint64_t sub_100314CBC(uint64_t a1)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = *(void **)a1;
  long long v7 = *(_OWORD *)(a1 + 32);
  uint64_t v3 = (_OWORD *)swift_allocObject();
  long long v4 = *(_OWORD *)(a1 + 16);
  v3[1] = *(_OWORD *)a1;
  v3[2] = v4;
  v3[3] = *(_OWORD *)(a1 + 32);
  id v5 = v2;
  swift_retain();
  sub_1000E2358((uint64_t)&v7);
  return Button<>.init(_:action:)();
}

uint64_t sub_100314D94(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  [v2 pauseRingsUntilDate:isa completionHandler:0];

  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_100314DF4()
{
  return NavigationStack.init<>(root:)();
}

uint64_t sub_100314F88@<X0>(uint64_t a1@<X8>)
{
  return sub_100312BCC(*(void *)(v1 + 16), a1);
}

uint64_t sub_100314F90@<X0>(uint64_t a1@<X8>)
{
  return sub_100313080(*(void *)(v1 + 16), a1);
}

uint64_t sub_100314F98@<X0>(uint64_t a1@<X8>)
{
  return sub_100314168(*(char **)(v1 + 16), a1);
}

uint64_t sub_100314FA0()
{
  return sub_100314CBC(*(void *)(v0 + 16));
}

uint64_t sub_100314FE4()
{
  return sub_100314CBC(*(void *)(v0 + 16));
}

uint64_t sub_100315030()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_10031505C()
{
  return sub_100314664();
}

uint64_t sub_100315080()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_10031515C()
{
  type metadata accessor for Date();

  return sub_100314D94(v0 + 16);
}

unint64_t sub_1003151C0()
{
  unint64_t result = qword_100956C70;
  if (!qword_100956C70)
  {
    sub_1000A1370(&qword_100956C68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956C70);
  }
  return result;
}

double sub_10031522C(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 121) = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_100315250(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 136);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), v4);
  return a1;
}

unint64_t sub_1003152BC()
{
  unint64_t result = qword_100956C98;
  if (!qword_100956C98)
  {
    sub_1000A1370(&qword_100956C90);
    sub_1001C5780();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956C98);
  }
  return result;
}

uint64_t sub_100315338()
{
  return sub_1000A132C(&qword_100956CA0, &qword_100956CA8);
}

uint64_t *sub_100315374(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    *(_WORD *)uint64_t v10 = *(_WORD *)((char *)a2 + v9);
    uint64_t v12 = *(uint64_t *)((char *)a2 + v9 + 16);
    *((void *)v10 + 1) = *(uint64_t *)((char *)a2 + v9 + 8);
    *((void *)v10 + 2) = v12;
    uint64_t v13 = type metadata accessor for TrendListMetric();
    uint64_t v14 = *(int *)(v13 + 28);
    uint64_t v29 = &v10[v14];
    uint64_t v15 = &v11[v14];
    uint64_t v16 = type metadata accessor for AttributedString();
    uint64_t v30 = a3;
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v29, v15, v16);
    uint64_t v18 = *(int *)(v13 + 32);
    uint64_t v19 = &v10[v18];
    uint64_t v20 = &v11[v18];
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    uint64_t v22 = *(int *)(v30 + 24);
    uint64_t v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    long long v25 = *(_OWORD *)((char *)a2 + v22 + 24);
    *(_OWORD *)((char *)a1 + v22 + 24) = v25;
    uint64_t v26 = v25;
    v27 = **(void (***)(char *, char *, uint64_t))(v25 - 8);
    swift_bridgeObjectRetain();
    v27(v23, v24, v26);
    *(uint64_t *)((char *)a1 + *(int *)(v30 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v30 + 28));
  }
  swift_retain();
  return a1;
}

uint64_t sub_1003155B0(uint64_t a1, uint64_t a2)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + *(int *)(type metadata accessor for TrendListMetric() + 28);
  uint64_t v7 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + *(int *)(a2 + 24));

  return swift_release();
}

void *sub_1003156D8(void *a1, void *a2, uint64_t a3)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(_WORD *)uint64_t v8 = *(_WORD *)((char *)a2 + v7);
  uint64_t v10 = *(void *)((char *)a2 + v7 + 16);
  *((void *)v8 + 1) = *(void *)((char *)a2 + v7 + 8);
  *((void *)v8 + 2) = v10;
  uint64_t v11 = type metadata accessor for TrendListMetric();
  uint64_t v12 = *(int *)(v11 + 28);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = type metadata accessor for AttributedString();
  uint64_t v28 = a3;
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  uint64_t v17 = *(int *)(v11 + 32);
  uint64_t v18 = &v8[v17];
  uint64_t v19 = &v9[v17];
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = v20;
  uint64_t v21 = *(int *)(v28 + 24);
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  long long v24 = *(_OWORD *)((char *)a2 + v21 + 24);
  *(_OWORD *)((char *)a1 + v21 + 24) = v24;
  uint64_t v25 = v24;
  uint64_t v26 = **(void (***)(char *, char *, uint64_t))(v24 - 8);
  swift_bridgeObjectRetain();
  v26(v22, v23, v25);
  *(void *)((char *)a1 + *(int *)(v28 + 28)) = *(void *)((char *)a2 + *(int *)(v28 + 28));
  swift_retain();
  return a1;
}

void *sub_1003158C8(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *uint64_t v8 = *((unsigned char *)a2 + v7);
  v8[1] = *((unsigned char *)a2 + v7 + 1);
  *((void *)v8 + 1) = *(void *)((char *)a2 + v7 + 8);
  *((void *)v8 + 2) = *(void *)((char *)a2 + v7 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for TrendListMetric();
  uint64_t v11 = *(int *)(v10 + 28);
  uint64_t v12 = &v8[v11];
  uint64_t v13 = &v9[v11];
  uint64_t v14 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = *(int *)(v10 + 32);
  uint64_t v16 = &v8[v15];
  uint64_t v17 = &v9[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10009EDF0((void *)((char *)a1 + a3[6]), (void *)((char *)a2 + a3[6]));
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_100315A98(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(_WORD *)uint64_t v9 = *(_WORD *)&a2[v8];
  *(_OWORD *)(v9 + 8) = *(_OWORD *)&a2[v8 + 8];
  uint64_t v11 = type metadata accessor for TrendListMetric();
  uint64_t v12 = *(int *)(v11 + 28);
  uint64_t v13 = &v9[v12];
  uint64_t v14 = &v10[v12];
  uint64_t v15 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  *(_OWORD *)&v9[*(int *)(v11 + 32)] = *(_OWORD *)&v10[*(int *)(v11 + 32)];
  uint64_t v16 = a3[6];
  uint64_t v17 = a3[7];
  uint64_t v18 = &a1[v16];
  uint64_t v19 = &a2[v16];
  *((void *)v18 + 4) = *((void *)v19 + 4);
  long long v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  *(void *)&a1[v17] = *(void *)&a2[v17];
  return a1;
}

char *sub_100315C10(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    uint64_t v6 = sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(_WORD *)uint64_t v9 = *(_WORD *)&a2[v8];
  uint64_t v11 = *(void *)&a2[v8 + 16];
  *((void *)v9 + 1) = *(void *)&a2[v8 + 8];
  *((void *)v9 + 2) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = type metadata accessor for TrendListMetric();
  uint64_t v13 = *(int *)(v12 + 28);
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  uint64_t v16 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = *(int *)(v12 + 32);
  uint64_t v18 = &v9[v17];
  uint64_t v19 = &v10[v17];
  uint64_t v21 = *(void *)v19;
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = v21;
  *((void *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[6];
  uint64_t v23 = &a1[v22];
  long long v24 = &a2[v22];
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&a1[v22]);
  long long v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *((void *)v23 + 4) = *((void *)v24 + 4);
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_release();
  return a1;
}

uint64_t sub_100315DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100315DE0);
}

uint64_t sub_100315DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C590);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for TrendListMetric();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_100315EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100315F10);
}

uint64_t sub_100315F10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1000AFA94(&qword_10094C590);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for TrendListMetric();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_100316028()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100316044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v143 = a2;
  uint64_t v142 = type metadata accessor for AttributedString();
  uint64_t v135 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  v134 = &v128[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v146 = type metadata accessor for DynamicTypeSize();
  uint64_t v151 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  v133 = &v128[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for TrendArrowIndicatorViewRepresentable();
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = &v128[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000AFA94(&qword_100956D50);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  v141 = &v128[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v147 = sub_1000AFA94(&qword_100956D58) - 8;
  __chkstk_darwin(v147);
  v149 = &v128[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v150 = &v128[-v14];
  uint64_t v15 = (int *)type metadata accessor for VerticalLayoutTrendView();
  uint64_t v17 = (void *)(a1 + v15[6]);
  uint64_t v144 = a1 + v15[5];
  uint64_t v16 = v144;
  v145 = v17;
  uint64_t v18 = v17[3];
  uint64_t v19 = v17[4];
  sub_10007E4EC(v17, v18);
  LOBYTE(v18) = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 24))(v18, v19) & 1;
  uint64_t v20 = *(void *)(a1 + v15[7]);
  uint64_t v148 = a1;
  sub_100316D20(v16, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
  v8[*(int *)(v6 + 28)] = v18;
  *(void *)&v8[*(int *)(v6 + 32)] = v20;
  swift_retain();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v21 = v141;
  sub_100316D20((uint64_t)v8, (uint64_t)v141, (uint64_t (*)(void))type metadata accessor for TrendArrowIndicatorViewRepresentable);
  uint64_t v22 = &v21[*(int *)(v10 + 44)];
  long long v23 = v181;
  *uint64_t v22 = v180;
  v22[1] = v23;
  v22[2] = v182;
  sub_100316D88((uint64_t)v8);
  LOBYTE(v20) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  v32 = v149;
  sub_1000AEF2C((uint64_t)v21, (uint64_t)v149, &qword_100956D50);
  uint64_t v33 = &v32[*(int *)(v147 + 44)];
  *uint64_t v33 = v20;
  *((void *)v33 + 1) = v25;
  *((void *)v33 + 2) = v27;
  *((void *)v33 + 3) = v29;
  *((void *)v33 + 4) = v31;
  v33[40] = 0;
  sub_10008DB18((uint64_t)v21, &qword_100956D50);
  sub_100316DE4((uint64_t)v32, (uint64_t)v150);
  uint64_t v34 = v145[3];
  uint64_t v35 = v145[4];
  v36 = v145;
  sub_10007E4EC(v145, v34);
  uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 16))(v34, v35);
  uint64_t v39 = v38;
  LODWORD(v21) = v40;
  uint64_t v41 = v133;
  sub_100092088((uint64_t)v133);
  sub_100092DA4((uint64_t)v41, v37, v39, (int)v21);
  sub_1000917F8(v37, v39, (char)v21);
  uint64_t v42 = *(void (**)(unsigned char *, uint64_t))(v151 + 8);
  v151 += 8;
  uint64_t v147 = (uint64_t)v42;
  uint64_t v43 = v146;
  v42(v41, v146);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v141 = v183;
  int v140 = v184;
  uint64_t v139 = v185;
  int v138 = v186;
  uint64_t v136 = v188;
  uint64_t v137 = v187;
  uint64_t v44 = *(void *)(v144 + 16);
  v162[0] = *(void *)(v144 + 8);
  v162[1] = v44;
  sub_1000A06D0();
  swift_bridgeObjectRetain();
  uint64_t v45 = Text.init<A>(_:)();
  uint64_t v130 = v46;
  uint64_t v131 = v45;
  uint64_t v132 = v47;
  int v129 = v48 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v50 = swift_getKeyPath();
  LOBYTE(v21) = static Edge.Set.trailing.getter();
  v51 = v36;
  uint64_t v52 = v36[3];
  uint64_t v53 = v51[4];
  sub_10007E4EC(v51, v52);
  uint64_t v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 16))(v52, v53);
  uint64_t v56 = v55;
  LODWORD(v16) = v57;
  sub_100092088((uint64_t)v41);
  sub_100092DA4((uint64_t)v41, v54, v56, v16);
  sub_1000917F8(v54, v56, v16);
  ((void (*)(unsigned char *, uint64_t))v147)(v41, v43);
  EdgeInsets.init(_all:)();
  uint64_t v59 = v130;
  uint64_t v58 = v131;
  uint64_t v210 = v131;
  uint64_t v211 = v130;
  LOBYTE(v56) = v129;
  char v212 = v129;
  uint64_t v213 = v132;
  uint64_t v214 = KeyPath;
  uint64_t v215 = 0x3FE8000000000000;
  uint64_t v216 = v50;
  uint64_t v217 = 1;
  char v218 = 0;
  char v219 = (char)v21;
  uint64_t v220 = v60;
  uint64_t v221 = v61;
  uint64_t v222 = v62;
  uint64_t v223 = v63;
  char v224 = 0;
  static Alignment.leading.getter();
  sub_1004DD5B0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v178, 0.0, 1, 0.0, 1);
  sub_1000A06C0(v58, v59, v56);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  long long v175 = v178[12];
  long long v176 = v178[13];
  uint64_t v177 = v179;
  long long v171 = v178[8];
  long long v172 = v178[9];
  long long v174 = v178[11];
  long long v173 = v178[10];
  long long v167 = v178[4];
  long long v168 = v178[5];
  long long v170 = v178[7];
  long long v169 = v178[6];
  long long v163 = v178[0];
  long long v164 = v178[1];
  long long v166 = v178[3];
  long long v165 = v178[2];
  uint64_t v64 = type metadata accessor for TrendListMetric();
  v65 = (char *)v144;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v135 + 16))(v134, v144 + *(int *)(v64 + 28), v142);
  uint64_t v66 = Text.init(_:)();
  uint64_t v68 = v67;
  LOBYTE(v21) = v69 & 1;
  v70 = (char *)sub_1005F2334(*v65);
  id v71 = *(id *)&v70[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

  v162[0] = Color.init(uiColor:)();
  uint64_t v142 = Text.foregroundStyle<A>(_:)();
  uint64_t v135 = v72;
  uint64_t v144 = v73;
  LODWORD(v134) = v74 & 1;
  sub_1000A06C0(v66, v68, (char)v21);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v132 = swift_getKeyPath();
  uint64_t v131 = swift_getKeyPath();
  LODWORD(v130) = static Edge.Set.bottom.getter();
  v75 = v145;
  uint64_t v76 = v145[3];
  uint64_t v77 = v145[4];
  sub_10007E4EC(v145, v76);
  uint64_t v78 = (*(uint64_t (**)(uint64_t, uint64_t))(v77 + 16))(v76, v77);
  uint64_t v80 = v79;
  LODWORD(v56) = v81;
  sub_100092088((uint64_t)v41);
  sub_100092DA4((uint64_t)v41, v78, v80, v56);
  sub_1000917F8(v78, v80, v56);
  uint64_t v82 = v146;
  v83 = (void (*)(unsigned char *, uint64_t))v147;
  ((void (*)(unsigned char *, uint64_t))v147)(v41, v146);
  EdgeInsets.init(_all:)();
  uint64_t v85 = v84;
  uint64_t v87 = v86;
  uint64_t v89 = v88;
  uint64_t v91 = v90;
  int v129 = static Edge.Set.trailing.getter();
  uint64_t v92 = v75[3];
  uint64_t v93 = v75[4];
  sub_10007E4EC(v75, v92);
  uint64_t v94 = (*(uint64_t (**)(uint64_t, uint64_t))(v93 + 16))(v92, v93);
  uint64_t v96 = v95;
  LODWORD(v75) = v97;
  sub_100092088((uint64_t)v41);
  sub_100092DA4((uint64_t)v41, v94, v96, (int)v75);
  sub_1000917F8(v94, v96, (char)v75);
  v83(v41, v82);
  EdgeInsets.init(_all:)();
  LOBYTE(v75) = (_BYTE)v134;
  char v155 = (char)v134;
  char v154 = 0;
  char v153 = 0;
  char v152 = 0;
  uint64_t v98 = v142;
  uint64_t v189 = v142;
  uint64_t v99 = v135;
  uint64_t v190 = v135;
  char v191 = (char)v134;
  uint64_t v192 = v144;
  uint64_t v193 = v132;
  uint64_t v194 = 0x3FE8000000000000;
  uint64_t v195 = v131;
  uint64_t v196 = 1;
  char v197 = 0;
  char v198 = v130;
  uint64_t v199 = v85;
  uint64_t v200 = v87;
  uint64_t v201 = v89;
  uint64_t v202 = v91;
  char v203 = 0;
  char v204 = v129;
  uint64_t v205 = v100;
  uint64_t v206 = v101;
  uint64_t v207 = v102;
  uint64_t v208 = v103;
  char v209 = 0;
  static Alignment.leading.getter();
  sub_1004DD780(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v162, 0.0, 1, 0.0, 1);
  sub_1000A06C0(v98, v99, (char)v75);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v104 = v149;
  v105 = v150;
  sub_1000AEF2C((uint64_t)v150, (uint64_t)v149, &qword_100956D58);
  uint64_t v106 = v143;
  sub_1000AEF2C((uint64_t)v104, v143, &qword_100956D58);
  v107 = (int *)sub_1000AFA94(&qword_100956D60);
  uint64_t v108 = v106 + v107[12];
  *(void *)uint64_t v108 = 0;
  *(unsigned char *)(v108 + 8) = 0;
  *(void *)(v108 + 16) = v141;
  *(unsigned char *)(v108 + 24) = v140;
  *(void *)(v108 + 32) = v139;
  *(unsigned char *)(v108 + 40) = v138;
  uint64_t v109 = v136;
  *(void *)(v108 + 48) = v137;
  *(void *)(v108 + 56) = v109;
  uint64_t v110 = v107[16];
  long long v111 = v163;
  long long v112 = v164;
  v156[0] = v163;
  v156[1] = v164;
  long long v113 = v176;
  v156[12] = v175;
  v156[13] = v176;
  long long v114 = v171;
  long long v115 = v172;
  v156[8] = v171;
  v156[9] = v172;
  long long v116 = v174;
  long long v117 = v173;
  v156[10] = v173;
  v156[11] = v174;
  long long v118 = v167;
  long long v119 = v168;
  v156[4] = v167;
  v156[5] = v168;
  long long v120 = v170;
  long long v121 = v169;
  v156[6] = v169;
  v156[7] = v170;
  uint64_t v122 = v106 + v110;
  *(_OWORD *)(v122 + 192) = v175;
  *(_OWORD *)(v122 + 208) = v113;
  *(_OWORD *)(v122 + 128) = v114;
  *(_OWORD *)(v122 + 144) = v115;
  *(_OWORD *)(v122 + 160) = v117;
  *(_OWORD *)(v122 + 176) = v116;
  *(_OWORD *)(v122 + 64) = v118;
  *(_OWORD *)(v122 + 80) = v119;
  *(_OWORD *)(v122 + 96) = v121;
  *(_OWORD *)(v122 + 112) = v120;
  long long v123 = v166;
  long long v124 = v166;
  *(_OWORD *)uint64_t v122 = v111;
  *(_OWORD *)(v122 + 16) = v112;
  long long v125 = v165;
  *(_OWORD *)(v122 + 32) = v165;
  *(_OWORD *)(v122 + 48) = v124;
  uint64_t v157 = v177;
  *(void *)(v122 + 224) = v177;
  v126 = (void *)(v106 + v107[20]);
  v156[2] = v125;
  v156[3] = v123;
  memcpy(v158, v162, sizeof(v158));
  memcpy(v126, v162, 0x118uLL);
  sub_100316E5C((uint64_t)v156);
  sub_100316E5C((uint64_t)v158);
  sub_10008DB18((uint64_t)v105, &qword_100956D58);
  memcpy(v159, v162, sizeof(v159));
  sub_100316EB8((uint64_t)v159);
  v160[12] = v175;
  v160[13] = v176;
  uint64_t v161 = v177;
  v160[8] = v171;
  v160[9] = v172;
  v160[11] = v174;
  v160[10] = v173;
  v160[4] = v167;
  v160[5] = v168;
  v160[7] = v170;
  v160[6] = v169;
  v160[0] = v163;
  v160[1] = v164;
  v160[3] = v166;
  v160[2] = v165;
  sub_100316EB8((uint64_t)v160);
  return sub_10008DB18((uint64_t)v104, &qword_100956D58);
}

uint64_t sub_100316CD8@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.leading.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = sub_1000AFA94(&qword_100956D48);
  return sub_100316044(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_100316D20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100316D88(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TrendArrowIndicatorViewRepresentable();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100316DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100956D58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100316E5C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100316EB8(uint64_t a1)
{
  return a1;
}

unint64_t sub_100316F18()
{
  unint64_t result = qword_100956D68;
  if (!qword_100956D68)
  {
    sub_1000A1370(&qword_100956D70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956D68);
  }
  return result;
}

id sub_100316F74(uint64_t a1)
{
  return sub_100317020(a1, &UIFontTextStyleBody, &qword_100956D78);
}

void sub_100316F88()
{
  id v0 = [self keyColors];
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = [v0 nonGradientTextColor];
  }
  else
  {
    id v2 = 0;
  }
  qword_100956D80 = (uint64_t)v2;
}

id sub_100316FF8(uint64_t a1)
{
  return sub_100317020(a1, &UIFontTextStyleHeadline, &qword_100956D88);
}

id sub_10031700C(uint64_t a1)
{
  return sub_100317020(a1, &UIFontTextStyleBody, &qword_100956D90);
}

id sub_100317020(uint64_t a1, void *a2, void *a3)
{
  id result = [self _preferredFontForTextStyle:*a2 variant:256];
  *a3 = result;
  return result;
}

char *sub_100317070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  *(_OWORD *)&v3[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_configuration] = xmmword_100750CF0;
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_insetContentView;
  id v7 = objc_allocWithZone((Class)UIView);
  uint64_t v8 = v3;
  id v9 = [v7 initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v3[v6] = v9;
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_activeViews] = _swiftEmptyArrayStorage;
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_videoView] = 0;
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_observers] = _swiftEmptyArrayStorage;

  if (a3)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  v20.receiver = v8;
  v20.super_class = (Class)type metadata accessor for TrendsOnBoardingActivityTile();
  uint64_t v11 = (char *)[super initWithStyle:a1 reuseIdentifier:v10];

  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_insetContentView;
  uint64_t v13 = *(void **)&v11[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_insetContentView];
  uint64_t v14 = v11;
  id v15 = v13;
  id v16 = sub_10049E184();
  [v15 setBackgroundColor:v16];

  id v17 = [*(id *)&v11[v12] layer];
  [v17 setCornerRadius:sub_10049E1B0()];

  id v18 = [v14 contentView];
  [v18 addSubview:*(void *)&v11[v12]];

  sub_100317488();
  return v14;
}

id sub_1003172CC()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_observers];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = self;
    uint64_t v4 = v1 + 32;
    swift_bridgeObjectRetain_n();
    do
    {
      sub_10008F484(v4, (uint64_t)v8);
      id v5 = [v3 defaultCenter];
      sub_10007E4EC(v8, v8[3]);
      [v5 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];

      swift_unknownObjectRelease();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v8);
      v4 += 32;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
  }
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for TrendsOnBoardingActivityTile();
  return [super dealloc];
}

void sub_100317488()
{
  swift_getObjectType();
  uint64_t v22 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100751160;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_insetContentView];
  id v3 = [v2 topAnchor];
  id v4 = [v0 contentView];
  id v5 = [v4 topAnchor];

  id v6 = [v3 constraintEqualToAnchor:v5 constant:sub_10049E1C0()];
  *(void *)(v1 + 32) = v6;
  id v7 = [v2 leadingAnchor];
  id v8 = [v0 contentView];
  id v9 = [v8 leadingAnchor];

  sub_10049E1C0();
  id v11 = [v7 constraintEqualToAnchor:v9 constant:v10];

  *(void *)(v1 + 40) = v11;
  id v12 = [v2 trailingAnchor];
  id v13 = [v0 contentView];
  id v14 = [v13 trailingAnchor];

  sub_10049E1C0();
  id v16 = [v12 constraintEqualToAnchor:v14 constant:-v15];

  *(void *)(v1 + 48) = v16;
  id v17 = [v2 bottomAnchor];
  id v18 = [v0 contentView];
  id v19 = [v18 bottomAnchor];

  sub_10049E1C0();
  id v21 = [v17 constraintEqualToAnchor:v19 constant:-v20];

  *(void *)(v1 + 56) = v21;
  specialized Array._endMutation()();
  sub_1001ABF94();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v22 activateConstraints:isa];
}

id sub_100317790(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_activeViews);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain_n();
    id result = (id)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v6 = (uint64_t)result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain_n();
    if (!v6) {
      goto LABEL_10;
    }
  }
  if (v6 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v9 = *(id *)(v5 + 8 * i + 32);
    }
    double v10 = v9;
    [v9 removeFromSuperview];
  }
LABEL_10:
  swift_bridgeObjectRelease_n();
  id v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_configuration);
  uint64_t v12 = *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_configuration);
  *id v11 = a1;
  v11[1] = a2;
  sub_1003192E0(a1);
  id result = (id)sub_1002D5734(v12);
  if (a1 != 1)
  {
    if (a1 == 2)
    {
      return (id)sub_100318598();
    }
    else
    {
      return sub_100317920();
    }
  }
  return result;
}

id sub_100317920()
{
  uint64_t v1 = v0;
  id v2 = objc_allocWithZone((Class)type metadata accessor for TrendsSplashVideoView());
  id result = sub_10003FDF0();
  if (result)
  {
    id v4 = result;
    [result setTranslatesAutoresizingMaskIntoConstraints:0];
    unint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_videoView);
    uint64_t v74 = v1;
    *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_videoView) = v4;
    uint64_t v6 = v4;

    id v7 = [objc_allocWithZone((Class)UILabel) init];
    id v8 = self;
    id v9 = [v8 mainBundle];
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [v9 localizedStringForKey:v10 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v12 = String._bridgeToObjectiveC()();
    [v7 setText:v12];
    swift_bridgeObjectRelease();

    id v13 = [self labelColor];
    id v14 = (void *)UILabel.withTextColor(_:)();

    [v14 setLineBreakMode:0];
    [v14 setNumberOfLines:0];
    if (qword_10094A960 != -1) {
      swift_once();
    }
    [v14 setFont:qword_100956D78];
    [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v15 = [objc_allocWithZone((Class)UIButton) init];
    id v16 = [v8 mainBundle];
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [v16 localizedStringForKey:v17 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v19 = String._bridgeToObjectiveC()();
    [v15 setTitle:v19 forState:[v15 state]];
    swift_bridgeObjectRelease();

    uint64_t v20 = qword_100956D78;
    id v21 = [v15 titleLabel];
    [v21 setFont:v20];

    if (qword_10094A968 != -1) {
      swift_once();
    }
    objc_msgSend(v15, "setTitleColor:forState:", qword_100956D80, objc_msgSend(v15, "state"));
    [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v22 = [v6 window];

    long long v23 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp21TrendsSplashVideoView_player];
    if (v23)
    {
      uint64_t v24 = &selRef_pause;
      if (v22) {
        uint64_t v24 = &selRef_play;
      }
      [v23 *v24];
    }
    [v15 addTarget:v74 action:"didTapGetStartedButton" forControlEvents:64];
    uint64_t v25 = *(void **)(v74 + OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_insetContentView);
    [v25 addSubview:v6];
    [v25 addSubview:v14];
    [v25 addSubview:v15];
    id v72 = self;
    sub_1000AFA94((uint64_t *)&unk_10095B850);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_10075E040;
    id v27 = [v6 topAnchor];
    id v28 = [v25 topAnchor];
    id v29 = [v27 constraintEqualToAnchor:v28];

    *(void *)(v26 + 32) = v29;
    id v30 = [v6 centerXAnchor];
    id v31 = [v25 centerXAnchor];
    id v32 = [v30 constraintEqualToAnchor:v31];

    *(void *)(v26 + 40) = v32;
    id v33 = [v6 heightAnchor];
    id v34 = [v33 constraintEqualToConstant:122.0];

    *(void *)(v26 + 48) = v34;
    id v35 = [v14 topAnchor];
    id v36 = [v6 bottomAnchor];
    id v37 = [v35 constraintEqualToAnchor:v36 constant:4.0];

    *(void *)(v26 + 56) = v37;
    id v38 = [v14 leadingAnchor];
    id v39 = [v25 leadingAnchor];
    id v40 = [v38 constraintEqualToAnchor:v39 constant:16.0];

    *(void *)(v26 + 64) = v40;
    id v41 = [v14 trailingAnchor];
    id v42 = [v25 trailingAnchor];
    id v43 = [v41 constraintEqualToAnchor:v42 constant:-16.0];

    *(void *)(v26 + 72) = v43;
    id v44 = [v15 topAnchor];
    id v45 = [v14 bottomAnchor];
    id v46 = [v44 constraintEqualToAnchor:v45];

    *(void *)(v26 + 80) = v46;
    id v47 = [v15 leadingAnchor];
    id v48 = [v25 leadingAnchor];
    id v49 = [v47 constraintEqualToAnchor:v48 constant:16.0];

    *(void *)(v26 + 88) = v49;
    id v50 = [v15 bottomAnchor];
    id v51 = [v25 bottomAnchor];
    id v52 = [v50 constraintEqualToAnchor:v51 constant:-10.0];

    *(void *)(v26 + 96) = v52;
    specialized Array._endMutation()();
    sub_1001ABF94();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v72 activateConstraints:isa];

    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_100752650;
    *(void *)(v54 + 32) = v6;
    *(void *)(v54 + 40) = v14;
    *(void *)(v54 + 48) = v15;
    long long aBlock = (void **)v54;
    specialized Array._endMutation()();
    *(void *)(v74 + OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_activeViews) = aBlock;
    uint64_t v55 = v6;
    id v73 = v14;
    id v71 = v15;
    swift_bridgeObjectRelease();
    uint64_t v56 = self;
    id v57 = [v56 defaultCenter];
    if (qword_10094A878 != -1) {
      swift_once();
    }
    uint64_t v58 = qword_100997B08;
    uint64_t v59 = self;
    id v60 = [v59 mainQueue];
    uint64_t v61 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v79 = sub_100319280;
    uint64_t v80 = v61;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v76 = 1107296256;
    uint64_t v77 = sub_1000711BC;
    uint64_t v78 = &unk_1008C1820;
    uint64_t v62 = _Block_copy(&aBlock);
    swift_release();
    id v63 = [v57 addObserverForName:v58 object:0 queue:v60 usingBlock:v62];
    _Block_release(v62);

    id v64 = [v56 defaultCenter];
    if (qword_10094A880 != -1) {
      swift_once();
    }
    uint64_t v65 = qword_100997B10;
    id v66 = [v59 mainQueue];
    uint64_t v67 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v79 = sub_1003192B0;
    uint64_t v80 = v67;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v76 = 1107296256;
    uint64_t v77 = sub_1000711BC;
    uint64_t v78 = &unk_1008C1848;
    uint64_t v68 = _Block_copy(&aBlock);
    swift_release();
    id v69 = [v64 addObserverForName:v65 object:0 queue:v66 usingBlock:v68];
    _Block_release(v68);

    sub_1000AFA94((uint64_t *)&unk_1009556C0);
    uint64_t v70 = swift_allocObject();
    *(_OWORD *)(v70 + 16) = xmmword_10074E640;
    *(void *)(v70 + 56) = swift_getObjectType();
    *(void *)(v70 + 32) = v63;
    *(void *)(v70 + 88) = swift_getObjectType();
    *(void *)(v70 + 64) = v69;
    *(void *)(v74 + OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_observers) = v70;

    return (id)swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1003184B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  static os_log_type_t.debug.getter();
  id v6 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v8 = (void *)Strong;
    id v9 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp21TrendsSplashVideoView_player);
    id v10 = v9;

    if (v9)
    {
      [v10 *a5];
    }
  }
}

uint64_t sub_100318598()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v1 = self;
  id v2 = [v1 mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 localizedStringForKey:v3 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v5 = String._bridgeToObjectiveC()();
  [v0 setText:v5];
  swift_bridgeObjectRelease();

  id v6 = self;
  id v7 = [v6 labelColor];
  id v8 = (void *)UILabel.withTextColor(_:)();

  [v8 setLineBreakMode:0];
  [v8 setNumberOfLines:0];
  if (qword_10094A970 != -1) {
    swift_once();
  }
  [v8 setFont:qword_100956D88];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v9 = [objc_allocWithZone((Class)UILabel) init];
  id v10 = [v1 mainBundle];
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v10 localizedStringForKey:v11 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v13 = String._bridgeToObjectiveC()();
  [v9 setText:v13];
  swift_bridgeObjectRelease();

  id v14 = [v6 secondaryLabelColor];
  id v15 = (void *)UILabel.withTextColor(_:)();

  [v15 setLineBreakMode:0];
  [v15 setNumberOfLines:0];
  if (qword_10094A978 != -1) {
    swift_once();
  }
  [v15 setFont:qword_100956D90];
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v16 = *(void **)(v43 + OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_insetContentView);
  [v16 addSubview:v8];
  [v16 addSubview:v15];
  id v42 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_100754580;
  id v18 = [v8 topAnchor];
  id v19 = [v16 topAnchor];
  id v20 = [v18 constraintEqualToAnchor:v19 constant:16.0];

  *(void *)(v17 + 32) = v20;
  id v21 = [v8 leadingAnchor];
  id v22 = [v16 leadingAnchor];
  id v23 = [v21 constraintEqualToAnchor:v22 constant:16.0];

  *(void *)(v17 + 40) = v23;
  id v24 = [v8 trailingAnchor];
  id v25 = [v16 trailingAnchor];
  id v26 = [v24 constraintEqualToAnchor:v25 constant:-16.0];

  *(void *)(v17 + 48) = v26;
  id v27 = [v15 topAnchor];
  id v28 = [v8 bottomAnchor];
  id v29 = [v27 constraintEqualToAnchor:v28 constant:4.0];

  *(void *)(v17 + 56) = v29;
  id v30 = [v15 leadingAnchor];
  id v31 = [v16 leadingAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31 constant:16.0];

  *(void *)(v17 + 64) = v32;
  id v33 = [v15 trailingAnchor];
  id v34 = [v16 trailingAnchor];
  id v35 = [v33 constraintEqualToAnchor:v34 constant:-16.0];

  *(void *)(v17 + 72) = v35;
  id v36 = [v15 bottomAnchor];
  id v37 = [v16 bottomAnchor];
  id v38 = [v36 constraintEqualToAnchor:v37 constant:-16.0];

  *(void *)(v17 + 80) = v38;
  specialized Array._endMutation()();
  sub_1001ABF94();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v42 activateConstraints:isa];

  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_100756B20;
  *(void *)(v40 + 32) = v8;
  *(void *)(v40 + 40) = v15;
  uint64_t v44 = v40;
  specialized Array._endMutation()();
  *(void *)(v43 + OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_activeViews) = v44;

  return swift_bridgeObjectRelease();
}

uint64_t sub_100318D4C()
{
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for TrendsOnBoardingActivityTile();
  [super prepareForReuse];
  unint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_activeViews];
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v2) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease_n();
    [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_videoView] teardownPlayer];
    uint64_t v7 = *(void *)&v0[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_configuration];
    *(_OWORD *)&v0[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_configuration] = xmmword_100750CF0;
    return sub_1002D5734(v7);
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(v1 + 8 * i + 32);
      }
      id v6 = v5;
      [v5 removeFromSuperview];
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for TrendsOnBoardingActivityTile()
{
  return self;
}

void *destroy for TrendsOnBoardingActivityTile.Configuration(void *result)
{
  if (*result >= 0xFFFFFFFFuLL) {
    return (void *)swift_release();
  }
  return result;
}

uint64_t *_s10FitnessApp28TrendsOnBoardingActivityTileC13ConfigurationOwCP_0(uint64_t *a1, uint64_t *a2)
{
  LODWORD(v3) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v3 = *a2;
  }
  if ((v3 + 1) <= 1 && v3 == -1)
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

uint64_t *assignWithCopy for TrendsOnBoardingActivityTile.Configuration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v4) = -1;
  }
  unsigned int v5 = v4 + 1;
  uint64_t v6 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    LODWORD(v7) = -1;
  }
  else {
    uint64_t v7 = *a2;
  }
  unsigned int v8 = v7 + 1;
  if (v5 > 1)
  {
    if (v8 <= 1 && v7 == -1) {
      goto LABEL_13;
    }
LABEL_18:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v8 > 1)
  {
    if (v5) {
      goto LABEL_18;
    }
LABEL_17:
    swift_release();
    goto LABEL_18;
  }
  if (!v5)
  {
    if (v7 == -1)
    {
      uint64_t v11 = a2[1];
      *a1 = v6;
      a1[1] = v11;
      swift_retain();
      swift_release();
      return a1;
    }
    goto LABEL_17;
  }
  if (v7 != -1) {
    goto LABEL_18;
  }
LABEL_13:
  uint64_t v9 = a2[1];
  *a1 = v6;
  a1[1] = v9;
  swift_retain();
  return a1;
}

uint64_t *assignWithTake for TrendsOnBoardingActivityTile.Configuration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v4) = -1;
  }
  unsigned int v5 = v4 + 1;
  uint64_t v6 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    LODWORD(v7) = -1;
  }
  else {
    uint64_t v7 = *a2;
  }
  unsigned int v8 = v7 + 1;
  if (v5 > 1)
  {
    if (v8 <= 1 && v7 == -1) {
      goto LABEL_13;
    }
LABEL_18:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v8 > 1)
  {
    if (v5) {
      goto LABEL_18;
    }
LABEL_17:
    swift_release();
    goto LABEL_18;
  }
  if (!v5)
  {
    if (v7 == -1)
    {
      uint64_t v11 = a2[1];
      *a1 = v6;
      a1[1] = v11;
      swift_release();
      return a1;
    }
    goto LABEL_17;
  }
  if (v7 != -1) {
    goto LABEL_18;
  }
LABEL_13:
  uint64_t v9 = a2[1];
  *a1 = v6;
  a1[1] = v9;
  return a1;
}

uint64_t getEnumTagSinglePayload for TrendsOnBoardingActivityTile.Configuration(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 3) {
    return (v3 - 2);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TrendsOnBoardingActivityTile.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_1003191CC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  if ((v1 + 1) >= 2) {
    return v1;
  }
  else {
    return 0;
  }
}

void *sub_1003191EC(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *uint64_t result = 0;
    result[1] = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *uint64_t result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrendsOnBoardingActivityTile.Configuration()
{
  return &type metadata for TrendsOnBoardingActivityTile.Configuration;
}

unint64_t sub_10031922C()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_100319248()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100319280(uint64_t a1)
{
  sub_1003184B8(a1, v1, (uint64_t)"TrendsOnBoardingActivityTile did receive ActivityTileViewControllerPlayVideos", 77, (SEL *)&selRef_play);
}

void sub_1003192B0(uint64_t a1)
{
  sub_1003184B8(a1, v1, (uint64_t)"TrendsOnBoardingActivityTile did receive ActivityTileViewControllerPauseVideos", 78, (SEL *)&selRef_pause);
}

uint64_t sub_1003192E0(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 2) {
    return sub_10008A670(result);
  }
  return result;
}

void sub_1003192F4()
{
  *(_OWORD *)&v0[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_configuration] = xmmword_100750CF0;
  uint64_t v1 = OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_insetContentView;
  id v2 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v1] = v2;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_activeViews] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_videoView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_observers] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

unint64_t sub_1003193F0()
{
  unint64_t result = qword_100956DE8;
  if (!qword_100956DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956DE8);
  }
  return result;
}

unint64_t sub_100319448()
{
  unint64_t result = qword_100956DF0;
  if (!qword_100956DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956DF0);
  }
  return result;
}

uint64_t sub_10031949C()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_1000258C4(v0, qword_100997C70);
  sub_1000876DC(v0, (uint64_t)qword_100997C70);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_100319500()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_100319534@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_100319570()
{
  return IntentParameter.wrappedValue.setter();
}

unint64_t sub_1003195AC()
{
  unint64_t result = qword_100956DF8;
  if (!qword_100956DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956DF8);
  }
  return result;
}

uint64_t sub_100319600(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100319CE0();
  unint64_t v5 = sub_100319D88();

  return static URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

unint64_t sub_10031966C()
{
  unint64_t result = qword_100956E00;
  if (!qword_100956E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956E00);
  }
  return result;
}

unint64_t sub_1003196C4()
{
  unint64_t result = qword_100956E08;
  if (!qword_100956E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956E08);
  }
  return result;
}

uint64_t sub_100319718()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100319768@<X0>(uint64_t a1@<X8>)
{
  if (qword_10094A980 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_1000876DC(v2, (uint64_t)qword_100997C70);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100319810(uint64_t a1)
{
  unint64_t v2 = sub_100319CE0();

  return static OpenIntent.openAppWhenRun.getter(a1, v2);
}

uint64_t sub_10031984C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  unint64_t v5 = sub_100319CE0();
  unint64_t v6 = sub_100319D34();
  unint64_t v7 = sub_100319D88();
  *unint64_t v4 = v2;
  v4[1] = sub_1001A15A8;
  return URLRepresentableIntent<>.perform()(a2, v5, v6, v7);
}

uint64_t sub_100319918@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10031998C();
  *a1 = result;
  return result;
}

uint64_t sub_100319940(uint64_t a1)
{
  unint64_t v2 = sub_1003195AC();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenSummaryCardIntent()
{
  return &type metadata for OpenSummaryCardIntent;
}

uint64_t sub_10031998C()
{
  uint64_t v17 = type metadata accessor for InputConnectionBehavior();
  uint64_t v0 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AFA94(&qword_10094D320);
  __chkstk_darwin(v3 - 8);
  unint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unsigned int v8 = (char *)&v17 - v7;
  uint64_t v9 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_1000AFA94(&qword_100956E18);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  char v18 = 18;
  uint64_t v14 = type metadata accessor for IntentDialog();
  id v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v5, 1, 1, v14);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v17);
  sub_100319C8C();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

unint64_t sub_100319C8C()
{
  unint64_t result = qword_100956E20;
  if (!qword_100956E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956E20);
  }
  return result;
}

unint64_t sub_100319CE0()
{
  unint64_t result = qword_100956E28;
  if (!qword_100956E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956E28);
  }
  return result;
}

unint64_t sub_100319D34()
{
  unint64_t result = qword_100956E30;
  if (!qword_100956E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956E30);
  }
  return result;
}

unint64_t sub_100319D88()
{
  unint64_t result = qword_100956E38;
  if (!qword_100956E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956E38);
  }
  return result;
}

uint64_t sub_100319DDC()
{
  uint64_t result = static NotificationRequestConstants.moveModeNotificationCategory.getter();
  qword_100997C88 = result;
  unk_100997C90 = v1;
  return result;
}

uint64_t sub_100319E28()
{
  uint64_t result = static NotificationRequestConstants.moveModeChangeModeNotificationCategory.getter();
  qword_100997C98 = result;
  unk_100997CA0 = v1;
  return result;
}

uint64_t sub_100319E74()
{
  uint64_t result = static NotificationRequestConstants.moveModeChangeGoalsNotificationCategory.getter();
  qword_100997CA8 = result;
  unk_100997CB0 = v1;
  return result;
}

id sub_100319EC0(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v3;
}

id sub_100319F7C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FitnessCoachingNotificationRequestConstantsBridging();
  return [super dealloc];
}

uint64_t type metadata accessor for FitnessCoachingNotificationRequestConstantsBridging()
{
  return self;
}

unint64_t sub_100319FDC()
{
  unint64_t result = qword_100956E68;
  if (!qword_100956E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956E68);
  }
  return result;
}

uint64_t sub_10031A030()
{
  uint64_t v1 = sub_1000AFA94(&qword_10094DE78);
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LocalizedStringResource();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  __chkstk_darwin(v8);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v9);
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(*v0);
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v10);
  LocalizedStringResource.init(stringInterpolation:)();
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v11);
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v0[1]);
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v12);
  LocalizedStringResource.init(stringInterpolation:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  swift_bridgeObjectRetain();
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  return DisplayRepresentation.init(title:subtitle:image:)();
}

uint64_t sub_10031A2B8()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t sub_10031A2DC()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t sub_10031A300()
{
  uint64_t v0 = type metadata accessor for WorkoutActivityEntity(0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_100956EE0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  EntityProperty.wrappedValue.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0))
  {
    sub_10008DB18((uint64_t)v6, &qword_100956EE0);
  }
  else
  {
    sub_1002C1E90((uint64_t)v6, (uint64_t)v3);
    sub_10008DB18((uint64_t)v6, &qword_100956EE0);
    uint64_t v8 = *(void *)&v3[*(int *)(v0 + 32)];
    swift_retain();
    sub_1002C1F3C((uint64_t)v3);
    if (v8)
    {
      uint64_t v7 = WorkoutStep.displayString.getter();
      swift_release();
      return v7;
    }
  }
  EntityProperty.wrappedValue.getter();
  return Int.localizedString.getter();
}

uint64_t sub_10031A4A8()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094F0A0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v23 - v5;
  uint64_t v7 = sub_1000AFA94(&qword_10094F070);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v23 - v12;
  EntityProperty.wrappedValue.getter();
  id v14 = [self meters];
  Measurement<>.converted(to:)();

  id v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v10, v7);
  Measurement.value.getter();
  double v17 = v16;
  v15(v13, v7);
  EntityProperty.wrappedValue.getter();
  id v18 = [self seconds];
  Measurement<>.converted(to:)();

  id v19 = *(void (**)(char *, uint64_t))(v1 + 8);
  v19(v3, v0);
  Measurement.value.getter();
  double v21 = v20;
  v19(v6, v0);
  type metadata accessor for WorkoutDurationMetrics();
  swift_allocObject();
  return sub_10043CD1C(v17, v21);
}

__n128 sub_10031A758@<Q0>(uint64_t a1@<X8>)
{
  sub_10031B1B8(v5);
  long long v2 = v5[5];
  *(_OWORD *)(a1 + 64) = v5[4];
  *(_OWORD *)(a1 + 80) = v2;
  *(_OWORD *)(a1 + 96) = v5[6];
  long long v3 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)v5[3];
  *(_OWORD *)(a1 + 32) = v5[2];
  *(__n128 *)(a1 + 48) = result;
  return result;
}

unint64_t sub_10031A7AC()
{
  unint64_t result = qword_100956E70;
  if (!qword_100956E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956E70);
  }
  return result;
}

unint64_t sub_10031A804()
{
  unint64_t result = qword_100956E78;
  if (!qword_100956E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956E78);
  }
  return result;
}

unint64_t sub_10031A85C()
{
  unint64_t result = qword_100956E80;
  if (!qword_100956E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956E80);
  }
  return result;
}

uint64_t sub_10031A8B0()
{
  return sub_1000A132C(&qword_100956E88, &qword_100956E90);
}

uint64_t sub_10031A8EC(uint64_t a1)
{
  unint64_t v2 = sub_10031E9B0();

  return static TransientAppEntity.defaultQuery.getter(a1, v2);
}

unint64_t sub_10031A93C()
{
  unint64_t result = qword_100956E98;
  if (!qword_100956E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956E98);
  }
  return result;
}

unint64_t sub_10031A994()
{
  unint64_t result = qword_100956EA0;
  if (!qword_100956EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956EA0);
  }
  return result;
}

unint64_t sub_10031A9EC()
{
  unint64_t result = qword_100956EA8;
  if (!qword_100956EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956EA8);
  }
  return result;
}

unint64_t sub_10031AA44()
{
  unint64_t result = qword_100956EB0;
  if (!qword_100956EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956EB0);
  }
  return result;
}

uint64_t sub_10031AA98()
{
  return sub_1000A6DFC((unint64_t *)&qword_10095B840, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_10031AAE0(uint64_t a1)
{
  unint64_t v2 = sub_10031E9B0();

  return TransientAppEntity.id.getter(a1, v2);
}

uint64_t sub_10031AB2C()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_10031AC74()
{
  return sub_1000A132C(&qword_100956EB8, &qword_100956EC0);
}

uint64_t sub_10031ACB0(uint64_t a1)
{
  unint64_t v2 = sub_100319FDC();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10031AD00()
{
  unint64_t result = qword_100956EC8;
  if (!qword_100956EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956EC8);
  }
  return result;
}

uint64_t sub_10031AD58(uint64_t a1)
{
  unint64_t v2 = sub_10031AA44();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t destroy for WorkoutStat()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for WorkoutStat(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for WorkoutStat(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  a1[12] = a2[12];
  swift_retain();
  swift_release();
  a1[13] = a2[13];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for WorkoutStat(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for WorkoutStat(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutStat(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutStat(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutStat()
{
  return &type metadata for WorkoutStat;
}

uint64_t sub_10031B1B8@<X0>(void *a1@<X8>)
{
  uint64_t v70 = a1;
  uint64_t v69 = sub_1000AFA94(&qword_10094F0A0);
  uint64_t v67 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v68 = (char *)&v53 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  id v66 = (char *)&v53 - v3;
  uint64_t v4 = sub_1000AFA94(&qword_10094F070);
  uint64_t v64 = *(void *)(v4 - 8);
  uint64_t v65 = v4;
  __chkstk_darwin(v4);
  uint64_t v62 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v63 = (char *)&v53 - v7;
  uint64_t v8 = sub_1000AFA94(&qword_10094F110);
  uint64_t v60 = *(void *)(v8 - 8);
  uint64_t v61 = v8;
  __chkstk_darwin(v8);
  uint64_t v59 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v58 = (char *)&v53 - v11;
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v12 - 8);
  sub_1000AFA94(&qword_100956EE8);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v13 = EntityProperty<>.init(title:)();
  sub_1000AFA94(&qword_10094F0A8);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v14 = EntityProperty<>.init(title:)();
  sub_1000AFA94(&qword_100956EF0);
  uint64_t v72 = v14;
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v15 = EntityProperty<>.init(title:)();
  sub_1000AFA94(&qword_10094F0B0);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v16 = EntityProperty<>.init(title:)();
  sub_1000AFA94(&qword_100956EF8);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  sub_1000A6DFC(&qword_10094EE70, (void (*)(uint64_t))type metadata accessor for WorkoutActivityEntity);
  uint64_t v17 = EntityProperty<>.init(title:)();
  sub_1000AFA94(&qword_100956F00);
  uint64_t v54 = v17;
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  sub_10031E610();
  uint64_t v18 = EntityProperty<>.init(title:)();
  sub_1000AFA94(&qword_100956F10);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  sub_1002BFD88();
  uint64_t v19 = EntityProperty<>.init(title:)();
  double v20 = self;
  uint64_t v56 = v19;
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v57 = 0x80000001007C0B20;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v21 = v15;
  swift_retain();
  uint64_t v22 = v16;
  swift_retain();
  swift_retain();
  uint64_t v23 = v18;
  swift_retain();
  id v24 = [v20 metersPerSecond];
  sub_10007E2D8(0, &qword_10094F108);
  id v25 = v58;
  Measurement.init(value:unit:)();
  uint64_t v26 = v60;
  uint64_t v27 = v61;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v59, v25, v61);
  uint64_t v28 = v13;
  EntityProperty.wrappedValue.setter();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v27);
  swift_release();
  uint64_t v29 = v23;
  swift_release();
  uint64_t v30 = v54;
  swift_release();
  uint64_t v55 = v22;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v71 = v28;
  swift_release();
  unint64_t v31 = v57;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v32 = self;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v33 = v21;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v34 = v29;
  swift_retain();
  uint64_t v35 = v56;
  swift_retain();
  id v36 = [v32 meters];
  sub_10007E2D8(0, &qword_10094F128);
  id v37 = v63;
  Measurement.init(value:unit:)();
  uint64_t v39 = v64;
  uint64_t v38 = v65;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v62, v37, v65);
  EntityProperty.wrappedValue.setter();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v37, v38);
  uint64_t v40 = v35;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v41 = v55;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v42 = self;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v43 = v33;
  swift_retain();
  swift_retain();
  uint64_t v44 = v30;
  swift_retain();
  swift_retain();
  swift_retain();
  id v45 = [v42 seconds];
  sub_10007E2D8(0, &qword_10094F0E8);
  id v46 = v66;
  Measurement.init(value:unit:)();
  uint64_t v47 = v67;
  uint64_t v48 = v69;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v68, v46, v69);
  EntityProperty.wrappedValue.setter();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v48);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v49 = v72;
  swift_release();
  uint64_t v50 = v71;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v73 = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  id v52 = v70;
  void *v70 = 0x2074756F6B726F57;
  v52[1] = 0xEC00000074617453;
  v52[2] = 0;
  v52[3] = 0xE000000000000000;
  v52[4] = 0xD000000000000011;
  v52[5] = v31;
  v52[6] = v50;
  v52[7] = v49;
  v52[8] = v43;
  v52[9] = 0;
  v52[10] = v41;
  v52[11] = v44;
  v52[12] = v34;
  v52[13] = v40;
  return result;
}

uint64_t sub_10031BC48@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v241 = a1;
  v228 = a4;
  v236 = a2;
  sub_1000AEEC8((uint64_t)a2, (uint64_t)v261, &qword_100956ED0);
  uint64_t v215 = v261[0];
  uint64_t v216 = v261[1];
  uint64_t v217 = v261[2];
  uint64_t v225 = v261[3];
  uint64_t v226 = v261[4];
  uint64_t v227 = v261[5];
  unint64_t v249 = v261[8];
  v235 = a3;
  sub_1000AEEC8((uint64_t)a3, (uint64_t)v260, &qword_100956ED8);
  uint64_t v202 = v260[0];
  uint64_t v203 = v260[1];
  uint64_t v204 = v260[2];
  uint64_t v205 = v260[3];
  uint64_t v206 = v260[4];
  uint64_t v207 = v260[6];
  uint64_t v208 = v260[8];
  uint64_t v238 = sub_1000AFA94(&qword_10094F0A0);
  uint64_t v233 = *(void *)(v238 - 8);
  __chkstk_darwin(v238);
  v231 = (char *)&v194 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v232 = (char *)&v194 - v7;
  uint64_t v8 = sub_1000AFA94(&qword_10094F098);
  __chkstk_darwin(v8 - 8);
  uint64_t v199 = (char *)&v194 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v212 = (char *)&v194 - v11;
  __chkstk_darwin(v12);
  uint64_t v222 = (char *)&v194 - v13;
  uint64_t v14 = sub_1000AFA94(&qword_10094F078);
  __chkstk_darwin(v14 - 8);
  char v198 = (char *)&v194 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v211 = (char *)&v194 - v17;
  __chkstk_darwin(v18);
  uint64_t v221 = (char *)&v194 - v19;
  uint64_t v20 = sub_1000AFA94(&qword_100956EE0);
  __chkstk_darwin(v20 - 8);
  uint64_t v219 = (uint64_t)&v194 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v218 = (uint64_t)&v194 - v23;
  __chkstk_darwin(v24);
  uint64_t v250 = (uint64_t)&v194 - v25;
  *(void *)&long long v244 = type metadata accessor for WorkoutActivityEntity(0);
  v237 = *(void (**)(char *, uint64_t))(v244 - 8);
  __chkstk_darwin(v244);
  *(void *)&long long v242 = (char *)&v194 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v243 = sub_1000AFA94(&qword_10094F110);
  uint64_t v245 = *(void *)(v243 - 8);
  __chkstk_darwin(v243);
  uint64_t v196 = (char *)&v194 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v200 = (char *)&v194 - v29;
  __chkstk_darwin(v30);
  uint64_t v194 = (char *)&v194 - v31;
  __chkstk_darwin(v32);
  char v209 = (char *)&v194 - v33;
  __chkstk_darwin(v34);
  uint64_t v213 = (char *)&v194 - v35;
  __chkstk_darwin(v36);
  v229 = (char *)&v194 - v37;
  __chkstk_darwin(v38);
  v234 = (char *)&v194 - v39;
  __chkstk_darwin(v40);
  uint64_t v223 = (char *)&v194 - v41;
  __chkstk_darwin(v42);
  v246 = (char *)&v194 - v43;
  uint64_t v240 = sub_1000AFA94(&qword_10094F070);
  uint64_t v247 = *(void *)(v240 - 8);
  __chkstk_darwin(v240);
  char v197 = (char *)&v194 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  uint64_t v201 = (char *)&v194 - v46;
  __chkstk_darwin(v47);
  uint64_t v195 = (char *)&v194 - v48;
  __chkstk_darwin(v49);
  uint64_t v210 = (char *)&v194 - v50;
  __chkstk_darwin(v51);
  uint64_t v214 = (char *)&v194 - v52;
  __chkstk_darwin(v53);
  v230 = (char *)&v194 - v54;
  __chkstk_darwin(v55);
  uint64_t v220 = (char *)&v194 - v56;
  __chkstk_darwin(v57);
  char v224 = (char *)&v194 - v58;
  __chkstk_darwin(v59);
  uint64_t v61 = (char *)&v194 - v60;
  uint64_t v62 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v62 - 8);
  sub_1000AFA94(&qword_100956EE8);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v63 = EntityProperty<>.init(title:)();
  sub_1000AFA94(&qword_10094F0A8);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v64 = EntityProperty<>.init(title:)();
  sub_1000AFA94(&qword_100956EF0);
  uint64_t v256 = v64;
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v65 = EntityProperty<>.init(title:)();
  sub_1000AFA94(&qword_10094F0B0);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v66 = EntityProperty<>.init(title:)();
  sub_1000AFA94(&qword_100956EF8);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  sub_1000A6DFC(&qword_10094EE70, (void (*)(uint64_t))type metadata accessor for WorkoutActivityEntity);
  uint64_t v67 = EntityProperty<>.init(title:)();
  sub_1000AFA94(&qword_100956F00);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  sub_10031E610();
  uint64_t v68 = EntityProperty<>.init(title:)();
  sub_1000AFA94(&qword_100956F10);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  sub_1002BFD88();
  uint64_t v69 = EntityProperty<>.init(title:)();
  uint64_t v70 = self;
  swift_retain();
  id v71 = [v70 meters];
  sub_10007E2D8(0, &qword_10094F128);
  v239 = v61;
  Measurement.init(value:unit:)();
  id v72 = [self metersPerSecond];
  sub_10007E2D8(0, &qword_10094F108);
  uint64_t v73 = v244;
  uint64_t v74 = v241;
  Measurement.init(value:unit:)();
  uint64_t v75 = v74;
  uint64_t v76 = v250;
  sub_10031E664(v75, v250);
  int v77 = (*((uint64_t (**)(uint64_t, uint64_t, uint64_t))v237 + 6))(v76, 1, v73);
  uint64_t v253 = v66;
  uint64_t v254 = v63;
  uint64_t v248 = v65;
  uint64_t v255 = v67;
  uint64_t v251 = v69;
  uint64_t v252 = v68;
  if (v77 != 1)
  {
    uint64_t v98 = v242;
    sub_10031E94C(v76, v242);
    uint64_t v225 = sub_1001DD2AC();
    uint64_t v250 = v99;
    swift_bridgeObjectRetain();
    uint64_t v227 = sub_1001DD3F8();
    uint64_t v100 = *(void **)(v98 + *(int *)(v73 + 20));
    unint64_t v249 = v101;
    swift_bridgeObjectRetain();
    id v102 = [v100 fiui_activityType];
    uint64_t v226 = FIUIDistanceTypeForActivityType();

    uint64_t v103 = v218;
    sub_1002C1E90(v98, v218);
    (*((void (**)(uint64_t, void, uint64_t, uint64_t))v237 + 7))(v103, 0, 1, v73);
    sub_10031E664(v103, v219);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    EntityProperty.wrappedValue.setter();
    sub_10008DB18(v103, &qword_100956EE0);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v104 = (uint64_t)v221;
    EntityProperty.wrappedValue.getter();
    uint64_t v105 = v245;
    uint64_t v106 = *(void (**)(char *, char *, uint64_t))(v245 + 16);
    uint64_t v107 = v243;
    v106(v234, v246, v243);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v104, 1, v107) == 1)
    {
      uint64_t v108 = v223;
      (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v223, v234, v107);
      sub_10008DB18(v104, &qword_10094F078);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v105 + 8))(v234, v107);
      uint64_t v108 = v223;
      (*(void (**)(char *, uint64_t, uint64_t))(v105 + 32))(v223, v104, v107);
    }
    v106(v229, v108, v107);
    EntityProperty.wrappedValue.setter();
    uint64_t v109 = *(void (**)(char *, uint64_t))(v105 + 8);
    uint64_t v245 = v105 + 8;
    v237 = v109;
    v109(v108, v107);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v110 = (uint64_t)v222;
    EntityProperty.wrappedValue.getter();
    uint64_t v111 = v247;
    long long v112 = *(void (**)(char *, char *, uint64_t))(v247 + 16);
    long long v113 = v220;
    uint64_t v114 = v240;
    v112(v220, v239, v240);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v111 + 48))(v110, 1, v114) == 1)
    {
      long long v115 = v224;
      (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v224, v113, v114);
      sub_10008DB18(v110, &qword_10094F098);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v111 + 8))(v113, v114);
      long long v115 = v224;
      (*(void (**)(char *, uint64_t, uint64_t))(v111 + 32))(v224, v110, v114);
    }
    v112(v230, v115, v114);
    uint64_t v116 = v248;
    EntityProperty.wrappedValue.setter();
    long long v117 = *(char **)(v111 + 8);
    uint64_t v247 = v111 + 8;
    v234 = v117;
    ((void (*)(char *, uint64_t))v117)(v115, v114);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v118 = v232;
    EntityProperty.wrappedValue.getter();
    uint64_t v119 = v233;
    (*(void (**)(char *, char *, uint64_t))(v233 + 16))(v231, v118, v238);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v120 = v116;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v121 = v251;
    swift_retain();
    EntityProperty.wrappedValue.setter();
    (*(void (**)(char *, uint64_t))(v119 + 8))(v118, v238);
    uint64_t v122 = v121;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v123 = v252;
    swift_retain();
    uint64_t v124 = v242;
    uint64_t v125 = v122;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease_n();
    uint64_t result = EntityProperty.wrappedValue.getter();
    if (__OFADD__((void)v268, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    *(void *)&long long v268 = v268 + 1;
    EntityProperty.wrappedValue.setter();
    sub_10031E870(v235, (void (*)(void, void, void, void, void, void, void, void, void))sub_10031E758);
    sub_10031E870(v236, (void (*)(void, void, void, void, void, void, void, void, void))sub_10031E8C0);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10008DB18(v241, &qword_100956EE0);
    sub_1002C1F3C(v124);
    v237(v246, v243);
    ((void (*)(char *, uint64_t))v234)(v239, v240);
    *(void *)&long long v242 = 0x696C632E7473696CLL;
    v126 = v228;
    uint64_t v127 = v225;
    *(void *)&long long v244 = 0xEE006472616F6270;
LABEL_34:
    swift_release();
    swift_release();
    uint64_t v183 = v255;
    swift_release();
    uint64_t v184 = v125;
    uint64_t v185 = v123;
    uint64_t v186 = v253;
    swift_release();
    uint64_t v187 = v120;
    swift_release();
    uint64_t v188 = v256;
    swift_release();
    uint64_t v189 = v254;
    uint64_t result = swift_release();
    uint64_t v190 = v250;
    uint64_t *v126 = v127;
    v126[1] = v190;
    unint64_t v191 = v249;
    v126[2] = v227;
    v126[3] = v191;
    uint64_t v192 = v244;
    v126[4] = v242;
    v126[5] = v192;
    v126[6] = v189;
    v126[7] = v188;
    uint64_t v193 = v226;
    v126[8] = v187;
    v126[9] = v193;
    v126[10] = v186;
    v126[11] = v183;
    v126[12] = v185;
    v126[13] = v184;
    return result;
  }
  sub_10008DB18(v76, &qword_100956EE0);
  uint64_t v78 = v236;
  sub_1000AEEC8((uint64_t)v236, (uint64_t)v265, &qword_100956ED0);
  uint64_t v79 = *(void *)v265;
  if (*(void *)v265)
  {
    long long v270 = *(_OWORD *)&v265[32];
    long long v271 = v266;
    uint64_t v80 = v267;
    uint64_t v272 = v267;
    long long v268 = *(_OWORD *)v265;
    long long v269 = *(_OWORD *)&v265[16];
    long long v244 = *(_OWORD *)&v265[8];
    long long v242 = *(_OWORD *)&v265[24];
    uint64_t v82 = *(void *)&v265[40];
    uint64_t v81 = v266;
    uint64_t v83 = BYTE8(v266);
    *(void *)&v262[0] = 0x20746E656D676553;
    *((void *)&v262[0] + 1) = 0xE800000000000000;
    uint64_t v84 = *(void (**)(char *, uint64_t))&v265[8];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t result = EntityProperty.wrappedValue.getter();
    if (!__OFADD__(v257, 1))
    {
      v237 = v84;
      ++v257;
      v86._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v86);
      swift_bridgeObjectRelease();
      uint64_t v225 = *(void *)&v262[0];
      uint64_t v87 = v83;
      uint64_t v88 = *((void *)&v262[0] + 1);
      swift_bridgeObjectRetain();
      uint64_t v89 = sub_100476890();
      unint64_t v249 = v90;
      uint64_t v91 = v271;
      if (BYTE8(v271)) {
        uint64_t v91 = 0;
      }
      uint64_t v226 = v91;
      uint64_t v227 = v89;
      *(_OWORD *)((char *)v262 + 8) = v244;
      *(_OWORD *)((char *)&v262[1] + 8) = v242;
      *(void *)&v262[0] = v79;
      *((void *)&v262[2] + 1) = v82;
      *(void *)&long long v263 = v81;
      *((void *)&v263 + 1) = v87;
      uint64_t v264 = v80;
      sub_10031E870(v78, (void (*)(void, void, void, void, void, void, void, void, void))sub_10031E7E4);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      EntityProperty.wrappedValue.setter();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)&long long v244 = *((void *)&v270 + 1);
      uint64_t v250 = v88;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v92 = (uint64_t)v211;
      EntityProperty.wrappedValue.getter();
      uint64_t v93 = v245;
      uint64_t v94 = *(void (**)(char *, char *, uint64_t))(v245 + 16);
      uint64_t v95 = v209;
      uint64_t v96 = v243;
      v94(v209, v246, v243);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v92, 1, v96) == 1)
      {
        int v97 = v213;
        (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v213, v95, v96);
        sub_10008DB18(v92, &qword_10094F078);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v93 + 8))(v95, v96);
        int v97 = v213;
        (*(void (**)(char *, uint64_t, uint64_t))(v93 + 32))(v213, v92, v96);
      }
      v94(v229, v97, v96);
      EntityProperty.wrappedValue.setter();
      int v140 = *(void (**)(char *, uint64_t))(v93 + 8);
      uint64_t v245 = v93 + 8;
      *(void *)&long long v242 = v140;
      v140(v97, v96);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v141 = (uint64_t)v212;
      EntityProperty.wrappedValue.getter();
      uint64_t v142 = v247;
      uint64_t v143 = *(void (**)(char *, char *, uint64_t))(v247 + 16);
      uint64_t v144 = v210;
      uint64_t v145 = v240;
      v143(v210, v239, v240);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 48))(v141, 1, v145) == 1)
      {
        uint64_t v146 = v214;
        (*(void (**)(char *, char *, uint64_t))(v142 + 32))(v214, v144, v145);
        sub_10008DB18(v141, &qword_10094F098);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v142 + 8))(v144, v145);
        uint64_t v146 = v214;
        (*(void (**)(char *, uint64_t, uint64_t))(v142 + 32))(v214, v141, v145);
      }
      v143(v230, v146, v145);
      EntityProperty.wrappedValue.setter();
      uint64_t v147 = *(char **)(v142 + 8);
      uint64_t v247 = v142 + 8;
      v234 = v147;
      ((void (*)(char *, uint64_t))v147)(v146, v145);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v148 = v232;
      EntityProperty.wrappedValue.getter();
      uint64_t v149 = v233;
      uint64_t v150 = v238;
      (*(void (**)(char *, char *, uint64_t))(v233 + 16))(v231, v148, v238);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v123 = v252;
      swift_retain();
      swift_retain();
      EntityProperty.wrappedValue.setter();
      (*(void (**)(char *, uint64_t))(v149 + 8))(v148, v150);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v151 = v248;
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v152 = v151;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v125 = v251;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease_n();
      uint64_t result = EntityProperty.wrappedValue.getter();
      if (!__OFADD__(*(void *)&v262[0], 1))
      {
        ++*(void *)&v262[0];
        EntityProperty.wrappedValue.setter();
        sub_10031E870(v235, (void (*)(void, void, void, void, void, void, void, void, void))sub_10031E758);
        char v153 = v236;
        sub_10031E870(v236, (void (*)(void, void, void, void, void, void, void, void, void))sub_10031E8C0);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        *(void *)&long long v244 = 0xE800000000000000;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10031E870(v153, (void (*)(void, void, void, void, void, void, void, void, void))sub_10031E8C0);
        sub_10008DB18(v241, &qword_100956EE0);
        ((void (*)(char *, uint64_t))v242)(v246, v243);
        ((void (*)(char *, uint64_t))v234)(v239, v240);
        *(void *)&long long v242 = 0x656C637269632E31;
LABEL_33:
        v126 = v228;
        uint64_t v120 = v152;
        uint64_t v127 = v225;
        goto LABEL_34;
      }
      goto LABEL_37;
    }
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  sub_1000AEEC8((uint64_t)v235, (uint64_t)v262, &qword_100956ED8);
  if (!*(void *)&v262[0])
  {
    uint64_t v154 = v245;
    char v155 = *(void (**)(char *, char *, uint64_t))(v245 + 16);
    v156 = v229;
    uint64_t v157 = v243;
    v155(v229, v246, v243);
    v155(v194, v156, v157);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *(void *)&long long v244 = 0x80000001007C0B20;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    EntityProperty.wrappedValue.setter();
    v158 = *(void (**)(char *, uint64_t))(v154 + 8);
    uint64_t v245 = v154 + 8;
    *(void *)&long long v242 = v158;
    v158(v156, v243);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v159 = *(void (**)(char *, char *, uint64_t))(v247 + 16);
    v160 = v230;
    uint64_t v161 = v240;
    v159(v230, v239, v240);
    v159(v195, v160, v161);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v123 = v252;
    swift_retain();
    swift_retain();
    EntityProperty.wrappedValue.setter();
    v162 = *(void (**)(char *, uint64_t))(v247 + 8);
    v247 += 8;
    v237 = v162;
    v162(v160, v161);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v163 = self;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    id v164 = [v163 seconds];
    sub_10007E2D8(0, &qword_10094F0E8);
    long long v165 = v232;
    uint64_t v250 = 0xEC00000074617453;
    Measurement.init(value:unit:)();
    uint64_t v166 = v233;
    uint64_t v167 = v238;
    (*(void (**)(char *, char *, uint64_t))(v233 + 16))(v231, v165, v238);
    EntityProperty.wrappedValue.setter();
    (*(void (**)(char *, uint64_t))(v166 + 8))(v165, v167);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v168 = v248;
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&long long v268 = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v169 = v251;
    swift_retain();
    EntityProperty.wrappedValue.setter();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    unint64_t v249 = 0xE000000000000000;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10008DB18(v241, &qword_100956EE0);
    ((void (*)(char *, uint64_t))v242)(v246, v243);
    uint64_t v120 = v168;
    v237(v239, v240);
    uint64_t v125 = v169;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    *(void *)&long long v242 = 0xD000000000000011;
    uint64_t v127 = 0x2074756F6B726F57;
    v126 = v228;
    goto LABEL_34;
  }
  long long v268 = v262[0];
  long long v269 = v262[1];
  long long v270 = v262[2];
  long long v271 = v263;
  uint64_t v272 = v264;
  uint64_t v257 = 0x2074696C7053;
  unint64_t v258 = 0xE600000000000000;
  v128 = (void (*)(char *, uint64_t))*((void *)&v262[0] + 1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v237 = v128;
  uint64_t result = EntityProperty.wrappedValue.getter();
  if (__OFADD__(v259, 1))
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  ++v259;
  v129._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v129);
  swift_bridgeObjectRelease();
  uint64_t v225 = v257;
  uint64_t v130 = v258;
  swift_bridgeObjectRetain();
  uint64_t v131 = sub_1002BCEE4();
  unint64_t v249 = v132;
  *(void *)&long long v244 = v272;
  *(void *)&long long v242 = *((void *)&v271 + 1);
  uint64_t v226 = *((void *)&v270 + 1);
  uint64_t v227 = v131;
  v133 = v235;
  sub_1000AEEC8((uint64_t)v235, (uint64_t)&v257, &qword_100956ED8);
  swift_bridgeObjectRetain();
  sub_10031E870(v133, (void (*)(void, void, void, void, void, void, void, void, void))sub_10031E6CC);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v250 = v130;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v134 = (uint64_t)v198;
  EntityProperty.wrappedValue.getter();
  uint64_t v135 = v245;
  uint64_t v136 = *(void (**)(char *, char *, uint64_t))(v245 + 16);
  uint64_t v137 = v196;
  uint64_t v138 = v243;
  v136(v196, v246, v243);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v135 + 48))(v134, 1, v138) == 1)
  {
    uint64_t v139 = v200;
    (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v200, v137, v138);
    sub_10008DB18(v134, &qword_10094F078);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v135 + 8))(v137, v138);
    uint64_t v139 = v200;
    (*(void (**)(char *, uint64_t, uint64_t))(v135 + 32))(v200, v134, v138);
  }
  v136(v229, v139, v138);
  EntityProperty.wrappedValue.setter();
  long long v170 = *(void **)(v135 + 8);
  uint64_t v245 = v135 + 8;
  v236 = v170;
  ((void (*)(char *, uint64_t))v170)(v139, v138);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v171 = (uint64_t)v199;
  EntityProperty.wrappedValue.getter();
  uint64_t v172 = v247;
  long long v173 = *(void (**)(char *, char *, uint64_t))(v247 + 16);
  long long v174 = v197;
  uint64_t v175 = v240;
  v173(v197, v239, v240);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v172 + 48))(v171, 1, v175) == 1)
  {
    long long v176 = v201;
    (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v201, v174, v175);
    sub_10008DB18(v171, &qword_10094F098);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v172 + 8))(v174, v175);
    long long v176 = v201;
    (*(void (**)(char *, uint64_t, uint64_t))(v172 + 32))(v201, v171, v175);
  }
  v173(v230, v176, v175);
  EntityProperty.wrappedValue.setter();
  uint64_t v177 = *(char **)(v172 + 8);
  uint64_t v247 = v172 + 8;
  v234 = v177;
  ((void (*)(char *, uint64_t))v177)(v176, v175);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v178 = v232;
  EntityProperty.wrappedValue.getter();
  uint64_t v179 = v233;
  (*(void (**)(char *, char *, uint64_t))(v233 + 16))(v231, v178, v238);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v123 = v252;
  swift_retain();
  uint64_t v180 = v251;
  swift_retain();
  EntityProperty.wrappedValue.setter();
  (*(void (**)(char *, uint64_t))(v179 + 8))(v178, v238);
  uint64_t v181 = v180;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v152 = v248;
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v125 = v181;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  uint64_t result = EntityProperty.wrappedValue.getter();
  if (!__OFADD__(v257, 1))
  {
    ++v257;
    EntityProperty.wrappedValue.setter();
    long long v182 = v235;
    sub_10031E870(v235, (void (*)(void, void, void, void, void, void, void, void, void))sub_10031E758);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10031E870(v182, (void (*)(void, void, void, void, void, void, void, void, void))sub_10031E758);
    sub_10008DB18(v241, &qword_100956EE0);
    ((void (*)(char *, uint64_t))v236)(v246, v243);
    ((void (*)(char *, uint64_t))v234)(v239, v240);
    goto LABEL_33;
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_10031E610()
{
  unint64_t result = qword_100956F08;
  if (!qword_100956F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956F08);
  }
  return result;
}

uint64_t sub_10031E664(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100956EE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10031E6CC(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10031E758(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10031E7E4(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

void *sub_10031E870(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_10031E8C0(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10031E94C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutActivityEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10031E9B0()
{
  unint64_t result = qword_100956F18;
  if (!qword_100956F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956F18);
  }
  return result;
}

void sub_10031EA04(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  if (qword_10094A718 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)UILabel.withFont(_:)();
  uint64_t v7 = self;
  id v8 = [v7 secondaryLabelColor];
  uint64_t v9 = (void *)UILabel.withTextColor(_:)();

  NSString v10 = String._bridgeToObjectiveC()();
  [v9 setText:v10];

  uint64_t v11 = (void *)UILabel.withFont(_:)();
  id v12 = [v7 secondaryLabelColor];
  uint64_t v13 = (void *)UILabel.withTextColor(_:)();

  uint64_t v14 = self;
  id v15 = [v14 mainBundle];
  NSString v16 = String._bridgeToObjectiveC()();
  uint64_t v17 = v5;
  id v18 = [v15 localizedStringForKey:v16 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v19 = String._bridgeToObjectiveC()();
  [v13 setText:v19];

  swift_bridgeObjectRelease();
  FIUIPaceFormatForWorkoutActivityType();
  if ([a4 supportsDistanceForWorkout:a1 workoutActivity:0])
  {
    uint64_t v20 = (void *)UILabel.withFont(_:)();
    id v21 = [v7 secondaryLabelColor];
    uint64_t v22 = (void *)UILabel.withTextColor(_:)();

    id v23 = [v14 mainBundle];
    NSString v24 = String._bridgeToObjectiveC()();
    id v25 = [v23 localizedStringForKey:v24 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v26 = String._bridgeToObjectiveC()();
    [v22 setText:v26];

    swift_bridgeObjectRelease();
    LODWORD(v26) = [a4 supportsPaceForWorkout:a1 workoutActivity:0];
    uint64_t v27 = v17;
    uint64_t v28 = (void *)UILabel.withFont(_:)();
    id v29 = [v7 secondaryLabelColor];
    uint64_t v30 = (void *)UILabel.withTextColor(_:)();

    if (v26)
    {
      id v31 = [v14 mainBundle];
      NSString v47 = String._bridgeToObjectiveC()();
      id v48 = [v31 localizedStringForKey:v47 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v49 = String._bridgeToObjectiveC()();
      [v30 setText:v49];

      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v49 = String._bridgeToObjectiveC()();
      [v30 setText:v49];
    }
    uint64_t v17 = v27;
  }
  else
  {
    uint64_t v32 = (void *)UILabel.withFont(_:)();
    id v33 = [v7 secondaryLabelColor];
    uint64_t v34 = (void *)UILabel.withTextColor(_:)();

    if (a3 == 1)
    {
      uint64_t v52 = v17;
      id v35 = [a4 fitnessUIFormattingManager];
      NSString v36 = String._bridgeToObjectiveC()();
      id v37 = [v35 localizationKeyForEnergyBaseKey:v36];

      if (!v37)
      {
        __break(1u);
        return;
      }
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v38 = [v14 mainBundle];
      NSString v39 = String._bridgeToObjectiveC()();
      id v40 = [v38 localizedStringForKey:v39 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      swift_bridgeObjectRelease();

      NSString v41 = String._bridgeToObjectiveC()();
      [v34 setText:v41];

      swift_bridgeObjectRelease();
      uint64_t v17 = v52;
      uint64_t v42 = (void *)UILabel.withFont(_:)();
      id v43 = [v7 secondaryLabelColor];
    }
    else
    {
      NSString v44 = String._bridgeToObjectiveC()();
      [v34 setText:v44];

      uint64_t v42 = (void *)UILabel.withFont(_:)();
      id v43 = [v7 secondaryLabelColor];
    }
    id v45 = v43;
    uint64_t v46 = (void *)UILabel.withTextColor(_:)();

    NSString v49 = String._bridgeToObjectiveC()();
    [v46 setText:v49];
  }
  [*(id *)(v17 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorView) setHidden:1];

  sub_10026B10C();
}

void sub_10031F1FC(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, void *a8)
{
  uint64_t v116 = a6;
  uint64_t v112 = a4;
  id v120 = a3;
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v118 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  NSString v16 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v17 - 8);
  NSString v19 = (char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v109 - v21;
  uint64_t v23 = type metadata accessor for DateInterval();
  __chkstk_darwin(v23);
  uint64_t v114 = (char *)&v109 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v113 = a5;
    uint64_t v109 = v25;
    uint64_t v110 = v24;
    id v27 = a1;
    id v115 = a8;
    id v119 = [a8 fitnessUIFormattingManager];
    sub_10032004C(a7 & 1);
    uint64_t v28 = self;
    uint64_t v29 = v8;
    id v30 = [objc_allocWithZone((Class)NSNumber) initWithInteger:a2];
    id v31 = [v28 localizedStringFromNumber:v30 numberStyle:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v32 = *(void **)(v29 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneLabel);
    NSString v33 = String._bridgeToObjectiveC()();
    [v32 setText:v33];
    swift_bridgeObjectRelease();

    id v117 = v27;
    id v34 = [v27 formattedDurationValueWithFormattingManager:v119];
    uint64_t v111 = v29;
    if (v34)
    {
      id v35 = v34;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v36 = *(void **)(v29 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel);
      NSString v37 = String._bridgeToObjectiveC()();
    }
    else
    {
      NSString v37 = 0;
      NSString v36 = *(void **)(v29 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel);
    }
    [v36 setText:v37];
    swift_bridgeObjectRelease();

    uint64_t v40 = FIUIDistanceTypeForActivityType();
    if ([v115 supportsDistanceForWorkout:v120 workoutActivity:0])
    {
      uint64_t v116 = v40;
      id v41 = [v117 startDate];
      if (v41)
      {
        uint64_t v42 = v41;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v43 = v118;
        NSString v44 = *(void (**)(char *, char *, uint64_t))(v118 + 32);
        v44(v22, v16, v14);
        NSString v36 = *(void **)(v43 + 56);
        ((void (*)(char *, void, uint64_t, uint64_t))v36)(v22, 0, 1, v14);
        id v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
        uint64_t v118 = v43 + 48;
        if (v45(v22, 1, v14) != 1)
        {
          id v46 = [v117 endDate];
          if (v46)
          {
            NSString v47 = v46;
            static Date._unconditionallyBridgeFromObjectiveC(_:)();

            v44(v19, v16, v14);
            ((void (*)(char *, void, uint64_t, uint64_t))v36)(v19, 0, 1, v14);
            if (v45(v19, 1, v14) != 1)
            {
              id v48 = v114;
              DateInterval.init(start:end:)();
              id v49 = [v120 workoutEvents];
              id v50 = v115;
              if (v49)
              {
                uint64_t v51 = v49;
                sub_100182AC4();
                uint64_t v52 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
              }
              else
              {
                uint64_t v52 = _swiftEmptyArrayStorage;
              }
              id v61 = v117;
              __chkstk_darwin(v49);
              *(&v109 - 2) = (uint64_t)v48;
              char v62 = sub_1005CEDBC(sub_1003204F4, (uint64_t)(&v109 - 4), (unint64_t)v52);
              swift_bridgeObjectRelease();
              if (v62)
              {
                uint64_t v63 = self;
                uint64_t v64 = v112;
                id v65 = [v63 defaultPrecisionForDistanceUnit:v112];
                id v66 = [v61 distance];
                if (v66)
                {
                  uint64_t v67 = v66;
                  id v68 = [self meterUnit];
                  [v67 doubleValueForUnit:v68];
                  double v70 = v69;
                }
                else
                {
                  double v70 = 0.0;
                }
                id v83 = [v119 localizedStringWithDistanceInMeters:v64 distanceUnit:0 unitStyle:v65 decimalPrecision:2 roundingMode:1 decimalTrimmingMode:v70];
                if (!v83) {
                  goto LABEL_45;
                }
                uint64_t v84 = v83;
                uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                uint64_t v87 = v86;

                id v88 = [v119 localizedShortUnitStringForDistanceUnit:v64];
                if (v88)
                {
LABEL_42:
                  uint64_t v92 = v88;
                  uint64_t v93 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  uint64_t v95 = v94;

                  uint64_t v121 = v93;
                  uint64_t v122 = v95;
                  sub_1000A06D0();
                  uint64_t v96 = StringProtocol.localizedUppercase.getter();
                  uint64_t v98 = v97;
                  swift_bridgeObjectRelease();
                  if (qword_10094A728 != -1) {
                    swift_once();
                  }
                  id v99 = sub_10052463C(v85, v87, v96, v98, (void *)qword_1009978F8);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  [*(id *)(v111 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel) setAttributedText:v99];

                  id v48 = v114;
                  goto LABEL_45;
                }
                __break(1u);
              }
              else
              {
                uint64_t v123 = 1;
                id v71 = [v61 distance];
                if (v71)
                {
                  id v72 = v71;
                  id v73 = [self meterUnit];
                  [v72 doubleValueForUnit:v73];
                  double v75 = v74;

                  goto LABEL_40;
                }
              }
              double v75 = 0.0;
LABEL_40:
              id v89 = [v119 localizedNaturalScaleStringWithDistanceInMeters:v116 distanceType:0 unitStyle:&v123 usedUnit:v75];
              if (v89)
              {
                unint64_t v90 = v89;
                uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                uint64_t v87 = v91;

                id v88 = [v119 localizedShortUnitStringForDistanceUnit:v123];
                if (v88) {
                  goto LABEL_42;
                }
LABEL_58:
                __break(1u);
                return;
              }
LABEL_45:
              if ([v50 supportsPaceForWorkout:v120 workoutActivity:0])
              {
                uint64_t v100 = FIUIPaceFormatForWorkoutActivityType();
                id v101 = [v61 distance];
                if (!v101)
                {
                  id v102 = [self meterUnit];
                  id v101 = [self quantityWithUnit:v102 doubleValue:0.0];
                }
                [v61 elapsedTime];
                double v104 = v103;
                if (qword_10094A728 != -1) {
                  swift_once();
                }
                sub_10070BD20(v101, v100, v116, (void *)qword_1009978F8, v104);
                uint64_t v106 = v105;

                uint64_t v107 = *(void **)(v111 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourLabel);
                id v108 = v106;
                [v107 setAttributedText:v108];

                id v61 = v108;
              }

              (*(void (**)(char *, uint64_t))(v109 + 8))(v48, v110);
              return;
            }
            goto LABEL_55;
          }
LABEL_54:
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v36)(v19, 1, 1, v14);
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v118 + 56))(v22, 1, 1, v14);
      }
      __break(1u);
      goto LABEL_54;
    }
    if (v116 == 1)
    {
      id v53 = [v119 unitManager];
      id v54 = v117;
      if (!v53)
      {
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
        goto LABEL_58;
      }
      uint64_t v55 = v53;
      id v56 = [v53 userActiveEnergyBurnedUnit];

      id v57 = [v54 formattedActiveEnergyValueForUnit:v56];
      if (v57)
      {
        uint64_t v58 = v57;
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v60 = v59;
      }
      else
      {
        uint64_t v60 = 0;
      }
      uint64_t v76 = *(void **)(v111 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel);
      id v77 = [self energyColors];
      if (!v77) {
        goto LABEL_57;
      }
      uint64_t v78 = v77;
      id v79 = [v77 nonGradientTextColor];

      [v76 setTextColor:v79];
      id v80 = v76;

      if (v60) {
        NSString v81 = String._bridgeToObjectiveC()();
      }
      else {
        NSString v81 = 0;
      }
      [v80 setText:v81];

      swift_bridgeObjectRelease();
    }
    else
    {
    }
    id v82 = v119;
  }
  else
  {
    uint64_t v38 = (uint64_t)v120;
    uint64_t v39 = v116;
    sub_10031EA04(v38, a5, v39, a8);
  }
}

uint64_t sub_10031FDC8(void **a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DateInterval();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v9 = __chkstk_darwin(v8).n128_u64[0];
  uint64_t v11 = (char *)&v18 - v10;
  id v12 = *a1;
  id v13 = [v12 type];
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v11, a2, v4);
  if (v13 == (id)3)
  {
    id v14 = [v12 dateInterval];
    static DateInterval._unconditionallyBridgeFromObjectiveC(_:)();

    char v15 = DateInterval.intersects(_:)();
    NSString v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v7, v4);
    v16(v11, v4);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    char v15 = 0;
  }
  return v15 & 1;
}

id sub_10032004C(char a1)
{
  uint64_t v2 = v1;
  if (qword_10094A720 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)UILabel.withFont(_:)();
  id v5 = [self secondaryLabelColor];
  uint64_t v6 = (void *)UILabel.withTextColor(_:)();

  NSString v7 = String._bridgeToObjectiveC()();
  [v6 setText:v7];

  if (qword_10094A728 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)UILabel.withFont(_:)();
  double v9 = self;
  id result = [v9 distanceColors];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v11 = result;
  id v12 = [result nonGradientTextColor];

  [v8 setTextColor:v12];
  NSString v13 = String._bridgeToObjectiveC()();
  [v8 setText:v13];

  id v14 = (void *)UILabel.withFont(_:)();
  id result = [v9 elapsedTimeColors];
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  char v15 = result;
  id v16 = [result nonGradientTextColor];

  [v14 setTextColor:v16];
  NSString v17 = String._bridgeToObjectiveC()();
  [v14 setText:v17];

  uint64_t v18 = (void *)UILabel.withFont(_:)();
  id result = [v9 paceColors];
  if (!result)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  NSString v19 = result;
  id v20 = [result nonGradientTextColor];

  [v18 setTextColor:v20];
  NSString v21 = String._bridgeToObjectiveC()();
  [v18 setText:v21];

  id result = [*(id *)(v2 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorView) setHidden:a1 & 1];
  if (a1)
  {
    uint64_t v22 = *(void **)(v2 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewBottomAnchorStandard);
    if (v22) {
      [v22 setActive:0];
    }
    id result = *(id *)(v2 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewBottomAnchorLastRow);
    if (result)
    {
      return [result setActive:1];
    }
  }
  return result;
}

id sub_10032049C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailFourColumnSegmentTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutDetailFourColumnSegmentTableViewCell()
{
  return self;
}

uint64_t sub_1003204F4(void **a1)
{
  return sub_10031FDC8(a1, *(void *)(v1 + 16)) & 1;
}

id sub_1003205BC(void *a1)
{
  uint64_t v3 = OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator;
  id v4 = objc_allocWithZone((Class)UIActivityIndicatorView);
  id v5 = v1;
  *(void *)&v1[v3] = [v4 initWithActivityIndicatorStyle:100];
  type metadata accessor for WorkoutDetailSwimmingSetDataSource(0);
  sub_100322E18((unint64_t *)&qword_1009527A0, (void (*)(uint64_t))type metadata accessor for WorkoutDetailSwimmingSetDataSource);
  id v6 = a1;
  ObservedObject.init(wrappedValue:)();
  uint64_t v8 = v7;
  NSString v21 = v7;
  sub_100322DBC();
  id v9 = v8;
  uint64_t v20 = AnyView.init<A>(_:)();
  id v10 = objc_allocWithZone((Class)sub_1000AFA94(&qword_100956F90));
  *(void *)&v5[OBJC_IVAR___CHWorkoutDetailedBasicViewController_metricController] = UIHostingController.init(rootView:)();

  v19.receiver = v5;
  v19.super_class = (Class)type metadata accessor for WorkoutDetailedBasicViewController();
  [super initWithNibName:0 bundle:0];
  id v12 = self;
  id v13 = v11;
  id v14 = [v12 mainBundle];
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [v14 localizedStringForKey:v15 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v13 setTitle:v17];

  return v13;
}

id sub_100320814(void *a1)
{
  uint64_t v3 = OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator;
  id v4 = objc_allocWithZone((Class)UIActivityIndicatorView);
  id v5 = v1;
  *(void *)&v1[v3] = [v4 initWithActivityIndicatorStyle:100];
  type metadata accessor for WorkoutDetailSwimmingSplitDataSource(0);
  sub_100322E18((unint64_t *)&qword_1009552D0, (void (*)(uint64_t))type metadata accessor for WorkoutDetailSwimmingSplitDataSource);
  id v6 = a1;
  ObservedObject.init(wrappedValue:)();
  uint64_t v8 = v7;
  NSString v21 = v7;
  sub_100322D68();
  id v9 = v8;
  uint64_t v20 = AnyView.init<A>(_:)();
  id v10 = objc_allocWithZone((Class)sub_1000AFA94(&qword_100956F90));
  *(void *)&v5[OBJC_IVAR___CHWorkoutDetailedBasicViewController_metricController] = UIHostingController.init(rootView:)();

  v19.receiver = v5;
  v19.super_class = (Class)type metadata accessor for WorkoutDetailedBasicViewController();
  id v11 = [super initWithNibName:0 bundle:0];
  id v12 = self;
  id v13 = v11;
  id v14 = [v12 mainBundle];
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [v14 localizedStringForKey:v15 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v13 setTitle:v17];

  return v13;
}

void sub_100320B80()
{
  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for WorkoutDetailedBasicViewController();
  [super viewDidLoad];
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_8;
  }
  objc_super v2 = v1;
  uint64_t v3 = self;
  id v4 = [v3 systemBackgroundColor];
  [v2 setBackgroundColor:v4];

  id v5 = [v0 navigationItem];
  id v6 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:24 target:v0 action:"close"];
  [v5 setRightBarButtonItem:v6];

  NSString v7 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator];
  [v7 sizeToFit];
  id v8 = [v3 whiteColor];
  [v7 setColor:v8];

  [v7 setHidesWhenStopped:1];
  id v9 = [v0 navigationItem];
  id v10 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v7];
  [v9 setLeftBarButtonItem:v10];

  id v11 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailedBasicViewController_metricController];
  id v12 = [v11 view];
  if (!v12)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v13 = v12;
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v14 = [v11 view];
  if (!v14)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  NSString v15 = v14;
  id v16 = [v3 clearColor];
  [v15 setBackgroundColor:v16];

  id v17 = [v0 view];
  if (!v17)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v18 = v17;
  id v19 = [v11 view];
  if (v19)
  {
    uint64_t v20 = v19;
    [v18 addSubview:v19];

    [v0 addChildViewController:v11];
    [v11 didMoveToParentViewController:v0];
    sub_1003210B8();
    return;
  }
LABEL_11:
  __break(1u);
}

void sub_100320EBC(char a1)
{
  v14.receiver = v1;
  v14.super_class = (Class)type metadata accessor for WorkoutDetailedBasicViewController();
  [super viewWillAppear:a1 & 1];
  id v3 = [objc_allocWithZone((Class)UINavigationBarAppearance) init];
  [v3 configureWithOpaqueBackground];
  id v4 = self;
  id v5 = v3;
  id v6 = [v4 systemBackgroundColor];
  [v5 setBackgroundColor:v6];

  id v7 = v5;
  id v8 = [v4 systemBackgroundColor];
  [v7 setShadowColor:v8];

  id v9 = [v1 navigationItem];
  [v9 setScrollEdgeAppearance:v7];

  id v10 = [v1 tabBarController];
  if (v10)
  {
    id v11 = v10;
    id v12 = [v10 tabBar];

    id v13 = [objc_allocWithZone((Class)UITabBarAppearance) init];
    [v12 setScrollEdgeAppearance:v13];
  }
}

void sub_1003210B8()
{
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100751160;
  objc_super v2 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailedBasicViewController_metricController];
  id v3 = [v2 view];
  if (!v3)
  {
    __break(1u);
    goto LABEL_13;
  }
  id v4 = v3;
  id v5 = [v3 topAnchor];

  id v6 = [v0 view];
  if (!v6)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v7 = v6;
  id v8 = [v6 safeAreaLayoutGuide];

  id v9 = [v8 topAnchor];
  id v10 = [v5 constraintEqualToAnchor:v9];

  *(void *)(v1 + 32) = v10;
  id v11 = [v2 view];
  if (!v11)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v12 = v11;
  id v13 = [v11 leadingAnchor];

  id v14 = [v0 view];
  if (!v14)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  NSString v15 = v14;
  id v16 = [v14 safeAreaLayoutGuide];

  id v17 = [v16 leadingAnchor];
  id v18 = [v13 constraintEqualToAnchor:v17];

  *(void *)(v1 + 40) = v18;
  id v19 = [v2 view];
  if (!v19)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v20 = v19;
  id v21 = [v19 trailingAnchor];

  id v22 = [v0 view];
  if (!v22)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v23 = v22;
  id v24 = [v22 safeAreaLayoutGuide];

  id v25 = [v24 trailingAnchor];
  id v26 = [v21 constraintEqualToAnchor:v25];

  *(void *)(v1 + 48) = v26;
  id v27 = [v2 view];
  if (!v27)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v28 = v27;
  id v29 = [v27 bottomAnchor];

  id v30 = [v0 view];
  if (!v30)
  {
LABEL_19:
    __break(1u);
    return;
  }
  id v31 = v30;
  uint64_t v32 = self;
  id v33 = [v31 bottomAnchor];

  id v34 = [v29 constraintEqualToAnchor:v33];
  *(void *)(v1 + 56) = v34;
  specialized Array._endMutation()();
  sub_1001ABF94();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v32 activateConstraints:isa];
}

id sub_1003214B4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailedBasicViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutDetailedBasicViewController()
{
  return self;
}

id sub_100321558(void *a1)
{
  id v3 = (int *)sub_1000AFA94(&qword_100957000);
  __chkstk_darwin(v3);
  id v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v8 = (uint64_t *)((char *)&v33 - v7);
  uint64_t v9 = OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator;
  id v10 = objc_allocWithZone((Class)UIActivityIndicatorView);
  id v11 = v1;
  *(void *)&v1[v9] = [v10 initWithActivityIndicatorStyle:100];
  *id v8 = swift_getKeyPath();
  sub_1000AFA94(&qword_100968CD0);
  swift_storeEnumTagMultiPayload();
  id v12 = (uint64_t *)((char *)v8 + v3[9]);
  type metadata accessor for WorkoutDetailSegmentDataSource();
  sub_100322E18(&qword_100957008, (void (*)(uint64_t))type metadata accessor for WorkoutDetailSegmentDataSource);
  id v13 = a1;
  *id v12 = ObservedObject.init(wrappedValue:)();
  v12[1] = v14;
  *(uint64_t *)((char *)v8 + v3[10]) = 0x4040000000000000;
  *(uint64_t *)((char *)v8 + v3[11]) = 0x4010000000000000;
  *(uint64_t *)((char *)v8 + v3[12]) = 0x4020000000000000;
  NSString v15 = (char *)v8 + v3[13];
  uint64_t v35 = 0;
  GestureState.init(wrappedValue:)();
  uint64_t v16 = v37;
  long long v17 = v38;
  *(void *)NSString v15 = v36;
  *((void *)v15 + 1) = v16;
  *((_OWORD *)v15 + 1) = v17;
  id v18 = (uint64_t *)((char *)v8 + v3[14]);
  uint64_t v35 = 0;
  State.init(wrappedValue:)();
  uint64_t v19 = v37;
  *id v18 = v36;
  v18[1] = v19;
  sub_1000AEF2C((uint64_t)v8, (uint64_t)v5, &qword_100957000);
  sub_100322E60(&qword_100957010, &qword_100957000);
  uint64_t v36 = AnyView.init<A>(_:)();
  id v20 = objc_allocWithZone((Class)sub_1000AFA94(&qword_100956F90));
  *(void *)&v11[OBJC_IVAR___CHWorkoutDetailedBasicViewController_metricController] = UIHostingController.init(rootView:)();

  id v21 = (objc_class *)type metadata accessor for WorkoutDetailedBasicViewController();
  v34.receiver = v11;
  v34.super_class = v21;
  id v22 = [super initWithNibName:0 bundle:0];
  uint64_t v23 = self;
  id v24 = v22;
  id v25 = [v23 mainBundle];
  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = [v25 localizedStringForKey:v26 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v24 setTitle:v28];

  id v29 = (void *)((char *)v13 + OBJC_IVAR___CHWorkoutDetailSegmentDataSource_delegate);
  *id v29 = v24;
  v29[1] = &off_1008C19A0;
  id v30 = v24;
  uint64_t v31 = swift_unknownObjectRelease();
  (*(void (**)(uint64_t))((swift_isaMask & *v13) + 0x158))(v31);

  sub_10008DB18((uint64_t)v8, &qword_100957000);
  return v30;
}

id sub_10032194C(void *a1)
{
  id v3 = (int *)sub_1000AFA94(&qword_100956FE8);
  __chkstk_darwin(v3);
  id v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v8 = (uint64_t *)((char *)&v32 - v7);
  uint64_t v9 = OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator;
  id v10 = objc_allocWithZone((Class)UIActivityIndicatorView);
  id v11 = v1;
  *(void *)&v1[v9] = [v10 initWithActivityIndicatorStyle:100];
  *id v8 = swift_getKeyPath();
  sub_1000AFA94(&qword_100968CD0);
  swift_storeEnumTagMultiPayload();
  id v12 = (uint64_t *)((char *)v8 + v3[9]);
  type metadata accessor for WorkoutDetailSplitDataSource();
  sub_100322E18(&qword_100956FF0, (void (*)(uint64_t))type metadata accessor for WorkoutDetailSplitDataSource);
  id v13 = a1;
  *id v12 = ObservedObject.init(wrappedValue:)();
  v12[1] = v14;
  *(uint64_t *)((char *)v8 + v3[10]) = 0x4040000000000000;
  *(uint64_t *)((char *)v8 + v3[11]) = 0x4010000000000000;
  *(uint64_t *)((char *)v8 + v3[12]) = 0x4020000000000000;
  NSString v15 = (char *)v8 + v3[13];
  uint64_t v34 = 0;
  GestureState.init(wrappedValue:)();
  uint64_t v16 = v36;
  long long v17 = v37;
  *(void *)NSString v15 = v35;
  *((void *)v15 + 1) = v16;
  *((_OWORD *)v15 + 1) = v17;
  id v18 = (uint64_t *)((char *)v8 + v3[14]);
  uint64_t v34 = 0;
  State.init(wrappedValue:)();
  uint64_t v19 = v36;
  *id v18 = v35;
  v18[1] = v19;
  sub_1000AEF2C((uint64_t)v8, (uint64_t)v5, &qword_100956FE8);
  sub_100322E60(&qword_100956FF8, &qword_100956FE8);
  uint64_t v35 = AnyView.init<A>(_:)();
  id v20 = objc_allocWithZone((Class)sub_1000AFA94(&qword_100956F90));
  *(void *)&v11[OBJC_IVAR___CHWorkoutDetailedBasicViewController_metricController] = UIHostingController.init(rootView:)();

  id v21 = (objc_class *)type metadata accessor for WorkoutDetailedBasicViewController();
  v33.receiver = v11;
  v33.super_class = v21;
  id v22 = [super initWithNibName:0 bundle:0];
  uint64_t v23 = self;
  id v24 = v22;
  id v25 = [v23 mainBundle];
  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = [v25 localizedStringForKey:v26 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v24 setTitle:v28];

  id v29 = &v13[OBJC_IVAR___CHWorkoutDetailSplitDataSource_delegate];
  *(void *)id v29 = v24;
  *((void *)v29 + 1) = &off_1008C19A0;
  id v30 = v24;
  swift_unknownObjectRelease();
  sub_1005A45EC();

  sub_10008DB18((uint64_t)v8, &qword_100956FE8);
  return v30;
}

id sub_100321CFC(void *a1)
{
  id v3 = (int *)sub_1000AFA94(&qword_100956FD0);
  __chkstk_darwin(v3);
  id v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v8 = (uint64_t *)((char *)&v37 - v7);
  uint64_t v9 = OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator;
  id v10 = objc_allocWithZone((Class)UIActivityIndicatorView);
  id v11 = v1;
  *(void *)&v1[v9] = [v10 initWithActivityIndicatorStyle:100];
  *id v8 = swift_getKeyPath();
  sub_1000AFA94(&qword_100968CD0);
  swift_storeEnumTagMultiPayload();
  id v12 = (uint64_t *)((char *)v8 + v3[9]);
  type metadata accessor for WorkoutDetailIntervalDataSource();
  sub_100322E18(&qword_100956FD8, (void (*)(uint64_t))type metadata accessor for WorkoutDetailIntervalDataSource);
  id v13 = a1;
  *id v12 = ObservedObject.init(wrappedValue:)();
  v12[1] = v14;
  *(uint64_t *)((char *)v8 + v3[10]) = 0x4040000000000000;
  *(uint64_t *)((char *)v8 + v3[11]) = 0x4010000000000000;
  *(uint64_t *)((char *)v8 + v3[12]) = 0x4020000000000000;
  NSString v15 = (char *)v8 + v3[13];
  uint64_t v44 = 0;
  GestureState.init(wrappedValue:)();
  uint64_t v16 = v39;
  long long v17 = v40;
  *(void *)NSString v15 = aBlock;
  *((void *)v15 + 1) = v16;
  *((_OWORD *)v15 + 1) = v17;
  id v18 = (uint64_t *)((char *)v8 + v3[14]);
  uint64_t v44 = 0;
  State.init(wrappedValue:)();
  uint64_t v19 = v39;
  *id v18 = aBlock;
  v18[1] = v19;
  sub_1000AEF2C((uint64_t)v8, (uint64_t)v5, &qword_100956FD0);
  sub_100322E60(&qword_100956FE0, &qword_100956FD0);
  uint64_t aBlock = AnyView.init<A>(_:)();
  id v20 = objc_allocWithZone((Class)sub_1000AFA94(&qword_100956F90));
  *(void *)&v11[OBJC_IVAR___CHWorkoutDetailedBasicViewController_metricController] = UIHostingController.init(rootView:)();

  id v21 = (objc_class *)type metadata accessor for WorkoutDetailedBasicViewController();
  v43.receiver = v11;
  v43.super_class = v21;
  id v22 = [super initWithNibName:0 bundle:0];
  uint64_t v23 = self;
  id v24 = v22;
  id v25 = [v23 mainBundle];
  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = [v25 localizedStringForKey:v26 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v24 setTitle:v28];

  id v29 = &v13[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_delegate];
  *(void *)id v29 = v24;
  *((void *)v29 + 1) = &off_1008C19A0;
  id v30 = v24;
  swift_unknownObjectRelease();
  if (*(void *)v29) {
    [*(id *)(*(void *)v29 + OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator) startAnimating];
  }
  uint64_t v31 = *(void **)&v13[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_dataCalculator];
  uint64_t v32 = *(void *)&v13[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_workout];
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v13;
  id v41 = sub_100322E10;
  uint64_t v42 = v33;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v39 = 1107296256;
  *(void *)&long long v40 = sub_1003EF77C;
  *((void *)&v40 + 1) = &unk_1008C1A30;
  uint64_t v34 = _Block_copy(&aBlock);
  uint64_t v35 = v13;
  swift_release();
  [v31 intervalsForWorkout:v32 completion:v34];
  _Block_release(v34);

  sub_10008DB18((uint64_t)v8, &qword_100956FD0);
  return v30;
}

id sub_100322190(void *a1)
{
  id v3 = (int *)sub_1000AFA94(&qword_100956FA8);
  __chkstk_darwin(v3);
  id v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v8 = (uint64_t *)((char *)&v37 - v7);
  uint64_t v9 = OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator;
  id v10 = objc_allocWithZone((Class)UIActivityIndicatorView);
  id v11 = v1;
  *(void *)&v1[v9] = [v10 initWithActivityIndicatorStyle:100];
  *id v8 = swift_getKeyPath();
  sub_1000AFA94(&qword_100968CD0);
  swift_storeEnumTagMultiPayload();
  id v12 = (uint64_t *)((char *)v8 + v3[9]);
  type metadata accessor for WorkoutDetailTrackLapDataSource();
  sub_100322E18(&qword_100956FB0, (void (*)(uint64_t))type metadata accessor for WorkoutDetailTrackLapDataSource);
  id v13 = a1;
  *id v12 = ObservedObject.init(wrappedValue:)();
  v12[1] = v14;
  *(uint64_t *)((char *)v8 + v3[10]) = 0x4040000000000000;
  *(uint64_t *)((char *)v8 + v3[11]) = 0x4010000000000000;
  *(uint64_t *)((char *)v8 + v3[12]) = 0x4020000000000000;
  NSString v15 = (char *)v8 + v3[13];
  uint64_t v44 = 0;
  GestureState.init(wrappedValue:)();
  uint64_t v16 = v39;
  long long v17 = v40;
  *(void *)NSString v15 = aBlock;
  *((void *)v15 + 1) = v16;
  *((_OWORD *)v15 + 1) = v17;
  id v18 = (uint64_t *)((char *)v8 + v3[14]);
  uint64_t v44 = 0;
  State.init(wrappedValue:)();
  uint64_t v19 = v39;
  *id v18 = aBlock;
  v18[1] = v19;
  sub_1000AEF2C((uint64_t)v8, (uint64_t)v5, &qword_100956FA8);
  sub_100322E60(&qword_100956FB8, &qword_100956FA8);
  uint64_t aBlock = AnyView.init<A>(_:)();
  id v20 = objc_allocWithZone((Class)sub_1000AFA94(&qword_100956F90));
  *(void *)&v11[OBJC_IVAR___CHWorkoutDetailedBasicViewController_metricController] = UIHostingController.init(rootView:)();

  id v21 = (objc_class *)type metadata accessor for WorkoutDetailedBasicViewController();
  v43.receiver = v11;
  v43.super_class = v21;
  [super initWithNibName:0 bundle:0];
  uint64_t v23 = self;
  id v24 = v22;
  id v25 = [v23 mainBundle];
  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = [v25 localizedStringForKey:v26 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v24 setTitle:v28];

  id v29 = &v13[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_delegate];
  *(void *)id v29 = v24;
  *((void *)v29 + 1) = &off_1008C19A0;
  id v30 = v24;
  swift_unknownObjectRelease();
  if (*(void *)v29) {
    [*(id *)(*(void *)v29 + OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator) startAnimating];
  }
  uint64_t v31 = *(void **)&v13[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_dataCalculator];
  uint64_t v32 = *(void *)&v13[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_workout];
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v13;
  id v41 = sub_100322D60;
  uint64_t v42 = v33;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v39 = 1107296256;
  *(void *)&long long v40 = sub_1006A042C;
  *((void *)&v40 + 1) = &unk_1008C19E0;
  uint64_t v34 = _Block_copy(&aBlock);
  uint64_t v35 = v13;
  swift_release();
  [v31 trackLapsForWorkout:v32 completion:v34];
  _Block_release(v34);

  sub_10008DB18((uint64_t)v8, &qword_100956FA8);
  return v30;
}

id sub_100322624(void *a1)
{
  id v3 = (int *)sub_1000AFA94(&qword_100956F98);
  __chkstk_darwin(v3);
  id v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v8 = (uint64_t *)((char *)&v30 - v7);
  uint64_t v9 = OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator;
  id v10 = objc_allocWithZone((Class)UIActivityIndicatorView);
  id v11 = v1;
  *(void *)&v1[v9] = [v10 initWithActivityIndicatorStyle:100];
  *id v8 = swift_getKeyPath();
  sub_1000AFA94(&qword_100968CD0);
  swift_storeEnumTagMultiPayload();
  id v12 = (uint64_t *)((char *)v8 + v3[9]);
  type metadata accessor for WorkoutDetailDownhillRunDataSource();
  sub_100322E18(&qword_100953A90, (void (*)(uint64_t))type metadata accessor for WorkoutDetailDownhillRunDataSource);
  id v13 = a1;
  *id v12 = ObservedObject.init(wrappedValue:)();
  v12[1] = v14;
  *(uint64_t *)((char *)v8 + v3[10]) = 0x4040000000000000;
  *(uint64_t *)((char *)v8 + v3[11]) = 0x4010000000000000;
  *(uint64_t *)((char *)v8 + v3[12]) = 0x4020000000000000;
  NSString v15 = (char *)v8 + v3[13];
  uint64_t v32 = 0;
  GestureState.init(wrappedValue:)();
  uint64_t v16 = v34;
  long long v17 = v35;
  *(void *)NSString v15 = v33;
  *((void *)v15 + 1) = v16;
  *((_OWORD *)v15 + 1) = v17;
  id v18 = (uint64_t *)((char *)v8 + v3[14]);
  uint64_t v32 = 0;
  State.init(wrappedValue:)();
  uint64_t v19 = v34;
  *id v18 = v33;
  v18[1] = v19;
  sub_1000AEF2C((uint64_t)v8, (uint64_t)v5, &qword_100956F98);
  sub_100322E60(&qword_100956FA0, &qword_100956F98);
  uint64_t v33 = AnyView.init<A>(_:)();
  id v20 = objc_allocWithZone((Class)sub_1000AFA94(&qword_100956F90));
  *(void *)&v11[OBJC_IVAR___CHWorkoutDetailedBasicViewController_metricController] = UIHostingController.init(rootView:)();

  id v21 = (objc_class *)type metadata accessor for WorkoutDetailedBasicViewController();
  v31.receiver = v11;
  v31.super_class = v21;
  id v22 = [super initWithNibName:0 bundle:0];
  uint64_t v23 = self;
  id v24 = v22;
  id v25 = [v23 mainBundle];
  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = [v25 localizedStringForKey:v26 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v24 setTitle:v28];

  sub_10008DB18((uint64_t)v8, &qword_100956F98);
  return v24;
}

id sub_100322998(void *a1, CLLocationDegrees a2, CLLocationDegrees a3)
{
  uint64_t v7 = type metadata accessor for WorkoutReportTrackIssueView();
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  id v12 = (char *)&v23 - v11;
  uint64_t v13 = OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator;
  id v14 = objc_allocWithZone((Class)UIActivityIndicatorView);
  NSString v15 = v3;
  *(void *)&v3[v13] = [v14 initWithActivityIndicatorStyle:100];
  *uint64_t v9 = swift_getKeyPath();
  sub_1000AFA94(&qword_10094DFC8);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for TrackIssue();
  swift_allocObject();
  id v16 = a1;
  sub_100180598((uint64_t)a1, a2, a3);
  long long v17 = (uint64_t *)((char *)v9 + *(int *)(v7 + 20));
  sub_100322E18(&qword_100956F80, (void (*)(uint64_t))type metadata accessor for TrackIssue);
  *long long v17 = ObservedObject.init(wrappedValue:)();
  v17[1] = v18;
  sub_100322BFC((uint64_t)v9, (uint64_t)v12);
  sub_100322C60((uint64_t)v12, (uint64_t)v9);
  sub_100322E18(&qword_100956F88, (void (*)(uint64_t))type metadata accessor for WorkoutReportTrackIssueView);
  uint64_t v25 = AnyView.init<A>(_:)();
  id v19 = objc_allocWithZone((Class)sub_1000AFA94(&qword_100956F90));
  *(void *)&v15[OBJC_IVAR___CHWorkoutDetailedBasicViewController_metricController] = UIHostingController.init(rootView:)();

  id v20 = (objc_class *)type metadata accessor for WorkoutDetailedBasicViewController();
  v24.receiver = v15;
  v24.super_class = v20;
  id v21 = [super initWithNibName:0 bundle:0];
  sub_100322CC4((uint64_t)v12);
  return v21;
}

uint64_t sub_100322BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutReportTrackIssueView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100322C60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutReportTrackIssueView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100322CC4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WorkoutReportTrackIssueView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100322D28()
{
  return swift_deallocObject();
}

void sub_100322D60(unint64_t a1, uint64_t a2)
{
  sub_10069F6B4(a1, a2, *(void **)(v2 + 16));
}

unint64_t sub_100322D68()
{
  unint64_t result = qword_100956FC0;
  if (!qword_100956FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956FC0);
  }
  return result;
}

unint64_t sub_100322DBC()
{
  unint64_t result = qword_100956FC8;
  if (!qword_100956FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956FC8);
  }
  return result;
}

void sub_100322E10(unint64_t a1, uint64_t a2)
{
  sub_1003EE950(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100322E18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100322E60(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100322EBC@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14, uint64_t a15, unsigned __int8 a16, uint64_t a17)
{
  uint64_t v39 = a7;
  uint64_t v48 = a17;
  int v46 = a16;
  uint64_t v45 = a15;
  int v44 = a14;
  uint64_t v43 = a13;
  uint64_t v41 = a8;
  uint64_t v42 = a12;
  uint64_t v40 = a11;
  uint64_t v47 = sub_1000AFA94(&qword_10094C580);
  __chkstk_darwin(v47);
  uint64_t v25 = (char *)&v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a9 = swift_getKeyPath();
  sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  NSString v26 = (int *)type metadata accessor for LargeAwardsCardView();
  sub_100093E60(a1, (uint64_t)a9 + v26[5]);
  *(uint64_t *)((char *)a9 + v26[6]) = a2;
  *(uint64_t *)((char *)a9 + v26[7]) = a3;
  id v27 = (uint64_t *)((char *)a9 + v26[8]);
  void *v27 = a4;
  v27[1] = a5;
  NSString v28 = (uint64_t *)((char *)a9 + v26[9]);
  uint64_t v29 = v39;
  *NSString v28 = a6;
  v28[1] = v29;
  *(uint64_t *)((char *)a9 + v26[10]) = v41;
  sub_1000AEEC8(a10, (uint64_t)a9 + v26[11], &qword_10094C750);
  sub_1000AEEC8(v40, (uint64_t)a9 + v26[12], &qword_10094C6A0);
  uint64_t v30 = (char *)a9 + v26[13];
  uint64_t v49 = v42;
  uint64_t v50 = v43;
  char v51 = v44 & 1;
  sub_1000AFA94(&qword_100950270);
  State.init(wrappedValue:)();
  char v31 = v53;
  uint64_t v32 = v54;
  *(_OWORD *)uint64_t v30 = v52;
  v30[16] = v31;
  *((void *)v30 + 3) = v32;
  uint64_t v33 = v26[14];
  uint64_t v49 = v45;
  sub_1000AFA94(&qword_100950278);
  State.init(wrappedValue:)();
  *(_OWORD *)((char *)a9 + v33) = v52;
  uint64_t v34 = (char *)a9 + v26[15];
  LOBYTE(v49) = v46;
  State.init(wrappedValue:)();
  uint64_t v35 = *((void *)&v52 + 1);
  *uint64_t v34 = v52;
  *((void *)v34 + 1) = v35;
  uint64_t v36 = v48;
  sub_1000AEF2C(v48, (uint64_t)v25, &qword_10094C580);
  State.init(wrappedValue:)();
  return sub_10008DB18(v36, &qword_10094C580);
}

uint64_t *sub_100323158(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    long long v10 = *(_OWORD *)((char *)a2 + v9 + 24);
    *(_OWORD *)((char *)a1 + v9 + 24) = v10;
    (**(void (***)(void))(v10 - 8))();
    uint64_t v11 = a3[6];
    uint64_t v12 = a3[7];
    uint64_t v13 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = (uint64_t)v13;
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    uint64_t v14 = a3[8];
    uint64_t v15 = a3[9];
    id v16 = (uint64_t *)((char *)a1 + v14);
    long long v17 = (uint64_t *)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    void *v16 = *v17;
    v16[1] = v18;
    id v19 = (uint64_t *)((char *)a1 + v15);
    id v20 = (uint64_t *)((char *)a2 + v15);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = a3[10];
    uint64_t v24 = a3[11];
    uint64_t v25 = *(void **)((char *)a2 + v23);
    *id v19 = v21;
    v19[1] = v22;
    *(uint64_t *)((char *)a1 + v23) = (uint64_t)v25;
    NSString v26 = (char *)a1 + v24;
    id v27 = (char *)a2 + v24;
    uint64_t v28 = *(uint64_t *)((char *)a2 + v24 + 24);
    id v29 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v30 = v25;
    if (v28)
    {
      uint64_t v31 = *((void *)v27 + 4);
      *((void *)v26 + 3) = v28;
      *((void *)v26 + 4) = v31;
      (**(void (***)(char *, char *, uint64_t))(v28 - 8))(v26, v27, v28);
    }
    else
    {
      long long v32 = *((_OWORD *)v27 + 1);
      *(_OWORD *)NSString v26 = *(_OWORD *)v27;
      *((_OWORD *)v26 + 1) = v32;
      *((void *)v26 + 4) = *((void *)v27 + 4);
    }
    uint64_t v33 = a3[12];
    uint64_t v34 = (uint64_t *)((char *)a1 + v33);
    uint64_t v35 = (char *)a2 + v33;
    uint64_t v36 = *(uint64_t *)((char *)a2 + v33 + 8);
    *uint64_t v34 = *(uint64_t *)((char *)a2 + v33);
    v34[1] = v36;
    swift_retain();
    swift_retain();
    uint64_t v37 = *(int *)(sub_1000AFA94(&qword_10094C6A0) + 32);
    uint64_t v38 = (char *)v34 + v37;
    uint64_t v39 = &v35[v37];
    uint64_t v40 = type metadata accessor for GeometryProxy();
    uint64_t v41 = *(void *)(v40 - 8);
    uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
    if (v42(v39, 1, v40))
    {
      uint64_t v43 = sub_1000AFA94(&qword_10094C580);
      memcpy(v38, v39, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    uint64_t v44 = a3[13];
    uint64_t v45 = a3[14];
    int v46 = (char *)a1 + v44;
    uint64_t v47 = (char *)a2 + v44;
    *(_OWORD *)int v46 = *(_OWORD *)v47;
    v46[16] = v47[16];
    *((void *)v46 + 3) = *((void *)v47 + 3);
    uint64_t v48 = (uint64_t *)((char *)a1 + v45);
    uint64_t v49 = (uint64_t *)((char *)a2 + v45);
    uint64_t v50 = v49[1];
    *uint64_t v48 = *v49;
    v48[1] = v50;
    uint64_t v51 = a3[15];
    uint64_t v52 = a3[16];
    char v53 = (char *)a1 + v51;
    uint64_t v54 = (char *)a2 + v51;
    *char v53 = *v54;
    *((void *)v53 + 1) = *((void *)v54 + 1);
    uint64_t v55 = (char *)a1 + v52;
    id v56 = (char *)a2 + v52;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (v42(v56, 1, v40))
    {
      uint64_t v57 = sub_1000AFA94(&qword_10094C580);
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v55, v56, v40);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v55, 0, 1, v40);
    }
    uint64_t v58 = sub_1000AFA94(&qword_10094C588);
    *(void *)&v55[*(int *)(v58 + 28)] = *(void *)&v56[*(int *)(v58 + 28)];
  }
  swift_retain();
  return a1;
}

uint64_t sub_10032359C(uint64_t a1, int *a2)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + a2[5]);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v5 = a1 + a2[11];
  if (*(void *)(v5 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v5);
  }
  uint64_t v6 = a1 + a2[12];
  swift_release();
  swift_release();
  uint64_t v7 = v6 + *(int *)(sub_1000AFA94(&qword_10094C6A0) + 32);
  uint64_t v8 = type metadata accessor for GeometryProxy();
  uint64_t v9 = *(void *)(v8 - 8);
  long long v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v11 = a1 + a2[16];
  if (!v10(v11, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
  }
  sub_1000AFA94(&qword_10094C588);

  return swift_release();
}

void *sub_1003237D0(void *a1, void *a2, int *a3)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  long long v8 = *(_OWORD *)((char *)a2 + v7 + 24);
  *(_OWORD *)((char *)a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  uint64_t v9 = a3[6];
  uint64_t v10 = a3[7];
  uint64_t v11 = *(void **)((char *)a2 + v9);
  *(void *)((char *)a1 + v9) = v11;
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  uint64_t v12 = a3[8];
  uint64_t v13 = a3[9];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  long long v17 = (void *)((char *)a1 + v13);
  uint64_t v18 = (void *)((char *)a2 + v13);
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  uint64_t v21 = a3[10];
  uint64_t v22 = a3[11];
  uint64_t v23 = *(void **)((char *)a2 + v21);
  *long long v17 = v19;
  v17[1] = v20;
  *(void *)((char *)a1 + v21) = v23;
  uint64_t v24 = (char *)a1 + v22;
  uint64_t v25 = (char *)a2 + v22;
  uint64_t v26 = *(void *)((char *)a2 + v22 + 24);
  id v27 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v28 = v23;
  if (v26)
  {
    uint64_t v29 = *((void *)v25 + 4);
    *((void *)v24 + 3) = v26;
    *((void *)v24 + 4) = v29;
    (**(void (***)(char *, char *, uint64_t))(v26 - 8))(v24, v25, v26);
  }
  else
  {
    long long v30 = *((_OWORD *)v25 + 1);
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v30;
    *((void *)v24 + 4) = *((void *)v25 + 4);
  }
  uint64_t v31 = a3[12];
  long long v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = *(void *)((char *)a2 + v31 + 8);
  void *v32 = *(void *)((char *)a2 + v31);
  v32[1] = v34;
  swift_retain();
  swift_retain();
  uint64_t v35 = *(int *)(sub_1000AFA94(&qword_10094C6A0) + 32);
  uint64_t v36 = (char *)v32 + v35;
  uint64_t v37 = &v33[v35];
  uint64_t v38 = type metadata accessor for GeometryProxy();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
  if (v40(v37, 1, v38))
  {
    uint64_t v41 = sub_1000AFA94(&qword_10094C580);
    memcpy(v36, v37, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  uint64_t v42 = a3[13];
  uint64_t v43 = a3[14];
  uint64_t v44 = (char *)a1 + v42;
  uint64_t v45 = (char *)a2 + v42;
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  v44[16] = v45[16];
  *((void *)v44 + 3) = *((void *)v45 + 3);
  int v46 = (void *)((char *)a1 + v43);
  uint64_t v47 = (void *)((char *)a2 + v43);
  uint64_t v48 = v47[1];
  *int v46 = *v47;
  v46[1] = v48;
  uint64_t v49 = a3[15];
  uint64_t v50 = a3[16];
  uint64_t v51 = (char *)a1 + v49;
  uint64_t v52 = (char *)a2 + v49;
  char *v51 = *v52;
  *((void *)v51 + 1) = *((void *)v52 + 1);
  char v53 = (char *)a1 + v50;
  uint64_t v54 = (char *)a2 + v50;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v40(v54, 1, v38))
  {
    uint64_t v55 = sub_1000AFA94(&qword_10094C580);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v53, v54, v38);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v53, 0, 1, v38);
  }
  uint64_t v56 = sub_1000AFA94(&qword_10094C588);
  *(void *)&v53[*(int *)(v56 + 28)] = *(void *)&v54[*(int *)(v56 + 28)];
  swift_retain();
  return a1;
}

char *sub_100323BC8(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  sub_10009EDF0((uint64_t *)&a1[a3[5]], (uint64_t *)&a2[a3[5]]);
  uint64_t v7 = a3[6];
  long long v8 = *(void **)&a1[v7];
  uint64_t v9 = *(void **)&a2[v7];
  *(void *)&a1[v7] = v9;
  id v10 = v9;

  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  uint64_t v11 = a3[8];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[9];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(void *)uint64_t v15 = *(void *)v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[10];
  uint64_t v18 = *(void **)&a1[v17];
  uint64_t v19 = *(void **)&a2[v17];
  *(void *)&a1[v17] = v19;
  id v20 = v19;

  uint64_t v21 = a3[11];
  uint64_t v22 = (uint64_t)&a1[v21];
  uint64_t v23 = (uint64_t *)&a2[v21];
  uint64_t v24 = *(void *)&a2[v21 + 24];
  if (*(void *)&a1[v21 + 24])
  {
    if (v24)
    {
      sub_10009EDF0((uint64_t *)v22, v23);
      goto LABEL_13;
    }
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v22);
  }
  else if (v24)
  {
    *(void *)(v22 + 24) = v24;
    *(void *)(v22 + 32) = v23[4];
    (**(void (***)(uint64_t, char *))(v24 - 8))(v22, (char *)v23);
    goto LABEL_13;
  }
  long long v25 = *(_OWORD *)v23;
  long long v26 = *((_OWORD *)v23 + 1);
  *(void *)(v22 + 32) = v23[4];
  *(_OWORD *)uint64_t v22 = v25;
  *(_OWORD *)(v22 + 16) = v26;
LABEL_13:
  uint64_t v27 = a3[12];
  id v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  *(void *)&a1[v27] = *(void *)&a2[v27];
  swift_retain();
  swift_release();
  *((void *)v28 + 1) = *((void *)v29 + 1);
  swift_retain();
  swift_release();
  uint64_t v30 = *(int *)(sub_1000AFA94(&qword_10094C6A0) + 32);
  uint64_t v31 = &v28[v30];
  long long v32 = &v29[v30];
  uint64_t v33 = type metadata accessor for GeometryProxy();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v31, 1, v33);
  int v37 = v35(v32, 1, v33);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
LABEL_18:
    uint64_t v38 = sub_1000AFA94(&qword_10094C580);
    memcpy(v31, v32, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 24))(v31, v32, v33);
LABEL_19:
  uint64_t v39 = a3[13];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  long long v42 = *(_OWORD *)v41;
  v40[16] = v41[16];
  *(_OWORD *)uint64_t v40 = v42;
  *((void *)v40 + 3) = *((void *)v41 + 3);
  swift_retain();
  swift_release();
  uint64_t v43 = a3[14];
  uint64_t v44 = &a1[v43];
  uint64_t v45 = &a2[v43];
  *(void *)&a1[v43] = *(void *)&a2[v43];
  swift_retain();
  swift_release();
  *((void *)v44 + 1) = *((void *)v45 + 1);
  swift_retain();
  swift_release();
  uint64_t v46 = a3[15];
  uint64_t v47 = &a1[v46];
  uint64_t v48 = &a2[v46];
  *uint64_t v47 = *v48;
  *((void *)v47 + 1) = *((void *)v48 + 1);
  swift_retain();
  swift_release();
  uint64_t v49 = a3[16];
  uint64_t v50 = &a1[v49];
  uint64_t v51 = &a2[v49];
  int v52 = v35(&a1[v49], 1, v33);
  int v53 = v35(v51, 1, v33);
  if (!v52)
  {
    if (!v53)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 24))(v50, v51, v33);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v50, v33);
    goto LABEL_24;
  }
  if (v53)
  {
LABEL_24:
    uint64_t v54 = sub_1000AFA94(&qword_10094C580);
    memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v50, v51, v33);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v50, 0, 1, v33);
LABEL_25:
  uint64_t v55 = sub_1000AFA94(&qword_10094C588);
  *(void *)&v50[*(int *)(v55 + 28)] = *(void *)&v51[*(int *)(v55 + 28)];
  swift_retain();
  swift_release();
  return a1;
}

char *sub_100324120(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  id v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  long long v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)id v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  *((void *)v10 + 4) = *((void *)v11 + 4);
  *(void *)&a1[v9] = *(void *)&a2[v9];
  uint64_t v13 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  uint64_t v14 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  uint64_t v15 = a3[11];
  uint64_t v16 = a3[12];
  uint64_t v17 = &a1[v15];
  uint64_t v18 = &a2[v15];
  long long v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *((void *)v17 + 4) = *((void *)v18 + 4);
  id v20 = &a1[v16];
  uint64_t v21 = &a2[v16];
  uint64_t v22 = *(void *)&a2[v16];
  uint64_t v23 = *(void *)&a2[v16 + 8];
  *(void *)id v20 = v22;
  *((void *)v20 + 1) = v23;
  uint64_t v24 = *(int *)(sub_1000AFA94(&qword_10094C6A0) + 32);
  long long v25 = &v20[v24];
  long long v26 = &v21[v24];
  uint64_t v27 = type metadata accessor for GeometryProxy();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  if (v29(v26, 1, v27))
  {
    uint64_t v30 = sub_1000AFA94(&qword_10094C580);
    memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  uint64_t v31 = a3[13];
  uint64_t v32 = a3[14];
  long long v33 = *(_OWORD *)&a2[v31];
  long long v34 = *(_OWORD *)&a2[v31 + 16];
  uint64_t v35 = &a1[v31];
  *(_OWORD *)uint64_t v35 = v33;
  *((_OWORD *)v35 + 1) = v34;
  *(_OWORD *)&a1[v32] = *(_OWORD *)&a2[v32];
  uint64_t v36 = a3[16];
  *(_OWORD *)&a1[a3[15]] = *(_OWORD *)&a2[a3[15]];
  int v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  if (v29(v38, 1, v27))
  {
    uint64_t v39 = sub_1000AFA94(&qword_10094C580);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v37, v38, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v37, 0, 1, v27);
  }
  uint64_t v40 = sub_1000AFA94(&qword_10094C588);
  *(void *)&v37[*(int *)(v40 + 28)] = *(void *)&v38[*(int *)(v40 + 28)];
  return a1;
}

char *sub_100324434(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    uint64_t v6 = sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  id v10 = &a2[v8];
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&a1[v8]);
  long long v11 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v11;
  *((void *)v9 + 4) = *((void *)v10 + 4);
  uint64_t v12 = a3[6];
  uint64_t v13 = *(void **)&a1[v12];
  *(void *)&a1[v12] = *(void *)&a2[v12];

  uint64_t v14 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v18 = *(void *)v16;
  uint64_t v17 = *((void *)v16 + 1);
  *(void *)uint64_t v15 = v18;
  *((void *)v15 + 1) = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  id v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v23 = *(void *)v21;
  uint64_t v22 = *((void *)v21 + 1);
  *(void *)id v20 = v23;
  *((void *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[10];
  long long v25 = *(void **)&a1[v24];
  *(void *)&a1[v24] = *(void *)&a2[v24];

  uint64_t v26 = a3[11];
  uint64_t v27 = (uint64_t)&a1[v26];
  uint64_t v28 = &a2[v26];
  if (*(void *)&a1[v26 + 24]) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v27);
  }
  long long v29 = *((_OWORD *)v28 + 1);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v29;
  *(void *)(v27 + 32) = *((void *)v28 + 4);
  uint64_t v30 = a3[12];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  *(void *)&a1[v30] = *(void *)&a2[v30];
  swift_release();
  *((void *)v31 + 1) = *((void *)v32 + 1);
  swift_release();
  uint64_t v33 = *(int *)(sub_1000AFA94(&qword_10094C6A0) + 32);
  long long v34 = &v31[v33];
  uint64_t v35 = &v32[v33];
  uint64_t v36 = type metadata accessor for GeometryProxy();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  int v39 = v38(v34, 1, v36);
  int v40 = v38(v35, 1, v36);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v34, v36);
LABEL_12:
    uint64_t v41 = sub_1000AFA94(&qword_10094C580);
    memcpy(v34, v35, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 40))(v34, v35, v36);
LABEL_13:
  uint64_t v42 = a3[13];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
  v43[16] = v44[16];
  *((void *)v43 + 3) = *((void *)v44 + 3);
  swift_release();
  uint64_t v45 = a3[14];
  uint64_t v46 = &a1[v45];
  uint64_t v47 = &a2[v45];
  *(void *)&a1[v45] = *(void *)&a2[v45];
  swift_release();
  *((void *)v46 + 1) = *((void *)v47 + 1);
  swift_release();
  uint64_t v48 = a3[15];
  uint64_t v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  char *v49 = *v50;
  *((void *)v49 + 1) = *((void *)v50 + 1);
  swift_release();
  uint64_t v51 = a3[16];
  int v52 = &a1[v51];
  int v53 = &a2[v51];
  LODWORD(v46) = v38(&a1[v51], 1, v36);
  int v54 = v38(v53, 1, v36);
  if (!v46)
  {
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 40))(v52, v53, v36);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v37 + 8))(v52, v36);
    goto LABEL_18;
  }
  if (v54)
  {
LABEL_18:
    uint64_t v55 = sub_1000AFA94(&qword_10094C580);
    memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v52, v53, v36);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v52, 0, 1, v36);
LABEL_19:
  uint64_t v56 = sub_1000AFA94(&qword_10094C588);
  *(void *)&v52[*(int *)(v56 + 28)] = *(void *)&v53[*(int *)(v56 + 28)];
  swift_release();
  return a1;
}

uint64_t sub_1003248E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003248FC);
}

uint64_t sub_1003248FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C590);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_9:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5] + 24);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v13 = sub_1000AFA94(&qword_10094C6A0);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a2)
    {
      uint64_t v8 = v13;
      uint64_t v10 = a1 + a3[12];
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      goto LABEL_9;
    }
    uint64_t v15 = sub_1000AFA94(&qword_10094C588);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[16];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_100324A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100324AA0);
}

uint64_t sub_100324AA0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_1000AFA94(&qword_10094C590);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5] + 24) = (a2 - 1);
    return result;
  }
  uint64_t v13 = sub_1000AFA94(&qword_10094C6A0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[12];
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  uint64_t v15 = sub_1000AFA94(&qword_10094C588);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[16];

  return v16(v18, a2, a2, v17);
}

uint64_t sub_100324C30()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_100324C4C()
{
  double result = 15.0;
  xmmword_100957018 = xmmword_10075E630;
  *(_OWORD *)&qword_100957028 = xmmword_10075E630;
  return result;
}

void sub_100324C64()
{
  xmmword_100957038 = 0x402E000000000000uLL;
  qword_100957048 = 0;
  unk_100957050 = 0x402E000000000000;
}

uint64_t sub_100324C7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v56 = a1;
  uint64_t v3 = type metadata accessor for TaskPriority();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  __chkstk_darwin(v3);
  int v53 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LargeAwardsCardView();
  uint64_t v50 = *(void *)(v5 - 8);
  uint64_t v48 = *(void *)(v50 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v46 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DynamicTypeSize();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v43 = type metadata accessor for AdaptiveStackType();
  uint64_t v14 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_100957118);
  uint64_t v51 = *(void *)(v17 - 8);
  uint64_t v52 = v17;
  __chkstk_darwin(v17);
  uint64_t v44 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000AFA94(&qword_100957120);
  __chkstk_darwin(v19 - 8);
  uint64_t v45 = (uint64_t)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1000AFA94(&qword_100957128) - 8;
  __chkstk_darwin(v49);
  uint64_t v47 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = v1;
  sub_100092088((uint64_t)v13);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for DynamicTypeSize.xxLarge(_:), v7);
  sub_1000A3A40((unint64_t *)&qword_10094C6D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  char v22 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v10, v7);
  v23(v13, v7);
  uint64_t v24 = (unsigned int *)&enum case for AdaptiveStackType.horizontal(_:);
  if ((v22 & 1) == 0) {
    uint64_t v24 = (unsigned int *)&enum case for AdaptiveStackType.vertical(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *v24, v43);
  uint64_t v43 = static VerticalAlignment.top.getter();
  static HorizontalAlignment.center.getter();
  uint64_t v25 = v46;
  sub_10032796C(v2, v46);
  unint64_t v26 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  uint64_t v27 = swift_allocObject();
  sub_1003279D4(v25, v27 + v26);
  sub_1000AFA94(&qword_100957130);
  sub_1000A132C(&qword_100957138, &qword_100957130);
  uint64_t v28 = v44;
  AdaptiveStack.init(type:verticalAlignment:horizontalAlignment:spacing:content:)();
  uint64_t v29 = static Alignment.center.getter();
  uint64_t v30 = v45;
  double v32 = sub_1004DD95C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v45, 0.0, 1, 0.0, 1, v29, v31);
  (*(void (**)(char *, uint64_t, double))(v51 + 8))(v28, v52, v32);
  sub_10032796C(v42, v25);
  uint64_t v33 = swift_allocObject();
  sub_1003279D4(v25, v33 + v26);
  long long v34 = v53;
  static TaskPriority.userInitiated.getter();
  uint64_t v35 = (uint64_t)v47;
  uint64_t v36 = &v47[*(int *)(v49 + 44)];
  uint64_t v37 = type metadata accessor for _TaskModifier();
  uint64_t v39 = v54;
  uint64_t v38 = v55;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(&v36[*(int *)(v37 + 20)], v34, v55);
  *(void *)uint64_t v36 = &unk_100957148;
  *((void *)v36 + 1) = v33;
  sub_1000AEF2C(v30, v35, &qword_100957120);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v38);
  sub_10008DB18(v30, &qword_100957120);
  return sub_1000AEEC8(v35, v56, &qword_100957128);
}

uint64_t sub_1003252E8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v100 = a2;
  uint64_t v3 = type metadata accessor for LargeAwardsCardView();
  uint64_t v101 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v102 = v4;
  uint64_t KeyPath = (uint64_t)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DynamicTypeSize();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v113 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v112 = (uint64_t)&v95 - v9;
  uint64_t v10 = sub_1000AFA94(&qword_10094C6A0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_100957158);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v95 - v18;
  uint64_t v99 = sub_1000AFA94(&qword_100957160);
  __chkstk_darwin(v99);
  unint64_t v98 = (unint64_t)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000AFA94(&qword_100957168);
  uint64_t v105 = *(void *)(v21 - 8);
  uint64_t v106 = v21;
  __chkstk_darwin(v21);
  double v104 = (char *)&v95 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v97 = (char *)&v95 - v24;
  __chkstk_darwin(v25);
  uint64_t v110 = (char *)&v95 - v26;
  sub_1000AFA94(&qword_10094C588);
  State.projectedValue.getter();
  sub_1000AEF2C((uint64_t)v12, (uint64_t)v16, &qword_10094C6A0);
  sub_100325F78(a1, (uint64_t)&v123);
  sub_10008DB18((uint64_t)v12, &qword_10094C6A0);
  uint64_t v27 = &v16[*(int *)(v14 + 44)];
  char v28 = v124[48];
  long long v29 = *(_OWORD *)v124;
  long long v30 = *(_OWORD *)&v124[16];
  *(_OWORD *)uint64_t v27 = v123;
  *((_OWORD *)v27 + 1) = v29;
  long long v31 = *(_OWORD *)&v124[32];
  *((_OWORD *)v27 + 2) = v30;
  *((_OWORD *)v27 + 3) = v31;
  v27[64] = v28;
  uint64_t v96 = v19;
  sub_1000AEEC8((uint64_t)v16, (uint64_t)v19, &qword_100957158);
  uint64_t v32 = v112;
  uint64_t v116 = a1;
  sub_100092088(v112);
  LODWORD(v12) = enum case for DynamicTypeSize.xxLarge(_:);
  uint64_t v33 = *(void (**)(char *, void, uint64_t))(v6 + 104);
  long long v34 = v113;
  uint64_t v115 = v6 + 104;
  id v108 = v33;
  v33(v113, enum case for DynamicTypeSize.xxLarge(_:), v5);
  uint64_t v35 = v34;
  uint64_t v114 = sub_1000A3A40((unint64_t *)&qword_10094C6D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  LOBYTE(v34) = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v6 + 8);
  v36(v35, v5);
  uint64_t v111 = v6 + 8;
  uint64_t v107 = (void (*)(uint64_t, uint64_t))v36;
  v36((char *)v32, v5);
  unsigned int v109 = v12;
  if (v34)
  {
    if (qword_10094A9A8 != -1) {
      swift_once();
    }
    uint64_t v37 = &xmmword_100957038;
  }
  else
  {
    if (qword_10094A9A0 != -1) {
      swift_once();
    }
    uint64_t v37 = &xmmword_100957018;
  }
  uint64_t v39 = *((void *)v37 + 2);
  uint64_t v38 = *((void *)v37 + 3);
  long long v95 = *v37;
  char v40 = static Edge.Set.all.getter();
  uint64_t v41 = (uint64_t)v96;
  uint64_t v42 = v98;
  sub_1000AEF2C((uint64_t)v96, v98, &qword_100957158);
  uint64_t v43 = v42 + *(int *)(v99 + 36);
  *(unsigned char *)uint64_t v43 = v40;
  *(_OWORD *)(v43 + 8) = v95;
  *(void *)(v43 + 24) = v39;
  *(void *)(v43 + 32) = v38;
  *(unsigned char *)(v43 + 40) = 0;
  sub_10008DB18(v41, &qword_100957158);
  uint64_t v44 = KeyPath;
  sub_10032796C(v116, KeyPath);
  unint64_t v45 = (*(unsigned __int8 *)(v101 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
  uint64_t v46 = swift_allocObject();
  sub_1003279D4(v44, v46 + v45);
  sub_100327BD8();
  uint64_t v47 = v97;
  View.onTapGesture(count:perform:)();
  swift_release();
  sub_10008DB18(v42, &qword_100957160);
  (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v110, v47, v106);
  uint64_t v48 = v112;
  sub_100092088(v112);
  uint64_t v49 = v113;
  uint64_t v50 = v109;
  v108(v113, v109, v5);
  LOBYTE(v45) = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v51 = v107;
  v107((uint64_t)v49, v5);
  v51(v48, v5);
  if (v45) {
    uint64_t v52 = static HorizontalAlignment.leading.getter();
  }
  else {
    uint64_t v52 = static HorizontalAlignment.center.getter();
  }
  unint64_t v98 = v52;
  sub_100326474(v116, (uint64_t)v162);
  LODWORD(v99) = static Edge.Set.top.getter();
  uint64_t v53 = v112;
  sub_100092088(v112);
  uint64_t v54 = v113;
  v108(v113, v50, v5);
  char v55 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v56 = v54;
  uint64_t v57 = v107;
  v107((uint64_t)v56, v5);
  v57(v53, v5);
  if ((v55 & 1) != 0 && qword_10094A9A0 != -1) {
    swift_once();
  }
  char v151 = 0;
  *(_OWORD *)((char *)&v150[7] + 7) = v162[7];
  *(_OWORD *)((char *)&v150[6] + 7) = v162[6];
  *(_OWORD *)((char *)&v150[3] + 7) = v162[3];
  *(_OWORD *)((char *)&v150[2] + 7) = v162[2];
  *(_OWORD *)((char *)&v150[8] + 7) = v163[0];
  v150[9] = *(_OWORD *)((char *)v163 + 9);
  *(_OWORD *)((char *)&v150[4] + 7) = v162[4];
  *(_OWORD *)((char *)&v150[5] + 7) = v162[5];
  *(_OWORD *)((char *)v150 + 7) = v162[0];
  *(_OWORD *)((char *)&v150[1] + 7) = v162[1];
  LODWORD(v97) = 0;
  long long v158 = v150[6];
  long long v159 = v150[7];
  long long v160 = v150[8];
  long long v161 = *(_OWORD *)((char *)v163 + 9);
  long long v154 = v150[2];
  long long v155 = v150[3];
  long long v156 = v150[4];
  long long v157 = v150[5];
  long long v152 = v150[0];
  long long v153 = v150[1];
  EdgeInsets.init(_all:)();
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  uint64_t v66 = v112;
  sub_100092088(v112);
  uint64_t v67 = v113;
  id v68 = v108;
  v108(v113, v109, v5);
  char v69 = dispatch thunk of static Comparable.< infix(_:_:)();
  double v70 = v107;
  v107((uint64_t)v67, v5);
  v70(v66, v5);
  long long v146 = v158;
  long long v147 = v159;
  long long v148 = v160;
  long long v149 = v161;
  long long v142 = v154;
  long long v143 = v155;
  long long v144 = v156;
  long long v145 = v157;
  long long v140 = v152;
  LODWORD(v101) = (v69 & 1) == 0;
  long long v141 = v153;
  unsigned __int8 v136 = 0;
  uint64_t KeyPath = swift_getKeyPath();
  LODWORD(v102) = v136;
  sub_100092088(v66);
  v68(v67, v109, v5);
  char v71 = dispatch thunk of static Comparable.< infix(_:_:)();
  v70((uint64_t)v67, v5);
  v70(v66, v5);
  id v72 = v104;
  uint64_t v73 = v105;
  double v74 = *(void (**)(char *, char *, uint64_t))(v105 + 16);
  uint64_t v75 = v106;
  v74(v104, v110, v106);
  uint64_t v76 = v100;
  v74(v100, v72, v75);
  uint64_t v77 = sub_1000AFA94(&qword_100957180);
  uint64_t v78 = &v76[*(int *)(v77 + 48)];
  uint64_t v79 = v98;
  long long v117 = v98;
  LOBYTE(v72) = (_BYTE)v97;
  LOBYTE(v118[0]) = (_BYTE)v97;
  *(_OWORD *)((char *)&v118[6] + 1) = v146;
  *(_OWORD *)((char *)&v118[7] + 1) = v147;
  *(_OWORD *)((char *)&v118[8] + 1) = v148;
  *(_OWORD *)((char *)&v118[9] + 1) = v149;
  *(_OWORD *)((char *)&v118[2] + 1) = v142;
  *(_OWORD *)((char *)&v118[3] + 1) = v143;
  *(_OWORD *)((char *)&v118[4] + 1) = v144;
  *(_OWORD *)((char *)&v118[5] + 1) = v145;
  *(_OWORD *)((char *)&v118[1] + 1) = v141;
  *(_OWORD *)((char *)v118 + 1) = v140;
  *(_DWORD *)((char *)&v118[10] + 1) = *(_DWORD *)v139;
  DWORD1(v118[10]) = *(_DWORD *)&v139[3];
  LOBYTE(v74) = v99;
  BYTE8(v118[10]) = v99;
  HIDWORD(v118[10]) = *(_DWORD *)&v138[3];
  *(_DWORD *)((char *)&v118[10] + 9) = *(_DWORD *)v138;
  *(void *)&long long v119 = v59;
  *((void *)&v119 + 1) = v61;
  *(void *)&long long v120 = v63;
  *((void *)&v120 + 1) = v65;
  LOBYTE(v121) = v102;
  DWORD1(v121) = *(_DWORD *)&v137[3];
  *(_DWORD *)((char *)&v121 + 1) = *(_DWORD *)v137;
  *((void *)&v121 + 1) = KeyPath;
  char v122 = v101;
  long long v80 = v119;
  long long v81 = v120;
  long long v82 = v121;
  v78[240] = v101;
  *((_OWORD *)v78 + 13) = v81;
  *((_OWORD *)v78 + 14) = v82;
  *((_OWORD *)v78 + 12) = v80;
  long long v83 = v117;
  long long v84 = v118[0];
  long long v85 = v118[2];
  *((_OWORD *)v78 + 2) = v118[1];
  *((_OWORD *)v78 + 3) = v85;
  *(_OWORD *)uint64_t v78 = v83;
  *((_OWORD *)v78 + 1) = v84;
  long long v86 = v118[3];
  long long v87 = v118[4];
  long long v88 = v118[6];
  *((_OWORD *)v78 + 6) = v118[5];
  *((_OWORD *)v78 + 7) = v88;
  *((_OWORD *)v78 + 4) = v86;
  *((_OWORD *)v78 + 5) = v87;
  long long v89 = v118[7];
  long long v90 = v118[8];
  long long v91 = v118[10];
  *((_OWORD *)v78 + 10) = v118[9];
  *((_OWORD *)v78 + 11) = v91;
  *((_OWORD *)v78 + 8) = v89;
  *((_OWORD *)v78 + 9) = v90;
  uint64_t v92 = &v76[*(int *)(v77 + 64)];
  *(void *)uint64_t v92 = 0;
  v92[8] = 0;
  v92[9] = (v71 & 1) == 0;
  sub_100327C80((uint64_t)&v117);
  uint64_t v93 = *(void (**)(char *, uint64_t))(v73 + 8);
  v93(v110, v75);
  long long v123 = (unint64_t)v79;
  v124[0] = (_BYTE)v72;
  *(_OWORD *)&v124[97] = v146;
  *(_OWORD *)&v124[113] = v147;
  *(_OWORD *)&v124[129] = v148;
  *(_OWORD *)&v124[145] = v149;
  *(_OWORD *)&v124[33] = v142;
  *(_OWORD *)&v124[49] = v143;
  *(_OWORD *)&v124[65] = v144;
  *(_OWORD *)&v124[81] = v145;
  *(_OWORD *)&v124[1] = v140;
  *(_OWORD *)&v124[17] = v141;
  *(_DWORD *)uint64_t v125 = *(_DWORD *)v139;
  *(_DWORD *)&v125[3] = *(_DWORD *)&v139[3];
  char v126 = (char)v74;
  *(_DWORD *)uint64_t v127 = *(_DWORD *)v138;
  *(_DWORD *)&v127[3] = *(_DWORD *)&v138[3];
  uint64_t v128 = v59;
  uint64_t v129 = v61;
  uint64_t v130 = v63;
  uint64_t v131 = v65;
  char v132 = v102;
  *(_DWORD *)v133 = *(_DWORD *)v137;
  *(_DWORD *)&v133[3] = *(_DWORD *)&v137[3];
  uint64_t v134 = KeyPath;
  char v135 = v101;
  sub_100327D08((uint64_t)&v123);
  return ((uint64_t (*)(char *, uint64_t))v93)(v104, v75);
}

double sub_100325F78@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LargeAwardsCardView();
  long long v8 = *(_OWORD *)(a1 + *(int *)(v4 + 56));
  sub_1000AFA94(&qword_100950388);
  State.wrappedValue.getter();
  if (v7)
  {
    static Edge.Set.all.getter();
    EdgeInsets.init(_all:)();
    uint64_t v5 = a1 + *(int *)(v4 + 60);
    LOBYTE(v8) = *(unsigned char *)v5;
    *((void *)&v8 + 1) = *(void *)(v5 + 8);
    swift_retain();
    sub_1000AFA94(&qword_10094DEE0);
    State.wrappedValue.getter();
    sub_1000AFA94(&qword_1009503E8);
    sub_1000AFA94(&qword_1009503E0);
    sub_100219034();
    sub_1002190D0((unint64_t *)&qword_100950408, &qword_1009503E0);
    _ConditionalContent<>.init(storage:)();
    swift_release();
  }
  else
  {
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    sub_1000AFA94(&qword_1009503E8);
    sub_1000AFA94(&qword_1009503E0);
    sub_100219034();
    sub_1002190D0((unint64_t *)&qword_100950408, &qword_1009503E0);
    _ConditionalContent<>.init(storage:)();
  }
  double result = *(double *)&v8;
  *(_OWORD *)a2 = v8;
  *(_OWORD *)(a2 + 16) = v9;
  *(_OWORD *)(a2 + 32) = v10;
  *(_OWORD *)(a2 + 48) = v11;
  *(unsigned char *)(a2 + 64) = v12;
  return result;
}

void sub_1003261D0()
{
  uint64_t v1 = type metadata accessor for LargeAwardsCardView();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v28[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v0 + *(int *)(v5 + 24));
  if (v6)
  {
    id v7 = v6;
    double v8 = sub_100326DFC();
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    sub_10032796C(v0, (uint64_t)&v28[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v15 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    uint64_t v16 = swift_allocObject();
    sub_1003279D4((uint64_t)v4, v16 + v15);
    sub_10032796C(v0, (uint64_t)v4);
    uint64_t v17 = swift_allocObject();
    sub_1003279D4((uint64_t)v4, v17 + v15);
    sub_1000AEF2C(v0 + *(int *)(v1 + 44), (uint64_t)v29, &qword_10094C750);
    if (v30)
    {
      uint64_t v18 = (char **)sub_10007E4EC(v29, v30);
      uint64_t v19 = (void *)(v0 + *(int *)(v1 + 20));
      v28[3] = &type metadata for AwardViewActionContext;
      uint64_t v20 = (double *)swift_allocObject();
      v28[0] = v20;
      v20[2] = v8;
      *((void *)v20 + 3) = v10;
      *((void *)v20 + 4) = v12;
      *((void *)v20 + 5) = v14;
      *((void *)v20 + 6) = v7;
      *((void *)v20 + 7) = sub_100327D94;
      *((void *)v20 + 8) = v16;
      *((void *)v20 + 9) = sub_100327DB0;
      *((void *)v20 + 10) = v17;
      uint64_t v21 = *v18;
      uint64_t v22 = v19[3];
      uint64_t v23 = v19[4];
      uint64_t v24 = sub_10007E4EC(v19, v22);
      id v25 = v7;
      swift_retain_n();
      swift_retain_n();
      id v26 = v25;
      sub_100676328((uint64_t)v24, (uint64_t)v28, v21, v22, v23);
      swift_release_n();
      swift_release_n();

      sub_10008DB18((uint64_t)v28, &qword_100955A00);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v29);
    }
    else
    {
      swift_release();
      swift_release();

      sub_10008DB18((uint64_t)v29, &qword_10094C750);
    }
  }
}

uint64_t sub_100326474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v66 = a1;
  uint64_t v4 = type metadata accessor for Font.Leading();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for LargeAwardsCardView();
  double v8 = (uint64_t *)(a1 + *(int *)(v65 + 32));
  uint64_t v9 = v8[1];
  uint64_t v73 = *v8;
  uint64_t v74 = v9;
  unint64_t v64 = sub_1000A06D0();
  swift_bridgeObjectRetain();
  uint64_t v10 = Text.init<A>(_:)();
  uint64_t v12 = v11;
  uint64_t v68 = v13;
  char v15 = v14 & 1;
  static Font.caption2.getter();
  unsigned int v63 = enum case for Font.Leading.tight(_:);
  uint64_t v62 = *(void (**)(char *))(v5 + 104);
  uint64_t v60 = v4;
  v62(v7);
  Font.leading(_:)();
  swift_release();
  uint64_t v61 = *(void (**)(char *, uint64_t))(v5 + 8);
  v61(v7, v4);
  uint64_t v16 = Text.font(_:)();
  uint64_t v69 = v17;
  uint64_t v70 = v16;
  char v19 = v18;
  uint64_t v71 = v20;
  swift_release();
  int v67 = v19 & 1;
  sub_1000A06C0(v10, v12, v15);
  swift_bridgeObjectRelease();
  LODWORD(v68) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  long long v29 = (uint64_t *)(v66 + *(int *)(v65 + 36));
  uint64_t v30 = v29[1];
  uint64_t v73 = *v29;
  uint64_t v74 = v30;
  swift_bridgeObjectRetain();
  uint64_t v31 = Text.init<A>(_:)();
  uint64_t v33 = v32;
  char v35 = v34 & 1;
  static Font.caption2.getter();
  uint64_t v36 = v60;
  ((void (*)(char *, void, uint64_t))v62)(v7, v63, v60);
  Font.leading(_:)();
  swift_release();
  v61(v7, v36);
  uint64_t v37 = Text.font(_:)();
  uint64_t v39 = v38;
  LOBYTE(v5) = v40;
  swift_release();
  sub_1000A06C0(v31, v33, v35);
  swift_bridgeObjectRelease();
  LODWORD(v73) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v41 = Text.foregroundStyle<A>(_:)();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  LOBYTE(v9) = v46 & 1;
  sub_1000A06C0(v37, v39, v5 & 1);
  swift_bridgeObjectRelease();
  char v47 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  char v48 = v67;
  char v72 = v67;
  char v82 = v67;
  char v80 = 0;
  char v78 = v9;
  char v75 = 0;
  *(_DWORD *)(a2 + 17) = v73;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)((char *)&v73 + 3);
  *(_DWORD *)(a2 + 33) = *(_DWORD *)v81;
  *(_DWORD *)(a2 + 36) = *(_DWORD *)&v81[3];
  *(_DWORD *)(a2 + 73) = *(_DWORD *)v79;
  *(_DWORD *)(a2 + 76) = *(_DWORD *)&v79[3];
  int v49 = *(_DWORD *)v77;
  *(_DWORD *)(a2 + 100) = *(_DWORD *)&v77[3];
  *(_DWORD *)(a2 + 97) = v49;
  int v50 = *(_DWORD *)v76;
  *(_DWORD *)(a2 + 116) = *(_DWORD *)&v76[3];
  *(_DWORD *)(a2 + 113) = v50;
  LOBYTE(v50) = v75;
  uint64_t v52 = v69;
  uint64_t v51 = v70;
  *(void *)a2 = v70;
  *(void *)(a2 + 8) = v52;
  *(unsigned char *)(a2 + 16) = v48;
  *(void *)(a2 + 24) = v71;
  *(unsigned char *)(a2 + 32) = v68;
  *(void *)(a2 + 40) = v22;
  *(void *)(a2 + 48) = v24;
  *(void *)(a2 + 56) = v26;
  *(void *)(a2 + 64) = v28;
  *(unsigned char *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = v41;
  *(void *)(a2 + 88) = v43;
  *(unsigned char *)(a2 + 96) = v9;
  *(void *)(a2 + 104) = v45;
  *(unsigned char *)(a2 + 112) = v47;
  *(void *)(a2 + 120) = v53;
  *(void *)(a2 + 128) = v54;
  *(void *)(a2 + 136) = v55;
  *(void *)(a2 + 144) = v56;
  *(unsigned char *)(a2 + 152) = v50;
  uint64_t v57 = v51;
  uint64_t v58 = v52;
  sub_1000A1750(v51, v52, v48);
  swift_bridgeObjectRetain();
  sub_1000A1750(v41, v43, v9);
  swift_bridgeObjectRetain();
  sub_1000A06C0(v41, v43, v9);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v57, v58, v72);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10032690C()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10000DFA8;
  return sub_1003269B8();
}

uint64_t sub_1003269B8()
{
  v1[18] = v0;
  type metadata accessor for MainActor();
  v1[19] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[20] = v3;
  v1[21] = v2;
  return _swift_task_switch(sub_100326A50, v3, v2);
}

uint64_t sub_100326A50()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = type metadata accessor for LargeAwardsCardView();
  v0[22] = v2;
  uint64_t v3 = *(void **)(v1 + *(int *)(v2 + 24));
  v0[23] = v3;
  if (v3 && (uint64_t v4 = *(void **)(v1 + *(int *)(v2 + 40))) != 0)
  {
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_100326BCC;
    uint64_t v5 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_100006388;
    v0[13] = &unk_1008C1AA8;
    v0[14] = v5;
    [v4 thumbnailImageForAchievement:v3 size:v0 + 10 completion:90.0, 90.0];
    return _swift_continuation_await(v0 + 2);
  }
  else
  {
    swift_release();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_100326BCC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 168);
  uint64_t v2 = *(void *)(*(void *)v0 + 160);
  return _swift_task_switch(sub_100326CD4, v2, v1);
}

uint64_t sub_100326CD4()
{
  uint64_t v1 = *(void **)(v0 + 184);
  swift_release();
  uint64_t v2 = *(void **)(v0 + 120);

  if (v2)
  {
    uint64_t v4 = *(void *)(v0 + 176);
    uint64_t v3 = *(void **)(v0 + 184);
    uint64_t v5 = *(void *)(v0 + 144);
    [v2 size];
    uint64_t v6 = v5 + *(int *)(v4 + 52);
    char v7 = *(unsigned char *)(v6 + 16);
    uint64_t v8 = *(void *)(v6 + 24);
    *(_OWORD *)(v0 + 80) = *(_OWORD *)v6;
    *(unsigned char *)(v0 + 96) = v7;
    *(void *)(v0 + 104) = v8;
    *(void *)(v0 + 120) = v9;
    *(void *)(v0 + 128) = v10;
    *(unsigned char *)(v0 + 136) = 0;
    sub_1000AFA94(&qword_100950380);
    State.wrappedValue.setter();
    id v11 = v2;
    uint64_t v12 = Image.init(uiImage:)();
    *(_OWORD *)(v0 + 80) = *(_OWORD *)(v5 + *(int *)(v4 + 56));
    *(void *)(v0 + 120) = v12;
    sub_1000AFA94(&qword_100950388);
    State.wrappedValue.setter();
  }
  else
  {
  }
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

double sub_100326DFC()
{
  uint64_t v87 = type metadata accessor for GlobalCoordinateSpace();
  uint64_t v86 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  long long v85 = (char *)&v83 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for DynamicTypeSize();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v93 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v7 = (char *)&v83 - v6;
  uint64_t v8 = type metadata accessor for LocalCoordinateSpace();
  uint64_t v92 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for GeometryProxy();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  char v14 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_10094C580);
  __chkstk_darwin(v15 - 8);
  long long v89 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  long long v90 = (char *)&v83 - v18;
  __chkstk_darwin(v19);
  long long v88 = (char *)&v83 - v20;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v83 - v22;
  uint64_t v95 = type metadata accessor for LargeAwardsCardView();
  uint64_t v98 = v0;
  sub_1000AFA94(&qword_10094C6A0);
  Binding.wrappedValue.getter();
  uint64_t v96 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v97 = v12 + 48;
  int v24 = v96(v23, 1, v11);
  uint64_t v94 = v11;
  uint64_t v91 = v12;
  uint64_t v84 = v8;
  long long v83 = v10;
  if (v24)
  {
    sub_10008DB18((uint64_t)v23, &qword_10094C580);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v23, v11);
    sub_10008DB18((uint64_t)v23, &qword_10094C580);
    static CoordinateSpaceProtocol<>.local.getter();
    GeometryProxy.frame<A>(in:)();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v10, v8);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  sub_100092088((uint64_t)v7);
  uint64_t v25 = v93;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v93, enum case for DynamicTypeSize.xxLarge(_:), v2);
  sub_1000A3A40((unint64_t *)&qword_10094C6D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  char v26 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v3 + 8);
  v27(v25, v2);
  v27(v7, v2);
  uint64_t v28 = v95;
  sub_1000AFA94(&qword_10094C588);
  if (v26)
  {
    uint64_t v29 = (uint64_t)v88;
    State.wrappedValue.getter();
    uint64_t v30 = v94;
    if (v96((char *)v29, 1, v94))
    {
      sub_10008DB18(v29, &qword_10094C580);
      double v31 = -15.0;
      uint64_t v32 = v91;
    }
    else
    {
      uint64_t v32 = v91;
      (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v14, v29, v30);
      sub_10008DB18(v29, &qword_10094C580);
      char v35 = v85;
      static CoordinateSpaceProtocol<>.global.getter();
      uint64_t v36 = v87;
      GeometryProxy.frame<A>(in:)();
      CGFloat v38 = v37;
      CGFloat v40 = v39;
      CGFloat v42 = v41;
      CGFloat v44 = v43;
      uint64_t v45 = v35;
      uint64_t v28 = v95;
      (*(void (**)(char *, uint64_t))(v86 + 8))(v45, v36);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v30);
      v102.origin.x = v38;
      v102.origin.y = v40;
      v102.size.width = v42;
      v102.size.height = v44;
      double v31 = CGRectGetMinX(v102) + -20.0 + 5.0;
    }
    uint64_t v46 = v92;
    char v47 = (long long *)(v98 + *(int *)(v28 + 52));
    char v48 = *((unsigned char *)v47 + 16);
    uint64_t v49 = *((void *)v47 + 3);
    long long v99 = *v47;
    char v100 = v48;
    uint64_t v101 = v49;
    sub_1000AFA94(&qword_100950380);
    State.wrappedValue.getter();
    uint64_t v50 = (uint64_t)v90;
    State.wrappedValue.getter();
    if (v96((char *)v50, 1, v30))
    {
      sub_10008DB18(v50, &qword_10094C580);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v14, v50, v30);
      sub_10008DB18(v50, &qword_10094C580);
      uint64_t v68 = v83;
      static CoordinateSpaceProtocol<>.local.getter();
      uint64_t v69 = v84;
      GeometryProxy.frame<A>(in:)();
      CGFloat v71 = v70;
      CGFloat v73 = v72;
      CGFloat v75 = v74;
      CGFloat v77 = v76;
      (*(void (**)(char *, uint64_t))(v46 + 8))(v68, v69);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v30);
      v104.origin.x = v71;
      v104.origin.y = v73;
      v104.size.width = v75;
      v104.size.height = v77;
      CGRectGetMinY(v104);
    }
    if (qword_10094A9A0 != -1) {
      swift_once();
    }
    uint64_t v78 = *(void *)v47;
    uint64_t v79 = *((void *)v47 + 1);
    char v80 = *((unsigned char *)v47 + 16);
    uint64_t v81 = *((void *)v47 + 3);
    *(void *)&long long v99 = v78;
    *((void *)&v99 + 1) = v79;
    char v100 = v80;
    uint64_t v101 = v81;
    State.wrappedValue.getter();
    *(void *)&long long v99 = v78;
    *((void *)&v99 + 1) = v79;
    char v100 = v80;
    uint64_t v101 = v81;
  }
  else
  {
    uint64_t v33 = (uint64_t)v89;
    State.wrappedValue.getter();
    uint64_t v34 = v94;
    if (v96((char *)v33, 1, v94))
    {
      sub_10008DB18(v33, &qword_10094C580);
      double v31 = -15.0;
    }
    else
    {
      uint64_t v51 = v91;
      (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v14, v33, v34);
      sub_10008DB18(v33, &qword_10094C580);
      uint64_t v52 = v85;
      static CoordinateSpaceProtocol<>.global.getter();
      uint64_t v53 = v87;
      GeometryProxy.frame<A>(in:)();
      CGFloat v55 = v54;
      CGFloat v57 = v56;
      CGFloat v59 = v58;
      CGFloat v61 = v60;
      uint64_t v62 = v53;
      uint64_t v28 = v95;
      (*(void (**)(char *, uint64_t))(v86 + 8))(v52, v62);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v14, v34);
      v103.origin.x = v55;
      v103.origin.y = v57;
      v103.size.width = v59;
      v103.size.height = v61;
      double v31 = CGRectGetMinX(v103) + -20.0 + 5.0;
    }
    if (qword_10094A9A0 != -1) {
      swift_once();
    }
    uint64_t v63 = v98 + *(int *)(v28 + 52);
    uint64_t v65 = *(void *)(v63 + 8);
    char v66 = *(unsigned char *)(v63 + 16);
    uint64_t v67 = *(void *)(v63 + 24);
    *(void *)&long long v99 = *(void *)v63;
    uint64_t v64 = v99;
    *((void *)&v99 + 1) = v65;
    char v100 = v66;
    uint64_t v101 = v67;
    sub_1000AFA94(&qword_100950380);
    State.wrappedValue.getter();
    *(void *)&long long v99 = v64;
    *((void *)&v99 + 1) = v65;
    char v100 = v66;
    uint64_t v101 = v67;
  }
  State.wrappedValue.getter();
  return v31;
}

uint64_t sub_100327894()
{
  return State.wrappedValue.setter();
}

uint64_t sub_1003278FC()
{
  return State.wrappedValue.setter();
}

uint64_t sub_10032796C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LargeAwardsCardView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003279D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LargeAwardsCardView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100327A38@<X0>(char *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for LargeAwardsCardView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1003252E8(v4, a1);
}

uint64_t sub_100327AAC()
{
  type metadata accessor for LargeAwardsCardView();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10005DB5C;
  return sub_10032690C();
}

void sub_100327B7C()
{
}

unint64_t sub_100327BD8()
{
  unint64_t result = qword_100957170;
  if (!qword_100957170)
  {
    sub_1000A1370(&qword_100957160);
    sub_1000A132C(&qword_100957178, &qword_100957158);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100957170);
  }
  return result;
}

uint64_t sub_100327C80(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v3 = *(void *)(a1 + 112);
  char v4 = *(unsigned char *)(a1 + 120);
  sub_1000A1750(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_1000A1750(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_100327D08(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v3 = *(void *)(a1 + 112);
  char v4 = *(unsigned char *)(a1 + 120);
  sub_1000A06C0(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_1000A06C0(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100327D94()
{
  return sub_100327DC8((uint64_t (*)(uint64_t))sub_100327894);
}

uint64_t sub_100327DB0()
{
  return sub_100327DC8((uint64_t (*)(uint64_t))sub_1003278FC);
}

uint64_t sub_100327DC8(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for LargeAwardsCardView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_100327E3C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_100327E88()
{
  unint64_t result = qword_100957188;
  if (!qword_100957188)
  {
    sub_1000A1370(&qword_100957128);
    sub_100327F34();
    sub_1000A3A40((unint64_t *)&qword_100950478, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100957188);
  }
  return result;
}

unint64_t sub_100327F34()
{
  unint64_t result = qword_100957190;
  if (!qword_100957190)
  {
    sub_1000A1370(&qword_100957120);
    sub_1000A132C(&qword_100957198, &qword_100957118);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100957190);
  }
  return result;
}

uint64_t *sub_100327FD4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
  }
  swift_retain();
  return a1;
}

uint64_t sub_1003280A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_release();
}

uint64_t sub_10032811C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_retain();
  return a1;
}

uint64_t sub_1003281A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10032823C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_1003282C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_release();
  return a1;
}

uint64_t sub_10032834C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100328360);
}

uint64_t sub_100328360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100328420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100328434);
}

uint64_t sub_100328434(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Date();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for SleepingSampleSingleMetricChartPoint()
{
  uint64_t result = qword_1009571F8;
  if (!qword_1009571F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10032853C()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1003285E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((static Date.== infix(_:_:)() & 1) == 0
    || *(double *)(a1 + *(int *)(a3 + 20)) != *(double *)(a2 + *(int *)(a3 + 20)))
  {
    return 0;
  }

  return static Color.== infix(_:_:)();
}

unint64_t sub_100328660()
{
  unint64_t result = sub_100523A24((uint64_t)&off_1008B3758);
  qword_100997CB8 = result;
  return result;
}

uint64_t sub_10032868C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LegacyDeviceModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for LegacyDeviceModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for LegacyDeviceModel()
{
  return &type metadata for LegacyDeviceModel;
}

BOOL sub_10032876C(uint64_t a1, uint64_t a2)
{
  uint64_t v54 = type metadata accessor for TrendListMetric();
  uint64_t v58 = *(void *)(v54 - 8);
  uint64_t v4 = __chkstk_darwin(v54);
  CGFloat v59 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v63 = (uint64_t)&v50 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  unint64_t v10 = (char *)&v50 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v50 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v50 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v50 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (unsigned __int8 *)&v50 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (unsigned __int8 *)&v50 - v24;
  __chkstk_darwin(v23);
  uint64_t v57 = (uint64_t)&v50 - v26;
  uint64_t v56 = sub_1000AFA94(&qword_1009573E8);
  __chkstk_darwin(v56);
  uint64_t v55 = (uint64_t)&v50 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *(void *)(a1 + 16);
  uint64_t v61 = *(void *)(a2 + 16);
  if (v61 != v28) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v60 = a1;
  swift_bridgeObjectRetain();
  uint64_t v29 = 0;
  uint64_t v51 = v19;
  uint64_t v52 = a2;
  do
  {
    BOOL v53 = v61 == v29;
    if (v61 == v29) {
      break;
    }
    uint64_t v39 = v57;
    unint64_t v40 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    uint64_t v41 = *(void *)(v58 + 72);
    uint64_t v62 = v29;
    uint64_t v42 = v41 * v29;
    sub_1000AB940(a2 + v40 + v41 * v29, v57);
    uint64_t v43 = v60 + v40 + v42;
    uint64_t v44 = v55;
    uint64_t v45 = v55 + *(int *)(v56 + 48);
    sub_1000AB590(v39, v55);
    sub_1000AB940(v43, v45);
    sub_1000AB590(v44, (uint64_t)v25);
    sub_1000AB590(v45, (uint64_t)v22);
    LODWORD(v44) = *v25;
    LODWORD(v43) = *v22;
    sub_1000AB940((uint64_t)v25, (uint64_t)v19);
    sub_1000AB940((uint64_t)v22, (uint64_t)v16);
    if (v44 != v43)
    {
      sub_1000AB854((uint64_t)v16);
      sub_1000AB854((uint64_t)v19);
      sub_1000AB940((uint64_t)v25, (uint64_t)v13);
      sub_1000AB940((uint64_t)v22, (uint64_t)v10);
      uint64_t v48 = (uint64_t)v59;
LABEL_13:
      sub_1000AB854((uint64_t)v13);
      sub_1000AB854((uint64_t)v10);
      sub_1000AB940((uint64_t)v25, v63);
      sub_1000AB940((uint64_t)v22, v48);
LABEL_14:
      sub_1000AB854(v48);
      sub_1000AB854(v63);
      sub_1000AB854((uint64_t)v22);
      sub_1000AB854((uint64_t)v25);
      break;
    }
    int v46 = v19[1];
    sub_1000AB854((uint64_t)v19);
    int v47 = v16[1];
    sub_1000AB854((uint64_t)v16);
    sub_1000AB940((uint64_t)v25, (uint64_t)v13);
    sub_1000AB940((uint64_t)v22, (uint64_t)v10);
    uint64_t v48 = (uint64_t)v59;
    if (v46 != v47) {
      goto LABEL_13;
    }
    if (*((void *)v13 + 1) == *((void *)v10 + 1) && *((void *)v13 + 2) == *((void *)v10 + 2))
    {
      sub_1000AB854((uint64_t)v13);
      sub_1000AB854((uint64_t)v10);
      sub_1000AB940((uint64_t)v25, v63);
      sub_1000AB940((uint64_t)v22, v48);
    }
    else
    {
      char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_1000AB854((uint64_t)v13);
      sub_1000AB854((uint64_t)v10);
      sub_1000AB940((uint64_t)v25, v63);
      sub_1000AB940((uint64_t)v22, v48);
      if ((v30 & 1) == 0) {
        goto LABEL_14;
      }
    }
    double v31 = v25;
    uint64_t v32 = v22;
    uint64_t v33 = v16;
    uint64_t v34 = v13;
    char v35 = v10;
    uint64_t v36 = v63;
    type metadata accessor for AttributedString();
    sub_10032B310(&qword_1009573F0, (void (*)(uint64_t))&type metadata accessor for AttributedString);
    uint64_t v37 = v36;
    unint64_t v10 = v35;
    uint64_t v13 = v34;
    uint64_t v16 = v33;
    uint64_t v22 = v32;
    uint64_t v25 = v31;
    uint64_t v19 = v51;
    char v38 = dispatch thunk of static Equatable.== infix(_:_:)();
    sub_1000AB854(v48);
    sub_1000AB854(v37);
    sub_1000AB854((uint64_t)v22);
    sub_1000AB854((uint64_t)v25);
    uint64_t v29 = v62 + 1;
    a2 = v52;
  }
  while ((v38 & 1) != 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v53;
}

BOOL sub_100328CA0(uint64_t a1, uint64_t a2)
{
  return sub_10032ADB8(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

uint64_t sub_100328CB8()
{
  return sub_1000A7DDC(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_100328CC4()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = v1;
  if (v2 == 1)
  {
    if (qword_10094B130 != -1) {
      swift_once();
    }
    char v4 = byte_10096A4E0;
    static os_log_type_t.info.getter();
    id v5 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

    if (v4)
    {
      unint64_t v6 = 0xE600000000000000;
      uint64_t v3 = 0x736978656C41;
    }
    else
    {
      id v7 = (id)FIUICopyUserFirstNameFromAddressBook();
      if (v7)
      {
        uint64_t v8 = v7;
        uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v6 = v9;
      }
      else
      {
        uint64_t v3 = 0;
        unint64_t v6 = 0;
      }
    }
    uint64_t v10 = *(void *)(v0 + 48);
    uint64_t v11 = *(void *)(v0 + 56);
    *(void *)(v0 + 48) = v3;
    *(void *)(v0 + 56) = v6;
    swift_bridgeObjectRetain();
    sub_10032B3B0(v10, v11);
  }
  sub_10032B3C4(v1, v2);
  return v3;
}

uint64_t *sub_100328E08(void *a1, void *a2, void *a3, void *a4, char a5)
{
  unint64_t v6 = v5;
  uint64_t v29 = *v6;
  char v30 = a1;
  uint64_t v34 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v37 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  uint64_t v35 = *(void *)(v13 - 8);
  uint64_t v36 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_OWORD *)v6 + 3) = xmmword_10075E640;
  v6[8] = 0;
  v6[9] = 0;
  *((unsigned char *)v6 + 80) = 1;
  v6[11] = 0;
  *((unsigned char *)v6 + 96) = 3;
  v6[13] = 0;
  v6[14] = 0;
  v6[15] = (uint64_t)_swiftEmptyArrayStorage;
  v6[2] = (uint64_t)a2;
  v6[3] = (uint64_t)a3;
  v6[4] = (uint64_t)a4;
  *((unsigned char *)v6 + 40) = a5;
  id v33 = a2;
  id v32 = a3;
  id v31 = a4;
  sub_100329928();
  sub_1000DF004();
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, enum case for DispatchQoS.QoSClass.userInitiated(_:), v16);
  uint64_t v20 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  uint64_t v22 = (void *)swift_allocObject();
  uint64_t v23 = v29;
  uint64_t v24 = v30;
  v22[2] = v21;
  v22[3] = v24;
  v22[4] = v23;
  aBlock[4] = sub_10032B418;
  aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008C1D88;
  uint64_t v25 = _Block_copy(aBlock);
  swift_retain();
  id v26 = v24;
  static DispatchQoS.unspecified.getter();
  char v38 = _swiftEmptyArrayStorage;
  sub_10032B310((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  uint64_t v27 = v34;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v27);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v36);
  swift_release();
  swift_release();
  return v6;
}

uint64_t sub_100329290(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10094B130 != -1) {
    swift_once();
  }
  char v11 = byte_10096A4E0;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = Strong;
    *(void *)(Strong + 64) = sub_10032B424(a2, v11);
    *(void *)(v13 + 72) = v14;
    *(unsigned char *)(v13 + 80) = v15 & 1;
    swift_release();
  }
  sub_1000DF004();
  uint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = sub_10032BB9C;
  aBlock[5] = a1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008C1DB0;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10032B310((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v19);
}

uint64_t sub_1003295D0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    sub_100329FD8();
    uint64_t v2 = *(char **)(v1 + 24);
    uint64_t v3 = swift_allocObject();
    swift_weakInit();
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = sub_10032BBA4;
    *(void *)(v4 + 24) = v3;
    uint64_t v5 = &v2[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_observers];
    swift_beginAccess();
    uint64_t v6 = v2;
    swift_retain();
    swift_retain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *(void *)v5;
    *(void *)uint64_t v5 = 0x8000000000000000;
    sub_100005618((uint64_t)sub_1001B6080, v4, v1, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v5 = v8;
    swift_bridgeObjectRelease();
    swift_endAccess();

    swift_release_n();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_100329738()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100329FD8();
    return swift_release();
  }
  return result;
}

uint64_t sub_100329790()
{
  uint64_t v1 = v0;
  sub_1002E0B20(v0);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = self;
    uint64_t v5 = v2 + 32;
    swift_bridgeObjectRetain_n();
    do
    {
      sub_10008F484(v5, (uint64_t)v8);
      id v6 = [v4 defaultCenter];
      sub_10007E4EC(v8, v8[3]);
      [v6 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];

      swift_unknownObjectRelease();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v8);
      v5 += 32;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease_n();
  }

  sub_10032B3B0(*(void *)(v1 + 48), *(void *)(v1 + 56));
  swift_bridgeObjectRelease();
  sub_10005E5F8(*(void *)(v1 + 104));
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1003298D0()
{
  sub_100329790();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TrendsActivityTileDataModel()
{
  return self;
}

uint64_t sub_100329928()
{
  uint64_t result = (uint64_t)sub_1000592C0();
  if ((result & 1) == 0)
  {
    uint64_t v2 = self;
    id v3 = [v2 defaultCenter];
    if (qword_10094AEB8 != -1) {
      swift_once();
    }
    uint64_t v4 = qword_100998540;
    uint64_t v5 = self;
    id v6 = [v5 mainQueue];
    uint64_t v7 = swift_allocObject();
    swift_weakInit();
    uint64_t v27 = sub_10032B358;
    uint64_t v28 = v7;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v24 = 1107296256;
    uint64_t v25 = sub_1000711BC;
    id v26 = &unk_1008C1CE8;
    uint64_t v8 = _Block_copy(&aBlock);
    swift_release();
    id v22 = [v3 addObserverForName:v4 object:0 queue:v6 usingBlock:v8];
    _Block_release(v8);

    id v9 = [v2 defaultCenter];
    if (qword_10094A6E0 != -1) {
      swift_once();
    }
    id v10 = (id)qword_100997870;
    id v11 = [v5 mainQueue];
    uint64_t v12 = swift_allocObject();
    swift_weakInit();
    uint64_t v27 = sub_10032B380;
    uint64_t v28 = v12;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v24 = 1107296256;
    uint64_t v25 = sub_1000711BC;
    id v26 = &unk_1008C1D10;
    uint64_t v13 = _Block_copy(&aBlock);
    swift_release();
    id v14 = [v9 addObserverForName:v10 object:0 queue:v11 usingBlock:v13];
    _Block_release(v13);

    id v15 = [v2 defaultCenter];
    uint64_t v16 = kFIUIFitnessUnitPreferencesDidChangeNotification;
    id v17 = [v5 mainQueue];
    uint64_t v18 = swift_allocObject();
    swift_weakInit();
    uint64_t v27 = sub_10032B388;
    uint64_t v28 = v18;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v24 = 1107296256;
    uint64_t v25 = sub_1000711BC;
    id v26 = &unk_1008C1D38;
    uint64_t v19 = _Block_copy(&aBlock);
    swift_release();
    id v20 = [v15 addObserverForName:v16 object:0 queue:v17 usingBlock:v19];
    _Block_release(v19);

    sub_1000AFA94((uint64_t *)&unk_1009556C0);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_100752410;
    *(void *)(v21 + 56) = swift_getObjectType();
    *(void *)(v21 + 32) = v22;
    *(void *)(v21 + 88) = swift_getObjectType();
    *(void *)(v21 + 64) = v14;
    *(void *)(v21 + 120) = swift_getObjectType();
    *(void *)(v21 + 96) = v20;
    *(void *)(v0 + 120) = v21;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100329D78()
{
  uint64_t result = Notification.userInfo.getter();
  if (result)
  {
    uint64_t v1 = result;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v1 + 16) && (unint64_t v2 = sub_1000DE24C((uint64_t)v6), (v3 & 1) != 0))
    {
      sub_10008F484(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v7);
    }
    else
    {
      long long v7 = 0u;
      long long v8 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1000DEDB4((uint64_t)v6);
    if (*((void *)&v8 + 1))
    {
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        static os_log_type_t.default.getter();
        id v4 = HKLogActivity;
        os_log(_:dso:log:_:_:)();

        swift_beginAccess();
        uint64_t Strong = swift_weakLoadStrong();
        if (Strong)
        {
          *(unsigned char *)(Strong + 40) = 16;
          swift_release();
        }
        swift_beginAccess();
        uint64_t result = swift_weakLoadStrong();
        if (result)
        {
          sub_100329FD8();
          return swift_release();
        }
      }
    }
    else
    {
      return sub_10008DB18((uint64_t)&v7, &qword_100955A00);
    }
  }
  return result;
}

uint64_t sub_100329F20()
{
  static os_log_type_t.default.getter();
  id v0 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100329FD8();
    return swift_release();
  }
  return result;
}

void sub_100329FD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = sub_10032A57C();
  uint64_t v12 = *(void *)(v0 + 88);
  uint64_t v13 = *(unsigned __int8 *)(v1 + 96);
  uint64_t v14 = (uint64_t)v10;
  unsigned __int8 v15 = v11;
  id v23 = (id)v6;
  switch(v13)
  {
    case 1:
      if (v11 == 1) {
        goto LABEL_7;
      }
      goto LABEL_10;
    case 2:
      if (v11 == 2) {
        goto LABEL_7;
      }
      goto LABEL_10;
    case 3:
      if (v11 < 3u) {
        goto LABEL_10;
      }
      goto LABEL_11;
    default:
      if (v11) {
        goto LABEL_10;
      }
LABEL_7:
      swift_bridgeObjectRetain();
      BOOL v16 = sub_10032876C(v14, v12);
      swift_bridgeObjectRelease();
      if (v16)
      {
        swift_bridgeObjectRelease();
LABEL_11:
        static os_log_type_t.default.getter();
        id v23 = HKLogActivity;
        os_log(_:dso:log:_:_:)();
        uint64_t v21 = v23;
      }
      else
      {
LABEL_10:
        sub_1000DF004();
        id v17 = (void *)static OS_dispatch_queue.main.getter();
        uint64_t v18 = swift_allocObject();
        swift_weakInit();
        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = v14;
        *(unsigned char *)(v19 + 24) = v15;
        *(void *)(v19 + 32) = v18;
        aBlock[4] = sub_10032B300;
        aBlock[5] = v19;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100070394;
        aBlock[3] = &unk_1008C1CC0;
        id v20 = _Block_copy(aBlock);
        swift_release();
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10032B310((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1000AFA94((uint64_t *)&unk_1009555E0);
        sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v20);

        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        (*(void (**)(char *, id))(v7 + 8))(v9, v23);
      }
      return;
  }
}

uint64_t sub_10032A3F4(uint64_t a1, char a2)
{
  static os_log_type_t.default.getter();
  uint64_t v4 = (void *)HKLogActivity;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1007509E0;
  id v6 = v4;
  uint64_t v7 = sub_1000A7DDC(a1, a2);
  uint64_t v9 = v8;
  *(void *)(v5 + 56) = &type metadata for String;
  *(void *)(v5 + 64) = sub_1000AA64C();
  *(void *)(v5 + 32) = v7;
  *(void *)(v5 + 40) = v9;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(void *)(Strong + 88) = a1;
    *(unsigned char *)(Strong + 96) = a2;
    swift_bridgeObjectRetain();
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v12 = *(void (**)(uint64_t))(result + 104);
    sub_10008A670((uint64_t)v12);
    uint64_t result = swift_release();
    if (v12)
    {
      v12(result);
      return sub_10005E5F8((uint64_t)v12);
    }
  }
  return result;
}

void *sub_10032A57C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TrendListMetric();
  uint64_t v44 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v40 - v6;
  id v8 = [self standardUserDefaults];
  unsigned __int8 v9 = [v8 BOOLForKey:@"ActivityDidDisplayTrendsOnboarding"];

  if (v9)
  {
    int v10 = 1;
  }
  else
  {
    if (qword_10094B130 != -1) {
      swift_once();
    }
    int v10 = byte_10096A4E0;
  }
  unint64_t v11 = *(void *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC10FitnessApp25TrendsAvailabilityManager_trendsAvailability);
  sub_1000AFA94(&qword_1009573F8);
  if (v11 <= 1) {
    uint64_t result = 0;
  }
  else {
    uint64_t result = _swiftEmptyArrayStorage;
  }
  if (v11 >= 2 && v10 != 0)
  {
    if (v11 == 2)
    {
      return _swiftEmptyArrayStorage;
    }
    else
    {
      uint64_t v41 = v5;
      if (v11 == 3)
      {
        uint64_t v43 = *(void *)(v1 + 24);
        uint64_t v14 = (uint64_t *)(v43 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidUpTrends);
        swift_beginAccess();
        uint64_t v15 = *v14;
        int64_t v16 = *(void *)(*v14 + 16);
        id v17 = _swiftEmptyArrayStorage;
        if (v16)
        {
          int v46 = _swiftEmptyArrayStorage;
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1000B1C64(0, v16, 0);
          uint64_t v18 = 0;
          id v17 = v46;
          uint64_t v42 = *(void *)(v1 + 32);
          do
          {
            uint64_t v19 = *(unsigned __int8 *)(v15 + v18 + 32);
            uint64_t v20 = sub_100328CC4();
            sub_1003A70B4(v19, v43, v42, v20, v21, *(void *)(v1 + 64), *(void *)(v1 + 72), *(unsigned __int8 *)(v1 + 80), v7, *(unsigned char *)(v1 + 40), 2u);
            int64_t v22 = v16;
            swift_bridgeObjectRelease();
            int v46 = v17;
            unint64_t v24 = v17[2];
            unint64_t v23 = v17[3];
            if (v24 >= v23 >> 1)
            {
              sub_1000B1C64(v23 > 1, v24 + 1, 1);
              id v17 = v46;
            }
            ++v18;
            v17[2] = v24 + 1;
            sub_1000AB590((uint64_t)v7, (uint64_t)v17+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v24);
            int64_t v16 = v22;
          }
          while (v22 != v18);
          swift_bridgeObjectRelease();
          swift_release();
        }
        uint64_t v25 = (uint64_t *)(v43 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidDownTrends);
        swift_beginAccess();
        uint64_t v26 = *v25;
        int64_t v27 = *(void *)(v26 + 16);
        uint64_t v28 = _swiftEmptyArrayStorage;
        if (v27)
        {
          uint64_t v45 = _swiftEmptyArrayStorage;
          swift_retain();
          uint64_t v42 = v26;
          swift_bridgeObjectRetain();
          sub_1000B1C64(0, v27, 0);
          uint64_t v29 = 0;
          uint64_t v28 = v45;
          uint64_t v30 = *(void *)(v1 + 32);
          id v31 = v41;
          do
          {
            uint64_t v32 = *(unsigned __int8 *)(v42 + v29 + 32);
            uint64_t v33 = sub_100328CC4();
            sub_1003A70B4(v32, v43, v30, v33, v34, *(void *)(v1 + 64), *(void *)(v1 + 72), *(unsigned __int8 *)(v1 + 80), v31, *(unsigned char *)(v1 + 40), 2u);
            swift_bridgeObjectRelease();
            uint64_t v45 = v28;
            unint64_t v36 = v28[2];
            unint64_t v35 = v28[3];
            if (v36 >= v35 >> 1)
            {
              sub_1000B1C64(v35 > 1, v36 + 1, 1);
              uint64_t v28 = v45;
            }
            ++v29;
            v28[2] = v36 + 1;
            uint64_t v37 = (uint64_t)v28
                + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))
                + *(void *)(v44 + 72) * v36;
            id v31 = v41;
            sub_1000AB590((uint64_t)v41, v37);
          }
          while (v27 != v29);
          swift_bridgeObjectRelease();
          swift_release();
        }
        swift_beginAccess();
        swift_retain();
        uint64_t v38 = swift_bridgeObjectRetain();
        uint64_t v39 = sub_10032AE38(v38, v1);
        swift_bridgeObjectRelease();
        swift_release();
        int v47 = v17;
        sub_1000D5248((uint64_t)v28);
        sub_1000D5248((uint64_t)v39);
        return v47;
      }
      else
      {
        uint64_t result = (void *)_diagnoseUnexpectedEnumCase<A>(type:)();
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TrendsType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TrendsType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TrendsType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrendsType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TrendsType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10032AD88(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_10032ADA0(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

BOOL sub_10032ADB8(uint64_t a1, char a2, uint64_t a3, char a4)
{
  switch(a2)
  {
    case 1:
      if (a4 != 1) {
        return 0;
      }
      return sub_10032876C(a3, a1);
    case 2:
      if (a4 == 2) {
        return sub_10032876C(a3, a1);
      }
      return 0;
    case 3:
      return (a4 & 0xF) == 3;
    default:
      return !a4 && sub_10032876C(a3, a1);
  }
}

void *sub_10032AE38(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
  __chkstk_darwin(v5 - 8);
  uint64_t v46 = (uint64_t)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AttributedString();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v42 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TrendListMetric();
  uint64_t v40 = *(void *)(v10 - 8);
  uint64_t v41 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = _swiftEmptyArrayStorage;
  if (v13)
  {
    uint64_t v44 = v7;
    BOOL v53 = _swiftEmptyArrayStorage;
    sub_1000B1C64(0, v13, 0);
    uint64_t v14 = v53;
    uint64_t v15 = (unsigned __int8 *)(a1 + 32);
    uint64_t v45 = *(void *)(a2 + 32);
    uint64_t v43 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v38[1] = a2;
    uint64_t v39 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    v38[0] = v8 + 32;
    int64_t v16 = v2;
    while (1)
    {
      unsigned __int8 v17 = *v15;
      uint64_t v51 = v15 + 1;
      uint64_t v52 = v14;
      uint64_t v18 = sub_1000AAF10();
      uint64_t v20 = v19;
      uint64_t v21 = v46;
      sub_1000A9B5C(v17, 2u, v46);
      uint64_t v14 = v16;
      if (v16) {
        break;
      }
      int64_t v50 = v13;
      uint64_t v22 = v44;
      (*v43)(v21, 0, 1, v44);
      if ((*v39)(v21, 1, v22) == 1) {
        goto LABEL_11;
      }
      uint64_t v48 = v20;
      uint64_t v49 = 0;
      uint64_t v23 = v21;
      unint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))v38[0];
      uint64_t v47 = v18;
      uint64_t v25 = (uint64_t)v12;
      uint64_t v26 = v42;
      v24(v42, v23, v22);
      uint64_t v27 = sub_1000AB260();
      uint64_t v29 = v28;
      uint64_t v30 = v41;
      id v31 = v26;
      uint64_t v12 = (char *)v25;
      v24((char *)(v25 + *(int *)(v41 + 28)), (uint64_t)v31, v22);
      *(unsigned char *)uint64_t v25 = v17;
      *(unsigned char *)(v25 + 1) = 1;
      uint64_t v32 = v48;
      *(void *)(v25 + 8) = v47;
      *(void *)(v25 + 16) = v32;
      uint64_t v33 = (uint64_t *)(v25 + *(int *)(v30 + 32));
      *uint64_t v33 = v27;
      v33[1] = v29;
      uint64_t v14 = v52;
      BOOL v53 = v52;
      unint64_t v35 = v52[2];
      unint64_t v34 = v52[3];
      if (v35 >= v34 >> 1)
      {
        sub_1000B1C64(v34 > 1, v35 + 1, 1);
        uint64_t v14 = v53;
      }
      v14[2] = v35 + 1;
      sub_1000AB590(v25, (uint64_t)v14+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v35);
      int64_t v16 = v49;
      int64_t v13 = v50 - 1;
      uint64_t v15 = v51;
      if (v50 == 1) {
        return v14;
      }
    }
    swift_errorRelease();
    (*v43)(v21, 1, 1, v44);
LABEL_11:
    swift_bridgeObjectRelease();
    sub_10008DB18(v21, (uint64_t *)&unk_10095BFD0);
    sub_10032B234();
    swift_allocError();
    unsigned char *v36 = 0;
    swift_willThrow();
    swift_release();
  }
  return v14;
}

unint64_t sub_10032B234()
{
  unint64_t result = qword_100957400;
  if (!qword_100957400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100957400);
  }
  return result;
}

uint64_t sub_10032B288()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10032B2C0()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10032B300()
{
  return sub_10032A3F4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_10032B310(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10032B358()
{
  return sub_100329F20();
}

uint64_t sub_10032B380()
{
  return sub_100329D78();
}

uint64_t sub_10032B388()
{
  return sub_100329F20();
}

uint64_t sub_10032B3B0(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10032B3C4(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10032B3D8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10032B418()
{
  return sub_100329290(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10032B424(void *a1, char a2)
{
  uint64_t v4 = type metadata accessor for Calendar();
  uint64_t v60 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v61 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  int64_t v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v55 - v14;
  uint64_t v16 = type metadata accessor for DateComponents();
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v23 = (char *)&v55 - v22;
  if ((a2 & 1) == 0)
  {
    uint64_t v57 = v10;
    uint64_t v58 = v21;
    uint64_t v59 = v20;
    id v62 = 0;
    id v25 = [a1 dateOfBirthComponentsWithError:&v62];
    id v26 = v62;
    if (v25)
    {
      uint64_t v27 = v25;
      static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();
      id v28 = v26;

      id v62 = 0;
      id v29 = [a1 biologicalSexWithError:&v62];
      if (v29)
      {
        uint64_t v30 = v29;
        id v31 = v62;
        [v30 biologicalSex];

        Date.init()();
        if (qword_10094A5E8 != -1) {
          swift_once();
        }
        uint64_t v32 = sub_1000876DC(v4, (uint64_t)qword_100997610);
        Calendar.date(from:)();
        uint64_t v33 = v57;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v9, 1, v57) != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v13, v9, v33);
          (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v6, v32, v4);
          sub_1000AFA94((uint64_t *)&unk_1009559B0);
          uint64_t v56 = type metadata accessor for Calendar.Component();
          uint64_t v40 = *(void *)(v56 - 8);
          unint64_t v41 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
          uint64_t v42 = swift_allocObject();
          *(_OWORD *)(v42 + 16) = xmmword_1007509E0;
          unint64_t v55 = v42 + v41;
          (*(void (**)(unint64_t))(v40 + 104))(v42 + v41);
          sub_1000C6A18(v42);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();
          Calendar.dateComponents(_:from:to:)();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v60 + 8))(v6, v4);
          uint64_t v43 = DateComponents.year.getter();
          if ((v44 & 1) == 0)
          {
            uint64_t v24 = v43;
            uint64_t v45 = v59;
            uint64_t v46 = *(void (**)(char *, uint64_t))(v58 + 8);
            v46(v19, v59);
            uint64_t v47 = *(void (**)(char *, uint64_t))(v61 + 8);
            uint64_t v48 = v13;
            uint64_t v49 = v57;
            v47(v48, v57);
            v47(v15, v49);
            v46(v23, v45);
            return v24;
          }
          sub_10032BBE4();
          swift_allocError();
          swift_willThrow();
          uint64_t v50 = v59;
          uint64_t v51 = *(void (**)(char *, uint64_t))(v58 + 8);
          v51(v19, v59);
          uint64_t v52 = *(void (**)(char *, uint64_t))(v61 + 8);
          BOOL v53 = v13;
          uint64_t v54 = v57;
          v52(v53, v57);
          v52(v15, v54);
          v51(v23, v50);
          goto LABEL_12;
        }
        sub_10008DB18((uint64_t)v9, (uint64_t *)&unk_10095B890);
        sub_10032BBE4();
        swift_allocError();
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v61 + 8))(v15, v33);
      }
      else
      {
        id v35 = v62;
        _convertNSErrorToError(_:)();

        swift_willThrow();
      }
      (*(void (**)(char *, uint64_t))(v58 + 8))(v23, v59);
    }
    else
    {
      id v34 = v62;
      _convertNSErrorToError(_:)();

      swift_willThrow();
    }
LABEL_12:
    static os_log_type_t.error.getter();
    unint64_t v36 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1007509E0;
    *(void *)(v37 + 56) = &type metadata for String;
    *(void *)(v37 + 64) = sub_1000AA64C();
    *(void *)(v37 + 32) = 0xD00000000000003DLL;
    *(void *)(v37 + 40) = 0x80000001007C1020;
    id v38 = v36;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    swift_errorRelease();
    return 0;
  }
  return 34;
}

uint64_t sub_10032BB9C()
{
  return sub_1003295D0();
}

uint64_t sub_10032BBA4()
{
  return sub_100329738();
}

uint64_t sub_10032BBAC()
{
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_10032BBE4()
{
  unint64_t result = qword_100957408;
  if (!qword_100957408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100957408);
  }
  return result;
}

uint64_t sub_10032BC5C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  }
  else
  {
    uint64_t v7 = a1;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a3[7];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = *(void **)((char *)a2 + v8);
    *(void *)(a1 + v8) = v11;
    uint64_t v12 = type metadata accessor for MetricFormattingHelper();
    uint64_t v13 = *(int *)(v12 + 20);
    uint64_t v51 = v10 + v13;
    uint64_t v53 = v9 + v13;
    uint64_t v14 = type metadata accessor for AttributedString();
    uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v15 = v11;
    v49(v53, v51, v14);
    uint64_t v16 = *(int *)(v12 + 24);
    uint64_t v17 = *(void **)(v10 + v16);
    *(void *)(v9 + v16) = v17;
    uint64_t v18 = a3[8];
    uint64_t v19 = a3[9];
    uint64_t v20 = *(void **)((char *)a2 + v18);
    *(void *)(v7 + v18) = v20;
    uint64_t v21 = *(void **)((char *)a2 + v19);
    *(void *)(v7 + v19) = v21;
    uint64_t v22 = a3[10];
    uint64_t v23 = a3[11];
    uint64_t v24 = *(void **)((char *)a2 + v22);
    *(void *)(v7 + v22) = v24;
    *(void *)(v7 + v23) = *(uint64_t *)((char *)a2 + v23);
    uint64_t v25 = a3[12];
    uint64_t v26 = a3[13];
    uint64_t v50 = *(void **)((char *)a2 + v25);
    *(void *)(v7 + v25) = v50;
    uint64_t v54 = *(void **)((char *)a2 + v26);
    *(void *)(v7 + v26) = v54;
    uint64_t v27 = a3[14];
    uint64_t v28 = a3[15];
    uint64_t v52 = *(void **)((char *)a2 + v27);
    *(void *)(v7 + v27) = v52;
    *(unsigned char *)(v7 + v28) = *((unsigned char *)a2 + v28);
    uint64_t v29 = a3[17];
    *(unsigned char *)(v7 + a3[16]) = *((unsigned char *)a2 + a3[16]);
    *(void *)(v7 + v29) = *(uint64_t *)((char *)a2 + v29);
    uint64_t v30 = a3[18];
    uint64_t v31 = a3[19];
    uint64_t v32 = (void *)(v7 + v30);
    uint64_t v33 = (uint64_t *)((char *)a2 + v30);
    uint64_t v34 = v33[1];
    void *v32 = *v33;
    v32[1] = v34;
    uint64_t v35 = v7 + v31;
    uint64_t v36 = (uint64_t)a2 + v31;
    *(void *)uint64_t v35 = *(void *)v36;
    *(unsigned char *)(v35 + 8) = *(unsigned char *)(v36 + 8);
    *(void *)(v35 + 16) = *(void *)(v36 + 16);
    uint64_t v37 = a3[20];
    id v38 = (void *)(v7 + v37);
    uint64_t v39 = (uint64_t *)((char *)a2 + v37);
    uint64_t v40 = v39[1];
    *id v38 = *v39;
    v38[1] = v40;
    id v41 = v17;
    id v42 = v20;
    id v43 = v21;
    id v44 = v24;
    swift_retain();
    id v45 = v50;
    id v46 = v54;
    id v47 = v52;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_10032BEA8(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (id *)(a1 + a2[7]);

  uint64_t v5 = type metadata accessor for MetricFormattingHelper();
  uint64_t v6 = (char *)v4 + *(int *)(v5 + 20);
  uint64_t v7 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_10032BFEC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v10;
  uint64_t v11 = type metadata accessor for MetricFormattingHelper();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v50 = v9 + v12;
  uint64_t v52 = v8 + v12;
  uint64_t v13 = type metadata accessor for AttributedString();
  uint64_t v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v14 = v10;
  v48(v52, v50, v13);
  uint64_t v15 = *(int *)(v11 + 24);
  uint64_t v16 = *(void **)(v9 + v15);
  *(void *)(v8 + v15) = v16;
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = *(void **)(a2 + v17);
  *(void *)(a1 + v17) = v19;
  uint64_t v20 = *(void **)(a2 + v18);
  *(void *)(a1 + v18) = v20;
  uint64_t v21 = a3[10];
  uint64_t v22 = a3[11];
  uint64_t v23 = *(void **)(a2 + v21);
  *(void *)(a1 + v21) = v23;
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  uint64_t v24 = a3[12];
  uint64_t v25 = a3[13];
  uint64_t v49 = *(void **)(a2 + v24);
  *(void *)(a1 + v24) = v49;
  uint64_t v53 = *(void **)(a2 + v25);
  *(void *)(a1 + v25) = v53;
  uint64_t v26 = a3[14];
  uint64_t v27 = a3[15];
  uint64_t v51 = *(void **)(a2 + v26);
  *(void *)(a1 + v26) = v51;
  *(unsigned char *)(a1 + v27) = *(unsigned char *)(a2 + v27);
  uint64_t v28 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(void *)(a1 + v28) = *(void *)(a2 + v28);
  uint64_t v29 = a3[18];
  uint64_t v30 = a3[19];
  uint64_t v31 = (void *)(a1 + v29);
  uint64_t v32 = (void *)(a2 + v29);
  uint64_t v33 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v33;
  uint64_t v34 = a1 + v30;
  uint64_t v35 = a2 + v30;
  *(void *)uint64_t v34 = *(void *)v35;
  *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
  *(void *)(v34 + 16) = *(void *)(v35 + 16);
  uint64_t v36 = a3[20];
  uint64_t v37 = (void *)(a1 + v36);
  id v38 = (void *)(a2 + v36);
  uint64_t v39 = v38[1];
  void *v37 = *v38;
  v37[1] = v39;
  id v40 = v16;
  id v41 = v19;
  id v42 = v20;
  id v43 = v23;
  swift_retain();
  id v44 = v49;
  id v45 = v53;
  id v46 = v51;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10032C1E8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[7];
  uint64_t v7 = (void **)(a1 + v6);
  uint64_t v8 = a2 + v6;
  uint64_t v9 = *(void **)(a2 + v6);
  uint64_t v10 = *v7;
  *uint64_t v7 = v9;
  id v11 = v9;

  uint64_t v12 = type metadata accessor for MetricFormattingHelper();
  uint64_t v13 = *(int *)(v12 + 20);
  id v14 = (char *)v7 + v13;
  uint64_t v15 = v8 + v13;
  uint64_t v16 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = *(int *)(v12 + 24);
  uint64_t v18 = *(void **)(v8 + v17);
  uint64_t v19 = *(void **)((char *)v7 + v17);
  *(void **)((char *)v7 + v17) = v18;
  id v20 = v18;

  uint64_t v21 = a3[8];
  uint64_t v22 = *(void **)(a2 + v21);
  uint64_t v23 = *(void **)(a1 + v21);
  *(void *)(a1 + v21) = v22;
  id v24 = v22;

  uint64_t v25 = a3[9];
  uint64_t v26 = *(void **)(a2 + v25);
  uint64_t v27 = *(void **)(a1 + v25);
  *(void *)(a1 + v25) = v26;
  id v28 = v26;

  uint64_t v29 = a3[10];
  uint64_t v30 = *(void **)(a2 + v29);
  uint64_t v31 = *(void **)(a1 + v29);
  *(void *)(a1 + v29) = v30;
  id v32 = v30;

  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_retain();
  swift_release();
  uint64_t v33 = a3[12];
  uint64_t v34 = *(void **)(a2 + v33);
  uint64_t v35 = *(void **)(a1 + v33);
  *(void *)(a1 + v33) = v34;
  id v36 = v34;

  uint64_t v37 = a3[13];
  id v38 = *(void **)(a2 + v37);
  uint64_t v39 = *(void **)(a1 + v37);
  *(void *)(a1 + v37) = v38;
  id v40 = v38;

  uint64_t v41 = a3[14];
  id v42 = *(void **)(a2 + v41);
  id v43 = *(void **)(a1 + v41);
  *(void *)(a1 + v41) = v42;
  id v44 = v42;

  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  uint64_t v45 = a3[18];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  *(void *)(a1 + v45) = *(void *)(a2 + v45);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v46 + 8) = *(void *)(v47 + 8);
  swift_retain();
  swift_release();
  uint64_t v48 = a3[19];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = (uint64_t *)(a2 + v48);
  uint64_t v51 = *v50;
  *(unsigned char *)(v49 + 8) = *((unsigned char *)v50 + 8);
  *(void *)uint64_t v49 = v51;
  *(void *)(v49 + 16) = v50[2];
  swift_retain();
  swift_release();
  uint64_t v52 = a3[20];
  uint64_t v53 = (void *)(a1 + v52);
  uint64_t v54 = (void *)(a2 + v52);
  *uint64_t v53 = *v54;
  v53[1] = v54[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10032C45C(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)(a1 + v6) = *(void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for MetricFormattingHelper();
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = v8 + v10;
  uint64_t v13 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  *(void *)(v7 + *(int *)(v9 + 24)) = *(void *)(v8 + *(int *)(v9 + 24));
  uint64_t v14 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  uint64_t v18 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[19];
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  *(_OWORD *)(a1 + a3[20]) = *(_OWORD *)(a2 + a3[20]);
  return a1;
}

uint64_t sub_10032C5B8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = *(void **)(a1 + v6);
  *(void *)(a1 + v6) = *(void *)(a2 + v6);

  uint64_t v10 = type metadata accessor for MetricFormattingHelper();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = *(void **)(v7 + v15);
  *(void *)(v7 + v15) = *(void *)(v8 + v15);

  uint64_t v17 = a3[8];
  uint64_t v18 = *(void **)(a1 + v17);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);

  uint64_t v19 = a3[9];
  uint64_t v20 = *(void **)(a1 + v19);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);

  uint64_t v21 = a3[10];
  uint64_t v22 = *(void **)(a1 + v21);
  *(void *)(a1 + v21) = *(void *)(a2 + v21);

  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_release();
  uint64_t v23 = a3[12];
  id v24 = *(void **)(a1 + v23);
  *(void *)(a1 + v23) = *(void *)(a2 + v23);

  uint64_t v25 = a3[13];
  uint64_t v26 = *(void **)(a1 + v25);
  *(void *)(a1 + v25) = *(void *)(a2 + v25);

  uint64_t v27 = a3[14];
  id v28 = *(void **)(a1 + v27);
  *(void *)(a1 + v27) = *(void *)(a2 + v27);

  uint64_t v29 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v29) = *(unsigned char *)(a2 + v29);
  uint64_t v30 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  *(void *)(a1 + v30) = *(void *)(a2 + v30);
  swift_bridgeObjectRelease();
  *(void *)(v31 + 8) = *(void *)(v32 + 8);
  swift_release();
  uint64_t v33 = a3[19];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  *(void *)uint64_t v34 = *(void *)v35;
  *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
  *(void *)(v34 + 16) = *(void *)(v35 + 16);
  swift_release();
  uint64_t v36 = a3[20];
  uint64_t v37 = (void *)(a1 + v36);
  id v38 = (uint64_t *)(a2 + v36);
  uint64_t v40 = *v38;
  uint64_t v39 = v38[1];
  void *v37 = v40;
  v37[1] = v39;
  swift_release();
  return a1;
}

uint64_t sub_10032C7C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10032C7D8);
}

uint64_t sub_10032C7D8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for MetricFormattingHelper();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10032C888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10032C89C);
}

void *sub_10032C89C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for MetricFormattingHelper();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MetricFamilyRoomView()
{
  uint64_t result = qword_100957468;
  if (!qword_100957468) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10032C990()
{
  uint64_t result = type metadata accessor for MetricFormattingHelper();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10032CA94()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_10032CAB0()
{
  double result = 10.0;
  xmmword_100997CC0 = xmmword_1007509A0;
  *(_OWORD *)&qword_100997CD0 = xmmword_1007509A0;
  return result;
}

uint64_t sub_10032CAC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v73 = a1;
  uint64_t v2 = type metadata accessor for TaskPriority();
  uint64_t v71 = *(void *)(v2 - 8);
  uint64_t v72 = v2;
  __chkstk_darwin(v2);
  double v70 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MetricFamilyRoomView();
  uint64_t v67 = *(void *)(v4 - 8);
  uint64_t v66 = *(void *)(v67 + 64);
  uint64_t v5 = v4 - 8;
  uint64_t v63 = v4 - 8;
  __chkstk_darwin(v4 - 8);
  uint64_t v64 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_1009574E0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_1009574E8);
  uint64_t v60 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_1009574F0);
  uint64_t v68 = *(void *)(v14 - 8);
  uint64_t v69 = v14;
  __chkstk_darwin(v14);
  id v62 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1000AFA94(&qword_1009574F8) - 8;
  __chkstk_darwin(v61);
  uint64_t v65 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = v1;
  static Axis.Set.vertical.getter();
  sub_1000AFA94(&qword_100957500);
  sub_10032FEC8();
  ScrollView.init(_:showsIndicators:content:)();
  char v17 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v10, v7);
  uint64_t v26 = &v13[*(int *)(v11 + 36)];
  char *v26 = v17;
  *((void *)v26 + 1) = v19;
  *((void *)v26 + 2) = v21;
  *((void *)v26 + 3) = v23;
  *((void *)v26 + 4) = v25;
  v26[40] = 0;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v27 = v1 + *(int *)(v5 + 84);
  uint64_t v28 = *(void *)v27;
  char v29 = *(unsigned char *)(v27 + 8);
  uint64_t v30 = *(void *)(v27 + 16);
  uint64_t v75 = v28;
  char v76 = v29;
  uint64_t v77 = v30;
  sub_1000AFA94(&qword_10094C318);
  State.wrappedValue.getter();
  uint64_t v75 = v78;
  char v76 = v79;
  uint64_t v58 = v1;
  uint64_t v31 = v64;
  uint64_t v59 = type metadata accessor for MetricFamilyRoomView;
  sub_1003308C4(v1, v64, (uint64_t (*)(void))type metadata accessor for MetricFamilyRoomView);
  uint64_t v32 = *(unsigned __int8 *)(v67 + 80);
  uint64_t v33 = (v32 + 16) & ~v32;
  uint64_t v34 = v33 + v66;
  uint64_t v66 = v32 | 7;
  uint64_t v67 = v34;
  uint64_t v35 = swift_allocObject();
  uint64_t v57 = type metadata accessor for MetricFamilyRoomView;
  sub_100330320(v31, v35 + v33, (uint64_t (*)(void))type metadata accessor for MetricFamilyRoomView);
  sub_10032FFD0();
  sub_100192160();
  uint64_t v36 = v62;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_10008DB18((uint64_t)v13, &qword_1009574E8);
  sub_1003308C4(v1, v31, (uint64_t (*)(void))type metadata accessor for MetricFamilyRoomView);
  uint64_t v37 = swift_allocObject();
  uint64_t v38 = v31;
  uint64_t v39 = v57;
  sub_100330320(v31, v37 + v33, (uint64_t (*)(void))v57);
  uint64_t v40 = v70;
  static TaskPriority.userInitiated.getter();
  uint64_t v41 = v65;
  id v42 = &v65[*(int *)(v61 + 44)];
  uint64_t v43 = type metadata accessor for _TaskModifier();
  uint64_t v45 = v71;
  uint64_t v44 = v72;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(&v42[*(int *)(v43 + 20)], v40, v72);
  *(void *)id v42 = &unk_100957538;
  *((void *)v42 + 1) = v37;
  uint64_t v47 = v68;
  uint64_t v46 = v69;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v41, v36, v69);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v40, v44);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v46);
  uint64_t v48 = *(void *)(*(void *)(v58 + *(int *)(v63 + 40))
                  + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_metricCategoryUpdates);
  sub_1003308C4(v58, v38, (uint64_t (*)(void))v59);
  uint64_t v49 = swift_allocObject();
  sub_100330320(v38, v49 + v33, (uint64_t (*)(void))v39);
  uint64_t v50 = (uint64_t)v41;
  uint64_t v51 = (uint64_t)v41;
  uint64_t v52 = v73;
  sub_1000AEF2C(v51, v73, &qword_1009574F8);
  uint64_t v53 = sub_1000AFA94(&qword_100957540);
  *(void *)(v52 + *(int *)(v53 + 52)) = v48;
  uint64_t v54 = (uint64_t (**)(unsigned __int8 *))(v52 + *(int *)(v53 + 56));
  *uint64_t v54 = sub_100330144;
  v54[1] = (uint64_t (*)(unsigned __int8 *))v49;
  swift_retain();
  return sub_10008DB18(v50, &qword_1009574F8);
}

uint64_t sub_10032D1AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_100957518);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static HorizontalAlignment.leading.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v7 = sub_1000AFA94(&qword_100957570);
  sub_10032D2C0(a1, (uint64_t *)&v6[*(int *)(v7 + 44)]);
  LOBYTE(a1) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  sub_1000AEF2C((uint64_t)v6, a2, &qword_100957518);
  uint64_t v16 = a2 + *(int *)(sub_1000AFA94(&qword_100957500) + 36);
  *(unsigned char *)uint64_t v16 = a1;
  *(void *)(v16 + 8) = v9;
  *(void *)(v16 + 16) = v11;
  *(void *)(v16 + 24) = v13;
  *(void *)(v16 + 32) = v15;
  *(unsigned char *)(v16 + 40) = 0;
  return sub_10008DB18((uint64_t)v6, &qword_100957518);
}

uint64_t sub_10032D2C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v171 = a2;
  uint64_t v141 = type metadata accessor for Divider();
  uint64_t v140 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  uint64_t v139 = (char *)&v137 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_1000AFA94(&qword_10094E398);
  uint64_t v169 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v138 = (char *)&v137 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10094E3A0);
  __chkstk_darwin(v5 - 8);
  uint64_t v176 = (uint64_t)&v137 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v172 = (uint64_t)&v137 - v8;
  uint64_t v9 = type metadata accessor for MetricFamilyRoomView();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v149 = v9 - 8;
  uint64_t v162 = v10;
  __chkstk_darwin(v9 - 8);
  uint64_t v165 = (uint64_t)&v137 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = v11;
  __chkstk_darwin(v12);
  uint64_t v173 = (uint64_t)&v137 - v13;
  uint64_t v14 = sub_1000AFA94(&qword_100957578);
  __chkstk_darwin(v14 - 8);
  uint64_t v174 = (uint64_t)&v137 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v175 = (uint64_t)&v137 - v17;
  __chkstk_darwin(v18);
  long long v170 = (uint64_t *)((char *)&v137 - v19);
  __chkstk_darwin(v20);
  id v164 = (uint64_t *)((char *)&v137 - v21);
  __chkstk_darwin(v22);
  uint64_t v179 = (uint64_t)&v137 - v23;
  uint64_t v158 = type metadata accessor for Date();
  uint64_t v157 = *(void *)(v158 - 8);
  __chkstk_darwin(v158);
  long long v155 = (char *)&v137 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = type metadata accessor for Calendar.Component();
  uint64_t v152 = *(void *)(v153 - 8);
  __chkstk_darwin(v153);
  char v151 = (char *)&v137 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = type metadata accessor for Calendar();
  uint64_t v154 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  long long v148 = (char *)&v137 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = type metadata accessor for AccessibilityTraits();
  uint64_t v159 = *(void *)(v160 - 8);
  __chkstk_darwin(v160);
  uint64_t v150 = (char *)&v137 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = type metadata accessor for Font.Leading();
  uint64_t v146 = *(void *)(v147 - 8);
  __chkstk_darwin(v147);
  long long v144 = (char *)&v137 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1000AFA94(&qword_100957580);
  __chkstk_darwin(v29 - 8);
  uint64_t v178 = (uint64_t)&v137 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v177 = (uint64_t)&v137 - v32;
  uint64_t v145 = a1;
  uint64_t v183 = sub_1001C6128(*(unsigned char *)(a1 + 16));
  uint64_t v184 = v33;
  unint64_t v143 = sub_1000A06D0();
  uint64_t v34 = Text.init<A>(_:)();
  uint64_t v36 = v35;
  char v38 = v37 & 1;
  static Font.largeTitle.getter();
  uint64_t v39 = Text.font(_:)();
  uint64_t v41 = v40;
  char v43 = v42;
  swift_release();
  sub_1000A06C0(v34, v36, v38);
  swift_bridgeObjectRelease();
  static Font.Weight.bold.getter();
  uint64_t v167 = Text.fontWeight(_:)();
  uint64_t v166 = v44;
  int v161 = v45;
  uint64_t v168 = v46;
  sub_1000A06C0(v39, v41, v43 & 1);
  swift_bridgeObjectRelease();
  uint64_t v47 = a1 + *(int *)(v149 + 84);
  char v48 = *(unsigned char *)(v47 + 8);
  uint64_t v49 = *(char **)(v47 + 16);
  uint64_t v183 = *(void *)v47;
  LOBYTE(v184) = v48;
  uint64_t v185 = v49;
  uint64_t v149 = sub_1000AFA94(&qword_10094C318);
  State.wrappedValue.getter();
  uint64_t v183 = sub_10050E860();
  uint64_t v184 = v50;
  uint64_t v51 = Text.init<A>(_:)();
  uint64_t v53 = v52;
  LOBYTE(v36) = v54 & 1;
  static Font.body.getter();
  uint64_t v55 = v146;
  uint64_t v56 = v144;
  uint64_t v57 = v147;
  (*(void (**)(char *, void, uint64_t))(v146 + 104))(v144, enum case for Font.Leading.tight(_:), v147);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v57);
  uint64_t v58 = Text.font(_:)();
  uint64_t v60 = v59;
  LOBYTE(v55) = v61;
  swift_release();
  sub_1000A06C0(v51, v53, v36);
  swift_bridgeObjectRelease();
  static Font.Weight.semibold.getter();
  uint64_t v62 = Text.fontWeight(_:)();
  uint64_t v64 = v63;
  LOBYTE(v36) = v65 & 1;
  sub_1000A06C0(v58, v60, v55 & 1);
  swift_bridgeObjectRelease();
  LODWORD(v183) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v66 = Text.foregroundStyle<A>(_:)();
  uint64_t v68 = v67;
  char v70 = v69;
  uint64_t v72 = v71;
  sub_1000A06C0(v62, v64, v36);
  swift_bridgeObjectRelease();
  LOBYTE(v62) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v183 = v66;
  uint64_t v184 = v68;
  uint64_t v73 = v145;
  LOBYTE(v185) = v70 & 1;
  uint64_t v186 = v72;
  long long v187 = xmmword_10075E970;
  char v188 = v62;
  uint64_t v189 = v74;
  uint64_t v190 = v75;
  uint64_t v191 = v76;
  uint64_t v192 = v77;
  char v193 = 0;
  uint64_t v78 = v150;
  static AccessibilityTraits.isHeader.getter();
  sub_1000AFA94(&qword_100957588);
  sub_1003306D0();
  uint64_t v79 = v178;
  View.accessibilityAddTraits(_:)();
  (*(void (**)(char *, uint64_t))(v159 + 8))(v78, v160);
  sub_1000A06C0(v183, v184, (char)v185);
  swift_bridgeObjectRelease();
  sub_1000AEEC8(v79, v177, &qword_100957580);
  char v80 = *(unsigned char *)(v47 + 8);
  uint64_t v81 = *(void *)(v47 + 16);
  uint64_t v180 = *(void *)v47;
  char v181 = v80;
  uint64_t v182 = v81;
  State.projectedValue.getter();
  uint64_t v160 = v183;
  uint64_t v159 = v184;
  uint64_t v150 = v185;
  LODWORD(v149) = v186;
  LODWORD(v146) = *(unsigned __int8 *)(v73 + 16);
  char v82 = v148;
  static Calendar.current.getter();
  uint64_t v83 = v152;
  uint64_t v84 = v151;
  uint64_t v85 = v153;
  (*(void (**)(char *, void, uint64_t))(v152 + 104))(v151, enum case for Calendar.Component.year(_:), v153);
  uint64_t v86 = v155;
  Date.init()();
  uint64_t v147 = Calendar.component(_:from:)();
  (*(void (**)(char *, uint64_t))(v157 + 8))(v86, v158);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v84, v85);
  (*(void (**)(char *, uint64_t))(v154 + 8))(v82, v156);
  if (qword_10094A9B8 != -1) {
    swift_once();
  }
  uint64_t v157 = *((void *)&xmmword_100997CC0 + 1);
  uint64_t v158 = xmmword_100997CC0;
  uint64_t v156 = qword_100997CD0;
  long long v155 = (char *)unk_100997CD8;
  LODWORD(v154) = static Edge.Set.all.getter();
  uint64_t v87 = static HorizontalAlignment.center.getter();
  uint64_t v88 = (uint64_t)v164;
  *id v164 = v87;
  *(void *)(v88 + 8) = 0x4024000000000000;
  *(unsigned char *)(v88 + 16) = 0;
  uint64_t v153 = sub_1000AFA94(&qword_1009575A8);
  uint64_t v183 = *(void *)v73;
  swift_getKeyPath();
  uint64_t v89 = v173;
  sub_1003308C4(v73, v173, (uint64_t (*)(void))type metadata accessor for MetricFamilyRoomView);
  uint64_t v90 = *(unsigned __int8 *)(v162 + 80);
  uint64_t v91 = (v90 + 16) & ~v90;
  v163 += v91;
  long long v144 = (char *)(v90 | 7);
  uint64_t v92 = swift_allocObject();
  sub_100330320(v89, v92 + v91, (uint64_t (*)(void))type metadata accessor for MetricFamilyRoomView);
  swift_bridgeObjectRetain();
  uint64_t v93 = sub_1000AFA94(&qword_1009575B0);
  uint64_t v94 = type metadata accessor for MetricFamilyChartView();
  uint64_t v95 = sub_1000A132C(&qword_1009575B8, &qword_1009575B0);
  char v151 = (char *)sub_1003307F4();
  uint64_t v162 = v93;
  uint64_t v152 = v94;
  long long v148 = (char *)v95;
  ForEach<>.init(_:id:content:)();
  sub_1000AEEC8(v88, v179, &qword_100957578);
  uint64_t v96 = *(void *)(*(void *)(v73 + 8) + 16);
  uint64_t v97 = v165;
  sub_1003308C4(v73, v165, (uint64_t (*)(void))type metadata accessor for MetricFamilyRoomView);
  uint64_t v98 = v97;
  uint64_t v99 = v73;
  if (!v96)
  {
    sub_10006A458(v98, (uint64_t (*)(void))type metadata accessor for MetricFamilyRoomView);
    goto LABEL_7;
  }
  uint64_t v100 = *(void *)(*(void *)v98 + 16);
  sub_10006A458(v98, (uint64_t (*)(void))type metadata accessor for MetricFamilyRoomView);
  if (!v100)
  {
LABEL_7:
    uint64_t v117 = 1;
    uint64_t v116 = v172;
    uint64_t v114 = v142;
    goto LABEL_8;
  }
  uint64_t v101 = v139;
  Divider.init()();
  char v102 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v104 = v103;
  uint64_t v106 = v105;
  uint64_t v108 = v107;
  uint64_t v110 = v109;
  uint64_t v111 = v140;
  uint64_t v112 = (uint64_t)v138;
  uint64_t v113 = v141;
  (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v138, v101, v141);
  uint64_t v114 = v142;
  uint64_t v115 = v112 + *(int *)(v142 + 36);
  *(unsigned char *)uint64_t v115 = v102;
  *(void *)(v115 + 8) = v104;
  *(void *)(v115 + 16) = v106;
  *(void *)(v115 + 24) = v108;
  *(void *)(v115 + 32) = v110;
  *(unsigned char *)(v115 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v111 + 8))(v101, v113);
  uint64_t v116 = v172;
  sub_1000AEEC8(v112, v172, &qword_10094E398);
  uint64_t v117 = 0;
LABEL_8:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v169 + 56))(v116, v117, 1, v114);
  int v118 = v161 & 1;
  uint64_t v169 = (v146 - 3) < 0xFFFFFFFE;
  uint64_t v119 = static HorizontalAlignment.center.getter();
  uint64_t v120 = (uint64_t)v170;
  *long long v170 = v119;
  *(void *)(v120 + 8) = 0x4024000000000000;
  *(unsigned char *)(v120 + 16) = 0;
  uint64_t v183 = *(void *)(v99 + 8);
  swift_getKeyPath();
  uint64_t v121 = v173;
  sub_1003308C4(v99, v173, (uint64_t (*)(void))type metadata accessor for MetricFamilyRoomView);
  uint64_t v122 = swift_allocObject();
  sub_100330320(v121, v122 + v91, (uint64_t (*)(void))type metadata accessor for MetricFamilyRoomView);
  swift_bridgeObjectRetain();
  ForEach<>.init(_:id:content:)();
  char v123 = v118;
  LODWORD(v165) = v118;
  LOBYTE(v183) = v118;
  uint64_t v124 = v178;
  sub_1000AEF2C(v177, v178, &qword_100957580);
  uint64_t v125 = v175;
  sub_1000AEF2C(v179, v175, &qword_100957578);
  uint64_t v126 = v176;
  sub_1000AEF2C(v116, v176, &qword_10094E3A0);
  sub_1000AEF2C(v120, v174, &qword_100957578);
  uint64_t v127 = v171;
  uint64_t v128 = v167;
  uint64_t v129 = v166;
  *uint64_t v171 = v167;
  v127[1] = v129;
  *((unsigned char *)v127 + 16) = v123;
  v127[3] = v168;
  uint64_t v130 = (int *)sub_1000AFA94(&qword_1009575C8);
  sub_1000AEF2C(v124, (uint64_t)v127 + v130[12], &qword_100957580);
  uint64_t v131 = (char *)v127 + v130[16];
  uint64_t v132 = v159;
  *(void *)uint64_t v131 = v160;
  *((void *)v131 + 1) = v132;
  *((void *)v131 + 2) = v150;
  v131[24] = v149;
  *((void *)v131 + 4) = v169;
  v131[40] = 1;
  *((void *)v131 + 6) = v147;
  v131[56] = v154;
  uint64_t v133 = v157;
  *((void *)v131 + 8) = v158;
  *((void *)v131 + 9) = v133;
  uint64_t v134 = v155;
  *((void *)v131 + 10) = v156;
  *((void *)v131 + 11) = v134;
  v131[96] = 0;
  sub_1000AEF2C(v125, (uint64_t)v127 + v130[20], &qword_100957578);
  sub_1000AEF2C(v126, (uint64_t)v127 + v130[24], &qword_10094E3A0);
  uint64_t v135 = v174;
  sub_1000AEF2C(v174, (uint64_t)v127 + v130[28], &qword_100957578);
  LOBYTE(v130) = v165;
  sub_1000A1750(v128, v129, v165);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000A1750(v128, v129, (char)v130);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_10008DB18(v120, &qword_100957578);
  sub_10008DB18(v172, &qword_10094E3A0);
  sub_10008DB18(v179, &qword_100957578);
  swift_release();
  swift_release();
  sub_10008DB18(v177, &qword_100957580);
  sub_1000A06C0(v128, v129, (char)v130);
  swift_bridgeObjectRelease();
  sub_10008DB18(v135, &qword_100957578);
  sub_10008DB18(v176, &qword_10094E3A0);
  sub_10008DB18(v175, &qword_100957578);
  swift_release();
  swift_release();
  sub_10008DB18(v178, &qword_100957580);
  sub_1000A06C0(v128, v129, v183);
  return swift_bridgeObjectRelease();
}

void sub_10032E614(int a1@<W0>, unsigned int (*a2)(char *, uint64_t, uint64_t)@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  LODWORD(v6) = a1;
  int v8 = a3 & 1;
  uint64_t v9 = sub_1000AFA94((uint64_t *)&unk_100955590);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t *)(v4 + *(int *)(type metadata accessor for MetricFamilyRoomView() + 72));
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  uint64_t v32 = v14;
  uint64_t v33 = v13;
  sub_1000AFA94(&qword_100957558);
  State.wrappedValue.getter();
  uint64_t v15 = v34;
  if (*(void *)(v34 + 16) && (unint64_t v16 = sub_10052931C((Swift::UInt)a2, v8), (v17 & 1) != 0))
  {
    uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (*(void *)(v18 + 16) && (unint64_t v19 = sub_1000D5C14(v6), (v20 & 1) != 0))
    {
      uint64_t v21 = *(void *)(v18 + 56);
      unint64_t v29 = v19;
      uint64_t v30 = v21;
      uint64_t v22 = type metadata accessor for MetricDetailViewModel();
      uint64_t v23 = *(void *)(v22 - 8);
      int v31 = v6;
      uint64_t v6 = v23;
      sub_1003308C4(v30 + *(void *)(v23 + 72) * v29, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v22);
      LOBYTE(v6) = v31;
    }
    else
    {
      uint64_t v22 = type metadata accessor for MetricDetailViewModel();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v11, 1, 1, v22);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for MetricDetailViewModel();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v11, 1, v22) != 1)
    {
      sub_100330320((uint64_t)v11, a4, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
      return;
    }
    sub_10008DB18((uint64_t)v11, (uint64_t *)&unk_100955590);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v24 = sub_1000C4F40(v6);
  uint64_t v25 = self;
  id v26 = [v25 quantityWithUnit:v24 doubleValue:0.0];
  id v27 = [v25 quantityWithUnit:v24 doubleValue:0.0];
  uint64_t v28 = type metadata accessor for MetricDetailViewModel();
  sub_1000C3140(a2, v8, a4 + *(int *)(v28 + 36));
  Date.init()();

  *(void *)a4 = v26;
  *(void *)(a4 + 8) = v27;
  *(void *)(a4 + 16) = _swiftEmptyArrayStorage;
  *(void *)(a4 + 24) = _swiftEmptyArrayStorage;
  *(void *)(a4 + 32) = a2;
  *(unsigned char *)(a4 + 40) = v8 != 0;
  *(unsigned char *)(a4 + *(int *)(v28 + 40)) = 0;
}

id sub_10032E964@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  char v11 = *(unsigned char *)(a2 + 16);
  int v5 = *a1;
  uint64_t v10 = type metadata accessor for MetricFamilyRoomView();
  sub_1000AFA94(&qword_10094C318);
  State.wrappedValue.getter();
  uint64_t v6 = (int *)type metadata accessor for MetricFamilyChartView();
  sub_10032E614(v5, v12, v13, (uint64_t)&a3[v6[6]]);
  State.wrappedValue.getter();
  sub_1003308C4(a2 + *(int *)(v10 + 28), (uint64_t)&a3[v6[8]], (uint64_t (*)(void))type metadata accessor for MetricFormattingHelper);
  uint64_t v7 = *(void **)(a2 + *(int *)(v10 + 56));
  *a3 = v5;
  a3[1] = v11;
  int v8 = &a3[v6[7]];
  *(void *)int v8 = v12;
  v8[8] = v13;
  *(void *)&a3[v6[9]] = v7;

  return v7;
}

uint64_t sub_10032EAC0()
{
  type metadata accessor for MetricFamilyRoomView();
  sub_1000AFA94(&qword_10094C318);
  State.wrappedValue.getter();
  if (v2)
  {
    State.wrappedValue.getter();
    return v1;
  }
  else
  {
    sub_1000AFA94(&qword_10094C330);
    State.wrappedValue.getter();
    return sub_10050F2FC(v1);
  }
}

uint64_t sub_10032EBA8(unsigned int (*a1)(char *, uint64_t, uint64_t), char a2)
{
  uint64_t v3 = (uint64_t)v2;
  char v43 = a1;
  uint64_t v5 = type metadata accessor for MetricFamilyRoomView();
  uint64_t v42 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v40 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = v6;
  uint64_t v7 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MetricDetailViewModel();
  __chkstk_darwin(v10);
  uint64_t v51 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = *v2;
  swift_bridgeObjectRetain();
  uint64_t v12 = swift_bridgeObjectRetain();
  sub_1001E4360(v12);
  uint64_t v49 = *(void *)(v57 + 16);
  if (v49)
  {
    int v50 = a2 & 1;
    uint64_t v47 = *(int *)(v5 + 32);
    uint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v14 = 0;
    uint64_t v52 = 0;
    uint64_t v46 = (char *)&type metadata for () + 8;
    uint64_t v15 = v43;
    uint64_t v16 = (uint64_t)v51;
    uint64_t v38 = v10;
    uint64_t v39 = v2;
    uint64_t v48 = v13;
    do
    {
      BOOL v17 = v50 != 0;
      unsigned __int8 v18 = *(unsigned char *)(v13 + v14 + 32);
      sub_1000C1ACC(v18, v15, v50, v16);
      uint64_t v19 = static Animation.easeInOut.getter();
      __chkstk_darwin(v19);
      *(&v38 - 4) = v3;
      *(&v38 - 3) = (uint64_t)v15;
      *((unsigned char *)&v38 - 16) = v17;
      *((unsigned char *)&v38 - 15) = v18;
      *(&v38 - 1) = v16;
      uint64_t v20 = v52;
      withAnimation<A>(_:_:)();
      uint64_t v52 = v20;
      uint64_t v16 = (uint64_t)v51;
      swift_release();
      if ((*(unsigned char *)(v16 + *(int *)(v10 + 40)) & 1) == 0)
      {
        BOOL v45 = v50 != 0;
        uint64_t v21 = type metadata accessor for TaskPriority();
        uint64_t v44 = *(void *)(v21 - 8);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v9, 1, 1, v21);
        uint64_t v22 = (uint64_t)v9;
        uint64_t v23 = v40;
        sub_1003308C4(v3, v40, (uint64_t (*)(void))type metadata accessor for MetricFamilyRoomView);
        type metadata accessor for MainActor();
        uint64_t v24 = static MainActor.shared.getter();
        unint64_t v25 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
        uint64_t v26 = v25 + v41;
        unint64_t v27 = (v25 + v41) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v28 = swift_allocObject();
        unint64_t v29 = v27 + v28;
        *(void *)(v28 + 16) = v24;
        *(void *)(v28 + 24) = &protocol witness table for MainActor;
        uint64_t v30 = v28 + v25;
        uint64_t v15 = v43;
        uint64_t v31 = v23;
        uint64_t v9 = (char *)v22;
        sub_100330320(v31, v30, (uint64_t (*)(void))type metadata accessor for MetricFamilyRoomView);
        *(unsigned char *)(v28 + v26) = v18;
        uint64_t v32 = v44;
        *(void *)(v29 + 8) = v15;
        *(unsigned char *)(v29 + 16) = v45;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v22, 1, v21) == 1)
        {
          sub_10008DB18(v22, &qword_10094B7A0);
        }
        else
        {
          TaskPriority.rawValue.getter();
          (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v22, v21);
        }
        uint64_t v16 = (uint64_t)v51;
        if (*(void *)(v28 + 16))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v33 = dispatch thunk of Actor.unownedExecutor.getter();
          uint64_t v35 = v34;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v33 = 0;
          uint64_t v35 = 0;
        }
        uint64_t v10 = v38;
        uint64_t v36 = swift_allocObject();
        *(void *)(v36 + 16) = &unk_100957560;
        *(void *)(v36 + 24) = v28;
        if (v35 | v33)
        {
          uint64_t v53 = 0;
          uint64_t v54 = 0;
          uint64_t v55 = v33;
          uint64_t v56 = v35;
        }
        uint64_t v3 = (uint64_t)v39;
        swift_task_create();
        swift_release();
      }
      ++v14;
      sub_10006A458(v16, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
      uint64_t v13 = v48;
    }
    while (v49 != v14);
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10032F0F8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for MainActor();
  *(void *)(v1 + 24) = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10032F190, v3, v2);
}

uint64_t sub_10032F190()
{
  swift_release();
  uint64_t v1 = (unsigned int (*)(char *, uint64_t, uint64_t))sub_10032EAC0();
  sub_10032EBA8(v1, v2 & 1);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10032F1FC(int a1)
{
  uint64_t v2 = (uint64_t)v1;
  uint64_t v4 = type metadata accessor for MetricFamilyRoomView();
  uint64_t v47 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v45 = (uint64_t)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = v5;
  uint64_t v6 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v55 = *v1;
  swift_bridgeObjectRetain();
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_1001E4360(v9);
  uint64_t v10 = v55;
  uint64_t v11 = *(void *)(v55 + 16);
  if (v11)
  {
    uint64_t v41 = v8;
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    uint64_t v38 = (char *)&type metadata for () + 8;
    uint64_t v39 = v11;
    int v43 = a1;
    uint64_t v42 = v4;
    uint64_t v40 = v10;
    uint64_t v44 = v2;
    while (1)
    {
      unsigned int v13 = *(unsigned __int8 *)(v10 + v12 + 32);
      if (v13 - 4 >= 0x22)
      {
        if (v13 >= 4)
        {
          if (a1 == 2)
          {
LABEL_8:
            uint64_t v14 = v2 + *(int *)(v4 + 76);
            uint64_t v15 = *(void *)v14;
            char v16 = *(unsigned char *)(v14 + 8);
            uint64_t v17 = *(void *)(v14 + 16);
            *(void *)&long long v55 = *(void *)v14;
            BYTE8(v55) = v16;
            uint64_t v56 = v17;
            sub_1000AFA94(&qword_10094C318);
            State.wrappedValue.getter();
            unsigned int v50 = v13;
            if (v58)
            {
              *(void *)&long long v55 = v15;
              BYTE8(v55) = v16;
              uint64_t v56 = v17;
              State.wrappedValue.getter();
              uint64_t v48 = v57;
              int v18 = v58;
              goto LABEL_12;
            }
            long long v55 = *(_OWORD *)(v2 + *(int *)(v4 + 80));
            sub_1000AFA94(&qword_10094C330);
            State.wrappedValue.getter();
            uint64_t v19 = v57;
            uint64_t v48 = v57;
            if ((unint64_t)v57 >= 3)
            {
              if (v57 <= 2)
              {
                *(void *)&long long v55 = 0;
                *((void *)&v55 + 1) = 0xE000000000000000;
                _StringGuts.grow(_:)(77);
                v35._countAndFlagsBits = 0xD000000000000038;
                v35._object = (void *)0x80000001007C1090;
                String.append(_:)(v35);
                uint64_t v57 = v19;
                v36._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
                String.append(_:)(v36);
                swift_bridgeObjectRelease();
                v37._object = (void *)0x80000001007C10D0;
                v37._countAndFlagsBits = 0xD000000000000013;
                String.append(_:)(v37);
                uint64_t result = _assertionFailure(_:_:file:line:flags:)();
                __break(1u);
                return result;
              }
              int v49 = 0;
            }
            else
            {
              int v18 = 1;
LABEL_12:
              int v49 = v18;
            }
            uint64_t v20 = type metadata accessor for TaskPriority();
            uint64_t v21 = *(void *)(v20 - 8);
            uint64_t v22 = (uint64_t)v41;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v41, 1, 1, v20);
            uint64_t v23 = v45;
            sub_1003308C4(v2, v45, (uint64_t (*)(void))type metadata accessor for MetricFamilyRoomView);
            type metadata accessor for MainActor();
            uint64_t v24 = static MainActor.shared.getter();
            unint64_t v25 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
            uint64_t v26 = v25 + v46;
            unint64_t v27 = (v25 + v46) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v28 = swift_allocObject();
            unint64_t v29 = v27 + v28;
            *(void *)(v28 + 16) = v24;
            *(void *)(v28 + 24) = &protocol witness table for MainActor;
            sub_100330320(v23, v28 + v25, (uint64_t (*)(void))type metadata accessor for MetricFamilyRoomView);
            *(unsigned char *)(v28 + v26) = v50;
            *(void *)(v29 + 8) = v48;
            *(unsigned char *)(v29 + 16) = v49;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v22, 1, v20) == 1)
            {
              sub_10008DB18(v22, &qword_10094B7A0);
            }
            else
            {
              TaskPriority.rawValue.getter();
              (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v20);
            }
            uint64_t v2 = v44;
            LOBYTE(a1) = v43;
            uint64_t v4 = v42;
            if (*(void *)(v28 + 16))
            {
              swift_getObjectType();
              swift_unknownObjectRetain();
              uint64_t v30 = dispatch thunk of Actor.unownedExecutor.getter();
              uint64_t v32 = v31;
              swift_unknownObjectRelease();
            }
            else
            {
              uint64_t v30 = 0;
              uint64_t v32 = 0;
            }
            uint64_t v33 = swift_allocObject();
            *(void *)(v33 + 16) = &unk_100957550;
            *(void *)(v33 + 24) = v28;
            if (v32 | v30)
            {
              uint64_t v51 = 0;
              uint64_t v52 = 0;
              uint64_t v53 = v30;
              uint64_t v54 = v32;
            }
            uint64_t v11 = v39;
            uint64_t v10 = v40;
            swift_task_create();
            swift_release();
          }
        }
        else if (!(_BYTE)a1)
        {
          goto LABEL_8;
        }
      }
      else if (a1 == 1)
      {
        goto LABEL_8;
      }
      if (v11 == ++v12) {
        return swift_bridgeObjectRelease_n();
      }
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_10032F7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  *(unsigned char *)(v7 + 105) = a7;
  *(unsigned char *)(v7 + 104) = a5;
  *(void *)(v7 + 16) = a4;
  *(void *)(v7 + 24) = a6;
  uint64_t v8 = type metadata accessor for MetricDetailViewModel();
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 40) = *(void *)(v8 - 8);
  *(void *)(v7 + 48) = swift_task_alloc();
  sub_1000AFA94((uint64_t *)&unk_100955590);
  *(void *)(v7 + 56) = swift_task_alloc();
  *(void *)(v7 + 64) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v7 + 72) = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v7 + 80) = v10;
  *(void *)(v7 + 88) = v9;
  return _swift_task_switch(sub_10032F908, v10, v9);
}

uint64_t sub_10032F908()
{
  char v1 = *(unsigned char *)(v0 + 105);
  type metadata accessor for MetricFamilyRoomView();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10032F9C0;
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 24);
  char v5 = *(unsigned char *)(v0 + 104);
  return sub_100022C14(v3, v5, v4, v1 & 1);
}

uint64_t sub_10032F9C0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_10032FAE0, v3, v2);
}

uint64_t sub_10032FAE0()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = (uint64_t *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  swift_release();
  sub_1000AEF2C(v1, v3, (uint64_t *)&unk_100955590);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10008DB18(*v2, (uint64_t *)&unk_100955590);
    uint64_t v2 = (uint64_t *)(v0 + 56);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 48);
    char v7 = *(unsigned char *)(v0 + 105);
    char v8 = *(unsigned char *)(v0 + 104);
    uint64_t v10 = *(void *)(v0 + 16);
    uint64_t v9 = *(void *)(v0 + 24);
    sub_100330320(*(void *)(v0 + 56), v6, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
    static Animation.easeInOut.getter();
    uint64_t v11 = swift_task_alloc();
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = v9;
    *(unsigned char *)(v11 + 32) = v7 & 1;
    *(unsigned char *)(v11 + 33) = v8;
    *(void *)(v11 + 40) = v6;
    withAnimation<A>(_:_:)();
    swift_release();
    swift_task_dealloc();
    sub_10006A458(v6, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
  }
  sub_10008DB18(*v2, (uint64_t *)&unk_100955590);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_10032FCA0(uint64_t a1, Swift::UInt a2, char a3, int a4, uint64_t a5)
{
  HIDWORD(v24) = a4;
  char v8 = a3 & 1;
  uint64_t v9 = sub_1000AFA94((uint64_t *)&unk_100955590);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (unint64_t *)(a1 + *(int *)(type metadata accessor for MetricFamilyRoomView() + 72));
  unint64_t v13 = *v12;
  unint64_t v14 = v12[1];
  unint64_t v27 = *v12;
  unint64_t v28 = v14;
  sub_1000AFA94(&qword_100957558);
  State.wrappedValue.getter();
  unint64_t v15 = v29;
  if (*(void *)(v29 + 16) && (unint64_t v16 = sub_10052931C(a2, v8), (v17 & 1) != 0))
  {
    unint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
    swift_bridgeObjectRetain();
  }
  else
  {
    unint64_t v18 = sub_10052D304((uint64_t)_swiftEmptyArrayStorage);
  }
  swift_bridgeObjectRelease();
  unint64_t v29 = v18;
  sub_1003308C4(a5, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
  uint64_t v19 = type metadata accessor for MetricDetailViewModel();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v11, 0, 1, v19);
  sub_1005CE6AC((uint64_t)v11, SBYTE4(v24));
  uint64_t v20 = v29;
  unint64_t v27 = v13;
  unint64_t v28 = v14;
  swift_retain();
  swift_bridgeObjectRetain();
  State.wrappedValue.getter();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v22 = v26;
  unint64_t v26 = 0x8000000000000000;
  unint64_t v27 = v22;
  sub_1004F0544(v20, a2, v8, isUniquelyReferenced_nonNull_native);
  unint64_t v26 = v27;
  swift_bridgeObjectRelease();
  unint64_t v27 = v13;
  unint64_t v28 = v14;
  unint64_t v25 = v26;
  State.wrappedValue.setter();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10032FEC0@<X0>(uint64_t a1@<X8>)
{
  return sub_10032D1AC(*(void *)(v1 + 16), a1);
}

unint64_t sub_10032FEC8()
{
  unint64_t result = qword_100957508;
  if (!qword_100957508)
  {
    sub_1000A1370(&qword_100957500);
    sub_1000A132C(&qword_100957510, &qword_100957518);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100957508);
  }
  return result;
}

uint64_t sub_10032FF6C()
{
  type metadata accessor for MetricFamilyRoomView();
  uint64_t v0 = (unsigned int (*)(char *, uint64_t, uint64_t))sub_10032EAC0();
  return sub_10032EBA8(v0, v1 & 1);
}

unint64_t sub_10032FFD0()
{
  unint64_t result = qword_100957520;
  if (!qword_100957520)
  {
    sub_1000A1370(&qword_1009574E8);
    sub_1000A132C(&qword_100957528, &qword_1009574E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100957520);
  }
  return result;
}

uint64_t sub_100330074()
{
  uint64_t v2 = *(void *)(type metadata accessor for MetricFamilyRoomView() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1000DBD6C;
  return sub_10032F0F8(v3);
}

uint64_t sub_100330144(unsigned __int8 *a1)
{
  return sub_10032F1FC(*a1);
}

uint64_t sub_1003301AC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for MetricFamilyRoomView() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  uint64_t v7 = (v6 & 0xFFFFFFFFFFFFFFF8) + v1;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t v10 = v1 + v5;
  uint64_t v11 = *(void *)(v7 + 8);
  char v12 = *(unsigned char *)(v7 + 16);
  char v13 = *(unsigned char *)(v1 + v6);
  unint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *unint64_t v14 = v2;
  v14[1] = sub_1000DBD6C;
  return sub_10032F7CC(a1, v8, v9, v10, v13, v11, v12);
}

uint64_t sub_1003302E8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100330320(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100330388()
{
  return sub_1003303A0();
}

uint64_t sub_1003303A0()
{
  return sub_10032FCA0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(unsigned __int8 *)(v0 + 33), *(void *)(v0 + 40));
}

uint64_t sub_1003303CC()
{
  uint64_t v1 = (int *)(type metadata accessor for MetricFamilyRoomView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = v0 + v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (id *)(v0 + v2 + v1[9]);

  uint64_t v5 = type metadata accessor for MetricFormattingHelper();
  unint64_t v6 = (char *)v4 + *(int *)(v5 + 20);
  uint64_t v7 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100330594(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for MetricFamilyRoomView() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  uint64_t v7 = (v6 & 0xFFFFFFFFFFFFFFF8) + v1;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t v10 = v1 + v5;
  uint64_t v11 = *(void *)(v7 + 8);
  char v12 = *(unsigned char *)(v7 + 16);
  char v13 = *(unsigned char *)(v1 + v6);
  unint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *unint64_t v14 = v2;
  v14[1] = sub_10005DB5C;
  return sub_10032F7CC(a1, v8, v9, v10, v13, v11, v12);
}

unint64_t sub_1003306D0()
{
  unint64_t result = qword_100957590;
  if (!qword_100957590)
  {
    sub_1000A1370(&qword_100957588);
    sub_10033074C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100957590);
  }
  return result;
}

unint64_t sub_10033074C()
{
  unint64_t result = qword_100957598;
  if (!qword_100957598)
  {
    sub_1000A1370(&qword_1009575A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100957598);
  }
  return result;
}

uint64_t sub_1003307C0@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10007D644(*a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

unint64_t sub_1003307F4()
{
  unint64_t result = qword_1009575C0;
  if (!qword_1009575C0)
  {
    type metadata accessor for MetricFamilyChartView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009575C0);
  }
  return result;
}

id sub_100330850@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for MetricFamilyRoomView() - 8);
  return sub_10032E964(a1, v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

uint64_t sub_1003308C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10033092C()
{
  return sub_1000A132C(&qword_1009575D0, &qword_100957540);
}

id sub_10033096C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp43RecentWorkoutAppRecommendationTableViewCell_workoutAppRecommendationCollectionViewController] = 0;
  if (a3)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for RecentWorkoutAppRecommendationTableViewCell();
  id v6 = [super initWithStyle:a1 reuseIdentifier:v5];

  id v7 = v6;
  id v8 = [v7 contentView];
  id v9 = sub_10005DB50();
  [v8 setBackgroundColor:v9];

  return v7;
}

id sub_100330B10()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecentWorkoutAppRecommendationTableViewCell();
  [super dealloc];
}

uint64_t type metadata accessor for RecentWorkoutAppRecommendationTableViewCell()
{
  return self;
}

id sub_100330E80(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v4 = v1;
    if (v3) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    type metadata accessor for DownhillRunsStats();
    swift_allocObject();
    *(void *)&v1[OBJC_IVAR___CHWorkoutDownhillRunsStats_downhillRunsStats] = DownhillRunsStats.init(downhillRuns:)();

    v13.receiver = v1;
    v13.super_class = (Class)type metadata accessor for DownhillRunsStatsBridge();
    return [super init];
  }
  char v12 = v1;
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  if (!v3) {
    goto LABEL_12;
  }
LABEL_3:
  unint64_t v14 = _swiftEmptyArrayStorage;
  id result = (id)specialized ContiguousArray.reserveCapacity(_:)();
  if ((v3 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = 0;
      do
      {
        uint64_t v7 = v6 + 1;
        id v8 = objc_retain(*(id *)(specialized _ArrayBuffer._getElementSlowPath(_:)()
                               + OBJC_IVAR___CHWorkoutDownhillRun_downhillRun));
        swift_unknownObjectRelease();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        uint64_t v6 = v7;
      }
      while (v3 != v7);
    }
    else
    {
      id v9 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v10 = *v9++;
        id v11 = *(id *)(v10 + OBJC_IVAR___CHWorkoutDownhillRun_downhillRun);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        --v3;
      }
      while (v3);
    }
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

id sub_1003310D0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DownhillRunsStatsBridge();
  return [super dealloc];
}

uint64_t type metadata accessor for DownhillRunsStatsBridge()
{
  return self;
}

uint64_t assignWithTake for TrendsSplashScreen(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrendsSplashScreen(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrendsSplashScreen(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 64) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_100331244(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TrendsActionContext(0);
  __chkstk_darwin(v2);
  long long v4 = (char *)&v16[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TrendListMetric();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = &v4[*(int *)(v2 + 20)];
  *(void *)uint64_t v6 = _swiftEmptyArrayStorage;
  v6[8] = 0;
  sub_100331410(a1, (uint64_t)v17);
  if (v18)
  {
    uint64_t v7 = (char **)sub_10007E4EC(v17, v18);
    id v8 = (void *)(a1 + 40);
    v16[3] = v2;
    id v9 = sub_1000B1710(v16);
    sub_1003314D4((uint64_t)v4, (uint64_t)v9);
    uint64_t v10 = *v7;
    uint64_t v12 = *(void *)(a1 + 64);
    uint64_t v11 = *(void *)(a1 + 72);
    objc_super v13 = sub_10007E4EC(v8, v12);
    sub_100676328((uint64_t)v13, (uint64_t)v16, v10, v12, v11);
    sub_100331478((uint64_t)v4);
    sub_10008DB18((uint64_t)v16, &qword_100955A00);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v17);
  }
  else
  {
    sub_100331478((uint64_t)v4);
    return sub_10008DB18((uint64_t)v17, &qword_10094C750);
  }
}

uint64_t sub_1003313C0()
{
  if (*(void *)(v0 + 40)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 16);
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 56);

  return swift_deallocObject();
}

uint64_t sub_100331408()
{
  return sub_100331244(v0 + 16);
}

uint64_t sub_100331410(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094C750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100331478(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TrendsActionContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003314D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TrendsActionContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

char *sub_10033153C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topLeadingDetailItemView;
  uint64_t v7 = (objc_class *)type metadata accessor for StackDetailItemView();
  id v8 = objc_allocWithZone(v7);
  id v9 = v3;
  id v10 = [v8 init];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v3[v6] = v10;
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topTrailingDetailItemView;
  id v12 = [objc_allocWithZone(v7) init];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v9[v11] = v12;
  uint64_t v13 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomLeadingDetailItemView;
  id v14 = [objc_allocWithZone(v7) init];
  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v9[v13] = v14;
  uint64_t v15 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomTrailingDetailItemView;
  id v16 = [objc_allocWithZone(v7) init];
  [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v9[v15] = v16;

  if (a3)
  {
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v17 = 0;
  }
  v26.receiver = v9;
  v26.super_class = (Class)type metadata accessor for StackDetailSideBySideItemsCell();
  id v18 = [super initWithStyle:a1 reuseIdentifier:v17];

  uint64_t v19 = (char *)v18;
  id v20 = [v19 contentView];
  [v20 addSubview:*(void *)&v19[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topLeadingDetailItemView]];

  id v21 = [v19 contentView];
  [v21 addSubview:*(void *)&v19[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topTrailingDetailItemView]];

  id v22 = [v19 contentView];
  [v22 addSubview:*(void *)&v19[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomLeadingDetailItemView]];

  id v23 = [v19 contentView];
  id v24 = *(id *)&v19[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomTrailingDetailItemView];
  [v23 addSubview:v24];

  return v19;
}

void sub_1003317DC(long long *a1)
{
  sub_1003328F8(a1, v97);
  int v2 = v98 >> 6;
  if ((v2 - 2) >= 2)
  {
    v98 &= 0x3Fu;
    if (!v2) {
      sub_100332AA8(v97, (uint64_t)&v99);
    }
    sub_1000AFA94((uint64_t *)&unk_10095B850);
    uint64_t v61 = swift_allocObject();
    *(_OWORD *)(v61 + 16) = xmmword_100752640;
    uint64_t v62 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topLeadingDetailItemView;
    id v63 = [*(id *)&v1[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topLeadingDetailItemView] topAnchor];
    id v64 = [v1 contentView];
    id v65 = [v64 topAnchor];

    id v66 = [v63 constraintEqualToAnchor:v65];
    *(void *)(v61 + 32) = v66;
    id v67 = [*(id *)&v1[v62] leadingAnchor];
    id v68 = [v1 contentView];
    id v69 = [v68 leadingAnchor];

    id v70 = [v67 constraintEqualToAnchor:v69 constant:16.0];
    *(void *)(v61 + 40) = v70;
    id v71 = [*(id *)&v1[v62] trailingAnchor];
    id v72 = [v1 contentView];
    id v73 = [v72 leadingAnchor];

    id v74 = [v71 constraintEqualToAnchor:v73 constant:sub_1000FC078()];
    *(void *)(v61 + 48) = v74;
    id v75 = [*(id *)&v1[v62] bottomAnchor];
    id v76 = [v1 contentView];
    id v77 = [v76 bottomAnchor];

    id v78 = [v75 constraintLessThanOrEqualToAnchor:v77 constant:-27.0];
    *(void *)(v61 + 56) = v78;
    uint64_t v79 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topTrailingDetailItemView;
    id v80 = [*(id *)&v1[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topTrailingDetailItemView] topAnchor];
    id v81 = [*(id *)&v1[v62] topAnchor];
    id v82 = [v80 constraintEqualToAnchor:v81];

    *(void *)(v61 + 64) = v82;
    id v83 = [*(id *)&v1[v79] leadingAnchor];
    id v84 = [v1 contentView];
    id v85 = [v84 leadingAnchor];

    id v86 = [v83 constraintEqualToAnchor:v85 constant:sub_1000FC078()];
    *(void *)(v61 + 72) = v86;
    id v87 = [*(id *)&v1[v79] trailingAnchor];
    id v88 = [v1 contentView];
    id v89 = [v88 trailingAnchor];

    id v90 = [v87 constraintEqualToAnchor:v89 constant:-16.0];
    *(void *)(v61 + 80) = v90;
    id v91 = [*(id *)&v1[v62] bottomAnchor];
    id v92 = [v1 contentView];
    id v93 = [v92 bottomAnchor];

    id v94 = [v91 constraintLessThanOrEqualToAnchor:v93 constant:-27.0];
    *(void *)(v61 + 88) = v94;
    specialized Array._endMutation()();
  }
  else
  {
    v98 &= 0x3Fu;
    sub_1000AFA94((uint64_t *)&unk_10095B850);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1007545A0;
    uint64_t v4 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topLeadingDetailItemView;
    id v5 = [*(id *)&v1[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topLeadingDetailItemView] topAnchor];
    id v6 = [v1 contentView];
    id v7 = [v6 topAnchor];

    id v8 = [v5 constraintEqualToAnchor:v7];
    *(void *)(v3 + 32) = v8;
    id v9 = [*(id *)&v1[v4] leadingAnchor];
    id v10 = [v1 contentView];
    id v11 = [v10 leadingAnchor];

    id v12 = [v9 constraintEqualToAnchor:v11 constant:16.0];
    *(void *)(v3 + 40) = v12;
    id v13 = [*(id *)&v1[v4] trailingAnchor];
    id v14 = [v1 contentView];
    id v15 = [v14 leadingAnchor];

    id v16 = [v13 constraintEqualToAnchor:v15 constant:sub_1000FC078()];
    *(void *)(v3 + 48) = v16;
    uint64_t v17 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topTrailingDetailItemView;
    id v18 = [*(id *)&v1[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topTrailingDetailItemView] topAnchor];
    id v19 = [*(id *)&v1[v4] topAnchor];
    id v20 = [v18 constraintEqualToAnchor:v19];

    *(void *)(v3 + 56) = v20;
    id v21 = [*(id *)&v1[v17] leadingAnchor];
    id v22 = [v1 contentView];
    id v23 = [v22 leadingAnchor];

    id v24 = [v21 constraintEqualToAnchor:v23 constant:sub_1000FC078()];
    *(void *)(v3 + 64) = v24;
    id v25 = [*(id *)&v1[v17] trailingAnchor];
    id v26 = [v1 contentView];
    id v27 = [v26 trailingAnchor];

    id v28 = [v25 constraintEqualToAnchor:v27 constant:-16.0];
    *(void *)(v3 + 72) = v28;
    uint64_t v29 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomLeadingDetailItemView;
    id v30 = [*(id *)&v1[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomLeadingDetailItemView] topAnchor];
    id v31 = [*(id *)&v1[v4] bottomAnchor];
    id v32 = [v30 constraintEqualToAnchor:v31 constant:16.0];

    *(void *)(v3 + 80) = v32;
    id v33 = [*(id *)&v1[v29] leadingAnchor];
    id v34 = [v1 contentView];
    id v35 = [v34 leadingAnchor];

    id v36 = [v33 constraintEqualToAnchor:v35 constant:16.0];
    *(void *)(v3 + 88) = v36;
    id v37 = [*(id *)&v1[v29] trailingAnchor];
    id v38 = [v1 contentView];
    id v39 = [v38 leadingAnchor];

    id v40 = [v37 constraintEqualToAnchor:v39 constant:sub_1000FC078()];
    *(void *)(v3 + 96) = v40;
    id v41 = [*(id *)&v1[v29] bottomAnchor];
    id v42 = [v1 contentView];
    id v43 = [v42 bottomAnchor];

    id v44 = [v41 constraintLessThanOrEqualToAnchor:v43 constant:-27.0];
    *(void *)(v3 + 104) = v44;
    uint64_t v45 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomTrailingDetailItemView;
    id v46 = [*(id *)&v1[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomTrailingDetailItemView] topAnchor];
    id v47 = [*(id *)&v1[v29] topAnchor];
    id v48 = [v46 constraintEqualToAnchor:v47];

    *(void *)(v3 + 112) = v48;
    id v49 = [*(id *)&v1[v45] leadingAnchor];
    id v50 = [v1 contentView];
    id v51 = [v50 leadingAnchor];

    id v52 = [v49 constraintEqualToAnchor:v51 constant:sub_1000FC078()];
    *(void *)(v3 + 120) = v52;
    id v53 = [*(id *)&v1[v45] trailingAnchor];
    id v54 = [v1 contentView];
    id v55 = [v54 trailingAnchor];

    id v56 = [v53 constraintEqualToAnchor:v55 constant:-16.0];
    *(void *)(v3 + 128) = v56;
    id v57 = [*(id *)&v1[v45] bottomAnchor];
    id v58 = [v1 contentView];
    id v59 = [v58 bottomAnchor];

    id v60 = [v57 constraintLessThanOrEqualToAnchor:v59 constant:-27.0];
    *(void *)(v3 + 136) = v60;
    uint64_t v99 = v3;
    specialized Array._endMutation()();
  }
  uint64_t v95 = self;
  sub_1001ABF94();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v95 activateConstraints:isa];
}

void sub_100332380(uint64_t a1, uint64_t a2, long long *a3)
{
  sub_1003328F8(a3, &v35);
  switch(v41 >> 6)
  {
    case 1:
      v41 &= 0x3Fu;
      uint64_t v27 = v35;
      uint64_t v28 = v36;
      char v29 = BYTE8(v35);
      char v30 = v37;
      id v31 = objc_retain(*(id *)(v3
                              + OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topLeadingDetailItemView));
      sub_100332918((uint64_t)v31, v27, v29);

      id v32 = objc_retain(*(id *)(v3
                              + OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topTrailingDetailItemView));
      sub_100332918((uint64_t)v32, v28, v30);

      goto LABEL_6;
    case 2:
      v41 &= 0x3Fu;
      uint64_t v8 = v35;
      uint64_t v9 = v36;
      uint64_t v10 = v38;
      char v11 = BYTE8(v35);
      char v12 = v37;
      char v13 = v39;
      id v14 = objc_retain(*(id *)(v3
                              + OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topLeadingDetailItemView));
      sub_100332918((uint64_t)v14, v8, v11);

      id v15 = objc_retain(*(id *)(v3
                              + OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topTrailingDetailItemView));
      sub_100332918((uint64_t)v15, v9, v12);

      id v16 = objc_retain(*(id *)(v3
                              + OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomLeadingDetailItemView));
      sub_100332918((uint64_t)v16, v10, v13);

      break;
    case 3:
      v41 &= 0x3Fu;
      char v17 = v41;
      uint64_t v18 = v35;
      uint64_t v19 = v36;
      uint64_t v33 = v38;
      uint64_t v34 = v40;
      char v20 = BYTE8(v35);
      char v21 = v37;
      char v22 = v39;
      id v23 = objc_retain(*(id *)(v3
                              + OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topLeadingDetailItemView));
      sub_100332918((uint64_t)v23, v18, v20);

      id v24 = objc_retain(*(id *)(v3
                              + OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topTrailingDetailItemView));
      sub_100332918((uint64_t)v24, v19, v21);

      id v25 = objc_retain(*(id *)(v3
                              + OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomLeadingDetailItemView));
      sub_100332918((uint64_t)v25, v33, v22);

      id v26 = objc_retain(*(id *)(v3
                              + OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomTrailingDetailItemView));
      sub_100332918((uint64_t)v26, v34, v17);

      break;
    default:
      v41 &= 0x3Fu;
      uint64_t v5 = v35;
      char v6 = BYTE8(v35);
      id v7 = *(id *)(v3 + OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topLeadingDetailItemView);
      sub_100332918((uint64_t)v7, v5, v6);

LABEL_6:
      [*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomLeadingDetailItemView) removeFromSuperview];
      [*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomTrailingDetailItemView) removeFromSuperview];
      break;
  }
  sub_1003317DC(a3);
}

void sub_100332650()
{
  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for StackDetailSideBySideItemsCell();
  [super prepareForReuse];
  uint64_t v1 = *(char **)&v0[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topLeadingDetailItemView];
  int v2 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp19StackDetailItemView_titleLabel];
  uint64_t v3 = v1;
  [v2 setText:0];
  [*(id *)&v3[OBJC_IVAR____TtC10FitnessApp19StackDetailItemView_subtitleLabel] setAttributedText:0];

  uint64_t v4 = *(char **)&v0[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topTrailingDetailItemView];
  uint64_t v5 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp19StackDetailItemView_titleLabel];
  char v6 = v4;
  [v5 setText:0];
  [*(id *)&v6[OBJC_IVAR____TtC10FitnessApp19StackDetailItemView_subtitleLabel] setAttributedText:0];

  id v7 = *(char **)&v0[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomLeadingDetailItemView];
  uint64_t v8 = *(void **)&v7[OBJC_IVAR____TtC10FitnessApp19StackDetailItemView_titleLabel];
  uint64_t v9 = v7;
  [v8 setText:0];
  [*(id *)&v9[OBJC_IVAR____TtC10FitnessApp19StackDetailItemView_subtitleLabel] setAttributedText:0];

  uint64_t v10 = *(char **)&v0[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomTrailingDetailItemView];
  char v11 = *(void **)&v10[OBJC_IVAR____TtC10FitnessApp19StackDetailItemView_titleLabel];
  char v12 = v10;
  [v11 setText:0];
  [*(id *)&v12[OBJC_IVAR____TtC10FitnessApp19StackDetailItemView_subtitleLabel] setAttributedText:0];
}

id sub_100332834()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StackDetailSideBySideItemsCell();
  [super dealloc];
}

uint64_t type metadata accessor for StackDetailSideBySideItemsCell()
{
  return self;
}

_OWORD *sub_1003328F8(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[2];
  *(_OWORD *)((char *)a2 + 41) = *(long long *)((char *)a1 + 41);
  a2[1] = v3;
  a2[2] = v4;
  *a2 = v2;
  return a2;
}

void sub_100332918(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 1:
      sub_1004046C4(*(double *)&a2);
      break;
    case 2:
      uint64_t v5 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp19StackDetailItemView_titleLabel);
      sub_100475618();
      NSString v6 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v5 setText:v6];

      id v7 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp19StackDetailItemView_subtitleLabel);
      uint64_t v8 = sub_100475614(*(double *)&a2);
      goto LABEL_5;
    case 3:
      uint64_t v10 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp19StackDetailItemView_titleLabel);
      sub_100475AF0();
      NSString v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v10 setText:v11];

      id v7 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp19StackDetailItemView_subtitleLabel);
      uint64_t v8 = sub_100475614(*(double *)&a2);
LABEL_5:
      id v12 = (id)v8;
      [v7 setAttributedText:v8];

      break;
    default:
      sub_100404570();
      break;
  }
}

uint64_t sub_100332AA8(uint64_t *a1, uint64_t a2)
{
  return a2;
}

void sub_100332B04()
{
  uint64_t v1 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topLeadingDetailItemView;
  long long v2 = (objc_class *)type metadata accessor for StackDetailItemView();
  id v3 = [objc_allocWithZone(v2) init];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v1] = v3;
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topTrailingDetailItemView;
  id v5 = [objc_allocWithZone(v2) init];
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v4] = v5;
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomLeadingDetailItemView;
  id v7 = [objc_allocWithZone(v2) init];
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v6] = v7;
  uint64_t v8 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomTrailingDetailItemView;
  id v9 = [objc_allocWithZone(v2) init];
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v8] = v9;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

__n128 initializeWithCopy for StackDetailSideBySideItemsCell.Configuration(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for StackDetailSideBySideItemsCell.Configuration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 8) >> 2;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for StackDetailSideBySideItemsCell.Configuration(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(unsigned char *)(a1 + 56) = 0;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 4 * -a2;
      double result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 41) = 0u;
      return result;
    }
    *(unsigned char *)(a1 + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_100332CFC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 56) >> 6;
}

uint64_t sub_100332D08(uint64_t result)
{
  *(unsigned char *)(result + 56) &= 0x3Fu;
  return result;
}

uint64_t sub_100332D18(uint64_t result, char a2)
{
  uint64_t v2 = *(void *)(result + 24) & 3;
  uint64_t v3 = *(void *)(result + 40) & 3;
  char v4 = *(unsigned char *)(result + 56) & 3 | (a2 << 6);
  *(void *)(result + 8) &= 3uLL;
  *(void *)(result + 24) = v2;
  *(void *)(result + 40) = v3;
  *(unsigned char *)(result + 56) = v4;
  return result;
}

ValueMetadata *type metadata accessor for StackDetailSideBySideItemsCell.Configuration()
{
  return &type metadata for StackDetailSideBySideItemsCell.Configuration;
}

uint64_t sub_100332D60@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Feature();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = URL.host.getter();
  uint64_t v10 = v9;
  uint64_t v11 = static NavigationConstants.host.getter();
  if (v10)
  {
    if (v8 == v11 && v10 == v12)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0) {
        goto LABEL_9;
      }
    }
    id v14 = (void *)URL.pathComponents.getter();
    if (v14[2] != 2)
    {
      uint64_t v21 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(a1, v21);
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    uint64_t v15 = v14[6];
    id v16 = (void *)v14[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v17._countAndFlagsBits = v15;
    v17._object = v16;
    Swift::Int v18 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B5DD0, v17);
    swift_bridgeObjectRelease();
    if (!v18)
    {
      uint64_t v23 = Platform.supportedFeatures.getter();
      (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Feature.trainerTipsObfuscation(_:), v4);
      uint64_t v24 = sub_1003B0F28((uint64_t)v7, v23);
      swift_bridgeObjectRelease();
      uint64_t v25 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(a1, v25);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      uint64_t v22 = 0;
      if (v24) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
LABEL_9:
  uint64_t v19 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a1, v19);
LABEL_11:
  uint64_t v22 = 1;
LABEL_12:
  *a2 = 0;
  a2[1] = v22;
  a2[3] = 0;
  a2[4] = 0;
  a2[2] = 0;
  return result;
}

uint64_t sub_100333020@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v97 = type metadata accessor for URLQueryItem();
  uint64_t v95 = *(void *)(v97 - 8);
  uint64_t v4 = __chkstk_darwin(v97);
  id v94 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v84 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v84 - v9;
  uint64_t v11 = sub_1000AFA94(&qword_1009576A0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  id v92 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  id v93 = (char *)&v84 - v15;
  __chkstk_darwin(v14);
  Swift::String v17 = (char *)&v84 - v16;
  uint64_t v18 = type metadata accessor for Feature();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = URL.host.getter();
  if (!v23) {
    goto LABEL_59;
  }
  uint64_t v24 = v23;
  uint64_t v96 = a1;
  v25._countAndFlagsBits = v22;
  v25._object = v24;
  Swift::Int v26 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B5DD0, v25);
  swift_bridgeObjectRelease();
  if (!v26)
  {
    uint64_t v43 = Platform.supportedFeatures.getter();
    (*(void (**)(char *, void, uint64_t))(v19 + 104))(v21, enum case for Feature.trainerTipsObfuscation(_:), v18);
    uint64_t v44 = sub_1003B0F28((uint64_t)v21, v43);
    swift_bridgeObjectRelease();
    uint64_t v45 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v96, v45);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    uint64_t v47 = 0;
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    uint64_t v50 = 0;
    uint64_t v51 = 0;
    if (v44) {
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v26 == 1)
  {
    uint64_t v27 = v96;
    uint64_t v28 = (void *)URL.pathComponents.getter();
    if (v28[2] == 2)
    {
      uint64_t v29 = v28[6];
      char v30 = (void *)v28[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v31._countAndFlagsBits = v29;
      v31._object = v30;
      Swift::Int v32 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B5E20, v31);
      swift_bridgeObjectRelease();
      if (v32)
      {
LABEL_32:
        uint64_t v64 = type metadata accessor for URL();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v64 - 8) + 8))(v27, v64);
        goto LABEL_60;
      }
      uint64_t v33 = URL.queryItems.getter();
      uint64_t v34 = *(void *)(v33 + 16);
      uint64_t v35 = v97;
      if (v34)
      {
        uint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v95 + 16);
        unint64_t v37 = v33 + ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80));
        uint64_t v38 = (void (**)(char *, uint64_t))(v95 + 8);
        id v90 = *(void (**)(char *, uint64_t))(v95 + 72);
        id v91 = v36;
        uint64_t v89 = v33;
        swift_bridgeObjectRetain();
        while (1)
        {
          v91(v10, v37, v35);
          if (URLQueryItem.name.getter() == 0x696669746E656469 && v39 == 0xEA00000000007265)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_21;
          }
          char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v40) {
            break;
          }
          uint64_t v35 = v97;
          (*v38)(v10, v97);
          v37 += (unint64_t)v90;
          if (!--v34)
          {
            swift_bridgeObjectRelease();
            uint64_t v27 = v96;
            goto LABEL_13;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v35 = v97;
LABEL_21:
        uint64_t v41 = v95;
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v17, v10, v35);
        id v42 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
        v42((uint64_t)v17, 0, 1, v35);
        uint64_t v27 = v96;
      }
      else
      {
LABEL_13:
        uint64_t v41 = v95;
        id v42 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v95 + 56);
        v42((uint64_t)v17, 1, 1, v35);
      }
      swift_bridgeObjectRelease();
      id v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
      if (v54(v17, 1, v35) == 1)
      {
        sub_10008DB18((uint64_t)v17, &qword_1009576A0);
        goto LABEL_32;
      }
      id v87 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v54;
      uint64_t v88 = v41 + 48;
      uint64_t v47 = URLQueryItem.value.getter();
      uint64_t v48 = v55;
      id v90 = *(void (**)(char *, uint64_t))(v41 + 8);
      id v91 = (void (*)(char *, unint64_t, uint64_t))(v41 + 8);
      v90(v17, v35);
      if (!v48) {
        goto LABEL_32;
      }
      id v86 = v42;
      uint64_t v56 = URL.queryItems.getter();
      uint64_t v57 = *(void *)(v56 + 16);
      if (v57)
      {
        uint64_t v89 = *(void *)(v41 + 16);
        unint64_t v58 = v56 + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
        uint64_t v59 = *(void *)(v41 + 72);
        uint64_t v85 = v56;
        swift_bridgeObjectRetain();
        while (1)
        {
          ((void (*)(char *, unint64_t, uint64_t))v89)(v8, v58, v35);
          if (URLQueryItem.name.getter() == 0x656C746974 && v60 == 0xE500000000000000)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v63 = v96;
            goto LABEL_37;
          }
          char v61 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v61) {
            break;
          }
          uint64_t v35 = v97;
          v90(v8, v97);
          v58 += v59;
          if (!--v57)
          {
            swift_bridgeObjectRelease();
            uint64_t v62 = 1;
            uint64_t v41 = v95;
            uint64_t v63 = v96;
            goto LABEL_34;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v63 = v96;
        uint64_t v35 = v97;
LABEL_37:
        uint64_t v41 = v95;
        uint64_t v65 = (uint64_t)v93;
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v93, v8, v35);
        uint64_t v62 = 0;
      }
      else
      {
        uint64_t v62 = 1;
        uint64_t v63 = v96;
LABEL_34:
        uint64_t v65 = (uint64_t)v93;
      }
      v86(v65, v62, 1, v35);
      swift_bridgeObjectRelease();
      if (v87(v65, 1, v35) == 1)
      {
        swift_bridgeObjectRelease();
        sub_10008DB18(v65, &qword_1009576A0);
LABEL_50:
        uint64_t v77 = type metadata accessor for URL();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v77 - 8) + 8))(v63, v77);
        goto LABEL_60;
      }
      uint64_t v50 = URLQueryItem.value.getter();
      uint64_t v51 = v66;
      v90((char *)v65, v35);
      if (!v51)
      {
        swift_bridgeObjectRelease();
        goto LABEL_50;
      }
      uint64_t v85 = v41 + 56;
      uint64_t v67 = URL.queryItems.getter();
      uint64_t v68 = *(void *)(v67 + 16);
      if (v68)
      {
        id v70 = *(char **)(v41 + 16);
        uint64_t v69 = v41 + 16;
        id v93 = v70;
        unint64_t v71 = v67 + ((*(unsigned __int8 *)(v69 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 64));
        uint64_t v89 = *(void *)(v69 + 56);
        uint64_t v84 = v67;
        swift_bridgeObjectRetain();
        id v72 = v94;
        while (1)
        {
          ((void (*)(char *, unint64_t, uint64_t))v93)(v72, v71, v35);
          if (URLQueryItem.name.getter() == 0x5379616C70736964 && v73 == 0xEC000000656C7974) {
            break;
          }
          char v74 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v74) {
            goto LABEL_52;
          }
          id v72 = v94;
          uint64_t v35 = v97;
          v90(v94, v97);
          v71 += v89;
          if (!--v68)
          {
            swift_bridgeObjectRelease();
            goto LABEL_48;
          }
        }
        swift_bridgeObjectRelease();
LABEL_52:
        swift_bridgeObjectRelease();
        a1 = v96;
        id v78 = v86;
        uint64_t v76 = (uint64_t)v92;
        uint64_t v75 = v97;
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v92, v94, v97);
        v78(v76, 0, 1, v75);
      }
      else
      {
LABEL_48:
        uint64_t v75 = v35;
        a1 = v96;
        uint64_t v76 = (uint64_t)v92;
        v86((uint64_t)v92, 1, 1, v75);
      }
      swift_bridgeObjectRelease();
      if (v87(v76, 1, v75) == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10008DB18(v76, &qword_1009576A0);
LABEL_59:
        uint64_t v83 = type metadata accessor for URL();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v83 - 8) + 8))(a1, v83);
        goto LABEL_60;
      }
      URLQueryItem.value.getter();
      uint64_t v80 = v79;
      v90((char *)v76, v75);
      if (!v80)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_59;
      }
      unsigned __int8 v81 = ShelfDisplayStyle.init(rawValue:)();
      uint64_t v82 = type metadata accessor for URL();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(a1, v82);
      if (v81 != 48)
      {
        uint64_t v49 = v81;
        goto LABEL_61;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v53 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v27, v53);
    }
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v52 = type metadata accessor for URL();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v96, v52);
  }
LABEL_60:
  uint64_t v47 = 0;
  uint64_t v49 = 0;
  uint64_t v50 = 0;
  uint64_t v51 = 0;
  uint64_t v48 = 1;
LABEL_61:
  *a2 = v47;
  a2[1] = v48;
  a2[2] = v49;
  a2[3] = v50;
  a2[4] = v51;
  return result;
}

uint64_t sub_100333B60@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  LODWORD(v64) = a2;
  uint64_t v65 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  *(void *)&long long v63 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_10094DD20);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URLComponents();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  Swift::String v17 = (char *)&v57 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v57 - v18;
  URLComponents.init(url:resolvingAgainstBaseURL:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v65);
    uint64_t result = sub_10008DB18((uint64_t)v9, &qword_10094DD20);
    uint64_t v21 = 0;
    long long v22 = xmmword_10075E640;
    long long v23 = 0uLL;
    goto LABEL_24;
  }
  uint64_t v59 = v5;
  char v61 = v17;
  uint64_t v60 = v14;
  uint64_t v58 = a1;
  uint64_t v57 = a3;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v62 = v10;
  v24(v19, v9, v10);
  uint64_t v25 = URLComponents.scheme.getter();
  uint64_t v27 = v26;
  uint64_t v28 = static NavigationConstants.sharingURLScheme.getter();
  if (v27)
  {
    if (v25 == v28 && v27 == v29) {
      char v31 = 1;
    }
    else {
      char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v31 = 0;
  }
  swift_bridgeObjectRelease();
  Swift::Int v32 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v33 = v61;
  uint64_t v34 = v62;
  v32(v61, v19, v62);
  if (v31)
  {
    uint64_t v35 = *(void (**)(char *, uint64_t))(v11 + 8);
    v35(v33, v34);
    uint64_t v36 = v63;
    unint64_t v37 = v60;
    uint64_t v38 = v34;
LABEL_18:
    v32(v37, v19, v38);
    uint64_t v44 = v59;
LABEL_19:
    v35(v37, v38);
LABEL_20:
    uint64_t v45 = v58;
    uint64_t v46 = v65;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v36, v58, v65);
    sub_100332D60(v36, v66);
    goto LABEL_21;
  }
  uint64_t v39 = URLComponents.scheme.getter();
  uint64_t v41 = v40;
  uint64_t v42 = static NavigationConstants.secureSharingURLScheme.getter();
  if (v41)
  {
    if (v39 == v42 && v41 == v43)
    {
      swift_bridgeObjectRelease();
      uint64_t v35 = *(void (**)(char *, uint64_t))(v11 + 8);
      uint64_t v38 = v62;
      v35(v61, v62);
      swift_bridgeObjectRelease();
      uint64_t v36 = v63;
      unint64_t v37 = v60;
      goto LABEL_18;
    }
    char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t v35 = *(void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v49 = v62;
    v35(v61, v62);
    swift_bridgeObjectRelease();
    unint64_t v37 = v60;
    v32(v60, v19, v49);
    if (v48)
    {
      uint64_t v44 = v59;
      uint64_t v36 = v63;
      uint64_t v38 = v62;
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v35 = *(void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v47 = v62;
    v35(v33, v62);
    swift_bridgeObjectRelease();
    unint64_t v37 = v60;
    v32(v60, v19, v47);
  }
  uint64_t v44 = v59;
  uint64_t v50 = URLComponents.host.getter();
  uint64_t v52 = v51;
  uint64_t v53 = static NavigationConstants.host.getter();
  if (v52)
  {
    if (v50 == v53 && v52 == v54)
    {
      swift_bridgeObjectRelease();
      uint64_t v38 = v62;
      v35(v60, v62);
      swift_bridgeObjectRelease();
LABEL_34:
      uint64_t v36 = v63;
      goto LABEL_20;
    }
    char v55 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t v38 = v62;
    v35(v60, v62);
    swift_bridgeObjectRelease();
    if (v55) {
      goto LABEL_34;
    }
  }
  else
  {
    uint64_t v38 = v62;
    v35(v37, v62);
    swift_bridgeObjectRelease();
  }
  uint64_t v56 = v63;
  uint64_t v45 = v58;
  uint64_t v46 = v65;
  (*(void (**)(void, uint64_t, uint64_t))(v44 + 16))(v63, v58, v65);
  sub_100333020(v56, (uint64_t *)v66);
LABEL_21:
  long long v63 = v66[1];
  long long v64 = v66[0];
  uint64_t v21 = v67;
  sub_1003343AC(v66, (void (*)(void, void, void, void, void))sub_100334294);
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v45, v46);
  v35(v19, v38);
  uint64_t result = sub_1003342E8((uint64_t)v66, (uint64_t)v68);
  if (v69 == 1)
  {
    uint64_t v21 = 0;
    long long v22 = xmmword_10075E640;
    long long v23 = 0uLL;
    a3 = v57;
  }
  else
  {
    sub_100334350((uint64_t)v68, (uint64_t)v70);
    uint64_t result = (uint64_t)sub_1003343AC(v66, (void (*)(void, void, void, void, void))sub_1003343E8);
    a3 = v57;
    long long v23 = v63;
    long long v22 = v64;
  }
LABEL_24:
  *(_OWORD *)a3 = v22;
  *(_OWORD *)(a3 + 16) = v23;
  *(void *)(a3 + 32) = v21;
  return result;
}

uint64_t sub_100334294(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return sub_1003342A4(a1, a2);
  }
  return a1;
}

uint64_t sub_1003342A4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1003342E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100966E70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100334350(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *sub_1003343AC(void *a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1003343E8(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return sub_1003343F8(a1, a2);
  }
  return a1;
}

uint64_t sub_1003343F8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_10033443C()
{
  uint64_t v1 = OBJC_IVAR____TtC10FitnessApp26AddToYourRingTableViewCell____lazy_storage___heightConstraint;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp26AddToYourRingTableViewCell____lazy_storage___heightConstraint];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC10FitnessApp26AddToYourRingTableViewCell____lazy_storage___heightConstraint];
  }
  else
  {
    id v4 = [v0 contentView];
    id v5 = [v4 heightAnchor];

    id v6 = [v5 constraintEqualToConstant:0.0];
    uint64_t v7 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1003344F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp26AddToYourRingTableViewCell____lazy_storage___heightConstraint] = 0;
  if (a3)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for AddToYourRingTableViewCell();
  id v7 = [super initWithStyle:a1 reuseIdentifier:v6];

  id v8 = v7;
  id v9 = [v8 contentView];
  id v10 = sub_10005DB50();
  [v9 setBackgroundColor:v10];

  return v8;
}

void sub_100334638()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v24 = Strong;
    id v2 = [Strong view];
    if (v2)
    {
      id v3 = v2;
      id v4 = self;
      sub_1000AFA94((uint64_t *)&unk_10095B850);
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_10075C680;
      id v6 = [v3 topAnchor];
      id v7 = [v0 contentView];
      id v8 = [v7 topAnchor];

      id v9 = [v6 constraintEqualToAnchor:v8];
      *(void *)(v5 + 32) = v9;
      id v10 = [v3 bottomAnchor];
      id v11 = [v0 contentView];
      id v12 = [v11 bottomAnchor];

      id v13 = [v10 constraintEqualToAnchor:v12];
      *(void *)(v5 + 40) = v13;
      id v14 = [v3 trailingAnchor];
      id v15 = [v0 contentView];
      id v16 = [v15 trailingAnchor];

      id v17 = [v14 constraintEqualToAnchor:v16];
      *(void *)(v5 + 48) = v17;
      id v18 = [v3 leadingAnchor];
      id v19 = [v0 contentView];
      id v20 = [v19 leadingAnchor];

      id v21 = [v18 constraintEqualToAnchor:v20];
      *(void *)(v5 + 56) = v21;
      *(void *)(v5 + 64) = sub_10033443C();
      specialized Array._endMutation()();
      sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v4 activateConstraints:isa];

      Class v23 = isa;
    }
    else
    {
      Class v23 = (Class)v24;
    }
  }
}

void sub_100334964(void *a1)
{
  id v2 = v1;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  swift_unknownObjectWeakAssign();
  id v5 = [a1 view];
  if (!v5) {
    return;
  }
  id v24 = v5;
  id v6 = [v1 contentView];
  [v6 frame];
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;

  [v24 setFrame:v8, v10, v12, v14];
  id v15 = [v2 contentView];
  id v16 = [v15 subviews];

  sub_10007E2D8(0, (unint64_t *)&qword_10094E530);
  unint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    if (v18) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v18)
    {
LABEL_4:
      if (v18 < 1)
      {
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v18; ++i)
      {
        if ((v17 & 0xC000000000000001) != 0) {
          id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v20 = *(id *)(v17 + 8 * i + 32);
        }
        id v21 = v20;
        [v20 removeFromSuperview];
      }
    }
  }
  swift_bridgeObjectRelease_n();
  id v22 = [v2 contentView];
  [v22 addSubview:v24];

  id v23 = sub_10033443C();
  sub_1006EBFDC();
  [v23 setConstant:];

  if (!Strong) {
    sub_100334638();
  }
}

id sub_100334C94()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AddToYourRingTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for AddToYourRingTableViewCell()
{
  return self;
}

void sub_100334D38()
{
  id v1 = [self sharedApplication];
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v6[4] = sub_100216654;
  v6[5] = v2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_100070394;
  v6[3] = &unk_1008C2160;
  id v3 = _Block_copy(v6);
  swift_release();
  id v4 = [v1 beginBackgroundTaskWithExpirationHandler:v3];
  _Block_release(v3);

  uint64_t v5 = v0 + OBJC_IVAR___CHBackgroundTaskAssertion_identifier;
  *(void *)uint64_t v5 = v4;
  *(unsigned char *)(v5 + 8) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR___CHBackgroundTaskAssertion_state) = 1;
}

void sub_100334E60()
{
  static os_log_type_t.error.getter();
  id v0 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  swift_beginAccess();
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Strong[OBJC_IVAR___CHBackgroundTaskAssertion_state] = 2;
  }
}

id sub_100334FA0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BackgroundTaskAssertion();
  return [super dealloc];
}

unsigned char *storeEnumTagSinglePayload for BackgroundTaskAssertion.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003350A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundTaskAssertion.State()
{
  return &type metadata for BackgroundTaskAssertion.State;
}

unint64_t sub_1003350DC()
{
  unint64_t result = qword_100957718;
  if (!qword_100957718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100957718);
  }
  return result;
}

uint64_t sub_100335130()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100335168(double a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_1009511B8);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_1009546C0);
  uint64_t result = __chkstk_darwin(v5 - 8);
  double v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v9 = round(a1);
  if ((~*(void *)&v9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v9 < 9.22337204e18)
  {
    uint64_t v10 = type metadata accessor for Calendar();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
    uint64_t v11 = type metadata accessor for TimeZone();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
    DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
    DateComponents.minute.setter();
    return DateComponents.second.setter();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1003353C0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_10094E8A8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DateComponents();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  double v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100335DBC(a1, (uint64_t)v50);
  if (!v51)
  {
    sub_10008DB18((uint64_t)v50, &qword_100955A00);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_8;
  }
  int v15 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, v15 ^ 1u, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_8:
    sub_10008DB18((uint64_t)v10, &qword_10094E8A8);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC10FitnessApp13PaceFormatter_isLocaleAware) == 1)
  {
    static Locale.current.getter();
    uint64_t v16 = Locale.identifier.getter();
    uint64_t v18 = v17;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v16 == 0x53555F6E65 && v18 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
      {
        uint64_t v44 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp13PaceFormatter_componentsFormatter);
        Class isa = DateComponents._bridgeToObjectiveC()().super.isa;
        id v46 = [v44 stringFromDateComponents:isa];

        if (v46)
        {
          uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
        else
        {
          uint64_t v43 = 0;
        }
        goto LABEL_22;
      }
    }
  }
  uint64_t v20 = DateComponents.minute.getter();
  if ((v21 & 1) == 0)
  {
    uint64_t v22 = v20;
    uint64_t v23 = DateComponents.second.getter();
    if ((v24 & 1) == 0)
    {
      uint64_t v25 = v23;
      uint64_t v26 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp13PaceFormatter_minutesFormatter);
      id v27 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v22];
      id v28 = [v26 stringFromNumber:v27];

      if (v28)
      {
        uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v31 = v30;

        Swift::Int v32 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp13PaceFormatter_secondsFormatter);
        id v33 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v25];
        id v34 = [v32 stringFromNumber:v33];

        if (v34)
        {
          uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v36 = v35;

          id v37 = [self mainBundle];
          NSString v38 = String._bridgeToObjectiveC()();
          id v39 = [v37 localizedStringForKey:v38 value:0 table:0];

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          sub_1000AFA94((uint64_t *)&unk_1009546D0);
          uint64_t v40 = swift_allocObject();
          *(_OWORD *)(v40 + 16) = xmmword_10074E640;
          *(void *)(v40 + 56) = &type metadata for String;
          unint64_t v41 = sub_1000AA64C();
          *(void *)(v40 + 32) = v29;
          *(void *)(v40 + 40) = v31;
          *(void *)(v40 + 96) = &type metadata for String;
          *(void *)(v40 + 104) = v41;
          uint64_t v42 = v49;
          *(void *)(v40 + 64) = v41;
          *(void *)(v40 + 72) = v42;
          *(void *)(v40 + 80) = v36;
          uint64_t v43 = static String.localizedStringWithFormat(_:_:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_22:
          (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
          return v43;
        }
        swift_bridgeObjectRelease();
      }
    }
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return 0;
}

id sub_100335A1C()
{
  uint64_t v1 = OBJC_IVAR____TtC10FitnessApp13PaceFormatter_componentsFormatter;
  id v2 = objc_allocWithZone((Class)NSDateComponentsFormatter);
  uint64_t v3 = v0;
  id v4 = [v2 init];
  [v4 setUnitsStyle:0];
  *(void *)&v0[v1] = v4;
  uint64_t v5 = OBJC_IVAR____TtC10FitnessApp13PaceFormatter_secondsFormatter;
  id v6 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v6 setMinimumIntegerDigits:2];
  [v6 setMaximumFractionDigits:0];
  [v6 setRoundingMode:4];
  *(void *)&v3[v5] = v6;
  uint64_t v7 = OBJC_IVAR____TtC10FitnessApp13PaceFormatter_minutesFormatter;
  id v8 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v8 setMaximumFractionDigits:0];
  [v8 setRoundingMode:4];
  *(void *)&v3[v7] = v8;
  v3[OBJC_IVAR____TtC10FitnessApp13PaceFormatter_isLocaleAware] = 1;

  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for PaceFormatter();
  return [super init];
}

id sub_100335B84(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC10FitnessApp13PaceFormatter_componentsFormatter;
  id v4 = objc_allocWithZone((Class)NSDateComponentsFormatter);
  uint64_t v5 = v1;
  id v6 = [v4 init];
  [v6 setUnitsStyle:0];
  *(void *)&v1[v3] = v6;
  uint64_t v7 = OBJC_IVAR____TtC10FitnessApp13PaceFormatter_secondsFormatter;
  id v8 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v8 setMinimumIntegerDigits:2];
  [v8 setMaximumFractionDigits:0];
  [v8 setRoundingMode:4];
  *(void *)&v5[v7] = v8;
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp13PaceFormatter_minutesFormatter;
  id v10 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v10 setMaximumFractionDigits:0];
  [v10 setRoundingMode:4];
  *(void *)&v5[v9] = v10;
  v5[OBJC_IVAR____TtC10FitnessApp13PaceFormatter_isLocaleAware] = 1;

  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for PaceFormatter();
  id v11 = [super initWithCoder:a1];

  return v11;
}

id sub_100335D08()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PaceFormatter();
  return [super dealloc];
}

uint64_t type metadata accessor for PaceFormatter()
{
  return self;
}

uint64_t sub_100335DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100955A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_100335E24(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1001C9304(0, v1, 0);
    uint64_t v3 = *(void *)(type metadata accessor for SleepingSampleDataType() - 8);
    uint64_t v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    do
    {
      uint64_t v6 = SleepingSampleDataType.rawValue.getter();
      unint64_t v8 = _swiftEmptyArrayStorage[2];
      unint64_t v7 = _swiftEmptyArrayStorage[3];
      if (v8 >= v7 >> 1) {
        sub_1001C9304(v7 > 1, v8 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v8 + 1;
      _swiftEmptyArrayStorage[v8 + 4] = v6;
      v4 += v5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

id sub_100335F50()
{
  id result = [self standardUserDefaults];
  qword_100997CE0 = (uint64_t)result;
  return result;
}

uint64_t sub_100335F8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SleepingSampleDataType.rawValue.getter();
  *a1 = result;
  return result;
}

void *sub_100335FB8()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v67 = v0;
  uint64_t v68 = v1;
  __chkstk_darwin(v0);
  uint64_t v66 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v64 - v4;
  __chkstk_darwin(v6);
  uint64_t v65 = (char *)&v64 - v7;
  uint64_t v8 = sub_1000AFA94(&qword_100957768);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SleepingSampleDataType();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = v12;
  __chkstk_darwin(v11);
  uint64_t v73 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v72 = (char *)&v64 - v16;
  sub_1000AFA94(&qword_10094E940);
  uint64_t v17 = *(void *)(v12 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_100752870;
  uint64_t v69 = (void *)v19;
  unint64_t v70 = v18;
  unint64_t v20 = v19 + v18;
  char v21 = *(void (**)(unint64_t, void, uint64_t))(v13 + 104);
  v21(v20, enum case for SleepingSampleDataType.heartRate(_:), v11);
  v21(v20 + v17, enum case for SleepingSampleDataType.respiratoryRate(_:), v11);
  v21(v20 + 2 * v17, enum case for SleepingSampleDataType.wristTemperature(_:), v11);
  uint64_t v71 = v17;
  v21(v20 + 3 * v17, enum case for SleepingSampleDataType.bloodOxygen(_:), v11);
  v21(v20 + 4 * v17, enum case for SleepingSampleDataType.timeAsleep(_:), v11);
  if (qword_10094A9C0 != -1) {
    swift_once();
  }
  id v22 = (id)qword_100997CE0;
  NSString v23 = String._bridgeToObjectiveC()();
  id v24 = [v22 arrayForKey:v23];

  if (v24)
  {
    uint64_t v25 = self;
    uint64_t v75 = 0;
    id v26 = [v25 dataWithPropertyList:v24 format:100 options:0 error:&v75];

    id v27 = v75;
    if (v26)
    {
      uint64_t v28 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v30 = v29;

      type metadata accessor for PropertyListDecoder();
      swift_allocObject();
      PropertyListDecoder.init()();
      sub_1000AFA94(&qword_100955540);
      sub_1003370A4(&qword_100957770);
      dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
      uint64_t v31 = v68;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v44 = v75;
      uint64_t v45 = (void *)*((void *)v75 + 2);
      unint64_t v64 = v30;
      if (v45)
      {
        id v46 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
        uint64_t v47 = (void (**)(char *, char *, uint64_t))(v13 + 32);
        swift_bridgeObjectRetain();
        uint64_t v48 = 0;
        uint64_t v49 = _swiftEmptyArrayStorage;
        uint64_t v66 = v44;
        uint64_t v69 = v45;
        do
        {
          SleepingSampleDataType.init(rawValue:)();
          if ((*v46)(v10, 1, v11) == 1)
          {
            sub_100336990((uint64_t)v10);
          }
          else
          {
            uint64_t v50 = v28;
            uint64_t v51 = *v47;
            uint64_t v52 = v72;
            (*v47)(v72, v10, v11);
            v51(v73, v52, v11);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v49 = (void *)sub_1001E7300(0, v49[2] + 1, 1, (unint64_t)v49);
            }
            unint64_t v54 = v49[2];
            unint64_t v53 = v49[3];
            uint64_t v55 = (uint64_t)v49;
            if (v54 >= v53 >> 1) {
              uint64_t v55 = sub_1001E7300(v53 > 1, v54 + 1, 1, (unint64_t)v49);
            }
            *(void *)(v55 + 16) = v54 + 1;
            uint64_t v49 = (void *)v55;
            v51((char *)(v55 + v70 + v54 * v71), v73, v11);
            uint64_t v28 = v50;
            uint64_t v45 = v69;
          }
          uint64_t v48 = (void *)((char *)v48 + 1);
        }
        while (v45 != v48);
        swift_bridgeObjectRelease();
        uint64_t v31 = v68;
        unint64_t v30 = v64;
      }
      else
      {
        uint64_t v49 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRelease();
      uint64_t v56 = v65;
      static WOLog.trainingLoad.getter();
      swift_bridgeObjectRetain_n();
      uint64_t v57 = Logger.logObject.getter();
      os_log_type_t v58 = static os_log_type_t.default.getter();
      BOOL v59 = os_log_type_enabled(v57, v58);
      uint64_t v69 = v49;
      if (v59)
      {
        uint64_t v60 = (uint8_t *)swift_slowAlloc();
        uint64_t v75 = (char *)swift_slowAlloc();
        *(_DWORD *)uint64_t v60 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v61 = Array.description.getter();
        uint64_t v73 = (char *)v28;
        unint64_t v63 = v62;
        swift_bridgeObjectRelease();
        uint64_t v74 = sub_10008F1F4(v61, v63, (uint64_t *)&v75);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v57, v58, "Successfully read user overnightMetrics=%s", v60, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        sub_1000939A4((uint64_t)v73, v64);

        (*(void (**)(char *, uint64_t))(v31 + 8))(v65, v67);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_1000939A4(v28, v30);

        (*(void (**)(char *, uint64_t))(v31 + 8))(v56, v67);
      }
    }
    else
    {
      uint64_t v35 = v27;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      uint64_t v36 = v66;
      uint64_t v37 = v68;
      static WOLog.trainingLoad.getter();
      swift_errorRetain();
      swift_errorRetain();
      NSString v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        uint64_t v75 = (char *)swift_slowAlloc();
        *(_DWORD *)uint64_t v40 = 136315138;
        swift_getErrorValue();
        uint64_t v41 = Error.errorDescription.getter();
        uint64_t v74 = sub_10008F1F4(v41, v42, (uint64_t *)&v75);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "Failed to decode and save OvernightMetrics error=%s", v40, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v67);
    }
  }
  else
  {
    static WOLog.trainingLoad.getter();
    Swift::Int v32 = Logger.logObject.getter();
    uint64_t v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, (os_log_type_t)v33))
    {
      id v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v33, "OvernightMetrics not present in user defaults. Will use system defaults.", v34, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v68 + 8))(v5, v67);
  }
  return v69;
}

uint64_t sub_100336990(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100957768);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003369F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v40 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v37 - v6;
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  v42[0] = (uint64_t)sub_100335E24(a1);
  sub_1000AFA94(&qword_100955540);
  sub_1003370A4(&qword_100957778);
  uint64_t v14 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  unint64_t v16 = v15;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v17 = self;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v43 = 0;
  id v19 = [v17 propertyListWithData:isa options:0 format:0 error:&v43];

  id v20 = v43;
  if (v19)
  {
    unint64_t v38 = v16;
    uint64_t v39 = v2;
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    if (qword_10094A9C0 != -1) {
      swift_once();
    }
    char v21 = (void *)qword_100997CE0;
    sub_10007E4EC(v42, v42[3]);
    id v22 = v21;
    uint64_t v23 = _bridgeAnythingToObjectiveC<A>(_:)();
    NSString v24 = String._bridgeToObjectiveC()();
    [v22 setObject:v23 forKey:v24];

    swift_unknownObjectRelease();
    uint64_t v25 = (void *)qword_100997CE0;
    id v26 = self;
    id v27 = v25;
    id v28 = [v26 standardUserDefaults];
    sub_100337108();
    LOBYTE(v23) = static NSObject.== infix(_:_:)();

    if (v23)
    {
      NSString v29 = String._bridgeToObjectiveC()();
      [v26 fu_backupStandardUserDefaultsKey:v29];
    }
    static WOLog.trainingLoad.getter();
    swift_bridgeObjectRetain_n();
    unint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      Swift::Int v32 = (uint8_t *)swift_slowAlloc();
      id v43 = (id)swift_slowAlloc();
      *(_DWORD *)Swift::Int v32 = 136315138;
      v37[1] = v32 + 4;
      type metadata accessor for SleepingSampleDataType();
      swift_bridgeObjectRetain();
      uint64_t v33 = Array.description.getter();
      unint64_t v35 = v34;
      swift_bridgeObjectRelease();
      uint64_t v41 = sub_10008F1F4(v33, v35, (uint64_t *)&v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Saved OvernightMetrics to user defaults overnightMetrics=%s", v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    sub_1000939A4(v14, v38);

    (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v39);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v42);
  }
  else
  {
    uint64_t v36 = v20;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_1000939A4(v14, v16);
    static WOLog.trainingLoad.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      id v10 = (uint8_t *)swift_slowAlloc();
      v42[0] = swift_slowAlloc();
      *(_DWORD *)id v10 = 136315138;
      swift_getErrorValue();
      uint64_t v11 = Error.errorDescription.getter();
      id v43 = (id)sub_10008F1F4(v11, v12, v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to encode and save OvernightMetrics error=%s", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v4, v2);
  }
}

uint64_t sub_1003370A4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(&qword_100955540);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100337108()
{
  unint64_t result = qword_100957780;
  if (!qword_100957780)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100957780);
  }
  return result;
}

uint64_t sub_100337148()
{
  return View.listRowInsets(_:)();
}

id sub_1003372AC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PaletteViewControllerSizingDelegate();
  return [super dealloc];
}

uint64_t type metadata accessor for PaletteViewControllerSizingDelegate()
{
  return self;
}

id AVPlayer.forNonAudioSessionParticipation()()
{
  [v0 _setParticipatesInAudioSession:0];

  return v2;
}

char *sub_10033735C(int a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, void *a13, uint64_t a14, uint64_t a15, unsigned __int8 a16, uint64_t a17, unsigned __int8 a18, uint64_t a19, uint64_t a20,char a21,unint64_t a22,uint64_t a23,char a24)
{
  uint64_t v29 = OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_stackView;
  sub_10007E2D8(0, &qword_100957898);
  unint64_t v30 = v24;
  *(void *)&v24[v29] = sub_1006D13E4();
  uint64_t v31 = OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_summaryView;
  type metadata accessor for TrendDetailSummaryView();
  *(void *)&v30[v31] = sub_1006D13E4();
  uint64_t v32 = OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_explanationView;
  type metadata accessor for TrendExplanationView();
  *(void *)&v30[v32] = sub_1006D13E4();
  v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_trendType] = a1;
  uint64_t v33 = OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_direction;
  char v99 = a2;
  v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_direction] = a2;
  id v34 = sub_10008CC68(byte_10075ED2C[(char)a1]);
  double v35 = *(double *)a3;
  uint64_t v36 = self;
  id v37 = [v36 quantityWithUnit:v34 doubleValue:v35];

  id v38 = 0;
  *(void *)&v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_valueQuantity] = v37;
  if (v30[v33] == 2)
  {
    double v39 = *(double *)a4 - v35;
    id v40 = sub_10008CC68(byte_10075ED2C[(char)a1]);
    id v38 = [v36 quantityWithUnit:v40 doubleValue:v39];
  }
  *(void *)&v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_differenceQuantity] = v38;
  uint64_t v41 = &v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_statistics90];
  *(_OWORD *)uint64_t v41 = *(_OWORD *)a3;
  long long v42 = *(_OWORD *)(a3 + 64);
  long long v44 = *(_OWORD *)(a3 + 16);
  long long v43 = *(_OWORD *)(a3 + 32);
  *((_OWORD *)v41 + 3) = *(_OWORD *)(a3 + 48);
  *((_OWORD *)v41 + 4) = v42;
  *((_OWORD *)v41 + 1) = v44;
  *((_OWORD *)v41 + 2) = v43;
  long long v45 = *(_OWORD *)(a3 + 128);
  long long v47 = *(_OWORD *)(a3 + 80);
  long long v46 = *(_OWORD *)(a3 + 96);
  *((_OWORD *)v41 + 7) = *(_OWORD *)(a3 + 112);
  *((_OWORD *)v41 + 8) = v45;
  *((_OWORD *)v41 + 5) = v47;
  *((_OWORD *)v41 + 6) = v46;
  long long v49 = *(_OWORD *)(a3 + 160);
  long long v48 = *(_OWORD *)(a3 + 176);
  long long v50 = *(_OWORD *)(a3 + 144);
  v41[192] = *(unsigned char *)(a3 + 192);
  *((_OWORD *)v41 + 10) = v49;
  *((_OWORD *)v41 + 11) = v48;
  *((_OWORD *)v41 + 9) = v50;
  uint64_t v51 = &v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_statistics365];
  *(_OWORD *)uint64_t v51 = *(_OWORD *)a4;
  long long v52 = *(_OWORD *)(a4 + 64);
  long long v54 = *(_OWORD *)(a4 + 16);
  long long v53 = *(_OWORD *)(a4 + 32);
  *((_OWORD *)v51 + 3) = *(_OWORD *)(a4 + 48);
  *((_OWORD *)v51 + 4) = v52;
  *((_OWORD *)v51 + 1) = v54;
  *((_OWORD *)v51 + 2) = v53;
  long long v55 = *(_OWORD *)(a4 + 128);
  long long v57 = *(_OWORD *)(a4 + 80);
  long long v56 = *(_OWORD *)(a4 + 96);
  *((_OWORD *)v51 + 7) = *(_OWORD *)(a4 + 112);
  *((_OWORD *)v51 + 8) = v55;
  *((_OWORD *)v51 + 5) = v57;
  *((_OWORD *)v51 + 6) = v56;
  long long v59 = *(_OWORD *)(a4 + 160);
  long long v58 = *(_OWORD *)(a4 + 176);
  long long v60 = *(_OWORD *)(a4 + 144);
  v51[192] = *(unsigned char *)(a4 + 192);
  *((_OWORD *)v51 + 10) = v59;
  *((_OWORD *)v51 + 11) = v58;
  *((_OWORD *)v51 + 9) = v60;
  sub_1000AEEC8(a5, (uint64_t)&v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_mannKendall90], &qword_1009578A0);
  sub_1000AEEC8(a9, (uint64_t)&v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_mannKendall365], &qword_1009578A0);
  uint64_t v61 = &v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_fit90];
  *(void *)uint64_t v61 = a6;
  *((void *)v61 + 1) = a7;
  v61[16] = a8 & 1;
  unint64_t v62 = &v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_fit365];
  *(void *)unint64_t v62 = a10;
  *((void *)v62 + 1) = a11;
  v62[16] = a12 & 1;
  *(void *)&v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_formattingManager] = a13;
  *(void *)&v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_pairedWatchManager] = a14;
  unint64_t v63 = &v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_daysRingsClosed365];
  *(void *)unint64_t v63 = a15;
  v63[8] = a16 & 1;
  unint64_t v64 = &v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_daysRingsClosed90];
  *(void *)unint64_t v64 = a17;
  v64[8] = a18 & 1;
  uint64_t v65 = &v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_coachingString];
  *(void *)uint64_t v65 = a19;
  *((void *)v65 + 1) = a20;
  v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_isWheelchairUser] = a21 & 1;
  int v66 = v30[v33];
  uint64_t v116 = *(void *)(a3 + 64);
  long long v67 = *(_OWORD *)(a3 + 48);
  long long v68 = *(_OWORD *)(a3 + 16);
  v115[1] = *(_OWORD *)(a3 + 32);
  v115[2] = v67;
  v115[0] = v68;
  double v69 = *(double *)a4;
  uint64_t v114 = *(void *)(a4 + 64);
  long long v70 = *(_OWORD *)(a4 + 48);
  long long v71 = *(_OWORD *)(a4 + 16);
  v113[1] = *(_OWORD *)(a4 + 32);
  v113[2] = v70;
  v113[0] = v71;
  id v72 = objc_allocWithZone((Class)type metadata accessor for TrendDetailChartView());
  id v73 = a13;
  sub_1000B7C20(a3);
  sub_1000B7C20(a4);
  swift_retain();
  sub_1000B013C((uint64_t)v115);
  sub_1000B013C((uint64_t)v113);
  *(void *)&v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_chartView] = sub_1006DF2F8(a1, v66, (uint64_t)v115, (uint64_t)v113, v73, v35, v69);
  long long v74 = *(_OWORD *)(a3 + 72);
  long long v75 = *(_OWORD *)(a3 + 120);
  v111[2] = *(_OWORD *)(a3 + 104);
  v111[3] = v75;
  long long v76 = *(_OWORD *)(a3 + 88);
  v111[0] = v74;
  v111[1] = v76;
  uint64_t v112 = *(void *)(a3 + 184);
  long long v77 = *(_OWORD *)(a3 + 168);
  long long v78 = *(_OWORD *)(a3 + 136);
  v111[5] = *(_OWORD *)(a3 + 152);
  v111[6] = v77;
  v111[4] = v78;
  if (*(void *)(v74 + 16))
  {
    uint64_t v79 = 0;
    long long v80 = *(_OWORD *)(a4 + 72);
    long long v81 = *(_OWORD *)(a4 + 120);
    v109[2] = *(_OWORD *)(a4 + 104);
    v109[3] = v81;
    long long v82 = *(_OWORD *)(a4 + 88);
    v109[0] = v80;
    v109[1] = v82;
    uint64_t v110 = *(void *)(a4 + 184);
    long long v83 = *(_OWORD *)(a4 + 168);
    long long v84 = *(_OWORD *)(a4 + 136);
    v109[5] = *(_OWORD *)(a4 + 152);
    v109[6] = v83;
    v109[4] = v84;
    if (*(void *)(v80 + 16) && v99 != 1 && a1 != 4)
    {
      id v85 = objc_allocWithZone((Class)type metadata accessor for TrendDetailDailyAverageView());
      id v86 = v73;
      sub_100338CF8((uint64_t)v111);
      sub_100338CF8((uint64_t)v109);
      uint64_t v79 = sub_100285DD0(a1, (uint64_t)v111, (double *)v109, v86);
    }
  }
  else
  {
    uint64_t v79 = 0;
  }
  *(void *)&v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_dailyChart] = v79;
  if ((a16 | a18))
  {
    *(void *)&v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_ringClosureSummary] = 0;
  }
  else
  {
    type metadata accessor for TrendDetailRingClosureView();
    id v87 = sub_1006D13E4();
    *(void *)&v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_ringClosureSummary] = v87;
    id v88 = v87;
    sub_1002EEAE0(a1, a17, a15, a21 & 1);
  }
  if (a1 == 4 && (a24 & 1) == 0 && (unint64_t v89 = sub_100481D5C(a22, a23)) != 0)
  {
    unint64_t v91 = v89;
    uint64_t v92 = v90;
    sub_100481100(v89, v90, (uint64_t)v105, v35);
    sub_1000D7E40(a3);
    sub_1000AEEC8((uint64_t)v105, (uint64_t)v108, &qword_10094E9F8);
    if (v108[48] == 6)
    {
      sub_1000D7E40(a4);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100481100(v91, v92, (uint64_t)v106, v69);
      swift_bridgeObjectRelease();
      sub_1000D7E40(a4);
      sub_1000AEEC8((uint64_t)v106, (uint64_t)v107, &qword_10094E9F8);
    }
  }
  else
  {
    sub_1000D7E40(a4);
    sub_1000D7E40(a3);
  }
  *(void *)&v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_vO2MaxChart] = 0;

  v104.receiver = v30;
  v104.super_class = (Class)type metadata accessor for TrendDetailViewController();
  id v93 = [super initWithNibName:0 bundle:0];
  id v94 = v93;
  uint64_t v95 = *(void **)&v93[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_dailyChart];
  if (v95)
  {
    uint64_t v96 = v93;
    id v97 = v95;
    [v97 setTranslatesAutoresizingMaskIntoConstraints:0];
  }
  swift_release();
  return v94;
}

void sub_100337B70()
{
  uint64_t v1 = v0;
  id v2 = [objc_allocWithZone((Class)UIView) init];
  [v1 setView:v2];

  id v3 = [v1 view];
  if (!v3)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v4 = v3;
  uint64_t v5 = self;
  id v6 = [v5 systemBackgroundColor];
  [v4 setBackgroundColor:v6];

  id v7 = [objc_allocWithZone((Class)UIScrollView) init];
  [v7 setAutoresizingMask:18];
  [v7 _setHostsLayoutEngine:1];
  id v8 = v7;
  id v9 = [v5 systemBackgroundColor];
  [v8 setBackgroundColor:v9];

  [v8 setAlwaysBounceVertical:1];
  id v10 = [v1 view];
  if (!v10)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v11 = v10;
  [v10 addSubview:v8];

  id v31 = v8;
  id v12 = [v1 view];
  if (!v12)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  uint64_t v13 = v12;
  [v12 bounds];
  double v15 = v14;
  double v17 = v16;
  double v19 = v18;
  double v21 = v20;

  [v31 setFrame:v15, v17, v19, v21];
  id v22 = [v1 navigationItem];
  char v23 = v1[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_trendType];
  int v24 = v1[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_isWheelchairUser];
  sub_1000AAF10();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v22 setTitle:v25];

  id v26 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_stackView];
  [v31 addSubview:v26];
  [v26 setAxis:1];
  [v26 setDistribution:0];
  [v26 addArrangedSubview:*(void *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_summaryView]];
  [v26 addArrangedSubview:*(void *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_chartView]];
  if (*(void *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_dailyChart]) {
    [v26 addArrangedSubview:];
  }
  if (*(void *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_ringClosureSummary]) {
    [v26 addArrangedSubview:];
  }
  uint64_t v27 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_explanationView];
  id v28 = [*(id *)(*(void *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_formattingManager]+ OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter) unitManager];
  if (!v28) {
    goto LABEL_15;
  }
  uint64_t v29 = v28;
  sub_1005F333C(v24, v28, *(void *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_pairedWatchManager], v23);
  id v30 = sub_1006A5560(v23);
  swift_bridgeObjectRelease();
  [*(id *)(v27 + OBJC_IVAR____TtC10FitnessApp20TrendExplanationView_textView) setAttributedText:v30];

  [v26 addArrangedSubview:v27];
  sub_100337FCC();
}

void sub_100337FCC()
{
  uint64_t v1 = v0;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_stackView);
  id v3 = [v2 superview];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v2 topAnchor];
    id v6 = [v4 topAnchor];
    id v7 = [v5 constraintEqualToAnchor:v6];

    id v8 = [v2 leftAnchor];
    id v9 = [v4 leftAnchor];
    id v10 = [v8 constraintEqualToAnchor:v9];

    id v11 = [v2 widthAnchor];
    id v12 = [v4 widthAnchor];
    id v13 = [v11 constraintEqualToAnchor:v12];

    id v14 = [v2 bottomAnchor];
    id v15 = [v4 bottomAnchor];
    id v16 = [v14 constraintEqualToAnchor:v15];

    double v17 = self;
    sub_1000AFA94((uint64_t *)&unk_10095B850);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_100751160;
    *(void *)(v18 + 32) = v7;
    *(void *)(v18 + 40) = v10;
    *(void *)(v18 + 48) = v13;
    *(void *)(v18 + 56) = v16;
    specialized Array._endMutation()();
    sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
    id v29 = v7;
    id v19 = v10;
    id v20 = v13;
    id v21 = v16;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v17 activateConstraints:isa];

    char v23 = *(char **)(v1 + OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_vO2MaxChart);
    if (v23)
    {
      int v24 = *(void **)&v23[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_pill90];
      NSString v25 = v23;
      id v26 = [v24 centerXAnchor];
      id v27 = [*(id *)(*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_chartView)+ OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter90) centerXAnchor];
      id v28 = [v26 constraintEqualToAnchor:v27];

      [v28 setActive:1];
    }
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
}

void sub_100338380()
{
  uint64_t v1 = (void *)*(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_direction);
  char v2 = *(unsigned char *)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_trendType);
  if (v1 == 1)
  {
    id v6 = sub_100674990(v2);
    uint64_t v7 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_isWheelchairUser);
    id v9 = v6;
    uint64_t v5 = sub_1005F2FC0(v7, v2);
    uint64_t v4 = v8;
  }
  else
  {
    id v3 = (void *)sub_1006744D0(*(void **)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_valueQuantity), v2);
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_coachingString);
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_coachingString + 8);
    id v9 = v3;
    swift_bridgeObjectRetain();
  }
  sub_1002AA6D8(v2, v1, (uint64_t)v9, v5, v4, v1 != 1);
  swift_bridgeObjectRelease();
}

void sub_10033850C()
{
  uint64_t v1 = v0;
  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for TrendDetailViewController();
  [super viewDidLoad];
  if ([self isAppleInternalInstall])
  {
    if (qword_10094B130 != -1) {
      swift_once();
    }
    if ((byte_10096A4E0 & 1) == 0)
    {
      char v2 = self;
      NSString v3 = String._bridgeToObjectiveC()();
      id v4 = [v2 __systemImageNamedSwift:v3];

      id v5 = objc_allocWithZone((Class)UIBarButtonItem);
      id v6 = v1;
      id v7 = [v5 initWithImage:v4 style:0 target:v6 action:"tapToRadar"];

      id v8 = [v6 navigationItem];
      sub_1000AFA94((uint64_t *)&unk_10095B850);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_100751040;
      *(void *)(v9 + 32) = v7;
      specialized Array._endMutation()();
      sub_10007E2D8(0, (unint64_t *)&unk_10095C090);
      id v10 = v7;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v8 setRightBarButtonItems:isa];
    }
  }
  sub_100338380();
  id v12 = [self defaultCenter];
  [v12 addObserver:v1 selector:"contentSizeCategoryDidChangeWithNote:" name:UIContentSizeCategoryDidChangeNotification object:0];
}

void sub_10033879C(char a1)
{
  char v2 = v1;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for TrendDetailViewController();
  [super viewWillAppear:a1 & 1];
  if (v2[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_direction] != 1)
  {
    id v4 = (void *)*(unsigned __int8 *)(*(void *)&v2[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_summaryView]
                                    + OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_arrowDirection);
    if (v4 == 1) {
      sub_100579EA0(v4, 0);
    }
    else {
      sub_10057A828(v4);
    }
  }
  *(unsigned char *)(*(void *)&v2[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_chartView]
           + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_filled) = 1;
}

void sub_1003388AC(uint64_t a1)
{
  uint64_t v1 = (void *)*(unsigned __int8 *)(*(void *)(a1 + OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_summaryView)
                                  + OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_arrowDirection);
  sub_100579EA0(v1, v1 != 1);
}

uint64_t sub_1003389D4(void *a1)
{
  char v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_stackView;
  sub_10007E2D8(0, &qword_100957898);
  objc_super v5 = v1;
  *(void *)&v1[v4] = sub_1006D13E4();
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_summaryView;
  type metadata accessor for TrendDetailSummaryView();
  *(void *)&v5[v6] = sub_1006D13E4();
  uint64_t v7 = OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_explanationView;
  type metadata accessor for TrendExplanationView();
  id v8 = sub_1006D13E4();

  *(void *)&v5[v7] = v8;
  uint64_t v9 = *(void **)&v5[v7];

  type metadata accessor for TrendDetailViewController();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_100338B1C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendDetailViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for TrendDetailViewController()
{
  return self;
}

uint64_t sub_100338CF8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100338D4C()
{
  return swift_deallocObject();
}

void sub_100338D84()
{
  sub_1003388AC(*(void *)(v0 + 16));
}

uint64_t sub_100338F54()
{
  uint64_t v1 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v1 - 8);
  id v28 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  id v10 = (char *)&v28 - v9;
  __chkstk_darwin(v8);
  id v12 = (char *)&v28 - v11;
  id v30 = *(void (**)(char *))(v4 + 16);
  uint64_t v31 = v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutStartDate;
  v30((char *)&v28 - v11);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Date.timeIntervalSince(_:)();
  uint64_t v29 = v4;
  objc_super v13 = *(void (**)(char *, uint64_t))(v4 + 8);
  id v14 = v10;
  id v15 = v7;
  v13(v14, v3);
  v13(v12, v3);
  id v16 = (void (*)(char *, uint64_t, uint64_t))v30;
  ((void (*)(char *, uint64_t, uint64_t))v30)(v12, v31, v3);
  Date.addingTimeInterval(_:)();
  v13(v12, v3);
  uint64_t v17 = v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBucketStartDate;
  swift_beginAccess();
  v16(v12, v17, v3);
  sub_10033B6D8();
  char v18 = dispatch thunk of static Equatable.== infix(_:_:)();
  v13(v12, v3);
  if ((v18 & 1) == 0)
  {
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 24))(v17, v15, v3);
    swift_endAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v20 = Strong;
      uint64_t v21 = (uint64_t)v28;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v28, 1, 1, v3);
      sub_1006B2528(v21);
      sub_10008DB18(v21, (uint64_t *)&unk_10095B890);
      id v22 = *(void **)(v20 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapRoutePolyline);
      if (v22)
      {
        uint64_t v23 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView;
        int v24 = *(void **)(v20 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView);
        NSString v25 = (uint64_t (*)(char *, uint64_t))v13;
        id v26 = v22;
        [v24 removeOverlay:v26];
        [*(id *)(v20 + v23) addOverlay:v26 level:1];
        swift_unknownObjectRelease();

        return v25(v15, v3);
      }
      swift_unknownObjectRelease();
    }
  }
  return ((uint64_t (*)(char *, uint64_t))v13)(v15, v3);
}

uint64_t sub_100339358()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_1003393D0()
{
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v0 = *(void *)(v11 - 8);
  uint64_t v1 = v0;
  __chkstk_darwin(v11);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AFA94((uint64_t *)&unk_1009559D0);
  uint64_t v4 = *(void *)(v0 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v6 = swift_allocObject();
  uint64_t v12 = v6;
  *(_OWORD *)(v6 + 16) = xmmword_1007526C0;
  v10[5] = v6 + v5;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  v10[2] = v4;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  v10[4] = OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBuckets;
  v10[3] = OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration;
  Date.addingTimeInterval(_:)();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v8 = v11;
  v7(v3, v11);
  v10[1] = v1 + 8;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Date.addingTimeInterval(_:)();
  v7(v3, v8);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Date.addingTimeInterval(_:)();
  v7(v3, v8);
  return v12;
}

uint64_t sub_1003396D8()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v23 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_100957BC0);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v8 - 8);
  int v24 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v23 - v11;
  __chkstk_darwin(v13);
  id v15 = (char *)&v23 - v14;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_100339B2C(v25, (uint64_t)v15);
  uint64_t v16 = v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_selectedDate;
  swift_beginAccess();
  uint64_t v17 = (uint64_t)&v7[*(int *)(v5 + 56)];
  sub_100005D34(v16, (uint64_t)v7);
  sub_100005D34((uint64_t)v15, v17);
  char v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v18((uint64_t)v7, 1, v1) == 1)
  {
    if (v18(v17, 1, v1) == 1) {
      goto LABEL_10;
    }
  }
  else
  {
    sub_100005D34((uint64_t)v7, (uint64_t)v12);
    if (v18(v17, 1, v1) != 1)
    {
      id v19 = v23;
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v23, v17, v1);
      sub_10033B6D8();
      char v20 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v21 = *(void (**)(char *, uint64_t))(v2 + 8);
      v21(v19, v1);
      v21(v12, v1);
      sub_10008DB18((uint64_t)v7, (uint64_t *)&unk_10095B890);
      if (v20) {
        return sub_10008DB18((uint64_t)v15, (uint64_t *)&unk_10095B890);
      }
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v12, v1);
  }
  sub_10008DB18((uint64_t)v7, &qword_100957BC0);
LABEL_8:
  swift_beginAccess();
  sub_10033B670((uint64_t)v15, v16);
  swift_endAccess();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v7 = v24;
    sub_100005D34(v16, (uint64_t)v24);
    sub_1006B4328((uint64_t)v7);
    swift_unknownObjectRelease();
LABEL_10:
    sub_10008DB18((uint64_t)v7, (uint64_t *)&unk_10095B890);
  }
  return sub_10008DB18((uint64_t)v15, (uint64_t *)&unk_10095B890);
}

uint64_t sub_100339AB4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100339B2C@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Date();
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 & 1) != 0 || (*(unsigned char *)(v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth + 8))
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
    return v9(a2, 1, 1, v5);
  }
  else
  {
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v13 = v6;
    v11(v8, v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutStartDate, v5);
    Date.addingTimeInterval(_:)();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v5);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(a2, 0, 1, v5);
  }
}

uint64_t sub_100339D64()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __n128 v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutStartDate;
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v2 + 16);
  v7(v5, v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutStartDate, v1, v3);
  Date.timeIntervalSince(_:)();
  double v9 = v8;
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t))(v2 + 8);
  uint64_t result = v10(v5, v1);
  double v12 = v9 / *(double *)(v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
  if ((~*(void *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v12 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v12 < 9.22337204e18)
  {
    ((void (*)(char *, uint64_t, uint64_t))v7)(v5, v6, v1);
    Date.addingTimeInterval(_:)();
    return v10(v5, v1);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100339F24()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v23 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v15 = v1 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_selectedDate;
  swift_beginAccess();
  sub_100005D34(v15, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10008DB18((uint64_t)v4, (uint64_t *)&unk_10095B890);
LABEL_5:
    *(double *)&uint64_t result = 0.0;
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v14, v4, v5);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth + 8))
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
    goto LABEL_5;
  }
  double v17 = *(double *)(v1 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Date.addingTimeInterval(_:)();
  char v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v18(v8, v5);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Date.timeIntervalSince(_:)();
  double v20 = v19;
  v18(v8, v5);
  v18(v11, v5);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Date.timeIntervalSince(_:)();
  double v22 = v21;
  v18(v11, v5);
  v18(v14, v5);
  *(double *)&uint64_t result = v17 * (v22 / v20);
  return result;
}

uint64_t sub_10033A2C8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)v27 - v12;
  uint64_t result = __chkstk_darwin(v11);
  uint64_t v16 = (char *)v27 - v15;
  double v17 = *(double *)(v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutDuration);
  double v18 = *(double *)(v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
  double v19 = *(double *)(v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBuckets) * v18;
  if (v19 >= v17)
  {
    id v26 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v26(v13, v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutStartDate, v6);
    swift_getKeyPath();
    swift_getKeyPath();
    v26(v10, (uint64_t)v13, v6);
    swift_retain();
    static Published.subscript.setter();
    sub_100338F54();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  }
  else
  {
    if ((a2 & 1) == 0
      && (*(unsigned char *)(v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetFrom + 8) & 1) == 0)
    {
      double v20 = (double *)(v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth);
      if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth + 8) & 1) == 0 && *v20 > 0.0)
      {
        double v21 = (v18 * ceil(v17 / v18) - v19) / (v19 / *v20);
        double v22 = 0.0;
        if (*(double *)(v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetFrom)
           - *(double *)&a1
           + *(double *)(v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetAmount) >= 0.0)
          double v22 = *(double *)(v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetFrom)
              - *(double *)&a1
              + *(double *)(v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetAmount);
        if (v21 >= v22) {
          double v21 = v22;
        }
        *(double *)(v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetAmount) = v21;
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
        v27[2] = v7 + 16;
        uint64_t v29 = v23;
        v23(v13, (char *)(v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutStartDate), v6);
        Date.addingTimeInterval(_:)();
        id v30 = *(void (**)(char *, uint64_t))(v7 + 8);
        v30(v13, v6);
        swift_getKeyPath();
        uint64_t KeyPath = swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        sub_10033B6D8();
        char v24 = dispatch thunk of static Equatable.== infix(_:_:)();
        v30(v13, v6);
        if ((v24 & 1) == 0)
        {
          v29(v13, v16, v6);
          uint64_t KeyPath = swift_getKeyPath();
          v27[1] = swift_getKeyPath();
          v29(v10, v13, v6);
          swift_retain();
          static Published.subscript.setter();
          sub_100338F54();
          v30(v13, v6);
        }
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v30)(v16, v6);
      }
    }
    uint64_t v25 = v3 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetFrom;
    *(double *)uint64_t v25 = *(double *)&a1;
    *(unsigned char *)(v25 + 8) = a2 & 1;
  }
  return result;
}

uint64_t sub_10033A6D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, int a6, int a7, double a8, double a9)
{
  uint64_t v10 = v9;
  int v54 = a7;
  int v51 = a6;
  uint64_t v49 = a3;
  uint64_t v50 = a5;
  uint64_t v52 = a2;
  uint64_t v46 = a1;
  int v48 = a4 & 1;
  uint64_t v13 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v13 - 8);
  uint64_t v53 = (uint64_t)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  double v19 = (char *)v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  double v21 = (char *)v40 - v20;
  uint64_t v22 = sub_1000AFA94(&qword_100957BC8);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v42 = v22;
  uint64_t v43 = v23;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBuckets) = 0x404E000000000000;
  *(void *)(v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration) = 0x404E000000000000;
  uint64_t v26 = v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth;
  long long v45 = (void *)(v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth);
  *(void *)uint64_t v26 = 0;
  *(unsigned char *)(v26 + 8) = 1;
  uint64_t v27 = v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties__touchPoint;
  uint64_t v57 = 0;
  char v58 = 1;
  uint64_t v44 = sub_1000AFA94(&qword_10094F400);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v27, v25, v22);
  *(void *)(v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v47 = v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_selectedDate;
  (*(void (**)(void))(v16 + 56))();
  *(void *)(v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetAmount) = 0;
  uint64_t v28 = v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetFrom;
  *(void *)uint64_t v28 = 0;
  *(unsigned char *)(v28 + 8) = 1;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v30 = v46;
  v29(v21, v46, v15);
  swift_beginAccess();
  v29(v19, (uint64_t)v21, v15);
  Published.init(initialValue:)();
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v40[1] = v16 + 8;
  uint64_t v41 = v31;
  v31((uint64_t)v21, v15);
  swift_endAccess();
  v29((char *)(v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBucketStartDate), v30, v15);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v27, v42);
  uint64_t v55 = v49;
  LOBYTE(v23) = v48;
  char v56 = v48;
  Published.init(initialValue:)();
  swift_endAccess();
  uint64_t v32 = v45;
  void *v45 = v50;
  *((unsigned char *)v32 + 8) = v51 & 1;
  v29((char *)(v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutStartDate), v30, v15);
  uint64_t v33 = v52;
  v29((char *)(v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutEndDate), v52, v15);
  Date.timeIntervalSince(_:)();
  *(void *)(v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutDuration) = v34;
  sub_10033ABA8(v54, a8, a9);
  uint64_t v35 = v53;
  sub_100339B2C(v23, v53);
  uint64_t v36 = v33;
  id v37 = v41;
  v41(v36, v15);
  v37(v30, v15);
  uint64_t v38 = v47;
  swift_beginAccess();
  sub_1000E37D4(v35, v38);
  swift_endAccess();
  return v10;
}

void sub_10033ABA8(int a1, double a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v59 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v59 - v15;
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  double v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v59 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v59 - v25;
  int v68 = a1;
  if (a1)
  {
    double v27 = *(double *)(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutDuration);
    double v28 = v27 / a3;
    if (v27 / a3 < a2) {
      double v28 = a2;
    }
    *(double *)(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration) = v28;
    double v29 = ceil(v27 / v28);
    if (v29 <= a3) {
      a3 = v29;
    }
  }
  else
  {
    *(double *)(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration) = a2;
  }
  *(double *)(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBuckets) = a3;
  uint64_t v30 = v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_selectedDate;
  swift_beginAccess();
  sub_100005D34(v30, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_10008DB18((uint64_t)v16, (uint64_t *)&unk_10095B890);
    *(void *)(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetAmount) = 0;
    uint64_t v31 = v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetFrom;
    *(void *)uint64_t v31 = 0;
    *(unsigned char *)(v31 + 8) = 0;
    sub_10033A2C8(0, 0);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v33 = Strong;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v14, 1, 1, v17);
      sub_1006B2528((uint64_t)v14);
      sub_10008DB18((uint64_t)v14, (uint64_t *)&unk_10095B890);
      uint64_t v34 = *(void **)(v33 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapRoutePolyline);
      if (v34)
      {
        uint64_t v35 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView;
        uint64_t v36 = *(void **)(v33 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView);
        id v37 = v34;
        [v36 removeOverlay:v37];
        [*(id *)(v33 + v35) addOverlay:v37 level:1];
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    unint64_t v63 = v14;
    uint64_t v64 = v30;
    int v66 = v11;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v26, v16, v17);
    long long v67 = v21;
    uint64_t v38 = v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutStartDate;
    double v39 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    v39(v24, v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutStartDate, v17);
    unint64_t v62 = v26;
    Date.timeIntervalSince(_:)();
    double v41 = v40;
    uint64_t v65 = v18;
    uint64_t v42 = *(void (**)(char *, uint64_t))(v18 + 8);
    uint64_t v59 = v18 + 8;
    v42(v24, v17);
    uint64_t v43 = OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration;
    uint64_t v44 = v38;
    long long v45 = v67;
    long long v60 = (void (*)(uint64_t, char *, uint64_t))v39;
    v39(v24, v44, v17);
    Date.addingTimeInterval(_:)();
    uint64_t v61 = v42;
    v42(v24, v17);
    uint64_t v46 = (double *)(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth);
    if ((*(unsigned char *)(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth + 8) & 1) != 0
      || (double v47 = *(double *)(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBuckets)
              * *(double *)(v4 + v43),
          v47 <= 0.0)
      || (v68 & 1) != 0)
    {
      double v50 = 0.0;
      *(void *)(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetAmount) = 0;
      uint64_t v51 = v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetFrom;
      *(void *)uint64_t v51 = 0;
      *(unsigned char *)(v51 + 8) = 0;
    }
    else
    {
      double v48 = *v46;
      *(double *)(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetAmount) = v41 * (*v46 / v47);
      uint64_t v49 = v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetFrom;
      *(void *)uint64_t v49 = 0;
      *(unsigned char *)(v49 + 8) = 0;
      double v50 = v48 * 0.5;
    }
    uint64_t v52 = (uint64_t)v63;
    uint64_t v53 = v60;
    sub_10033A2C8(*(uint64_t *)&v50, 0);
    v53(v52, v45, v17);
    int v54 = v45;
    uint64_t v55 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v65 + 56);
    v55(v52, 0, 1, v17);
    uint64_t v56 = (uint64_t)v66;
    sub_1000CBFEC(v52, (uint64_t)v66);
    uint64_t v57 = v64;
    swift_beginAccess();
    sub_1000E37D4(v56, v57);
    swift_endAccess();
    if (swift_unknownObjectWeakLoadStrong())
    {
      v53(v52, v54, v17);
      v55(v52, 0, 1, v17);
      sub_1006B4328(v52);
      swift_unknownObjectRelease();
      sub_10008DB18(v52, (uint64_t *)&unk_10095B890);
    }
    char v58 = v61;
    v61(v54, v17);
    v58(v62, v17);
  }
}

uint64_t sub_10033B1C8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutStartDate;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutEndDate, v2);
  v3(v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBucketStartDate, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties__onScreenStartDate;
  uint64_t v5 = sub_1000AFA94(&qword_100957BD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties__touchPoint;
  uint64_t v7 = sub_1000AFA94(&qword_100957BC8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  sub_10019B9F8(v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_delegate);
  sub_10008DB18(v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_selectedDate, (uint64_t *)&unk_10095B890);

  return swift_deallocClassInstance();
}

uint64_t sub_10033B36C()
{
  return type metadata accessor for WorkoutChartProperties();
}

uint64_t type metadata accessor for WorkoutChartProperties()
{
  uint64_t result = qword_100957908;
  if (!qword_100957908) {
    return swift_getSingletonMetadata();
  }
  return result;
}

{
  return type metadata accessor for WorkoutChartProperties();
}

void sub_10033B3C0()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    sub_10033B5C8(319, &qword_100957918, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
    if (v1 <= 0x3F)
    {
      sub_10033B56C();
      if (v2 <= 0x3F)
      {
        sub_10033B5C8(319, (unint64_t *)&qword_100951050, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_10033B56C()
{
  if (!qword_100957920)
  {
    sub_1000A1370(&qword_10094F400);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100957920);
    }
  }
}

void sub_10033B5C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for Date();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_10033B628@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for WorkoutChartProperties();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10033B670(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_10033B6D8()
{
  unint64_t result = qword_100951FE0;
  if (!qword_100951FE0)
  {
    type metadata accessor for Date();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100951FE0);
  }
  return result;
}

void sub_10033B738()
{
  id v0 = [self briskColors];
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = [v0 nonGradientTextColor];

    if (v2)
    {
      qword_100957BD8 = (uint64_t)v2;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10033B7AC()
{
  sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  uint64_t result = static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)();
  qword_100957BE0 = result;
  return result;
}

id sub_10033B82C(uint64_t a1)
{
  return sub_1002E1A58(a1, &UIFontTextStyleSubheadline, &qword_100957BE8);
}

id sub_10033B840(uint64_t a1)
{
  return sub_1002E1A58(a1, &UIFontTextStyleFootnote, &qword_100957BF0);
}

char *sub_10033B854(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_tapOnAchievement];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  uint64_t v10 = &v4[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_tapOnShowAllAchievements];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0;
  uint64_t v11 = &v4[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_templateUniqueName];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  *(void *)&v4[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_stackTemplateUniqueNames] = _swiftEmptyArrayStorage;
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_roundedView;
  id v13 = objc_allocWithZone((Class)UIView);
  uint64_t v14 = v4;
  id v15 = [v13 initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v16 = [v15 layer];
  [v16 setCornerRadius:15.0];

  [v15 setClipsToBounds:1];
  id v17 = sub_10005DB50();
  [v15 setBackgroundColor:v17];

  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v4[v12] = v15;
  uint64_t v18 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_sectionLabel;
  id v19 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v19 setLineBreakMode:0];
  [v19 setNumberOfLines:0];
  uint64_t v20 = (void *)UILabel.withLineBreakMode(_:)();

  if (qword_10094A9D0 != -1) {
    swift_once();
  }
  double v21 = (void *)UILabel.withFont(_:)();

  [v21 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v14[v18] = v21;
  uint64_t v22 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_achievementLabel;
  id v23 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v24 = (void *)UILabel.textAlignment(_:)();

  [v24 setLineBreakMode:0];
  [v24 setNumberOfLines:0];
  uint64_t v25 = (void *)UILabel.withLineBreakMode(_:)();

  [v25 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v14[v22] = v25;
  uint64_t v26 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeImageView;
  id v27 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  double v28 = (void *)UIView.withUserInteractionEnabled(_:)();

  double v29 = (void *)UIView.withContentMode(_:)();
  [v29 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v14[v26] = v29;
  uint64_t v30 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeStackImageView;
  id v31 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v32 = (void *)UIView.withContentMode(_:)();

  [v32 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v14[v30] = v32;
  uint64_t v33 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_showAllButton;
  type metadata accessor for ShowAllButton();
  id v34 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  if (qword_10094A9E0 != -1) {
    swift_once();
  }
  uint64_t v35 = (void *)UIButton.withTitleLabelFont(_:)();

  if (qword_10094A9C8 != -1) {
    swift_once();
  }
  uint64_t v36 = (void *)UIButton.withTitleTextColor(_:for:)();

  id v37 = [self mainBundle];
  NSString v38 = String._bridgeToObjectiveC()();
  id v39 = [v37 localizedStringForKey:v38 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v40 = String._bridgeToObjectiveC()();
  [v36 setTitle:v40 forState:[v36 state]];
  swift_bridgeObjectRelease();

  id v41 = [v36 titleLabel];
  [v41 setLineBreakMode:0];

  id v42 = [v36 titleLabel];
  [v42 setLineBreakMode:0];

  id v43 = [v36 titleLabel];
  [v43 setNumberOfLines:0];

  [v36 setContentHorizontalAlignment:2];
  [v36 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v14[v33] = v36;

  v62.receiver = v14;
  v62.super_class = (Class)type metadata accessor for TrophyCaseGoForItCell();
  id v44 = [super initWithFrame:a1, a2, a3, a4];
  id v45 = objc_allocWithZone((Class)UITapGestureRecognizer);
  uint64_t v46 = (char *)v44;
  id v47 = [v45 initWithTarget:v46 action:"didTapTopAchievement:"];
  uint64_t v48 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeImageView;
  [*(id *)&v46[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeImageView] addGestureRecognizer:v47];
  uint64_t v49 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_achievementLabel;
  id v50 = *(id *)&v46[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_achievementLabel];
  if (FIUILocaleIsRightToLeft()) {
    uint64_t v51 = 2;
  }
  else {
    uint64_t v51 = 0;
  }
  [v50 setTextAlignment:v51];

  uint64_t v52 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_showAllButton;
  id v53 = *(id *)&v46[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_showAllButton];
  if (FIUILocaleIsRightToLeft()) {
    uint64_t v54 = 1;
  }
  else {
    uint64_t v54 = 2;
  }
  [v53 setContentHorizontalAlignment:v54];

  uint64_t v55 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeStackImageView;
  id v56 = *(id *)&v46[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeStackImageView];
  if (FIUILocaleIsRightToLeft()) {
    uint64_t v57 = 7;
  }
  else {
    uint64_t v57 = 8;
  }
  [v56 setContentMode:v57];

  [*(id *)&v46[v52] addTarget:v46 action:"didTapShowAllButton:" forControlEvents:64];
  id v58 = [self sharedApplication];
  id v59 = [v58 preferredContentSizeCategory];

  LOBYTE(v58) = UIContentSizeCategory.isAccessibilityCategory.getter();
  if (v58) {
    [*(id *)&v46[v49] setTextAlignment:1];
  }
  long long v60 = *(void **)&v46[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_roundedView];
  [v60 addSubview:*(void *)&v46[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_sectionLabel]];
  [v60 addSubview:*(void *)&v46[v48]];
  [v60 addSubview:*(void *)&v46[v49]];
  [v60 addSubview:*(void *)&v46[v55]];
  [v60 addSubview:*(void *)&v46[v52]];
  [v46 addSubview:v60];
  sub_10033C064();

  return v46;
}

void sub_10033C064()
{
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10075EE90;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_roundedView];
  id v3 = [v2 topAnchor];
  id v4 = [v0 topAnchor];
  id v5 = [v3 constraintEqualToAnchor:v4];

  *(void *)(v1 + 32) = v5;
  id v6 = [v2 bottomAnchor];
  id v7 = [v0 bottomAnchor];
  id v8 = [v6 constraintEqualToAnchor:v7];

  *(void *)(v1 + 40) = v8;
  id v9 = [v2 leadingAnchor];
  id v10 = [v0 leadingAnchor];
  id v11 = [v9 constraintEqualToAnchor:v10];

  *(void *)(v1 + 48) = v11;
  id v12 = [v2 trailingAnchor];
  id v13 = [v0 trailingAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13];

  *(void *)(v1 + 56) = v14;
  id v15 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeImageView];
  id v16 = [v15 topAnchor];
  id v17 = [v2 topAnchor];
  id v18 = [v16 constraintGreaterThanOrEqualToAnchor:v17 constant:16.0];

  *(void *)(v1 + 64) = v18;
  id v19 = [v15 centerYAnchor];
  id v20 = [v2 centerYAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20];

  *(void *)(v1 + 72) = v21;
  id v22 = [v15 leadingAnchor];
  id v23 = [v2 leadingAnchor];
  id v24 = [v22 constraintEqualToAnchor:v23 constant:16.0];

  *(void *)(v1 + 80) = v24;
  id v25 = [v15 widthAnchor];
  id v26 = [v15 heightAnchor];
  id v27 = [v25 constraintEqualToAnchor:v26];

  *(void *)(v1 + 88) = v27;
  id v28 = [v15 widthAnchor];
  id v29 = [v28 constraintEqualToConstant:72.0];

  *(void *)(v1 + 96) = v29;
  uint64_t v30 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_sectionLabel];
  id v31 = [v30 topAnchor];
  id v32 = [v2 topAnchor];
  id v33 = [v31 constraintEqualToAnchor:v32 constant:16.0];

  *(void *)(v1 + 104) = v33;
  id v34 = [v30 leadingAnchor];
  id v35 = [v15 trailingAnchor];
  id v36 = [v34 constraintEqualToAnchor:v35 constant:12.0];

  *(void *)(v1 + 112) = v36;
  id v151 = v30;
  id v37 = [v30 trailingAnchor];
  id v153 = v0;
  NSString v38 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeStackImageView];
  id v39 = [v38 leadingAnchor];
  id v40 = [v37 constraintEqualToAnchor:v39 constant:-12.0];

  *(void *)(v1 + 120) = v40;
  id v41 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_achievementLabel];
  id v42 = [v41 topAnchor];
  id v43 = [v30 lastBaselineAnchor];
  id v44 = [v42 constraintEqualToAnchor:v43 constant:5.0];

  *(void *)(v1 + 128) = v44;
  id v45 = [v41 leadingAnchor];
  id v46 = [v15 trailingAnchor];
  id v47 = [v45 constraintEqualToAnchor:v46 constant:12.0];

  *(void *)(v1 + 136) = v47;
  id v152 = v41;
  id v48 = [v41 trailingAnchor];
  id v49 = [v38 leadingAnchor];
  id v50 = [v48 constraintEqualToAnchor:v49 constant:-12.0];

  *(void *)(v1 + 144) = v50;
  id v51 = [v41 bottomAnchor];
  id v52 = [v2 bottomAnchor];
  id v53 = [v51 constraintEqualToAnchor:v52 constant:-16.0];

  *(void *)(v1 + 152) = v53;
  id v54 = [v38 topAnchor];
  id v55 = [v2 topAnchor];
  id v56 = [v54 constraintEqualToAnchor:v55 constant:16.0];

  *(void *)(v1 + 160) = v56;
  id v57 = [v38 trailingAnchor];
  id v58 = [v2 trailingAnchor];
  id v59 = [v57 constraintEqualToAnchor:v58 constant:-16.0];

  *(void *)(v1 + 168) = v59;
  id v60 = [v38 heightAnchor];
  id v61 = [v60 constraintEqualToConstant:34.0];

  *(void *)(v1 + 176) = v61;
  id v62 = [v38 widthAnchor];
  id v63 = [v15 widthAnchor];
  id v64 = [v62 constraintEqualToAnchor:v63];

  *(void *)(v1 + 184) = v64;
  uint64_t v65 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_showAllButton];
  id v66 = [v65 topAnchor];
  id v67 = [v38 bottomAnchor];
  id v68 = [v66 constraintGreaterThanOrEqualToAnchor:v67 constant:12.0];

  *(void *)(v1 + 192) = v68;
  id v69 = [v65 bottomAnchor];
  id v70 = [v2 bottomAnchor];
  id v71 = [v69 constraintEqualToAnchor:v70 constant:-16.0];

  *(void *)(v1 + 200) = v71;
  id v72 = [v65 trailingAnchor];
  id v73 = [v2 trailingAnchor];
  id v74 = [v72 constraintEqualToAnchor:v73 constant:-16.0];

  *(void *)(v1 + 208) = v74;
  id v75 = [v65 leadingAnchor];
  id v76 = [v38 leadingAnchor];
  id v77 = [v75 constraintEqualToAnchor:v76];

  *(void *)(v1 + 216) = v77;
  specialized Array._endMutation()();
  uint64_t v78 = swift_allocObject();
  *(_OWORD *)(v78 + 16) = xmmword_10075EEA0;
  uint64_t v79 = v2;
  id v80 = [v2 topAnchor];
  id v81 = [v153 topAnchor];
  id v82 = [v80 constraintEqualToAnchor:v81];

  *(void *)(v78 + 32) = v82;
  id v83 = [v2 bottomAnchor];
  id v84 = [v153 bottomAnchor];
  id v85 = [v83 constraintEqualToAnchor:v84];

  *(void *)(v78 + 40) = v85;
  id v86 = [v2 leadingAnchor];
  id v87 = [v153 leadingAnchor];
  id v88 = [v86 constraintEqualToAnchor:v87];

  *(void *)(v78 + 48) = v88;
  id v89 = [v2 trailingAnchor];
  id v90 = [v153 trailingAnchor];
  id v91 = [v89 constraintEqualToAnchor:v90];

  *(void *)(v78 + 56) = v91;
  id v92 = [v151 topAnchor];
  id v93 = [v79 topAnchor];
  id v94 = [v92 constraintEqualToAnchor:v93 constant:16.0];

  *(void *)(v78 + 64) = v94;
  id v95 = [v151 leadingAnchor];
  id v96 = [v79 leadingAnchor];
  id v97 = [v95 constraintEqualToAnchor:v96 constant:12.0];

  *(void *)(v78 + 72) = v97;
  id v98 = [v151 trailingAnchor];
  id v99 = [v79 trailingAnchor];
  id v100 = [v98 constraintEqualToAnchor:v99 constant:-16.0];

  *(void *)(v78 + 80) = v100;
  id v101 = [v15 topAnchor];
  id v102 = [v151 bottomAnchor];
  id v103 = [v101 constraintGreaterThanOrEqualToAnchor:v102 constant:16.0];

  *(void *)(v78 + 88) = v103;
  id v104 = [v15 centerXAnchor];
  id v105 = [v79 centerXAnchor];
  id v106 = [v104 constraintEqualToAnchor:v105];

  *(void *)(v78 + 96) = v106;
  id v107 = [v15 widthAnchor];
  id v108 = [v15 heightAnchor];
  id v109 = [v107 constraintEqualToAnchor:v108];

  *(void *)(v78 + 104) = v109;
  id v110 = [v15 widthAnchor];
  id v111 = [v79 widthAnchor];
  id v112 = [v110 constraintEqualToAnchor:v111 multiplier:0.6];

  *(void *)(v78 + 112) = v112;
  id v113 = [v152 topAnchor];
  id v114 = [v15 bottomAnchor];
  id v115 = [v113 constraintEqualToAnchor:v114 constant:20.0];

  *(void *)(v78 + 120) = v115;
  id v116 = [v152 leadingAnchor];
  id v117 = [v79 leadingAnchor];
  id v118 = [v116 constraintEqualToAnchor:v117 constant:16.0];

  *(void *)(v78 + 128) = v118;
  id v119 = [v152 trailingAnchor];
  id v120 = [v79 trailingAnchor];
  id v121 = [v119 constraintEqualToAnchor:v120 constant:-16.0];

  *(void *)(v78 + 136) = v121;
  id v122 = [v38 topAnchor];
  id v123 = [v152 bottomAnchor];
  id v124 = [v122 constraintGreaterThanOrEqualToAnchor:v123 constant:16.0];

  *(void *)(v78 + 144) = v124;
  id v125 = [v38 leadingAnchor];
  id v126 = [v79 leadingAnchor];
  id v127 = [v125 constraintEqualToAnchor:v126 constant:16.0];

  *(void *)(v78 + 152) = v127;
  id v128 = [v38 trailingAnchor];
  id v129 = [v79 centerXAnchor];
  id v130 = [v128 constraintEqualToAnchor:v129 constant:-5.0];

  *(void *)(v78 + 160) = v130;
  id v131 = [v38 heightAnchor];
  id v132 = [v131 constraintEqualToConstant:41.0];

  *(void *)(v78 + 168) = v132;
  id v133 = [v38 bottomAnchor];
  id v134 = [v79 bottomAnchor];
  id v135 = [v133 constraintEqualToAnchor:v134 constant:-16.0];

  *(void *)(v78 + 176) = v135;
  id v136 = [v65 topAnchor];
  id v137 = [v152 bottomAnchor];
  id v138 = [v136 constraintGreaterThanOrEqualToAnchor:v137 constant:16.0];

  *(void *)(v78 + 184) = v138;
  id v139 = [v65 bottomAnchor];
  id v140 = [v79 bottomAnchor];
  id v141 = [v139 constraintEqualToAnchor:v140 constant:-16.0];

  *(void *)(v78 + 192) = v141;
  id v142 = [v65 trailingAnchor];
  id v143 = [v79 trailingAnchor];
  id v144 = [v142 constraintEqualToAnchor:v143 constant:-16.0];

  *(void *)(v78 + 200) = v144;
  id v145 = [v65 leadingAnchor];
  id v146 = [v79 centerXAnchor];
  id v147 = [v145 constraintEqualToAnchor:v146 constant:16.0];

  *(void *)(v78 + 208) = v147;
  specialized Array._endMutation()();
  id v148 = [self sharedApplication];
  id v149 = [v148 preferredContentSizeCategory];

  UIContentSizeCategory.isAccessibilityCategory.getter();
  swift_bridgeObjectRelease();
  uint64_t v150 = self;
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v150 activateConstraints:isa];
}

void sub_10033D3F4(void *a1, void *a2)
{
  id v3 = v2;
  id v60 = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v58 = *(void *)(v5 - 8);
  uint64_t v59 = v5;
  __chkstk_darwin(v5);
  id v56 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for DispatchQoS();
  uint64_t v55 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  id v54 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v52 = *(void *)(v8 - 8);
  uint64_t v53 = v8;
  __chkstk_darwin(v8);
  id v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v11);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v12 - 8);
  id v13 = [self mainScreen];
  [v13 bounds];
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  CGFloat v21 = v20;

  v68.origin.x = v15;
  v68.origin.y = v17;
  v68.size.width = v19;
  v68.size.height = v21;
  double v22 = CGRectGetWidth(v68) + -20.0;
  id v23 = [self sharedApplication];
  id v24 = [v23 preferredContentSizeCategory];

  LOBYTE(v23) = UIContentSizeCategory.isAccessibilityCategory.getter();
  if (v23) {
    double v25 = v22 * 0.6;
  }
  else {
    double v25 = 72.0;
  }
  id v26 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeImageView];
  sub_1000AFA94((uint64_t *)&unk_10096AA70);
  id v27 = a1;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v28 = EntityProperty<>.init(title:)();
  id v29 = v27;
  swift_retain();
  LOBYTE(aBlock) = [v29 unearned] ^ 1;
  EntityProperty.wrappedValue.setter();

  swift_release();
  uint64_t aBlock = (void **)_swiftEmptyArrayStorage;
  sub_100067914((unint64_t *)&qword_10094C758, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState);
  sub_1000AFA94((uint64_t *)&unk_10096AA80);
  sub_1002D54D8((unint64_t *)&qword_10094C760, (uint64_t *)&unk_10096AA80);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t aBlock = (void **)v28;
  uint64_t v63 = (uint64_t)v29;
  id v30 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
  sub_1000818CC();
  id v31 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
  UIView.annotate(with:)();

  id v32 = [v29 template];
  id v33 = [v32 uniqueName];

  if (v33)
  {
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v36 = v35;
  }
  else
  {
    uint64_t v34 = 0;
    uint64_t v36 = 0;
  }
  id v37 = (uint64_t *)&v3[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_templateUniqueName];
  uint64_t *v37 = v34;
  v37[1] = v36;
  swift_bridgeObjectRelease();
  id v38 = v60;
  if (objc_msgSend(v60, "hasCachedThumbnailImageForAchievement:size:", v29, v25, v25))
  {
    id v39 = [v38 thumbnailImageForAchievement:v29 size:v25 v25];
    [v26 setImage:v39];
  }
  else
  {
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    uint64_t v41 = v52;
    uint64_t v40 = v53;
    (*(void (**)(char *, void, uint64_t))(v52 + 104))(v10, enum case for DispatchQoS.QoSClass.userInitiated(_:), v53);
    id v42 = (void *)static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v40);
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = v38;
    *(void *)(v43 + 24) = v29;
    *(double *)(v43 + 32) = v25;
    *(double *)(v43 + 40) = v25;
    *(void *)(v43 + 48) = v3;
    id v66 = sub_10033F8D0;
    uint64_t v67 = v43;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v63 = 1107296256;
    id v64 = sub_100070394;
    uint64_t v65 = &unk_1008C22D0;
    id v44 = _Block_copy(&aBlock);
    id v45 = v29;
    id v46 = v38;
    id v47 = v3;
    id v48 = v54;
    static DispatchQoS.unspecified.getter();
    id v61 = _swiftEmptyArrayStorage;
    sub_100067914((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_1002D54D8((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
    id v49 = v56;
    uint64_t v50 = v59;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v44);

    (*(void (**)(char *, uint64_t))(v58 + 8))(v49, v50);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v48, v57);
    swift_release();
  }
}

uint64_t sub_10033DB48(void *a1, void *a2, double a3, double a4)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v23 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  id v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = [a1 thumbnailImageForAchievement:a2 size:a3];
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  CGFloat v15 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  CGFloat v17 = (void *)swift_allocObject();
  v17[2] = v16;
  void v17[3] = a2;
  v17[4] = v14;
  aBlock[4] = sub_10033F928;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008C2320;
  double v18 = _Block_copy(aBlock);
  id v19 = a2;
  id v20 = v14;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100067914((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1002D54D8((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v22);
}

void sub_10033DE8C(uint64_t a1, void *a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    uint64_t v8 = *(void *)(Strong + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_templateUniqueName);
    uint64_t v7 = *(void *)(Strong + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_templateUniqueName + 8);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v7 = 0;
  }
  id v9 = [a2 template];
  id v10 = [v9 uniqueName];

  if (!v10)
  {
    if (!v7) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  if (!v7)
  {
    if (!v13) {
      goto LABEL_18;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return;
  }
  if (!v13) {
    goto LABEL_16;
  }
  if (v8 == v11 && v7 == v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0) {
      return;
    }
  }
LABEL_18:
  swift_beginAccess();
  uint64_t v16 = swift_unknownObjectWeakLoadStrong();
  if (v16)
  {
    CGFloat v17 = (void *)v16;
    id v18 = *(id *)(v16 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeImageView);

    [v18 setImage:a3];
  }
}

void sub_10033E03C(unint64_t a1, void *a2, unsigned int a3)
{
  unsigned int v63 = a3;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v61 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v58 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v57 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v55 = *(void *)(v11 - 8);
  uint64_t v56 = v11;
  __chkstk_darwin(v11);
  id v54 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10033F4DC();
  double v14 = v13;
  double v16 = v15;
  id v17 = [self sharedApplication];
  id v18 = [v17 preferredContentSizeCategory];

  LOBYTE(v17) = UIContentSizeCategory.isAccessibilityCategory.getter();
  unsigned int IsRightToLeft = FIUILocaleIsRightToLeft();
  if (v17)
  {
    unsigned int v62 = IsRightToLeft;
    id v20 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeStackImageView];
    if (FIUILocaleIsRightToLeft()) {
      uint64_t v21 = 8;
    }
    else {
      uint64_t v21 = 7;
    }
  }
  else
  {
    unsigned int v62 = IsRightToLeft ^ 1;
    id v20 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeStackImageView];
    if (FIUILocaleIsRightToLeft()) {
      uint64_t v21 = 7;
    }
    else {
      uint64_t v21 = 8;
    }
  }
  id v53 = v20;
  [v20 setContentMode:v21];
  id v64 = v3;
  if (a1 >> 62) {
    goto LABEL_29;
  }
  uint64_t v22 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v59 = v8;
    unint64_t v60 = v9;
    if (!v22) {
      break;
    }
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1000ABAB8(0, v22 & ~(v22 >> 63), 0);
    if (v22 < 0)
    {
      __break(1u);
LABEL_31:
      __break(1u);
      return;
    }
    uint64_t v51 = a2;
    uint64_t v52 = v6;
    uint64_t v23 = 0;
    uint64_t v8 = (char *)aBlock[0];
    unint64_t v9 = a1 & 0xC000000000000001;
    while (v22 != v23)
    {
      if (v9) {
        id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v24 = *(id *)(a1 + 8 * v23 + 32);
      }
      double v25 = v24;
      id v26 = [v24 template];
      id v27 = [v26 uniqueName];

      if (!v27) {
        goto LABEL_31;
      }
      uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      a2 = v28;

      aBlock[0] = v8;
      unint64_t v30 = *((void *)v8 + 2);
      unint64_t v29 = *((void *)v8 + 3);
      if (v30 >= v29 >> 1)
      {
        sub_1000ABAB8(v29 > 1, v30 + 1, 1);
        uint64_t v8 = (char *)aBlock[0];
      }
      ++v23;
      *((void *)v8 + 2) = v30 + 1;
      id v31 = &v8[16 * v30];
      *((void *)v31 + 4) = v6;
      *((void *)v31 + 5) = a2;
      if (v22 == v23)
      {
        uint64_t v6 = v52;
        a2 = v51;
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = (char *)_swiftEmptyArrayStorage;
LABEL_23:
  id v32 = v64;
  *(void *)&v64[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_stackTemplateUniqueNames] = v8;
  swift_bridgeObjectRelease();
  sub_10007E2D8(0, (unint64_t *)&qword_1009556B0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  uint64_t v35 = v62;
  uint64_t v34 = v63;
  unsigned __int8 v36 = [a2 hasCachedThumbnailImageForAchievements:isa v62 v63 v14 v16];

  if (v36)
  {
    Class v37 = Array._bridgeToObjectiveC()().super.isa;
    id v64 = [a2 thumbnailImageForAchievements:v37 size:v35 alignment:v34 stackType:v14];

    [v53 setImage:v64];
    id v38 = v64;
  }
  else
  {
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    uint64_t v40 = v55;
    uint64_t v39 = v56;
    uint64_t v41 = v6;
    id v42 = v54;
    (*(void (**)(char *, void, uint64_t))(v55 + 104))(v54, enum case for DispatchQoS.QoSClass.userInitiated(_:), v56);
    id v53 = (id)static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v39);
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = a2;
    *(void *)(v43 + 24) = a1;
    *(double *)(v43 + 32) = v14;
    *(double *)(v43 + 40) = v16;
    *(_DWORD *)(v43 + 48) = v35;
    *(_DWORD *)(v43 + 52) = v34;
    *(void *)(v43 + 56) = v32;
    aBlock[4] = sub_10033F7E8;
    aBlock[5] = v43;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100070394;
    aBlock[3] = &unk_1008C2208;
    id v44 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    id v45 = a2;
    id v46 = v32;
    id v47 = v57;
    static DispatchQoS.unspecified.getter();
    uint64_t v65 = _swiftEmptyArrayStorage;
    sub_100067914((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_1002D54D8((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
    id v48 = v59;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v49 = v53;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v44);

    (*(void (**)(char *, uint64_t))(v61 + 8))(v48, v41);
    (*(void (**)(char *, unint64_t))(v58 + 8))(v47, v60);
    swift_release();
  }
}

uint64_t sub_10033E740(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  double v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for DispatchQoS();
  uint64_t v15 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  id v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E2D8(0, (unint64_t *)&qword_1009556B0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v19 = [a1 thumbnailImageForAchievements:isa a3:a4 a5:a6];

  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  id v20 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = v21;
  v22[3] = a2;
  v22[4] = v19;
  aBlock[4] = sub_10033F87C;
  aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008C2280;
  uint64_t v23 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v24 = v19;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100067914((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1002D54D8((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v26);
}

void sub_10033EAC4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    uint64_t v6 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_stackTemplateUniqueNames);
    swift_bridgeObjectRetain();

    if (!(a2 >> 62))
    {
LABEL_3:
      uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v6 = 0;
    if (!(a2 >> 62)) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_4:
  if (v7)
  {
    sub_1000ABAB8(0, v7 & ~(v7 >> 63), 0);
    if ((v7 & 0x8000000000000000) == 0)
    {
      uint64_t v8 = 0;
      while (v7 != v8)
      {
        if ((a2 & 0xC000000000000001) != 0) {
          id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v9 = *(id *)(a2 + 8 * v8 + 32);
        }
        uint64_t v10 = v9;
        id v11 = [v9 template];
        id v12 = [v11 uniqueName];

        if (!v12) {
          goto LABEL_25;
        }
        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v15 = v14;

        unint64_t v17 = _swiftEmptyArrayStorage[2];
        unint64_t v16 = _swiftEmptyArrayStorage[3];
        if (v17 >= v16 >> 1) {
          sub_1000ABAB8(v16 > 1, v17 + 1, 1);
        }
        ++v8;
        _swiftEmptyArrayStorage[2] = v17 + 1;
        id v18 = &_swiftEmptyArrayStorage[2 * v17];
        v18[4] = v13;
        v18[5] = v15;
        if (v7 == v8) {
          goto LABEL_15;
        }
      }
      __break(1u);
    }
    __break(1u);
LABEL_25:
    __break(1u);
  }
  else
  {
LABEL_15:
    if (v6)
    {
      char v19 = sub_1003756B8(v6, _swiftEmptyArrayStorage);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v19)
      {
        swift_beginAccess();
        uint64_t v20 = swift_unknownObjectWeakLoadStrong();
        if (v20)
        {
          uint64_t v21 = (void *)v20;
          id v22 = *(id *)(v20 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeStackImageView);

          [v22 setImage:a3];
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

id sub_10033ED34()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrophyCaseGoForItCell();
  return [super dealloc];
}

uint64_t type metadata accessor for TrophyCaseGoForItCell()
{
  return self;
}

id sub_10033EE64(char a1)
{
  return [*(id *)(*v1 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeImageView) setHidden:a1 & 1];
}

double sub_10033EE88()
{
  [*(id *)(*v0 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeImageView) frame];
  double v2 = v1;
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  UIEdgeInsets.init(uniform:)();

  return sub_1002E8388(v2, v4, v6, v8, v9, v10);
}

void sub_10033EF10(uint64_t a1, void *a2, unint64_t a3, uint64_t a4, void *a5, void *a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
}

void sub_10033EF58()
{
  double v1 = v0;
  double v2 = &v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_tapOnAchievement];
  *(void *)double v2 = 0;
  *((void *)v2 + 1) = 0;
  double v3 = &v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_tapOnShowAllAchievements];
  *(void *)double v3 = 0;
  *((void *)v3 + 1) = 0;
  double v4 = &v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_templateUniqueName];
  *(void *)double v4 = 0;
  *((void *)v4 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_stackTemplateUniqueNames] = _swiftEmptyArrayStorage;
  uint64_t v5 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_roundedView;
  id v6 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v7 = [v6 layer];
  [v7 setCornerRadius:15.0];

  [v6 setClipsToBounds:1];
  id v8 = sub_10005DB50();
  [v6 setBackgroundColor:v8];

  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v5] = v6;
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_sectionLabel;
  id v10 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v10 setLineBreakMode:0];
  [v10 setNumberOfLines:0];
  id v11 = (void *)UILabel.withLineBreakMode(_:)();

  if (qword_10094A9D0 != -1) {
    swift_once();
  }
  id v12 = (void *)UILabel.withFont(_:)();

  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v9] = v12;
  uint64_t v13 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_achievementLabel;
  id v14 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v15 = (void *)UILabel.textAlignment(_:)();

  [v15 setLineBreakMode:0];
  [v15 setNumberOfLines:0];
  unint64_t v16 = (void *)UILabel.withLineBreakMode(_:)();

  [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v13] = v16;
  uint64_t v17 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeImageView;
  id v18 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  char v19 = (void *)UIView.withUserInteractionEnabled(_:)();

  uint64_t v20 = (void *)UIView.withContentMode(_:)();
  [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v17] = v20;
  uint64_t v21 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeStackImageView;
  id v22 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v23 = (void *)UIView.withContentMode(_:)();

  [v23 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v21] = v23;
  uint64_t v24 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_showAllButton;
  type metadata accessor for ShowAllButton();
  id v25 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  if (qword_10094A9E0 != -1) {
    swift_once();
  }
  uint64_t v26 = (void *)UIButton.withTitleLabelFont(_:)();

  if (qword_10094A9C8 != -1) {
    swift_once();
  }
  uint64_t v27 = (void *)UIButton.withTitleTextColor(_:for:)();

  id v28 = [self mainBundle];
  NSString v29 = String._bridgeToObjectiveC()();
  id v30 = [v28 localizedStringForKey:v29 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v31 = String._bridgeToObjectiveC()();
  [v27 setTitle:v31 forState:[v27 state]];
  swift_bridgeObjectRelease();

  id v32 = [v27 titleLabel];
  [v32 setLineBreakMode:0];

  id v33 = [v27 titleLabel];
  [v33 setLineBreakMode:0];

  id v34 = [v27 titleLabel];
  [v34 setNumberOfLines:0];

  [v27 setContentHorizontalAlignment:2];
  [v27 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v24] = v27;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10033F4DC()
{
  id v0 = [self mainScreen];
  [v0 bounds];
  CGFloat v2 = v1;
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;

  v11.origin.x = v2;
  v11.origin.y = v4;
  v11.size.width = v6;
  v11.size.height = v8;
  CGRectGetWidth(v11);
  id v9 = [self sharedApplication];
  id v10 = [v9 preferredContentSizeCategory];

  UIContentSizeCategory.isAccessibilityCategory.getter();
}

void sub_10033F5FC(uint64_t a1, void *a2, unint64_t a3, void *a4, void *a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unint64_t v16 = *(void **)(v10 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_sectionLabel);
  id v17 = sub_1002E6B24();
  [v16 setAttributedText:v17];

  id v18 = (void *)(v10 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_tapOnAchievement);
  uint64_t v19 = *(void *)(v10 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_tapOnAchievement);
  *id v18 = a7;
  v18[1] = a8;
  swift_retain();
  sub_10005E5F8(v19);
  uint64_t v20 = (void *)(v10 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_tapOnShowAllAchievements);
  uint64_t v21 = *(void *)(v10 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_tapOnShowAllAchievements);
  *uint64_t v20 = a9;
  v20[1] = a10;
  swift_retain();
  sub_10005E5F8(v21);
  if (a2)
  {
    id v22 = a2;
    sub_10033D3F4(v22, a4);
    sub_10033E03C(a3, a4, a6);
    uint64_t v23 = *(void **)(v10 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_achievementLabel);
    if (qword_10094A9D8 != -1) {
      swift_once();
    }
    id v26 = sub_1002E6114(v22, (void *)qword_100957BE8, a5);
    [v23 setAttributedText:v26];
  }
}

uint64_t sub_10033F7A0()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10033F7E8()
{
  return sub_10033E740(*(void **)(v0 + 16), *(void *)(v0 + 24), *(unsigned int *)(v0 + 48), *(unsigned int *)(v0 + 52), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_10033F7FC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10033F834()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_10033F87C()
{
  sub_10033EAC4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10033F888()
{
  return swift_deallocObject();
}

uint64_t sub_10033F8D0()
{
  return sub_10033DB48(*(void **)(v0 + 16), *(void **)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_10033F8E0()
{
  swift_release();

  return swift_deallocObject();
}

void sub_10033F928()
{
  sub_10033DE8C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10033F948@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ActivitySharingHighlight() + 20);
  uint64_t v4 = type metadata accessor for UUID();
  double v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

char *sub_10033F9C0(char *a1, char **a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v40 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = &v40[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    double v7 = *a2;
    char v8 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    a1[8] = v8;
    id v9 = (int *)type metadata accessor for ActivitySharingHighlight();
    uint64_t v10 = v9[5];
    CGRect v11 = &v4[v10];
    uint64_t v12 = (uint64_t)a2 + v10;
    uint64_t v13 = type metadata accessor for UUID();
    id v14 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    uint64_t v15 = v7;
    v14(v11, v12, v13);
    uint64_t v16 = v9[6];
    id v17 = &v4[v16];
    uint64_t v18 = (uint64_t)a2 + v16;
    uint64_t v19 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = v9[7];
    uint64_t v21 = *(char **)((char *)a2 + v20);
    *(void *)&v4[v20] = v21;
    *(void *)&v4[v9[8]] = *(char **)((char *)a2 + v9[8]);
    uint64_t v22 = a3[5];
    uint64_t v23 = a3[6];
    uint64_t v24 = *(char **)((char *)a2 + v22);
    *(void *)&v4[v22] = v24;
    id v25 = *(char **)((char *)a2 + v23);
    *(void *)&v4[v23] = v25;
    uint64_t v26 = a3[7];
    uint64_t v27 = a3[8];
    id v28 = *(char **)((char *)a2 + v26);
    *(void *)&v4[v26] = v28;
    NSString v29 = *(char **)((char *)a2 + v27);
    *(void *)&v4[v27] = v29;
    uint64_t v30 = a3[10];
    v4[a3[9]] = *((unsigned char *)a2 + a3[9]);
    id v44 = &v4[v30];
    uint64_t v43 = (uint64_t)a2 + v30;
    uint64_t v31 = type metadata accessor for FIUIRelativeDateTimeFormatter();
    id v42 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16);
    id v32 = v21;
    id v33 = v24;
    id v34 = v25;
    id v35 = v28;
    id v36 = v29;
    v42(v44, v43, v31);
    uint64_t v37 = a3[11];
    id v38 = *(char **)((char *)a2 + v37);
    *(void *)&v4[v37] = v38;
    id v39 = v38;
  }
  return v4;
}

void sub_10033FBDC(id *a1, int *a2)
{
  uint64_t v4 = (int *)type metadata accessor for ActivitySharingHighlight();
  int v5 = (char *)a1 + v4[5];
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  double v7 = (char *)a1 + v4[6];
  uint64_t v8 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  id v9 = (char *)a1 + a2[10];
  uint64_t v10 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  CGRect v11 = *(id *)((char *)a1 + a2[11]);
}

uint64_t sub_10033FD30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = (int *)type metadata accessor for ActivitySharingHighlight();
  uint64_t v9 = v8[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  id v14 = v6;
  v13(v10, v11, v12);
  uint64_t v15 = v8[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = v8[7];
  uint64_t v20 = *(void **)(a2 + v19);
  *(void *)(a1 + v19) = v20;
  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  uint64_t v21 = a3[5];
  uint64_t v22 = a3[6];
  uint64_t v23 = *(void **)(a2 + v21);
  *(void *)(a1 + v21) = v23;
  uint64_t v24 = *(void **)(a2 + v22);
  *(void *)(a1 + v22) = v24;
  uint64_t v25 = a3[7];
  uint64_t v26 = a3[8];
  uint64_t v27 = *(void **)(a2 + v25);
  *(void *)(a1 + v25) = v27;
  id v28 = *(void **)(a2 + v26);
  *(void *)(a1 + v26) = v28;
  uint64_t v29 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v42 = a1 + v29;
  uint64_t v41 = a2 + v29;
  uint64_t v30 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16);
  id v31 = v20;
  id v32 = v23;
  id v33 = v24;
  id v34 = v27;
  id v35 = v28;
  v40(v42, v41, v30);
  uint64_t v36 = a3[11];
  uint64_t v37 = *(void **)(a2 + v36);
  *(void *)(a1 + v36) = v37;
  id v38 = v37;
  return a1;
}

uint64_t sub_10033FEFC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  uint64_t v8 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v7;
  id v9 = v6;

  uint64_t v10 = (int *)type metadata accessor for ActivitySharingHighlight();
  uint64_t v11 = v10[5];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = v10[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = v10[7];
  uint64_t v20 = *(void **)(a2 + v19);
  uint64_t v21 = *(void **)(a1 + v19);
  *(void *)(a1 + v19) = v20;
  id v22 = v20;

  *(void *)(a1 + v10[8]) = *(void *)(a2 + v10[8]);
  uint64_t v23 = a3[5];
  uint64_t v24 = *(void **)(a2 + v23);
  uint64_t v25 = *(void **)(a1 + v23);
  *(void *)(a1 + v23) = v24;
  id v26 = v24;

  uint64_t v27 = a3[6];
  id v28 = *(void **)(a2 + v27);
  uint64_t v29 = *(void **)(a1 + v27);
  *(void *)(a1 + v27) = v28;
  id v30 = v28;

  uint64_t v31 = a3[7];
  id v32 = *(void **)(a2 + v31);
  id v33 = *(void **)(a1 + v31);
  *(void *)(a1 + v31) = v32;
  id v34 = v32;

  uint64_t v35 = a3[8];
  uint64_t v36 = *(void **)(a2 + v35);
  uint64_t v37 = *(void **)(a1 + v35);
  *(void *)(a1 + v35) = v36;
  id v38 = v36;

  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v39 = a3[10];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[11];
  id v44 = *(void **)(a2 + v43);
  id v45 = *(void **)(a1 + v43);
  *(void *)(a1 + v43) = v44;
  id v46 = v44;

  return a1;
}

uint64_t sub_1003400E0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = (int *)type metadata accessor for ActivitySharingHighlight();
  uint64_t v7 = v6[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = v6[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  *(void *)(a1 + v6[7]) = *(void *)(a2 + v6[7]);
  *(void *)(a1 + v6[8]) = *(void *)(a2 + v6[8]);
  uint64_t v15 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_100340264(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;

  uint64_t v8 = (int *)type metadata accessor for ActivitySharingHighlight();
  uint64_t v9 = v8[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = v8[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = v8[7];
  uint64_t v18 = *(void **)(a1 + v17);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);

  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  uint64_t v19 = a3[5];
  uint64_t v20 = *(void **)(a1 + v19);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);

  uint64_t v21 = a3[6];
  id v22 = *(void **)(a1 + v21);
  *(void *)(a1 + v21) = *(void *)(a2 + v21);

  uint64_t v23 = a3[7];
  uint64_t v24 = *(void **)(a1 + v23);
  *(void *)(a1 + v23) = *(void *)(a2 + v23);

  uint64_t v25 = a3[8];
  id v26 = *(void **)(a1 + v25);
  *(void *)(a1 + v25) = *(void *)(a2 + v25);

  uint64_t v27 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  id v32 = *(void **)(a1 + v31);
  *(void *)(a1 + v31) = *(void *)(a2 + v31);

  return a1;
}

uint64_t sub_100340428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10034043C);
}

uint64_t sub_10034043C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActivitySharingHighlight();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for FIUIRelativeDateTimeFormatter();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 40);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_100340568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10034057C);
}

uint64_t sub_10034057C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ActivitySharingHighlight();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for FIUIRelativeDateTimeFormatter();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 40);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ActivitySharingHighlightViewDisplayStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100340774);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivitySharingHighlightViewDisplayStyle()
{
  return &type metadata for ActivitySharingHighlightViewDisplayStyle;
}

unint64_t sub_1003407B0()
{
  unint64_t result = qword_100957D20;
  if (!qword_100957D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100957D20);
  }
  return result;
}

id sub_100340804()
{
  id result = sub_100340824();
  qword_100957C70 = (uint64_t)result;
  return result;
}

id sub_100340824()
{
  id v0 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle2];
  id v1 = [v0 fontDescriptorWithSymbolicTraits:0x8000];
  if (v1)
  {
    id v2 = v1;

    id v0 = v2;
  }
  id v3 = [v0 fontDescriptorWithDesign:UIFontDescriptorSystemDesignRounded];
  if (v3)
  {
    id v4 = v3;

    id v0 = v4;
  }
  id v5 = [self fontWithDescriptor:v0 size:0.0];

  return v5;
}

uint64_t sub_100340900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  return _swift_task_switch(sub_100340920, 0, 0);
}

uint64_t sub_100340920()
{
  id v2 = (id *)v0[2];
  uint64_t v1 = v0[3];
  type metadata accessor for ActivitySharingAvatarProvider();
  uint64_t v3 = type metadata accessor for ActivitySharingHighlight();
  *id v2 = sub_1005B6D30(*(void **)(v1 + *(int *)(v3 + 28)), 32.0);
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

id sub_1003409B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Font.Leading();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 8))
  {
    uint64_t v7 = *(void **)v1;
    if (*(unsigned char *)(v1 + 8) == 1)
    {
      id v8 = v7;
      [v8 _isStandalonePhoneSummary];
    }
    else
    {
      id v8 = v7;
      sub_1007194DC(v8);
    }
  }
  id v9 = [self mainBundle];
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v9 localizedStringForKey:v10 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRelease();

  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1007509E0;
  id result = [*(id *)(v1 + *(int *)(type metadata accessor for ActivitySharingHighlight() + 28)) displayName];
  if (result)
  {
    uint64_t v14 = result;
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;

    *(void *)(v12 + 56) = &type metadata for String;
    *(void *)(v12 + 64) = sub_1000AA64C();
    *(void *)(v12 + 32) = v15;
    *(void *)(v12 + 40) = v17;
    uint64_t v18 = String.init(format:_:)();
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    v35[2] = v18;
    v35[3] = v20;
    sub_1000A06D0();
    uint64_t v21 = Text.init<A>(_:)();
    uint64_t v23 = v22;
    LOBYTE(v20) = v24 & 1;
    static Font.body.getter();
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Font.Leading.tight(_:), v3);
    Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v25 = Text.font(_:)();
    uint64_t v27 = v26;
    LOBYTE(v15) = v28;
    swift_release();
    sub_1000A06C0(v21, v23, v20);
    swift_bridgeObjectRelease();
    static Color.primary.getter();
    uint64_t v29 = Text.foregroundColor(_:)();
    uint64_t v31 = v30;
    LOBYTE(v20) = v32;
    uint64_t v34 = v33;
    swift_release();
    sub_1000A06C0(v25, v27, v15 & 1);
    id result = (id)swift_bridgeObjectRelease();
    *(void *)a1 = v29;
    *(void *)(a1 + 8) = v31;
    *(unsigned char *)(a1 + 16) = v20 & 1;
    *(void *)(a1 + 24) = v34;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100340D98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v2 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v2 - 8);
  uint64_t v36 = type metadata accessor for AttributedString();
  uint64_t v3 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v8 = (char *)&v36 - v7;
  __chkstk_darwin(v9);
  id v11 = (char *)&v36 - v10;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  id v38 = (char *)&v36 - v17;
  Date.init()();
  uint64_t v18 = type metadata accessor for ActivitySharingHighlight();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v1 + *(int *)(v18 + 24), v12);
  int v19 = *(unsigned __int8 *)(v1 + 8);
  type metadata accessor for ActivitySharingHighlightViewModel();
  if (v19 == 2) {
    FIUIRelativeDateTimeFormatter.localizedString(for:relativeTo:)();
  }
  else {
    FIUIRelativeDateTimeFormatter.localizedDayString(for:)();
  }
  swift_bridgeObjectRetain();
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  swift_bridgeObjectRelease();
  uint64_t v20 = v8;
  uint64_t v21 = v36;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v11, v20, v36);
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  *(&v36 - 2) = v23;
  swift_getKeyPath();
  id v39 = [self secondaryLabelColor];
  sub_100346848();
  AttributedString.subscript.setter();
  uint64_t v24 = swift_getKeyPath();
  __chkstk_darwin(v24);
  *(&v36 - 2) = v25;
  swift_getKeyPath();
  id v39 = (id)static Font.caption2.getter();
  sub_1000AA6A0();
  AttributedString.subscript.setter();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v11, v21);
  uint64_t v26 = Text.init(_:)();
  uint64_t v28 = v27;
  char v30 = v29;
  uint64_t v32 = v31;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v21);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v13 + 8);
  v33(v15, v12);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v33)(v38, v12);
  uint64_t v35 = v37;
  uint64_t *v37 = v26;
  v35[1] = v28;
  *((unsigned char *)v35 + 16) = v30 & 1;
  v35[3] = v32;
  return result;
}

double sub_1003411AC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = *(void **)v1;
  if (!*(unsigned char *)(v1 + 8))
  {
    if (*(unsigned char *)(v1 + *(int *)(v6 + 36))) {
      double v10 = 100.0;
    }
    else {
      double v10 = 165.0;
    }
    id v11 = *(void **)(v1 + *(int *)(v6 + 20));
    id v12 = v8;
    if (objc_msgSend(v11, "thumbnailImageForAchievement:size:", v12, v10, v10)) {
      uint64_t v13 = Image.init(uiImage:)();
    }
    else {
      uint64_t v13 = 0;
    }
    *(void *)&long long v23 = v13;
    BYTE8(v23) = 0;
    swift_retain();
    sub_1000AFA94(&qword_100950278);
    sub_1000E086C();
    _ConditionalContent<>.init(storage:)();
    *(void *)&long long v23 = v27;
    *((void *)&v23 + 1) = BYTE8(v27);
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    char v26 = 0;
    j__swift_retain();
    sub_1000AFA94(&qword_100957DB8);
    sub_1000AFA94(&qword_100957DC0);
    sub_100346148();
    sub_1000A132C(&qword_100957DD0, &qword_100957DC0);
    _ConditionalContent<>.init(storage:)();

    j__swift_release();
    goto LABEL_12;
  }
  if (*(unsigned char *)(v1 + 8) == 1)
  {
    id v9 = v8;
    *(void *)&long long v23 = sub_10034167C((uint64_t)v9);
    BYTE8(v23) = 1;
    swift_retain();
    sub_1000AFA94(&qword_100950278);
    sub_1000E086C();
    _ConditionalContent<>.init(storage:)();
    *(void *)&long long v23 = v27;
    *((void *)&v23 + 1) = BYTE8(v27);
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    char v26 = 0;
    j__swift_retain();
    sub_1000AFA94(&qword_100957DB8);
    sub_1000AFA94(&qword_100957DC0);
    sub_100346148();
    sub_1000A132C(&qword_100957DD0, &qword_100957DC0);
    _ConditionalContent<>.init(storage:)();

    j__swift_release();
LABEL_12:
    swift_release();
    goto LABEL_13;
  }
  sub_10034637C(v1, (uint64_t)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ActivitySharingHighlightViewModel);
  unint64_t v14 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v8;
  sub_100345934((uint64_t)v7, v15 + v14);
  *(void *)&long long v27 = 0;
  BYTE8(v27) = 1;
  id v16 = v8;
  uint64_t v17 = AnyView.init<A>(_:)();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = &unk_100957DA0;
  *(void *)(v18 + 24) = v15;
  *(void *)&long long v23 = v17;
  State.init(wrappedValue:)();
  long long v23 = v27;
  uint64_t v24 = &unk_100957DB0;
  uint64_t v25 = v18;
  char v26 = 1;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000AFA94(&qword_100957DB8);
  sub_1000AFA94(&qword_100957DC0);
  sub_100346148();
  sub_1000A132C(&qword_100957DD0, &qword_100957DC0);
  _ConditionalContent<>.init(storage:)();
  swift_release();
  swift_release();
  swift_release();

LABEL_13:
  double result = *(double *)&v27;
  long long v20 = v28;
  char v21 = v29;
  *(_OWORD *)a1 = v27;
  *(_OWORD *)(a1 + 16) = v20;
  *(unsigned char *)(a1 + 32) = v21;
  return result;
}

uint64_t sub_10034167C(uint64_t a1)
{
  if (*(unsigned char *)(v1 + *(int *)(type metadata accessor for ActivitySharingHighlightViewModel() + 36))) {
    float v3 = 100.0;
  }
  else {
    float v3 = 165.0;
  }
  uint64_t v4 = self;
  [v4 preferredActivityRingThicknessForDiameter:v3];
  double v6 = v5;
  [v4 preferredActivityRingInterspacingForDiameter:v3];
  double v8 = v7;
  id v9 = [v4 activityRingGroupForRingType:3];
  id v10 = [v9 forCompanion];

  *(float *)&double v11 = v3;
  [v10 setGroupDiameter:v11];
  *(float *)&double v12 = v6;
  [v10 setThickness:v12];
  *(float *)&double v13 = v8;
  [v10 setInterspacing:v13];
  [v10 hk_configureWithActivitySummary:a1 animated:0];
  unint64_t v14 = self;
  if (qword_10094AE90 != -1) {
    swift_once();
  }
  id v15 = [v14 renderRingGroup:v10 withRenderer:qword_1009984F0];
  uint64_t v16 = Image.init(uiImage:)();

  return v16;
}

__n128 sub_100341820@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for AttributedString();
  __chkstk_darwin(v4);
  double v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = *(void **)v1;
  int v10 = *(unsigned __int8 *)(v1 + 8);
  if (*(unsigned char *)(v1 + 8))
  {
    uint64_t v39 = a1;
    if (v10 == 1)
    {
      uint64_t v31 = v6;
      uint64_t v32 = v5;
      id v37 = v9;
      [v37 _isStandalonePhoneSummary];
      double v11 = *(void **)(v1 + *(int *)(type metadata accessor for ActivitySharingHighlightViewModel() + 44));
      type metadata accessor for ActivitySharingHighlight();
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      id v13 = [v11 stringFromDate:isa];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      swift_bridgeObjectRetain();
      AttributeContainer.init()();
      AttributedString.init(_:attributes:)();
      swift_bridgeObjectRelease();
      uint64_t v14 = static HorizontalAlignment.center.getter();
      sub_100342F3C((uint64_t)v8, (uint64_t *)&v83);
      long long v15 = v83;
      char v16 = v84.n128_u8[0];
      unint64_t v17 = v84.n128_u64[1];
      long long v18 = v85;
      LODWORD(v38) = v86;
      uint64_t v30 = *((void *)&v86 + 1);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v32);
      long long v50 = (unint64_t)v14;
      v51[0] = 0;
      *(_OWORD *)&v51[8] = v15;
      uint64_t v33 = v15;
      unint64_t v34 = v17;
      uint64_t v35 = *((void *)&v15 + 1);
      uint64_t v36 = v18;
      v51[24] = v16;
      *(void *)uint64_t v52 = v17;
      *(_OWORD *)&v52[8] = v18;
      char v19 = (char)v38;
      v52[24] = (_BYTE)v38;
      *(void *)&long long v53 = v30;
      sub_100343304((uint64_t)&v50);
      sub_1000AEEC8((uint64_t)&v50, (uint64_t)&v83, &qword_100957D60);
      sub_1000A1750(v15, *((uint64_t *)&v15 + 1), v16);
      swift_bridgeObjectRetain();
      sub_1000A1750(v18, *((uint64_t *)&v18 + 1), v19);
      swift_bridgeObjectRetain();
      sub_1000AFA94(&qword_100957D50);
      sub_1000AFA94(&qword_1009539C8);
      sub_1000A132C(&qword_100957D48, &qword_100957D50);
      sub_1000A132C(&qword_1009539D8, &qword_1009539C8);
      _ConditionalContent<>.init(storage:)();
      long long v62 = v47;
      long long v63 = v48;
      long long v58 = v43;
      long long v59 = v44;
      long long v60 = v45;
      long long v61 = v46;
      long long v56 = v41;
      long long v57 = v42;
      long long v80 = v47;
      long long v81 = v48;
      long long v76 = v43;
      long long v77 = v44;
      long long v78 = v45;
      long long v79 = v46;
      char v64 = v49;
      char v82 = v49;
      long long v74 = v41;
      long long v75 = v42;
      sub_100343310((uint64_t)&v74);
      sub_1000AEEC8((uint64_t)&v74, (uint64_t)&v83, &qword_100957D28);
      sub_1003433E8((uint64_t)&v56, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_100343318);
      sub_1000AFA94(&qword_100957D30);
      sub_1000AFA94(&qword_100957D38);
      sub_100342A98();
      sub_1000A132C(&qword_100957D58, &qword_100957D38);
      _ConditionalContent<>.init(storage:)();

      sub_1003433E8((uint64_t)&v56, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_100343454);
      sub_1000A06C0(v33, v35, v16);
      swift_bridgeObjectRelease();
      sub_1000A06C0(v36, *((uint64_t *)&v18 + 1), (char)v38);
      swift_bridgeObjectRelease();
    }
    else
    {
      id v38 = v9;
      sub_10034240C(v38, (uint64_t)&v83);
      uint64_t v22 = v84.n128_i64[1];
      uint64_t v21 = v85;
      char v23 = BYTE8(v85);
      uint64_t v24 = *((void *)&v87 + 1);
      long long v74 = v83;
      LOBYTE(v75) = v84.n128_u8[0];
      *((void *)&v75 + 1) = v84.n128_u64[1];
      *(void *)&long long v76 = v85;
      BYTE8(v76) = BYTE8(v85);
      long long v77 = v86;
      uint64_t v36 = v88;
      unint64_t v34 = *((void *)&v86 + 1);
      id v37 = (id)v86;
      uint64_t v35 = v87;
      long long v78 = v87;
      *(void *)&long long v79 = v88;
      sub_100342A8C((uint64_t)&v74);
      sub_1000AEEC8((uint64_t)&v74, (uint64_t)&v83, &qword_100957D28);
      sub_1000A1750(v22, v21, v23);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_10008A670(v24);
      sub_1000AFA94(&qword_100957D30);
      sub_1000AFA94(&qword_100957D38);
      sub_100342A98();
      sub_1000A132C(&qword_100957D58, &qword_100957D38);
      _ConditionalContent<>.init(storage:)();

      sub_1000A06C0(v22, v21, v23);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_10005E5F8(v24);
    }
    long long v89 = v71;
    long long v90 = v72;
    __int16 v91 = v73;
    long long v85 = v67;
    long long v86 = v68;
    long long v87 = v69;
    long long v88 = v70;
    long long v83 = v65;
    __n128 v84 = v66;
    a1 = v39;
  }
  else
  {
    id v20 = v9;
    sub_100342134((uint64_t)v20, (uint64_t)v40);
    *(_OWORD *)&v52[16] = v40[4];
    long long v53 = v40[5];
    long long v54 = v40[6];
    long long v55 = v40[7];
    long long v50 = v40[0];
    *(_OWORD *)uint64_t v51 = v40[1];
    *(_OWORD *)&v51[16] = v40[2];
    *(_OWORD *)uint64_t v52 = v40[3];
    sub_100343524((uint64_t)&v50);
    sub_1000AEEC8((uint64_t)&v50, (uint64_t)&v83, &qword_100957D60);
    sub_10034352C((uint64_t)v40);
    sub_1000AFA94(&qword_100957D50);
    sub_1000AFA94(&qword_1009539C8);
    sub_1000A132C(&qword_100957D48, &qword_100957D50);
    sub_1000A132C(&qword_1009539D8, &qword_1009539C8);
    _ConditionalContent<>.init(storage:)();
    long long v62 = v47;
    long long v63 = v48;
    long long v58 = v43;
    long long v59 = v44;
    long long v60 = v45;
    long long v61 = v46;
    long long v56 = v41;
    long long v57 = v42;
    long long v80 = v47;
    long long v81 = v48;
    long long v76 = v43;
    long long v77 = v44;
    long long v78 = v45;
    long long v79 = v46;
    char v64 = v49;
    char v82 = v49;
    long long v74 = v41;
    long long v75 = v42;
    sub_100343310((uint64_t)&v74);
    sub_1000AEEC8((uint64_t)&v74, (uint64_t)&v83, &qword_100957D28);
    sub_1003433E8((uint64_t)&v56, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_100343318);
    sub_1000AFA94(&qword_100957D30);
    sub_1000AFA94(&qword_100957D38);
    sub_100342A98();
    sub_1000A132C(&qword_100957D58, &qword_100957D38);
    _ConditionalContent<>.init(storage:)();

    sub_1003433E8((uint64_t)&v56, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_100343454);
    sub_1003435BC((uint64_t)v40);
    long long v89 = v71;
    long long v90 = v72;
    __int16 v91 = v73;
    long long v85 = v67;
    long long v86 = v68;
    long long v87 = v69;
    long long v88 = v70;
    long long v83 = v65;
    __n128 v84 = v66;
  }
  long long v25 = v90;
  *(_OWORD *)(a1 + 96) = v89;
  *(_OWORD *)(a1 + 112) = v25;
  *(_WORD *)(a1 + 128) = v91;
  long long v26 = v86;
  *(_OWORD *)(a1 + 32) = v85;
  *(_OWORD *)(a1 + 48) = v26;
  long long v27 = v88;
  *(_OWORD *)(a1 + 64) = v87;
  *(_OWORD *)(a1 + 80) = v27;
  __n128 result = v84;
  *(_OWORD *)a1 = v83;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100342134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for AttributedString();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ActivitySharingHighlightViewModel();
  id v11 = [*(id *)(v2 + *(int *)(v10 + 24)) titleForAchievement:a1];
  if (v11)
  {
    double v12 = v11;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v15 = 0xE000000000000000;
  }
  char v16 = *(void **)(v2 + *(int *)(v10 + 44));
  type metadata accessor for ActivitySharingHighlight();
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v18 = [v16 stringFromDate:isa];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRetain();
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  swift_bridgeObjectRelease();
  uint64_t v19 = static HorizontalAlignment.center.getter();
  sub_100342B58(v13, v15, (uint64_t)v9, (uint64_t)&v35);
  swift_bridgeObjectRelease();
  char v20 = v36;
  uint64_t v21 = v38;
  char v22 = v39;
  uint64_t v23 = v40;
  char v24 = v41;
  char v25 = v43;
  uint64_t v26 = v44;
  long long v27 = v37;
  long long v28 = v35;
  long long v29 = v42;
  char v52 = 1;
  char v51 = v36;
  char v49 = v39;
  char v46 = v43;
  *(void *)a2 = v19;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(_DWORD *)(a2 + 17) = v35;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)((char *)&v35 + 3);
  *(_OWORD *)(a2 + 24) = v28;
  *(unsigned char *)(a2 + 40) = v20;
  int v30 = *(_DWORD *)v50;
  *(_DWORD *)(a2 + 44) = *(_DWORD *)&v50[3];
  *(_DWORD *)(a2 + 41) = v30;
  *(_OWORD *)(a2 + 48) = v27;
  *(void *)(a2 + 64) = v21;
  *(unsigned char *)(a2 + 72) = v22;
  int v31 = *(_DWORD *)v48;
  *(_DWORD *)(a2 + 76) = *(_DWORD *)&v48[3];
  *(_DWORD *)(a2 + 73) = v31;
  *(void *)(a2 + 80) = v23;
  *(unsigned char *)(a2 + 88) = v24;
  int v32 = *(_DWORD *)v47;
  *(_DWORD *)(a2 + 92) = *(_DWORD *)&v47[3];
  *(_DWORD *)(a2 + 89) = v32;
  *(_OWORD *)(a2 + 96) = v29;
  *(unsigned char *)(a2 + 112) = v25;
  int v33 = *(_DWORD *)v45;
  *(_DWORD *)(a2 + 116) = *(_DWORD *)&v45[3];
  *(_DWORD *)(a2 + 113) = v33;
  *(void *)(a2 + 120) = v26;
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

id sub_10034240C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v82 = a2;
  uint64_t v4 = type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v5 = v4 - 8;
  uint64_t v73 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v73 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = type metadata accessor for Font.Leading();
  uint64_t v80 = *(void *)(v7 - 8);
  uint64_t v81 = v7;
  __chkstk_darwin(v7);
  id v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AttributedString();
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)&double v12 = __chkstk_darwin(v10).n128_u64[0];
  uint64_t v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v85 = a1;
  id v15 = [a1 workoutActivityType:v12];
  id result = [*(id *)(v2 + *(int *)(v5 + 36)) unitManager];
  unint64_t v17 = result;
  uint64_t v83 = v11;
  uint64_t v84 = v10;
  uint64_t v75 = v2;
  uint64_t v76 = (uint64_t)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = v6;
  if (v15 == (id)84)
  {
    if (result)
    {
      if (qword_10094AB90 != -1) {
        swift_once();
      }
      id v18 = (id)qword_10095D110;
      [v85 duration];
      id v19 = [v18 stringFromTimeInterval:];

      if (v19)
      {
        char v20 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v22 = v21;

        uint64_t v23 = 0;
        uint64_t v24 = 0;
      }
      else
      {

        char v20 = 0;
        uint64_t v23 = 0;
        uint64_t v24 = 0;
        uint64_t v22 = 0xE000000000000000;
      }
      uint64_t v29 = 2;
      goto LABEL_11;
    }
    __break(1u);
LABEL_21:
    __break(1u);
    return result;
  }
  if (!result) {
    goto LABEL_21;
  }
  char v25 = v85;
  char v20 = (void *)sub_10045D3E4(v85, result);
  uint64_t v22 = v26;
  uint64_t v23 = v27;
  uint64_t v24 = v28;

  uint64_t v29 = (uint64_t)[v25 _goalType];
LABEL_11:
  id v30 = [self metricColorsForGoalTypeIdentifier:v29];
  id v31 = [v30 nonGradientTextColor];

  if (v24)
  {
    *(void *)&long long v86 = v23;
    *((void *)&v86 + 1) = v24;
    sub_1000A06D0();
    uint64_t v32 = StringProtocol.localizedUppercase.getter();
    uint64_t v34 = v33;
  }
  else
  {
    uint64_t v32 = 0;
    uint64_t v34 = 0xE000000000000000;
  }
  uint64_t v78 = v24;
  if (qword_10094A9E8 != -1) {
    swift_once();
  }
  long long v79 = v14;
  id v77 = v31;
  sub_100524B5C(v20, v22, v32, v34, (void *)qword_100957C70, v31, (uint64_t)v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v35 = self;
  char v36 = v85;
  id v37 = [v35 activityTypeWithWorkout:v85];
  id v38 = [v37 localizedName];

  uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v41 = v40;

  *(void *)&long long v86 = v39;
  *((void *)&v86 + 1) = v41;
  sub_1000A06D0();
  uint64_t v42 = Text.init<A>(_:)();
  uint64_t v44 = v43;
  char v46 = v45 & 1;
  static Font.subheadline.getter();
  uint64_t v48 = v80;
  uint64_t v47 = v81;
  (*(void (**)(char *, void, uint64_t))(v80 + 104))(v9, enum case for Font.Leading.tight(_:), v81);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v9, v47);
  uint64_t v49 = Text.font(_:)();
  uint64_t v51 = v50;
  char v53 = v52;
  uint64_t v55 = v54;
  swift_release();
  sub_1000A06C0(v42, v44, v46);
  swift_bridgeObjectRelease();
  id v56 = v36;
  LOBYTE(v42) = sub_1007194DC(v56);

  if (v42)
  {
    uint64_t v57 = v76;
    sub_10034637C(v75, v76, (uint64_t (*)(void))type metadata accessor for ActivitySharingHighlightViewModel);
    unint64_t v58 = (*(unsigned __int8 *)(v73 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
    unint64_t v59 = (v74 + v58 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v60 = swift_allocObject();
    sub_100345934(v57, v60 + v58);
    *(void *)(v60 + v59) = v56;
    id v61 = v56;
    long long v62 = &unk_100957D70;
  }
  else
  {
    long long v62 = 0;
    uint64_t v60 = 0;
  }
  uint64_t v63 = v84;
  uint64_t v64 = v82;
  char v65 = v53 & 1;
  uint64_t v66 = static HorizontalAlignment.center.getter();
  uint64_t v67 = (uint64_t)v79;
  sub_10034364C((uint64_t)v79, v49, v51, v65, v55, (uint64_t)v62, v60, (uint64_t)&v86);
  char v68 = v87;
  uint64_t v69 = v90;
  long long v70 = v88;
  long long v71 = v86;
  long long v72 = v89;
  *(void *)uint64_t v64 = v66;
  *(void *)(v64 + 8) = 0;
  *(unsigned char *)(v64 + 16) = 1;
  *(_OWORD *)(v64 + 24) = v71;
  *(unsigned char *)(v64 + 40) = v68;
  *(_OWORD *)(v64 + 48) = v70;
  *(_OWORD *)(v64 + 64) = v72;
  *(void *)(v64 + 80) = v69;
  sub_1000A06C0(v49, v51, v65);
  swift_bridgeObjectRelease();
  sub_10005E5F8((uint64_t)v62);

  (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v67, v63);
  return (id)swift_bridgeObjectRelease();
}

uint64_t sub_100342A8C(uint64_t result)
{
  *(unsigned char *)(result + 129) = 1;
  return result;
}

unint64_t sub_100342A98()
{
  unint64_t result = qword_100957D40;
  if (!qword_100957D40)
  {
    sub_1000A1370(&qword_100957D30);
    sub_1000A132C(&qword_100957D48, &qword_100957D50);
    sub_1000A132C(&qword_1009539D8, &qword_1009539C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100957D40);
  }
  return result;
}

uint64_t sub_100342B58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v54 = a3;
  uint64_t v7 = type metadata accessor for AttributedString();
  uint64_t v52 = *(void *)(v7 - 8);
  uint64_t v53 = v7;
  __chkstk_darwin(v7);
  uint64_t v51 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Font.Leading();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  double v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = a1;
  uint64_t v56 = a2;
  sub_1000A06D0();
  swift_bridgeObjectRetain();
  uint64_t v13 = Text.init<A>(_:)();
  uint64_t v15 = v14;
  LOBYTE(a2) = v16 & 1;
  static Font.subheadline.getter();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for Font.Leading.tight(_:), v9);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v17 = Text.font(_:)();
  uint64_t v48 = v18;
  uint64_t v49 = v17;
  LOBYTE(v9) = v19;
  uint64_t v50 = v20;
  swift_release();
  int v47 = v9 & 1;
  sub_1000A06C0(v13, v15, a2);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v45 = swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v51, v54, v53);
  uint64_t v21 = Text.init(_:)();
  uint64_t v23 = v22;
  char v25 = v24 & 1;
  LODWORD(v55) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v26 = Text.foregroundStyle<A>(_:)();
  uint64_t v28 = v27;
  char v30 = v29 & 1;
  sub_1000A06C0(v21, v23, v25);
  swift_bridgeObjectRelease();
  static Font.footnote.getter();
  uint64_t v31 = Text.font(_:)();
  uint64_t v33 = v32;
  LOBYTE(v23) = v34;
  uint64_t v36 = v35;
  swift_release();
  sub_1000A06C0(v26, v28, v30);
  swift_bridgeObjectRelease();
  char v37 = v47;
  LOBYTE(v55) = v47;
  uint64_t v39 = v48;
  uint64_t v38 = v49;
  *(void *)a4 = v49;
  *(void *)(a4 + 8) = v39;
  *(unsigned char *)(a4 + 16) = v37;
  uint64_t v41 = v45;
  uint64_t v40 = KeyPath;
  *(void *)(a4 + 24) = v50;
  *(void *)(a4 + 32) = v40;
  *(void *)(a4 + 40) = 2;
  *(unsigned char *)(a4 + 48) = 0;
  *(void *)(a4 + 56) = v41;
  *(unsigned char *)(a4 + 64) = 1;
  *(void *)(a4 + 72) = v31;
  *(void *)(a4 + 80) = v33;
  *(unsigned char *)(a4 + 88) = v23 & 1;
  *(void *)(a4 + 96) = v36;
  uint64_t v42 = v38;
  sub_1000A1750(v38, v39, v37);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1000A1750(v31, v33, v23 & 1);
  swift_bridgeObjectRetain();
  sub_1000A06C0(v31, v33, v23 & 1);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v42, v39, v55);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100342F3C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v45 = a2;
  uint64_t v43 = type metadata accessor for AttributedString();
  uint64_t v2 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v42 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Font.Leading();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v8 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  static Font.subheadline.getter();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Font.Leading.tight(_:), v4);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v13 = Text.font(_:)();
  uint64_t v40 = v14;
  uint64_t v41 = v13;
  uint64_t v39 = v15;
  LOBYTE(v5) = v16;
  swift_release();
  char v17 = v5 & 1;
  sub_1000A06C0(v8, v10, v12);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v42, v44, v43);
  uint64_t v18 = Text.init(_:)();
  uint64_t v20 = v19;
  LOBYTE(v8) = v21 & 1;
  int v47 = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v22 = Text.foregroundStyle<A>(_:)();
  uint64_t v24 = v23;
  char v26 = v25 & 1;
  sub_1000A06C0(v18, v20, v8);
  swift_bridgeObjectRelease();
  static Font.footnote.getter();
  uint64_t v27 = Text.font(_:)();
  uint64_t v29 = v28;
  LOBYTE(v8) = v30;
  uint64_t v32 = v31;
  swift_release();
  sub_1000A06C0(v22, v24, v26);
  swift_bridgeObjectRelease();
  char v46 = v17;
  uint64_t v33 = v45;
  uint64_t v34 = v40;
  uint64_t v35 = v41;
  uint64_t v36 = v39;
  uint64_t *v45 = v41;
  v33[1] = v36;
  *((unsigned char *)v33 + 16) = v17;
  v33[3] = v34;
  v33[4] = v27;
  v33[5] = v29;
  *((unsigned char *)v33 + 48) = v8 & 1;
  v33[7] = v32;
  sub_1000A1750(v35, v36, v17);
  swift_bridgeObjectRetain();
  sub_1000A1750(v27, v29, v8 & 1);
  swift_bridgeObjectRetain();
  sub_1000A06C0(v27, v29, v8 & 1);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v35, v36, v46);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100343304(uint64_t result)
{
  *(unsigned char *)(result + 128) = 1;
  return result;
}

uint64_t sub_100343310(uint64_t result)
{
  *(unsigned char *)(result + 129) = 0;
  return result;
}

uint64_t sub_100343318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, char a17)
{
  sub_1000A1750(a4, a5, a6 & 1);
  swift_bridgeObjectRetain();
  if (a17)
  {
    sub_1000A1750(a8, a9, a10 & 1);
  }
  else
  {
    swift_retain();
    swift_retain();
    sub_1000A1750(a13, a14, a15 & 1);
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1003433E8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 128);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), v4);
  return a1;
}

uint64_t sub_100343454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, char a17)
{
  sub_1000A06C0(a4, a5, a6 & 1);
  if (a17)
  {
    swift_bridgeObjectRelease();
    sub_1000A06C0(a8, a9, a10 & 1);
  }
  else
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000A06C0(a13, a14, a15 & 1);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100343524(uint64_t result)
{
  *(unsigned char *)(result + 128) = 0;
  return result;
}

uint64_t sub_10034352C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 104);
  char v4 = *(unsigned char *)(a1 + 112);
  sub_1000A1750(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1000A1750(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1003435BC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 104);
  char v4 = *(unsigned char *)(a1 + 112);
  sub_1000A06C0(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000A06C0(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10034364C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  v34[0] = a7;
  uint64_t v15 = type metadata accessor for AttributedString();
  __n128 v16 = __chkstk_darwin(v15);
  (*(void (**)(char *, uint64_t, __n128))(v18 + 16))((char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v16);
  uint64_t v19 = Text.init(_:)();
  uint64_t v21 = v20;
  char v23 = v22;
  uint64_t v25 = v24;
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  a4 &= 1u;
  char v37 = a4;
  uint64_t v38 = a5;
  swift_bridgeObjectRetain();
  sub_1000A1750(a2, a3, a4);
  uint64_t v26 = AnyView.init<A>(_:)();
  if (a6)
  {
    uint64_t v27 = swift_allocObject();
    uint64_t v28 = v34[0];
    *(void *)(v27 + 16) = a6;
    *(void *)(v27 + 24) = v28;
    uint64_t v29 = &unk_100957D90;
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v27 = 0;
  }
  char v30 = v23 & 1;
  v34[1] = v26;
  sub_10008A670(a6);
  State.init(wrappedValue:)();
  uint64_t v31 = v35;
  uint64_t v32 = v36;
  *(void *)a8 = v19;
  *(void *)(a8 + 8) = v21;
  *(unsigned char *)(a8 + 16) = v30;
  *(void *)(a8 + 24) = v25;
  *(void *)(a8 + 32) = v31;
  *(void *)(a8 + 40) = v32;
  *(void *)(a8 + 48) = v29;
  *(void *)(a8 + 56) = v27;
  sub_1000A1750(v19, v21, v30);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10008A670((uint64_t)v29);
  swift_release();
  swift_release();
  sub_10005E5F8((uint64_t)v29);
  sub_1000A06C0(v19, v21, v30);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100343888(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_100343958;
  return v5();
}

uint64_t sub_100343958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void **)(*v4 + 16);
  uint64_t v12 = *v4;
  swift_task_dealloc();
  *uint64_t v9 = a1;
  v9[1] = a2;
  v9[2] = a3;
  v9[3] = a4;
  uint64_t v10 = *(uint64_t (**)(void))(v12 + 8);
  return v10();
}

uint64_t sub_100343A88(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return _swift_task_switch(sub_100343AA8, 0, 0);
}

uint64_t sub_100343AA8()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 48);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  uint64_t v3 = sub_1000AFA94(&qword_100957D78);
  *uint64_t v2 = v0;
  v2[1] = sub_100343BAC;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD00000000000003ALL, 0x80000001007C19F0, sub_100345BC4, v1, v3);
}

uint64_t sub_100343BAC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_100343CC4, 0, 0);
}

uint64_t sub_100343CC4()
{
  return (*(uint64_t (**)(void, void, void, void))(v0 + 8))(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100343CE0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_100957D80);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = *(char **)(a2 + *(int *)(type metadata accessor for ActivitySharingHighlightViewModel() + 32));
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  id v12 = a3;
  sub_1001B173C(v12, (void (*)(void))sub_100345BD8, v11, v9);

  return swift_release();
}

uint64_t sub_100343E44(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Font.Leading();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = __chkstk_darwin(v2).n128_u64[0];
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v7 = [*(id *)(a1 + OBJC_IVAR___CHCatalogItemViewModel_title) string:v4];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    *(void *)&long long v25 = v8;
    *((void *)&v25 + 1) = v10;
    sub_1000A06D0();
    uint64_t v11 = Text.init<A>(_:)();
    uint64_t v13 = v12;
    char v15 = v14 & 1;
    static Font.subheadline.getter();
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for Font.Leading.tight(_:), v2);
    Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    uint64_t v16 = Text.font(_:)();
    uint64_t v18 = v17;
    char v20 = v19;
    uint64_t v22 = v21;
    swift_release();
    sub_1000A06C0(v11, v13, v15);
    swift_bridgeObjectRelease();
    *(void *)&long long v25 = v16;
    *((void *)&v25 + 1) = v18;
    *(void *)&long long v26 = v20 & 1;
    *((void *)&v26 + 1) = v22;
  }
  else
  {
    long long v25 = 0u;
    long long v26 = 0u;
  }
  sub_1000AFA94(&qword_100957D80);
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_100344048(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_100344118;
  return v5();
}

uint64_t sub_100344118(uint64_t a1)
{
  uint64_t v3 = *(void **)(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();
  *uint64_t v3 = a1;
  double v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t sub_100344228(uint64_t a1, uint64_t a2)
{
  v2[15] = a1;
  v2[16] = a2;
  uint64_t v3 = type metadata accessor for ActivitySharingHighlightViewModel();
  v2[17] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[18] = v4;
  v2[19] = *(void *)(v4 + 64);
  v2[20] = swift_task_alloc();
  v2[21] = sub_1000AFA94(&qword_100957DD8);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = sub_1000AFA94(&qword_10094E460);
  v2[25] = swift_task_alloc();
  v2[26] = type metadata accessor for RoundedRectangle();
  v2[27] = swift_task_alloc();
  v2[28] = sub_1000AFA94(&qword_100950CB0);
  v2[29] = swift_task_alloc();
  sub_1000AFA94(&qword_100957DE0);
  v2[30] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Image.ResizingMode();
  v2[31] = v5;
  v2[32] = *(void *)(v5 - 8);
  v2[33] = swift_task_alloc();
  return _swift_task_switch(sub_100344458, 0, 0);
}

uint64_t sub_100344458()
{
  uint64_t v83 = v0;
  id v1 = sub_1004A4E6C(*(id *)(v0 + 120));
  id v2 = [v1 nonGradientTextColor];

  if (v2)
  {
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v6 = *(void *)(v0 + 136);
    uint64_t v8 = *(void **)(v0 + 120);
    uint64_t v9 = Color.init(uiColor:)();
    *(void *)(v0 + 272) = v9;
    uint64_t v69 = *(int *)(v6 + 36);
    uint64_t v70 = v7;
    uint64_t v10 = 1;
    if (*(unsigned char *)(v7 + v69)) {
      unsigned __int8 v11 = 2;
    }
    else {
      unsigned __int8 v11 = 1;
    }
    uint64_t v12 = sub_10045D83C(v8, v11);
    uint64_t v14 = v13;
    *(void *)(v0 + 280) = v12;
    *(void *)(v0 + 288) = v13;
    long long v72 = v15;
    *(void *)(v0 + 296) = v15;
    if (v12)
    {
      id v16 = v12;
      uint64_t v12 = (void *)Image.init(uiImage:)();
      uint64_t v10 = 2;
    }
    uint64_t v79 = (uint64_t)v12;
    *(void *)(v0 + 304) = v12;
    if (v14)
    {
      uint64_t v18 = *(void *)(v0 + 256);
      uint64_t v17 = *(void *)(v0 + 264);
      uint64_t v19 = *(void *)(v0 + 248);
      id v20 = [(id)v14 imageWithRenderingMode:v10];
      Image.init(uiImage:)();
      (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, enum case for Image.ResizingMode.stretch(_:), v19);
      uint64_t v21 = Image.resizable(capInsets:resizingMode:)();
      swift_release();
      uint64_t v22 = v19;
      uint64_t v23 = v9;
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v22);
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v24 = *(void *)(v0 + 16);
      uint64_t v14 = *(unsigned __int8 *)(v0 + 24);
      uint64_t v25 = *(void *)(v0 + 32);
      uint64_t v26 = *(unsigned __int8 *)(v0 + 40);
      uint64_t v27 = *(void *)(v0 + 48);
      uint64_t v28 = *(void *)(v0 + 56);
      uint64_t KeyPath = swift_getKeyPath();
      swift_retain();
    }
    else
    {
      uint64_t v21 = 0;
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t KeyPath = 0;
      uint64_t v23 = 0;
    }
    *(void *)(v0 + 368) = KeyPath;
    *(void *)(v0 + 376) = v23;
    uint64_t v74 = KeyPath;
    uint64_t v75 = v28;
    *(void *)(v0 + 352) = v27;
    *(void *)(v0 + 360) = v28;
    uint64_t v76 = v27;
    uint64_t v77 = v26;
    *(void *)(v0 + 336) = v25;
    *(void *)(v0 + 344) = v26;
    *(void *)(v0 + 320) = v24;
    *(void *)(v0 + 328) = v14;
    uint64_t v78 = v21;
    *(void *)(v0 + 312) = v21;
    uint64_t v30 = *(void *)(v0 + 240);
    uint64_t v80 = v23;
    uint64_t v81 = v25;
    if (v72)
    {
      uint64_t v31 = *(uint64_t **)(v0 + 232);
      uint64_t v33 = *(void *)(v0 + 208);
      uint64_t v32 = *(double **)(v0 + 216);
      uint64_t v34 = *(void *)(v0 + 200);
      uint64_t v67 = *(void *)(v0 + 192);
      uint64_t v68 = *(void *)(v0 + 224);
      int v35 = *(unsigned __int8 *)(v70 + v69);
      id v36 = v72;
      uint64_t v37 = Image.init(uiImage:)();
      if (v35) {
        double v38 = 35.0;
      }
      else {
        double v38 = 60.0;
      }
      if (v35) {
        double v39 = 7.0;
      }
      else {
        double v39 = 14.0;
      }
      uint64_t v40 = (char *)v32 + *(int *)(v33 + 20);
      uint64_t v41 = enum case for RoundedCornerStyle.continuous(_:);
      uint64_t v42 = type metadata accessor for RoundedCornerStyle();
      uint64_t v43 = v41;
      uint64_t v25 = v81;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 104))(v40, v43, v42);
      double *v32 = v39;
      v32[1] = v39;
      sub_10034637C((uint64_t)v32, v34, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
      *(_WORD *)(v34 + *(int *)(v67 + 36)) = 256;
      sub_1000AEF2C(v34, (uint64_t)v31 + *(int *)(v68 + 36), &qword_10094E460);
      *uint64_t v31 = v37;
      swift_retain();
      sub_10008DB18(v34, &qword_10094E460);
      sub_1002854A8((uint64_t)v32);
      swift_release();
      sub_1000AEF2C((uint64_t)v31, v30, &qword_100950CB0);
      uint64_t v44 = sub_1000AFA94(&qword_100957DE8);
      uint64_t v45 = (double *)(v30 + *(int *)(v44 + 36));
      double *v45 = v38;
      v45[1] = v38;
      sub_10008DB18((uint64_t)v31, &qword_100950CB0);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v30, 0, 1, v44);
    }
    else
    {
      uint64_t v46 = sub_1000AFA94(&qword_100957DE8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v30, 1, 1, v46);
    }
    int v47 = *(uint64_t **)(v0 + 184);
    uint64_t v71 = *(void *)(v0 + 240);
    uint64_t v73 = *(void **)(v0 + 120);
    v82[0] = v78;
    v82[1] = v24;
    v82[2] = v14;
    v82[3] = v25;
    v82[4] = v77;
    v82[5] = v76;
    v82[6] = v75;
    v82[7] = v74;
    v82[8] = v80;
    sub_1003461CC(v78);
    *int v47 = static Alignment.center.getter();
    v47[1] = v48;
    uint64_t v49 = sub_1000AFA94(&qword_100957DF0);
    sub_100344DC4(v79, v82, v71, (uint64_t *)((char *)v47 + *(int *)(v49 + 44)));
    sub_10034621C(v78);
    id v50 = v73;
    char v51 = sub_1007194DC(v50);

    if (v51)
    {
      uint64_t v52 = *(void *)(v0 + 152);
      uint64_t v53 = *(void *)(v0 + 160);
      uint64_t v54 = *(void *)(v0 + 144);
      uint64_t v55 = *(void **)(v0 + 120);
      sub_10034637C(*(void *)(v0 + 128), v53, (uint64_t (*)(void))type metadata accessor for ActivitySharingHighlightViewModel);
      unint64_t v56 = (*(unsigned __int8 *)(v54 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
      unint64_t v57 = (v52 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v58 = swift_allocObject();
      sub_100345934(v53, v58 + v56);
      *(void *)(v58 + v57) = v55;
      id v59 = v55;
      uint64_t v60 = &unk_100957E10;
    }
    else
    {
      uint64_t v60 = 0;
      uint64_t v58 = 0;
    }
    *(void *)(v0 + 384) = v60;
    *(void *)(v0 + 392) = v58;
    sub_1000AEF2C(*(void *)(v0 + 184), *(void *)(v0 + 176), &qword_100957DD8);
    sub_1000A132C(&qword_100957DF8, &qword_100957DD8);
    *(void *)(v0 + 400) = AnyView.init<A>(_:)();
    if (v51)
    {
      uint64_t v61 = swift_allocObject();
      *(void *)(v61 + 16) = v60;
      *(void *)(v61 + 24) = v58;
      long long v62 = &unk_100957E00;
    }
    else
    {
      long long v62 = 0;
      uint64_t v61 = 0;
    }
    *(void *)(v0 + 408) = v62;
    *(void *)(v0 + 416) = v61;
    type metadata accessor for MainActor();
    sub_10008A670((uint64_t)v60);
    *(void *)(v0 + 424) = static MainActor.shared.getter();
    uint64_t v63 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v65 = v64;
    uint64_t v3 = sub_100344AC8;
    uint64_t v4 = v63;
    uint64_t v5 = v65;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_100344AC8()
{
  uint64_t v1 = v0[50];
  swift_release();
  v0[14] = v1;
  State.init(wrappedValue:)();
  uint64_t v2 = v0[13];
  v0[54] = v0[12];
  v0[55] = v2;
  return _swift_task_switch(sub_100344B58, 0, 0);
}

uint64_t sub_100344B58()
{
  uint64_t v1 = v0[55];
  uint64_t v3 = v0[51];
  uint64_t v2 = v0[52];
  uint64_t v8 = v0[48];
  uint64_t v7 = v0[39];
  uint64_t v9 = (void *)v0[37];
  unsigned __int8 v11 = (void *)v0[36];
  uint64_t v12 = (void *)v0[35];
  uint64_t v13 = v0[30];
  uint64_t v10 = v0[23];
  v0[8] = v0[54];
  v0[9] = v1;
  v0[10] = v3;
  v0[11] = v2;
  swift_retain();
  swift_retain();
  sub_10008A670(v3);
  sub_1000AFA94(&qword_100957DC0);
  sub_1000A132C(&qword_100957DD0, &qword_100957DC0);
  uint64_t v4 = AnyView.init<A>(_:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10005E5F8(v3);
  sub_10005E5F8(v8);
  sub_10034621C(v7);

  sub_10008DB18(v10, &qword_100957DD8);
  sub_10008DB18(v13, &qword_100957DE0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_100344DC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v7 = sub_1000AFA94(&qword_100957DE0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = v9;
  __chkstk_darwin(v10);
  uint64_t v11 = *a2;
  uint64_t v12 = a2[1];
  uint64_t v13 = a2[2];
  uint64_t v14 = a2[3];
  uint64_t v28 = (uint64_t)&v24 - v15;
  uint64_t v29 = v13;
  uint64_t v16 = a2[4];
  uint64_t v26 = a2[5];
  uint64_t v27 = v12;
  uint64_t v17 = a2[6];
  uint64_t v25 = a2[7];
  uint64_t v18 = a2[8];
  uint64_t v19 = (char *)&v24 - v15;
  sub_1000AEF2C(a3, (uint64_t)&v24 - v15, &qword_100957DE0);
  sub_1000AEF2C((uint64_t)v19, (uint64_t)v9, &qword_100957DE0);
  *a4 = v31;
  a4[1] = v11;
  uint64_t v20 = v29;
  a4[2] = v12;
  a4[3] = v20;
  a4[4] = v14;
  a4[5] = v16;
  uint64_t v21 = v25;
  a4[6] = v26;
  a4[7] = v17;
  a4[8] = v21;
  a4[9] = v18;
  uint64_t v22 = sub_1000AFA94(&qword_100957E38);
  sub_1000AEF2C((uint64_t)v30, (uint64_t)a4 + *(int *)(v22 + 64), &qword_100957DE0);
  swift_retain();
  sub_1003461CC(v11);
  swift_retain();
  sub_1003461CC(v11);
  sub_10008DB18(v28, &qword_100957DE0);
  sub_10008DB18((uint64_t)v30, &qword_100957DE0);
  sub_10034621C(v11);
  return swift_release();
}

uint64_t sub_100344FE4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return _swift_task_switch(sub_100345004, 0, 0);
}

uint64_t sub_100345004()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = sub_1000AFA94(&qword_100957E18);
  *uint64_t v2 = v0;
  v2[1] = sub_100345108;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000038, 0x80000001007C1A30, sub_1003463EC, v1, v3);
}

uint64_t sub_100345108()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_100345220, 0, 0);
}

uint64_t sub_100345220()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_100345238(uint64_t a1, uint64_t a2, void *a3)
{
  id v20 = a3;
  uint64_t v5 = type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v6 = v5 - 8;
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v5);
  uint64_t v9 = sub_1000AFA94(&qword_100957E20);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __n128 v12 = __chkstk_darwin(v9);
  uint64_t v13 = *(char **)(a2 + *(int *)(v6 + 40));
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9, v12);
  sub_10034637C(a2, (uint64_t)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ActivitySharingHighlightViewModel);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v15 = (v11 + *(unsigned __int8 *)(v7 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v14, (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  sub_100345934((uint64_t)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  id v17 = v20;
  sub_1001B173C(v17, (void (*)(void))sub_100346644, v16, v13);

  return swift_release();
}

void sub_100345458(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100957E20);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  if (a1)
  {
    type metadata accessor for ActivitySharingHighlightViewModel();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
    unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v8 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    id v9 = a1;
    sub_100485D1C(v9, (uint64_t)sub_100346728, v8);
    swift_release();
  }
  else
  {
    CheckedContinuation.resume(returning:)();
  }
}

uint64_t sub_100345618(void *a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094E460);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v5);
  unint64_t v7 = (_OWORD *)((char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1000AFA94(&qword_100957E28);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (void *)((char *)v27 - v12);
  if (a1)
  {
    id v14 = a1;
    uint64_t v15 = Image.init(uiImage:)();
    uint64_t v16 = (char *)v7 + *(int *)(v5 + 20);
    uint64_t v17 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v18 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v16, v17, v18);
    __asm { FMOV            V0.2D, #8.0 }
    *unint64_t v7 = _Q0;
    sub_10034637C((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    *(_WORD *)&v4[*(int *)(v2 + 36)] = 256;
    uint64_t v24 = sub_1000AFA94(&qword_100950CB0);
    sub_1000AEF2C((uint64_t)v4, (uint64_t)v13 + *(int *)(v24 + 36), &qword_10094E460);
    uint64_t *v13 = v15;
    swift_retain();
    sub_10008DB18((uint64_t)v4, &qword_10094E460);
    sub_1002854A8((uint64_t)v7);
    swift_release();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v13, 0, 1, v24);
  }
  else
  {
    uint64_t v25 = sub_1000AFA94(&qword_100950CB0);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v13, 1, 1, v25);
  }
  sub_1000AEF2C((uint64_t)v13, (uint64_t)v10, &qword_100957E28);
  sub_1003467CC();
  v27[1] = AnyView.init<A>(_:)();
  sub_1000AFA94(&qword_100957E20);
  CheckedContinuation.resume(returning:)();
  return sub_10008DB18((uint64_t)v13, &qword_100957E28);
}

uint64_t sub_100345934(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActivitySharingHighlightViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100345998()
{
  uint64_t v2 = *(void *)(type metadata accessor for ActivitySharingHighlightViewModel() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_100345AA8;
  void v6[6] = v4;
  v6[7] = v5;
  return _swift_task_switch(sub_100343AA8, 0, 0);
}

uint64_t sub_100345AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = *v4;
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8);
  return v9(a1, a2, a3, a4);
}

uint64_t sub_100345BC4(uint64_t a1)
{
  return sub_100343CE0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100345BCC()
{
  return sub_100076F58(&qword_100957D80);
}

uint64_t sub_100345BD8(uint64_t a1)
{
  return sub_100346748(a1, &qword_100957D80, (uint64_t (*)(uint64_t, uint64_t))sub_100343E44);
}

uint64_t sub_100345BF8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100345C30(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10005DB5C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100957D88 + dword_100957D88);
  return v6(a1, v4);
}

uint64_t sub_100345CE8()
{
  uint64_t v1 = (int *)(type metadata accessor for ActivitySharingHighlightViewModel() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);

  uint64_t v3 = v0 + v2;
  uint64_t v4 = (int *)type metadata accessor for ActivitySharingHighlight();
  uint64_t v5 = v3 + v4[5];
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v3 + v4[6];
  uint64_t v8 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  uint64_t v9 = v3 + v1[12];
  uint64_t v10 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  return swift_deallocObject();
}

uint64_t sub_100345EC0()
{
  uint64_t v2 = *(void *)(type metadata accessor for ActivitySharingHighlightViewModel() - 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100345F94;
  return sub_100344228(v3, v4);
}

uint64_t sub_100345F94(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_100346090(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000DBD6C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100957DA8 + dword_100957DA8);
  return v6(a1, v4);
}

unint64_t sub_100346148()
{
  unint64_t result = qword_100957DC8;
  if (!qword_100957DC8)
  {
    sub_1000A1370(&qword_100957DB8);
    sub_1000E086C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100957DC8);
  }
  return result;
}

uint64_t sub_1003461CC(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10034621C(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10034626C()
{
  uint64_t v2 = *(void *)(type metadata accessor for ActivitySharingHighlightViewModel() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1003468FC;
  v6[3] = v4;
  v6[4] = v5;
  return _swift_task_switch(sub_100345004, 0, 0);
}

uint64_t sub_10034637C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003463EC(uint64_t a1)
{
  return sub_100345238(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1003463F4()
{
  uint64_t v1 = sub_1000AFA94(&qword_100957E20);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = (int *)(type metadata accessor for ActivitySharingHighlightViewModel() - 8);
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(*(void *)v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  uint64_t v7 = (int *)type metadata accessor for ActivitySharingHighlight();
  unint64_t v8 = v0 + v6 + v7[5];
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  unint64_t v10 = v0 + v6 + v7[6];
  uint64_t v11 = type metadata accessor for Date();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);

  unint64_t v12 = v0 + v6 + v5[12];
  uint64_t v13 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);

  return swift_deallocObject();
}

void sub_100346644(void *a1)
{
  uint64_t v3 = *(void *)(sub_1000AFA94(&qword_100957E20) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  type metadata accessor for ActivitySharingHighlightViewModel();

  sub_100345458(a1, v1 + v4);
}

uint64_t sub_10034671C()
{
  return sub_100076F58(&qword_100957E20);
}

uint64_t sub_100346728(uint64_t a1)
{
  return sub_100346748(a1, &qword_100957E20, (uint64_t (*)(uint64_t, uint64_t))sub_100345618);
}

uint64_t sub_100346748(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(sub_1000AFA94(a2) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a3(a1, v6);
}

unint64_t sub_1003467CC()
{
  unint64_t result = qword_100957E30;
  if (!qword_100957E30)
  {
    sub_1000A1370(&qword_100957E28);
    sub_10022D7C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100957E30);
  }
  return result;
}

unint64_t sub_100346848()
{
  unint64_t result = qword_100957E40;
  if (!qword_100957E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100957E40);
  }
  return result;
}

uint64_t sub_1003468A0()
{
  return 8;
}

uint64_t sub_1003468AC()
{
  return swift_release();
}

uint64_t sub_1003468B4(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1003468C8(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1003468E0()
{
  return 8;
}

id sub_10034690C(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 6:
    case 7:
    case 9:
    case 10:
    case 13:
    case 14:
      unint64_t result = result;
      break;
    case 5:
      goto LABEL_6;
    case 8:
    case 11:
    case 12:
    case 15:
      id v5 = result;
LABEL_6:
      unint64_t result = (id)swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

void destroy for ActivitySharingFriendDetailAlertType(uint64_t a1)
{
}

void sub_100346A08(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 6:
    case 7:
    case 9:
    case 10:
    case 13:
    case 14:

      break;
    case 5:
      goto LABEL_6;
    case 8:
    case 11:
    case 12:
    case 15:

LABEL_6:
      swift_release();
      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for ActivitySharingFriendDetailAlertType(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_10034690C(*(id *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for ActivitySharingFriendDetailAlertType(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_10034690C(*(id *)a2, v4, v5, v6, v7);
  unint64_t v8 = *(void **)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_100346A08(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for ActivitySharingFriendDetailAlertType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_100346A08(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivitySharingFriendDetailAlertType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF0 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 240);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 0x10) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivitySharingFriendDetailAlertType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xEF)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 240;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF0) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100346CA4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 0xFu) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 16);
  }
}

uint64_t sub_100346CBC(uint64_t result, unsigned int a2)
{
  if (a2 >= 0x10)
  {
    *(void *)unint64_t result = a2 - 16;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 16;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

uint64_t sub_100346CD8@<X0>(uint64_t *a1@<X8>)
{
  sub_10034690C(*(id *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
  uint64_t result = String.init<A>(describing:)();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100346D38(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_100346D60(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

id sub_100346DB4(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = OBJC_IVAR___CHWorkoutRouteViewController_mapView;
  id v13 = objc_allocWithZone((Class)MKMapView);
  id v14 = v7;
  *(void *)&v7[v12] = [v13 init];
  uint64_t v15 = OBJC_IVAR___CHWorkoutRouteViewController_toggleMapTypeButton;
  uint64_t v16 = self;
  *(void *)&v14[v15] = [v16 buttonWithType:0];
  uint64_t v17 = OBJC_IVAR___CHWorkoutRouteViewController_divider;
  *(void *)&v14[v17] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v18 = OBJC_IVAR___CHWorkoutRouteViewController_reportProblemButton;
  *(void *)&v14[v18] = [v16 buttonWithType:0];
  uint64_t v19 = OBJC_IVAR___CHWorkoutRouteViewController_geoMapFeatureAccess;
  *(void *)&v14[v19] = [objc_allocWithZone((Class)GEOMapFeatureAccess) init];
  *(void *)&v14[OBJC_IVAR___CHWorkoutRouteViewController_excludedActivityTypes] = a7;
  *(void *)&v14[OBJC_IVAR___CHWorkoutRouteViewController_locationReadings] = a1;
  id v20 = &v14[OBJC_IVAR___CHWorkoutRouteViewController_shareText];
  *(void *)id v20 = a5;
  *((void *)v20 + 1) = a6;
  v14[OBJC_IVAR___CHWorkoutRouteViewController_sharingEnabled] = a4;
  id v21 = a1;
  id v22 = [v21 workout];
  *(void *)&v14[OBJC_IVAR___CHWorkoutRouteViewController_workout] = v22;

  v27.receiver = v14;
  v27.super_class = (Class)type metadata accessor for WorkoutRouteViewController();
  id v23 = [super initWithNibName:0 bundle:0];
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v23 setTitle:v24];

  return v23;
}

void sub_100347090(char a1)
{
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for WorkoutRouteViewController();
  [super viewWillAppear:a1 & 1];
  id v3 = [v1 navigationItem];
  id v4 = [objc_allocWithZone((Class)UINavigationBarAppearance) init];
  [v3 setScrollEdgeAppearance:v4];

  id v5 = [v1 tabBarController];
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = [v5 tabBar];

    id v8 = [objc_allocWithZone((Class)UITabBarAppearance) init];
    [v7 setScrollEdgeAppearance:v8];
  }
}

id sub_1003472B0()
{
  v37.receiver = v0;
  v37.super_class = (Class)type metadata accessor for WorkoutRouteViewController();
  [super viewWillLayoutSubviews];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR___CHWorkoutRouteViewController_mapView];
  id result = [v0 view];
  if (!result)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v3 = result;
  [result bounds];
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;

  [v1 setFrame:v5, v7, v9, v11];
  id result = [v0 navigationController];
  if (!result) {
    return result;
  }
  uint64_t v12 = result;
  id v13 = [result navigationBar];

  [v13 frame];
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  CGFloat v21 = v20;

  v38.origin.x = v15;
  v38.origin.y = v17;
  v38.size.width = v19;
  v38.size.height = v21;
  double MaxY = CGRectGetMaxY(v38);
  id result = [v0 view];
  if (!result) {
    goto LABEL_9;
  }
  id v23 = result;
  [result bounds];
  double v25 = v24;

  double v26 = MaxY + 12.0;
  [*(id *)&v0[OBJC_IVAR___CHWorkoutRouteViewController_toggleMapTypeButton] setFrame:v25 + -45.0 + -12.0, v26, 45.0, 45.0];
  id result = [v0 view];
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  objc_super v27 = result;
  [result bounds];
  double v29 = v28;

  double v30 = v26 + 45.0;
  [*(id *)&v0[OBJC_IVAR___CHWorkoutRouteViewController_reportProblemButton] setFrame:v29 + -45.0 + -12.0, v30, 45.0, 45.0];
  id result = [v0 view];
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v31 = result;
  [result bounds];
  double v33 = v32;

  id v34 = [self mainScreen];
  [v34 scale];
  double v36 = v35;

  return [*(id *)&v0[OBJC_IVAR___CHWorkoutRouteViewController_divider] setFrame:v33 + -45.0 + -12.0, v30, 45.0, 1.0 / v36];
}

void sub_1003475D4()
{
  uint64_t v1 = v0;
  v17.receiver = v0;
  v17.super_class = (Class)type metadata accessor for WorkoutRouteViewController();
  [super viewDidLoad];
  id v2 = [v0 navigationItem];
  id v3 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:24 target:v1 action:"close"];
  [v2 setRightBarButtonItem:v3];

  if (v1[OBJC_IVAR___CHWorkoutRouteViewController_sharingEnabled] == 1)
  {
    id v4 = [v1 navigationItem];
    id v5 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:9 target:v1 action:"shareButtonPressed"];
    [v4 setLeftBarButtonItem:v5];
  }
  double v6 = *(void **)&v1[OBJC_IVAR___CHWorkoutRouteViewController_mapView];
  if ([*(id *)&v1[OBJC_IVAR___CHWorkoutRouteViewController_workout] workoutActivityType] == (id)84) {
    double v7 = 2000.0;
  }
  else {
    double v7 = 100.0;
  }
  id v8 = [objc_allocWithZone((Class)MKMapCameraZoomRange) initWithMinCenterCoordinateDistance:v7];
  [v6 setCameraZoomRange:v8];

  [v6 setDelegate:v1];
  [v6 _setEdgeInsets:80.0, 40.0, 40.0, 40.0];
  [v6 setShowsScale:0];
  [v6 setShowsCompass:0];
  [v6 setShowsAttribution:0];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_100347D98(5);
  id v9 = [v1 view];
  if (v9)
  {
    double v10 = v9;
    [v9 addSubview:v6];

    double v11 = *(void **)&v1[OBJC_IVAR___CHWorkoutRouteViewController_toggleMapTypeButton];
    uint64_t v12 = self;
    id v13 = [v12 secondarySystemBackgroundColor];
    [v11 setBackgroundColor:v13];

    id v14 = [v12 whiteColor];
    [v11 setTintColor:v14];

    id v15 = [v1 view];
    if (v15)
    {
      double v16 = v15;
      [v15 addSubview:v11];

      [v11 addTarget:v1 action:"toggleMapType" forControlEvents:64];
      sub_100348000();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10034798C()
{
  uint64_t v1 = sub_100347B78();
  if (v1)
  {
    id v2 = (void *)v1;
    sub_1000AFA94((uint64_t *)&unk_1009556C0);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_100752410;
    *(void *)(v3 + 56) = type metadata accessor for WorkoutRouteViewController();
    *(void *)(v3 + 32) = v0;
    uint64_t v4 = sub_10007E2D8(0, (unint64_t *)&qword_100957EF0);
    *(void *)(v3 + 64) = v2;
    uint64_t v5 = *(void *)&v0[OBJC_IVAR___CHWorkoutRouteViewController_shareText];
    uint64_t v6 = *(void *)&v0[OBJC_IVAR___CHWorkoutRouteViewController_shareText + 8];
    *(void *)(v3 + 120) = &type metadata for String;
    *(void *)(v3 + 88) = v4;
    *(void *)(v3 + 96) = v5;
    *(void *)(v3 + 104) = v6;
    id v7 = objc_allocWithZone((Class)UIActivityViewController);
    id v8 = v0;
    id v9 = v2;
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v12 = [v7 initWithActivityItems:isa applicationActivities:0];

    type metadata accessor for ActivityType(0);
    Class v11 = Array._bridgeToObjectiveC()().super.isa;
    [v12 setExcludedActivityTypes:v11];

    [v8 presentViewController:v12 animated:1 completion:0];
  }
}

uint64_t sub_100347B78()
{
  [*(id *)&v0[OBJC_IVAR___CHWorkoutRouteViewController_mapView] bounds];
  id v3 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:v1, v2];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v0;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_100349870;
  *(void *)(v5 + 24) = v4;
  v10[4] = sub_1003498DC;
  v10[5] = v5;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100346D60;
  v10[3] = &unk_1008C2700;
  uint64_t v6 = _Block_copy(v10);
  id v7 = v0;
  swift_retain();
  swift_release();
  id v8 = [v3 imageWithActions:v6];

  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v3 & 1) == 0) {
    return (uint64_t)v8;
  }
  __break(1u);
  return result;
}

void sub_100347D98(uint64_t a1)
{
  [*(id *)(v1 + OBJC_IVAR___CHWorkoutRouteViewController_mapView) setMapType:a1];
  double v2 = *(void **)(v1 + OBJC_IVAR___CHWorkoutRouteViewController_toggleMapTypeButton);
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [self systemImageNamed:v3];

  [v2 setImage:v4 forState:0];
  id v5 = [self mainBundle];
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setAccessibilityLabel:v8];
}

void sub_100348000()
{
  id v5 = v0;
  uint64_t v6 = OBJC_IVAR___CHWorkoutRouteViewController_locationReadings;
  unint64_t v7 = (unint64_t)&selRef_setPercentMinimized_;
  id v8 = [*(id *)&v0[OBJC_IVAR___CHWorkoutRouteViewController_locationReadings] allValidLocations];
  sub_10007E2D8(0, (unint64_t *)&qword_100957EE0);
  unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v33) {
      goto LABEL_31;
    }
  }
  else if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_31;
  }
  if ((v9 & 0xC000000000000001) != 0)
  {
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_30;
    }
    id v10 = *(id *)(v9 + 32);
  }
  Class v11 = v10;
  swift_bridgeObjectRelease();
  double v2 = &selRef_setPercentMinimized_;
  [v11 coordinate];
  double v3 = v12;
  double v4 = v13;

  id v14 = [*(id *)&v0[v6] allValidLocations];
  unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v9 >> 62))
  {
    id v15 = *(char **)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v15) {
      goto LABEL_8;
    }
    goto LABEL_31;
  }
LABEL_30:
  swift_bridgeObjectRetain();
  id v15 = (char *)_CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_8:
    double v16 = v15 - 1;
    if (__OFSUB__(v15, 1))
    {
      __break(1u);
    }
    else if ((v9 & 0xC000000000000001) == 0)
    {
      if (((unint64_t)v16 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if ((unint64_t)v16 < *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v17 = *(id *)(v9 + 8 * (void)v16 + 32);
        goto LABEL_13;
      }
      __break(1u);
      goto LABEL_38;
    }
    id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_13:
    double v18 = v17;
    swift_bridgeObjectRelease();
    [v18 v2[455]];
    double v20 = v19;
    double v22 = v21;

    id v43 = [objc_allocWithZone((Class)type metadata accessor for WorkoutStartLocationAnnotation()) init];
    [v43 setCoordinate:v3, v4];
    unint64_t v9 = *(void *)&v0[OBJC_IVAR___CHWorkoutRouteViewController_mapView];
    [(id)v9 addAnnotation:v43];
    uint64_t v1 = &selRef_configurePlayer;
    if ([*(id *)&v0[v6] count] == (id)1)
    {
      v46.latitude = v3;
      v46.longitude = v4;
      MKMapPoint v23 = MKMapPointForCoordinate(v46);
      [v9 setVisibleMapRect:CGRectMake(v23.x, v23.y, 1500.0, 1500.0)];
      [v9 setCenterCoordinate:v3, v4];
      goto LABEL_41;
    }
    id v15 = (char *)[objc_allocWithZone((Class)type metadata accessor for WorkoutEndLocationAnnotation()) init];
    [v15 setCoordinate:v20, v22];
    [(id)v9 addAnnotation:v15];
    id v24 = [*(id *)&v0[v6] allValidLocations];
    unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v7 >> 62))
    {
      uint64_t v25 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v25)
      {
LABEL_17:
        uint64_t v42 = (id *)v9;
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_1001C932C(0, v25 & ~(v25 >> 63), 0);
        if (v25 < 0)
        {
          __break(1u);
          return;
        }
        uint64_t v26 = 0;
        objc_super v27 = (void *)aBlock[0];
        do
        {
          if ((v7 & 0xC000000000000001) != 0) {
            id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v28 = *(id *)(v7 + 8 * v26 + 32);
          }
          double v29 = v28;
          [v28 v2[455]];
          MKMapPoint v30 = MKMapPointForCoordinate(v47);

          aBlock[0] = v27;
          unint64_t v32 = v27[2];
          unint64_t v31 = v27[3];
          if (v32 >= v31 >> 1)
          {
            sub_1001C932C(v31 > 1, v32 + 1, 1);
            objc_super v27 = (void *)aBlock[0];
          }
          ++v26;
          void v27[2] = v32 + 1;
          *(MKMapPoint *)&v27[2 * v32 + 4] = v30;
        }
        while (v25 != v26);
        swift_bridgeObjectRelease();
        unint64_t v9 = (unint64_t)v42;
        uint64_t v1 = &selRef_configurePlayer;
        goto LABEL_40;
      }
LABEL_39:
      swift_bridgeObjectRelease();
      objc_super v27 = _swiftEmptyArrayStorage;
LABEL_40:
      id v34 = objc_msgSend(self, "polylineWithPoints:count:", v27 + 4, objc_msgSend(*(id *)&v5[v6], v1[61]));
      swift_bridgeObjectRelease();
      [(id)v9 addOverlay:v34 level:1];
      [v34 boundingMapRect];
      [v9 setVisibleMapRect:];

LABEL_41:
      double v35 = *(void **)&v5[OBJC_IVAR___CHWorkoutRouteViewController_workout];
      if ([v35 supportsTrackWorkout])
      {
        double v36 = *(void **)&v5[OBJC_IVAR___CHWorkoutRouteViewController_geoMapFeatureAccess];
        [v36 setAllowNetworkTileLoad:1];
        [v36 setAllowStaleData:1];
        if ([v35 workoutActivityType] == (id)84) {
          double v37 = 2000.0;
        }
        else {
          double v37 = 100.0;
        }
        uint64_t v38 = swift_allocObject();
        *(void *)(v38 + 16) = v5;
        aBlock[4] = sub_100349840;
        aBlock[5] = v38;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1003486A8;
        aBlock[3] = &unk_1008C2688;
        double v39 = _Block_copy(aBlock);
        uint64_t v40 = v5;
        swift_release();
        id v41 = [v36 findRunningTrackFlagsNear:v39 radius:0 handler:v3 completionHandler:v4];

        _Block_release(v39);
        swift_unknownObjectRelease();
      }
      else
      {
      }
      return;
    }
LABEL_38:
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v25) {
      goto LABEL_17;
    }
    goto LABEL_39;
  }
LABEL_31:

  swift_bridgeObjectRelease();
}

void sub_1003486A8(uint64_t a1, void *a2)
{
  double v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_1003487FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)&double v8 = __chkstk_darwin(v6).n128_u64[0];
  id v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [v0 view];
  if (v11)
  {
    double v12 = v11;
    sub_10007E2D8(0, (unint64_t *)&qword_10094E530);
    char v13 = UIFocusEnvironment.contains(_:)();

    if ((v13 & 1) == 0)
    {
      sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
      id v14 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v1;
      aBlock[4] = sub_100349838;
      aBlock[5] = v15;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100070394;
      aBlock[3] = &unk_1008C2638;
      double v16 = _Block_copy(aBlock);
      id v17 = v1;
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_100075B54();
      sub_1000AFA94((uint64_t *)&unk_1009555E0);
      sub_100075AF8();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v16);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_100348AE8(char *a1)
{
  id v2 = [*(id *)&a1[OBJC_IVAR___CHWorkoutRouteViewController_toggleMapTypeButton] layer];
  [v2 setMaskedCorners:3];

  uint64_t v3 = *(void **)&a1[OBJC_IVAR___CHWorkoutRouteViewController_reportProblemButton];
  uint64_t v4 = self;
  id v5 = [v4 secondarySystemBackgroundColor];
  [v3 setBackgroundColor:v5];

  id v6 = [v4 whiteColor];
  [v3 setTintColor:v6];

  id v7 = [v3 layer];
  [v7 setMaskedCorners:12];

  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [self systemImageNamed:v8];

  [v3 setImage:v9 forState:0];
  id v10 = [self mainBundle];
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v10 localizedStringForKey:v11 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v3 setAccessibilityLabel:v13];

  id result = [a1 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v15 = result;
  [result addSubview:v3];

  double v16 = *(void **)&a1[OBJC_IVAR___CHWorkoutRouteViewController_divider];
  id v17 = [v4 whiteColor];
  id v18 = [v17 colorWithAlphaComponent:0.3];

  [v16 setBackgroundColor:v18];
  id result = [a1 view];
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  double v19 = result;
  [result addSubview:v16];

  return [v3 addTarget:a1 action:"reportProblem" forControlEvents:64];
}

id sub_100348E60()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutRouteViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutRouteViewController()
{
  return self;
}

void sub_100349108(void *a1)
{
  objc_super v2 = *(void **)(v1 + OBJC_IVAR___CHWorkoutRouteViewController_locationReadings);
  *(void *)(v1 + OBJC_IVAR___CHWorkoutRouteViewController_locationReadings) = a1;
  id v3 = a1;

  uint64_t v4 = *(void **)(v1 + OBJC_IVAR___CHWorkoutRouteViewController_mapView);
  Class isa = (Class)[v4 annotations];
  if (!isa)
  {
    sub_1000AFA94(&qword_100957EC8);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  [v4 removeAnnotations:isa];

  Class v6 = (Class)[v4 overlays];
  if (!v6)
  {
    sub_1000AFA94((uint64_t *)&unk_100957ED0);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class v6 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  [v4 removeOverlays:v6];

  sub_100348000();
}

void sub_1003492A0()
{
  uint64_t v1 = OBJC_IVAR___CHWorkoutRouteViewController_mapView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)MKMapView) init];
  uint64_t v2 = OBJC_IVAR___CHWorkoutRouteViewController_toggleMapTypeButton;
  id v3 = self;
  *(void *)&v0[v2] = [v3 buttonWithType:0];
  uint64_t v4 = OBJC_IVAR___CHWorkoutRouteViewController_divider;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v5 = OBJC_IVAR___CHWorkoutRouteViewController_reportProblemButton;
  *(void *)&v0[v5] = [v3 buttonWithType:0];
  uint64_t v6 = OBJC_IVAR___CHWorkoutRouteViewController_geoMapFeatureAccess;
  *(void *)&v0[v6] = [objc_allocWithZone((Class)GEOMapFeatureAccess) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_1003493DC(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = [*(id *)(v1 + OBJC_IVAR___CHWorkoutRouteViewController_workout) metadata];
  if (!v4)
  {
    long long v21 = 0u;
    long long v22 = 0u;
    goto LABEL_10;
  }
  uint64_t v5 = v4;
  uint64_t v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v6 + 16) || (unint64_t v9 = sub_1000DA1C0(v7, v8), (v10 & 1) == 0))
  {
    long long v21 = 0u;
    long long v22 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_10008F484(*(void *)(v6 + 56) + 32 * v9, (uint64_t)&v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v22 + 1))
  {
LABEL_10:
    sub_100074898((uint64_t)&v21);
    goto LABEL_11;
  }
  sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    uint64_t v15 = *(void **)(v2 + OBJC_IVAR___CHWorkoutRouteViewController_locationReadings);
    double v16 = (char *)objc_allocWithZone((Class)type metadata accessor for WorkoutGradientPathRenderer());
    *(void *)&v16[OBJC_IVAR____TtC10FitnessApp26WorkoutOverlayPathRenderer_locationReadings] = v15;
    v20.receiver = v16;
    v20.super_class = (Class)type metadata accessor for WorkoutOverlayPathRenderer();
    id v17 = v15;
    return [super initWithOverlay:a1];
  }
  if (![v19 BOOLValue])
  {

    goto LABEL_11;
  }
  NSString v11 = *(void **)(v2 + OBJC_IVAR___CHWorkoutRouteViewController_locationReadings);
  id v12 = objc_allocWithZone((Class)type metadata accessor for WorkoutExtendedModePathRenderer());
  swift_unknownObjectRetain();
  sub_1003D3B1C(a1, (uint64_t)v11);
  uint64_t v14 = v13;

  swift_unknownObjectRelease();
  return (id)v14;
}

id sub_1003495DC(uint64_t a1)
{
  if ([*(id *)(v1 + OBJC_IVAR___CHWorkoutRouteViewController_workout) workoutActivityType] == (id)84)
  {
    id v3 = [objc_allocWithZone((Class)type metadata accessor for DivingLocationAnnotationView()) initWithAnnotation:a1 reuseIdentifier:0];
    id v4 = v3;
    uint64_t v5 = "setCollisionMode:";
LABEL_5:
    [v3 v5:2];
    return v4;
  }
  id v4 = [objc_allocWithZone((Class)type metadata accessor for WorkoutLocationAnnotationView()) initWithAnnotation:a1 reuseIdentifier:0];
  [v4 setCollisionMode:2];
  type metadata accessor for WorkoutStartLocationAnnotation();
  if (swift_dynamicCastClass())
  {
    uint64_t v5 = "_setZIndex:";
    id v3 = v4;
    goto LABEL_5;
  }
  type metadata accessor for WorkoutEndLocationAnnotation();
  if (swift_dynamicCastClass()) {
    [v4 _setZIndex:1];
  }
  return v4;
}

id sub_1003496D8()
{
  id v0 = [objc_allocWithZone((Class)LPLinkMetadata) init];
  uint64_t v1 = (UIImage *)sub_100347B78();
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = UIImagePNGRepresentation(v1);
    if (v3)
    {
      id v4 = v3;
      uint64_t v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v7 = v6;

      id v8 = objc_allocWithZone((Class)LPImage);
      sub_10025C56C(v5, v7);
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      NSString v10 = String._bridgeToObjectiveC()();
      id v11 = [v8 initWithData:isa MIMEType:v10];
      sub_1000939A4(v5, v7);

      [v0 setImage:v11];
      sub_1000939A4(v5, v7);
    }
  }
  return v0;
}

uint64_t sub_100349800()
{
  return swift_deallocObject();
}

id sub_100349838()
{
  return sub_100348AE8(*(char **)(v0 + 16));
}

void sub_100349840(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    sub_1003487FC();
  }
}

id sub_100349870()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 16) + OBJC_IVAR___CHWorkoutRouteViewController_mapView);
  [v1 bounds];

  return [v1 drawViewHierarchyInRect:1];
}

uint64_t sub_1003498CC()
{
  return swift_deallocObject();
}

uint64_t sub_1003498DC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t destroy for IntervalsRangeSlider()
{
  return swift_release();
}

uint64_t initializeWithCopy for IntervalsRangeSlider(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for IntervalsRangeSlider(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 16) = a2[2];
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  return a1;
}

uint64_t assignWithTake for IntervalsRangeSlider(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for IntervalsRangeSlider()
{
  return &type metadata for IntervalsRangeSlider;
}

uint64_t sub_100349A44()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100349A60(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v1 + 16);
  v4[1] = *(_OWORD *)v1;
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v1 + 32);
  swift_retain_n();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  unsigned __int8 v6 = static Edge.Set.trailing.getter();
  unsigned __int8 v7 = static Edge.Set.top.getter();
  unsigned __int8 v8 = static Edge.Set.bottom.getter();
  char v9 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v6) {
    char v9 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v7) {
    char v9 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v8) {
    char v9 = Edge.Set.init(rawValue:)();
  }
  NSString v10 = self;
  id v11 = [v10 mainScreen];
  [v11 scale];
  double v13 = v12;

  id v14 = [v10 mainScreen];
  [v14 nativeScale];
  double v16 = v15;

  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  if (v13 != v16) {
    EdgeInsets.init(_all:)();
  }
  *(void *)a1 = sub_10034A95C;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v21;
  *(unsigned char *)(a1 + 32) = v22;
  *(void *)(a1 + 40) = v23;
  *(unsigned char *)(a1 + 48) = v24;
  *(void *)(a1 + 56) = v25;
  *(void *)(a1 + 64) = v26;
  *(unsigned char *)(a1 + 72) = v9;
  *(void *)(a1 + 80) = v17;
  *(void *)(a1 + 88) = v18;
  *(void *)(a1 + 96) = v19;
  *(void *)(a1 + 104) = v20;
  *(unsigned char *)(a1 + 112) = v13 == v16;
}

uint64_t sub_100349CA0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v35 = a3;
  uint64_t v34 = sub_1000AFA94(&qword_100957F00);
  __chkstk_darwin(v34);
  long long v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1000AFA94(&qword_100957F08);
  __chkstk_darwin(v33);
  unint64_t v31 = (uint64_t *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1000AFA94(&qword_100957F10);
  __chkstk_darwin(v7);
  char v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100957F18);
  __chkstk_darwin(v10);
  double v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_100957F20);
  __chkstk_darwin(v13);
  double v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AFA94(&qword_100957F28);
  __chkstk_darwin(v16);
  uint64_t v18 = (uint64_t *)((char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10034A964(a2, (uint64_t)v36);
  sub_10034A964(v36, (uint64_t)&v37);
  if (v38 == 1)
  {
    MKMapPoint v30 = v9;
    uint64_t v32 = v13;
    double v19 = v37;
    uint64_t v20 = static HorizontalAlignment.center.getter();
    if (v19 == 0.0)
    {
      uint64_t v27 = (uint64_t)v31;
      *unint64_t v31 = v20;
      *(void *)(v27 + 8) = 0;
      *(unsigned char *)(v27 + 16) = 1;
      uint64_t v28 = sub_1000AFA94(&qword_100957F58);
      sub_10034A478((uint64_t)a2, v27 + *(int *)(v28 + 44));
      sub_1000AEF2C(v27, (uint64_t)v12, &qword_100957F08);
      swift_storeEnumTagMultiPayload();
      sub_1000A132C(&qword_100957F40, &qword_100957F28);
      sub_1000A132C(&qword_100957F48, &qword_100957F08);
      _ConditionalContent<>.init(storage:)();
      sub_1000AEF2C((uint64_t)v15, (uint64_t)v30, &qword_100957F20);
      swift_storeEnumTagMultiPayload();
      sub_10034A97C();
      sub_1000A132C(&qword_100957F50, &qword_100957F00);
      _ConditionalContent<>.init(storage:)();
      sub_10008DB18((uint64_t)v15, &qword_100957F20);
      uint64_t v22 = v27;
      uint64_t v23 = &qword_100957F08;
    }
    else
    {
      *(void *)long long v5 = v20;
      *((void *)v5 + 1) = 0;
      v5[16] = 1;
      uint64_t v21 = sub_1000AFA94(&qword_100957F30);
      sub_10034A6C0((uint64_t)a2, (uint64_t)&v5[*(int *)(v21 + 44)]);
      sub_1000AEF2C((uint64_t)v5, (uint64_t)v30, &qword_100957F00);
      swift_storeEnumTagMultiPayload();
      sub_10034A97C();
      sub_1000A132C(&qword_100957F50, &qword_100957F00);
      _ConditionalContent<>.init(storage:)();
      uint64_t v22 = (uint64_t)v5;
      uint64_t v23 = &qword_100957F00;
    }
  }
  else
  {
    double v24 = v37;
    *uint64_t v18 = static Alignment.center.getter();
    v18[1] = v25;
    uint64_t v26 = sub_1000AFA94(&qword_100957F60);
    sub_10034A24C((uint64_t)a2, (uint64_t)v18 + *(int *)(v26 + 44), v24);
    sub_1000AEF2C((uint64_t)v18, (uint64_t)v12, &qword_100957F28);
    swift_storeEnumTagMultiPayload();
    sub_1000A132C(&qword_100957F40, &qword_100957F28);
    sub_1000A132C(&qword_100957F48, &qword_100957F08);
    _ConditionalContent<>.init(storage:)();
    sub_1000AEF2C((uint64_t)v15, (uint64_t)v9, &qword_100957F20);
    swift_storeEnumTagMultiPayload();
    sub_10034A97C();
    sub_1000A132C(&qword_100957F50, &qword_100957F00);
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18((uint64_t)v15, &qword_100957F20);
    uint64_t v22 = (uint64_t)v18;
    uint64_t v23 = &qword_100957F28;
  }
  return sub_10008DB18(v22, v23);
}

uint64_t sub_10034A24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = type metadata accessor for RoundedRectangle();
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  char v9 = (uint64_t *)((char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_1000AFA94(&qword_100956548);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v28 - v15;
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = (char *)v9 + *(int *)(v7 + 28);
  uint64_t v19 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v20 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v18, v19, v20);
  *char v9 = v17;
  v9[1] = v17;
  uint64_t v21 = static Color.black.getter();
  sub_1002F51F8((uint64_t)v9, (uint64_t)v13);
  *(void *)&v13[*(int *)(v11 + 44)] = v21;
  sub_1002854A8((uint64_t)v9);
  sub_10034AA40((uint64_t)v13, (uint64_t)v16);
  double v22 = *(double *)(a1 + 24) * 0.5;
  GeometryProxy.size.getter();
  double v24 = (1.0 - a3) * v23;
  uint64_t v25 = static Animation.default.getter();
  sub_1000AEF2C((uint64_t)v16, (uint64_t)v13, &qword_100956548);
  sub_1000AEF2C((uint64_t)v13, a2, &qword_100956548);
  uint64_t v26 = a2 + *(int *)(sub_1000AFA94(&qword_100957F68) + 48);
  *(double *)uint64_t v26 = v22;
  *(double *)(v26 + 8) = v24;
  *(void *)(v26 + 16) = v25;
  *(double *)(v26 + 24) = a3;
  swift_retain();
  sub_10008DB18((uint64_t)v16, &qword_100956548);
  swift_release();
  return sub_10008DB18((uint64_t)v13, &qword_100956548);
}

uint64_t sub_10034A478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for RoundedRectangle();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1000AFA94(&qword_100956548);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v26 - v13;
  uint64_t v15 = *(void *)(a1 + 40);
  uint64_t v16 = (char *)v7 + *(int *)(v5 + 28);
  uint64_t v17 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v18 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v16, v17, v18);
  *uint64_t v7 = v15;
  v7[1] = v15;
  uint64_t v19 = static Color.black.getter();
  sub_1002F51F8((uint64_t)v7, (uint64_t)v11);
  *(void *)&v11[*(int *)(v9 + 44)] = v19;
  sub_1002854A8((uint64_t)v7);
  sub_10034AA40((uint64_t)v11, (uint64_t)v14);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v20 = v26;
  LOBYTE(v9) = v27;
  uint64_t v21 = v28;
  LOBYTE(v17) = v29;
  uint64_t v23 = v30;
  uint64_t v22 = v31;
  sub_1000AEF2C((uint64_t)v14, (uint64_t)v11, &qword_100956548);
  sub_1000AEF2C((uint64_t)v11, a2, &qword_100956548);
  uint64_t v24 = a2 + *(int *)(sub_1000AFA94(&qword_100957F70) + 48);
  *(void *)uint64_t v24 = 0;
  *(unsigned char *)(v24 + 8) = 1;
  *(void *)(v24 + 16) = v20;
  *(unsigned char *)(v24 + 24) = v9;
  *(void *)(v24 + 32) = v21;
  *(unsigned char *)(v24 + 40) = v17;
  *(void *)(v24 + 48) = v23;
  *(void *)(v24 + 56) = v22;
  sub_10008DB18((uint64_t)v14, &qword_100956548);
  return sub_10008DB18((uint64_t)v11, &qword_100956548);
}

uint64_t sub_10034A6C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for RoundedRectangle();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1000AFA94(&qword_100956548);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v26 - v13;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v15 = v30;
  char v16 = v31;
  uint64_t v17 = v32;
  int v29 = v33;
  uint64_t v27 = v35;
  uint64_t v28 = v34;
  uint64_t v18 = *(void *)(a1 + 40);
  uint64_t v19 = (char *)v7 + *(int *)(v5 + 28);
  uint64_t v20 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v21 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v19, v20, v21);
  *uint64_t v7 = v18;
  v7[1] = v18;
  uint64_t v22 = static Color.black.getter();
  sub_1002F51F8((uint64_t)v7, (uint64_t)v11);
  *(void *)&v11[*(int *)(v9 + 44)] = v22;
  sub_1002854A8((uint64_t)v7);
  sub_10034AA40((uint64_t)v11, (uint64_t)v14);
  sub_1000AEF2C((uint64_t)v14, (uint64_t)v11, &qword_100956548);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  *(void *)(a2 + 16) = v15;
  *(unsigned char *)(a2 + 24) = v16;
  *(void *)(a2 + 32) = v17;
  *(unsigned char *)(a2 + 40) = v29;
  uint64_t v23 = v27;
  *(void *)(a2 + 48) = v28;
  *(void *)(a2 + 56) = v23;
  uint64_t v24 = sub_1000AFA94(&qword_100957F78);
  sub_1000AEF2C((uint64_t)v11, a2 + *(int *)(v24 + 64), &qword_100956548);
  sub_10008DB18((uint64_t)v14, &qword_100956548);
  return sub_10008DB18((uint64_t)v11, &qword_100956548);
}

uint64_t sub_10034A924()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10034A95C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100349CA0(a1, (uint64_t *)(v2 + 16), a2);
}

uint64_t sub_10034A964(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  *(unsigned char *)(a2 + 8) = *((unsigned char *)a1 + 8);
  *(void *)a2 = v2;
  return a2;
}

unint64_t sub_10034A97C()
{
  unint64_t result = qword_100957F38;
  if (!qword_100957F38)
  {
    sub_1000A1370(&qword_100957F20);
    sub_1000A132C(&qword_100957F40, &qword_100957F28);
    sub_1000A132C(&qword_100957F48, &qword_100957F08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100957F38);
  }
  return result;
}

uint64_t sub_10034AA40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100956548);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for IntervalsRangeSlider.State()
{
  return &type metadata for IntervalsRangeSlider.State;
}

uint64_t sub_10034AAB8()
{
  return sub_10034AB2C(&qword_100957F80, &qword_100957F88, (void (*)(void))sub_10034AAFC);
}

uint64_t sub_10034AAFC()
{
  return sub_10034AB2C(&qword_100957F90, &qword_100957F98, (void (*)(void))sub_10034ABA8);
}

uint64_t sub_10034AB2C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10034ABA8()
{
  unint64_t result = qword_100957FA0;
  if (!qword_100957FA0)
  {
    sub_1000A1370(&qword_100957FA8);
    sub_1000A132C(&qword_100957FB0, &qword_100957FB8);
    sub_1000A132C(&qword_10094E300, &qword_10094E308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100957FA0);
  }
  return result;
}

id sub_10034AC6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp28DivingLocationAnnotationView_pinSize] = 0x402E000000000000;
  if (a3)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v21.receiver = v3;
  v21.super_class = (Class)type metadata accessor for DivingLocationAnnotationView();
  id v6 = [super initWithAnnotation:a1 reuseIdentifier:v5];

  id v7 = v6;
  [v7 setFrame:CGRectMake(0.0, 0.0, 15.0, 15.0)];
  uint64_t v8 = self;
  id v9 = v7;
  id v10 = [v8 clearColor];
  [v9 setBackgroundColor:v10];

  [v9 setCanShowCallout:0];
  id v11 = v9;
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [self systemImageNamed:v12];

  [v11 setGlyphImage:v13];
  id v14 = v11;
  id v15 = [v8 whiteColor];
  [v14 setGlyphTintColor:v15];

  char v16 = self;
  id v17 = v14;
  id result = [v16 diveColors];
  if (result)
  {
    uint64_t v19 = result;
    id v20 = [result nonGradientTextColor];

    [v17 setMarkerTintColor:v20];
    swift_unknownObjectRelease();
    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10034AF6C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DivingLocationAnnotationView();
  return [super dealloc];
}

uint64_t type metadata accessor for DivingLocationAnnotationView()
{
  return self;
}

uint64_t initializeWithCopy for MirrorControlsButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MirrorControlsButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for MirrorControlsButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for MirrorControlsButton()
{
  return &type metadata for MirrorControlsButton;
}

uint64_t sub_10034B0BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10034B0D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v2 = sub_1000AFA94(&qword_100957FF0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  NSString v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100957FF8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100958000);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  long long v13 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v12 + 32) = v13;
  *(void *)(v12 + 48) = *(void *)(v1 + 32);
  uint64_t v25 = v1;
  swift_retain();
  sub_1000AFA94(&qword_100958008);
  sub_1000A132C(&qword_100958010, &qword_100958008);
  Button.init(action:label:)();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v5, v2);
  id v14 = &v8[*(int *)(v6 + 36)];
  long long v15 = v29;
  *(_OWORD *)id v14 = v28;
  *((_OWORD *)v14 + 1) = v15;
  *((_OWORD *)v14 + 2) = v30;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v16 = [self mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v16 localizedStringForKey:v17 value:0 table:0];

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  uint64_t v26 = v19;
  uint64_t v27 = v21;
  sub_10034B74C();
  sub_1000A06D0();
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  sub_10008DB18((uint64_t)v8, &qword_100957FF8);
  return sub_10034B7EC((uint64_t)v11, v24);
}

double sub_10034B454@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = static Alignment.center.getter();
  uint64_t v6 = v5;
  sub_10034B4DC(a1, (uint64_t)&v15);
  uint64_t v7 = v15;
  char v8 = v16;
  char v9 = v17;
  uint64_t v10 = v20;
  double result = v22;
  long long v12 = v21;
  long long v14 = v18;
  long long v13 = v19;
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v7;
  *(unsigned char *)(a2 + 24) = v8;
  *(unsigned char *)(a2 + 25) = v9;
  *(_OWORD *)(a2 + 32) = v14;
  *(_OWORD *)(a2 + 48) = v13;
  *(void *)(a2 + 64) = v10;
  *(_OWORD *)(a2 + 72) = v12;
  *(double *)(a2 + 88) = result;
  return result;
}

uint64_t sub_10034B4DC@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10094AD68 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_100998148;
  swift_retain();
  uint64_t v8 = Image.init(systemName:)();
  uint64_t v9 = static Color.white.getter();
  uint64_t KeyPath = swift_getKeyPath();
  static Font.Weight.semibold.getter();
  uint64_t v11 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  uint64_t v12 = static Font.system(size:weight:design:)();
  sub_10008DB18((uint64_t)v6, &qword_10094C448);
  uint64_t v13 = swift_getKeyPath();
  if (*a1) {
    double v14 = 3.14159265;
  }
  else {
    double v14 = 0.0;
  }
  uint64_t result = static UnitPoint.center.getter();
  *(void *)a2 = v7;
  *(_WORD *)(a2 + 8) = 256;
  *(void *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = KeyPath;
  *(void *)(a2 + 32) = v9;
  *(void *)(a2 + 40) = v13;
  *(void *)(a2 + 48) = v12;
  *(double *)(a2 + 56) = v14;
  *(void *)(a2 + 64) = v16;
  *(void *)(a2 + 72) = v17;
  return result;
}

uint64_t sub_10034B6A8@<X0>(uint64_t a1@<X8>)
{
  return sub_10034B0D8(a1);
}

uint64_t sub_10034B6E4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10034B71C()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

double sub_10034B744@<D0>(uint64_t a1@<X8>)
{
  return sub_10034B454(*(unsigned char **)(v1 + 16), a1);
}

unint64_t sub_10034B74C()
{
  unint64_t result = qword_100958018;
  if (!qword_100958018)
  {
    sub_1000A1370(&qword_100957FF8);
    sub_1000A132C(&qword_100958020, &qword_100957FF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100958018);
  }
  return result;
}

uint64_t sub_10034B7EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100958000);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10034B868()
{
  unint64_t result = qword_100958028;
  if (!qword_100958028)
  {
    sub_1000A1370(&qword_100958000);
    sub_10034B74C();
    sub_10034B8E4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100958028);
  }
  return result;
}

unint64_t sub_10034B8E4()
{
  unint64_t result = qword_10094C0F8;
  if (!qword_10094C0F8)
  {
    type metadata accessor for AccessibilityAttachmentModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C0F8);
  }
  return result;
}

void destroy for ActivitySharingFriendDetailCompetitionActionListView(uint64_t a1)
{
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v2 = *(void **)(a1 + 96);
}

uint64_t initializeWithCopy for ActivitySharingFriendDetailCompetitionActionListView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void **)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v6;
  uint64_t v8 = *(void **)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v9 = *(void **)(a2 + 96);
  *(void *)(a1 + 96) = v9;
  swift_retain();
  id v10 = v3;
  swift_retain();
  id v11 = v5;
  id v12 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v13 = v8;
  id v14 = v9;
  return a1;
}

uint64_t assignWithCopy for ActivitySharingFriendDetailCompetitionActionListView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void **)(a2 + 40);
  uint64_t v8 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v7;
  id v9 = v7;

  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  id v10 = *(void **)(a1 + 56);
  id v11 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v11;
  id v12 = v11;

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v13 = *(void **)(a2 + 80);
  id v14 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = v13;
  id v15 = v13;

  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v16 = *(void **)(a2 + 96);
  uint64_t v17 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = v16;
  id v18 = v16;

  return a1;
}

__n128 initializeWithTake for ActivitySharingFriendDetailCompetitionActionListView(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for ActivitySharingFriendDetailCompetitionActionListView(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  long long v5 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v6 = *(void **)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v7 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);

  return a1;
}

uint64_t getEnumTagSinglePayload for ActivitySharingFriendDetailCompetitionActionListView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivitySharingFriendDetailCompetitionActionListView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivitySharingFriendDetailCompetitionActionListView()
{
  return &type metadata for ActivitySharingFriendDetailCompetitionActionListView;
}

uint64_t sub_10034BD1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10034BD38()
{
  static Font.body.getter();
  uint64_t v0 = Font.bold()();
  uint64_t result = swift_release();
  qword_100958030 = v0;
  return result;
}

uint64_t sub_10034BD74()
{
  uint64_t v0 = type metadata accessor for Color.RGBColorSpace();
  __n128 v1 = __chkstk_darwin(v0);
  (*(void (**)(char *, void, __n128))(v3 + 104))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for Color.RGBColorSpace.sRGB(_:), v1);
  uint64_t result = Color.init(_:red:green:blue:opacity:)();
  qword_100958038 = result;
  return result;
}

uint64_t sub_10034BE58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_100958048);
  __chkstk_darwin(v3 - 8);
  uint64_t v71 = (uint64_t)v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v66 = (uint64_t)v60 - v6;
  uint64_t v7 = sub_1000AFA94(&qword_100958050);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_100958058);
  __chkstk_darwin(v11);
  id v13 = (char *)v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1000AFA94(&qword_100958060);
  uint64_t v14 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v16 = (char *)v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_100958068);
  __chkstk_darwin(v17 - 8);
  uint64_t v70 = (uint64_t)v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v20 = __chkstk_darwin(v19).n128_u64[0];
  uint64_t v69 = (char *)v60 - v21;
  double v22 = *(void **)(a1 + 40);
  if ((objc_msgSend(v22, "isCompetitionActive", v20) & 1) != 0
    || ([v22 hasCompetitionHistory] & 1) != 0)
  {
    sub_10034E800(&v74);
  }
  else
  {
    uint64_t v23 = static VerticalAlignment.center.getter();
    uint64_t v64 = v10;
    uint64_t v24 = v23;
    sub_10034D1A0(a1, (uint64_t)&v91);
    long long v62 = v16;
    uint64_t v63 = v14;
    uint64_t v25 = v92;
    uint64_t v61 = v8;
    uint64_t v26 = v13;
    char v27 = v93;
    v60[0] = v94;
    v60[1] = v95;
    uint64_t v83 = v24;
    uint64_t v84 = 0;
    char v85 = 1;
    uint64_t v86 = v91;
    uint64_t v28 = v91;
    uint64_t v87 = v92;
    char v88 = v93;
    uint64_t v89 = v94;
    uint64_t v90 = v95;
    static Alignment.leading.getter();
    sub_1004DD9B8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v74, 0.0, 1, 0.0, 1);
    uint64_t v29 = v28;
    uint64_t v30 = v25;
    char v31 = v27;
    id v13 = v26;
    uint64_t v8 = v61;
    uint64_t v16 = v62;
    uint64_t v14 = v63;
    sub_1000A06C0(v29, v30, v31);
    swift_bridgeObjectRelease();
    swift_release();
    LOBYTE(v24) = static Edge.Set.bottom.getter();
    EdgeInsets.init(_all:)();
    v73[0] = 0;
    char v77 = v24;
    id v10 = v64;
    uint64_t v78 = v32;
    uint64_t v79 = v33;
    uint64_t v80 = v34;
    uint64_t v81 = v35;
    char v82 = 0;
    ASFriendListDisplayMode.id.getter(&v74);
  }
  sub_10034E4DC((uint64_t)&v74, (uint64_t)&v91);
  unsigned int v36 = [v22 isAwaitingCompetitionResponseFromMe];
  uint64_t v65 = a1;
  if (v36)
  {
    sub_10034C5AC((uint64_t)v16);
    uint64_t v37 = v68;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v13, v16, v68);
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = sub_1000A1370(&qword_100958078);
    uint64_t v39 = type metadata accessor for BorderedProminentButtonStyle();
    unint64_t v40 = sub_10034E544();
    uint64_t v64 = v13;
    unint64_t v41 = v40;
    unint64_t v42 = sub_100192D60();
    *(void *)&long long v74 = v38;
    *((void *)&v74 + 1) = v39;
    unint64_t v75 = v41;
    unint64_t v76 = v42;
    swift_getOpaqueTypeConformance2();
    id v43 = v16;
    uint64_t v44 = sub_1000A1370(&qword_100958098);
    unint64_t v45 = sub_10034E608();
    *(void *)&long long v74 = v44;
    *((void *)&v74 + 1) = v39;
    unint64_t v75 = v45;
    unint64_t v76 = v42;
    swift_getOpaqueTypeConformance2();
    uint64_t v46 = (uint64_t)v69;
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v43, v37);
  }
  else
  {
    CLLocationCoordinate2D v47 = v10;
    sub_10034C8DC((uint64_t)v10);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v10, v7);
    swift_storeEnumTagMultiPayload();
    uint64_t v48 = sub_1000A1370(&qword_100958078);
    uint64_t v49 = type metadata accessor for BorderedProminentButtonStyle();
    unint64_t v50 = sub_10034E544();
    unint64_t v51 = sub_100192D60();
    *(void *)&long long v74 = v48;
    *((void *)&v74 + 1) = v49;
    unint64_t v75 = v50;
    unint64_t v76 = v51;
    swift_getOpaqueTypeConformance2();
    uint64_t v52 = sub_1000A1370(&qword_100958098);
    unint64_t v53 = sub_10034E608();
    *(void *)&long long v74 = v52;
    *((void *)&v74 + 1) = v49;
    unint64_t v75 = v53;
    unint64_t v76 = v51;
    swift_getOpaqueTypeConformance2();
    uint64_t v46 = (uint64_t)v69;
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v47, v7);
  }
  uint64_t v54 = v66;
  sub_10034CC08(v66);
  sub_10034E4DC((uint64_t)&v91, (uint64_t)v72);
  uint64_t v55 = v70;
  sub_1000AEF2C(v46, v70, &qword_100958068);
  uint64_t v56 = v71;
  sub_1000AEF2C(v54, v71, &qword_100958048);
  sub_10034E4DC((uint64_t)v72, (uint64_t)v73);
  uint64_t v57 = v67;
  sub_10034E4DC((uint64_t)v73, v67);
  uint64_t v58 = sub_1000AFA94(&qword_1009580A8);
  sub_1000AEF2C(v55, v57 + *(int *)(v58 + 48), &qword_100958068);
  sub_1000AEF2C(v56, v57 + *(int *)(v58 + 64), &qword_100958048);
  sub_10034E724((uint64_t)v73, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10034E6CC);
  sub_10034E724((uint64_t)&v91, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10034E6CC);
  sub_10008DB18(v54, &qword_100958048);
  sub_10008DB18(v46, &qword_100958068);
  sub_10034E724((uint64_t)&v91, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10034E7A8);
  sub_10008DB18(v56, &qword_100958048);
  sub_10008DB18(v55, &qword_100958068);
  sub_10034E4DC((uint64_t)v72, (uint64_t)&v74);
  return sub_10034E724((uint64_t)&v74, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10034E7A8);
}

uint64_t sub_10034C5AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  v24[1] = a1;
  v24[0] = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v3 = *(void *)(v24[0] - 8);
  __chkstk_darwin(v24[0]);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100958090);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100958078);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  long long v14 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v13 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v13 + 96) = v14;
  *(void *)(v13 + 112) = *(void *)(v2 + 96);
  long long v15 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v13 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v13 + 32) = v15;
  long long v16 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v13 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v13 + 64) = v16;
  v24[4] = v2;
  sub_10034E83C(v2);
  sub_1000AFA94(&qword_1009580B0);
  sub_10034E8CC();
  Button.init(action:label:)();
  id v17 = [self as_competitionButtonGold];
  uint64_t v18 = Color.init(uiColor:)();
  uint64_t KeyPath = swift_getKeyPath();
  v24[5] = v18;
  swift_retain();
  uint64_t v20 = AnyShapeStyle.init<A>(_:)();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v9, v6);
  swift_release();
  uint64_t v21 = (uint64_t *)&v12[*(int *)(v10 + 36)];
  *uint64_t v21 = KeyPath;
  v21[1] = v20;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  BorderedProminentButtonStyle.init()();
  sub_10034E544();
  sub_100192D60();
  uint64_t v22 = v24[0];
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v22);
  return sub_10008DB18((uint64_t)v12, &qword_100958078);
}

uint64_t sub_10034C8DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v26 = a1;
  uint64_t v25 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v3 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_10094C408);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100958098);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  long long v14 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v13 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v13 + 96) = v14;
  *(void *)(v13 + 112) = *(void *)(v2 + 96);
  long long v15 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v13 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v13 + 32) = v15;
  long long v16 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v13 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v13 + 64) = v16;
  sub_10034E83C(v2);
  sub_1000AFA94(&qword_10094C420);
  sub_1000E20A4();
  Button.init(action:label:)();
  id v17 = [self as_competitionButtonGold];
  uint64_t v18 = Color.init(uiColor:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v27 = v18;
  swift_retain();
  uint64_t v20 = AnyShapeStyle.init<A>(_:)();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v9, v6);
  swift_release();
  uint64_t v21 = (uint64_t *)&v12[*(int *)(v10 + 36)];
  *uint64_t v21 = KeyPath;
  v21[1] = v20;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  BorderedProminentButtonStyle.init()();
  sub_10034E608();
  sub_100192D60();
  uint64_t v22 = v25;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v22);
  return sub_10008DB18((uint64_t)v12, &qword_100958098);
}

uint64_t sub_10034CC08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v2 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  uint64_t v41 = v3;
  __chkstk_darwin(v2);
  uint64_t v38 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10094C408);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100958098);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1000AFA94(&qword_100958050);
  uint64_t v12 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  long long v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_allocObject();
  long long v16 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v15 + 80) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v15 + 96) = v16;
  *(void *)(v15 + 112) = *(void *)(v1 + 96);
  long long v17 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v15 + 32) = v17;
  long long v18 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v15 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v15 + 64) = v18;
  sub_10034E83C(v1);
  sub_1000AFA94(&qword_10094C420);
  sub_1000E20A4();
  Button.init(action:label:)();
  id v19 = [self as_competitionGraphBackgroundGold];
  uint64_t v20 = Color.init(uiColor:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v43 = v20;
  swift_retain();
  uint64_t v22 = AnyShapeStyle.init<A>(_:)();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v8, v5);
  swift_release();
  uint64_t v23 = (uint64_t *)&v11[*(int *)(v9 + 36)];
  *uint64_t v23 = KeyPath;
  v23[1] = v22;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v24 = v38;
  BorderedProminentButtonStyle.init()();
  sub_10034E608();
  sub_100192D60();
  uint64_t v25 = v40;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v24, v25);
  sub_10008DB18((uint64_t)v11, &qword_100958098);
  LOBYTE(v20) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v34 = v42;
  uint64_t v35 = v39;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v42, v14, v39);
  uint64_t v36 = v34 + *(int *)(sub_1000AFA94(&qword_100958048) + 36);
  *(unsigned char *)uint64_t v36 = v20;
  *(void *)(v36 + 8) = v27;
  *(void *)(v36 + 16) = v29;
  *(void *)(v36 + 24) = v31;
  *(void *)(v36 + 32) = v33;
  *(unsigned char *)(v36 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v35);
}

uint64_t sub_10034D04C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  ASCompetitionVictoryStyleForBadge();
  UUID.init()();
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v7 = (id)ASEphemeralCompetitionVictoryAchievementForStyle();

  id v8 = [v1 thumbnailImageForAchievement:v7 size:52.0, 52.0];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = Image.init(uiImage:)();
  }
  else
  {

    return 0;
  }
  return v10;
}

id sub_10034D1A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = (id)ActivitySharingBundle();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 localizedStringForKey:v5 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1007509E0;
  id result = [*(id *)(a1 + 40) displayName];
  if (result)
  {
    id v9 = result;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    *(void *)(v7 + 56) = &type metadata for String;
    *(void *)(v7 + 64) = sub_1000AA64C();
    *(void *)(v7 + 32) = v10;
    *(void *)(v7 + 40) = v12;
    String.init(format:_:)();
    swift_bridgeObjectRelease();
    sub_1000A06D0();
    uint64_t v13 = Text.init<A>(_:)();
    uint64_t v15 = v14;
    uint64_t v17 = v16;
    LOBYTE(v9) = v18 & 1;
    uint64_t v19 = sub_10034D04C();
    *(void *)a2 = v13;
    *(void *)(a2 + 8) = v15;
    *(unsigned char *)(a2 + 16) = (_BYTE)v9;
    *(void *)(a2 + 24) = v17;
    *(void *)(a2 + 32) = v19;
    sub_1000A1750(v13, v15, (char)v9);
    swift_bridgeObjectRetain();
    sub_1000A06C0(v13, v15, (char)v9);
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10034D354(_OWORD *a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v5 = a1[3];
  v13[2] = a1[2];
  v13[3] = v5;
  v14[0] = a1[4];
  *(_OWORD *)((char *)v14 + 9) = *(_OWORD *)((char *)a1 + 73);
  long long v6 = a1[1];
  v13[0] = *a1;
  v13[1] = v6;
  uint64_t v7 = (_OWORD *)swift_allocObject();
  long long v8 = a1[3];
  v7[3] = a1[2];
  v7[4] = v8;
  v7[5] = a1[4];
  *(_OWORD *)((char *)v7 + 89) = *(_OWORD *)((char *)a1 + 73);
  long long v9 = a1[1];
  v7[1] = *a1;
  v7[2] = v9;
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = &unk_100958128;
  v11[5] = v7;
  sub_10034EB78((uint64_t)v13);
  swift_retain();
  sub_1000713D0((uint64_t)v4, (uint64_t)&unk_100958130, (uint64_t)v11);
  swift_release();
  return swift_release();
}

uint64_t sub_10034D4D8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000DBD6C;
  return sub_10059816C();
}

__n128 sub_10034D568@<Q0>(uint64_t a1@<X8>)
{
  id v2 = (id)ActivitySharingBundle();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 localizedStringForKey:v3 value:0 table:0];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  *(void *)&v26[0] = v5;
  *((void *)&v26[0] + 1) = v7;
  sub_1000A06D0();
  uint64_t v8 = Text.init<A>(_:)();
  uint64_t v10 = v9;
  char v12 = v11;
  if (qword_10094A9F0 != -1) {
    swift_once();
  }
  uint64_t v13 = Text.font(_:)();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  sub_1000A06C0(v8, v10, v12 & 1);
  swift_bridgeObjectRelease();
  uint64_t v20 = static Alignment.center.getter();
  sub_1000177EC(0.0, 1, 0.0, 1, INFINITY, 0, 38.0, 0, (uint64_t)v26, 0.0, 1, 0.0, 1, v20, v21, v13, v15, v19, v17);
  sub_1000A06C0(v13, v15, v19);
  swift_bridgeObjectRelease();
  long long v22 = v26[7];
  *(_OWORD *)(a1 + 96) = v26[6];
  *(_OWORD *)(a1 + 112) = v22;
  *(_OWORD *)(a1 + 128) = v26[8];
  long long v23 = v26[3];
  *(_OWORD *)(a1 + 32) = v26[2];
  *(_OWORD *)(a1 + 48) = v23;
  long long v24 = v26[5];
  *(_OWORD *)(a1 + 64) = v26[4];
  *(_OWORD *)(a1 + 80) = v24;
  __n128 result = (__n128)v26[1];
  *(_OWORD *)a1 = v26[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_10034D758(_OWORD *a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v5 = a1[3];
  v13[2] = a1[2];
  v13[3] = v5;
  v14[0] = a1[4];
  *(_OWORD *)((char *)v14 + 9) = *(_OWORD *)((char *)a1 + 73);
  long long v6 = a1[1];
  v13[0] = *a1;
  v13[1] = v6;
  uint64_t v7 = (_OWORD *)swift_allocObject();
  long long v8 = a1[3];
  v7[3] = a1[2];
  v7[4] = v8;
  v7[5] = a1[4];
  *(_OWORD *)((char *)v7 + 89) = *(_OWORD *)((char *)a1 + 73);
  long long v9 = a1[1];
  v7[1] = *a1;
  v7[2] = v9;
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  char v11 = (void *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = &unk_1009580E8;
  v11[5] = v7;
  sub_10034EB78((uint64_t)v13);
  swift_retain();
  sub_1000713D0((uint64_t)v4, (uint64_t)&unk_1009580F0, (uint64_t)v11);
  swift_release();
  return swift_release();
}

uint64_t sub_10034D8DC(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  type metadata accessor for MainActor();
  *(void *)(v1 + 64) = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10034D974, v3, v2);
}

uint64_t sub_10034D974()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_release();
  uint64_t v2 = (_OWORD *)swift_allocObject();
  long long v3 = *(_OWORD *)(v1 + 16);
  v2[1] = *(_OWORD *)v1;
  v2[2] = v3;
  long long v5 = *(_OWORD *)(v1 + 48);
  long long v4 = *(_OWORD *)(v1 + 64);
  long long v6 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)((char *)v2 + 89) = *(_OWORD *)(v1 + 73);
  v2[4] = v5;
  v2[5] = v4;
  v2[3] = v6;
  uint64_t v7 = swift_allocObject();
  long long v8 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v7 + 32) = v8;
  long long v9 = *(_OWORD *)(v1 + 32);
  long long v10 = *(_OWORD *)(v1 + 48);
  long long v11 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v7 + 89) = *(_OWORD *)(v1 + 73);
  *(_OWORD *)(v7 + 64) = v10;
  *(_OWORD *)(v7 + 80) = v11;
  *(_OWORD *)(v7 + 48) = v9;
  *(void *)(v7 + 112) = &unk_1009580F8;
  *(void *)(v7 + 120) = v2;
  char v12 = *(void **)(v1 + 40);
  uint64_t v13 = *(void *)(v1 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 16) = v12;
  *(void *)(v0 + 24) = v13;
  *(void *)(v0 + 32) = &unk_100958100;
  *(void *)(v0 + 40) = v7;
  *(unsigned char *)(v0 + 48) = 12;
  sub_10034EB78(v1);
  sub_10034EB78(v1);
  id v14 = v12;
  swift_retain();
  static Published.subscript.setter();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

id sub_10034DAF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = Image.init(systemName:)();
  if (qword_10094A9F8 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_100958038;
  long long v6 = self;
  swift_retain();
  id v7 = [v6 mainBundle];
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 localizedStringForKey:v8 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1007509E0;
  id result = [*(id *)(a1 + 40) displayName];
  if (result)
  {
    char v12 = result;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;

    *(void *)(v10 + 56) = &type metadata for String;
    *(void *)(v10 + 64) = sub_1000AA64C();
    *(void *)(v10 + 32) = v13;
    *(void *)(v10 + 40) = v15;
    uint64_t v16 = String.init(format:_:)();
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    *(void *)&long long v41 = v16;
    *((void *)&v41 + 1) = v18;
    sub_1000A06D0();
    uint64_t v19 = Text.init<A>(_:)();
    uint64_t v21 = v20;
    char v23 = v22;
    uint64_t v25 = v24;
    uint64_t v54 = v4;
    uint64_t v55 = v5;
    swift_retain();
    swift_retain();
    uint64_t v26 = static VerticalAlignment.center.getter();
    uint64_t v40 = v19;
    char v39 = v23 & 1;
    sub_10034DEB8(&v54, v19, v21, v23 & 1, v25, (uint64_t)&v41);
    swift_release();
    swift_release();
    long long v27 = v41;
    long long v28 = v42;
    char v29 = v43;
    uint64_t v30 = *((void *)&v43 + 1);
    if (qword_10094A9F0 != -1) {
      swift_once();
    }
    uint64_t v31 = qword_100958030;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v54 = v26;
    uint64_t v55 = 0x4008000000000000;
    char v56 = 0;
    long long v57 = v27;
    long long v58 = v28;
    char v59 = v29;
    uint64_t v60 = v30;
    uint64_t v61 = KeyPath;
    uint64_t v62 = v31;
    swift_retain();
    static Alignment.center.getter();
    sub_1004DDB8C(0.0, 1, 0.0, 1, INFINITY, 0, 38.0, 0, (uint64_t)&v41, 0.0, 1, 0.0, 1);
    sub_1000A06C0(v40, v21, v39);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000A06C0(v28, *((uint64_t *)&v28 + 1), v29);
    swift_release();
    swift_release();
    id result = (id)swift_bridgeObjectRelease();
    long long v33 = v52;
    *(_OWORD *)(a2 + 160) = v51;
    *(_OWORD *)(a2 + 176) = v33;
    *(void *)(a2 + 192) = v53;
    long long v34 = v48;
    *(_OWORD *)(a2 + 96) = v47;
    *(_OWORD *)(a2 + 112) = v34;
    long long v35 = v50;
    *(_OWORD *)(a2 + 128) = v49;
    *(_OWORD *)(a2 + 144) = v35;
    long long v36 = v44;
    *(_OWORD *)(a2 + 32) = v43;
    *(_OWORD *)(a2 + 48) = v36;
    long long v37 = v46;
    *(_OWORD *)(a2 + 64) = v45;
    *(_OWORD *)(a2 + 80) = v37;
    long long v38 = v42;
    *(_OWORD *)a2 = v41;
    *(_OWORD *)(a2 + 16) = v38;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10034DEB8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8 = a1[1];
  *(void *)a6 = *a1;
  *(void *)(a6 + 8) = v8;
  *(void *)(a6 + 16) = a2;
  *(void *)(a6 + 24) = a3;
  char v9 = a4 & 1;
  *(unsigned char *)(a6 + 32) = a4 & 1;
  *(void *)(a6 + 40) = a5;
  swift_retain();
  swift_retain();
  sub_1000A1750(a2, a3, v9);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1000A1750(a2, a3, v9);
  swift_bridgeObjectRetain();
  sub_1000A06C0(a2, a3, v9);
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10034DF8C(_OWORD *a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v5 = a1[3];
  v13[2] = a1[2];
  v13[3] = v5;
  v14[0] = a1[4];
  *(_OWORD *)((char *)v14 + 9) = *(_OWORD *)((char *)a1 + 73);
  long long v6 = a1[1];
  v13[0] = *a1;
  v13[1] = v6;
  id v7 = (_OWORD *)swift_allocObject();
  long long v8 = a1[3];
  v7[3] = a1[2];
  v7[4] = v8;
  v7[5] = a1[4];
  *(_OWORD *)((char *)v7 + 89) = *(_OWORD *)((char *)a1 + 73);
  long long v9 = a1[1];
  v7[1] = *a1;
  v7[2] = v9;
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  long long v11 = (void *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = &unk_100958110;
  v11[5] = v7;
  sub_10034EB78((uint64_t)v13);
  swift_retain();
  sub_1000713D0((uint64_t)v4, (uint64_t)&unk_100958118, (uint64_t)v11);
  swift_release();
  return swift_release();
}

uint64_t sub_10034E110(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  type metadata accessor for MainActor();
  *(void *)(v1 + 64) = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10034E1A8, v3, v2);
}

uint64_t sub_10034E1A8()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_release();
  uint64_t v2 = *(void **)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 16) = v2;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0;
  *(void *)(v0 + 24) = v3;
  *(unsigned char *)(v0 + 48) = 0;
  id v4 = v2;
  swift_retain();
  static Published.subscript.setter();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

__n128 sub_10034E278@<Q0>(uint64_t a1@<X8>)
{
  id v2 = (id)ActivitySharingBundle();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 localizedStringForKey:v3 value:0 table:0];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  *(void *)&v26[0] = v5;
  *((void *)&v26[0] + 1) = v7;
  sub_1000A06D0();
  uint64_t v8 = Text.init<A>(_:)();
  uint64_t v10 = v9;
  char v12 = v11;
  if (qword_10094A9F0 != -1) {
    swift_once();
  }
  uint64_t v13 = Text.font(_:)();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  sub_1000A06C0(v8, v10, v12 & 1);
  swift_bridgeObjectRelease();
  uint64_t v20 = static Alignment.center.getter();
  sub_1000177EC(0.0, 1, 0.0, 1, INFINITY, 0, 38.0, 0, (uint64_t)v26, 0.0, 1, 0.0, 1, v20, v21, v13, v15, v19, v17);
  sub_1000A06C0(v13, v15, v19);
  swift_bridgeObjectRelease();
  long long v22 = v26[7];
  *(_OWORD *)(a1 + 96) = v26[6];
  *(_OWORD *)(a1 + 112) = v22;
  *(_OWORD *)(a1 + 128) = v26[8];
  long long v23 = v26[3];
  *(_OWORD *)(a1 + 32) = v26[2];
  *(_OWORD *)(a1 + 48) = v23;
  long long v24 = v26[5];
  *(_OWORD *)(a1 + 64) = v26[4];
  *(_OWORD *)(a1 + 80) = v24;
  __n128 result = (__n128)v26[1];
  *(_OWORD *)a1 = v26[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_10034E468@<X0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 80);
  void v8[4] = *(_OWORD *)(v1 + 64);
  v8[5] = v3;
  uint64_t v9 = *(void *)(v1 + 96);
  long long v4 = *(_OWORD *)(v1 + 16);
  v8[0] = *(_OWORD *)v1;
  v8[1] = v4;
  long long v5 = *(_OWORD *)(v1 + 48);
  v8[2] = *(_OWORD *)(v1 + 32);
  v8[3] = v5;
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v6 = sub_1000AFA94(&qword_100958040);
  return sub_10034BE58((uint64_t)v8, a1 + *(int *)(v6 + 44));
}

uint64_t sub_10034E4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100958070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10034E544()
{
  unint64_t result = qword_100958080;
  if (!qword_100958080)
  {
    sub_1000A1370(&qword_100958078);
    sub_1000A132C(&qword_100958088, &qword_100958090);
    sub_1000A132C(&qword_1009532A8, &qword_1009532B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100958080);
  }
  return result;
}

unint64_t sub_10034E608()
{
  unint64_t result = qword_1009580A0;
  if (!qword_1009580A0)
  {
    sub_1000A1370(&qword_100958098);
    sub_1000A132C(&qword_10094C430, &qword_10094C408);
    sub_1000A132C(&qword_1009532A8, &qword_1009532B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009580A0);
  }
  return result;
}

uint64_t sub_10034E6CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  if (a7)
  {
    sub_1000A1750(a4, a5, a6 & 1);
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10034E724(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 216);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    v4);
  return a1;
}

uint64_t sub_10034E7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  if (a7)
  {
    sub_1000A06C0(a4, a5, a6 & 1);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

double sub_10034E800(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 201) = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_10034E82C()
{
  return sub_10034D758((_OWORD *)(v0 + 16));
}

id sub_10034E834@<X0>(uint64_t a1@<X8>)
{
  return sub_10034DAF4(*(void *)(v1 + 16), a1);
}

uint64_t sub_10034E83C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 8);
  long long v3 = *(void **)(a1 + 40);
  char v4 = *(void **)(a1 + 80);
  long long v5 = *(void **)(a1 + 96);
  id v6 = *(id *)(a1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v7 = v4;
  id v8 = v5;
  swift_retain();
  id v9 = v2;
  swift_retain();
  id v10 = v3;
  return a1;
}

unint64_t sub_10034E8CC()
{
  unint64_t result = qword_1009580B8;
  if (!qword_1009580B8)
  {
    sub_1000A1370(&qword_1009580B0);
    sub_10034E948();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009580B8);
  }
  return result;
}

unint64_t sub_10034E948()
{
  unint64_t result = qword_1009580C0;
  if (!qword_1009580C0)
  {
    sub_1000A1370(&qword_1009580C8);
    sub_1000A132C(&qword_1009580D0, &qword_1009580D8);
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009580C0);
  }
  return result;
}

uint64_t sub_10034EA20()
{
  id v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *id v2 = v1;
  v2[1] = sub_1000DBD6C;
  return sub_10034D8DC(v0 + 16);
}

uint64_t sub_10034EAB8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  id v6 = (int *)v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_1000DBD6C;
  return sub_10069F30C(a1, v4, v5, v6);
}

uint64_t sub_10034EB78(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  long long v3 = *(void **)(a1 + 40);
  uint64_t v4 = *(void **)(a1 + 80);
  id v5 = *(id *)(a1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v4;
  swift_retain();
  id v7 = v2;
  swift_retain();
  id v8 = v3;
  return a1;
}

uint64_t sub_10034EBFC()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1000DBD6C;
  return sub_100599284(v0 + 16);
}

uint64_t sub_10034EC90()
{
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10034ED08()
{
  uint64_t v2 = v0 + 16;
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 120);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *id v5 = v1;
  v5[1] = sub_1000DBD6C;
  return sub_100599D4C(v2, v4, v3);
}

uint64_t sub_10034EDBC()
{
  return sub_10034DF8C((_OWORD *)(v0 + 16));
}

uint64_t sub_10034EDC8()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1000DBD6C;
  return sub_10034E110(v0 + 16);
}

uint64_t sub_10034EE60(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  id v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10005DB5C;
  return sub_10069F30C(a1, v4, v5, v6);
}

uint64_t sub_10034EF24()
{
  return sub_10034D354((_OWORD *)(v0 + 16));
}

uint64_t sub_10034EF30()
{
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10034EFA0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000DBD6C;
  return sub_10034D4D8();
}

uint64_t sub_10034F038()
{
  return sub_1000A132C(&qword_100958138, &qword_100958140);
}

unint64_t sub_10034F078()
{
  unint64_t result = qword_100958148;
  if (!qword_100958148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100958148);
  }
  return result;
}

uint64_t sub_10034F0D0()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_1000258C4(v0, qword_100997D18);
  sub_1000876DC(v0, (uint64_t)qword_100997D18);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_10034F134()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_10034F168@<X0>(void *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

void sub_10034F1A4(id *a1)
{
  id v1 = *a1;
  IntentParameter.wrappedValue.setter();
}

unint64_t sub_10034F1EC()
{
  unint64_t result = qword_100958150;
  if (!qword_100958150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100958150);
  }
  return result;
}

uint64_t sub_10034F240(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10034F8D4();
  unint64_t v5 = sub_1002DEEAC();

  return static URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

unint64_t sub_10034F2AC()
{
  unint64_t result = qword_100958158;
  if (!qword_100958158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100958158);
  }
  return result;
}

unint64_t sub_10034F304()
{
  unint64_t result = qword_100958160;
  if (!qword_100958160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100958160);
  }
  return result;
}

uint64_t sub_10034F358()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10034F3A8@<X0>(uint64_t a1@<X8>)
{
  if (qword_10094AA00 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_1000876DC(v2, (uint64_t)qword_100997D18);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_10034F450(uint64_t a1)
{
  unint64_t v2 = sub_10034F8D4();

  return static OpenIntent.openAppWhenRun.getter(a1, v2);
}

uint64_t sub_10034F48C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  unint64_t v5 = sub_10034F8D4();
  unint64_t v6 = sub_10034F928();
  unint64_t v7 = sub_1002DEEAC();
  *unint64_t v4 = v2;
  v4[1] = sub_1001A15A8;
  return URLRepresentableIntent<>.perform()(a2, v5, v6, v7);
}

uint64_t sub_10034F558@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10034F5CC();
  *a1 = result;
  return result;
}

uint64_t sub_10034F580(uint64_t a1)
{
  unint64_t v2 = sub_10034F1EC();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenMindfulnessSessionIntent()
{
  return &type metadata for OpenMindfulnessSessionIntent;
}

uint64_t sub_10034F5CC()
{
  v17[0] = type metadata accessor for InputConnectionBehavior();
  uint64_t v0 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  unint64_t v2 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AFA94(&qword_10094D320);
  __chkstk_darwin(v3 - 8);
  unint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v8 = (char *)v17 - v7;
  uint64_t v9 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v9 - 8);
  char v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_1000AFA94(&qword_100958170);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  v17[1] = 0;
  uint64_t v14 = type metadata accessor for IntentDialog();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v5, 1, 1, v14);
  (*(void (**)(char *, void, void))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v17[0]);
  sub_1002DE698();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

unint64_t sub_10034F8D4()
{
  unint64_t result = qword_100958178;
  if (!qword_100958178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100958178);
  }
  return result;
}

unint64_t sub_10034F928()
{
  unint64_t result = qword_100958180;
  if (!qword_100958180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100958180);
  }
  return result;
}

uint64_t destroy for HistoryItemView(uint64_t a1)
{
  swift_release();
  uint64_t result = _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + 8);
  if (*(void *)(a1 + 72))
  {
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + 48);
  }
  return result;
}

uint64_t initializeWithCopy for HistoryItemView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = a2 + 8;
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  v7(a1 + 8, v4, v6);
  id v8 = (_OWORD *)(a1 + 48);
  uint64_t v9 = (_OWORD *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 72);
  if (v10)
  {
    uint64_t v11 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = v10;
    *(void *)(a1 + 80) = v11;
    (**(void (***)(_OWORD *, _OWORD *))(v10 - 8))(v8, v9);
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 64);
    *id v8 = *v9;
    *(_OWORD *)(a1 + 64) = v12;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
  }
  return a1;
}

uint64_t assignWithCopy for HistoryItemView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  sub_10009EDF0((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  uint64_t v4 = *(void *)(a2 + 72);
  if (!*(void *)(a1 + 72))
  {
    if (v4)
    {
      *(void *)(a1 + 72) = v4;
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 48, a2 + 48);
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 48);
    long long v6 = *(_OWORD *)(a2 + 64);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(_OWORD *)(a1 + 48) = v5;
    *(_OWORD *)(a1 + 64) = v6;
    return a1;
  }
  if (!v4)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + 48);
    goto LABEL_7;
  }
  sub_10009EDF0((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
  return a1;
}

uint64_t assignWithTake for HistoryItemView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  if (*(void *)(a1 + 72)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + 48);
  }
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

ValueMetadata *type metadata accessor for HistoryItemView()
{
  return &type metadata for HistoryItemView;
}

uint64_t sub_10034FC28()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10034FC44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v17 = a1;
  uint64_t v2 = sub_1000AFA94(&qword_100958188);
  __chkstk_darwin(v2 - 8);
  long long v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_100958190);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_100958198);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10034FE8C(v1, (uint64_t)v4);
  uint64_t v12 = v1[4];
  uint64_t v11 = v1[5];
  sub_10007E4EC(v1 + 1, v12);
  (*(void (**)(uint64_t, uint64_t))(v11 + 48))(v12, v11);
  sub_1000AEEC8((uint64_t)v4, (uint64_t)v7, &qword_100958188);
  sub_1000AEF2C((uint64_t)v7, (uint64_t)v10, &qword_100958190);
  v10[*(int *)(v8 + 36)] = 0;
  sub_10008DB18((uint64_t)v7, &qword_100958190);
  sub_100291348((uint64_t)v1, (uint64_t)v18);
  uint64_t v13 = swift_allocObject();
  long long v14 = v18[3];
  *(_OWORD *)(v13 + 48) = v18[2];
  *(_OWORD *)(v13 + 64) = v14;
  *(_OWORD *)(v13 + 80) = v18[4];
  *(void *)(v13 + 96) = v19;
  long long v15 = v18[1];
  *(_OWORD *)(v13 + 16) = v18[0];
  *(_OWORD *)(v13 + 32) = v15;
  sub_100350BF8();
  View.onTapGesture(count:perform:)();
  swift_release();
  return sub_10008DB18((uint64_t)v10, &qword_100958198);
}

uint64_t sub_10034FE8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v90 = a2;
  uint64_t v3 = type metadata accessor for AttributedString();
  uint64_t v78 = *(void *)(v3 - 8);
  uint64_t v79 = v3;
  __chkstk_darwin(v3);
  char v77 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v76 = (char *)&v74 - v6;
  uint64_t v88 = type metadata accessor for FitnessPlusStackItemView();
  __chkstk_darwin(v88);
  uint64_t v80 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for MindfulnessItemView();
  __chkstk_darwin(v83);
  uint64_t v81 = (uint64_t)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100950DA8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FitnessPlusStackViewModel();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v75 = (uint64_t)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  char v82 = (char *)&v74 - v16;
  uint64_t v84 = sub_1000AFA94(&qword_1009581B0);
  __chkstk_darwin(v84);
  uint64_t v86 = (uint64_t)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = (uint64_t (*)(void))sub_1000AFA94(&qword_1009581B8);
  __chkstk_darwin(v89);
  uint64_t v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1000AFA94(&qword_1009581C0);
  __chkstk_darwin(v85);
  uint64_t v21 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000AFA94(&qword_1009581C8);
  __chkstk_darwin(v22 - 8);
  uint64_t v87 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for WorkoutItemView();
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10008E75C((uint64_t)(a1 + 1), (uint64_t)v92);
  sub_1000AFA94((uint64_t *)&unk_100955630);
  sub_1002DDB04();
  if (swift_dynamicCast())
  {
    long long v27 = *(void **)(*a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_workoutFormattingManager);
    long long v28 = *(void **)(*a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_seymourCatalogItemDataProvider);
    char v29 = *(void **)(*a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_awardsDataProvider);
    char v30 = *(unsigned char *)(*a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_size);
    uint64_t v31 = *(void *)(*a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_workoutImageProvider);
    id v32 = v91;
    char v82 = v21;
    id v33 = v32;
    id v34 = v27;
    id v35 = v28;
    id v36 = v29;
    swift_retain();
    sub_10057C898(v33, v34, v35, v36, v30, v31, (uint64_t)v26);
    sub_100350F2C((uint64_t)v26, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for WorkoutItemView);
    swift_storeEnumTagMultiPayload();
    sub_100350EE4(&qword_1009581E0, (void (*)(uint64_t))type metadata accessor for WorkoutItemView);
    sub_100350EE4(&qword_1009581E8, (void (*)(uint64_t))type metadata accessor for MindfulnessItemView);
    uint64_t v37 = (uint64_t)v82;
    _ConditionalContent<>.init(storage:)();
    sub_1000AEF2C(v37, v86, &qword_1009581C0);
    swift_storeEnumTagMultiPayload();
    sub_100350E08();
    sub_100350EE4(&qword_1009581F0, (void (*)(uint64_t))type metadata accessor for FitnessPlusStackItemView);
    long long v38 = v87;
    _ConditionalContent<>.init(storage:)();

    sub_10008DB18(v37, &qword_1009581C0);
    sub_100350F94((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for WorkoutItemView);
    uint64_t v39 = sub_1000AFA94(&qword_1009581D0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 0, 1, v39);
    uint64_t v40 = (uint64_t)v38;
  }
  else
  {
    uint64_t v74 = v24;
    sub_10008E75C((uint64_t)(a1 + 1), (uint64_t)v92);
    type metadata accessor for MindfulnessSessionViewModel();
    if (swift_dynamicCast())
    {
      long long v41 = *(void **)(*a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_mindfulnessFormattingManager);
      long long v42 = *(void **)(*a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_fitnessAppContext);
      char v43 = *(unsigned char *)(*a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_size);
      id v44 = v91;
      id v45 = v41;
      id v46 = v42;
      uint64_t v47 = v81;
      sub_10022A3C8(v44, v45, v46, v43, v81);
      sub_100350F2C(v47, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for MindfulnessItemView);
      swift_storeEnumTagMultiPayload();
      sub_100350EE4(&qword_1009581E0, (void (*)(uint64_t))type metadata accessor for WorkoutItemView);
      sub_100350EE4(&qword_1009581E8, (void (*)(uint64_t))type metadata accessor for MindfulnessItemView);
      _ConditionalContent<>.init(storage:)();
      sub_1000AEF2C((uint64_t)v21, v86, &qword_1009581C0);
      swift_storeEnumTagMultiPayload();
      sub_100350E08();
      sub_100350EE4(&qword_1009581F0, (void (*)(uint64_t))type metadata accessor for FitnessPlusStackItemView);
      long long v48 = v87;
      _ConditionalContent<>.init(storage:)();

      sub_10008DB18((uint64_t)v21, &qword_1009581C0);
      sub_100350F94(v47, (uint64_t (*)(void))type metadata accessor for MindfulnessItemView);
      uint64_t v49 = sub_1000AFA94(&qword_1009581D0);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 0, 1, v49);
      uint64_t v40 = (uint64_t)v48;
    }
    else
    {
      sub_10008E75C((uint64_t)(a1 + 1), (uint64_t)v92);
      char v50 = swift_dynamicCast();
      long long v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
      if ((v50 & 1) == 0)
      {
        v51(v11, 1, 1, v12);
        sub_10008DB18((uint64_t)v11, &qword_100950DA8);
        uint64_t v73 = sub_1000AFA94(&qword_1009581D0);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v90, 1, 1, v73);
      }
      v51(v11, 0, 1, v12);
      uint64_t v52 = (uint64_t)v82;
      sub_100350DA4((uint64_t)v11, (uint64_t)v82);
      uint64_t v53 = v52;
      uint64_t v54 = v75;
      uint64_t v89 = (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel;
      sub_100350F2C(v53, v75, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
      uint64_t v55 = *(void **)(*a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_stackFormattingManager);
      char v56 = *(void **)(*a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_seymourCatalogItemDataProvider);
      char v57 = *(unsigned char *)(*a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_size);
      long long v58 = (int *)v88;
      uint64_t v59 = *(int *)(v88 + 32);
      id v91 = 0;
      id v60 = v55;
      id v61 = v56;
      sub_1000AFA94(&qword_100950278);
      State.init(wrappedValue:)();
      uint64_t v62 = (uint64_t)v80;
      *(_OWORD *)&v80[v59] = v92[0];
      sub_100350F2C(v54, v62, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
      *(void *)(v62 + v58[5]) = v60;
      *(void *)(v62 + v58[6]) = v61;
      *(unsigned char *)(v62 + v58[7]) = v57;
      id v63 = v60;
      id v64 = v61;
      sub_1004761A4();
      uint64_t v65 = v76;
      AttributedString.init(_:)();
      uint64_t v66 = v78;
      uint64_t v67 = v79;
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v77, v65, v79);
      State.init(wrappedValue:)();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v67);

      uint64_t v68 = v54;
      uint64_t v69 = v89;
      sub_100350F94(v68, v89);
      sub_100350F2C(v62, v86, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackItemView);
      swift_storeEnumTagMultiPayload();
      sub_100350E08();
      sub_100350EE4(&qword_1009581F0, (void (*)(uint64_t))type metadata accessor for FitnessPlusStackItemView);
      uint64_t v70 = v87;
      _ConditionalContent<>.init(storage:)();
      sub_100350F94(v62, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackItemView);
      sub_100350F94((uint64_t)v82, v69);
      uint64_t v71 = sub_1000AFA94(&qword_1009581D0);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v70, 0, 1, v71);
      uint64_t v40 = (uint64_t)v70;
    }
  }
  return sub_1000AEEC8(v40, v90, &qword_1009581C8);
}

uint64_t sub_100350AB0(uint64_t a1)
{
  sub_10008E75C(a1 + 8, (uint64_t)v9);
  sub_1000AEF2C(a1 + 48, (uint64_t)v7, &qword_10094C750);
  if (v8)
  {
    uint64_t v2 = (char **)sub_10007E4EC(v7, v8);
    v6[3] = &type metadata for HistoryViewActionContext;
    v6[0] = swift_allocObject();
    sub_100350D48((uint64_t)v9, v6[0] + 16);
    uint64_t v3 = *v2;
    uint64_t v4 = swift_retain();
    sub_1004F91D4(v4, (uint64_t)v6, v3);
    sub_100350CBC((uint64_t)v9);
    sub_10008DB18((uint64_t)v6, &qword_100955A00);
    swift_release();
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v7);
  }
  else
  {
    sub_100350CBC((uint64_t)v9);
    return sub_10008DB18((uint64_t)v7, &qword_10094C750);
  }
}

uint64_t sub_100350BA0()
{
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 24);
  if (*(void *)(v0 + 88)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 64);
  }

  return swift_deallocObject();
}

uint64_t sub_100350BF0()
{
  return sub_100350AB0(v0 + 16);
}

unint64_t sub_100350BF8()
{
  unint64_t result = qword_1009581A0;
  if (!qword_1009581A0)
  {
    sub_1000A1370(&qword_100958198);
    sub_1000A132C(&qword_1009581A8, &qword_100958190);
    sub_1000A132C(&qword_10094C7A0, &qword_10094C7A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009581A0);
  }
  return result;
}

uint64_t sub_100350CBC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100350D10()
{
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_100350D48(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100350DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FitnessPlusStackViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100350E08()
{
  unint64_t result = qword_1009581D8;
  if (!qword_1009581D8)
  {
    sub_1000A1370(&qword_1009581C0);
    sub_100350EE4(&qword_1009581E0, (void (*)(uint64_t))type metadata accessor for WorkoutItemView);
    sub_100350EE4(&qword_1009581E8, (void (*)(uint64_t))type metadata accessor for MindfulnessItemView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009581D8);
  }
  return result;
}

uint64_t sub_100350EE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100350F2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100350F94(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100350FF4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100351050(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  sub_100091494(*(void *)v9, v11, v12);
  uint64_t v13 = *(void *)v8;
  uint64_t v14 = *(void *)(v8 + 8);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  char v15 = *(unsigned char *)(v8 + 16);
  *(unsigned char *)(v8 + 16) = v12;
  sub_1000917F8(v13, v14, v15);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v16 = a3[9];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)v18;
  uint64_t v20 = *(void *)(v18 + 8);
  unsigned __int8 v21 = *(unsigned char *)(v18 + 16);
  sub_1000908B0(*(void *)v18, v20, v21);
  uint64_t v22 = *(void *)v17;
  uint64_t v23 = *(void *)(v17 + 8);
  *(void *)uint64_t v17 = v19;
  *(void *)(v17 + 8) = v20;
  unsigned __int8 v24 = *(unsigned char *)(v17 + 16);
  *(unsigned char *)(v17 + 16) = v21;
  sub_1000904DC(v22, v23, v24);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  sub_10009EDF0((uint64_t *)(a1 + a3[11]), (uint64_t *)(a2 + a3[11]));
  sub_10009EDF0((uint64_t *)(a1 + a3[12]), (uint64_t *)(a2 + a3[12]));
  return a1;
}

uint64_t sub_100351190(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v11 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[9];
  uint64_t v13 = a3[10];
  uint64_t v14 = a1 + v12;
  char v15 = (long long *)(a2 + v12);
  long long v16 = *v15;
  *(unsigned char *)(v14 + 16) = *((unsigned char *)v15 + 16);
  *(_OWORD *)uint64_t v14 = v16;
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v17 = a3[11];
  uint64_t v18 = a3[12];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  long long v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  *(void *)(v19 + 32) = *(void *)(v20 + 32);
  uint64_t v22 = a1 + v18;
  uint64_t v23 = a2 + v18;
  *(void *)(v22 + 32) = *(void *)(v23 + 32);
  long long v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  return a1;
}

uint64_t sub_100351290(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 16);
  uint64_t v11 = *(void *)v8;
  uint64_t v12 = *(void *)(v8 + 8);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  char v13 = *(unsigned char *)(v8 + 16);
  *(unsigned char *)(v8 + 16) = v10;
  sub_1000917F8(v11, v12, v13);
  uint64_t v14 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  uint64_t v15 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  char v18 = *(unsigned char *)(v17 + 16);
  uint64_t v19 = *(void *)v16;
  uint64_t v20 = *(void *)(v16 + 8);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  unsigned __int8 v21 = *(unsigned char *)(v16 + 16);
  *(unsigned char *)(v16 + 16) = v18;
  sub_1000904DC(v19, v20, v21);
  uint64_t v22 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + v22);
  long long v25 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v25;
  *(void *)(v23 + 32) = *(void *)(v24 + 32);
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + v26);
  long long v29 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v29;
  *(void *)(v27 + 32) = *(void *)(v28 + 32);
  return a1;
}

uint64_t sub_1003513C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003513D8);
}

uint64_t sub_1003513D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 44) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10035149C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 44) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10035155C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v26[1] = a1;
  v26[2] = a2;
  uint64_t v27 = a3;
  uint64_t v4 = type metadata accessor for ScalarDictionary();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for MetricClickElement();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94((uint64_t *)&unk_100955650);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CatalogTipSectionItem();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v26 - v16;
  uint64_t v18 = type metadata accessor for CatalogTipCard();
  sub_1000AEF2C(v3 + *(int *)(v18 + 36), (uint64_t)v11, (uint64_t *)&unk_100955650);
  uint64_t v19 = type metadata accessor for CatalogTipSection();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v11, 1, v19) == 1)
  {
    sub_10008DB18((uint64_t)v11, (uint64_t *)&unk_100955650);
    uint64_t v20 = type metadata accessor for ImpressionMetrics();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v27, 1, 1, v20);
  }
  else
  {
    sub_100039970((uint64_t)&v11[*(int *)(v19 + 36)], (uint64_t)v14);
    sub_1000CABB4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
    sub_100042D14((uint64_t)v14, (uint64_t)v17);
    v26[0] = *(void *)&v17[*(int *)(v12 + 28)];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = (void *)ShelfLockupAttributedTagStrings.title.getter();
    id v23 = [v22 string];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for MetricClickElement.button(_:), v5);
    static MetricConstants.itemIdentifierType.getter();
    sub_10035193C((uint64_t)_swiftEmptyArrayStorage);
    ScalarDictionary.init()();
    uint64_t v24 = v27;
    ImpressionMetrics.init(parentId:elementId:name:clickElement:index:idType:additionalFields:custom:)();
    sub_1000CABB4((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CatalogTipSectionItem);
    uint64_t v25 = type metadata accessor for ImpressionMetrics();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
  }
}

unint64_t sub_10035193C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(&qword_1009582B0);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000AEF2C(v6, (uint64_t)&v15, &qword_1009582B8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_100351A74(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_10005C2B0(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100351A74(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_100351AEC(a1, a2, v4);
}

unint64_t sub_100351AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_100351C34(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  sub_100091494(*(void *)v9, v11, v12);
  uint64_t v13 = *(void *)v8;
  uint64_t v14 = *(void *)(v8 + 8);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  char v15 = *(unsigned char *)(v8 + 16);
  *(unsigned char *)(v8 + 16) = v12;
  sub_1000917F8(v13, v14, v15);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v16 = a3[9];
  long long v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = type metadata accessor for CatalogTipSection();
  uint64_t v20 = *(void *)(v19 - 8);
  unsigned __int8 v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (v23)
    {
      sub_1000CABB4((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
      goto LABEL_7;
    }
    id v125 = a3;
    *long long v17 = *v18;
    v17[1] = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    char v50 = (void *)v18[2];
    long long v51 = (void *)v17[2];
    void v17[2] = v50;
    id v52 = v50;

    uint64_t v53 = (void *)v18[3];
    uint64_t v54 = (void *)v17[3];
    void v17[3] = v53;
    id v55 = v53;

    *((unsigned char *)v17 + 32) = *((unsigned char *)v18 + 32);
    *((unsigned char *)v17 + 33) = *((unsigned char *)v18 + 33);
    uint64_t v122 = v19;
    id v124 = v18;
    uint64_t v56 = *(int *)(v19 + 36);
    char v57 = (char *)v17 + v56;
    long long v58 = (char *)v18 + v56;
    uint64_t v59 = type metadata accessor for ShelfLockupAttributedTagStrings();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 24))(v57, v58, v59);
    id v60 = (int *)type metadata accessor for CatalogTipSectionItem();
    uint64_t v61 = v60[5];
    uint64_t v62 = &v57[v61];
    id v120 = &v58[v61];
    uint64_t v63 = type metadata accessor for Artwork();
    uint64_t v64 = *(void *)(v63 - 8);
    id v113 = *(void (**)(char *, char *, uint64_t))(v64 + 24);
    v113(v62, v120, v63);
    uint64_t v65 = v60[6];
    uint64_t v66 = &v57[v65];
    uint64_t v67 = &v58[v65];
    *(void *)uint64_t v66 = *(void *)v67;
    *((void *)v66 + 1) = *((void *)v67 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v68 = v60[7];
    uint64_t v69 = &v57[v68];
    uint64_t v70 = &v58[v68];
    *(void *)uint64_t v69 = *(void *)v70;
    *((void *)v69 + 1) = *((void *)v70 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v118 = v57;
    uint64_t v71 = v60[8];
    long long v72 = &v57[v71];
    __dsta = v58;
    uint64_t v73 = &v58[v71];
    uint64_t v74 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
    LODWORD(v62) = v74(v72, 1, v63);
    int v75 = v74(v73, 1, v63);
    if (v62)
    {
      if (!v75)
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v72, v73, v63);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v72, 0, 1, v63);
LABEL_16:
        uint64_t v95 = v60[9];
        id v96 = &v118[v95];
        id v97 = &__dsta[v95];
        *(void *)id v96 = *(void *)v97;
        *((void *)v96 + 1) = *((void *)v97 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v98 = v60[10];
        id v99 = &v118[v98];
        id v100 = &__dsta[v98];
        *(void *)id v99 = *(void *)v100;
        *((void *)v99 + 1) = *((void *)v100 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v101 = v60[11];
        id v102 = &v118[v101];
        id v103 = &__dsta[v101];
        *(void *)id v102 = *(void *)v103;
        *((void *)v102 + 1) = *((void *)v103 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v104 = v60[12];
        id v105 = &v118[v104];
        id v106 = &__dsta[v104];
        uint64_t v107 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 24))(v105, v106, v107);
        uint64_t v108 = *(int *)(v122 + 40);
        id v109 = (void *)((char *)v17 + v108);
        id v110 = (void *)((char *)v124 + v108);
        *id v109 = *v110;
        v109[1] = v110[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_17:
        a3 = v125;
        goto LABEL_18;
      }
    }
    else
    {
      if (!v75)
      {
        v113(v72, v73, v63);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v64 + 8))(v72, v63);
    }
    uint64_t v94 = sub_1000AFA94(&qword_1009512E8);
    memcpy(v72, v73, *(void *)(*(void *)(v94 - 8) + 64));
    goto LABEL_16;
  }
  if (!v23)
  {
    uint64_t v114 = a2;
    uint64_t v117 = v20;
    id v119 = v17;
    id v123 = v18;
    id v125 = a3;
    *long long v17 = *v18;
    v17[1] = v18[1];
    uint64_t v24 = (void *)v18[2];
    void v17[2] = v24;
    uint64_t v25 = (void *)v18[3];
    void v17[3] = v25;
    *((unsigned char *)v17 + 32) = *((unsigned char *)v18 + 32);
    *((unsigned char *)v17 + 33) = *((unsigned char *)v18 + 33);
    uint64_t v121 = v19;
    uint64_t v26 = *(int *)(v19 + 36);
    uint64_t v27 = (char *)v17 + v26;
    uint64_t v28 = (char *)v18 + v26;
    uint64_t v29 = type metadata accessor for ShelfLockupAttributedTagStrings();
    char v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
    swift_bridgeObjectRetain();
    id v31 = v24;
    id v32 = v25;
    v30(v27, v28, v29);
    id v33 = (int *)type metadata accessor for CatalogTipSectionItem();
    uint64_t v34 = v33[5];
    id v35 = &v27[v34];
    id v36 = &v28[v34];
    uint64_t v37 = type metadata accessor for Artwork();
    uint64_t v38 = *(void *)(v37 - 8);
    id v112 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
    v112(v35, v36, v37);
    uint64_t v39 = v33[6];
    uint64_t v40 = &v27[v39];
    long long v41 = &v28[v39];
    *(void *)uint64_t v40 = *(void *)v41;
    *((void *)v40 + 1) = *((void *)v41 + 1);
    uint64_t v42 = v33[7];
    char v43 = &v27[v42];
    id v44 = &v28[v42];
    *(void *)char v43 = *(void *)v44;
    *((void *)v43 + 1) = *((void *)v44 + 1);
    uint64_t v45 = v33[8];
    __dst = &v27[v45];
    id v46 = &v28[v45];
    uint64_t v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v47(v46, 1, v37))
    {
      uint64_t v48 = sub_1000AFA94(&qword_1009512E8);
      memcpy(__dst, v46, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      v112(__dst, v46, v37);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 1, v37);
    }
    a2 = v114;
    uint64_t v76 = v33[9];
    char v77 = &v27[v76];
    uint64_t v78 = &v28[v76];
    *(void *)char v77 = *(void *)v78;
    *((void *)v77 + 1) = *((void *)v78 + 1);
    uint64_t v79 = v33[10];
    uint64_t v80 = &v27[v79];
    uint64_t v81 = &v28[v79];
    *(void *)uint64_t v80 = *(void *)v81;
    *((void *)v80 + 1) = *((void *)v81 + 1);
    uint64_t v82 = v33[11];
    uint64_t v83 = &v27[v82];
    uint64_t v84 = &v28[v82];
    *(void *)uint64_t v83 = *(void *)v84;
    *((void *)v83 + 1) = *((void *)v84 + 1);
    uint64_t v85 = v33[12];
    uint64_t v86 = &v27[v85];
    uint64_t v87 = &v28[v85];
    uint64_t v88 = type metadata accessor for URL();
    uint64_t v89 = *(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v89(v86, v87, v88);
    uint64_t v90 = *(int *)(v121 + 40);
    id v91 = (void *)((char *)v119 + v90);
    uint64_t v92 = (void *)((char *)v123 + v90);
    *id v91 = *v92;
    v91[1] = v92[1];
    char v93 = *(void (**)(void *, void, uint64_t, uint64_t))(v117 + 56);
    swift_bridgeObjectRetain();
    v93(v119, 0, 1, v121);
    goto LABEL_17;
  }
LABEL_7:
  uint64_t v49 = sub_1000AFA94((uint64_t *)&unk_100955650);
  memcpy(v17, v18, *(void *)(*(void *)(v49 - 8) + 64));
LABEL_18:
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1003524AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v11 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[9];
  uint64_t v13 = (_OWORD *)(a1 + v12);
  uint64_t v14 = (_OWORD *)(a2 + v12);
  uint64_t v15 = type metadata accessor for CatalogTipSection();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_1000AFA94((uint64_t *)&unk_100955650);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v42 = v16;
    long long v18 = v14[1];
    _OWORD *v13 = *v14;
    v13[1] = v18;
    *((_WORD *)v13 + 16) = *((_WORD *)v14 + 16);
    uint64_t v19 = *(int *)(v15 + 36);
    char v43 = v13;
    uint64_t v20 = (char *)v13 + v19;
    unsigned __int8 v21 = (char *)v14 + v19;
    uint64_t v22 = type metadata accessor for ShelfLockupAttributedTagStrings();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
    int v23 = (int *)type metadata accessor for CatalogTipSectionItem();
    uint64_t v24 = v23[5];
    uint64_t v38 = &v21[v24];
    __dsta = &v20[v24];
    uint64_t v25 = type metadata accessor for Artwork();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    v37(__dsta, v38, v25);
    *(_OWORD *)&v20[v23[6]] = *(_OWORD *)&v21[v23[6]];
    *(_OWORD *)&v20[v23[7]] = *(_OWORD *)&v21[v23[7]];
    uint64_t v27 = v23[8];
    uint64_t v39 = v26;
    __dst = &v20[v27];
    uint64_t v28 = &v21[v27];
    uint64_t v29 = v26;
    char v30 = v28;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v28, 1, v25))
    {
      uint64_t v31 = sub_1000AFA94(&qword_1009512E8);
      memcpy(__dst, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      v37(__dst, v30, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v25);
    }
    *(_OWORD *)&v20[v23[9]] = *(_OWORD *)&v21[v23[9]];
    *(_OWORD *)&v20[v23[10]] = *(_OWORD *)&v21[v23[10]];
    *(_OWORD *)&v20[v23[11]] = *(_OWORD *)&v21[v23[11]];
    uint64_t v32 = v23[12];
    id v33 = &v20[v32];
    uint64_t v34 = &v21[v32];
    uint64_t v35 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
    *(_OWORD *)((char *)v43 + *(int *)(v15 + 40)) = *(_OWORD *)((char *)v14 + *(int *)(v15 + 40));
    (*(void (**)(void))(v42 + 56))();
  }
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_100352848(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 16);
  uint64_t v11 = *(void *)v8;
  uint64_t v12 = *(void *)(v8 + 8);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  char v13 = *(unsigned char *)(v8 + 16);
  *(unsigned char *)(v8 + 16) = v10;
  sub_1000917F8(v11, v12, v13);
  uint64_t v14 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  uint64_t v15 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = type metadata accessor for CatalogTipSection();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (v22)
    {
      sub_1000CABB4((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
      goto LABEL_7;
    }
    id v106 = a3;
    uint64_t v37 = v17[1];
    void *v16 = *v17;
    v16[1] = v37;
    swift_bridgeObjectRelease();
    uint64_t v38 = (void *)v16[2];
    v16[2] = v17[2];

    uint64_t v39 = (void *)v16[3];
    v16[3] = v17[3];

    *((_WORD *)v16 + 16) = *((_WORD *)v17 + 16);
    uint64_t v102 = v18;
    uint64_t v104 = v17;
    uint64_t v40 = *(int *)(v18 + 36);
    long long v41 = (char *)v16 + v40;
    uint64_t v42 = (char *)v17 + v40;
    uint64_t v43 = type metadata accessor for ShelfLockupAttributedTagStrings();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 40))(v41, v42, v43);
    id v44 = (int *)type metadata accessor for CatalogTipSectionItem();
    uint64_t v45 = v44[5];
    id v46 = &v41[v45];
    uint64_t v47 = &v42[v45];
    uint64_t v48 = type metadata accessor for Artwork();
    uint64_t v49 = *(void *)(v48 - 8);
    uint64_t v95 = *(void (**)(char *, char *, uint64_t))(v49 + 40);
    v95(v46, v47, v48);
    uint64_t v50 = v44[6];
    long long v51 = &v41[v50];
    id v52 = &v42[v50];
    uint64_t v54 = *(void *)v52;
    uint64_t v53 = *((void *)v52 + 1);
    *(void *)long long v51 = v54;
    *((void *)v51 + 1) = v53;
    swift_bridgeObjectRelease();
    uint64_t v55 = v44[7];
    uint64_t v56 = &v41[v55];
    char v57 = &v42[v55];
    uint64_t v59 = *(void *)v57;
    uint64_t v58 = *((void *)v57 + 1);
    *(void *)uint64_t v56 = v59;
    *((void *)v56 + 1) = v58;
    swift_bridgeObjectRelease();
    uint64_t v60 = v44[8];
    uint64_t v98 = v42;
    uint64_t v61 = &v42[v60];
    uint64_t v62 = *(uint64_t (**)(void))(v49 + 48);
    id v96 = &v41[v60];
    LODWORD(v46) = v62();
    int v63 = ((uint64_t (*)(char *, uint64_t, uint64_t))v62)(v61, 1, v48);
    if (v46)
    {
      if (!v63)
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v96, v61, v48);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v96, 0, 1, v48);
        goto LABEL_18;
      }
      size_t v64 = *(void *)(*(void *)(sub_1000AFA94(&qword_1009512E8) - 8) + 64);
      uint64_t v65 = v96;
    }
    else
    {
      if (!v63)
      {
        v95(v96, v61, v48);
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v49 + 8))(v96, v48);
      size_t v64 = *(void *)(*(void *)(sub_1000AFA94(&qword_1009512E8) - 8) + 64);
      uint64_t v65 = v96;
    }
    memcpy(v65, v61, v64);
LABEL_18:
    uint64_t v70 = v44[9];
    uint64_t v71 = &v41[v70];
    long long v72 = &v98[v70];
    uint64_t v74 = *(void *)v72;
    uint64_t v73 = *((void *)v72 + 1);
    *(void *)uint64_t v71 = v74;
    *((void *)v71 + 1) = v73;
    swift_bridgeObjectRelease();
    uint64_t v75 = v44[10];
    uint64_t v76 = &v41[v75];
    char v77 = &v98[v75];
    uint64_t v79 = *(void *)v77;
    uint64_t v78 = *((void *)v77 + 1);
    *(void *)uint64_t v76 = v79;
    *((void *)v76 + 1) = v78;
    swift_bridgeObjectRelease();
    uint64_t v80 = v44[11];
    uint64_t v81 = &v41[v80];
    uint64_t v82 = &v98[v80];
    uint64_t v84 = *(void *)v82;
    uint64_t v83 = *((void *)v82 + 1);
    *(void *)uint64_t v81 = v84;
    *((void *)v81 + 1) = v83;
    swift_bridgeObjectRelease();
    uint64_t v85 = v44[12];
    uint64_t v86 = &v41[v85];
    uint64_t v87 = &v98[v85];
    uint64_t v88 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 40))(v86, v87, v88);
    uint64_t v89 = *(int *)(v102 + 40);
    uint64_t v90 = (void *)((char *)v16 + v89);
    id v91 = (void *)((char *)v104 + v89);
    uint64_t v93 = *v91;
    uint64_t v92 = v91[1];
    *uint64_t v90 = v93;
    v90[1] = v92;
    swift_bridgeObjectRelease();
LABEL_19:
    a3 = v106;
    goto LABEL_20;
  }
  if (!v22)
  {
    id v105 = v16;
    id v106 = a3;
    long long v23 = *((_OWORD *)v17 + 1);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *((_OWORD *)v16 + 1) = v23;
    *((_WORD *)v16 + 16) = *((_WORD *)v17 + 16);
    uint64_t v101 = v18;
    id v103 = v17;
    uint64_t v24 = *(int *)(v18 + 36);
    uint64_t v25 = (char *)v16 + v24;
    uint64_t v26 = (char *)v17 + v24;
    uint64_t v27 = type metadata accessor for ShelfLockupAttributedTagStrings();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
    uint64_t v28 = (int *)type metadata accessor for CatalogTipSectionItem();
    uint64_t v29 = v28[5];
    char v30 = &v25[v29];
    __dsta = &v26[v29];
    uint64_t v31 = type metadata accessor for Artwork();
    uint64_t v32 = *(void *)(v31 - 8);
    id v97 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
    v97(v30, __dsta, v31);
    *(_OWORD *)&v25[v28[6]] = *(_OWORD *)&v26[v28[6]];
    *(_OWORD *)&v25[v28[7]] = *(_OWORD *)&v26[v28[7]];
    uint64_t v33 = v28[8];
    __dst = &v25[v33];
    uint64_t v34 = &v26[v33];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&v26[v33], 1, v31))
    {
      uint64_t v35 = sub_1000AFA94(&qword_1009512E8);
      memcpy(__dst, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      v97(__dst, v34, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
    }
    *(_OWORD *)&v25[v28[9]] = *(_OWORD *)&v26[v28[9]];
    *(_OWORD *)&v25[v28[10]] = *(_OWORD *)&v26[v28[10]];
    *(_OWORD *)&v25[v28[11]] = *(_OWORD *)&v26[v28[11]];
    uint64_t v66 = v28[12];
    uint64_t v67 = &v25[v66];
    uint64_t v68 = &v26[v66];
    uint64_t v69 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v67, v68, v69);
    *(_OWORD *)((char *)v105 + *(int *)(v101 + 40)) = *(_OWORD *)((char *)v103 + *(int *)(v101 + 40));
    (*(void (**)(void))(v19 + 56))();
    goto LABEL_19;
  }
LABEL_7:
  uint64_t v36 = sub_1000AFA94((uint64_t *)&unk_100955650);
  memcpy(v16, v17, *(void *)(*(void *)(v36 - 8) + 64));
LABEL_20:
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_release();
  return a1;
}

uint64_t sub_100352F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1000AFA94((uint64_t *)&unk_100955650);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 36);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 40));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_10035307C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1000AFA94((uint64_t *)&unk_100955650);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 36);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

char *sub_100353190(char *a1, char **a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v45 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = &v45[(v5 + 16) & ~(unint64_t)v5];
  }
  else
  {
    uint64_t v6 = *a2;
    char v7 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    a1[8] = v7;
    uint64_t v8 = (int *)type metadata accessor for ActivitySharingHighlight();
    uint64_t v9 = v8[5];
    uint64_t v10 = &v4[v9];
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = type metadata accessor for UUID();
    char v13 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    uint64_t v14 = v6;
    v13(v10, v11, v12);
    uint64_t v15 = v8[6];
    uint64_t v16 = &v4[v15];
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = v8[7];
    uint64_t v20 = *(char **)((char *)a2 + v19);
    *(void *)&v4[v19] = v20;
    *(void *)&v4[v8[8]] = *(char **)((char *)a2 + v8[8]);
    int v21 = (int *)type metadata accessor for ActivitySharingHighlightViewModel();
    uint64_t v22 = v21[5];
    long long v23 = *(char **)((char *)a2 + v22);
    *(void *)&v4[v22] = v23;
    uint64_t v24 = v21[6];
    uint64_t v25 = *(char **)((char *)a2 + v24);
    *(void *)&v4[v24] = v25;
    uint64_t v26 = v21[7];
    uint64_t v27 = *(char **)((char *)a2 + v26);
    *(void *)&v4[v26] = v27;
    uint64_t v28 = v21[8];
    uint64_t v29 = *(char **)((char *)a2 + v28);
    *(void *)&v4[v28] = v29;
    v4[v21[9]] = *((unsigned char *)a2 + v21[9]);
    uint64_t v30 = v21[10];
    uint64_t v48 = (uint64_t)a2 + v30;
    uint64_t v49 = &v4[v30];
    uint64_t v31 = type metadata accessor for FIUIRelativeDateTimeFormatter();
    uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16);
    id v32 = v20;
    id v33 = v23;
    id v34 = v25;
    id v35 = v27;
    id v36 = v29;
    v47(v49, v48, v31);
    uint64_t v37 = v21[11];
    uint64_t v38 = *(char **)((char *)a2 + v37);
    *(void *)&v4[v37] = v38;
    uint64_t v39 = *(int *)(a3 + 20);
    uint64_t v40 = &v4[v39];
    long long v41 = (uint64_t *)((char *)a2 + v39);
    uint64_t v43 = *v41;
    uint64_t v42 = v41[1];
    *(void *)uint64_t v40 = v43;
    *((void *)v40 + 1) = v42;
    id v44 = v38;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1003533DC(id *a1)
{
  uint64_t v2 = (int *)type metadata accessor for ActivitySharingHighlight();
  uint64_t v3 = (char *)a1 + v2[5];
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  int v5 = (char *)a1 + v2[6];
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  char v7 = (int *)type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v8 = (char *)a1 + v7[10];
  uint64_t v9 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return swift_release();
}

uint64_t sub_100353548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(void **)a2;
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  char v7 = (int *)type metadata accessor for ActivitySharingHighlight();
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v5;
  v12(v9, v10, v11);
  uint64_t v14 = v7[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = v7[7];
  uint64_t v19 = *(void **)(a2 + v18);
  *(void *)(a1 + v18) = v19;
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  uint64_t v20 = (int *)type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v21 = v20[5];
  uint64_t v22 = *(void **)(a2 + v21);
  *(void *)(a1 + v21) = v22;
  uint64_t v23 = v20[6];
  uint64_t v24 = *(void **)(a2 + v23);
  *(void *)(a1 + v23) = v24;
  uint64_t v25 = v20[7];
  uint64_t v26 = *(void **)(a2 + v25);
  *(void *)(a1 + v25) = v26;
  uint64_t v27 = v20[8];
  uint64_t v28 = *(void **)(a2 + v27);
  *(void *)(a1 + v27) = v28;
  *(unsigned char *)(a1 + v20[9]) = *(unsigned char *)(a2 + v20[9]);
  uint64_t v29 = v20[10];
  uint64_t v46 = a2 + v29;
  uint64_t v47 = a1 + v29;
  uint64_t v30 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16);
  id v31 = v19;
  id v32 = v22;
  id v33 = v24;
  id v34 = v26;
  id v35 = v28;
  v45(v47, v46, v30);
  uint64_t v36 = v20[11];
  uint64_t v37 = *(void **)(a2 + v36);
  *(void *)(a1 + v36) = v37;
  uint64_t v38 = *(int *)(a3 + 20);
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (uint64_t *)(a2 + v38);
  uint64_t v42 = *v40;
  uint64_t v41 = v40[1];
  void *v39 = v42;
  v39[1] = v41;
  id v43 = v37;
  swift_retain();
  return a1;
}

uint64_t sub_100353748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(void **)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  uint64_t v8 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v7;
  id v9 = v6;

  uint64_t v10 = (int *)type metadata accessor for ActivitySharingHighlight();
  uint64_t v11 = v10[5];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = v10[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = v10[7];
  uint64_t v20 = *(void **)(a2 + v19);
  uint64_t v21 = *(void **)(a1 + v19);
  *(void *)(a1 + v19) = v20;
  id v22 = v20;

  *(void *)(a1 + v10[8]) = *(void *)(a2 + v10[8]);
  uint64_t v23 = (int *)type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v24 = v23[5];
  uint64_t v25 = *(void **)(a2 + v24);
  uint64_t v26 = *(void **)(a1 + v24);
  *(void *)(a1 + v24) = v25;
  id v27 = v25;

  uint64_t v28 = v23[6];
  uint64_t v29 = *(void **)(a2 + v28);
  uint64_t v30 = *(void **)(a1 + v28);
  *(void *)(a1 + v28) = v29;
  id v31 = v29;

  uint64_t v32 = v23[7];
  id v33 = *(void **)(a2 + v32);
  id v34 = *(void **)(a1 + v32);
  *(void *)(a1 + v32) = v33;
  id v35 = v33;

  uint64_t v36 = v23[8];
  uint64_t v37 = *(void **)(a2 + v36);
  uint64_t v38 = *(void **)(a1 + v36);
  *(void *)(a1 + v36) = v37;
  id v39 = v37;

  *(unsigned char *)(a1 + v23[9]) = *(unsigned char *)(a2 + v23[9]);
  uint64_t v40 = v23[10];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  uint64_t v43 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 24))(v41, v42, v43);
  uint64_t v44 = v23[11];
  uint64_t v45 = *(void **)(a2 + v44);
  uint64_t v46 = *(void **)(a1 + v44);
  *(void *)(a1 + v44) = v45;
  id v47 = v45;

  uint64_t v48 = *(int *)(a3 + 20);
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  *(void *)(a1 + v48) = *(void *)(a2 + v48);
  swift_retain();
  swift_release();
  *(void *)(v49 + 8) = *(void *)(v50 + 8);
  return a1;
}

uint64_t sub_100353964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  char v6 = (int *)type metadata accessor for ActivitySharingHighlight();
  uint64_t v7 = v6[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = v6[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  *(void *)(a1 + v6[7]) = *(void *)(a2 + v6[7]);
  *(void *)(a1 + v6[8]) = *(void *)(a2 + v6[8]);
  uint64_t v15 = (int *)type metadata accessor for ActivitySharingHighlightViewModel();
  *(void *)(a1 + v15[5]) = *(void *)(a2 + v15[5]);
  *(void *)(a1 + v15[6]) = *(void *)(a2 + v15[6]);
  *(void *)(a1 + v15[7]) = *(void *)(a2 + v15[7]);
  *(void *)(a1 + v15[8]) = *(void *)(a2 + v15[8]);
  *(unsigned char *)(a1 + v15[9]) = *(unsigned char *)(a2 + v15[9]);
  uint64_t v16 = v15[10];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  *(void *)(a1 + v15[11]) = *(void *)(a2 + v15[11]);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100353B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;

  uint64_t v8 = (int *)type metadata accessor for ActivitySharingHighlight();
  uint64_t v9 = v8[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = v8[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = v8[7];
  uint64_t v18 = *(void **)(a1 + v17);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);

  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  uint64_t v19 = (int *)type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v20 = v19[5];
  uint64_t v21 = *(void **)(a1 + v20);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);

  uint64_t v22 = v19[6];
  uint64_t v23 = *(void **)(a1 + v22);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);

  uint64_t v24 = v19[7];
  uint64_t v25 = *(void **)(a1 + v24);
  *(void *)(a1 + v24) = *(void *)(a2 + v24);

  uint64_t v26 = v19[8];
  id v27 = *(void **)(a1 + v26);
  *(void *)(a1 + v26) = *(void *)(a2 + v26);

  *(unsigned char *)(a1 + v19[9]) = *(unsigned char *)(a2 + v19[9]);
  uint64_t v28 = v19[10];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 40))(v29, v30, v31);
  uint64_t v32 = v19[11];
  id v33 = *(void **)(a1 + v32);
  *(void *)(a1 + v32) = *(void *)(a2 + v32);

  uint64_t v34 = *(int *)(a3 + 20);
  uint64_t v35 = a1 + v34;
  uint64_t v36 = (void *)(a2 + v34);
  *(void *)(a1 + v34) = *v36;
  swift_release();
  *(void *)(v35 + 8) = v36[1];
  return a1;
}

uint64_t sub_100353D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100353D18);
}

uint64_t sub_100353D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_100353DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100353DF8);
}

uint64_t sub_100353DF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

uint64_t type metadata accessor for ActivitySharingHighlightViewWrapper(uint64_t a1)
{
  return sub_10009CFF8(a1, qword_1009583D0);
}

uint64_t sub_100353ED4()
{
  uint64_t result = type metadata accessor for ActivitySharingHighlightViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100353F68()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100353F84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_100958530);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v21 - v8;
  *(void *)uint64_t v9 = static VerticalAlignment.center.getter();
  *((void *)v9 + 1) = 0x4024000000000000;
  v9[16] = 0;
  uint64_t v10 = sub_1000AFA94(&qword_100958538);
  sub_100354384(a1, (uint64_t)&v9[*(int *)(v10 + 44)]);
  uint64_t v11 = static HorizontalAlignment.center.getter();
  sub_100354B5C((uint64_t)v22);
  *(_OWORD *)&v24[151] = v22[9];
  *(_OWORD *)&v24[167] = v22[10];
  *(_OWORD *)&v24[183] = v23[0];
  *(_OWORD *)&v24[193] = *(_OWORD *)((char *)v23 + 10);
  *(_OWORD *)&v24[87] = v22[5];
  *(_OWORD *)&v24[103] = v22[6];
  *(_OWORD *)&v24[119] = v22[7];
  *(_OWORD *)&v24[135] = v22[8];
  *(_OWORD *)&v24[23] = v22[1];
  *(_OWORD *)&v24[39] = v22[2];
  *(_OWORD *)&v24[55] = v22[3];
  *(_OWORD *)&v24[71] = v22[4];
  char v25 = 1;
  *(_OWORD *)&v24[7] = v22[0];
  sub_1000AEF2C((uint64_t)v9, (uint64_t)v6, &qword_100958530);
  sub_1000AEF2C((uint64_t)v6, a2, &qword_100958530);
  uint64_t v12 = a2 + *(int *)(sub_1000AFA94(&qword_100958540) + 48);
  long long v26 = (unint64_t)v11;
  v27[0] = 1;
  *(_OWORD *)&v27[161] = *(_OWORD *)&v24[160];
  *(_OWORD *)&v27[177] = *(_OWORD *)&v24[176];
  *(_OWORD *)&v27[193] = *(_OWORD *)&v24[192];
  v27[209] = v24[208];
  *(_OWORD *)&v27[97] = *(_OWORD *)&v24[96];
  *(_OWORD *)&v27[113] = *(_OWORD *)&v24[112];
  *(_OWORD *)&v27[129] = *(_OWORD *)&v24[128];
  *(_OWORD *)&v27[145] = *(_OWORD *)&v24[144];
  *(_OWORD *)&v27[33] = *(_OWORD *)&v24[32];
  *(_OWORD *)&v27[49] = *(_OWORD *)&v24[48];
  *(_OWORD *)&v27[65] = *(_OWORD *)&v24[64];
  *(_OWORD *)&v27[81] = *(_OWORD *)&v24[80];
  *(_OWORD *)&v27[17] = *(_OWORD *)&v24[16];
  *(_OWORD *)&v27[1] = *(_OWORD *)v24;
  long long v13 = *(_OWORD *)&v27[192];
  *(_OWORD *)(v12 + 192) = *(_OWORD *)&v27[176];
  *(_OWORD *)(v12 + 208) = v13;
  *(_WORD *)(v12 + 224) = *(_WORD *)&v27[208];
  long long v14 = *(_OWORD *)&v27[128];
  *(_OWORD *)(v12 + 128) = *(_OWORD *)&v27[112];
  *(_OWORD *)(v12 + 144) = v14;
  long long v15 = *(_OWORD *)&v27[160];
  *(_OWORD *)(v12 + 160) = *(_OWORD *)&v27[144];
  *(_OWORD *)(v12 + 176) = v15;
  long long v16 = *(_OWORD *)&v27[64];
  *(_OWORD *)(v12 + 64) = *(_OWORD *)&v27[48];
  *(_OWORD *)(v12 + 80) = v16;
  long long v17 = *(_OWORD *)&v27[96];
  *(_OWORD *)(v12 + 96) = *(_OWORD *)&v27[80];
  *(_OWORD *)(v12 + 112) = v17;
  long long v18 = *(_OWORD *)v27;
  *(_OWORD *)uint64_t v12 = v26;
  *(_OWORD *)(v12 + 16) = v18;
  long long v19 = *(_OWORD *)&v27[32];
  *(_OWORD *)(v12 + 32) = *(_OWORD *)&v27[16];
  *(_OWORD *)(v12 + 48) = v19;
  sub_100357584((uint64_t)&v26, (void (*)(void, void, void, void, void))sub_100357428, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t, uint64_t, __int16))sub_1003574AC);
  sub_10008DB18((uint64_t)v9, &qword_100958530);
  long long v40 = *(_OWORD *)&v24[160];
  long long v41 = *(_OWORD *)&v24[176];
  long long v42 = *(_OWORD *)&v24[192];
  long long v36 = *(_OWORD *)&v24[96];
  long long v37 = *(_OWORD *)&v24[112];
  long long v38 = *(_OWORD *)&v24[128];
  long long v39 = *(_OWORD *)&v24[144];
  long long v32 = *(_OWORD *)&v24[32];
  long long v33 = *(_OWORD *)&v24[48];
  long long v34 = *(_OWORD *)&v24[64];
  long long v35 = *(_OWORD *)&v24[80];
  long long v30 = *(_OWORD *)v24;
  v28[0] = v11;
  v28[1] = 0;
  char v29 = 1;
  char v43 = v24[208];
  long long v31 = *(_OWORD *)&v24[16];
  sub_100357584((uint64_t)v28, (void (*)(void, void, void, void, void))sub_100357674, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t, uint64_t, __int16))sub_1003576F0);
  return sub_10008DB18((uint64_t)v6, &qword_100958530);
}

uint64_t sub_100354384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v85 = a2;
  uint64_t v3 = type metadata accessor for ActivitySharingHighlight();
  __chkstk_darwin(v3 - 8);
  *(void *)&long long v78 = &v73[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for ActivitySharingAvatarView();
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = &v73[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000AFA94(&qword_100958548);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = &v73[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  long long v15 = &v73[-v14];
  sub_100355F60(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ActivitySharingHighlightViewModel);
  uint64_t v16 = *(int *)(v6 + 28);
  *(void *)&v120[0] = 0;
  sub_1000AFA94(&qword_1009547D8);
  State.init(wrappedValue:)();
  *(_OWORD *)&v8[v16] = v140;
  LOBYTE(v6) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  sub_100355F60((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ActivitySharingAvatarView);
  char v25 = &v12[*(int *)(v10 + 44)];
  unsigned char *v25 = v6;
  *((void *)v25 + 1) = v18;
  *((void *)v25 + 2) = v20;
  *((void *)v25 + 3) = v22;
  *((void *)v25 + 4) = v24;
  v25[40] = 0;
  sub_1003560A4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ActivitySharingAvatarView);
  uint64_t v88 = v15;
  sub_1000AEEC8((uint64_t)v12, (uint64_t)v15, &qword_100958548);
  uint64_t v80 = static HorizontalAlignment.leading.getter();
  sub_100354A70((uint64_t)&v140);
  uint64_t v79 = v140;
  unsigned __int8 v26 = v141;
  uint64_t v81 = v143;
  uint64_t v82 = v142;
  uint64_t v86 = *((void *)&v140 + 1);
  uint64_t v87 = v144;
  LOBYTE(v16) = v145;
  uint64_t v84 = v146;
  int v83 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  unsigned __int8 v154 = 0;
  unsigned __int8 v152 = v26;
  unsigned __int8 v150 = v16;
  unsigned __int8 v147 = 0;
  uint64_t v35 = type metadata accessor for ActivitySharingHighlightView(0);
  uint64_t v36 = *(void *)(a1 + *(int *)(v35 + 24));
  swift_getKeyPath();
  *(void *)&long long v140 = v36;
  sub_10035649C((unint64_t *)&qword_100968510, (void (*)(uint64_t))type metadata accessor for MessagesAppInstallationObserver);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v36 + OBJC_IVAR____TtC10FitnessApp31MessagesAppInstallationObserver__messagesIsInstalled) == 1)
  {
    uint64_t v37 = v78;
    sub_100355F60(a1, v78, (uint64_t (*)(void))type metadata accessor for ActivitySharingHighlight);
    type metadata accessor for ActivitySharingReplyCoordinator();
    swift_allocObject();
    sub_10017BFB4(v37, 1);
    long long v38 = (uint64_t *)(a1 + *(int *)(v35 + 20));
    uint64_t v39 = *v38;
    uint64_t v40 = v38[1];
    sub_10008A670(*v38);
    sub_100633F9C(v39, v40, (uint64_t)v133);
    long long v77 = v133[1];
    long long v78 = v133[0];
    uint64_t v41 = v134;
    char v42 = v135;
    long long v75 = v137;
    long long v76 = v136;
    uint64_t v43 = v138;
    uint64_t v44 = v139;
    char v45 = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    v99[0] = 0;
    v120[0] = v78;
    v120[1] = v77;
    uint64_t v121 = v41;
    char v122 = v42;
    long long v123 = v76;
    long long v124 = v75;
    uint64_t v125 = v43;
    uint64_t v126 = v44;
    char v127 = v45;
    uint64_t v128 = v46;
    uint64_t v129 = v47;
    uint64_t v130 = v48;
    uint64_t v131 = v49;
    char v132 = 0;
    ASFriendListDisplayMode.id.getter(v120);
  }
  else
  {
    sub_10031522C(v120);
  }
  sub_1000AEEC8((uint64_t)v120, (uint64_t)&v140, &qword_100958550);
  sub_1000AEF2C((uint64_t)v88, (uint64_t)v12, &qword_100958548);
  unsigned __int8 v50 = v154;
  LODWORD(v75) = v154;
  unsigned __int8 v51 = v152;
  LODWORD(v76) = v152;
  unsigned __int8 v52 = v150;
  LODWORD(v77) = v150;
  int v53 = v147;
  sub_1000AEEC8((uint64_t)&v140, (uint64_t)v89, &qword_100958550);
  uint64_t v54 = v85;
  sub_1000AEF2C((uint64_t)v12, v85, &qword_100958548);
  uint64_t v55 = (int *)sub_1000AFA94(&qword_100958558);
  uint64_t v56 = v54 + v55[12];
  uint64_t v57 = v80;
  *(void *)&long long v90 = v80;
  *((void *)&v90 + 1) = 0x4000000000000000;
  LOBYTE(v91) = v50;
  *(_DWORD *)((char *)&v91 + 1) = *(_DWORD *)v153;
  DWORD1(v91) = *(_DWORD *)&v153[3];
  uint64_t v58 = v79;
  *((void *)&v91 + 1) = v79;
  *(void *)&long long v92 = v86;
  BYTE8(v92) = v51;
  *(_DWORD *)((char *)&v92 + 9) = *(_DWORD *)v151;
  HIDWORD(v92) = *(_DWORD *)&v151[3];
  uint64_t v59 = v81;
  uint64_t v60 = v82;
  *(void *)&long long v93 = v82;
  *((void *)&v93 + 1) = v81;
  *(void *)&long long v94 = v87;
  BYTE8(v94) = v52;
  *(_DWORD *)((char *)&v94 + 9) = *(_DWORD *)v149;
  HIDWORD(v94) = *(_DWORD *)&v149[3];
  *(void *)&long long v78 = v12;
  uint64_t v61 = v84;
  *(void *)&long long v95 = v84;
  char v62 = v83;
  BYTE8(v95) = v83;
  *(_DWORD *)((char *)&v95 + 9) = *(_DWORD *)v148;
  HIDWORD(v95) = *(_DWORD *)&v148[3];
  *(void *)&long long v96 = v28;
  *((void *)&v96 + 1) = v30;
  *(void *)&long long v97 = v32;
  *((void *)&v97 + 1) = v34;
  int v74 = v53;
  char v98 = v53;
  long long v63 = v90;
  long long v64 = v91;
  long long v65 = v93;
  *(_OWORD *)(v56 + 32) = v92;
  *(_OWORD *)(v56 + 48) = v65;
  *(_OWORD *)uint64_t v56 = v63;
  *(_OWORD *)(v56 + 16) = v64;
  long long v66 = v94;
  long long v67 = v95;
  long long v68 = v96;
  long long v69 = v97;
  *(unsigned char *)(v56 + 128) = v53;
  *(_OWORD *)(v56 + 96) = v68;
  *(_OWORD *)(v56 + 112) = v69;
  *(_OWORD *)(v56 + 64) = v66;
  *(_OWORD *)(v56 + 80) = v67;
  uint64_t v70 = v54 + v55[16];
  *(void *)uint64_t v70 = 0;
  *(unsigned char *)(v70 + 8) = 0;
  uint64_t v71 = v54 + v55[20];
  sub_1000AEEC8((uint64_t)v89, (uint64_t)v99, &qword_100958550);
  sub_1000AEEC8((uint64_t)v99, v71, &qword_100958550);
  sub_100357844((uint64_t)&v90);
  sub_100357950((uint64_t)v99, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1003578B8);
  sub_10008DB18((uint64_t)v88, &qword_100958548);
  sub_1000AEEC8((uint64_t)v89, (uint64_t)v120, &qword_100958550);
  sub_100357950((uint64_t)v120, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1003579BC);
  v100[0] = v57;
  v100[1] = 0x4000000000000000;
  char v101 = v75;
  *(_DWORD *)uint64_t v102 = *(_DWORD *)v153;
  *(_DWORD *)&v102[3] = *(_DWORD *)&v153[3];
  uint64_t v103 = v58;
  uint64_t v104 = v86;
  char v105 = v76;
  *(_DWORD *)id v106 = *(_DWORD *)v151;
  *(_DWORD *)&v106[3] = *(_DWORD *)&v151[3];
  uint64_t v107 = v60;
  uint64_t v108 = v59;
  uint64_t v109 = v87;
  char v110 = v77;
  *(_DWORD *)&v111[3] = *(_DWORD *)&v149[3];
  *(_DWORD *)id v111 = *(_DWORD *)v149;
  uint64_t v112 = v61;
  char v113 = v62;
  *(_DWORD *)&v114[3] = *(_DWORD *)&v148[3];
  *(_DWORD *)uint64_t v114 = *(_DWORD *)v148;
  uint64_t v115 = v28;
  uint64_t v116 = v30;
  uint64_t v117 = v32;
  uint64_t v118 = v34;
  char v119 = v74;
  sub_100357A54((uint64_t)v100);
  return sub_10008DB18(v78, &qword_100958548);
}

uint64_t sub_100354A70@<X0>(uint64_t a1@<X8>)
{
  sub_1003409B0((uint64_t)&v11);
  uint64_t v2 = v11;
  uint64_t v3 = v12;
  char v4 = v13;
  uint64_t v5 = v14;
  sub_100340D98(&v11);
  uint64_t v6 = v11;
  uint64_t v7 = v12;
  char v8 = v13;
  uint64_t v9 = v14;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  sub_1000A1750(v2, v3, v4);
  swift_bridgeObjectRetain();
  sub_1000A1750(v6, v7, v8);
  swift_bridgeObjectRetain();
  sub_1000A06C0(v6, v7, v8);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v2, v3, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100354B5C@<X0>(uint64_t a1@<X8>)
{
  sub_1003411AC((uint64_t)v23);
  uint64_t v2 = *(void *)v23;
  uint64_t v3 = *(void *)&v23[8];
  uint64_t v4 = *(void *)&v23[16];
  uint64_t v5 = *(void *)&v23[24];
  char v6 = v23[32];
  sub_100341820((uint64_t)&v12);
  v27[5] = v17;
  v27[6] = v18;
  v27[7] = v19;
  void v27[2] = v14;
  void v27[3] = v15;
  v27[4] = v16;
  v27[0] = v12;
  v27[1] = v13;
  v21[6] = v18;
  v21[7] = v19;
  v21[2] = v14;
  v21[3] = v15;
  v21[4] = v16;
  v21[5] = v17;
  v21[0] = v12;
  v21[1] = v13;
  *(_OWORD *)&v23[103] = v18;
  *(_OWORD *)&v23[87] = v17;
  *(_OWORD *)&v23[39] = v14;
  *(_OWORD *)&v23[23] = v13;
  *(_OWORD *)&v23[119] = v19;
  *(_WORD *)&v23[135] = v20;
  *(_OWORD *)&v23[55] = v15;
  *(_OWORD *)&v23[71] = v16;
  *(_OWORD *)&v23[7] = v12;
  long long v7 = *(_OWORD *)&v23[64];
  *(_OWORD *)(a1 + 145) = *(_OWORD *)&v23[80];
  long long v8 = *(_OWORD *)&v23[112];
  *(_OWORD *)(a1 + 161) = *(_OWORD *)&v23[96];
  *(_OWORD *)(a1 + 177) = v8;
  *(_OWORD *)(a1 + 186) = *(_OWORD *)&v23[121];
  long long v9 = *(_OWORD *)v23;
  *(_OWORD *)(a1 + 81) = *(_OWORD *)&v23[16];
  long long v10 = *(_OWORD *)&v23[48];
  *(_OWORD *)(a1 + 97) = *(_OWORD *)&v23[32];
  *(_OWORD *)(a1 + 113) = v10;
  *(_OWORD *)(a1 + 129) = v7;
  __int16 v28 = v20;
  __int16 v22 = v20;
  char v26 = 1;
  char v25 = v6;
  char v24 = 1;
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 1;
  *(_OWORD *)(a1 + 65) = v9;
  sub_100357428(v2, v3, v4, v5, v6);
  sub_1003577C8((uint64_t)v21, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1003574AC);
  sub_1003577C8((uint64_t)v27, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1003576F0);
  return sub_100357674(v2, v3, v4, v5, v6);
}

uint64_t sub_100354D94@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v3 = sub_1000AFA94(&qword_100958528);
  return sub_100353F84(v1, a1 + *(int *)(v3 + 44));
}

CGFloat sub_100354DE0()
{
  id v0 = [self mainScreen];
  [v0 bounds];
  CGFloat v2 = v1;
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;

  v10.origin.x = v2;
  v10.origin.y = v4;
  v10.size.width = v6;
  v10.size.height = v8;
  CGFloat result = CGRectGetWidth(v10) * 0.8;
  qword_100958370 = *(void *)&result;
  return result;
}

uint64_t sub_100354E78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v109 = a1;
  uint64_t v107 = type metadata accessor for AccessibilityActionKind();
  uint64_t v106 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  char v105 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = (uint64_t (*)(void))type metadata accessor for AccessibilityTraits();
  uint64_t v103 = (uint64_t (*)(uint64_t))*((void *)v104 - 1);
  __chkstk_darwin(v104);
  uint64_t v102 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  char v98 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_1000AFA94(&qword_10094E460);
  __chkstk_darwin(v93);
  uint64_t v94 = (uint64_t)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v85);
  long long v90 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_1000AFA94(&qword_100958408);
  __chkstk_darwin(v88);
  long long v95 = (uint64_t *)((char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for ActivitySharingHighlightViewWrapper(0);
  uint64_t v110 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v110 + 64);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivitySharingHighlightViewModel();
  __chkstk_darwin(v12 - 8);
  long long v14 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ActivitySharingHighlightView(0);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  long long v18 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000AFA94(&qword_100958410);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  __int16 v22 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1000AFA94(&qword_100958418);
  __chkstk_darwin(v78);
  char v24 = (char *)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1000AFA94(&qword_100958420);
  __chkstk_darwin(v79);
  char v26 = (char *)&v78 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1000AFA94(&qword_100958428);
  __chkstk_darwin(v80);
  uint64_t v81 = (char *)&v78 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1000AFA94(&qword_100958430);
  __chkstk_darwin(v84);
  uint64_t v82 = (uint64_t)&v78 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1000AFA94(&qword_100958438);
  uint64_t v86 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  int v83 = (char *)&v78 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_1000AFA94(&qword_100958440);
  __chkstk_darwin(v97);
  long long v92 = (char *)&v78 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  long long v96 = (char *)&v78 - v32;
  sub_100355F60(v2, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ActivitySharingHighlightViewModel);
  uint64_t v108 = v2;
  sub_100355F60(v2, (uint64_t)v11, type metadata accessor for ActivitySharingHighlightViewWrapper);
  uint64_t v33 = *(unsigned __int8 *)(v110 + 80);
  uint64_t v34 = (v33 + 16) & ~v33;
  uint64_t v89 = v34 + v10;
  uint64_t v110 = v33 | 7;
  uint64_t v35 = swift_allocObject();
  uint64_t v91 = v34;
  char v101 = v11;
  sub_10035603C((uint64_t)v11, v35 + v34, type metadata accessor for ActivitySharingHighlightViewWrapper);
  sub_10035603C((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ActivitySharingHighlightViewModel);
  uint64_t v36 = (uint64_t (**)(uint64_t))&v18[*(int *)(v16 + 28)];
  void *v36 = sub_100355FCC;
  v36[1] = (uint64_t (*)(uint64_t))v35;
  uint64_t v37 = *(int *)(v16 + 32);
  *(void *)&v18[v37] = [objc_allocWithZone((Class)type metadata accessor for MessagesAppInstallationObserver()) init];
  LOBYTE(v37) = static Edge.Set.all.getter();
  sub_100355F60((uint64_t)v18, (uint64_t)v22, type metadata accessor for ActivitySharingHighlightView);
  long long v38 = &v22[*(int *)(v20 + 44)];
  *long long v38 = v37;
  *(_OWORD *)(v38 + 8) = xmmword_10075F860;
  *(_OWORD *)(v38 + 24) = xmmword_10075F870;
  v38[40] = 0;
  sub_1003560A4((uint64_t)v18, type metadata accessor for ActivitySharingHighlightView);
  if (qword_10094AA08 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_1000AEF2C((uint64_t)v22, (uint64_t)v24, &qword_100958410);
  uint64_t v39 = &v24[*(int *)(v78 + 36)];
  long long v40 = v114;
  *(_OWORD *)uint64_t v39 = v113;
  *((_OWORD *)v39 + 1) = v40;
  *((_OWORD *)v39 + 2) = v115;
  sub_10008DB18((uint64_t)v22, &qword_100958410);
  double v41 = *(double *)&qword_100958370;
  static Alignment.center.getter();
  if (v41 > INFINITY)
  {
    static os_log_type_t.fault.getter();
    char v42 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_1000AEF2C((uint64_t)v24, (uint64_t)v26, &qword_100958418);
  uint64_t v43 = &v26[*(int *)(v79 + 36)];
  long long v44 = v121;
  *((_OWORD *)v43 + 4) = v120;
  *((_OWORD *)v43 + 5) = v44;
  *((_OWORD *)v43 + 6) = v122;
  long long v45 = v117;
  *(_OWORD *)uint64_t v43 = v116;
  *((_OWORD *)v43 + 1) = v45;
  long long v46 = v119;
  *((_OWORD *)v43 + 2) = v118;
  *((_OWORD *)v43 + 3) = v46;
  sub_10008DB18((uint64_t)v24, &qword_100958418);
  id v47 = sub_10005DB50();
  uint64_t v48 = Color.init(uiColor:)();
  uint64_t v49 = v90;
  unsigned __int8 v50 = &v90[*(int *)(v85 + 20)];
  uint64_t v51 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v52 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 104))(v50, v51, v52);
  void *v49 = 0x4028000000000000;
  v49[1] = 0x4028000000000000;
  uint64_t v53 = v94;
  sub_100355F60((uint64_t)v49, v94, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v53 + *(int *)(v93 + 36)) = 256;
  uint64_t v54 = v95;
  sub_1000AEF2C(v53, (uint64_t)v95 + *(int *)(v88 + 36), &qword_10094E460);
  *uint64_t v54 = v48;
  swift_retain();
  sub_10008DB18(v53, &qword_10094E460);
  sub_1003560A4((uint64_t)v49, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  swift_release();
  uint64_t v55 = static Alignment.center.getter();
  uint64_t v57 = v56;
  uint64_t v58 = (uint64_t)v81;
  uint64_t v59 = (uint64_t)&v81[*(int *)(v80 + 36)];
  sub_1000AEF2C((uint64_t)v54, v59, &qword_100958408);
  uint64_t v60 = (uint64_t *)(v59 + *(int *)(sub_1000AFA94(&qword_100958448) + 36));
  *uint64_t v60 = v55;
  v60[1] = v57;
  sub_1000AEF2C((uint64_t)v26, v58, &qword_100958420);
  sub_10008DB18((uint64_t)v54, &qword_100958408);
  sub_10008DB18((uint64_t)v26, &qword_100958420);
  LOBYTE(v55) = static Edge.Set.all.getter();
  uint64_t v61 = v82;
  sub_1000AEF2C(v58, v82, &qword_100958428);
  uint64_t v62 = v84;
  uint64_t v63 = v61 + *(int *)(v84 + 36);
  *(unsigned char *)uint64_t v63 = v55;
  *(_OWORD *)(v63 + 8) = xmmword_1007509A0;
  *(_OWORD *)(v63 + 24) = xmmword_100752730;
  *(unsigned char *)(v63 + 40) = 0;
  sub_10008DB18(v58, &qword_100958428);
  long long v64 = v98;
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v65 = sub_100356200(&qword_100958450, &qword_100958430, (void (*)(void))sub_100356104);
  long long v66 = v83;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v64, v100);
  sub_10008DB18(v61, &qword_100958430);
  long long v67 = v102;
  static AccessibilityTraits.isButton.getter();
  uint64_t v111 = v62;
  uint64_t v112 = v65;
  swift_getOpaqueTypeConformance2();
  uint64_t v68 = (uint64_t)v92;
  uint64_t v69 = v87;
  View.accessibilityAddTraits(_:)();
  (*((void (**)(char *, uint64_t (*)(void)))v103 + 1))(v67, v104);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v66, v69);
  uint64_t v104 = type metadata accessor for ActivitySharingHighlightViewWrapper;
  uint64_t v70 = v108;
  uint64_t v71 = (uint64_t)v101;
  sub_100355F60(v108, (uint64_t)v101, type metadata accessor for ActivitySharingHighlightViewWrapper);
  uint64_t v72 = swift_allocObject();
  uint64_t v73 = v91;
  uint64_t v103 = type metadata accessor for ActivitySharingHighlightViewWrapper;
  sub_10035603C(v71, v72 + v91, type metadata accessor for ActivitySharingHighlightViewWrapper);
  int v74 = v105;
  static AccessibilityActionKind.default.getter();
  uint64_t v75 = (uint64_t)v96;
  ModifiedContent<>.accessibilityAction(_:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v74, v107);
  sub_10008DB18(v68, &qword_100958440);
  sub_100355F60(v70, v71, v104);
  uint64_t v76 = swift_allocObject();
  sub_10035603C(v71, v76 + v73, v103);
  sub_100356388();
  View.onTapGesture(count:perform:)();
  swift_release();
  return sub_10008DB18(v75, &qword_100958440);
}

uint64_t sub_100355D68(uint64_t a1)
{
  if (*(void *)(a1 + *(int *)(type metadata accessor for ActivitySharingHighlightViewWrapper(0) + 20)))
  {
    uint64_t v2 = *(void **)(a1 + *(int *)(type metadata accessor for ActivitySharingHighlight() + 28));
    swift_retain();
    sub_100371DCC(v2, 1);
    return swift_release();
  }
  else
  {
    type metadata accessor for ActivitySharingNavigationCoordinator();
    sub_10035649C(&qword_10094BF10, (void (*)(uint64_t))type metadata accessor for ActivitySharingNavigationCoordinator);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100355E34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + *(int *)(type metadata accessor for ActivitySharingHighlightViewWrapper(0) + 20));
  if (v3)
  {
    uint64_t v4 = *(void **)(v3 + 144);
    if (v4)
    {
      swift_retain();
      [v4 dismissViewControllerAnimated:0 completion:0];
      uint64_t v5 = *(void **)(v3 + 144);
      if (v5) {
        [v5 presentViewController:a1 animated:1 completion:0];
      }
    }
    else
    {
      swift_retain();
    }
    return swift_release();
  }
  else
  {
    type metadata accessor for ActivitySharingNavigationCoordinator();
    sub_10035649C(&qword_10094BF10, (void (*)(uint64_t))type metadata accessor for ActivitySharingNavigationCoordinator);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for ActivitySharingHighlightView(uint64_t a1)
{
  return sub_10009CFF8(a1, qword_1009584E8);
}

uint64_t sub_100355F60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100355FCC(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ActivitySharingHighlightViewWrapper(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100355E34(a1, v4);
}

uint64_t sub_10035603C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003560A4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100356104()
{
  unint64_t result = qword_100958458;
  if (!qword_100958458)
  {
    sub_1000A1370(&qword_100958428);
    sub_100356200(&qword_100958460, &qword_100958420, (void (*)(void))sub_1003561D0);
    sub_1000A132C(&qword_100958480, &qword_100958448);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100958458);
  }
  return result;
}

uint64_t sub_1003561D0()
{
  return sub_100356200(&qword_100958468, &qword_100958418, (void (*)(void))sub_10035627C);
}

uint64_t sub_100356200(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10035627C()
{
  unint64_t result = qword_100958470;
  if (!qword_100958470)
  {
    sub_1000A1370(&qword_100958410);
    sub_10035649C(&qword_100958478, (void (*)(uint64_t))type metadata accessor for ActivitySharingHighlightView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100958470);
  }
  return result;
}

uint64_t sub_100356334()
{
  uint64_t v1 = *(void *)(type metadata accessor for ActivitySharingHighlightViewWrapper(0) - 8);
  return sub_100355D68(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

unint64_t sub_100356388()
{
  unint64_t result = qword_100958488;
  if (!qword_100958488)
  {
    sub_1000A1370(&qword_100958440);
    sub_1000A1370(&qword_100958430);
    sub_100356200(&qword_100958450, &qword_100958430, (void (*)(void))sub_100356104);
    swift_getOpaqueTypeConformance2();
    sub_10035649C((unint64_t *)&qword_10094C0F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100958488);
  }
  return result;
}

uint64_t sub_10035649C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_1003564E4(char *a1, char **a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    long long v46 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = &v46[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    char v8 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    a1[8] = v8;
    uint64_t v9 = (int *)type metadata accessor for ActivitySharingHighlight();
    uint64_t v10 = v9[5];
    uint64_t v11 = &v4[v10];
    uint64_t v12 = (uint64_t)a2 + v10;
    uint64_t v13 = type metadata accessor for UUID();
    long long v14 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    uint64_t v15 = v7;
    v14(v11, v12, v13);
    uint64_t v16 = v9[6];
    uint64_t v17 = &v4[v16];
    uint64_t v18 = (uint64_t)a2 + v16;
    uint64_t v19 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = v9[7];
    uint64_t v21 = *(char **)((char *)a2 + v20);
    *(void *)&v4[v20] = v21;
    *(void *)&v4[v9[8]] = *(char **)((char *)a2 + v9[8]);
    __int16 v22 = (int *)type metadata accessor for ActivitySharingHighlightViewModel();
    uint64_t v23 = v22[5];
    char v24 = *(char **)((char *)a2 + v23);
    *(void *)&v4[v23] = v24;
    uint64_t v25 = v22[6];
    char v26 = *(char **)((char *)a2 + v25);
    *(void *)&v4[v25] = v26;
    uint64_t v27 = v22[7];
    uint64_t v54 = a3;
    uint64_t v28 = *(char **)((char *)a2 + v27);
    *(void *)&v4[v27] = v28;
    uint64_t v29 = v22[8];
    uint64_t v30 = *(char **)((char *)a2 + v29);
    *(void *)&v4[v29] = v30;
    v4[v22[9]] = *((unsigned char *)a2 + v22[9]);
    uint64_t v31 = v22[10];
    uint64_t v52 = (uint64_t)a2 + v31;
    uint64_t v53 = &v4[v31];
    uint64_t v32 = type metadata accessor for FIUIRelativeDateTimeFormatter();
    uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16);
    id v33 = v21;
    id v34 = v24;
    id v35 = v26;
    id v36 = v28;
    id v37 = v30;
    v51(v53, v52, v32);
    uint64_t v38 = v22[11];
    uint64_t v39 = *(char **)((char *)a2 + v38);
    *(void *)&v4[v38] = v39;
    uint64_t v40 = *(int *)(v54 + 20);
    double v41 = &v4[v40];
    uint64_t v42 = (uint64_t)a2 + v40;
    uint64_t v43 = *(uint64_t *)((char *)a2 + v40);
    id v44 = v39;
    if (v43)
    {
      uint64_t v45 = *(void *)(v42 + 8);
      *(void *)double v41 = v43;
      *((void *)v41 + 1) = v45;
      swift_retain();
    }
    else
    {
      *(_OWORD *)double v41 = *(_OWORD *)v42;
    }
    uint64_t v47 = *(int *)(v54 + 24);
    uint64_t v48 = *(char **)((char *)a2 + v47);
    *(void *)&v4[v47] = v48;
    id v49 = v48;
  }
  return v4;
}

void sub_100356758(id *a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for ActivitySharingHighlight();
  int v5 = (char *)a1 + v4[5];
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = (char *)a1 + v4[6];
  uint64_t v8 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  uint64_t v9 = (int *)type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v10 = (char *)a1 + v9[10];
  uint64_t v11 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);

  if (*(id *)((char *)a1 + *(int *)(a2 + 20))) {
    swift_release();
  }
  uint64_t v12 = *(id *)((char *)a1 + *(int *)(a2 + 24));
}

uint64_t sub_1003568DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(void **)a2;
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  uint64_t v7 = (int *)type metadata accessor for ActivitySharingHighlight();
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v5;
  v12(v9, v10, v11);
  uint64_t v14 = v7[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = v7[7];
  uint64_t v19 = *(void **)(a2 + v18);
  *(void *)(a1 + v18) = v19;
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  uint64_t v20 = (int *)type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v21 = v20[5];
  __int16 v22 = *(void **)(a2 + v21);
  *(void *)(a1 + v21) = v22;
  uint64_t v23 = v20[6];
  char v24 = *(void **)(a2 + v23);
  *(void *)(a1 + v23) = v24;
  uint64_t v25 = v20[7];
  char v26 = *(void **)(a2 + v25);
  *(void *)(a1 + v25) = v26;
  uint64_t v27 = v20[8];
  uint64_t v28 = *(void **)(a2 + v27);
  *(void *)(a1 + v27) = v28;
  *(unsigned char *)(a1 + v20[9]) = *(unsigned char *)(a2 + v20[9]);
  uint64_t v29 = v20[10];
  uint64_t v49 = a2 + v29;
  uint64_t v50 = a1 + v29;
  uint64_t v30 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  uint64_t v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16);
  id v31 = v19;
  id v32 = v22;
  id v33 = v24;
  id v34 = v26;
  id v35 = v28;
  v48(v50, v49, v30);
  uint64_t v36 = v20[11];
  id v37 = *(void **)(a2 + v36);
  *(void *)(a1 + v36) = v37;
  uint64_t v38 = *(int *)(a3 + 20);
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = a2 + v38;
  uint64_t v41 = *(void *)(a2 + v38);
  id v42 = v37;
  if (v41)
  {
    uint64_t v43 = *(void *)(v40 + 8);
    void *v39 = v41;
    v39[1] = v43;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  }
  uint64_t v44 = *(int *)(a3 + 24);
  uint64_t v45 = *(void **)(a2 + v44);
  *(void *)(a1 + v44) = v45;
  id v46 = v45;
  return a1;
}

uint64_t sub_100356AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(void **)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  uint64_t v8 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v7;
  id v9 = v6;

  uint64_t v10 = (int *)type metadata accessor for ActivitySharingHighlight();
  uint64_t v11 = v10[5];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = v10[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = v10[7];
  uint64_t v20 = *(void **)(a2 + v19);
  uint64_t v21 = *(void **)(a1 + v19);
  *(void *)(a1 + v19) = v20;
  id v22 = v20;

  *(void *)(a1 + v10[8]) = *(void *)(a2 + v10[8]);
  uint64_t v23 = (int *)type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v24 = v23[5];
  uint64_t v25 = *(void **)(a2 + v24);
  char v26 = *(void **)(a1 + v24);
  *(void *)(a1 + v24) = v25;
  id v27 = v25;

  uint64_t v28 = v23[6];
  uint64_t v29 = *(void **)(a2 + v28);
  uint64_t v30 = *(void **)(a1 + v28);
  *(void *)(a1 + v28) = v29;
  id v31 = v29;

  uint64_t v32 = v23[7];
  id v33 = *(void **)(a2 + v32);
  id v34 = *(void **)(a1 + v32);
  *(void *)(a1 + v32) = v33;
  id v35 = v33;

  uint64_t v36 = v23[8];
  id v37 = *(void **)(a2 + v36);
  uint64_t v38 = *(void **)(a1 + v36);
  *(void *)(a1 + v36) = v37;
  id v39 = v37;

  *(unsigned char *)(a1 + v23[9]) = *(unsigned char *)(a2 + v23[9]);
  uint64_t v40 = v23[10];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  uint64_t v43 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 24))(v41, v42, v43);
  uint64_t v44 = v23[11];
  uint64_t v45 = *(void **)(a2 + v44);
  id v46 = *(void **)(a1 + v44);
  *(void *)(a1 + v44) = v45;
  id v47 = v45;

  uint64_t v48 = *(int *)(a3 + 20);
  uint64_t v49 = (void *)(a1 + v48);
  uint64_t v50 = a2 + v48;
  uint64_t v51 = *(void *)(a1 + v48);
  uint64_t v52 = *(void *)(a2 + v48);
  if (!v51)
  {
    if (v52)
    {
      uint64_t v54 = *(void *)(v50 + 8);
      void *v49 = v52;
      v49[1] = v54;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
    goto LABEL_8;
  }
  if (!v52)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v53 = *(void *)(v50 + 8);
  void *v49 = v52;
  v49[1] = v53;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v55 = *(int *)(a3 + 24);
  uint64_t v56 = *(void **)(a2 + v55);
  uint64_t v57 = *(void **)(a1 + v55);
  *(void *)(a1 + v55) = v56;
  id v58 = v56;

  return a1;
}

uint64_t sub_100356D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  char v6 = (int *)type metadata accessor for ActivitySharingHighlight();
  uint64_t v7 = v6[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = v6[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  *(void *)(a1 + v6[7]) = *(void *)(a2 + v6[7]);
  *(void *)(a1 + v6[8]) = *(void *)(a2 + v6[8]);
  uint64_t v15 = (int *)type metadata accessor for ActivitySharingHighlightViewModel();
  *(void *)(a1 + v15[5]) = *(void *)(a2 + v15[5]);
  *(void *)(a1 + v15[6]) = *(void *)(a2 + v15[6]);
  *(void *)(a1 + v15[7]) = *(void *)(a2 + v15[7]);
  *(void *)(a1 + v15[8]) = *(void *)(a2 + v15[8]);
  *(unsigned char *)(a1 + v15[9]) = *(unsigned char *)(a2 + v15[9]);
  uint64_t v16 = v15[10];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  *(void *)(a1 + v15[11]) = *(void *)(a2 + v15[11]);
  uint64_t v20 = *(int *)(a3 + 20);
  uint64_t v21 = (void *)(a1 + v20);
  id v22 = (uint64_t *)(a2 + v20);
  uint64_t v23 = *v22;
  if (*v22)
  {
    uint64_t v24 = v22[1];
    *uint64_t v21 = v23;
    v21[1] = v24;
  }
  else
  {
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  }
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100356F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;

  uint64_t v8 = (int *)type metadata accessor for ActivitySharingHighlight();
  uint64_t v9 = v8[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = v8[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = v8[7];
  uint64_t v18 = *(void **)(a1 + v17);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);

  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  uint64_t v19 = (int *)type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v20 = v19[5];
  uint64_t v21 = *(void **)(a1 + v20);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);

  uint64_t v22 = v19[6];
  uint64_t v23 = *(void **)(a1 + v22);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);

  uint64_t v24 = v19[7];
  uint64_t v25 = *(void **)(a1 + v24);
  *(void *)(a1 + v24) = *(void *)(a2 + v24);

  uint64_t v26 = v19[8];
  id v27 = *(void **)(a1 + v26);
  *(void *)(a1 + v26) = *(void *)(a2 + v26);

  *(unsigned char *)(a1 + v19[9]) = *(unsigned char *)(a2 + v19[9]);
  uint64_t v28 = v19[10];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 40))(v29, v30, v31);
  uint64_t v32 = v19[11];
  id v33 = *(void **)(a1 + v32);
  *(void *)(a1 + v32) = *(void *)(a2 + v32);

  uint64_t v34 = *(int *)(a3 + 20);
  id v35 = (void *)(a1 + v34);
  uint64_t v36 = a2 + v34;
  uint64_t v37 = *(void *)(a1 + v34);
  uint64_t v38 = *(void *)(a2 + v34);
  if (!v37)
  {
    if (v38)
    {
      uint64_t v40 = *(void *)(v36 + 8);
      *id v35 = v38;
      v35[1] = v40;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)id v35 = *(_OWORD *)v36;
    goto LABEL_8;
  }
  if (!v38)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v39 = *(void *)(v36 + 8);
  *id v35 = v38;
  v35[1] = v39;
  swift_release();
LABEL_8:
  uint64_t v41 = *(int *)(a3 + 24);
  uint64_t v42 = *(void **)(a1 + v41);
  *(void *)(a1 + v41) = *(void *)(a2 + v41);

  return a1;
}

uint64_t sub_100357168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10035717C);
}

uint64_t sub_10035717C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10035723C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100357250);
}

uint64_t sub_100357250(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10035730C()
{
  uint64_t result = type metadata accessor for ActivitySharingHighlightViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1003573B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10035740C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100357428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    swift_retain();
    swift_retain();
    return sub_10008A670(a3);
  }
  else
  {
    return j__swift_retain();
  }
}

uint64_t sub_1003574AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, char a17, char a18)
{
  if (a18)
  {
    sub_1000A1750(a4, a5, a6 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    return sub_10008A670(a10);
  }
  else
  {
    char v20 = a17 & 1;
    return sub_100343318(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, v20);
  }
}

uint64_t sub_100357584(uint64_t a1, void (*a2)(void, void, void, void, void), void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t, uint64_t, __int16))
{
  uint64_t v19 = *(void *)(a1 + 104);
  uint64_t v20 = *(void *)(a1 + 96);
  uint64_t v4 = *(void *)(a1 + 120);
  uint64_t v18 = *(void *)(a1 + 112);
  uint64_t v5 = *(void *)(a1 + 128);
  uint64_t v6 = *(void *)(a1 + 136);
  uint64_t v7 = *(void *)(a1 + 144);
  uint64_t v8 = *(void *)(a1 + 152);
  long long v16 = *(_OWORD *)(a1 + 176);
  long long v17 = *(_OWORD *)(a1 + 160);
  long long v15 = *(_OWORD *)(a1 + 192);
  uint64_t v9 = *(void *)(a1 + 208);
  uint64_t v10 = *(void *)(a1 + 216);
  char v11 = *(unsigned char *)(a1 + 224);
  char v12 = *(unsigned char *)(a1 + 225);
  a2(*(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned __int8 *)(a1 + 72));
  HIBYTE(v14) = v12;
  LOBYTE(v14) = v11;
  a3(v20, v19, v18, v4, v5, v6, v7, v8, v17, *((void *)&v17 + 1), v16, *((void *)&v16 + 1), v15, *((void *)&v15 + 1), v9, v10, v14);
  return a1;
}

uint64_t sub_100357674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    swift_release();
    swift_release();
    return sub_10005E5F8(a3);
  }
  else
  {
    return j__swift_release();
  }
}

uint64_t sub_1003576F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, char a17, char a18)
{
  if (a18)
  {
    sub_1000A06C0(a4, a5, a6 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return sub_10005E5F8(a10);
  }
  else
  {
    char v20 = a17 & 1;
    return sub_100343454(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, v20);
  }
}

uint64_t sub_1003577C8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))
{
  return a1;
}

uint64_t sub_100357844(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 72);
  sub_1000A1750(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_1000A1750(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1003578B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a2)
  {
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_10008A670(a11);
  }
}

uint64_t sub_100357950(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 136);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), v4);
  return a1;
}

void sub_1003579BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a2)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_10005E5F8(a11);
  }
}

uint64_t sub_100357A54(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 72);
  sub_1000A06C0(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_1000A06C0(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100357AC8()
{
  return sub_1000A132C(&qword_100958560, &qword_100958568);
}

uint64_t getEnumTagSinglePayload for ActivitySharingHighlightEmptyView(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[24]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivitySharingHighlightEmptyView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivitySharingHighlightEmptyView()
{
  return &type metadata for ActivitySharingHighlightEmptyView;
}

uint64_t sub_100357BAC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100357BC8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_100958578);
  __chkstk_darwin(v3 - 8);
  int v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100958580);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v12 = (char *)&v46 - v11;
  sub_100358014(a1, v5);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_1000AEF2C((uint64_t)v5, (uint64_t)v9, &qword_100958578);
  uint64_t v13 = &v9[*(int *)(v7 + 44)];
  long long v14 = v57;
  *(_OWORD *)uint64_t v13 = v56;
  *((_OWORD *)v13 + 1) = v14;
  *((_OWORD *)v13 + 2) = v58;
  sub_10008DB18((uint64_t)v5, &qword_100958578);
  uint64_t v49 = v12;
  sub_100358394((uint64_t)v9, (uint64_t)v12);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v15 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v17 = v16;
  LOBYTE(a1) = v18 & 1;
  static Font.headline.getter();
  uint64_t v19 = Text.font(_:)();
  uint64_t v53 = v20;
  uint64_t v54 = v19;
  uint64_t v52 = v21;
  char v23 = v22;
  swift_release();
  char v24 = v23 & 1;
  sub_1000A06C0(v15, v17, a1);
  swift_bridgeObjectRelease();
  LOBYTE(v7) = static Edge.Set.all.getter();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v47 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v48 = v25;
  uint64_t v27 = v26;
  char v29 = v28 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v46 = static Font.subheadline.getter();
  uint64_t v31 = swift_getKeyPath();
  uint64_t v32 = static Color.secondary.getter();
  uint64_t v33 = swift_getKeyPath();
  uint64_t v50 = v9;
  sub_1000AEF2C((uint64_t)v12, (uint64_t)v9, &qword_100958580);
  char v55 = v24;
  uint64_t v34 = (uint64_t)v9;
  uint64_t v35 = v51;
  sub_1000AEF2C(v34, v51, &qword_100958580);
  uint64_t v36 = sub_1000AFA94(&qword_100958588);
  uint64_t v37 = v35 + *(int *)(v36 + 48);
  uint64_t v39 = v53;
  uint64_t v38 = v54;
  uint64_t v40 = v52;
  *(void *)uint64_t v37 = v54;
  *(void *)(v37 + 8) = v40;
  *(unsigned char *)(v37 + 16) = v24;
  *(void *)(v37 + 24) = v39;
  *(unsigned char *)(v37 + 32) = v7;
  *(void *)(v37 + 40) = 0x4032000000000000;
  *(void *)(v37 + 48) = 0;
  *(void *)(v37 + 56) = 0;
  *(void *)(v37 + 64) = 0;
  *(unsigned char *)(v37 + 72) = 0;
  uint64_t v41 = v35 + *(int *)(v36 + 64);
  uint64_t v42 = v47;
  uint64_t v43 = v48;
  *(void *)uint64_t v41 = v47;
  *(void *)(v41 + 8) = v27;
  *(unsigned char *)(v41 + 16) = v29;
  *(void *)(v41 + 24) = v43;
  *(void *)(v41 + 32) = KeyPath;
  *(_WORD *)(v41 + 40) = 1;
  *(unsigned char *)(v41 + 42) = 1;
  uint64_t v44 = v46;
  *(void *)(v41 + 48) = v31;
  *(void *)(v41 + 56) = v44;
  *(void *)(v41 + 64) = v33;
  *(void *)(v41 + 72) = v32;
  sub_1000A1750(v38, v40, v24);
  swift_bridgeObjectRetain();
  sub_1000A1750(v42, v27, v29);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10008DB18((uint64_t)v49, &qword_100958580);
  sub_1000A06C0(v42, v27, v29);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000A06C0(v54, v52, v55);
  swift_bridgeObjectRelease();
  return sub_10008DB18((uint64_t)v50, &qword_100958580);
}

uint64_t sub_100358014@<X0>(int a1@<W0>, unsigned char *a2@<X8>)
{
  int v22 = a1;
  uint64_t v3 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v3 - 8);
  int v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  char v12 = &v21[-v11];
  id v13 = [self mainBundle];
  NSString v14 = String._bridgeToObjectiveC()();
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [v13 URLForResource:v14 withExtension:v15];

  if (v16)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v17 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 32);
    v17(v5, v9, v6);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      v17(v12, v5, v6);
      v17(a2, v12, v6);
      uint64_t v18 = type metadata accessor for VideoLooperRepresentable();
      a2[*(int *)(v18 + 20)] = v22 & 1;
      return (*(uint64_t (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a2, 0, 1, v18);
    }
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  sub_10008DB18((uint64_t)v5, (uint64_t *)&unk_10094B790);
  uint64_t v20 = type metadata accessor for VideoLooperRepresentable();
  return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a2, 1, 1, v20);
}

uint64_t sub_100358328@<X0>(uint64_t a1@<X8>)
{
  int v3 = *v1;
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v4 = sub_1000AFA94(&qword_100958570);
  return sub_100357BC8(v3, a1 + *(int *)(v4 + 44));
}

uint64_t sub_100358394(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100958580);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100358418()
{
  unint64_t result = qword_100958590;
  if (!qword_100958590)
  {
    sub_1000A1370(qword_100958598);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100958590);
  }
  return result;
}

void *sub_100358474(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for GeometryProxy();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(_DWORD *)(v7 + 80);
  if (*(_DWORD *)(v7 + 84)) {
    size_t v9 = *(void *)(v7 + 64);
  }
  else {
    size_t v9 = *(void *)(v7 + 64) + 1;
  }
  size_t v10 = ((v8 + 16) & ~v8) + v9;
  uint64_t v11 = *(void *)(a3 + 16);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80);
  size_t v14 = v10 + v13;
  unint64_t v15 = ((v10 + v13) & ~v13) + *(void *)(v12 + 64);
  int v16 = (*(_DWORD *)(v12 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000;
  uint64_t v17 = *a2;
  *a1 = *a2;
  if ((v13 | v8) > 7 || v16 != 0 || v15 > 0x18)
  {
    a1 = (void *)(v17 + (((v13 | v8) & 0xF8 ^ 0x1F8) & ((v13 | v8) + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v26 = ~v13;
    uint64_t v27 = v11;
    uint64_t v20 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    char v28 = a2;
    uint64_t v21 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v20 = *v21;
    __dst = (void *)(((unint64_t)v20 + v8 + 8) & ~v8);
    int v22 = (const void *)(((unint64_t)v21 + v8 + 8) & ~v8);
    char v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
    swift_retain();
    swift_retain();
    if (v23(v22, 1, v6))
    {
      memcpy(__dst, v22, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(__dst, v22, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(__dst, 0, 1, v6);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 16))(((unint64_t)a1 + v14) & v26, ((unint64_t)v28 + v14) & v26, v27);
  }
  return a1;
}

void *sub_1003586C4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *v7;
  uint64_t v8 = type metadata accessor for GeometryProxy();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (void *)(((unint64_t)v6 + v10 + 8) & ~v10);
  uint64_t v12 = (const void *)(((unint64_t)v7 + v10 + 8) & ~v10);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v12, 1, v8))
  {
    int v13 = *(_DWORD *)(v9 + 84);
    size_t v14 = *(void *)(v9 + 64);
    if (v13) {
      size_t v15 = v14;
    }
    else {
      size_t v15 = v14 + 1;
    }
    memcpy(v11, v12, v15);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v11, v12, v8);
    uint64_t v17 = *(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56);
    uint64_t v16 = v9 + 56;
    v17(v11, 0, 1, v8);
    int v13 = *(_DWORD *)(v16 + 28);
    size_t v14 = *(void *)(v16 + 8);
  }
  size_t v18 = v14 + ((v10 + 16) & ~v10);
  if (!v13) {
    ++v18;
  }
  uint64_t v19 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v19 + 32))(((unint64_t)a1 + v18 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80), ((unint64_t)a2 + v18 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  return a1;
}

void *sub_100358868(void *a1, void *a2, uint64_t a3)
{
  unint64_t v5 = (unint64_t)a2 + 15;
  *a1 = *a2;
  unint64_t v6 = (unint64_t)a1 + 15;
  swift_release();
  unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v6 & 0xFFFFFFFFFFFFFFF8) = *(void *)(v5 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  uint64_t v8 = type metadata accessor for GeometryProxy();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (void *)((v10 + 8 + v7) & ~v10);
  uint64_t v12 = (void *)((v10 + 8 + (v5 & 0xFFFFFFFFFFFFFFF8)) & ~v10);
  int v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  int v14 = v13(v11, 1, v8);
  int v15 = v13(v12, 1, v8);
  if (v14)
  {
    if (v15)
    {
      int v16 = *(_DWORD *)(v9 + 84);
      size_t v17 = *(void *)(v9 + 64);
LABEL_6:
      if (v16) {
        size_t v18 = v17;
      }
      else {
        size_t v18 = v17 + 1;
      }
      memcpy(v11, v12, v18);
      goto LABEL_12;
    }
    (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v11, v12, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
  }
  else
  {
    if (v15)
    {
      (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
      int v16 = *(_DWORD *)(v9 + 84);
      size_t v17 = *(void *)(v9 + 64);
      goto LABEL_6;
    }
    (*(void (**)(void *, void *, uint64_t))(v9 + 40))(v11, v12, v8);
  }
LABEL_12:
  uint64_t v19 = *(void *)(v9 + 64) + ((v10 + 16) & ~v10);
  if (!*(_DWORD *)(v9 + 84)) {
    ++v19;
  }
  uint64_t v20 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v20 + 40))(((unint64_t)a1 + v19 + *(unsigned __int8 *)(v20 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80), ((unint64_t)a2 + v19 + *(unsigned __int8 *)(v20 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
  return a1;
}

uint64_t sub_100358AA4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(type metadata accessor for GeometryProxy() - 8);
  uint64_t v7 = v6;
  int v8 = *(_DWORD *)(v6 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  else {
    unsigned int v10 = v9;
  }
  uint64_t v11 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v14 = *(void *)(v6 + 64);
  uint64_t v15 = *(unsigned __int8 *)(v11 + 80);
  if (v12 <= v10) {
    unsigned int v16 = v10;
  }
  else {
    unsigned int v16 = *(_DWORD *)(v11 + 84);
  }
  if (v8) {
    uint64_t v17 = v14;
  }
  else {
    uint64_t v17 = v14 + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v18 = v17 + ((v13 + 16) & ~v13) + v15;
  if (a2 <= v16) {
    goto LABEL_34;
  }
  uint64_t v19 = (v18 & ~v15) + *(void *)(v11 + 64);
  char v20 = 8 * v19;
  if (v19 <= 3)
  {
    unsigned int v23 = ((a2 - v16 + ~(-1 << v20)) >> v20) + 1;
    if (HIWORD(v23))
    {
      int v21 = *(_DWORD *)((char *)a1 + v19);
      if (!v21) {
        goto LABEL_34;
      }
      goto LABEL_24;
    }
    if (v23 > 0xFF)
    {
      int v21 = *(unsigned __int16 *)((char *)a1 + v19);
      if (!*(unsigned __int16 *)((char *)a1 + v19)) {
        goto LABEL_34;
      }
      goto LABEL_24;
    }
    if (v23 < 2)
    {
LABEL_34:
      if (v10 >= v12)
      {
        char v29 = (uint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
        if ((v9 & 0x80000000) != 0)
        {
          unsigned int v31 = (*(uint64_t (**)(unint64_t))(v7 + 48))(((unint64_t)v29 + v13 + 8) & ~v13);
          if (v31 >= 2) {
            return v31 - 1;
          }
          else {
            return 0;
          }
        }
        else
        {
          uint64_t v30 = *v29;
          if ((unint64_t)*v29 >= 0xFFFFFFFF) {
            LODWORD(v30) = -1;
          }
          return (v30 + 1);
        }
      }
      else
      {
        unint64_t v27 = ((unint64_t)a1 + v18) & ~v15;
        char v28 = *(uint64_t (**)(unint64_t, uint64_t))(v11 + 48);
        return v28(v27, v12);
      }
    }
  }
  int v21 = *((unsigned __int8 *)a1 + v19);
  if (!*((unsigned char *)a1 + v19)) {
    goto LABEL_34;
  }
LABEL_24:
  int v24 = (v21 - 1) << v20;
  if (v19 > 3) {
    int v24 = 0;
  }
  if (v19)
  {
    if (v19 <= 3) {
      int v25 = (v18 & ~v15) + *(_DWORD *)(v11 + 64);
    }
    else {
      int v25 = 4;
    }
    switch(v25)
    {
      case 2:
        int v26 = *a1;
        break;
      case 3:
        int v26 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v26 = *(_DWORD *)a1;
        break;
      default:
        int v26 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v26 = 0;
  }
  return v16 + (v26 | v24) + 1;
}

void sub_100358D4C(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  int v8 = 0;
  uint64_t v9 = *(void *)(type metadata accessor for GeometryProxy() - 8);
  uint64_t v10 = v9;
  int v11 = *(_DWORD *)(v9 + 84);
  if (v11) {
    unsigned int v12 = v11 - 1;
  }
  else {
    unsigned int v12 = 0;
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  else {
    unsigned int v13 = v12;
  }
  uint64_t v14 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v15 = *(unsigned int *)(v14 + 84);
  uint64_t v16 = *(unsigned __int8 *)(v9 + 80);
  size_t v17 = *(void *)(v9 + 64);
  uint64_t v18 = *(unsigned __int8 *)(v14 + 80);
  if (v15 <= v13) {
    unsigned int v19 = v13;
  }
  else {
    unsigned int v19 = *(_DWORD *)(v14 + 84);
  }
  uint64_t v20 = (v16 + 16) & ~v16;
  if (v11) {
    size_t v21 = v17;
  }
  else {
    size_t v21 = v17 + 1;
  }
  size_t v22 = v20 + v21;
  size_t v23 = v20 + v21 + v18;
  size_t v24 = (v23 & ~v18) + *(void *)(v14 + 64);
  if (a3 <= v19) {
    goto LABEL_23;
  }
  if (v24 <= 3)
  {
    unsigned int v27 = ((a3 - v19 + ~(-1 << (8 * v24))) >> (8 * v24)) + 1;
    if (HIWORD(v27))
    {
      int v8 = 4;
      if (v19 < a2) {
        goto LABEL_24;
      }
      goto LABEL_16;
    }
    if (v27 >= 0x100) {
      int v8 = 2;
    }
    else {
      int v8 = v27 > 1;
    }
LABEL_23:
    if (v19 < a2) {
      goto LABEL_24;
    }
LABEL_16:
    uint64_t v25 = ~v16;
    uint64_t v26 = ~v18;
    switch(v8)
    {
      case 1:
        a1[v24] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_32;
      case 2:
        *(_WORD *)&a1[v24] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_32;
      case 3:
        goto LABEL_77;
      case 4:
        *(_DWORD *)&a1[v24] = 0;
        goto LABEL_31;
      default:
LABEL_31:
        if (a2)
        {
LABEL_32:
          if (v13 >= v15)
          {
            if (v13 >= a2)
            {
              uint64_t v35 = (void *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8);
              if ((v12 & 0x80000000) != 0)
              {
                a1 = (unsigned char *)(((unint64_t)v35 + v16 + 8) & v25);
                if (v12 >= a2)
                {
                  uint64_t v39 = *(void (**)(uint64_t, void))(v10 + 56);
                  uint64_t v40 = ((unint64_t)v35 + v16 + 8) & v25;
                  v39(v40, (a2 + 1));
                }
                else
                {
                  if (v21 <= 3) {
                    int v37 = ~(-1 << (8 * v21));
                  }
                  else {
                    int v37 = -1;
                  }
                  if (v21)
                  {
                    int v33 = v37 & (~v12 + a2);
                    if (v21 <= 3) {
                      int v38 = v21;
                    }
                    else {
                      int v38 = 4;
                    }
                    bzero(a1, v21);
                    switch(v38)
                    {
                      case 2:
LABEL_68:
                        *(_WORD *)a1 = v33;
                        break;
                      case 3:
LABEL_74:
                        *(_WORD *)a1 = v33;
                        a1[2] = BYTE2(v33);
                        break;
                      case 4:
LABEL_75:
                        *(_DWORD *)a1 = v33;
                        break;
                      default:
LABEL_45:
                        *a1 = v33;
                        break;
                    }
                  }
                }
              }
              else
              {
                if ((a2 & 0x80000000) != 0) {
                  uint64_t v36 = a2 ^ 0x80000000;
                }
                else {
                  uint64_t v36 = (a2 - 1);
                }
                *uint64_t v35 = v36;
              }
            }
            else
            {
              if (v22 <= 3) {
                int v32 = ~(-1 << (8 * v22));
              }
              else {
                int v32 = -1;
              }
              if (v22)
              {
                int v33 = v32 & (~v13 + a2);
                if (v22 <= 3) {
                  int v34 = v22;
                }
                else {
                  int v34 = 4;
                }
                bzero(a1, v22);
                switch(v34)
                {
                  case 2:
                    goto LABEL_68;
                  case 3:
                    goto LABEL_74;
                  case 4:
                    goto LABEL_75;
                  default:
                    goto LABEL_45;
                }
              }
            }
          }
          else
          {
            unsigned int v31 = *(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 56);
            v31((unint64_t)&a1[v23] & v26, a2, v15);
          }
        }
        break;
    }
    return;
  }
  int v8 = 1;
  if (v19 >= a2) {
    goto LABEL_16;
  }
LABEL_24:
  unsigned int v28 = ~v19 + a2;
  if (v24 < 4)
  {
    int v29 = (v28 >> (8 * v24)) + 1;
    if (v24)
    {
      int v30 = v28 & ~(-1 << (8 * v24));
      bzero(a1, v24);
      if (v24 == 3)
      {
        *(_WORD *)a1 = v30;
        a1[2] = BYTE2(v30);
      }
      else if (v24 == 2)
      {
        *(_WORD *)a1 = v30;
      }
      else
      {
        *a1 = v30;
      }
    }
  }
  else
  {
    bzero(a1, v24);
    *(_DWORD *)a1 = v28;
    int v29 = 1;
  }
  switch(v8)
  {
    case 1:
      a1[v24] = v29;
      break;
    case 2:
      *(_WORD *)&a1[v24] = v29;
      break;
    case 3:
LABEL_77:
      __break(1u);
      JUMPOUT(0x100359188);
    case 4:
      *(_DWORD *)&a1[v24] = v29;
      break;
    default:
      return;
  }
}

uint64_t sub_1003591D0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for ViewSizeCalculator();
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  swift_release();
  swift_release();
  uint64_t v4 = v3 + *(int *)(sub_1000AFA94(&qword_10094C6A0) + 32);
  uint64_t v5 = type metadata accessor for GeometryProxy();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + *(int *)(v2 + 36), v1);

  return swift_deallocObject();
}

uint64_t sub_100359364()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for ViewSizeCalculator();
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v10 = *(void *)(*(void *)(v2 - 8) + 64);
  uint64_t v5 = type metadata accessor for GeometryProxy();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  swift_release();
  swift_release();
  uint64_t v8 = v0 + v4 + *(int *)(sub_1000AFA94(&qword_10094C6A0) + 32);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v4 + *(int *)(v2 + 36), v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + ((v4 + v10 + v7) & ~v7), v5);

  return swift_deallocObject();
}

uint64_t sub_100359558()
{
  return swift_getWitnessTable();
}

void sub_100359628(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AAUIAwardsDataProviderSection();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_healthStore];
  uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_friendListManager];
  sub_10008E75C((uint64_t)&v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider], (uint64_t)v40);
  uint64_t v10 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_badgeImageFactory];
  int v11 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_formattingManager];
  unsigned int v12 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_resourceProvider];
  unsigned int v13 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_localizationProvider];
  uint64_t v14 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_pauseRingsCoordinator];
  uint64_t v15 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_workoutFormattingManager];
  id v35 = *(id *)&v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_fitnessAppContext];
  id v36 = v15;
  id v38 = *(id *)&v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_workoutDataProvider];
  id v39 = objc_allocWithZone((Class)type metadata accessor for TrophyCaseSectionViewController());
  id v37 = v8;
  id v34 = v9;
  id v16 = v10;
  id v17 = v11;
  id v18 = v12;
  id v19 = v13;
  id v20 = v14;
  id v33 = v20;
  id v21 = v35;
  id v35 = v21;
  id v22 = v36;
  id v23 = v38;
  unsigned int v31 = v20;
  int v32 = v21;
  uint64_t v24 = (uint64_t)v6;
  uint64_t v25 = v37;
  uint64_t v26 = v34;
  unsigned int v27 = v16;
  id v28 = sub_10039A2BC(v24, v37, v34, v40, v16, v17, v18, v19, v31, v32, v22, v23);

  id v29 = [v2 navigationController];
  if (v29)
  {
    int v30 = v29;
    [v29 pushViewController:v28 animated:1];
  }
}

char *sub_1003598C0(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = OBJC_IVAR____TtC10FitnessApp34TrophyCaseViewControllerFooterView_label;
  id v11 = objc_allocWithZone((Class)UILabel);
  unsigned int v12 = v5;
  id v13 = [v11 init];
  uint64_t v14 = (void *)UILabel.withNumberOfLines(_:)();

  uint64_t v15 = (void *)UILabel.withLineBreakMode(_:)();
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v5[v10] = v15;

  v20.receiver = v12;
  v20.super_class = (Class)type metadata accessor for TrophyCaseViewControllerFooterView();
  id v16 = [(char *)[super initWithFrame:a1 a2:a2 a3:a3 a4:a4]];
  uint64_t v17 = *(void *)&v16[OBJC_IVAR____TtC10FitnessApp34TrophyCaseViewControllerFooterView_label];
  id v18 = v16;
  [v18 addSubview:v17];
  sub_100359DE8();

  return v18;
}

id sub_100359A04(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp34TrophyCaseViewControllerFooterView_label;
  id v5 = objc_allocWithZone((Class)UILabel);
  uint64_t v6 = v2;
  id v7 = [v5 init];
  uint64_t v8 = (void *)UILabel.withNumberOfLines(_:)();

  uint64_t v9 = (void *)UILabel.withLineBreakMode(_:)();
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v2[v4] = v9;

  v12.receiver = v6;
  v12.super_class = (Class)type metadata accessor for TrophyCaseViewControllerFooterView();
  [super initWithCoder:a1];

  return v10;
}

void sub_100359B04(char a1)
{
  if (a1)
  {
    id v2 = [self mainBundle];
    NSString v3 = String._bridgeToObjectiveC()();
    id v4 = [v2 localizedStringForKey:v3 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v5 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp34TrophyCaseViewControllerFooterView_label);
    sub_1000AFA94((uint64_t *)&unk_10095BF70);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10074E640;
    *(void *)(inited + 32) = NSFontAttributeName;
    id v7 = self;
    uint64_t v8 = NSFontAttributeName;
    id v9 = [v7 preferredFontForTextStyle:UIFontTextStyleFootnote];
    uint64_t v10 = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
    *(void *)(inited + 40) = v9;
    *(void *)(inited + 64) = v10;
    *(void *)(inited + 72) = NSForegroundColorAttributeName;
    id v11 = self;
    objc_super v12 = NSForegroundColorAttributeName;
    id v13 = [v11 secondaryLabelColor];
    *(void *)(inited + 104) = sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
    *(void *)(inited + 80) = v13;
    sub_1000DFC2C(inited);
    id v14 = objc_allocWithZone((Class)NSAttributedString);
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_10006795C((unint64_t *)&qword_10094B9A0, 255, type metadata accessor for Key);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v17 = [v14 initWithString:v15 attributes:isa];

    [v5 setAttributedText:v17];
  }
  else
  {
    id v18 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp34TrophyCaseViewControllerFooterView_label);
    [v18 setAttributedText:0];
  }
}

void sub_100359DE8()
{
  uint64_t v1 = v0;
  id v2 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100751160;
  id v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp34TrophyCaseViewControllerFooterView_label];
  id v5 = [v4 topAnchor];
  id v6 = [v1 topAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];

  *(void *)(v3 + 32) = v7;
  id v8 = [v4 bottomAnchor];
  id v9 = [v1 bottomAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9 constant:-15.0];

  *(void *)(v3 + 40) = v10;
  id v11 = [v4 trailingAnchor];
  id v12 = [v1 trailingAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12];

  *(void *)(v3 + 48) = v13;
  id v14 = [v4 leadingAnchor];
  id v15 = [v1 leadingAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15];

  *(void *)(v3 + 56) = v16;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];
}

id sub_10035A058()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrophyCaseViewControllerFooterView();
  return [super dealloc];
}

uint64_t type metadata accessor for TrophyCaseViewControllerFooterView()
{
  return self;
}

id sub_10035A0E8()
{
  sub_10007E4EC(&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider], *(void *)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 24]);
  sub_10006795C(&qword_10095B880, v1, (void (*)(uint64_t))type metadata accessor for TrophyCaseViewController);
  objc_super v2 = v0;
  dispatch thunk of AAUIAwardsDataProviding.remove(observer:)();

  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for TrophyCaseViewController();
  return [super dealloc];
}

void sub_10035A398(char a1)
{
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimatorFromViewController];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimatorFromViewController] = 0;

  objc_super v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimator];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimator] = 0;

  id v5 = [v1 navigationController];
  if (v5)
  {
    id v6 = v5;
    [v5 setDelegate:v1];
  }
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for TrophyCaseViewController();
  [super viewDidAppear:a1 & 1];
  sub_10035A8E0();
}

void sub_10035A498()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v23 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  objc_super v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_numberOfCellPerRow;
  double v10 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_numberOfCellPerRow];
  id v11 = [self sharedApplication];
  id v12 = [v11 preferredContentSizeCategory];

  LOBYTE(v11) = UIContentSizeCategory.isAccessibilityCategory.getter();
  double v13 = 2.0;
  if (v11) {
    double v13 = 1.0;
  }
  *(double *)&v1[v9] = v13;
  uint64_t v14 = OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_maxCellHeight;
  double v15 = *(double *)&v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_maxCellHeight];
  sub_10035BF1C();
  if (v15 != *(double *)&v1[v14] || v10 != *(double *)&v1[v9])
  {
    id v16 = [v1 collectionView];
    if (!v16)
    {
      __break(1u);
      return;
    }
    id v17 = v16;
    id v18 = [v16 collectionViewLayout];

    [v18 invalidateLayout];
    v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_shouldReloadCollectionView] = 1;
  }
  if (v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_shouldReloadCollectionView] == 1)
  {
    v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_shouldReloadCollectionView] = 0;
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    id v19 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v20 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_10035DB4C;
    aBlock[5] = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100070394;
    aBlock[3] = &unk_1008C2EB8;
    id v21 = _Block_copy(aBlock);
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10006795C((unint64_t *)&qword_100953B50, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v2);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

void sub_10035A8E0()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_initialAchievement];
  if (v1)
  {
    uint64_t v2 = v0;
    if ((v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_initialAchievementPresented] & 1) == 0)
    {
      v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_initialAchievementPresented] = 1;
      id v3 = v1;
      unsigned __int8 v4 = [v3 unearned];
      id v5 = sub_10035B5B8(v3, v4 ^ 1u, v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_forModalPresentation], v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_shouldShowCelebration]);
      os_log_type_t v6 = static os_log_type_t.error.getter();
      uint64_t v7 = (void *)HKLogActivity;
      id v26 = v5;
      if (os_log_type_enabled(HKLogActivity, v6))
      {
        id v8 = v3;
        uint64_t v9 = v7;
        double v10 = (uint8_t *)swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        *(_DWORD *)double v10 = 136315138;
        id v11 = [v8 template];
        id v12 = [v11 uniqueName];

        log = v9;
        if (v12)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
        sub_1000AFA94((uint64_t *)&unk_100958790);
        uint64_t v13 = Optional.description.getter();
        unint64_t v15 = v14;
        swift_bridgeObjectRelease();
        sub_10008F1F4(v13, v15, &v27);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, log, v6, "[TrophyCase] Presenting detail view controller for template: %s", v10, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        id v5 = v26;
      }
      id v16 = [v2 navigationController];
      if (v16)
      {
        id v17 = v16;
        [v16 pushViewController:v5 animated:0];
      }
      os_log_type_t v18 = static os_log_type_t.error.getter();
      id v19 = (void *)HKLogActivity;
      os_log_type_t v20 = v18;
      if (os_log_type_enabled(HKLogActivity, v18))
      {
        id v21 = v2;
        uint64_t v22 = v19;
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v23 = 67109120;
        swift_unknownObjectWeakLoadStrong();

        swift_unknownObjectRelease();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        id v5 = v26;
        _os_log_impl((void *)&_mh_execute_header, v22, v20, "[TrophyCase] Calling back delegate for trophyCaseDidBeginCelebration, delegate == nil ? %{BOOL}d", v23, 8u);
        swift_slowDealloc();
      }
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        [Strong trophyCaseDidBeginCelebration:v2];

        swift_unknownObjectRelease();
      }
      else
      {
      }
    }
  }
}

uint64_t sub_10035AC90(uint64_t result)
{
  if (result > 2) {
    return 0;
  }
  if (result < 0)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!*((unsigned char *)&off_1008B5E80 + result + 32))
  {
    id v17 = self;
    id v18 = [v17 fractionalWidthDimension:1.0];
    id v19 = [v17 estimatedDimension:44.0];
    os_log_type_t v20 = self;
    id v5 = [v20 sizeWithWidthDimension:v18 heightDimension:v19];

    id v21 = [self itemWithLayoutSize:v5];
    id v22 = [v17 fractionalWidthDimension:1.0];
    id v23 = [v17 estimatedDimension:44.0];
    id v9 = [v20 sizeWithWidthDimension:v22 heightDimension:v23];

    uint64_t v24 = self;
    sub_1000AFA94((uint64_t *)&unk_10095B850);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_100751040;
    *(void *)(v25 + 32) = v21;
    specialized Array._endMutation()();
    sub_10007E2D8(0, (unint64_t *)&unk_10095F810);
    id v12 = v21;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v14 = [v24 verticalGroupWithLayoutSize:v9 subitems:isa];

    id v27 = [self fixedSpacing:10.0];
    [v14 setInterItemSpacing:v27];

    id v16 = [self sectionWithGroup:v14];
    [v16 setInterGroupSpacing:10.0];
    [v16 setContentInsets:0.0, 10.0, 10.0, 10.0];
    goto LABEL_7;
  }
  if (*((unsigned char *)&off_1008B5E80 + result + 32) == 1)
  {
    uint64_t v1 = self;
    id v2 = [v1 fractionalWidthDimension:1.0];
    id v3 = [v1 estimatedDimension:44.0];
    unsigned __int8 v4 = self;
    id v5 = [v4 sizeWithWidthDimension:v2 heightDimension:v3];

    id v6 = [self itemWithLayoutSize:v5];
    id v7 = [v1 fractionalWidthDimension:1.0];
    id v8 = [v1 estimatedDimension:44.0];
    id v9 = [v4 sizeWithWidthDimension:v7 heightDimension:v8];

    double v10 = self;
    sub_1000AFA94((uint64_t *)&unk_10095B850);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100751040;
    *(void *)(v11 + 32) = v6;
    specialized Array._endMutation()();
    sub_10007E2D8(0, (unint64_t *)&unk_10095F810);
    id v12 = v6;
    Class v13 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v14 = [v10 horizontalGroupWithLayoutSize:v9 subitems:v13];

    id v15 = [self fixedSpacing:10.0];
    [v14 setInterItemSpacing:v15];

    id v16 = [self sectionWithGroup:v14];
    [v16 setInterGroupSpacing:10.0];
    [v16 setContentInsets:0.0, 10.0, 0.0, 10.0];
LABEL_7:

    return (uint64_t)v16;
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  id v29 = (char *)Strong;
  uint64_t v30 = OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_numberOfCellPerRow;
  double v31 = *(double *)(Strong + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_numberOfCellPerRow);
  int v32 = self;
  if (v31 <= 1.0)
  {
    id v34 = &selRef_estimatedDimension_;
    double v33 = 44.0;
  }
  else
  {
    double v33 = *(double *)&v29[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_maxCellHeight];
    id v34 = &selRef_absoluteDimension_;
  }
  id v35 = [v32 *v34 v33];
  id v36 = self;
  id v37 = [v36 fractionalWidthDimension:1.0 / *(double *)&v29[v30]];
  id v38 = self;
  id v39 = [v38 sizeWithWidthDimension:v37 heightDimension:v35];

  char v55 = v39;
  id v40 = [self itemWithLayoutSize:v39];
  id v41 = [v36 fractionalWidthDimension:1.0];
  id v42 = [v38 sizeWithWidthDimension:v41 heightDimension:v35];

  unint64_t result = self;
  double v43 = *(double *)&v29[v30];
  if ((~*(void *)&v43 & 0x7FF0000000000000) == 0) {
    goto LABEL_19;
  }
  if (v43 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v43 < 9.22337204e18)
  {
    id v44 = [(id)result horizontalGroupWithLayoutSize:v42 repeatingSubitem:v40 count:(uint64_t)v43];
    id v45 = [self fixedSpacing:10.0];
    [v44 setInterItemSpacing:v45];

    id v46 = [v36 fractionalWidthDimension:1.0];
    id v47 = [v36 estimatedDimension:44.0];
    id v48 = [v38 sizeWithWidthDimension:v46 heightDimension:v47];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v49 = v48;
    NSString v50 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v51 = [self boundarySupplementaryItemWithLayoutSize:v49 elementKind:v50 alignment:5];

    id v16 = [self sectionWithGroup:v44];
    [v16 setInterGroupSpacing:10.0];
    sub_1000AFA94((uint64_t *)&unk_10095B850);
    uint64_t v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_100751040;
    *(void *)(v52 + 32) = v51;
    specialized Array._endMutation()();
    sub_10007E2D8(0, (unint64_t *)&unk_100958760);
    id v53 = v51;
    Class v54 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v16 setBoundarySupplementaryItems:v54];

    [v16 setContentInsets:10.0, 10.0, 10.0, 10.0];
    return (uint64_t)v16;
  }
LABEL_21:
  __break(1u);
  return result;
}

id sub_10035B5B8(void *a1, char a2, unsigned __int8 a3, char a4)
{
  uint64_t v29 = type metadata accessor for TrophyCaseAwardDetailViewController();
  id v6 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_healthStore);
  id v7 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_friendListManager);
  sub_10008E75C(v4 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider, (uint64_t)v33);
  id v8 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_badgeImageFactory);
  id v9 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_resourceProvider);
  double v10 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_formattingManager);
  uint64_t v11 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_localizationProvider);
  id v12 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_pauseRingsCoordinator);
  id v22 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_fitnessAppContext);
  id v23 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_workoutFormattingManager);
  uint64_t v13 = v34;
  uint64_t v25 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_workoutDataProvider);
  uint64_t v26 = v35;
  uint64_t v28 = sub_1000DDC00((uint64_t)v33, v34);
  id v27 = a1;
  id v24 = v6;
  id v14 = v7;
  id v15 = v8;
  id v16 = v9;
  id v17 = v10;
  id v18 = v11;
  *(void *)&long long v21 = v12;
  *((void *)&v21 + 1) = v22;
  id v19 = sub_1006C8960(v27, v24, v14, v28, v15, v16, v17, v18, v21, v23, v25, a3, a4, a2, 1, 0, v29, v13, v26);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v33);
  return v19;
}

uint64_t sub_10035B788(void *a1, uint64_t a2, void *a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  id v9 = v8;
  uint64_t v57 = a4;
  id v55 = a3;
  uint64_t v52 = type metadata accessor for IndexPath();
  uint64_t v16 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v53 = v17;
  id v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for AAUIAwardsDataProviderSection();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v24 = __chkstk_darwin(v23).n128_u64[0];
  uint64_t v26 = (char *)&v49 - v25;
  id v27 = a1;
  LOBYTE(a1) = [a1 unearned:v24];
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v26, a2, v19);
  if (a1)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v26, v19);
    char v28 = 0;
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v20 + 104))(v22, enum case for AAUIAwardsDataProviderSection.goForIt(_:), v19);
    sub_10006795C(&qword_1009555A8, 255, (void (*)(uint64_t))&type metadata accessor for AAUIAwardsDataProviderSection);
    char v29 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v30 = *(void (**)(char *, uint64_t))(v20 + 8);
    v30(v22, v19);
    v30(v26, v19);
    char v28 = v29 ^ 1;
  }
  unsigned int v54 = v28 & 1;
  id v51 = sub_10035B5B8(v27, v28 & 1, 0, 0);
  uint64_t v31 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v56 = v9;
  NSString v50 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v32 = v52;
  v50(v18, v57, v52);
  unint64_t v33 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v53 += v33;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v31;
  uint64_t v35 = *(void (**)(unint64_t, char *, uint64_t))(v16 + 32);
  v35(v34 + v33, v18, v32);
  uint64_t v36 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v50(v18, v57, v32);
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = v36;
  v35(v37 + v33, v18, v32);
  id v38 = objc_allocWithZone((Class)AAUIAchievementDetailTransitionAnimator);
  uint64_t v62 = sub_10035EDA4;
  uint64_t v63 = v34;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v59 = 1107296256;
  uint64_t v60 = sub_100070394;
  uint64_t v61 = &unk_1008C2FA8;
  id v39 = _Block_copy(&aBlock);
  id v40 = v51;
  uint64_t v57 = v34;
  swift_retain();
  swift_retain();
  id v41 = v55;
  id v42 = (char *)v56;
  swift_release();
  uint64_t v62 = sub_10035EE98;
  uint64_t v63 = v37;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v59 = 1107296256;
  uint64_t v60 = sub_100070394;
  uint64_t v61 = &unk_1008C2FD0;
  double v43 = _Block_copy(&aBlock);
  swift_release();
  id v44 = [v38 initWithPresentingViewController:v42 detailViewController:v40 shouldPlayFlipInAnimation:v54 initialBadgeFrame:v41 conversionView:v39 didStartAnimationBlock:a5 didFinishAnimationBlock:a6];

  _Block_release(v43);
  _Block_release(v39);
  id v45 = *(void **)&v42[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimator];
  *(void *)&v42[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimator] = v44;

  id v46 = [v42 navigationController];
  if (v46)
  {
    id v47 = v46;
    [v46 pushViewController:v40 animated:1];
  }
  swift_release();
  return swift_release();
}

void sub_10035BD24(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_7;
  }
  id v5 = Strong;
  id v6 = [Strong collectionView];

  if (!v6)
  {
    __break(1u);
    return;
  }
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v8 = [v6 cellForItemAtIndexPath:isa];

  if (v8
    && (v14[0] = v8,
        sub_10007E2D8(0, (unint64_t *)&qword_100958778),
        sub_1000AFA94((uint64_t *)&unk_100958780),
        (swift_dynamicCast() & 1) != 0))
  {
    if (*((void *)&v12 + 1))
    {
      sub_100093E60(&v11, (uint64_t)v14);
      uint64_t v9 = v15;
      uint64_t v10 = v16;
      sub_10007E4EC(v14, v15);
      (*(void (**)(void, uint64_t, uint64_t))(v10 + 24))(a3 & 1, v9, v10);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v14);
      return;
    }
  }
  else
  {
LABEL_7:
    uint64_t v13 = 0;
    long long v11 = 0u;
    long long v12 = 0u;
  }
  sub_10008DB18((uint64_t)&v11, &qword_100958770);
}

uint64_t type metadata accessor for TrophyCaseViewController()
{
  return self;
}

void sub_10035BF1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AAUIAwardsDataProviderSection();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v6 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_numberOfCellPerRow];
  uint64_t v34 = OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_maxCellHeight;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_maxCellHeight] = 0;
  uint64_t v35 = OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_maxSectionLabelHeight;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_maxSectionLabelHeight] = 0;
  if (v6 > 1.0)
  {
    id v7 = [v0 view];
    if (v7)
    {
      id v8 = v7;
      [v7 bounds];
      CGFloat v10 = v9;
      CGFloat v12 = v11;
      CGFloat v14 = v13;
      CGFloat v16 = v15;

      v41.origin.x = v10;
      v41.origin.y = v12;
      v41.size.width = v14;
      v41.size.height = v16;
      double v17 = (CGRectGetWidth(v41) + -20.0) * 0.5 + -5.0;
      id v18 = &v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider];
      sub_10007E4EC(&v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider], *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 24]);
      uint64_t v19 = dispatch thunk of AAUIAwardsDataProviding.otherSections()();
      double v20 = sub_1002E6D38(v19, v17);
      *(double *)&v1[v35] = v20;
      uint64_t v21 = *(void *)(v19 + 16);
      if (v21)
      {
        uint64_t v32 = v19;
        uint64_t v33 = OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_localizationProvider;
        uint64_t v23 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
        uint64_t v22 = v3 + 16;
        unint64_t v24 = v19 + ((*(unsigned __int8 *)(v22 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 64));
        uint64_t v37 = *(void *)(v22 + 56);
        id v38 = v23;
        uint64_t v39 = v22;
        uint64_t v36 = (void (**)(char *, uint64_t))(v22 - 8);
        v23(v5, v24, v2);
        while (1)
        {
          sub_10007E4EC(v18, *((void *)v18 + 3));
          uint64_t v25 = dispatch thunk of AAUIAwardsDataProviding.topAchievement(forSection:)();
          if (v25)
          {
            uint64_t v26 = (void *)v25;
            sub_10007E4EC(v18, *((void *)v18 + 3));
            uint64_t v27 = dispatch thunk of AAUIAwardsDataProviding.achievementCount(forSection:)();
            sub_1002E7190((int)v5, v26, *(double *)&v1[v35], v17, v27, *(void **)&v1[v33], 1);
            double v29 = v28;
            uint64_t v30 = v34;
            double v31 = *(double *)&v1[v34];

            if (v31 > v29) {
              double v29 = v31;
            }
            (*v36)(v5, v2);
            *(double *)&v1[v30] = v29;
          }
          else
          {
            (*v36)(v5, v2);
          }
          v24 += v37;
          if (!--v21) {
            break;
          }
          v38(v5, v24, v2);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10035C264()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    id v2 = [Strong collectionView];

    if (v2)
    {
      [v2 reloadData];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10035C2E8()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_shouldReloadCollectionView) = 1;
  sub_10035A498();
}

uint64_t sub_10035C358(void *a1, uint64_t a2)
{
  id v126 = a1;
  uint64_t v121 = type metadata accessor for IndexPath();
  uint64_t v120 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  long long v118 = v4;
  long long v119 = &v108[-(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v128 = type metadata accessor for AAUIAwardsDataProviderSection();
  uint64_t v130 = *(void *)(v128 - 8);
  uint64_t v5 = *(void *)(v130 + 64);
  __chkstk_darwin(v128);
  long long v122 = &v108[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  long long v117 = &v108[-v7];
  __chkstk_darwin(v8);
  CGFloat v10 = &v108[-v9];
  __chkstk_darwin(v11);
  long long v123 = &v108[-v12];
  uint64_t v13 = sub_1000AFA94(&qword_1009555A0);
  __chkstk_darwin(v13 - 8);
  uint64_t v125 = &v108[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  double v17 = &v108[-v16];
  __chkstk_darwin(v18);
  double v20 = &v108[-v19];
  __chkstk_darwin(v21);
  uint64_t v23 = &v108[-v22];
  __chkstk_darwin(v24);
  char v127 = &v108[-v25];
  long long v124 = v2;
  uint64_t v26 = &v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider];
  sub_10007E4EC(&v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider], *(void *)&v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 24]);
  uint64_t v27 = dispatch thunk of AAUIAwardsDataProviding.otherSections()();
  uint64_t v129 = a2;
  uint64_t result = IndexPath.section.getter();
  if (result <= 2)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      if (*((unsigned char *)&off_1008B5E58 + result + 32))
      {
        if (*((unsigned char *)&off_1008B5E58 + result + 32) == 1)
        {
          swift_bridgeObjectRelease();
          NSString v29 = String._bridgeToObjectiveC()();
          Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
          id v31 = [v126 dequeueReusableCellWithReuseIdentifier:v29 forIndexPath:isa];

          uint64_t v32 = type metadata accessor for TrophyCaseSectionCell();
          uint64_t v33 = swift_dynamicCastClass();
          id v126 = v31;
          if (v33)
          {
            *((void *)&v134 + 1) = v32;
            char v135 = &off_1008C06C8;
            *(void *)&long long v133 = v33;
            id v34 = v31;
          }
          else
          {
            char v135 = 0;
            long long v133 = 0u;
            long long v134 = 0u;
          }
          uint64_t v53 = v128;
          uint64_t v56 = v130;
          uint64_t v52 = v127;
          sub_1000AEEC8((uint64_t)&v133, (uint64_t)v136, &qword_100958770);
          sub_10007E4EC(v26, *((void *)v26 + 3));
          dispatch thunk of AAUIAwardsDataProviding.mostRecentSection()();
          sub_1000AEF2C((uint64_t)v52, (uint64_t)v23, &qword_1009555A0);
          uint64_t v51 = v56;
          if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v56 + 48))(v23, 1, v53) == 1)
          {
            sub_10008DB18((uint64_t)v23, &qword_1009555A0);
            BOOL v116 = 0;
            unsigned int v54 = _swiftEmptyArrayStorage;
          }
          else
          {
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v56 + 32))(v10, v23, v53);
            sub_10007E4EC(v26, *((void *)v26 + 3));
            unsigned int v54 = (void *)dispatch thunk of AAUIAwardsDataProviding.achievementStack(forSection:)();
            (*(void (**)(unsigned char *, uint64_t))(v56 + 8))(v10, v53);
            BOOL v116 = 0;
          }
          int v55 = 1;
          uint64_t v57 = (uint64_t)v125;
LABEL_31:
          id v46 = v126;
          goto LABEL_32;
        }
        NSString v42 = String._bridgeToObjectiveC()();
        Class v43 = IndexPath._bridgeToObjectiveC()().super.isa;
        id v44 = [v126 dequeueReusableCellWithReuseIdentifier:v42 forIndexPath:v43];

        BOOL v116 = *(double *)&v124[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_numberOfCellPerRow] > 1.0;
        uint64_t v45 = *(void *)(v27 + 16);
        id v46 = v44;
        swift_bridgeObjectRelease();
        if (IndexPath.row.getter() < v45)
        {
          uint64_t v47 = type metadata accessor for TrophyCaseSectionCell();
          uint64_t v48 = swift_dynamicCastClass();
          uint64_t v49 = v46;
          uint64_t v50 = v130;
          id v126 = v49;
          if (v48)
          {
            *((void *)&v134 + 1) = v47;
            char v135 = &off_1008C06C8;
            *(void *)&long long v133 = v48;
          }
          else
          {

            char v135 = 0;
            long long v133 = 0u;
            long long v134 = 0u;
          }
          sub_1000AEEC8((uint64_t)&v133, (uint64_t)v136, &qword_100958770);
          sub_10007E4EC(v26, *((void *)v26 + 3));
          uint64_t v62 = dispatch thunk of AAUIAwardsDataProviding.otherSections()();
          uint64_t result = IndexPath.row.getter();
          if ((result & 0x8000000000000000) == 0)
          {
            if ((unint64_t)result < *(void *)(v62 + 16))
            {
              uint64_t v63 = v128;
              (*(void (**)(unsigned char *, unint64_t, uint64_t))(v50 + 16))(v20, v62+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * result, v128);
              swift_bridgeObjectRelease();
              (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v50 + 56))(v20, 0, 1, v63);
              uint64_t v64 = (uint64_t)v20;
              uint64_t v52 = v127;
              sub_1000AEEC8(v64, (uint64_t)v127, &qword_1009555A0);
              sub_1000AEF2C((uint64_t)v52, (uint64_t)v17, &qword_1009555A0);
              if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v50 + 48))(v17, 1, v63) == 1)
              {
                sub_10008DB18((uint64_t)v17, &qword_1009555A0);
                unsigned int v54 = _swiftEmptyArrayStorage;
              }
              else
              {
                uint64_t v65 = v117;
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v50 + 32))(v117, v17, v63);
                sub_10007E4EC(v26, *((void *)v26 + 3));
                unsigned int v54 = (void *)dispatch thunk of AAUIAwardsDataProviding.achievementStack(forSection:)();
                (*(void (**)(unsigned char *, uint64_t))(v50 + 8))(v65, v63);
              }
              int v55 = 2;
              uint64_t v53 = v63;
              uint64_t v57 = (uint64_t)v125;
              uint64_t v51 = v50;
              goto LABEL_31;
            }
LABEL_41:
            __break(1u);
LABEL_42:
            __break(1u);
            return result;
          }
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }

        uint64_t v51 = v130;
        uint64_t v52 = v127;
        uint64_t v53 = v128;
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v130 + 56))(v127, 1, 1, v128);
        uint64_t v137 = 0;
        memset(v136, 0, sizeof(v136));
        unsigned int v54 = _swiftEmptyArrayStorage;
        int v55 = 2;
      }
      else
      {
        swift_bridgeObjectRelease();
        NSString v36 = String._bridgeToObjectiveC()();
        Class v37 = IndexPath._bridgeToObjectiveC()().super.isa;
        id v38 = [v126 dequeueReusableCellWithReuseIdentifier:v36 forIndexPath:v37];

        uint64_t v39 = type metadata accessor for TrophyCaseGoForItCell();
        uint64_t v40 = swift_dynamicCastClass();
        id v126 = v38;
        if (v40)
        {
          *((void *)&v134 + 1) = v39;
          char v135 = &off_1008C21B0;
          *(void *)&long long v133 = v40;
          id v41 = v38;
        }
        else
        {
          char v135 = 0;
          long long v133 = 0u;
          long long v134 = 0u;
        }
        uint64_t v53 = v128;
        sub_1000AEEC8((uint64_t)&v133, (uint64_t)v136, &qword_100958770);
        sub_10007E4EC(v26, *((void *)v26 + 3));
        uint64_t v58 = enum case for AAUIAwardsDataProviderSection.goForIt(_:);
        uint64_t v59 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v130 + 104);
        uint64_t v60 = v123;
        v59(v123, enum case for AAUIAwardsDataProviderSection.goForIt(_:), v53);
        unsigned int v54 = (void *)dispatch thunk of AAUIAwardsDataProviding.achievementStack(forSection:)();
        (*(void (**)(unsigned char *, uint64_t))(v130 + 8))(v60, v53);
        uint64_t v61 = v127;
        v59(v127, v58, v53);
        uint64_t v52 = v61;
        uint64_t v51 = v130;
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v130 + 56))(v61, 0, 1, v53);
        BOOL v116 = 0;
        int v55 = 2;
        id v46 = v126;
      }
      uint64_t v57 = (uint64_t)v125;
LABEL_32:
      sub_1000AEF2C((uint64_t)v52, v57, &qword_1009555A0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v57, 1, v53) == 1)
      {
        swift_bridgeObjectRelease();
        long long v66 = &qword_1009555A0;
        long long v67 = (long long *)v57;
LABEL_38:
        sub_10008DB18((uint64_t)v67, v66);
        id v107 = [objc_allocWithZone((Class)UICollectionViewCell) init];

        sub_10008DB18((uint64_t)v52, &qword_1009555A0);
        sub_10008DB18((uint64_t)v136, &qword_100958770);
        return (uint64_t)v107;
      }
      uint64_t v68 = *(void (**)(void))(v51 + 32);
      uint64_t v69 = v122;
      long long v117 = (unsigned char *)(v51 + 32);
      long long v115 = v68;
      v68();
      sub_1000AEF2C((uint64_t)v136, (uint64_t)&v131, &qword_100958770);
      if (!v132)
      {
        (*(void (**)(unsigned char *, uint64_t))(v51 + 8))(v69, v53);
        swift_bridgeObjectRelease();
        long long v66 = &qword_100958770;
        long long v67 = &v131;
        goto LABEL_38;
      }
      unsigned int v109 = v55;
      uint64_t v110 = v54;
      sub_100093E60(&v131, (uint64_t)&v133);
      sub_10007E4EC(v26, *((void *)v26 + 3));
      uint64_t v125 = (unsigned char *)dispatch thunk of AAUIAwardsDataProviding.topAchievement(forSection:)();
      uint64_t v70 = v51;
      sub_10007E4EC(v26, *((void *)v26 + 3));
      uint64_t v111 = dispatch thunk of AAUIAwardsDataProviding.achievementCount(forSection:)();
      uint64_t v113 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v71 = swift_allocObject();
      uint64_t v72 = v46;
      uint64_t v73 = v71;
      id v126 = v72;
      swift_unknownObjectWeakInit();
      long long v114 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v51 + 16);
      int v74 = v123;
      v114(v123, v69, v53);
      uint64_t v75 = v120;
      uint64_t v76 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v120 + 16);
      uint64_t v77 = v5;
      uint64_t v112 = v5;
      uint64_t v78 = v119;
      uint64_t v79 = v121;
      v76(v119, v129, v121);
      uint64_t v80 = *(unsigned __int8 *)(v70 + 80);
      uint64_t v81 = (v80 + 40) & ~v80;
      uint64_t v129 = v80 | 7;
      unint64_t v82 = (v77 + *(unsigned __int8 *)(v75 + 80) + v81) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
      int v83 = (void *)swift_allocObject();
      v83[2] = v125;
      v83[3] = v73;
      v83[4] = v113;
      uint64_t v84 = v128;
      uint64_t v85 = v74;
      uint64_t v86 = v115;
      ((void (*)(char *, unsigned char *, uint64_t))v115)((char *)v83 + v81, v85, v128);
      long long v118 = v83;
      (*(void (**)(char *, unsigned char *, uint64_t))(v75 + 32))((char *)v83 + v82, v78, v79);
      uint64_t v87 = swift_allocObject();
      uint64_t v88 = v124;
      swift_unknownObjectWeakInit();
      uint64_t v89 = v123;
      long long v90 = v122;
      v114(v123, v122, v84);
      uint64_t v91 = swift_allocObject();
      *(void *)(v91 + 16) = v87;
      long long v92 = v89;
      uint64_t v93 = v125;
      ((void (*)(uint64_t, unsigned char *, uint64_t))v86)(v91 + ((v80 + 24) & ~v80), v92, v84);
      id v94 = v93;
      uint64_t result = (uint64_t)[v88 view];
      if (result)
      {
        long long v95 = (void *)result;
        [(id)result bounds];
        CGFloat v97 = v96;
        CGFloat v99 = v98;
        CGFloat v101 = v100;
        CGFloat v103 = v102;

        v139.origin.x = v97;
        v139.origin.y = v99;
        v139.size.width = v101;
        v139.size.height = v103;
        CGFloat v104 = (CGRectGetWidth(v139) + -20.0) * 0.5 + -5.0;
        uint64_t v106 = *((void *)&v134 + 1);
        char v105 = v135;
        sub_10007E4EC(&v133, *((uint64_t *)&v134 + 1));
        ((void (*)(unsigned char *, void *, void *, uint64_t, void, void, void, BOOL, CGFloat, double, uint64_t (*)(), void *, void (*)(), uint64_t, uint64_t, _UNKNOWN **))v105[5])(v90, v93, v110, v111, *(void *)&v88[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_badgeImageFactory], *(void *)&v88[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_localizationProvider], v109, v116, v104, *(double *)&v88[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_maxSectionLabelHeight], sub_10035EC3C, v118, sub_10035ED28, v91, v106, v105);
        swift_bridgeObjectRelease();

        swift_release();
        swift_release();
        (*(void (**)(unsigned char *, uint64_t))(v130 + 8))(v90, v84);
        sub_10008DB18((uint64_t)v127, &qword_1009555A0);
        sub_10008DB18((uint64_t)v136, &qword_100958770);
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v133);
        return (uint64_t)v126;
      }
      goto LABEL_42;
    }
    __break(1u);
    goto LABEL_40;
  }
  swift_bridgeObjectRelease();
  id v35 = objc_allocWithZone((Class)UICollectionViewCell);

  return (uint64_t)[v35 init];
}

uint64_t sub_10035D2E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result)
  {
    uint64_t v7 = (void *)result;
    swift_beginAccess();
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v8 = (void *)result;
      uint64_t v21 = result;
      sub_10007E2D8(0, (unint64_t *)&qword_100958778);
      id v9 = v7;
      id v10 = v8;
      sub_1000AFA94((uint64_t *)&unk_100958780);
      if (swift_dynamicCast())
      {
        sub_100093E60(v19, (uint64_t)v22);
        swift_beginAccess();
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v12 = (void *)Strong;
          uint64_t v13 = v23;
          uint64_t v14 = v24;
          sub_10007E4EC(v22, v23);
          double v15 = (*(double (**)(uint64_t, uint64_t))(v14 + 32))(v13, v14);
          sub_10035B788(v9, a4, v10, a5, v15, v16, v17, v18);
        }
        return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v22);
      }
      else
      {
        uint64_t v20 = 0;
        memset(v19, 0, sizeof(v19));

        return sub_10008DB18((uint64_t)v19, &qword_100958770);
      }
    }
  }
  return result;
}

void sub_10035D46C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_100359628(a2);
  }
}

id sub_10035D6D4(void *a1, uint64_t a2, uint64_t a3)
{
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == a2 && v6 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      id v9 = objc_allocWithZone((Class)UICollectionReusableView);
      return [v9 init];
    }
  }
  sub_10007E4EC((void *)(v3 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider), *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 24));
  uint64_t v11 = *(void *)(dispatch thunk of AAUIAwardsDataProviding.otherSections()() + 16);
  id result = (id)swift_bridgeObjectRelease();
  uint64_t v12 = v11 + 2;
  if (__OFADD__(v11, 2))
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = UICollectionElementKindSectionFooter;
    NSString v14 = String._bridgeToObjectiveC()();
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v16 = [a1 dequeueReusableSupplementaryViewOfKind:v13 withReuseIdentifier:v14 forIndexPath:isa];

    type metadata accessor for TrophyCaseViewControllerFooterView();
    if (swift_dynamicCastClass())
    {
      id v16 = v16;
      uint64_t v17 = *(void *)(static AAUIAwardsDataProviderSection.allCases.getter() + 16);
      swift_bridgeObjectRelease();
      sub_100359B04(v12 < v17);
    }
    return v16;
  }
  return result;
}

uint64_t sub_10035DB14()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_10035DB4C()
{
}

id sub_10035DB54(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, void *a13, char a14, char a15, unsigned char *a16, uint64_t a17, uint64_t a18)
{
  v75[3] = a17;
  v75[4] = a18;
  uint64_t v58 = sub_1000B1710(v75);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a17 - 8) + 32))(v58, a3, a17);
  swift_unknownObjectWeakInit();
  a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_initialAchievementPresented] = 0;
  *(void *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimator] = 0;
  *(void *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimatorFromViewController] = 0;
  *(void *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_numberOfCellPerRow] = 0x4000000000000000;
  *(void *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_maxCellHeight] = 0;
  *(void *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_maxSectionLabelHeight] = 0;
  *(void *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_cellWidth] = 0;
  a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_shouldReloadCollectionView] = 0;
  *(void *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_healthStore] = a1;
  *(void *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_friendListManager] = a2;
  sub_10008E75C((uint64_t)v75, (uint64_t)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider]);
  *(void *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_badgeImageFactory] = a4;
  *(void *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_formattingManager] = a5;
  *(void *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_resourceProvider] = a6;
  *(void *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_localizationProvider] = a7;
  *(void *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_pauseRingsCoordinator] = a8;
  *(void *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_fitnessAppContext] = a9;
  *(void *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_workoutFormattingManager] = a10;
  *(void *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_workoutDataProvider] = a11;
  *(void *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_wheelchairUseCache] = a12;
  *(void *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_initialAchievement] = a13;
  a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_shouldShowCelebration] = a14;
  a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_forModalPresentation] = a15;
  id v24 = objc_allocWithZone((Class)UICollectionViewLayout);
  id v72 = a13;
  id v71 = a1;
  id v70 = a2;
  id v65 = a4;
  id v62 = a5;
  id v60 = a6;
  id v25 = a7;
  id v69 = a8;
  uint64_t v26 = a9;
  id v67 = a10;
  id v66 = a11;
  id v27 = a12;
  id v28 = [v24 init];
  v74.receiver = a16;
  v74.super_class = (Class)type metadata accessor for TrophyCaseViewController();
  [super initWithCollectionViewLayout:v28];

  id v30 = v29;
  id v31 = [v30 navigationItem];
  [v31 setLargeTitleDisplayMode:1];

  id v32 = [v30 navigationItem];
  id v33 = [self mainBundle];
  NSString v34 = String._bridgeToObjectiveC()();
  id v35 = [v33 localizedStringForKey:v34 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v32 setTitle:v36];

  id result = [v30 collectionView];
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v38 = result;
  uint64_t v39 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v40 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  aBlock[4] = sub_10035EF08;
  aBlock[5] = v39;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007DAA0;
  aBlock[3] = &unk_1008C2FF8;
  id v41 = _Block_copy(aBlock);
  id v42 = [v40 initWithSectionProvider:v41];
  _Block_release(v41);
  swift_release();
  [v38 setCollectionViewLayout:v42];

  id result = [v30 collectionView];
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  Class v43 = result;
  type metadata accessor for TrophyCaseSectionCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v45 = String._bridgeToObjectiveC()();
  [v43 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v45];

  id result = [v30 collectionView];
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v46 = result;
  type metadata accessor for TrophyCaseGoForItCell();
  uint64_t v47 = swift_getObjCClassFromMetadata();
  NSString v48 = String._bridgeToObjectiveC()();
  [v46 registerClass:v47 forCellWithReuseIdentifier:v48];

  id result = [v30 collectionView];
  if (result)
  {
    uint64_t v49 = result;
    type metadata accessor for TrophyCaseViewControllerFooterView();
    uint64_t v50 = swift_getObjCClassFromMetadata();
    uint64_t v51 = UICollectionElementKindSectionFooter;
    NSString v52 = String._bridgeToObjectiveC()();
    [v49 registerClass:v50 forSupplementaryViewOfKind:v51 withReuseIdentifier:v52];

    sub_10006795C(&qword_10095B880, v53, (void (*)(uint64_t))type metadata accessor for TrophyCaseViewController);
    id v54 = v30;
    dispatch thunk of AAUIAwardsDataProviding.add(observer:)();

    [v27 addObserver:v54];
    int v55 = *(void **)&v26[OBJC_IVAR___CHFitnessAppContext_pregnancyStateProvider];
    [v25 setIsPregnant:[v55 isPregnant]];
    id v56 = v54;
    id v57 = v55;
    [v57 addObserver:v56];

    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v75);
    return v56;
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_10035E2D0()
{
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_initialAchievementPresented] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimator] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimatorFromViewController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_numberOfCellPerRow] = 0x4000000000000000;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_maxCellHeight] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_maxSectionLabelHeight] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_cellWidth] = 0;
  v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_shouldReloadCollectionView] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10035E3A8(uint64_t a1)
{
  uint64_t v3 = sub_1000AFA94(&qword_1009555A0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AAUIAwardsDataProviderSection();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 <= 2)
  {
    if (a1 < 0)
    {
      __break(1u);
    }
    else if (*((unsigned char *)&off_1008B5EA8 + a1 + 32))
    {
      if (*((unsigned char *)&off_1008B5EA8 + a1 + 32) == 1)
      {
        sub_10007E4EC((void *)(v1 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider), *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 24));
        dispatch thunk of AAUIAwardsDataProviding.mostRecentSection()();
        (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
        sub_10008DB18((uint64_t)v5, &qword_1009555A0);
      }
      else
      {
        sub_10007E4EC((void *)(v1 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider), *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 24));
        dispatch thunk of AAUIAwardsDataProviding.otherSections()();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_10007E4EC((void *)(v1 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider), *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 24));
      (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for AAUIAwardsDataProviderSection.goForIt(_:), v6);
      dispatch thunk of AAUIAwardsDataProviding.achievementCount(forSection:)();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
}

uint64_t sub_10035E5E8()
{
  uint64_t v1 = type metadata accessor for AAUIAwardsDataProviderSection();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_1009555A0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v16 - v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v16 - v12;
  uint64_t result = IndexPath.section.getter();
  if (result > 2) {
    return result;
  }
  if (result < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (!*((unsigned char *)&off_1008B5ED0 + result + 32))
  {
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v13, enum case for AAUIAwardsDataProviderSection.goForIt(_:), v1);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v13, 0, 1, v1);
    goto LABEL_10;
  }
  if (*((unsigned char *)&off_1008B5ED0 + result + 32) != 1)
  {
    v16[1] = v0;
    sub_10007E4EC((void *)(v0 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider), *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 24));
    uint64_t v15 = dispatch thunk of AAUIAwardsDataProviding.otherSections()();
    uint64_t result = IndexPath.row.getter();
    if ((result & 0x8000000000000000) == 0)
    {
      if ((unint64_t)result < *(void *)(v15 + 16))
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v10, v15+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * result, v1);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v10, 0, 1, v1);
        sub_1000AEEC8((uint64_t)v10, (uint64_t)v13, &qword_1009555A0);
        goto LABEL_10;
      }
LABEL_17:
      __break(1u);
      return result;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_10007E4EC((void *)(v0 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider), *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 24));
  dispatch thunk of AAUIAwardsDataProviding.mostRecentSection()();
LABEL_10:
  sub_1000AEF2C((uint64_t)v13, (uint64_t)v7, &qword_1009555A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_10008DB18((uint64_t)v13, &qword_1009555A0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_100359628((uint64_t)v4);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    uint64_t v7 = v13;
  }
  return sub_10008DB18((uint64_t)v7, &qword_1009555A0);
}

uint64_t sub_10035E958(void *a1, void *a2, void *a3)
{
  uint64_t v4 = a1;
  if (!a1) {
    return (uint64_t)v4;
  }
  uint64_t v5 = v3;
  if (a1 == (void *)2)
  {
    uint64_t v4 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimatorFromViewController);
    if (!v4) {
      return (uint64_t)v4;
    }
    sub_10007E2D8(0, (unint64_t *)&qword_1009559C0);
    id v7 = a3;
    id v8 = v4;
    char v9 = static NSObject.== infix(_:_:)();

    uint64_t v4 = 0;
    if ((v9 & 1) == 0) {
      return (uint64_t)v4;
    }
    goto LABEL_10;
  }
  if (a1 == (void *)1)
  {
    type metadata accessor for TrophyCaseAwardDetailViewController();
    uint64_t v4 = 0;
    if ([a3 isKindOfClass:swift_getObjCClassFromMetadata()])
    {
      type metadata accessor for TrophyCaseViewController();
      if ([a2 isKindOfClass:swift_getObjCClassFromMetadata()])
      {
        uint64_t v11 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimatorFromViewController);
        *(void *)(v5 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimatorFromViewController) = a2;
        id v12 = a2;

LABEL_10:
        uint64_t v4 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimator);
        if (v4) {
          id v13 = v4;
        }
        return (uint64_t)v4;
      }
      return 0;
    }
    return (uint64_t)v4;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10035EAD4()
{
  uint64_t v1 = type metadata accessor for AAUIAwardsDataProviderSection();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t sub_10035EC3C()
{
  uint64_t v1 = *(void *)(type metadata accessor for AAUIAwardsDataProviderSection() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v5 = v0[2];
  uint64_t v6 = v0[3];
  uint64_t v7 = v0[4];
  uint64_t v8 = (uint64_t)v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_10035D2E0(v5, v6, v7, (uint64_t)v0 + v2, v8);
}

uint64_t sub_10035ED10()
{
  return sub_10035EDC4((uint64_t (*)(void))&type metadata accessor for AAUIAwardsDataProviderSection);
}

void sub_10035ED28()
{
  uint64_t v1 = *(void *)(type metadata accessor for AAUIAwardsDataProviderSection() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_10035D46C(v2, v3);
}

uint64_t sub_10035ED8C()
{
  return sub_10035EDC4((uint64_t (*)(void))&type metadata accessor for IndexPath);
}

void sub_10035EDA4()
{
}

uint64_t sub_10035EDAC()
{
  return sub_10035EDC4((uint64_t (*)(void))&type metadata accessor for IndexPath);
}

uint64_t sub_10035EDC4(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);

  return swift_deallocObject();
}

void sub_10035EE98()
{
}

void sub_10035EEA0(char a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for IndexPath() - 8);
  sub_10035BD24(*(void *)(v1 + 16), v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_10035EF08(uint64_t result)
{
  return sub_10035AC90(result);
}

id sub_10035EF2C()
{
  return sub_10035EF54(&OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell____lazy_storage___imageViewWidthConstraint, (SEL *)&selRef_widthAnchor);
}

id sub_10035EF40()
{
  return sub_10035EF54(&OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell____lazy_storage___imageViewHeightConstraint, (SEL *)&selRef_heightAnchor);
}

id sub_10035EF54(uint64_t *a1, SEL *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                               + OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_iconImageView), *a2));
    id v7 = [v6 constraintEqualToConstant:43.0];

    uint64_t v8 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v7;
    id v5 = v7;

    unint64_t v4 = 0;
  }
  id v9 = v4;
  return v5;
}

id sub_10035EFFC()
{
  id result = [self preferredFontForTextStyle:UIFontTextStyleBody];
  qword_1009587A8 = (uint64_t)result;
  return result;
}

char *sub_10035F044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  id v7 = &v3[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_stackViewModel];
  uint64_t v8 = type metadata accessor for FitnessPlusStackViewModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(void *)&v4[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_fitnessAppContext] = 0;
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_iconImageView;
  id v10 = objc_allocWithZone((Class)UIImageView);
  uint64_t v11 = v4;
  id v12 = [v10 initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v13 = (void *)UIView.withContentMode(_:)();

  id v14 = [v13 layer];
  [v14 setCornerRadius:10.0];

  [v13 setClipsToBounds:1];
  [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v4[v9] = v13;
  uint64_t v15 = OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_titleLabel;
  id v16 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  if (qword_10094AA10 != -1) {
    swift_once();
  }
  uint64_t v17 = (void *)UILabel.withFont(_:)();

  [v17 setLineBreakMode:0];
  [v17 setNumberOfLines:0];
  [v17 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v11[v15] = v17;
  uint64_t v18 = OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_subtitleLabel;
  id v19 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v11[v18] = v19;
  *(void *)&v11[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell____lazy_storage___imageViewWidthConstraint] = 0;
  *(void *)&v11[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell____lazy_storage___imageViewHeightConstraint] = 0;

  if (a3)
  {
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v20 = 0;
  }
  v30.receiver = v11;
  v30.super_class = (Class)type metadata accessor for StackDetailHeaderCell();
  id v21 = [super initWithStyle:a1 reuseIdentifier:v20];

  id v22 = objc_allocWithZone((Class)UITapGestureRecognizer);
  uint64_t v23 = (char *)v21;
  id v24 = [v22 initWithTarget:v23 action:"navigateToPlaylist"];
  id v25 = [v23 contentView];
  [v25 addGestureRecognizer:v24];

  id v26 = [v23 contentView];
  [v26 addSubview:*(void *)&v23[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_iconImageView]];

  id v27 = [v23 contentView];
  [v27 addSubview:*(void *)&v23[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_titleLabel]];

  id v28 = [v23 contentView];
  [v28 addSubview:*(void *)&v23[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_subtitleLabel]];

  sub_10035F450();
  return v23;
}

void sub_10035F450()
{
  id v42 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10075FC00;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_iconImageView];
  id v3 = [v2 topAnchor];
  id v4 = [v0 contentView];
  id v5 = [v4 topAnchor];

  id v6 = [v3 constraintEqualToAnchor:v5 constant:16.0];
  *(void *)(v1 + 32) = v6;
  id v7 = [v2 leadingAnchor];
  id v8 = [v0 contentView];
  id v9 = [v8 leadingAnchor];

  id v10 = [v7 constraintEqualToAnchor:v9 constant:16.0];
  *(void *)(v1 + 40) = v10;
  *(void *)(v1 + 48) = sub_10035EF2C();
  *(void *)(v1 + 56) = sub_10035EF40();
  id v11 = [v2 bottomAnchor];
  id v12 = [v0 contentView];
  id v13 = [v12 bottomAnchor];

  id v14 = [v11 constraintLessThanOrEqualToAnchor:v13 constant:-27.0];
  *(void *)(v1 + 64) = v14;
  uint64_t v15 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_titleLabel];
  id v16 = [v15 topAnchor];
  id v17 = [v0 contentView];
  id v18 = [v17 topAnchor];

  id v19 = [v16 constraintEqualToAnchor:v18 constant:16.0];
  *(void *)(v1 + 72) = v19;
  id v20 = [v15 leadingAnchor];
  id v21 = [v2 trailingAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21 constant:19.0];

  *(void *)(v1 + 80) = v22;
  id v23 = [v15 trailingAnchor];
  id v24 = [v0 contentView];
  id v25 = [v24 trailingAnchor];

  id v26 = [v23 constraintEqualToAnchor:v25 constant:-16.0];
  *(void *)(v1 + 88) = v26;
  id v27 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_subtitleLabel];
  id v28 = [v27 topAnchor];
  id v29 = [v15 bottomAnchor];
  id v30 = [v28 constraintEqualToAnchor:v29 constant:4.0];

  *(void *)(v1 + 96) = v30;
  id v31 = [v27 leadingAnchor];
  id v32 = [v15 leadingAnchor];
  id v33 = [v31 constraintEqualToAnchor:v32];

  *(void *)(v1 + 104) = v33;
  id v34 = [v27 trailingAnchor];
  id v35 = [v0 contentView];
  id v36 = [v35 trailingAnchor];

  id v37 = [v34 constraintEqualToAnchor:v36 constant:-16.0];
  *(void *)(v1 + 112) = v37;
  id v38 = [v27 bottomAnchor];
  id v39 = [v0 contentView];
  id v40 = [v39 bottomAnchor];

  id v41 = [v38 constraintLessThanOrEqualToAnchor:v40 constant:-27.0];
  *(void *)(v1 + 120) = v41;
  specialized Array._endMutation()();
  sub_1001ABF94();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v42 activateConstraints:isa];
}

uint64_t sub_10035F9E4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1)
  {
    uint64_t v9 = *(void *)&a1[OBJC_IVAR___CHCatalogItemViewModel_title];
    id v10 = objc_allocWithZone((Class)NSMutableAttributedString);
    id v11 = a1;
    id v12 = [v10 initWithAttributedString:v9];
    id v13 = objc_allocWithZone((Class)NSAttributedString);
    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = [v13 initWithString:v14];

    [v12 appendAttributedString:v15];
    [v12 appendAttributedString:*(void *)&v11[OBJC_IVAR___CHCatalogItemViewModel_subtitle]];
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v17 = (void *)Strong;
      id v18 = *(id *)(Strong + OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_titleLabel);

      [v18 setAttributedText:v12];
    }
    id v19 = (void *)swift_allocObject();
    long long v19[2] = a4;
    v19[3] = a5;
    v19[4] = a2;
    sub_10008A670(a4);
    swift_retain();
    sub_100485D1C(v11, (uint64_t)sub_1003605C8, (uint64_t)v19);

    return swift_release();
  }
  else
  {
    static os_log_type_t.error.getter();
    id v21 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1007509E0;
    *(void *)(v22 + 56) = &type metadata for String;
    *(void *)(v22 + 64) = sub_1000AA64C();
    *(void *)(v22 + 32) = 0xD000000000000043;
    *(void *)(v22 + 40) = 0x80000001007C2440;
    id v23 = v21;
    os_log(_:dso:log:_:_:)();

    return swift_bridgeObjectRelease();
  }
}

void sub_10035FCA4(uint64_t a1, void (*a2)(void))
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v5 = (void *)Strong;
      id v6 = sub_10035EF2C();

      [v6 setConstant:135.0];
    }
    swift_beginAccess();
    uint64_t v7 = swift_unknownObjectWeakLoadStrong();
    if (v7)
    {
      id v8 = (void *)v7;
      id v9 = sub_10035EF40();

      [v9 setConstant:76.0];
    }
    swift_beginAccess();
    uint64_t v10 = swift_unknownObjectWeakLoadStrong();
    if (v10)
    {
      id v11 = (void *)v10;
      id v12 = *(id *)(v10 + OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_iconImageView);

      [v12 setImage:a1];
    }
  }
  if (a2) {
    a2();
  }
}

uint64_t sub_10035FDF0()
{
  uint64_t v1 = sub_1000AFA94(&qword_100950DA8);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FitnessPlusStackViewModel();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_stackViewModel;
  swift_beginAccess();
  sub_1003605D4(v8, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_10036063C((uint64_t)v3);
  }
  sub_100350DA4((uint64_t)v3, (uint64_t)v7);
  uint64_t v10 = (uint64_t *)&v7[*(int *)(v4 + 24)];
  uint64_t v11 = v10[1];
  id v12 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_fitnessAppContext);
  if (v11)
  {
    if (v12)
    {
      uint64_t v13 = *v10;
      swift_bridgeObjectRetain();
      id v14 = v12;
      sub_100649528(v13, v11);
      swift_bridgeObjectRelease();
    }
  }
  else if (v12)
  {
    id v15 = v12;
    sub_100649D90((uint64_t)v7);
  }
  return sub_1001F0FE0((uint64_t)v7);
}

id sub_100360030()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StackDetailHeaderCell();
  return [super dealloc];
}

uint64_t sub_100360104()
{
  return type metadata accessor for StackDetailHeaderCell();
}

uint64_t type metadata accessor for StackDetailHeaderCell()
{
  uint64_t result = qword_100958810;
  if (!qword_100958810) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100360158()
{
  sub_100360208();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100360208()
{
  if (!qword_100958820)
  {
    type metadata accessor for FitnessPlusStackViewModel();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100958820);
    }
  }
}

void sub_100360260(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1000AFA94(&qword_100950DA8);
  __chkstk_darwin(v10 - 8);
  id v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001F0F7C(a1, (uint64_t)v12);
  uint64_t v13 = type metadata accessor for FitnessPlusStackViewModel();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 0, 1, v13);
  uint64_t v14 = v5 + OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_stackViewModel;
  swift_beginAccess();
  sub_1003604E0((uint64_t)v12, v14);
  swift_endAccess();
  id v15 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_fitnessAppContext);
  *(void *)(v5 + OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_fitnessAppContext) = a2;
  uint64_t v16 = a2;

  id v17 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_titleLabel);
  id v18 = sub_1004761A4();
  [v17 setAttributedText:v18];

  id v19 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_subtitleLabel);
  id v20 = sub_100476408();
  [v19 setAttributedText:v20];

  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [self smm_systemImageNamed:v21];

  if (v22)
  {
    [*(id *)(v5 + OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_iconImageView) setImage:v22];
  }
  id v23 = *(char **)&v16[OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider];
  uint64_t v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v25 = v16;
  sub_10008A670(a3);
  sub_10048FEB4(a1, v23, v24, v25, a3, a4);
  sub_10005E5F8(a3);
  swift_release();
}

uint64_t sub_1003604E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100950DA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100360548()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100360580()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

void sub_1003605C8(uint64_t a1)
{
  sub_10035FCA4(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_1003605D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100950DA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10036063C(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100950DA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10036069C()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_stackViewModel];
  uint64_t v3 = type metadata accessor for FitnessPlusStackViewModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_fitnessAppContext] = 0;
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_iconImageView;
  id v5 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v6 = (void *)UIView.withContentMode(_:)();

  id v7 = [v6 layer];
  [v7 setCornerRadius:10.0];

  [v6 setClipsToBounds:1];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v4] = v6;
  uint64_t v8 = OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_titleLabel;
  id v9 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  if (qword_10094AA10 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)UILabel.withFont(_:)();

  [v10 setLineBreakMode:0];
  [v10 setNumberOfLines:0];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v8] = v10;
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_subtitleLabel;
  id v12 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v11] = v12;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell____lazy_storage___imageViewWidthConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell____lazy_storage___imageViewHeightConstraint] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100360908(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  sub_100091494(*(void *)v9, v11, v12);
  uint64_t v13 = *(void *)v8;
  uint64_t v14 = *(void *)(v8 + 8);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  char v15 = *(unsigned char *)(v8 + 16);
  *(unsigned char *)(v8 + 16) = v12;
  sub_1000917F8(v13, v14, v15);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[10];
  id v17 = *(void **)(a1 + v16);
  id v18 = *(void **)(a2 + v16);
  *(void *)(a1 + v16) = v18;
  id v19 = v18;

  uint64_t v20 = a3[11];
  NSString v21 = *(void **)(a1 + v20);
  id v22 = *(void **)(a2 + v20);
  *(void *)(a1 + v20) = v22;
  id v23 = v22;

  uint64_t v24 = a3[12];
  id v25 = *(void **)(a1 + v24);
  uint64_t v26 = *(void **)(a2 + v24);
  *(void *)(a1 + v24) = v26;
  id v27 = v26;

  uint64_t v28 = a3[13];
  id v29 = *(void **)(a1 + v28);
  id v30 = *(void **)(a2 + v28);
  *(void *)(a1 + v28) = v30;
  id v31 = v30;

  return a1;
}

uint64_t sub_100360A60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v11 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_100360B3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 16);
  uint64_t v11 = *(void *)v8;
  uint64_t v12 = *(void *)(v8 + 8);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  char v13 = *(unsigned char *)(v8 + 16);
  *(unsigned char *)(v8 + 16) = v10;
  sub_1000917F8(v11, v12, v13);
  uint64_t v14 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  uint64_t v15 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[10];
  id v17 = *(void **)(a1 + v16);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);

  uint64_t v18 = a3[11];
  id v19 = *(void **)(a1 + v18);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);

  uint64_t v20 = a3[12];
  NSString v21 = *(void **)(a1 + v20);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);

  uint64_t v22 = a3[13];
  id v23 = *(void **)(a1 + v22);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);

  return a1;
}

uint64_t sub_100360C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_100360D20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = a2;
  }
  return result;
}

uint64_t sub_100360DDC()
{
  return sub_1001A22C0();
}

uint64_t sub_100360DF0()
{
  return sub_1001A22C0();
}

void sub_100360EFC()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_delegate];
  if (v1) {
    [*(id *)(v1 + OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator) startAnimating];
  }
  uint64_t v2 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_dataCalculator];
  uint64_t v3 = *(void *)&v0[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_workout];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v0;
  v7[4] = sub_100364A30;
  v7[5] = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_100361EA4;
  void v7[3] = &unk_1008C3130;
  id v5 = _Block_copy(v7);
  uint64_t v6 = v0;
  swift_release();
  [v2 segmentsForWorkout:v3 completion:v5];
  _Block_release(v5);
}

void sub_10036101C(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  char v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    sub_1000AFA94((uint64_t *)&unk_1009556C0);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1007509E0;
    swift_getErrorValue();
    uint64_t v15 = v59;
    uint64_t v16 = v60;
    *(void *)(v14 + 56) = v60;
    id v17 = sub_1000B1710((uint64_t *)(v14 + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v17, v15, v16);
    swift_errorRetain();
    print(_:separator:terminator:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    return;
  }
  if (a1)
  {
    dispatch_group_t v55 = dispatch_group_create();
    v45[1] = sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    uint64_t v56 = static OS_dispatch_queue.main.getter();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a3;
    *(void *)(v18 + 24) = a1;
    id v66 = sub_100364A78;
    id v67 = (void *)v18;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v63 = 1107296256;
    uint64_t v64 = sub_100070394;
    id v65 = &unk_1008C3180;
    id v19 = _Block_copy(&aBlock);
    unint64_t v58 = a1;
    uint64_t v20 = v19;
    id v57 = a3;
    swift_bridgeObjectRetain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    uint64_t aBlock = (void **)_swiftEmptyArrayStorage;
    uint64_t v21 = sub_100364A80((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    uint64_t v22 = sub_1000AFA94((uint64_t *)&unk_1009555E0);
    uint64_t v52 = sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
    uint64_t v53 = v22;
    uint64_t v54 = v21;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v23 = (void *)v56;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    unint64_t v24 = v58;
    _Block_release(v20);

    uint64_t v26 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v25 = v7 + 8;
    uint64_t v51 = v26;
    v26(v9, v6);
    uint64_t v50 = *(void (**)(char *, uint64_t))(v11 + 8);
    v50(v13, v10);
    uint64_t v56 = v11 + 8;
    if (v24 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
      if (v27) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v27 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v27)
      {
LABEL_6:
        if (v27 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v28 = 0;
        uint64_t v47 = *(void *)&v57[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_internalQueue];
        unint64_t v46 = v24 & 0xC000000000000001;
        v45[2] = &v64;
        uint64_t v49 = v25;
        uint64_t v48 = v10;
        dispatch_group_t v29 = v55;
        do
        {
          if (v46) {
            id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v30 = *(id *)(v24 + 8 * v28 + 32);
          }
          id v31 = v30;
          id v32 = (void *)swift_allocObject();
          id v33 = v57;
          v32[2] = v57;
          v32[3] = v31;
          v32[4] = v28;
          id v66 = sub_100364B08;
          id v67 = v32;
          uint64_t aBlock = _NSConcreteStackBlock;
          uint64_t v63 = 1107296256;
          uint64_t v64 = sub_100070394;
          id v65 = &unk_1008C31D0;
          id v34 = _Block_copy(&aBlock);
          id v35 = v33;
          id v36 = v29;
          id v37 = v31;
          static DispatchQoS.unspecified.getter();
          uint64_t v61 = _swiftEmptyArrayStorage;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v34);

          v51(v9, v6);
          uint64_t v10 = v48;
          v50(v13, v48);
          swift_release();
          ++v28;
          unint64_t v24 = v58;
        }
        while (v27 != v28);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v38 = v10;
    id v39 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v40 = swift_allocObject();
    id v41 = v57;
    *(void *)(v40 + 16) = v57;
    id v66 = sub_100364B14;
    id v67 = (void *)v40;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v63 = 1107296256;
    uint64_t v64 = sub_100070394;
    id v65 = &unk_1008C3220;
    id v42 = _Block_copy(&aBlock);
    id v43 = v41;
    static DispatchQoS.unspecified.getter();
    uint64_t v61 = _swiftEmptyArrayStorage;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    dispatch_group_t v44 = v55;
    OS_dispatch_group.notify(qos:flags:queue:execute:)();
    _Block_release(v42);

    v51(v9, v6);
    v50(v13, v38);
    swift_release();
  }
}

uint64_t sub_10036174C(void *a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v4)
  {
LABEL_14:
    swift_getKeyPath();
    swift_getKeyPath();
    a1;
    static Published.subscript.setter();
    return sub_100362438();
  }
  uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
  if ((v4 & 0x8000000000000000) == 0)
  {
    id v17 = a1;
    uint64_t v6 = 0;
    do
    {
      if ((a2 & 0xC000000000000001) != 0) {
        id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v14 = *(id *)(a2 + 8 * v6 + 32);
      }
      uint64_t v15 = v14;
      id v16 = [v14 distance:v17];
      if (v16)
      {
        uint64_t v7 = v16;
        id v8 = [self meterUnit];
        [v7 doubleValueForUnit:v8];
        uint64_t v10 = v9;
      }
      else
      {
        uint64_t v10 = 0;
      }
      ++v6;
      [v15 elapsedTime];
      uint64_t v12 = v11;
      type metadata accessor for WorkoutDurationMetrics();
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = 0;
      *(void *)(v13 + 24) = 0;
      *(void *)(v13 + 48) = 0;
      *(unsigned char *)(v13 + 56) = 1;
      *(void *)(v13 + 72) = 0;
      *(unsigned char *)(v13 + 80) = 1;
      *(_OWORD *)(v13 + 88) = 0u;
      *(_OWORD *)(v13 + 104) = 0u;
      *(void *)(v13 + 120) = 0;
      *(unsigned char *)(v13 + 128) = 1;
      *(void *)(v13 + 144) = 0;
      *(void *)(v13 + 152) = 0;
      *(void *)(v13 + 136) = 0;
      *(void *)(v13 + 32) = v10;
      *(unsigned char *)(v13 + 40) = 0;
      *(void *)(v13 + 64) = v12;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v4 != v6);
    a1 = v17;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_100361998(char *a1, void *a2, uint64_t a3)
{
  uint64_t v26 = a3;
  uint64_t v27 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v30 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)&a1[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_workout];
  uint64_t v11 = *(void *)&a1[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_trackDistanceUnit];
  int v12 = a1[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_trackDistanceUnit + 8];
  uint64_t v13 = *(void **)&a1[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_dataCalculator];
  type metadata accessor for WorkoutDurationMetrics();
  swift_allocObject();
  id v14 = v10;
  id v15 = a2;
  id v16 = v13;
  uint64_t v17 = sub_10043D6C8(v14, v15, v11, v12, v16, 0, 0);

  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v18 = (void *)static OS_dispatch_queue.main.getter();
  id v19 = (void *)swift_allocObject();
  uint64_t v20 = v26;
  long long v19[2] = a1;
  v19[3] = v20;
  v19[4] = v17;
  aBlock[4] = sub_100364B5C;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008C3270;
  uint64_t v21 = _Block_copy(aBlock);
  uint64_t v22 = a1;
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100364A80((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  uint64_t v23 = v27;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);
  swift_release();

  (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v9, v29);
}

uint64_t sub_100361D2C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  uint64_t v5 = (void (*)(uint64_t *, void))static Published.subscript.modify();
  uint64_t v7 = v6;
  uint64_t v8 = *v6;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v7 = v8;
  if (!result || v8 < 0 || (v8 & 0x4000000000000000) != 0)
  {
    uint64_t result = sub_1005EC1A8(v8);
    uint64_t v8 = result;
    *uint64_t v7 = result;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20) = a3;
    swift_release();
    specialized Array._endMutation()();
    v5(&v10, 0);
    swift_release();
    return swift_release();
  }
  __break(1u);
  return result;
}

id sub_100361E40(uint64_t a1)
{
  id result = (id)sub_100362438();
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR___CHWorkoutDetailSegmentDataSource_delegate);
  if (v3)
  {
    uint64_t v4 = *(void **)(v3 + OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator);
    return [v4 stopAnimating];
  }
  return result;
}

uint64_t sub_100361EA4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_10007E2D8(0, (unint64_t *)&qword_100958978);
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100361F48(unint64_t a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t result = v5;
    if (*(void *)(v5 + 16) > a1)
    {
      char v4 = *(unsigned char *)(v5 + a1 + 32);
      swift_bridgeObjectRelease();
      return sub_1002522C0(*(void **)(v1 + OBJC_IVAR___CHWorkoutDetailSegmentDataSource_formattingManager), v4);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100362008(unint64_t a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = v7;
  if (*(void *)(v7 + 16) <= a1)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v4 = *(unsigned __int8 *)(v7 + a1 + 32);
  swift_bridgeObjectRelease();
  uint64_t v5 = v1 + OBJC_IVAR___CHWorkoutDetailSegmentDataSource_columnSizes;
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)v5 + 16))
  {
    swift_bridgeObjectRetain();
    sub_100529A74(v4);
    if (v6) {
      return swift_bridgeObjectRelease();
    }
    else {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10036211C(uint64_t a1)
{
  uint64_t result = self;
  BOOL v3 = __OFADD__(a1, 1);
  uint64_t v4 = a1 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = (void *)result;
    id v6 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v4];
    id v7 = [v5 localizedStringFromNumber:v6 numberStyle:0];

    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    return v8;
  }
  return result;
}

id sub_1003621C4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v10 = v19;
  if ((v19 & 0xC000000000000001) != 0)
  {
    uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v11 = *(void *)(v19 + 8 * a1 + 32);
  swift_retain();
LABEL_5:
  swift_bridgeObjectRelease();
  if ((a3 & 1) != 0
    || (*(unsigned char *)(v11 + 40) & 1) != 0
    || (int v12 = *(void **)(v5 + OBJC_IVAR___CHWorkoutDetailSegmentDataSource_formattingManager),
        (id v13 = objc_msgSend(v12, "localizedStringWithDistanceInMeters:distanceUnit:unitStyle:decimalPrecision:roundingMode:decimalTrimmingMode:", a2, 0, objc_msgSend(self, "defaultPrecisionForDistanceUnit:", a2), 2, 1, *(double *)(v11 + 32))) == 0))
  {
    sub_100252BD4(v11, *(void **)(v5 + OBJC_IVAR___CHWorkoutDetailSegmentDataSource_workout), 0, *(void **)(v5 + OBJC_IVAR___CHWorkoutDetailSegmentDataSource_formattingManager), 1, a4);
    return (id)swift_release();
  }
  else
  {
    id v14 = v13;
    a3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v15;

    id result = [v12 localizedShortUnitStringForDistanceUnit:a2];
    if (result)
    {
      uint64_t v17 = result;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1000A06D0();
      uint64_t v10 = StringProtocol.localizedUppercase.getter();
      a2 = v18;
      swift_bridgeObjectRelease();
      if (qword_10094A728 == -1)
      {
LABEL_10:
        sub_100524B5C((void *)a3, v5, v10, a2, (void *)qword_1009978F8, 0, a4);
        swift_release();
        swift_bridgeObjectRelease();
        return (id)swift_bridgeObjectRelease();
      }
LABEL_15:
      swift_once();
      goto LABEL_10;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100362438()
{
  uint64_t v1 = v0;
  uint64_t v93 = type metadata accessor for AttributedString();
  uint64_t v2 = *(void **)(v93 - 8);
  __chkstk_darwin(v93);
  long long v92 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v91 = (uint64_t)&v80 - v5;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t inited = v102;
  if (v102 >> 62) {
    goto LABEL_69;
  }
  uint64_t v7 = *(void *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      uint64_t v9 = (char *)v1 + OBJC_IVAR___CHWorkoutDetailSegmentDataSource_columnSizes;
      uint64_t v10 = *(void **)((char *)v1 + OBJC_IVAR___CHWorkoutDetailSegmentDataSource_defaultColumns);
      unint64_t v84 = inited & 0xC000000000000001;
      uint64_t v81 = inited & 0xFFFFFFFFFFFFFF8;
      uint64_t v80 = inited + 32;
      uint64_t v90 = OBJC_IVAR___CHWorkoutDetailSegmentDataSource_workout;
      uint64_t v89 = (void (**)(char *, uint64_t, uint64_t))(v2 + 2);
      uint64_t v88 = (void (**)(uint64_t, uint64_t))(v2 + 1);
      long long v95 = &v103;
      uint64_t v87 = OBJC_IVAR___CHWorkoutDetailSegmentDataSource_formattingManager;
      CGFloat v101 = v10;
      uint64_t v100 = v10[2];
      NSAttributedStringKey v97 = NSFontAttributeName;
      long long v96 = xmmword_1007509E0;
      id v94 = (char *)&type metadata for Any + 8;
      uint64_t v86 = "";
      uint64_t v83 = inited;
      uint64_t v82 = v7;
LABEL_6:
      if (v84)
      {
        unint64_t v98 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v2 = (void *)(v8 + 1);
        if (__OFADD__(v8, 1)) {
          goto LABEL_67;
        }
      }
      else
      {
        if (v8 >= *(void *)(v81 + 16)) {
          goto LABEL_68;
        }
        unint64_t v98 = *(void *)(v80 + 8 * v8);
        swift_retain();
        uint64_t v2 = (void *)(v8 + 1);
        if (__OFADD__(v8, 1)) {
          goto LABEL_67;
        }
      }
      if (!v100)
      {
        swift_release();
        goto LABEL_5;
      }
      uint64_t v85 = v2;
      CGFloat v99 = (void *)v8;
      swift_bridgeObjectRetain();
      swift_beginAccess();
      uint64_t v11 = 0;
      while (2)
      {
        int v12 = (char *)v101 + v11;
        uint64_t v13 = *((unsigned __int8 *)v101 + v11++ + 32);
        switch(v12[32])
        {
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
          case 9:
          case 10:
          case 11:
            char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v14) {
              goto LABEL_20;
            }
            uint64_t v30 = v91;
            sub_100252BD4(v98, *(void **)((char *)v1 + v90), 0, *(void **)((char *)v1 + v87), v13, v91);
            sub_10007E2D8(0, (unint64_t *)&qword_10094D428);
            uint64_t v31 = v93;
            (*v89)(v92, v30, v93);
            id v29 = (id)NSAttributedString.init(_:)();
            (*v88)(v30, v31);
            goto LABEL_26;
          default:
            swift_bridgeObjectRelease();
LABEL_20:
            (*(void (**)(void *))((swift_isaMask & *v1) + 0x198))(v99);
            sub_1000AFA94((uint64_t *)&unk_10095BF70);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = v96;
            NSAttributedStringKey v15 = v97;
            *(void *)(inited + 32) = v97;
            uint64_t v16 = qword_10094A720;
            uint64_t v17 = v15;
            if (v16 != -1) {
              swift_once();
            }
            uint64_t v18 = (void *)qword_1009978F0;
            *(void *)(inited + 64) = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
            *(void *)(inited + 40) = v18;
            sub_1000AFA94(&qword_100952850);
            uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
            id v19 = v18;
            sub_100364990(inited + 32, (uint64_t)&v102);
            unint64_t v20 = v102;
            unint64_t v21 = sub_10005BC7C(v102);
            if ((v22 & 1) == 0)
            {
              v2[(v21 >> 6) + 8] |= 1 << v21;
              *(void *)(v2[6] + 8 * v21) = v20;
              sub_10005C2B0(v95, (_OWORD *)(v2[7] + 32 * v21));
              uint64_t v23 = v2[2];
              BOOL v24 = __OFADD__(v23, 1);
              uint64_t v25 = v23 + 1;
              if (v24) {
                goto LABEL_62;
              }
              v2[2] = v25;
              swift_bridgeObjectRelease();
              id v26 = objc_allocWithZone((Class)NSMutableAttributedString);
              NSString v27 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              type metadata accessor for Key(0);
              sub_100364A80((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
              Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
              swift_release();
              id v29 = [v26 initWithString:v27 attributes:isa];

LABEL_26:
              [v29 boundingRectWithSize:1 options:0 context:1.79769313e308 1.79769313e308 v80];
              double v32 = ceil(CGRectGetWidth(v105));
              uint64_t v33 = *(void *)v9;
              if (!*(void *)(*(void *)v9 + 16)) {
                goto LABEL_31;
              }
              swift_bridgeObjectRetain();
              uint64_t v34 = sub_100529A74(v13);
              if ((v35 & 1) == 0)
              {
                swift_bridgeObjectRelease();
LABEL_31:
                if (v32 <= 0.0) {
                  goto LABEL_16;
                }
                goto LABEL_32;
              }
              double v36 = *(double *)(*(void *)(v33 + 56) + 8 * v34);
              swift_bridgeObjectRelease();
              if (v36 >= v32) {
                goto LABEL_16;
              }
LABEL_32:
              switch((int)v13)
              {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                  char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  if (v37) {
                    goto LABEL_35;
                  }
                  swift_beginAccess();
                  uint64_t inited = swift_isUniquelyReferenced_nonNull_native();
                  CGFloat v104 = *(void **)v9;
                  uint64_t v2 = v104;
                  *(void *)uint64_t v9 = 0x8000000000000000;
                  unint64_t v39 = sub_100529A74(v13);
                  uint64_t v48 = v2[2];
                  BOOL v49 = (v47 & 1) == 0;
                  uint64_t v50 = v48 + v49;
                  if (__OFADD__(v48, v49)) {
                    goto LABEL_64;
                  }
                  char v51 = v47;
                  if (v2[3] >= v50)
                  {
                    if (inited)
                    {
                      unint64_t v46 = v104;
                      if (v47) {
                        goto LABEL_14;
                      }
                    }
                    else
                    {
                      uint64_t v2 = &v104;
                      sub_1004F2A48();
                      unint64_t v46 = v104;
                      if (v51) {
                        goto LABEL_14;
                      }
                    }
                  }
                  else
                  {
                    sub_1004E9864(v50, inited);
                    uint64_t v2 = v104;
                    uint64_t v52 = sub_100529A74(v13);
                    if ((v51 & 1) != (v53 & 1))
                    {
LABEL_91:
                      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
                      __break(1u);
                      JUMPOUT(0x1003631F4);
                    }
                    unint64_t v39 = v52;
                    unint64_t v46 = v104;
                    if (v51)
                    {
LABEL_14:
                      *(double *)(v46[7] + 8 * v39) = v32;
                      goto LABEL_15;
                    }
                  }
                  v46[(v39 >> 6) + 8] |= 1 << v39;
                  *(unsigned char *)(v46[6] + v39) = v13;
                  *(double *)(v46[7] + 8 * v39) = v32;
                  uint64_t v56 = v46[2];
                  BOOL v24 = __OFADD__(v56, 1);
                  uint64_t v55 = v56 + 1;
                  if (v24) {
                    goto LABEL_66;
                  }
LABEL_55:
                  v46[2] = v55;
LABEL_15:
                  *(void *)uint64_t v9 = v46;
                  swift_bridgeObjectRelease();
                  swift_endAccess();
                  break;
                default:
                  swift_bridgeObjectRelease();
LABEL_35:
                  if (v32 > 120.0) {
                    double v32 = 120.0;
                  }
                  swift_beginAccess();
                  uint64_t inited = swift_isUniquelyReferenced_nonNull_native();
                  CGFloat v104 = *(void **)v9;
                  uint64_t v2 = v104;
                  *(void *)uint64_t v9 = 0x8000000000000000;
                  unint64_t v39 = sub_100529A74(v13);
                  uint64_t v40 = v2[2];
                  BOOL v41 = (v38 & 1) == 0;
                  uint64_t v42 = v40 + v41;
                  if (__OFADD__(v40, v41)) {
                    goto LABEL_63;
                  }
                  char v43 = v38;
                  if (v2[3] >= v42)
                  {
                    if (inited)
                    {
                      unint64_t v46 = v104;
                      if (v38) {
                        goto LABEL_14;
                      }
                    }
                    else
                    {
                      uint64_t v2 = &v104;
                      sub_1004F2A48();
                      unint64_t v46 = v104;
                      if (v43) {
                        goto LABEL_14;
                      }
                    }
                  }
                  else
                  {
                    sub_1004E9864(v42, inited);
                    uint64_t v2 = v104;
                    uint64_t v44 = sub_100529A74(v13);
                    if ((v43 & 1) != (v45 & 1)) {
                      goto LABEL_91;
                    }
                    unint64_t v39 = v44;
                    unint64_t v46 = v104;
                    if (v43) {
                      goto LABEL_14;
                    }
                  }
                  v46[(v39 >> 6) + 8] |= 1 << v39;
                  *(unsigned char *)(v46[6] + v39) = v13;
                  *(double *)(v46[7] + 8 * v39) = v32;
                  uint64_t v54 = v46[2];
                  BOOL v24 = __OFADD__(v54, 1);
                  uint64_t v55 = v54 + 1;
                  if (v24) {
                    goto LABEL_65;
                  }
                  goto LABEL_55;
              }
LABEL_16:

              if (v100 != v11) {
                continue;
              }
              swift_release();
              swift_bridgeObjectRelease();
              uint64_t inited = v83;
              uint64_t v7 = v82;
              uint64_t v2 = v85;
LABEL_5:
              unint64_t v8 = (unint64_t)v2;
              if (v2 == (void *)v7) {
                goto LABEL_70;
              }
              goto LABEL_6;
            }
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            swift_bridgeObjectRetain();
            uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (!v7) {
              goto LABEL_70;
            }
            break;
        }
        break;
      }
    }
  }
LABEL_70:
  swift_bridgeObjectRelease();
  uint64_t v57 = *(void *)((char *)v1 + OBJC_IVAR___CHWorkoutDetailSegmentDataSource_defaultColumns);
  unint64_t v58 = *(void *)(v57 + 16);
  uint64_t v59 = (char *)v1 + OBJC_IVAR___CHWorkoutDetailSegmentDataSource_columnSizes;
  uint64_t v60 = v1;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  if (v58)
  {
    unint64_t v61 = 0;
    uint64_t v62 = v57 + 32;
    uint64_t v63 = _swiftEmptyArrayStorage;
    CGFloat v99 = v60;
    uint64_t v100 = v57;
    unint64_t v98 = v58;
LABEL_72:
    CGFloat v101 = v63;
    uint64_t v64 = 0;
    if (v61 <= v58) {
      unint64_t v65 = v58;
    }
    else {
      unint64_t v65 = v61;
    }
    unint64_t v66 = v61 - v65;
    uint64_t v67 = v62;
    do
    {
      if (!(v66 + v64))
      {
        __break(1u);
        goto LABEL_91;
      }
      if (*(void *)(*(void *)v59 + 16))
      {
        uint64_t v68 = *(unsigned __int8 *)(v67 + v61);
        uint64_t v69 = v62;
        swift_bridgeObjectRetain();
        sub_100529A74(v68);
        char v71 = v70;
        swift_bridgeObjectRelease();
        uint64_t v62 = v69;
        if (v71)
        {
          id v72 = v101;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          CGFloat v104 = v72;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1001C91F8(0, v72[2] + 1, 1);
            id v72 = v104;
          }
          unint64_t v75 = v72[2];
          unint64_t v74 = v72[3];
          if (v75 >= v74 >> 1)
          {
            sub_1001C91F8(v74 > 1, v75 + 1, 1);
            id v72 = v104;
          }
          unint64_t v76 = v61 + 1;
          v61 += 1 + v64;
          v72[2] = v75 + 1;
          *((unsigned char *)v72 + v75 + 32) = v68;
          BOOL v77 = v76 == v58;
          uint64_t v60 = v99;
          unint64_t v58 = v98;
          uint64_t v62 = v69;
          uint64_t v63 = v72;
          if (v77) {
            goto LABEL_89;
          }
          goto LABEL_72;
        }
      }
      ++v64;
      ++v67;
      --v58;
    }
    while (v61 != v58);
    uint64_t v60 = v99;
    uint64_t v63 = v101;
  }
  else
  {
    uint64_t v63 = _swiftEmptyArrayStorage;
  }
LABEL_89:
  swift_bridgeObjectRelease();

  swift_getKeyPath();
  swift_getKeyPath();
  CGFloat v104 = v63;
  uint64_t v78 = v60;
  return static Published.subscript.setter();
}

id sub_100363284()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailSegmentDataSource();
  return [super dealloc];
}

uint64_t sub_1003633E8()
{
  return type metadata accessor for WorkoutDetailSegmentDataSource();
}

uint64_t type metadata accessor for WorkoutDetailSegmentDataSource()
{
  uint64_t result = qword_100958938;
  if (!qword_100958938) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10036343C()
{
  sub_100181968(319, (unint64_t *)&qword_100953A80, &qword_100953A88);
  if (v0 <= 0x3F)
  {
    sub_100181968(319, &qword_100958948, &qword_100958950);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_100363560()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v0 = *(void *)(v2 + 16);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1003635EC()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x190))();
}

uint64_t sub_100363628@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for WorkoutDetailSegmentDataSource();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100363668(uint64_t a1)
{
  uint64_t result = sub_100364A80(&qword_100957008, (void (*)(uint64_t))type metadata accessor for WorkoutDetailSegmentDataSource);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003636C0@<X0>(void *a1@<X8>)
{
  return sub_1001CE214(a1);
}

uint64_t sub_1003636D4(uint64_t a1, void **a2)
{
  return sub_100363710(a1, a2);
}

uint64_t sub_1003636E8@<X0>(void *a1@<X8>)
{
  return sub_1001CE214(a1);
}

uint64_t sub_1003636FC(uint64_t a1, void **a2)
{
  return sub_100363710(a1, a2);
}

uint64_t sub_100363710(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return static Published.subscript.setter();
}

id sub_100363784(void *a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v40 = a4;
  BOOL v41 = a2;
  uint64_t v42 = a3;
  char v43 = a1;
  uint64_t v39 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v5 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1000AFA94(&qword_100958970);
  uint64_t v8 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_100953A98);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  char v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSAttributedStringKey v15 = &v4[OBJC_IVAR___CHWorkoutDetailSegmentDataSource__metrics];
  char v45 = _swiftEmptyArrayStorage;
  uint64_t v16 = v4;
  sub_1000AFA94(&qword_100953A88);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v14, v11);
  uint64_t v17 = &v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource__columns];
  char v45 = _swiftEmptyArrayStorage;
  sub_1000AFA94(&qword_100958950);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v17, v10, v38);
  *(void *)&v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_columnSizes] = _swiftEmptyDictionarySingleton;
  uint64_t v18 = OBJC_IVAR___CHWorkoutDetailSegmentDataSource_internalQueue;
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v19 = v39;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchQoS.QoSClass.userInitiated(_:), v39);
  uint64_t v20 = static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v19);
  *(void *)&v16[v18] = v20;
  char v22 = v40;
  unint64_t v21 = v41;
  uint64_t v23 = &v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_delegate];
  *(void *)uint64_t v23 = 0;
  *((void *)v23 + 1) = 0;
  BOOL v24 = &v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_trackDistanceUnit];
  *(void *)BOOL v24 = 0;
  v24[8] = 1;
  *(void *)&v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_dataCalculator] = v21;
  id v25 = v21;
  id v26 = [v22 fitnessUIFormattingManager];
  *(void *)&v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_formattingManager] = v26;
  NSString v27 = v43;
  *(void *)BOOL v24 = v42;
  v24[8] = 0;
  *(void *)&v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_workout] = v27;
  id v28 = v27;
  if (![v22 supportsDistanceForWorkout:v28 workoutActivity:0])
  {
    if ([v28 _activityMoveMode] == (id)1) {
      char v35 = &off_1008B5EF8;
    }
    else {
      char v35 = &off_1008B5F20;
    }
    *(void *)&v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_defaultColumns] = v35;
    goto LABEL_17;
  }
  if ([v28 workoutActivityType] == (id)13) {
    char v29 = 9;
  }
  else {
    char v29 = 6;
  }
  if (![v22 supportsPaceForWorkout:v28 workoutActivity:0])
  {
    sub_1000AFA94(&qword_10094E7D0);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_10075FCD0;
    *(_DWORD *)(v34 + 32) = 67240192;
    *(unsigned char *)(v34 + 36) = 5;
    *(unsigned char *)(v34 + 37) = v29;
LABEL_14:
    *(void *)&v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_defaultColumns] = v34;
LABEL_17:

    double v36 = (objc_class *)type metadata accessor for WorkoutDetailSegmentDataSource();
    v44.receiver = v16;
    v44.super_class = v36;
    return [super init];
  }
  id result = [v28 fiui_activityType];
  if (result)
  {
    uint64_t v31 = result;
    uint64_t v32 = FIUIPaceFormatForWorkoutActivityType();

    if (v32 == 4) {
      char v33 = 8;
    }
    else {
      char v33 = 3;
    }
    sub_1000AFA94(&qword_10094E7D0);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_10075CD20;
    *(_WORD *)(v34 + 32) = 256;
    *(unsigned char *)(v34 + 34) = 2;
    *(unsigned char *)(v34 + 35) = v33;
    *(_WORD *)(v34 + 36) = 1284;
    *(unsigned char *)(v34 + 38) = v29;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

id sub_100363C78(void *a1, void *a2, void *a3)
{
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v40 = a1;
  uint64_t v37 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v4 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1000AFA94(&qword_100958970);
  uint64_t v7 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100953A98);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v14 = &v3[OBJC_IVAR___CHWorkoutDetailSegmentDataSource__metrics];
  uint64_t v42 = _swiftEmptyArrayStorage;
  NSAttributedStringKey v15 = v3;
  sub_1000AFA94(&qword_100953A88);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v13, v10);
  uint64_t v16 = &v15[OBJC_IVAR___CHWorkoutDetailSegmentDataSource__columns];
  uint64_t v42 = _swiftEmptyArrayStorage;
  sub_1000AFA94(&qword_100958950);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v16, v9, v36);
  *(void *)&v15[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_columnSizes] = _swiftEmptyDictionarySingleton;
  uint64_t v17 = OBJC_IVAR___CHWorkoutDetailSegmentDataSource_internalQueue;
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v18 = v37;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for DispatchQoS.QoSClass.userInitiated(_:), v37);
  uint64_t v19 = static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v18);
  *(void *)&v15[v17] = v19;
  uint64_t v20 = &v15[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_delegate];
  *(void *)uint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  unint64_t v21 = &v15[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_trackDistanceUnit];
  *(void *)unint64_t v21 = 0;
  _OWORD v21[8] = 1;
  uint64_t v23 = v38;
  char v22 = v39;
  *(void *)&v15[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_dataCalculator] = v39;
  id v24 = v22;
  id v25 = [v23 fitnessUIFormattingManager];
  *(void *)&v15[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_formattingManager] = v25;
  id v26 = v40;
  *(void *)&v15[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_workout] = v40;
  id v27 = v26;
  if (![v23 supportsDistanceForWorkout:v27 workoutActivity:0])
  {
    if ([v27 _activityMoveMode] == (id)1) {
      uint64_t v34 = &off_1008B5F48;
    }
    else {
      uint64_t v34 = &off_1008B5F70;
    }
    *(void *)&v15[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_defaultColumns] = v34;
    goto LABEL_17;
  }
  if ([v27 workoutActivityType] == (id)13) {
    char v28 = 9;
  }
  else {
    char v28 = 6;
  }
  if (!objc_msgSend(v23, "supportsPaceForWorkout:workoutActivity:", v27, 0, v36))
  {
    sub_1000AFA94(&qword_10094E7D0);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_10075FCD0;
    *(_DWORD *)(v33 + 32) = 67240192;
    *(unsigned char *)(v33 + 36) = 5;
    *(unsigned char *)(v33 + 37) = v28;
LABEL_14:
    *(void *)&v15[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_defaultColumns] = v33;
LABEL_17:

    char v35 = (objc_class *)type metadata accessor for WorkoutDetailSegmentDataSource();
    v41.receiver = v15;
    v41.super_class = v35;
    return [super init];
  }
  id result = [v27 fiui_activityType];
  if (result)
  {
    uint64_t v30 = result;
    uint64_t v31 = FIUIPaceFormatForWorkoutActivityType();

    if (v31 == 4) {
      char v32 = 8;
    }
    else {
      char v32 = 3;
    }
    sub_1000AFA94(&qword_10094E7D0);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_10075CD20;
    *(_WORD *)(v33 + 32) = 256;
    *(unsigned char *)(v33 + 34) = 2;
    *(unsigned char *)(v33 + 35) = v32;
    *(_WORD *)(v33 + 36) = 1284;
    *(unsigned char *)(v33 + 38) = v28;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_100364164()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v0 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v0 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100364220@<X0>(void *a1@<X8>)
{
  return sub_1001CE214(a1);
}

uint64_t sub_100364248(uint64_t a1, void **a2)
{
  return sub_100363710(a1, a2);
}

uint64_t sub_100364270@<X0>(void *a1@<X8>)
{
  return sub_1001CE214(a1);
}

uint64_t sub_100364298(uint64_t a1, void **a2)
{
  return sub_100363710(a1, a2);
}

uint64_t sub_1003642C0(unint64_t a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for AttributedString();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v56[0] = (uint64_t)v56 - v10;
  uint64_t v11 = type metadata accessor for DynamicTypeSize();
  uint64_t v57 = *(void *)(v11 - 8);
  uint64_t v58 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_100958958);
  __chkstk_darwin(v14);
  uint64_t v59 = (char *)v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t KeyPath = swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (*(void *)(v60 + 16) <= a2)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    uint64_t v40 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_12;
  }
  v56[1] = v14;
  LOBYTE(a2) = *(unsigned char *)(v60 + a2 + 32);
  swift_bridgeObjectRelease();
  if (sub_100252154(a2) == 0x72656B72616DLL && v17 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    uint64_t v60 = (*(uint64_t (**)(unint64_t))((swift_isaMask & *v2) + 0x198))(a1);
    uint64_t v61 = v19;
    sub_1000A06D0();
    uint64_t v20 = Text.init<A>(_:)();
    uint64_t v22 = v21;
    char v24 = v23 & 1;
    static Font.body.getter();
    uint64_t v25 = Text.font(_:)();
    uint64_t v27 = v26;
    char v29 = v28;
    v56[0] = v30;
    swift_release();
    sub_1000A06C0(v20, v22, v24);
    swift_bridgeObjectRelease();
    uint64_t v31 = swift_getKeyPath();
    uint64_t v32 = sub_1002528C4(a2);
    uint64_t v33 = swift_getKeyPath();
    uint64_t v60 = v25;
    uint64_t v61 = v27;
    char v62 = v29 & 1;
    uint64_t v63 = v56[0];
    uint64_t v64 = v31;
    uint64_t v65 = 3;
    char v66 = 0;
    uint64_t v67 = v33;
    uint64_t v68 = v32;
    uint64_t v35 = v57;
    uint64_t v34 = v58;
    (*(void (**)(char *, void, uint64_t))(v57 + 104))(v13, enum case for DynamicTypeSize.large(_:), v58);
    uint64_t v36 = sub_1000AFA94(&qword_100958960);
    unint64_t v37 = sub_1003648F0();
    View.dynamicTypeSize(_:)();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v34);
    sub_1000A06C0(v60, v61, v62);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v60 = v36;
    uint64_t v61 = v37;
    swift_getOpaqueTypeConformance2();
    return AnyView.init<A>(_:)();
  }
  char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v18) {
    goto LABEL_7;
  }
  uint64_t KeyPath = v6;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  if ((v60 & 0xC000000000000001) != 0) {
    goto LABEL_16;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
  {
    uint64_t v40 = *(void *)(v60 + 8 * a1 + 32);
    swift_retain();
LABEL_12:
    uint64_t v58 = v40;
    swift_bridgeObjectRelease();
    objc_super v41 = *(void **)((char *)v2 + OBJC_IVAR___CHWorkoutDetailSegmentDataSource_workout);
    uint64_t v42 = *(void **)((char *)v2 + OBJC_IVAR___CHWorkoutDetailSegmentDataSource_formattingManager);
    uint64_t v43 = v56[0];
    sub_100252BD4(v40, v41, 0, v42, a2, v56[0]);
    (*(void (**)(char *, uint64_t, uint64_t))(KeyPath + 16))(v8, v43, v5);
    uint64_t v44 = Text.init(_:)();
    uint64_t v46 = v45;
    uint64_t v59 = (char *)v5;
    char v48 = v47 & 1;
    sub_1002528C4(a2);
    uint64_t v49 = Text.foregroundColor(_:)();
    uint64_t v51 = v50;
    char v53 = v52;
    uint64_t v55 = v54;
    swift_release();
    sub_1000A06C0(v44, v46, v48);
    swift_bridgeObjectRelease();
    uint64_t v60 = v49;
    uint64_t v61 = v51;
    char v62 = v53 & 1;
    uint64_t v63 = v55;
    uint64_t v38 = AnyView.init<A>(_:)();
    swift_release();
    (*(void (**)(uint64_t, char *))(KeyPath + 8))(v56[0], v59);
    return v38;
  }
  __break(1u);
  return result;
}

unint64_t sub_1003648F0()
{
  unint64_t result = qword_100958968;
  if (!qword_100958968)
  {
    sub_1000A1370(&qword_100958960);
    sub_1000E2004();
    sub_1000A132C(&qword_100954C68, &qword_100954C70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100958968);
  }
  return result;
}

uint64_t sub_100364990(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100952858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003649F8()
{
  return swift_deallocObject();
}

void sub_100364A30(unint64_t a1, uint64_t a2)
{
  sub_10036101C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100364A38()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100364A78()
{
  return sub_10036174C(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100364A80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100364AC8()
{
  return swift_deallocObject();
}

uint64_t sub_100364B08()
{
  return sub_100361998(*(char **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

id sub_100364B14()
{
  return sub_100361E40(*(void *)(v0 + 16));
}

uint64_t sub_100364B1C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100364B5C()
{
  return sub_100361D2C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100364B7C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_100364BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_100364C60(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v4 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100364D28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t sub_100364DB0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100364DF8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_100364E4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100364E90()
{
  return ScrollView.init(_:showsIndicators:content:)();
}

uint64_t sub_100364EA8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = (_OWORD *)swift_allocObject();
  long long v15 = *(_OWORD *)(a1 + 32);
  v5[1] = *(_OWORD *)(a1 + 16);
  v5[2] = v15;
  long long v6 = v2[3];
  v5[5] = v2[2];
  v5[6] = v6;
  _OWORD v5[7] = v2[4];
  long long v7 = v2[1];
  v5[3] = *v2;
  v5[4] = v7;
  sub_100366BC8((uint64_t)v2);
  type metadata accessor for HStack();
  swift_getWitnessTable();
  type metadata accessor for ScrollView();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  sub_100366C34();
  swift_getOpaqueTypeMetadata2();
  sub_1000A1370(&qword_100958A08);
  type metadata accessor for ModifiedContent();
  type metadata accessor for PagingScrollTargetBehavior();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v19 = sub_100366C88();
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  uint64_t v22 = WitnessTable;
  char v23 = &protocol witness table for PagingScrollTargetBehavior;
  swift_getOpaqueTypeConformance2();
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v10 = swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeMetadata2();
  uint64_t v20 = OpaqueTypeMetadata2;
  uint64_t v21 = v10;
  swift_getOpaqueTypeConformance2();
  uint64_t v16 = ScrollViewReader.init(content:)();
  uint64_t v17 = v11;
  uint64_t v12 = type metadata accessor for ScrollViewReader();
  swift_getWitnessTable();
  uint64_t v13 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16);
  v13(&v20, &v16, v12);
  swift_release();
  uint64_t v16 = v20;
  uint64_t v17 = v21;
  v13(a2, &v16, v12);
  return swift_release();
}

uint64_t sub_1003652B0@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v116 = a6;
  uint64_t v94 = a5;
  uint64_t v114 = a4;
  uint64_t v92 = a3;
  uint64_t v124 = a1;
  long long v140 = a7;
  uint64_t v139 = type metadata accessor for ScrollBounceBehavior();
  uint64_t v138 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  uint64_t v137 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = type metadata accessor for ScrollIndicatorVisibility();
  uint64_t v135 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  uint64_t v132 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = type metadata accessor for PagingScrollTargetBehavior();
  uint64_t v134 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  long long v133 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = type metadata accessor for ScrollViewProxy();
  uint64_t v108 = *(void *)(v111 - 8);
  uint64_t v110 = *(void *)(v108 + 64);
  __chkstk_darwin(v111);
  id v107 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HStack();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v12 = type metadata accessor for ScrollView();
  uint64_t v113 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v89 = (char *)&v88 - v13;
  uint64_t v14 = swift_getWitnessTable();
  *(void *)&long long v154 = v12;
  *((void *)&v154 + 1) = &type metadata for Int;
  uint64_t v100 = v12;
  uint64_t v155 = v14;
  uint64_t v156 = &protocol witness table for Int;
  uint64_t v15 = v14;
  uint64_t v101 = v14;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v115 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  CGFloat v99 = (char *)&v88 - v17;
  *(void *)&long long v154 = v12;
  *((void *)&v154 + 1) = &type metadata for Int;
  uint64_t v155 = v15;
  uint64_t v156 = &protocol witness table for Int;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v154 = OpaqueTypeMetadata2;
  *((void *)&v154 + 1) = OpaqueTypeConformance2;
  uint64_t v19 = OpaqueTypeMetadata2;
  uint64_t v103 = OpaqueTypeMetadata2;
  uint64_t v20 = OpaqueTypeConformance2;
  uint64_t v104 = OpaqueTypeConformance2;
  uint64_t v21 = swift_getOpaqueTypeMetadata2();
  uint64_t v119 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  unint64_t v102 = (char *)&v88 - v22;
  *(void *)&long long v154 = v19;
  *((void *)&v154 + 1) = v20;
  uint64_t v23 = swift_getOpaqueTypeConformance2();
  unint64_t v24 = sub_100366C34();
  *(void *)&long long v154 = v21;
  *((void *)&v154 + 1) = &type metadata for CGFloat;
  uint64_t v25 = v21;
  uint64_t v95 = v21;
  uint64_t v155 = v23;
  uint64_t v156 = (void *)v24;
  uint64_t v96 = v23;
  unint64_t v91 = v24;
  uint64_t v112 = swift_getOpaqueTypeMetadata2();
  uint64_t v118 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  CGRect v105 = (char *)&v88 - v26;
  sub_1000A1370(&qword_100958A08);
  uint64_t v27 = type metadata accessor for ModifiedContent();
  uint64_t v117 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  unsigned int v109 = (char *)&v88 - v28;
  *(void *)&long long v154 = v25;
  *((void *)&v154 + 1) = &type metadata for CGFloat;
  uint64_t v155 = v23;
  uint64_t v156 = (void *)v24;
  uint64_t v29 = swift_getOpaqueTypeConformance2();
  uint64_t v106 = v29;
  unint64_t v30 = sub_100366C88();
  uint64_t v152 = v29;
  unint64_t v153 = v30;
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v97 = v27;
  uint64_t v32 = v141;
  *(void *)&long long v154 = v27;
  *((void *)&v154 + 1) = v141;
  uint64_t v155 = v31;
  uint64_t v156 = &protocol witness table for PagingScrollTargetBehavior;
  uint64_t v33 = v31;
  uint64_t v98 = v31;
  uint64_t v34 = swift_getOpaqueTypeMetadata2();
  uint64_t v130 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v90 = (char *)&v88 - v35;
  *(void *)&long long v154 = v27;
  *((void *)&v154 + 1) = v32;
  uint64_t v155 = v33;
  uint64_t v156 = &protocol witness table for PagingScrollTargetBehavior;
  uint64_t v36 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v154 = v34;
  *((void *)&v154 + 1) = v36;
  uint64_t v37 = swift_getOpaqueTypeMetadata2();
  uint64_t v128 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  id v126 = (char *)&v88 - v38;
  uint64_t v131 = v34;
  *(void *)&long long v154 = v34;
  *((void *)&v154 + 1) = v36;
  uint64_t v123 = v36;
  uint64_t v39 = swift_getOpaqueTypeConformance2();
  uint64_t v129 = v37;
  *(void *)&long long v154 = v37;
  *((void *)&v154 + 1) = v39;
  uint64_t v120 = v39;
  uint64_t v127 = swift_getOpaqueTypeMetadata2();
  uint64_t v125 = *(void *)(v127 - 8);
  __chkstk_darwin(v127);
  uint64_t v121 = (char *)&v88 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  long long v122 = (char *)&v88 - v42;
  static Axis.Set.horizontal.getter();
  uint64_t v43 = v92;
  uint64_t v44 = v114;
  uint64_t v147 = v92;
  uint64_t v148 = v114;
  uint64_t v45 = v94;
  uint64_t v46 = v116;
  uint64_t v149 = v94;
  uint64_t v150 = v116;
  id v151 = a2;
  ScrollView.init(_:showsIndicators:content:)();
  long long v154 = *a2;
  sub_1000AFA94(&qword_10094C330);
  State.wrappedValue.getter();
  uint64_t v47 = v108;
  char v48 = v107;
  uint64_t v49 = v111;
  (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v107, v124, v111);
  unint64_t v50 = (*(unsigned __int8 *)(v47 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = v43;
  *(void *)(v51 + 24) = v44;
  *(void *)(v51 + 32) = v45;
  *(void *)(v51 + 40) = v46;
  long long v52 = a2[3];
  *(_OWORD *)(v51 + 80) = a2[2];
  *(_OWORD *)(v51 + 96) = v52;
  *(_OWORD *)(v51 + 112) = a2[4];
  long long v53 = a2[1];
  *(_OWORD *)(v51 + 48) = *a2;
  *(_OWORD *)(v51 + 64) = v53;
  (*(void (**)(unint64_t, char *, uint64_t))(v47 + 32))(v51 + v50, v48, v49);
  sub_100366BC8((uint64_t)a2);
  uint64_t v54 = v99;
  uint64_t v55 = v100;
  uint64_t v56 = v89;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v113 + 8))(v56, v55);
  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = v43;
  *(void *)(v57 + 24) = v44;
  *(void *)(v57 + 32) = v45;
  *(void *)(v57 + 40) = v46;
  uint64_t v58 = v46;
  long long v59 = a2[3];
  *(_OWORD *)(v57 + 80) = a2[2];
  *(_OWORD *)(v57 + 96) = v59;
  *(_OWORD *)(v57 + 112) = a2[4];
  long long v60 = a2[1];
  *(_OWORD *)(v57 + 48) = *a2;
  *(_OWORD *)(v57 + 64) = v60;
  sub_100366BC8((uint64_t)a2);
  uint64_t v61 = v102;
  uint64_t v62 = v103;
  View.onScrollPhaseChange(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v54, v62);
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = v43;
  *(void *)(v63 + 24) = v44;
  *(void *)(v63 + 32) = v45;
  *(void *)(v63 + 40) = v58;
  long long v64 = a2[3];
  *(_OWORD *)(v63 + 80) = a2[2];
  *(_OWORD *)(v63 + 96) = v64;
  *(_OWORD *)(v63 + 112) = a2[4];
  long long v65 = a2[1];
  *(_OWORD *)(v63 + 48) = *a2;
  *(_OWORD *)(v63 + 64) = v65;
  sub_100366BC8((uint64_t)a2);
  char v66 = v105;
  uint64_t v67 = v95;
  View.onScrollGeometryChange<A>(for:of:action:)();
  swift_release();
  uint64_t v68 = v67;
  uint64_t v69 = v132;
  (*(void (**)(char *, uint64_t))(v119 + 8))(v61, v68);
  static Alignment.bottom.getter();
  uint64_t v142 = v43;
  uint64_t v143 = v44;
  char v70 = v90;
  uint64_t v144 = v45;
  uint64_t v145 = v58;
  uint64_t v146 = a2;
  sub_1000AFA94(&qword_100958A18);
  sub_100366ED4();
  char v71 = v109;
  uint64_t v72 = v112;
  View.overlay<A>(alignment:content:)();
  (*(void (**)(char *, uint64_t))(v118 + 8))(v66, v72);
  uint64_t v73 = v133;
  PagingScrollTargetBehavior.init()();
  uint64_t v74 = v97;
  uint64_t v75 = v141;
  View.scrollTargetBehavior<A>(_:)();
  (*(void (**)(char *, uint64_t))(v134 + 8))(v73, v75);
  (*(void (**)(char *, uint64_t))(v117 + 8))(v71, v74);
  static ScrollIndicatorVisibility.hidden.getter();
  LOBYTE(v73) = static Axis.Set.vertical.getter();
  unsigned __int8 v76 = static Axis.Set.horizontal.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v73) {
    Axis.Set.init(rawValue:)();
  }
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v76) {
    Axis.Set.init(rawValue:)();
  }
  BOOL v77 = v126;
  uint64_t v78 = v131;
  View.scrollIndicators(_:axes:)();
  (*(void (**)(char *, uint64_t))(v135 + 8))(v69, v136);
  (*(void (**)(char *, uint64_t))(v130 + 8))(v70, v78);
  uint64_t v79 = v137;
  static ScrollBounceBehavior.basedOnSize.getter();
  static Axis.Set.horizontal.getter();
  uint64_t v80 = v121;
  uint64_t v81 = v129;
  View.scrollBounceBehavior(_:axes:)();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v79, v139);
  (*(void (**)(char *, uint64_t))(v128 + 8))(v77, v81);
  uint64_t v82 = v125;
  uint64_t v83 = *(void (**)(char *, char *, uint64_t))(v125 + 16);
  unint64_t v84 = v122;
  uint64_t v85 = v127;
  v83(v122, v80, v127);
  uint64_t v86 = *(void (**)(char *, uint64_t))(v82 + 8);
  v86(v80, v85);
  v83(v140, v84, v85);
  return ((uint64_t (*)(char *, uint64_t))v86)(v84, v85);
}

uint64_t sub_10036629C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unsigned char *a6@<X8>)
{
  uint64_t v12 = type metadata accessor for HStack();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = &v22[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  char v18 = &v22[-v17];
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  uint64_t v26 = a5;
  uint64_t v27 = a1;
  static VerticalAlignment.center.getter();
  HStack.init(alignment:spacing:content:)();
  swift_getWitnessTable();
  uint64_t v19 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 16);
  v19(v18, v15, v12);
  uint64_t v20 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
  v20(v15, v12);
  v19(a6, v18, v12);
  return ((uint64_t (*)(unsigned char *, uint64_t))v20)(v18, v12);
}

uint64_t sub_100366454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v15 - v10;
  (*(void (**)(void))(v9 + 64))();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v12(v11, v8, a2);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, a2);
  v12(a3, v11, a2);
  return ((uint64_t (*)(char *, uint64_t))v13)(v11, a2);
}

uint64_t sub_100366594(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v18 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = *(void *)(a6 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v21 = a3[1];
  sub_1000AFA94(&qword_10094DEE0);
  uint64_t result = State.wrappedValue.getter();
  if (v20 == 1)
  {
    *(void *)&long long v20 = *((void *)a3 + 6);
    type metadata accessor for Array();
    swift_getWitnessTable();
    RandomAccessCollection<>.indices.getter();
    long long v19 = *a3;
    long long v20 = v21;
    sub_1000AFA94(&qword_10094C330);
    State.wrappedValue.getter();
    sub_1000AFA94(&qword_10094E360);
    uint64_t result = Range.contains(_:)();
    if (result)
    {
      long long v21 = *a3;
      State.wrappedValue.getter();
      Array.subscript.getter();
      dispatch thunk of Identifiable.id.getter();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, a6);
      swift_getAssociatedConformanceWitness();
      ScrollViewProxy.scrollTo<A>(_:anchor:)();
      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v10, AssociatedTypeWitness);
    }
  }
  return result;
}

uint64_t sub_100366858()
{
  return State.wrappedValue.setter();
}

double sub_1003668C4@<D0>(double *a1@<X8>)
{
  ScrollGeometry.contentOffset.getter();
  double v3 = v2;
  ScrollGeometry.containerSize.getter();
  double result = v3 / v4;
  *a1 = result;
  return result;
}

uint64_t sub_100366904(uint64_t a1, double *a2)
{
  double v2 = round(*a2);
  if ((~*(void *)&v2 & 0x7FF0000000000000) != 0)
  {
    if (v2 <= -9.22337204e18)
    {
      __break(1u);
    }
    else if (v2 < 9.22337204e18)
    {
      sub_1000AFA94(&qword_10094C330);
      return State.wrappedValue.setter();
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100366998@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_100958A30);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = Array.count.getter();
  long long v27 = *a1;
  sub_1000AFA94(&qword_10094C330);
  State.projectedValue.getter();
  uint64_t v9 = v23;
  uint64_t v10 = v24;
  uint64_t v11 = v25;
  uint64_t v23 = v8;
  uint64_t v24 = v9;
  uint64_t v25 = v10;
  uint64_t v26 = v11;
  sub_100366F7C();
  View.isHidden(_:defaultAccessibilityHidden:)();
  swift_release();
  swift_release();
  char v12 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(a2, v7, v4);
  uint64_t v21 = a2 + *(int *)(sub_1000AFA94(&qword_100958A18) + 36);
  *(unsigned char *)uint64_t v21 = v12;
  *(void *)(v21 + 8) = v14;
  *(void *)(v21 + 16) = v16;
  *(void *)(v21 + 24) = v18;
  *(void *)(v21 + 32) = v20;
  *(unsigned char *)(v21 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100366B70@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100364EA8(a1, a2);
}

uint64_t sub_100366BB8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_1003652B0(a1, (_OWORD *)(v2 + 48), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), a2);
}

uint64_t sub_100366BC8(uint64_t a1)
{
  return a1;
}

unint64_t sub_100366C34()
{
  unint64_t result = qword_100958A00;
  if (!qword_100958A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100958A00);
  }
  return result;
}

unint64_t sub_100366C88()
{
  unint64_t result = qword_100958A10;
  if (!qword_100958A10)
  {
    sub_1000A1370(&qword_100958A08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100958A10);
  }
  return result;
}

uint64_t sub_100366CE4()
{
  return sub_100366FE8((uint64_t (*)(void, void, void, void, void))sub_10036629C);
}

uint64_t sub_100366CFC()
{
  uint64_t v1 = type metadata accessor for ScrollViewProxy();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_100366DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for ScrollViewProxy() - 8);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v7 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_100366594(a1, a2, (long long *)(v2 + 48), v8, v5, v6);
}

uint64_t sub_100366E98()
{
  return sub_100366858();
}

uint64_t sub_100366EAC(uint64_t a1, double *a2)
{
  return sub_100366904(a1, a2);
}

uint64_t sub_100366EBC()
{
  return sub_100366FE8((uint64_t (*)(void, void, void, void, void))sub_100366998);
}

unint64_t sub_100366ED4()
{
  unint64_t result = qword_100958A20;
  if (!qword_100958A20)
  {
    sub_1000A1370(&qword_100958A18);
    sub_100366F7C();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100958A20);
  }
  return result;
}

unint64_t sub_100366F7C()
{
  unint64_t result = qword_100958A28;
  if (!qword_100958A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100958A28);
  }
  return result;
}

uint64_t sub_100366FD0()
{
  return sub_100366FE8((uint64_t (*)(void, void, void, void, void))sub_100366454);
}

uint64_t sub_100366FE8(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_100367000()
{
  return swift_getWitnessTable();
}

uint64_t sub_100367310()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp20WorkoutHeartRateInfo_elapsedTimeInZones);
  if (!v1) {
    return 0;
  }
  int64_t v2 = 0;
  uint64_t v3 = v1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  for (double i = 0.0; ; double i = i + *(double *)(*(void *)(v1 + 56) + 8 * v10))
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v2 << 6);
      continue;
    }
    int64_t v11 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v11 >= v7) {
      return *(void *)&i;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v2;
    if (!v12)
    {
      int64_t v2 = v11 + 1;
      if (v11 + 1 >= v7) {
        return *(void *)&i;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (!v12)
      {
        int64_t v2 = v11 + 2;
        if (v11 + 2 >= v7) {
          return *(void *)&i;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v2);
        if (!v12)
        {
          int64_t v2 = v11 + 3;
          if (v11 + 3 >= v7) {
            return *(void *)&i;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v2);
          if (!v12)
          {
            int64_t v2 = v11 + 4;
            if (v11 + 4 >= v7) {
              return *(void *)&i;
            }
            unint64_t v12 = *(void *)(v3 + 8 * v2);
            if (!v12) {
              break;
            }
          }
        }
      }
    }
LABEL_25:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v2 << 6);
  }
  int64_t v13 = v11 + 5;
  if (v13 >= v7) {
    return *(void *)&i;
  }
  unint64_t v12 = *(void *)(v3 + 8 * v13);
  if (v12)
  {
    int64_t v2 = v13;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v2 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v2 >= v7) {
      return *(void *)&i;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v2);
    ++v13;
    if (v12) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10036745C()
{
  unint64_t v1 = *(void *)(v0 + 16);
  if (!v1) {
    return 0;
  }
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2)
  {
    sub_1001C8F2C(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
    {
      __break(1u);
      goto LABEL_21;
    }
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v3 = 0;
      do
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        Zone.displaySpan.getter();
        uint64_t v5 = v4;
        uint64_t v7 = v6;
        swift_unknownObjectRelease();
        unint64_t v9 = _swiftEmptyArrayStorage[2];
        unint64_t v8 = _swiftEmptyArrayStorage[3];
        if (v9 >= v8 >> 1) {
          sub_1001C8F2C(v8 > 1, v9 + 1, 1);
        }
        ++v3;
        _swiftEmptyArrayStorage[2] = v9 + 1;
        unint64_t v10 = &_swiftEmptyArrayStorage[2 * v9];
        v10[4] = v5;
        v10[5] = v7;
      }
      while (v2 != v3);
    }
    else
    {
      unint64_t v12 = v1 + 32;
      do
      {
        swift_retain();
        Zone.displaySpan.getter();
        uint64_t v14 = v13;
        uint64_t v16 = v15;
        swift_release();
        unint64_t v18 = _swiftEmptyArrayStorage[2];
        unint64_t v17 = _swiftEmptyArrayStorage[3];
        if (v18 >= v17 >> 1) {
          sub_1001C8F2C(v17 > 1, v18 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v18 + 1;
        uint64_t v19 = &_swiftEmptyArrayStorage[2 * v18];
        v19[4] = v14;
        v19[5] = v16;
        v12 += 8;
        --v2;
      }
      while (v2);
    }
  }
  type metadata accessor for ChartZones();
  uint64_t result = swift_allocObject();
  if (_swiftEmptyArrayStorage[2])
  {
    *(void *)(result + 16) = _swiftEmptyArrayStorage;
    return result;
  }
LABEL_21:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100367680()
{
  uint64_t v1 = 0x656E696665646E75;
  uint64_t v2 = type metadata accessor for HeartRateConfiguration.ConfigurationType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for HeartRateConfiguration.ConfigurationType.automatic(_:), v2);
  sub_1001CE59C();
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  uint64_t v6 = v30;
  uint64_t v7 = v32;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_100367310();
  uint64_t v8 = 0x656E696665646E75;
  unint64_t v9 = (void *)0xE900000000000064;
  if ((v10 & 1) == 0)
  {
    uint64_t result = sub_100367310();
    double v12 = *(double *)&result;
    if (v13) {
      double v12 = 0.0;
    }
    if ((~*(void *)&v12 & 0x7FF0000000000000) != 0)
    {
      if (v12 > -9.22337204e18)
      {
        if (v12 < 9.22337204e18)
        {
          uint64_t v30 = (uint64_t)v12;
          uint64_t v8 = dispatch thunk of CustomStringConvertible.description.getter();
          unint64_t v9 = v14;
          goto LABEL_8;
        }
LABEL_20:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_20;
  }
LABEL_8:
  if (*(void *)(v0 + 16))
  {
    unint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_10036820C(v15, (uint64_t (*)(unint64_t, uint64_t))sub_100368204);
    swift_bridgeObjectRelease();
    uint64_t v30 = (uint64_t)v16;
    sub_1000AFA94((uint64_t *)&unk_10094B1F0);
    sub_1000B1A84();
    uint64_t v1 = BidirectionalCollection<>.joined(separator:)();
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v18 = (void *)0xE900000000000064;
  }
  if (v6 == v7) {
    uint64_t v19 = (void *)0xE900000000000063;
  }
  else {
    uint64_t v19 = (void *)0xE600000000000000;
  }
  if (v6 == v7) {
    uint64_t v20 = 0x6974616D6F747561;
  }
  else {
    uint64_t v20 = 0x6C61756E616DLL;
  }
  uint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  _StringGuts.grow(_:)(66);
  v21._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  v22._countAndFlagsBits = 0x5A6E49656D697428;
  v22._object = (void *)0xEF5B203A73656E6FLL;
  String.append(_:)(v22);
  v23._countAndFlagsBits = v1;
  v23._object = v18;
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  v24._object = (void *)0x80000001007C2610;
  v24._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v24);
  v25._countAndFlagsBits = v8;
  v25._object = v9;
  String.append(_:)(v25);
  swift_bridgeObjectRelease();
  v26._object = (void *)0x80000001007C2630;
  v26._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v26);
  v27._countAndFlagsBits = v20;
  v27._object = v19;
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  v28._countAndFlagsBits = 41;
  v28._object = (void *)0xE100000000000000;
  String.append(_:)(v28);
  return v30;
}

void sub_100367A40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Zone.displaySpan.getter();
  if ((~*(void *)&v5 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v5 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  dispatch thunk of CustomStringConvertible.description.getter();
  v6._countAndFlagsBits = 45;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  Zone.displaySpan.getter();
  if ((~*(void *)&v7 & 0x7FF0000000000000) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v7 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 8250;
  v9._object = (void *)0xE200000000000000;
  String.append(_:)(v9);
  uint64_t v10 = *(void *)(a3 + OBJC_IVAR____TtC10FitnessApp20WorkoutHeartRateInfo_elapsedTimeInZones);
  double v11 = 0.0;
  if (v10 && *(void *)(v10 + 16))
  {
    unint64_t v12 = sub_100005758(a1);
    if (v13) {
      double v11 = *(double *)(*(void *)(v10 + 56) + 8 * v12);
    }
  }
  if ((~*(void *)&v11 & 0x7FF0000000000000) == 0) {
    goto LABEL_21;
  }
  if (v11 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v11 < 9.22337204e18)
  {
    v14._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    return;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_100367C30(void *a1, id a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000AFA94(&qword_100958B20);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  Swift::String v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  double v11 = (char *)v29 - v10;
  uint64_t v12 = type metadata accessor for HeartRateConfiguration.ConfigurationType();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2 || (v16 = a2, uint64_t v17 = HKWorkoutActivity.heartRateZones.getter(), v16, !v17))
  {
    uint64_t v17 = HKWorkout.heartRateZones.getter();
    swift_bridgeObjectRelease();
    if (!v17)
    {
LABEL_6:
      *(void *)(v3 + 16) = v17;
      if (a2) {
        goto LABEL_7;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v9, 1, 1, v12);
      goto LABEL_14;
    }
  }
  if (!((unint64_t)v17 >> 62))
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for Zone();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if (v17 >= 0) {
    uint64_t v20 = v17 & 0xFFFFFFFFFFFFFF8;
  }
  else {
    uint64_t v20 = v17;
  }
  v29[1] = v20;
  type metadata accessor for Zone();
  swift_bridgeObjectRetain();
  uint64_t v21 = _bridgeCocoaArray<A>(_:)();
  swift_bridgeObjectRelease_n();
  *(void *)(v3 + 16) = v21;
  if (!a2) {
    goto LABEL_13;
  }
LABEL_7:
  id v18 = a2;
  HKWorkoutActivity.heartRateZonesConfigurationType.getter();

  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v19(v9, 1, v12) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v11, v9, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
    goto LABEL_15;
  }
LABEL_14:
  HKWorkout.heartRateZonesConfigurationType.getter();
  sub_1003683B0((uint64_t)v9);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
LABEL_15:
  if (v19(v11, 1, v12) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for HeartRateConfiguration.ConfigurationType.automatic(_:), v12);
    sub_1003683B0((uint64_t)v11);
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v3 + OBJC_IVAR____TtC10FitnessApp20WorkoutHeartRateInfo_configurationType, v15, v12);
  }
  else
  {
    Swift::String v22 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v22(v15, v11, v12);
    v22((char *)(v3 + OBJC_IVAR____TtC10FitnessApp20WorkoutHeartRateInfo_configurationType), v15, v12);
  }
  if (a2)
  {
    id v23 = a2;
    uint64_t v24 = HKWorkoutActivity.elapsedTimeInHeartRateZones.getter();

    if (!v24)
    {
      uint64_t v24 = HKWorkout.elapsedTimeInHeartRateZones.getter();
      swift_bridgeObjectRelease();
    }
    *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp20WorkoutHeartRateInfo_elapsedTimeInZones) = v24;
    a2 = v23;
    Swift::String v25 = (void *)HKWorkoutActivity.defaultRestingHeartRate.getter();

    if (v25)
    {

      goto LABEL_25;
    }
  }
  else
  {
    uint64_t v26 = HKWorkout.elapsedTimeInHeartRateZones.getter();
    swift_bridgeObjectRelease();
    *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp20WorkoutHeartRateInfo_elapsedTimeInZones) = v26;
  }
  Swift::String v25 = (void *)HKWorkout.defaultRestingHeartRate.getter();

  if (!v25)
  {
    char v27 = 0;
    goto LABEL_27;
  }
LABEL_25:

  char v27 = 1;
LABEL_27:
  *(unsigned char *)(v3 + OBJC_IVAR____TtC10FitnessApp20WorkoutHeartRateInfo_hasDefaultRestingHeartRate) = v27;
  return v3;
}

uint64_t sub_10036802C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC10FitnessApp20WorkoutHeartRateInfo_configurationType;
  uint64_t v2 = type metadata accessor for HeartRateConfiguration.ConfigurationType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1003680E4()
{
  return type metadata accessor for WorkoutHeartRateInfo();
}

uint64_t type metadata accessor for WorkoutHeartRateInfo()
{
  uint64_t result = qword_100958A60;
  if (!qword_100958A60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100368138()
{
  uint64_t result = type metadata accessor for HeartRateConfiguration.ConfigurationType();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1003681E0()
{
  return sub_100367680();
}

void sub_100368204(uint64_t a1, uint64_t a2)
{
  sub_100367A40(a1, a2, v2);
}

void *sub_10036820C(unint64_t a1, uint64_t (*a2)(unint64_t, uint64_t))
{
  sub_1000ABAB8(0, 0, 0);
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v3)
  {
    while (1)
    {
      unint64_t v4 = 0;
      uint64_t v15 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v16 = a1 & 0xC000000000000001;
      unint64_t v14 = a1;
      while (v16)
      {
        uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        unint64_t v6 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_15;
        }
LABEL_7:
        uint64_t v7 = a2(v4, v5);
        uint64_t v9 = v8;
        swift_release();
        unint64_t v11 = _swiftEmptyArrayStorage[2];
        unint64_t v10 = _swiftEmptyArrayStorage[3];
        if (v11 >= v10 >> 1) {
          sub_1000ABAB8(v10 > 1, v11 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v11 + 1;
        uint64_t v12 = &_swiftEmptyArrayStorage[2 * v11];
        v12[4] = v7;
        v12[5] = v9;
        ++v4;
        a1 = v14;
        if (v6 == v3) {
          goto LABEL_17;
        }
      }
      if (v4 < *(void *)(v15 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      if (!v3) {
        goto LABEL_17;
      }
    }
    uint64_t v5 = *(void *)(a1 + 8 * v4 + 32);
    swift_retain();
    unint64_t v6 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_15;
    }
    goto LABEL_7;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1003683B0(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100958B20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_100368410()
{
  unint64_t v1 = (int *)&v0[OBJC_IVAR____TtC10FitnessApp34ActivitySharingCloudDeviceProvider_activitySharingCloudDevicesChangedToken];
  swift_beginAccess();
  if (*v1 != -1) {
    notify_cancel(*v1);
  }
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for ActivitySharingCloudDeviceProvider();
  return [super dealloc];
}

uint64_t sub_100368580()
{
  return type metadata accessor for ActivitySharingCloudDeviceProvider();
}

uint64_t sub_100368588()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  id v3 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  uint64_t v4 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  void v6[4] = v5;
  sub_1000693DC((uint64_t)v2, (uint64_t)&unk_100958B80, (uint64_t)v6);
  return swift_release();
}

uint64_t sub_1003686EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a1;
  *(void *)(v4 + 48) = a4;
  return _swift_task_switch(sub_10036870C, 0, 0);
}

uint64_t sub_10036870C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 56) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100368804;
    return sub_1000E5104();
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_100368804()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 56);
  swift_task_dealloc();

  return _swift_task_switch(sub_100368918, 0, 0);
}

uint64_t sub_100368918()
{
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 56) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *sub_100368940()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp34ActivitySharingCloudDeviceProvider_cloudDevices);
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v2 = (uint64_t)result;
  if (!result) {
    goto LABEL_15;
  }
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(v1 + 8 * i + 32);
      }
      unint64_t v6 = v5;
      if ((ASCloudDevice.isWithinTimeToLive.getter() & 1) == 0
        || (ASCloudDevice.isEligibleForMigration.getter() & 1) != 0)
      {
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_100368A90()
{
  os_log_type_t v1 = static os_log_type_t.default.getter();
  uint64_t v2 = (void *)HKLogActivity;
  os_log_type_t v3 = v1;
  if (os_log_type_enabled(HKLogActivity, v1))
  {
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v4 = v2;
    id v5 = (uint8_t *)swift_slowAlloc();
    unint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)id v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v3, "Failed to fetch cloud devices %@", v5, 0xCu);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
  }
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100368C30()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100368C70()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100368CA8()
{
  return swift_deallocObject();
}

uint64_t sub_100368CE0()
{
  return sub_100368588();
}

uint64_t sub_100368CE8()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100368D20()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100368D60(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *id v5 = v2;
  v5[1] = sub_1000DBD6C;
  v5[5] = a1;
  v5[6] = v4;
  return _swift_task_switch(sub_10036870C, 0, 0);
}

void destroy for HistoryCardFactory(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void **)(a1 + 56);
}

void *initializeWithCopy for HistoryCardFactory(void *a1, uint64_t a2)
{
  os_log_type_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  unint64_t v6 = *(void **)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = v6;
  a1[3] = v5;
  uint64_t v7 = *(void **)(a2 + 32);
  uint64_t v8 = *(void **)(a2 + 40);
  a1[4] = v7;
  a1[5] = v8;
  uint64_t v9 = *(void **)(a2 + 48);
  uint64_t v10 = *(void **)(a2 + 56);
  a1[6] = v9;
  a1[7] = v10;
  id v11 = v3;
  id v12 = v4;
  id v13 = v6;
  swift_retain();
  id v14 = v7;
  id v15 = v8;
  id v16 = v9;
  id v17 = v10;
  return a1;
}

uint64_t assignWithCopy for HistoryCardFactory(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  uint64_t v10 = *(void **)(a2 + 16);
  id v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  id v13 = *(void **)(a2 + 32);
  id v14 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v13;
  id v15 = v13;

  id v16 = *(void **)(a2 + 40);
  id v17 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v16;
  id v18 = v16;

  uint64_t v19 = *(void **)(a2 + 48);
  uint64_t v20 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v19;
  id v21 = v19;

  Swift::String v22 = *(void **)(a2 + 56);
  id v23 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v22;
  id v24 = v22;

  return a1;
}

uint64_t assignWithTake for HistoryCardFactory(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release();

  uint64_t v5 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = a2[2];

  id v6 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = a2[3];

  return a1;
}

ValueMetadata *type metadata accessor for HistoryCardFactory()
{
  return &type metadata for HistoryCardFactory;
}

void *sub_100369068(unint64_t a1)
{
  return sub_100369534(a1, (void (*)(void *, uint64_t, unint64_t))sub_10036A1C4);
}

void *sub_100369080(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  int64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    if (v5 <= 0)
    {
      uint64_t v8 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        uint64_t v10 = v8 + 4;
        if (a2 + a3 < (unint64_t)v8 + v5 + 32 && (unint64_t)v10 < a2 + a3 + v5) {
          goto LABEL_17;
        }
        memcpy(v10, (const void *)(a2 + a3), v5);
        return v8;
      }
    }
    else
    {
      sub_1000AFA94(&qword_10094E718);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = j__malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * v9 - 64;
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_1003691DC(uint64_t a1)
{
  return sub_1000DDF94(a1, (unint64_t *)&qword_10094ECC0, (uint64_t)ASFriend_ptr, (unint64_t *)&qword_10095B7A0);
}

char *sub_1003691F8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return (char *)_swiftEmptyArrayStorage;
    }
    if (v5 <= 0)
    {
      uint64_t v8 = (char *)_swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        uint64_t v10 = v8 + 32;
        id v11 = (char *)(a2 + 24 * a3);
        if (v11 < &v8[24 * v5 + 32] && v10 < &v11[24 * v5]) {
          goto LABEL_17;
        }
        memcpy(v10, v11, 24 * v5);
        return v8;
      }
    }
    else
    {
      sub_1000AFA94(&qword_10094E728);
      uint64_t v8 = (char *)swift_allocObject();
      size_t v9 = j__malloc_size(v8);
      *((void *)v8 + 2) = v5;
      *((void *)v8 + 3) = 2 * ((uint64_t)(v9 - 32) / 24);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_10036937C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    if (v5 <= 0)
    {
      uint64_t v8 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 40 * a3;
        if (v10 < (unint64_t)&v8[5 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 40 * v5) {
          goto LABEL_17;
        }
        sub_1000AFA94((uint64_t *)&unk_100955630);
        swift_arrayInitWithCopy();
        return v8;
      }
    }
    else
    {
      sub_1000AFA94(&qword_10094E830);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = j__malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 40);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_10036951C(unint64_t a1)
{
  return sub_100369534(a1, (void (*)(void *, uint64_t, unint64_t))sub_10036A604);
}

void *sub_100369534(unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v4 <= 0)
    {
      uint64_t v5 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_1000AFA94((uint64_t *)&unk_10095B850);
      uint64_t v5 = (void *)swift_allocObject();
      int64_t v6 = j__malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(void *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v4) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v5;
}

void *sub_10036963C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000AFA94(&qword_10094D178);
  os_log_type_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_10036B164((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1000D9B04();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_100369724(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000AFA94(&qword_100958BC0);
  os_log_type_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_10036B364(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1000D9B04();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_10036980C(uint64_t a1)
{
  return sub_1000DDF94(a1, (unint64_t *)&qword_1009556B0, (uint64_t)ACHAchievement_ptr, (unint64_t *)&qword_1009511D8);
}

void *sub_100369828(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_10036A028(a1, a2, a3, a4, &qword_1009511C0);
}

void *sub_10036983C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    if (v5 <= 0)
    {
      uint64_t v8 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 192 * a3;
        if (v10 < (unint64_t)&v8[24 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 192 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return v8;
      }
    }
    else
    {
      sub_1000AFA94(&qword_10094F348);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = j__malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 192);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_1003699CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000AFA94(&qword_10094E720);
  uint64_t v3 = *(void *)(type metadata accessor for DateComponents() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t result = (void *)j__malloc_size(v6);
  if (v4)
  {
    if ((void *)((char *)result - v5) != (void *)0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      swift_bridgeObjectRetain();
      sub_10036B564(&v11, (char *)v6 + v5, v1, a1);
      uint64_t v10 = v9;
      sub_1000D9B04();
      if (v10 == v1) {
        return v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_100369B00(uint64_t a1)
{
  return sub_1000DDF94(a1, (unint64_t *)&unk_100955C10, (uint64_t)_HKFitnessFriendAchievement_ptr, &qword_1009507B8);
}

void *sub_100369B1C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000AFA94(&qword_10094E890);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_10036B094(&v8, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_100369BDC(unint64_t a1)
{
  return sub_100369534(a1, (void (*)(void *, uint64_t, unint64_t))sub_10036AA34);
}

void *sub_100369BF4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_100369DCC(a1, a2, a3, a4, &qword_10094E878, (uint64_t (*)(void))type metadata accessor for ActivitySharingHighlight);
}

void *sub_100369C14(uint64_t a1)
{
  return sub_1000DDF94(a1, (unint64_t *)&qword_10095E770, (uint64_t)HKWorkout_ptr, &qword_100958BD8);
}

void *sub_100369C30(uint64_t a1)
{
  return sub_1000DE0B8(a1, &qword_10094E858, (uint64_t (*)(void))&type metadata accessor for MediaMoment, (uint64_t (*)(void))&type metadata accessor for MediaMoment);
}

void *sub_100369C64(uint64_t a1)
{
  return sub_1000DE0B8(a1, &qword_10094E8F0, (uint64_t (*)(void))&type metadata accessor for Recommendation, (uint64_t (*)(void))&type metadata accessor for Recommendation);
}

uint64_t *sub_100369C98(unint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = __CocoaDictionary.count.getter();
    if (v2) {
      goto LABEL_3;
    }
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
LABEL_3:
  if (v2 <= 0)
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_1000AFA94((uint64_t *)&unk_10095B850);
    uint64_t v3 = (uint64_t *)swift_allocObject();
    int64_t v4 = j__malloc_size(v3);
    uint64_t v5 = v4 - 32;
    if (v4 < 32) {
      uint64_t v5 = v4 - 25;
    }
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_10036BCC0((uint64_t)&v8, v3 + 4, v2, a1);
  uint64_t result = (uint64_t *)sub_1000D9B04();
  if (v6 == v2) {
    return v3;
  }
  __break(1u);
  return result;
}

void *sub_100369D94(unint64_t a1)
{
  return sub_100369534(a1, (void (*)(void *, uint64_t, unint64_t))sub_10036AE74);
}

void *sub_100369DAC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_100369DCC(a1, a2, a3, a4, &qword_10094E708, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
}

void *sub_100369DCC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void))
{
  unint64_t v6 = a4 >> 1;
  uint64_t v7 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_21;
  }
  if (!v7) {
    return _swiftEmptyArrayStorage;
  }
  if (v7 <= 0)
  {
    id v14 = _swiftEmptyArrayStorage;
    if (v6 != a3)
    {
LABEL_10:
      if (v7 < 0) {
        goto LABEL_24;
      }
      uint64_t v17 = *(void *)(a6(0) - 8);
      id v18 = (char *)v14 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
      uint64_t v19 = *(void *)(v17 + 72);
      unint64_t v20 = a2 + v19 * a3;
      uint64_t v21 = v19 * v7;
      Swift::String v22 = &v18[v21];
      unint64_t v23 = v20 + v21;
      if (v20 < (unint64_t)v22 && (unint64_t)v18 < v23) {
        goto LABEL_24;
      }
      swift_arrayInitWithCopy();
      return v14;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_1000AFA94(a5);
  uint64_t v11 = *(void *)(a6(0) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  id v14 = (void *)swift_allocObject();
  size_t v15 = j__malloc_size(v14);
  if (v12)
  {
    if (v15 - v13 == 0x8000000000000000 && v12 == -1) {
      goto LABEL_23;
    }
    _OWORD v14[2] = v7;
    void v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
    if (v6 != a3) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_10036A014(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_10036A028(a1, a2, a3, a4, (unint64_t *)&qword_100955C20);
}

void *sub_10036A028(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t *a5)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v6) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t v10 = v6;
    if (v6 <= 0)
    {
      uint64_t v11 = _swiftEmptyArrayStorage;
      if (v5 != a3)
      {
LABEL_7:
        if (v6 < 0) {
          goto LABEL_19;
        }
        unint64_t v14 = a2 + 8 * a3;
        if (v14 < (unint64_t)&v11[v10 + 4] && (unint64_t)(v11 + 4) < v14 + v10 * 8) {
          goto LABEL_19;
        }
        sub_10007E2D8(0, a5);
        swift_arrayInitWithCopy();
        return v11;
      }
    }
    else
    {
      sub_1000AFA94((uint64_t *)&unk_10095B850);
      uint64_t v11 = (void *)swift_allocObject();
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      v11[2] = v6;
      v11[3] = (2 * (v13 >> 3)) | 1;
      if (v5 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10036A1C4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10036C28C(&qword_100958BB0, (uint64_t *)&unk_1009546A0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000AFA94((uint64_t *)&unk_1009546A0);
          int64_t v12 = sub_1004F887C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10036A3E4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10036C28C(&qword_100958B98, &qword_100953460);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000AFA94(&qword_100953460);
          int64_t v12 = sub_1004F887C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10036A604(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10036C28C(&qword_100958BE0, &qword_10094F428);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000AFA94(&qword_10094F428);
          int64_t v12 = sub_1004F88E8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for MindfulnessSessionViewModel();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10036A814(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10036C28C(&qword_100958BB8, &qword_10094E7F0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000AFA94(&qword_10094E7F0);
          int64_t v12 = sub_1004F887C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10007E2D8(0, &qword_1009511C0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10036AA34(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10036C28C(&qword_100958B90, &qword_100958B88);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000AFA94(&qword_100958B88);
          int64_t v12 = sub_1004F887C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10007E2D8(0, (unint64_t *)&qword_10094ECC0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10036AC54(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10036C28C(&qword_100958BD0, &qword_100958BC8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000AFA94(&qword_100958BC8);
          int64_t v12 = sub_1004F887C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10007E2D8(0, &qword_10094EA68);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10036AE74(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10036C28C(&qword_100958BA8, &qword_100958BA0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000AFA94(&qword_100958BA0);
          int64_t v12 = sub_1004F887C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10007E2D8(0, (unint64_t *)&qword_100951108);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_10036B094(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + 16);
  if (!a2)
  {
    uint64_t v5 = *(void *)(a4 + 16);
    uint64_t v4 = 0;
    goto LABEL_15;
  }
  if (!a3)
  {
    uint64_t v5 = *(void *)(a4 + 16);
    goto LABEL_14;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (!v4)
    {
LABEL_10:
      uint64_t v5 = 0;
      goto LABEL_15;
    }
    uint64_t v5 = v4 - 1;
    uint64_t v6 = a4 + 16 * (v4 - 1);
    uint64_t v7 = *(void *)(v6 + 32);
    LOBYTE(v6) = *(unsigned char *)(v6 + 40);
    *(void *)a2 = v7;
    *(unsigned char *)(a2 + 8) = v6;
    if (a3 != 1)
    {
      if (v4 != 1)
      {
        uint64_t v8 = 0;
        uint64_t v9 = (unsigned char *)(a4 + 16 * v4 + 8);
        uint64_t v10 = (unsigned char *)(a2 + 24);
        while (1)
        {
          char v11 = *v9;
          *((void *)v10 - 1) = *((void *)v9 - 1);
          *uint64_t v10 = v11;
          if (!(a3 - 2 + v8)) {
            break;
          }
          --v8;
          v9 -= 16;
          v10 += 16;
          if (v4 + v8 == 1) {
            goto LABEL_10;
          }
        }
        uint64_t v5 = v4 + v8 - 2;
        goto LABEL_14;
      }
LABEL_15:
      *uint64_t result = a4;
      result[1] = v5;
      return (void *)v4;
    }
LABEL_14:
    uint64_t v4 = a3;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

void *sub_10036B148(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_10036BF90(a1, a2, a3, a4, (unint64_t *)&qword_10094ECC0, (uint64_t)ASFriend_ptr, (unint64_t *)&qword_10095B7A0);
}

uint64_t sub_10036B164(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  char v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *char v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_10036B364(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  char v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(a4 + 56) + 16 * v16;
    uint64_t v21 = *(void **)v20;
    uint64_t v22 = *(void *)(v20 + 8);
    *char v11 = v21;
    v11[1] = v22;
    if (v13 == v10)
    {
      id v23 = v21;
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = v21;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_10036B564(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1000AFA94(&qword_10094E8A8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DateComponents();
  uint64_t v42 = *(void *)(v11 - 8);
  __n128 v12 = __chkstk_darwin(v11);
  uint64_t v41 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = a4;
  uint64_t v15 = a4 + 64;
  uint64_t v14 = *(void *)(a4 + 64);
  uint64_t v33 = -1 << *(unsigned char *)(a4 + 32);
  if (-v33 < 64) {
    uint64_t v16 = ~(-1 << -(char)v33);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  if (!a2)
  {
    int64_t v18 = 0;
LABEL_39:
    uint64_t v29 = ~v33;
    *a1 = v43;
    a1[1] = v15;
    a1[2] = v29;
    a1[3] = v18;
    a1[4] = v17;
    return;
  }
  if (!a3)
  {
    int64_t v18 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v37 = a3;
  int64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = v41;
  uint64_t v39 = v42 + 16;
  uint64_t v40 = (void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v42 + 56);
  uint64_t v38 = v42 + 48;
  uint64_t v36 = (void (**)(char *, char *, uint64_t))(v42 + 32);
  uint64_t v34 = v15;
  int64_t v35 = (unint64_t)(63 - v33) >> 6;
  int64_t v31 = v35 - 1;
  uint64_t v32 = a1;
  if (!v17) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v21 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v22 = v21 | (v18 << 6);
  while (1)
  {
    uint64_t v26 = v42;
    uint64_t v27 = *(void *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v42 + 16))(v10, *(void *)(v43 + 48) + v27 * v22, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v10, 1, v11) == 1)
    {
      uint64_t v15 = v34;
      goto LABEL_38;
    }
    ++v19;
    Swift::String v28 = *v36;
    (*v36)(v20, v10, v11);
    v28(a2, v20, v11);
    if (v19 == v37)
    {
      a1 = v32;
      uint64_t v15 = v34;
      goto LABEL_39;
    }
    a2 += v27;
    if (v17) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    uint64_t v15 = v34;
    if (v23 >= v35) {
      goto LABEL_37;
    }
    unint64_t v24 = *(void *)(v34 + 8 * v23);
    if (!v24)
    {
      int64_t v25 = v18 + 2;
      ++v18;
      if (v23 + 1 >= v35) {
        goto LABEL_37;
      }
      unint64_t v24 = *(void *)(v34 + 8 * v25);
      if (v24) {
        goto LABEL_14;
      }
      int64_t v18 = v23 + 1;
      if (v23 + 2 >= v35) {
        goto LABEL_37;
      }
      unint64_t v24 = *(void *)(v34 + 8 * (v23 + 2));
      if (v24)
      {
        v23 += 2;
      }
      else
      {
        int64_t v18 = v23 + 2;
        if (v23 + 3 >= v35) {
          goto LABEL_37;
        }
        unint64_t v24 = *(void *)(v34 + 8 * (v23 + 3));
        if (!v24)
        {
          int64_t v25 = v23 + 4;
          int64_t v18 = v23 + 3;
          if (v23 + 4 < v35)
          {
            unint64_t v24 = *(void *)(v34 + 8 * v25);
            if (!v24)
            {
              while (1)
              {
                int64_t v23 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_42;
                }
                if (v23 >= v35)
                {
                  int64_t v18 = v31;
                  goto LABEL_37;
                }
                unint64_t v24 = *(void *)(v34 + 8 * v23);
                ++v25;
                if (v24) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v23 = v25;
            goto LABEL_21;
          }
LABEL_37:
          (*v40)(v10, 1, 1, v11, v12);
          unint64_t v17 = 0;
LABEL_38:
          sub_10008DB18((uint64_t)v10, &qword_10094E8A8);
          a1 = v32;
          goto LABEL_39;
        }
        v23 += 3;
      }
    }
LABEL_21:
    unint64_t v17 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    int64_t v18 = v23;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

void *sub_10036B958(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_10036BF90(a1, a2, a3, a4, &qword_10094ECC8, (uint64_t)_HKFitnessFriendWorkout_ptr, &qword_10094ECD0);
}

uint64_t sub_10036B974(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v9 = a5(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v43 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v11);
  uint64_t v42 = (char *)&v33 - v14;
  uint64_t v44 = a4;
  uint64_t v17 = *(void *)(a4 + 56);
  uint64_t v16 = a4 + 56;
  uint64_t v15 = v17;
  uint64_t v38 = v16;
  uint64_t v18 = -1 << *(unsigned char *)(v16 - 24);
  if (-v18 < 64) {
    uint64_t v19 = ~(-1 << -(char)v18);
  }
  else {
    uint64_t v19 = -1;
  }
  unint64_t v20 = v19 & v15;
  if (!a2)
  {
    int64_t v21 = 0;
    a3 = 0;
LABEL_38:
    uint64_t v32 = v38;
    *a1 = v44;
    a1[1] = v32;
    a1[2] = ~v18;
    a1[3] = v21;
    a1[4] = v20;
    return a3;
  }
  if (!a3)
  {
    int64_t v21 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v35 = -1 << *(unsigned char *)(v16 - 24);
  uint64_t v36 = a1;
  int64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v39 = v10 + 32;
  uint64_t v40 = v10 + 16;
  int64_t v37 = (unint64_t)(63 - v18) >> 6;
  int64_t v34 = v37 - 1;
  uint64_t v41 = a3;
  int64_t v23 = v42;
  if (!v20) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v24 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  unint64_t v25 = v24 | (v21 << 6);
  while (1)
  {
    ++v22;
    uint64_t v29 = v43;
    uint64_t v30 = *(void *)(v10 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v43, *(void *)(v44 + 48) + v30 * v25, v9);
    int64_t v31 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v31(v23, v29, v9);
    uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v31)(a2, v23, v9);
    a3 = v41;
    if (v22 == v41) {
      goto LABEL_37;
    }
    a2 += v30;
    if (v20) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v26 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v37) {
      goto LABEL_32;
    }
    unint64_t v27 = *(void *)(v38 + 8 * v26);
    if (!v27) {
      break;
    }
LABEL_18:
    unint64_t v20 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v21 = v26;
  }
  v21 += 2;
  if (v26 + 1 >= v37)
  {
    unint64_t v20 = 0;
    int64_t v21 = v26;
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v38 + 8 * v21);
  if (v27) {
    goto LABEL_14;
  }
  int64_t v28 = v26 + 2;
  if (v26 + 2 >= v37) {
    goto LABEL_32;
  }
  unint64_t v27 = *(void *)(v38 + 8 * v28);
  if (v27) {
    goto LABEL_17;
  }
  int64_t v21 = v26 + 3;
  if (v26 + 3 >= v37)
  {
    unint64_t v20 = 0;
    int64_t v21 = v26 + 2;
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v38 + 8 * v21);
  if (v27)
  {
LABEL_14:
    int64_t v26 = v21;
    goto LABEL_18;
  }
  int64_t v28 = v26 + 4;
  if (v26 + 4 >= v37)
  {
LABEL_32:
    unint64_t v20 = 0;
LABEL_36:
    a3 = v22;
LABEL_37:
    uint64_t v18 = v35;
    a1 = v36;
    goto LABEL_38;
  }
  unint64_t v27 = *(void *)(v38 + 8 * v28);
  if (v27)
  {
LABEL_17:
    int64_t v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v37)
    {
      unint64_t v20 = 0;
      int64_t v21 = v34;
      goto LABEL_36;
    }
    unint64_t v27 = *(void *)(v38 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10036BCC0(uint64_t result, uint64_t *a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = (void *)result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    uint64_t result = __CocoaDictionary.makeIterator()();
    unint64_t v8 = 0;
    uint64_t v9 = 0;
    unint64_t v10 = 0;
    unint64_t v4 = result | 0x8000000000000000;
    if (v6) {
      goto LABEL_3;
    }
LABEL_36:
    int64_t v11 = 0;
    a3 = 0;
LABEL_45:
    *uint64_t v7 = v4;
    v7[1] = v8;
    v7[2] = v9;
    void v7[3] = v11;
    v7[4] = v10;
    return a3;
  }
  uint64_t v19 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v8 = a4 + 64;
  uint64_t v20 = ~v19;
  uint64_t v21 = -v19;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v10 = v22 & *(void *)(a4 + 64);
  uint64_t v9 = v20;
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_45;
  }
  if (a3 < 0)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v23 = v9;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v24 = (unint64_t)(v9 + 64) >> 6;
  while ((v4 & 0x8000000000000000) != 0)
  {
    if (!__CocoaDictionary.Iterator.nextKey()())
    {
      a3 = v12;
LABEL_44:
      uint64_t v9 = v23;
      goto LABEL_45;
    }
    sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v15 = v25;
    uint64_t result = swift_unknownObjectRelease();
    if (!v25) {
      goto LABEL_43;
    }
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3) {
      goto LABEL_44;
    }
  }
  if (v10)
  {
    unint64_t v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v14 = v13 | (v11 << 6);
    goto LABEL_7;
  }
  int64_t v16 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_47;
  }
  if (v16 >= v24) {
    goto LABEL_39;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v16);
  if (v17) {
    goto LABEL_23;
  }
  v11 += 2;
  if (v16 + 1 >= v24)
  {
    unint64_t v10 = 0;
    int64_t v11 = v16;
    goto LABEL_43;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v11);
  if (v17)
  {
LABEL_16:
    int64_t v16 = v11;
LABEL_23:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v11 = v16;
LABEL_7:
    uint64_t result = (uint64_t)*(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t v15 = result;
    if (!result) {
      goto LABEL_43;
    }
    goto LABEL_8;
  }
  int64_t v18 = v16 + 2;
  if (v16 + 2 >= v24) {
    goto LABEL_39;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v18);
  if (v17)
  {
LABEL_22:
    int64_t v16 = v18;
    goto LABEL_23;
  }
  int64_t v11 = v16 + 3;
  if (v16 + 3 >= v24)
  {
    unint64_t v10 = 0;
    int64_t v11 = v16 + 2;
    goto LABEL_43;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v11);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v16 + 4;
  if (v16 + 4 >= v24)
  {
LABEL_39:
    unint64_t v10 = 0;
LABEL_43:
    a3 = v12;
    goto LABEL_44;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v18);
  if (v17) {
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v16 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v16 >= v24)
    {
      unint64_t v10 = 0;
      int64_t v11 = v24 - 1;
      goto LABEL_43;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_48:
  __break(1u);
  return result;
}

void *sub_10036BF90(void *result, void *a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t v7 = a4;
  uint64_t v9 = a2;
  uint64_t v29 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_10007E2D8(0, a5);
    sub_1000CD998(a7, a5);
    uint64_t result = (void *)Set.Iterator.init(_cocoa:)();
    uint64_t v7 = v33;
    uint64_t v12 = v34;
    uint64_t v13 = v35;
    int64_t v14 = v36;
    unint64_t v15 = v37;
    if (v9) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v16 = 0;
    goto LABEL_38;
  }
  int64_t v14 = 0;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v12 = a4 + 56;
  uint64_t v13 = ~v24;
  uint64_t v25 = -v24;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  else {
    uint64_t v26 = -1;
  }
  unint64_t v15 = v26 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v16 = 0;
LABEL_38:
    unint64_t v27 = v29;
LABEL_41:
    void *v27 = v7;
    v27[1] = v12;
    void v27[2] = v13;
    void v27[3] = v14;
    v27[4] = v15;
    return (void *)v16;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v16 = 0;
  int64_t v30 = (unint64_t)(v13 + 64) >> 6;
  uint64_t v28 = v13;
  while (1)
  {
    if (v7 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_40;
      }
      sub_10007E2D8(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v19 = v32;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v32) {
        goto LABEL_40;
      }
      goto LABEL_8;
    }
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v14 << 6);
      goto LABEL_7;
    }
    int64_t v20 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v20 >= v30)
    {
      unint64_t v15 = 0;
      goto LABEL_40;
    }
    unint64_t v21 = *(void *)(v12 + 8 * v20);
    if (v21) {
      goto LABEL_23;
    }
    int64_t v22 = v14 + 2;
    if (v14 + 2 >= v30)
    {
      unint64_t v15 = 0;
      ++v14;
      goto LABEL_40;
    }
    unint64_t v21 = *(void *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v30) {
        goto LABEL_44;
      }
      unint64_t v21 = *(void *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        int64_t v20 = v14 + 3;
        goto LABEL_23;
      }
      int64_t v22 = v14 + 4;
      if (v14 + 4 >= v30)
      {
        unint64_t v15 = 0;
        v14 += 3;
        goto LABEL_40;
      }
      unint64_t v21 = *(void *)(v12 + 8 * v22);
      if (!v21)
      {
        int64_t v20 = v14 + 5;
        if (v14 + 5 >= v30)
        {
LABEL_44:
          unint64_t v15 = 0;
          int64_t v14 = v22;
          goto LABEL_40;
        }
        unint64_t v21 = *(void *)(v12 + 8 * v20);
        if (!v21)
        {
          int64_t v23 = v14 + 6;
          while (v30 != v23)
          {
            unint64_t v21 = *(void *)(v12 + 8 * v23++);
            if (v21)
            {
              int64_t v20 = v23 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v15 = 0;
          int64_t v14 = v30 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    int64_t v20 = v22;
LABEL_23:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v20 << 6);
    int64_t v14 = v20;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v7 + 48) + 8 * v18);
    id v19 = result;
    if (!result) {
      goto LABEL_40;
    }
LABEL_8:
    ++v16;
    *v9++ = v19;
    if (v16 == a3)
    {
      uint64_t v16 = a3;
LABEL_40:
      uint64_t v13 = v28;
      unint64_t v27 = v29;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_10036C28C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t destroy for MaskedLink(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MaskedLink(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    uint64_t v4 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for MaskedLink(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MaskedLink(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MaskedLink(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MaskedLink(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_10036C5D0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_10036C5E8(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for MaskedLink()
{
  return &type metadata for MaskedLink;
}

uint64_t sub_10036C624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = type metadata accessor for ActivityUIDismissalPolicy();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  sub_1000AFA94(&qword_100958C58);
  v4[6] = swift_task_alloc();
  return _swift_task_switch(sub_10036C714, 0, 0);
}

uint64_t sub_10036C714()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = sub_1000AFA94(&qword_100958BF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  static ActivityUIDismissalPolicy.immediate.getter();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of Activity.end(_:dismissalPolicy:)
                                                + async function pointer to dispatch thunk of Activity.end(_:dismissalPolicy:));
  unint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *unint64_t v3 = v0;
  v3[1] = sub_10036D708;
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  return v7(v5, v4);
}

uint64_t sub_10036C814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = type metadata accessor for ActivityUIDismissalPolicy();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  sub_1000AFA94(&qword_100958C58);
  v4[6] = swift_task_alloc();
  return _swift_task_switch(sub_10036C904, 0, 0);
}

uint64_t sub_10036C904()
{
  unint64_t v1 = v0[2];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = result;
    v0[7] = result;
    if (result)
    {
LABEL_3:
      if (v2 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v4 = v0[2];
        v0[8] = 0;
        if ((v4 & 0xC000000000000001) != 0)
        {
          uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v5 = *(void *)(v4 + 32);
          swift_retain();
        }
        v0[9] = v5;
        uint64_t v6 = v0[6];
        uint64_t v7 = sub_1000AFA94(&qword_100958BF0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
        static ActivityUIDismissalPolicy.immediate.getter();
        uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of Activity.end(_:dismissalPolicy:)
                                                       + async function pointer to dispatch thunk of Activity.end(_:dismissalPolicy:));
        uint64_t v8 = (void *)swift_task_alloc();
        v0[10] = v8;
        *uint64_t v8 = v0;
        v8[1] = sub_10036CAD4;
        uint64_t v9 = v0[5];
        uint64_t v10 = v0[6];
        return v12(v10, v9);
      }
      return result;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    v0[7] = v2;
    if (v2) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_10036CAD4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  uint64_t v3 = *(void *)(*(void *)v0 + 32);
  uint64_t v4 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_10008DB18(v1, &qword_100958C58);
  return _swift_task_switch(sub_10036CC50, 0, 0);
}

uint64_t sub_10036CC50()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[7];
  swift_release();
  if (v1 + 1 == v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    uint64_t v5 = v0[8] + 1;
    v0[8] = v5;
    uint64_t v6 = v0[2];
    if ((v6 & 0xC000000000000001) != 0)
    {
      uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v7 = *(void *)(v6 + 8 * v5 + 32);
      swift_retain();
    }
    v0[9] = v7;
    uint64_t v8 = v0[6];
    uint64_t v9 = sub_1000AFA94(&qword_100958BF0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
    static ActivityUIDismissalPolicy.immediate.getter();
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of Activity.end(_:dismissalPolicy:)
                                                   + async function pointer to dispatch thunk of Activity.end(_:dismissalPolicy:));
    uint64_t v10 = (void *)swift_task_alloc();
    v0[10] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_10036CAD4;
    uint64_t v11 = v0[5];
    uint64_t v12 = v0[6];
    return v13(v12, v11);
  }
}

uint64_t sub_10036CDF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of Activity.update(_:)
                                       + async function pointer to dispatch thunk of Activity.update(_:));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_1000DBD6C;
  return v9(a5);
}

uint64_t sub_10036CEA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = type metadata accessor for ActivityUIDismissalPolicy();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  sub_1000AFA94(&qword_100958C58);
  v4[6] = swift_task_alloc();
  return _swift_task_switch(sub_10036CF94, 0, 0);
}

uint64_t sub_10036CF94()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = sub_1000AFA94(&qword_100958BF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  static ActivityUIDismissalPolicy.immediate.getter();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of Activity.end(_:dismissalPolicy:)
                                                + async function pointer to dispatch thunk of Activity.end(_:dismissalPolicy:));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10036D094;
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  return v7(v5, v4);
}

uint64_t sub_10036D094()
{
  uint64_t v1 = *(void *)(*v0 + 48);
  uint64_t v2 = *(void *)(*v0 + 40);
  uint64_t v3 = *(void *)(*v0 + 32);
  uint64_t v4 = *(void *)(*v0 + 24);
  uint64_t v7 = *v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_10008DB18(v1, &qword_100958C58);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v7 + 8);
  return v5();
}

uint64_t sub_10036D218()
{
  return sub_100078AC4((void (*)(void))&_swift_release);
}

uint64_t sub_10036D230(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000DBD6C;
  return sub_10036C624(a1, v4, v5, v6);
}

uint64_t sub_10036D2E4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10036D31C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MirroredWidgetAttributes.ContentState();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10036D360()
{
  return sub_100078AC4((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10036D378(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10005DB5C;
  return sub_10036C814(a1, v4, v5, v6);
}

uint64_t sub_10036D42C()
{
  return sub_100078AC4((void (*)(void))&_swift_release);
}

uint64_t sub_10036D444(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000DBD6C;
  return sub_10036CEA4(a1, v4, v5, v6);
}

uint64_t sub_10036D4F8()
{
  uint64_t v1 = sub_1000AFA94(&qword_100958BF0);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_10036D5D0()
{
  uint64_t v2 = *(void *)(sub_1000AFA94(&qword_100958BF0) - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1000DBD6C;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of Activity.update(_:)
                                       + async function pointer to dispatch thunk of Activity.update(_:));
  uint64_t v5 = (void *)swift_task_alloc();
  v4[2] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1000DBD6C;
  return v7(v3);
}

void *sub_10036D70C(void *a1, void *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    int64_t v20 = (void *)(v19 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v5 = a3[6];
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = *(void **)((char *)a2 + v5);
    uint64_t v9 = *(void **)((char *)a2 + v5 + 8);
    *(void *)uint64_t v6 = v8;
    *((void *)v6 + 1) = v9;
    uint64_t v10 = *(void *)((char *)a2 + v5 + 24);
    *((void *)v6 + 2) = *(void *)((char *)a2 + v5 + 16);
    *((void *)v6 + 3) = v10;
    unsigned char v6[40] = *((unsigned char *)a2 + v5 + 40);
    *((void *)v6 + 4) = *(void *)((char *)a2 + v5 + 32);
    uint64_t v11 = type metadata accessor for MetricDetailViewModel();
    uint64_t v12 = *(int *)(v11 + 36);
    __dst = &v6[v12];
    uint64_t v48 = v11;
    uint64_t v13 = &v7[v12];
    uint64_t v14 = type metadata accessor for DateInterval();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    id v16 = v8;
    id v17 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v44(v13, 1, v14))
    {
      uint64_t v18 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
      memcpy(__dst, v13, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    v6[*(int *)(v48 + 40)] = v7[*(int *)(v48 + 40)];
    uint64_t v21 = *(int *)(v48 + 44);
    int64_t v22 = &v6[v21];
    int64_t v23 = &v7[v21];
    uint64_t v24 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    uint64_t v25 = a3[7];
    uint64_t v26 = a3[8];
    int64_t v20 = a1;
    unint64_t v27 = (char *)a1 + v25;
    uint64_t v28 = (char *)a2 + v25;
    *(void *)unint64_t v27 = *(void *)v28;
    _OWORD v27[8] = v28[8];
    uint64_t v29 = (char *)a1 + v26;
    int64_t v30 = (char *)a2 + v26;
    int64_t v31 = *(void **)((char *)a2 + v26);
    *(void *)((char *)a1 + v26) = v31;
    uint64_t v32 = type metadata accessor for MetricFormattingHelper();
    uint64_t v33 = *(int *)(v32 + 20);
    __dsta = &v30[v33];
    uint64_t v49 = &v29[v33];
    uint64_t v34 = type metadata accessor for AttributedString();
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
    id v36 = v31;
    v35(v49, __dsta, v34);
    uint64_t v37 = *(int *)(v32 + 24);
    uint64_t v38 = *(void **)&v30[v37];
    *(void *)&v29[v37] = v38;
    uint64_t v39 = a3[9];
    uint64_t v40 = *(void **)((char *)a2 + v39);
    *(void *)((char *)a1 + v39) = v40;
    id v41 = v38;
    id v42 = v40;
  }
  return v20;
}

void sub_10036D9F4(uint64_t a1, int *a2)
{
  int v4 = (id *)(a1 + a2[6]);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for MetricDetailViewModel();
  uint64_t v6 = (char *)v4 + *(int *)(v5 + 36);
  uint64_t v7 = type metadata accessor for DateInterval();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v9 = (char *)v4 + *(int *)(v5 + 44);
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = (id *)(a1 + a2[8]);

  uint64_t v12 = type metadata accessor for MetricFormattingHelper();
  uint64_t v13 = (char *)v11 + *(int *)(v12 + 20);
  uint64_t v14 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);

  uint64_t v15 = *(void **)(a1 + a2[9]);
}

_WORD *sub_10036DBA0(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v3 = a3[6];
  int v4 = (char *)a1 + v3;
  uint64_t v5 = (char *)a2 + v3;
  uint64_t v7 = *(void **)((char *)a2 + v3);
  uint64_t v6 = *(void **)((char *)a2 + v3 + 8);
  *(void *)int v4 = v7;
  *((void *)v4 + 1) = v6;
  uint64_t v8 = *(void *)((char *)a2 + v3 + 24);
  *((void *)v4 + 2) = *(void *)((char *)a2 + v3 + 16);
  *((void *)v4 + 3) = v8;
  v4[40] = *((unsigned char *)a2 + v3 + 40);
  *((void *)v4 + 4) = *(void *)((char *)a2 + v3 + 32);
  uint64_t v9 = type metadata accessor for MetricDetailViewModel();
  uint64_t v10 = *(int *)(v9 + 36);
  __dst = &v4[v10];
  uint64_t v43 = v9;
  uint64_t v11 = &v5[v10];
  uint64_t v12 = type metadata accessor for DateInterval();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  id v14 = v7;
  id v15 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v40(v11, 1, v12))
  {
    uint64_t v16 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
    memcpy(__dst, v11, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
  }
  v4[*(int *)(v43 + 40)] = v5[*(int *)(v43 + 40)];
  uint64_t v17 = *(int *)(v43 + 44);
  uint64_t v18 = &v4[v17];
  uint64_t v19 = &v5[v17];
  uint64_t v20 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  uint64_t v21 = a3[7];
  uint64_t v22 = a3[8];
  int64_t v23 = (char *)a1 + v21;
  uint64_t v24 = (char *)a2 + v21;
  *(void *)int64_t v23 = *(void *)v24;
  v23[8] = v24[8];
  uint64_t v25 = (char *)a1 + v22;
  uint64_t v26 = (char *)a2 + v22;
  unint64_t v27 = *(void **)((char *)a2 + v22);
  *(void *)((char *)a1 + v22) = v27;
  uint64_t v28 = type metadata accessor for MetricFormattingHelper();
  uint64_t v29 = *(int *)(v28 + 20);
  __dsta = &v26[v29];
  uint64_t v44 = &v25[v29];
  uint64_t v30 = type metadata accessor for AttributedString();
  int64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
  id v32 = v27;
  v31(v44, __dsta, v30);
  uint64_t v33 = *(int *)(v28 + 24);
  uint64_t v34 = *(void **)&v26[v33];
  *(void *)&v25[v33] = v34;
  uint64_t v35 = a3[9];
  id v36 = *(void **)((char *)a2 + v35);
  *(void *)((char *)a1 + v35) = v36;
  id v37 = v34;
  id v38 = v36;
  return a1;
}

unsigned char *sub_10036DE34(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = a3[6];
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = *(void **)&a2[v4];
  uint64_t v8 = *(void **)v5;
  *(void *)uint64_t v5 = v7;
  id v9 = v7;

  uint64_t v10 = (void *)*((void *)v6 + 1);
  uint64_t v11 = (void *)*((void *)v5 + 1);
  *((void *)v5 + 1) = v10;
  id v12 = v10;

  *((void *)v5 + 2) = *((void *)v6 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v5 + 3) = *((void *)v6 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *((void *)v6 + 4);
  v5[40] = v6[40];
  *((void *)v5 + 4) = v13;
  uint64_t v51 = (int *)type metadata accessor for MetricDetailViewModel();
  uint64_t v14 = v51[9];
  id v15 = &v5[v14];
  uint64_t v16 = &v6[v14];
  uint64_t v17 = type metadata accessor for DateInterval();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 24))(v15, v16, v17);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v15, v17);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    uint64_t v22 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v15, v16, v17);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
LABEL_7:
  v5[v51[10]] = v6[v51[10]];
  uint64_t v23 = v51[11];
  uint64_t v24 = &v5[v23];
  uint64_t v25 = &v6[v23];
  uint64_t v26 = type metadata accessor for Date();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[7];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v30 = *(void *)v29;
  v28[8] = v29[8];
  *(void *)uint64_t v28 = v30;
  uint64_t v31 = a3[8];
  id v32 = (void **)&a1[v31];
  uint64_t v33 = &a2[v31];
  uint64_t v34 = *(void **)&a2[v31];
  uint64_t v35 = *v32;
  void *v32 = v34;
  id v36 = v34;

  uint64_t v37 = type metadata accessor for MetricFormattingHelper();
  uint64_t v38 = *(int *)(v37 + 20);
  uint64_t v39 = (char *)v32 + v38;
  uint64_t v40 = &v33[v38];
  uint64_t v41 = type metadata accessor for AttributedString();
  (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v41 - 8) + 24))(v39, v40, v41);
  uint64_t v42 = *(int *)(v37 + 24);
  uint64_t v43 = *(void **)&v33[v42];
  uint64_t v44 = *(void **)((char *)v32 + v42);
  *(void **)((char *)v32 + v42) = v43;
  id v45 = v43;

  uint64_t v46 = a3[9];
  uint64_t v47 = *(void **)&a2[v46];
  uint64_t v48 = *(void **)&a1[v46];
  *(void *)&a1[v46] = v47;
  id v49 = v47;

  return a1;
}

_WORD *sub_10036E164(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  long long v9 = *(_OWORD *)((char *)a2 + v6 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)((char *)a2 + v6);
  *((_OWORD *)v7 + 1) = v9;
  v7[40] = *((unsigned char *)a2 + v6 + 40);
  *((void *)v7 + 4) = *(void *)((char *)a2 + v6 + 32);
  uint64_t v10 = (int *)type metadata accessor for MetricDetailViewModel();
  uint64_t v11 = v10[9];
  id v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = type metadata accessor for DateInterval();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v7[v10[10]] = v8[v10[10]];
  uint64_t v17 = v10[11];
  uint64_t v18 = &v7[v17];
  uint64_t v19 = &v8[v17];
  uint64_t v20 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  uint64_t v21 = a3[7];
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v21;
  uint64_t v24 = (char *)a2 + v21;
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v24[8];
  uint64_t v25 = (char *)a1 + v22;
  uint64_t v26 = (char *)a2 + v22;
  *(void *)((char *)a1 + v22) = *(void *)((char *)a2 + v22);
  uint64_t v27 = type metadata accessor for MetricFormattingHelper();
  uint64_t v28 = *(int *)(v27 + 20);
  uint64_t v29 = &v25[v28];
  uint64_t v30 = &v26[v28];
  uint64_t v31 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
  *(void *)&v25[*(int *)(v27 + 24)] = *(void *)&v26[*(int *)(v27 + 24)];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  return a1;
}

_WORD *sub_10036E3AC(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v4 = a3[6];
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = *(void **)((char *)a1 + v4);
  *(void *)((char *)a1 + v4) = *(void *)((char *)a2 + v4);

  uint64_t v8 = (void *)*((void *)v5 + 1);
  *((void *)v5 + 1) = *((void *)v6 + 1);

  *((void *)v5 + 2) = *((void *)v6 + 2);
  swift_bridgeObjectRelease();
  *((void *)v5 + 3) = *((void *)v6 + 3);
  swift_bridgeObjectRelease();
  *((void *)v5 + 4) = *((void *)v6 + 4);
  v5[40] = v6[40];
  uint64_t v40 = (int *)type metadata accessor for MetricDetailViewModel();
  uint64_t v9 = v40[9];
  uint64_t v10 = &v5[v9];
  uint64_t v11 = &v6[v9];
  uint64_t v12 = type metadata accessor for DateInterval();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v5[v40[10]] = v6[v40[10]];
  uint64_t v18 = v40[11];
  uint64_t v19 = &v5[v18];
  uint64_t v20 = &v6[v18];
  uint64_t v21 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  uint64_t v22 = a3[7];
  uint64_t v23 = a3[8];
  uint64_t v24 = (char *)a1 + v22;
  uint64_t v25 = (char *)a2 + v22;
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  uint64_t v26 = (void *)((char *)a1 + v23);
  uint64_t v27 = (char *)a2 + v23;
  uint64_t v28 = *(void *)((char *)a2 + v23);
  uint64_t v29 = *(void **)((char *)a1 + v23);
  void *v26 = v28;

  uint64_t v30 = type metadata accessor for MetricFormattingHelper();
  uint64_t v31 = *(int *)(v30 + 20);
  id v32 = (char *)v26 + v31;
  uint64_t v33 = &v27[v31];
  uint64_t v34 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = *(int *)(v30 + 24);
  id v36 = *(void **)((char *)v26 + v35);
  *(void *)((char *)v26 + v35) = *(void *)&v27[v35];

  uint64_t v37 = a3[9];
  uint64_t v38 = *(void **)((char *)a1 + v37);
  *(void *)((char *)a1 + v37) = *(void *)((char *)a2 + v37);

  return a1;
}

uint64_t sub_10036E6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10036E6C0);
}

uint64_t sub_10036E6C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for MetricDetailViewModel();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[6];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = type metadata accessor for MetricFormattingHelper();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[8];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[9]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_10036E7D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10036E7E4);
}

uint64_t sub_10036E7E4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for MetricDetailViewModel();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
  }
  else
  {
    uint64_t result = type metadata accessor for MetricFormattingHelper();
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[9]) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[8];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

uint64_t type metadata accessor for MetricFamilyChartView()
{
  uint64_t result = qword_100958CB8;
  if (!qword_100958CB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10036E93C()
{
  uint64_t result = type metadata accessor for MetricDetailViewModel();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for MetricFormattingHelper();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10036EA2C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10036EA48()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Font.TextStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v4 + 104))(v7, enum case for Font.TextStyle.title(_:), v3, v5);
  uint64_t v8 = enum case for Font.Design.rounded(_:);
  uint64_t v9 = type metadata accessor for Font.Design();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 104))(v2, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v2, 0, 1, v9);
  static Font.Weight.semibold.getter();
  uint64_t v11 = static Font.system(_:design:weight:)();
  sub_10008DB18((uint64_t)v2, &qword_10094C448);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  qword_100997D80 = v11;
  return result;
}

uint64_t sub_10036EC38()
{
  uint64_t v0 = type metadata accessor for Font.TextStyle();
  uint64_t v1 = *(void *)(v0 - 8);
  __n128 v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v1 + 104))(v4, enum case for Font.TextStyle.footnote(_:), v0, v2);
  static Font.Weight.semibold.getter();
  uint64_t v5 = static Font.system(_:weight:)();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  qword_100997D88 = v5;
  return result;
}

double sub_10036ED30()
{
  double result = 12.0;
  xmmword_100997D90 = xmmword_100751830;
  *(_OWORD *)&qword_100997DA0 = xmmword_100751830;
  return result;
}

uint64_t sub_10036ED48@<X0>(uint64_t a1@<X8>)
{
  __n128 v2 = v1;
  uint64_t v50 = a1;
  uint64_t v3 = type metadata accessor for MetricFamilyChartView();
  uint64_t v46 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  uint64_t v47 = v4;
  uint64_t v48 = (uint64_t)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v43);
  uint64_t v6 = (long long *)((char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v44 = sub_1000AFA94(&qword_1009531D8);
  __chkstk_darwin(v44);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100958D00);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100958D08);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_1000AFA94(&qword_100958D10);
  __chkstk_darwin(v45);
  int v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v11 = static HorizontalAlignment.leading.getter();
  *((void *)v11 + 1) = 0;
  v11[16] = 0;
  uint64_t v17 = (uint64_t *)&v11[*(int *)(sub_1000AFA94(&qword_100958D18) + 44)];
  id v49 = v2;
  sub_10036F224(v2, v17);
  if (qword_10094AA28 != -1) {
    swift_once();
  }
  long long v42 = xmmword_100997D90;
  uint64_t v18 = qword_100997DA0;
  uint64_t v19 = unk_100997DA8;
  char v20 = static Edge.Set.all.getter();
  sub_1000AEF2C((uint64_t)v11, (uint64_t)v14, &qword_100958D00);
  uint64_t v21 = &v14[*(int *)(v12 + 36)];
  *uint64_t v21 = v20;
  *(_OWORD *)(v21 + 8) = v42;
  *((void *)v21 + 3) = v18;
  *((void *)v21 + 4) = v19;
  v21[40] = 0;
  sub_10008DB18((uint64_t)v11, &qword_100958D00);
  uint64_t v22 = (char *)v6 + *(int *)(v43 + 20);
  uint64_t v23 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v24 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v22, v23, v24);
  __asm { FMOV            V0.2D, #20.0 }
  *uint64_t v6 = _Q0;
  id v30 = sub_10005DB50();
  uint64_t v31 = Color.init(uiColor:)();
  sub_1000980E8((uint64_t)v6, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v32 = v44;
  *(void *)&v8[*(int *)(v44 + 52)] = v31;
  *(_WORD *)&v8[*(int *)(v32 + 56)] = 256;
  sub_100097D10((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v33 = static Alignment.center.getter();
  uint64_t v35 = v34;
  uint64_t v36 = (uint64_t)&v16[*(int *)(v45 + 36)];
  sub_1000AEF2C((uint64_t)v8, v36, &qword_1009531D8);
  uint64_t v37 = (uint64_t *)(v36 + *(int *)(sub_1000AFA94(&qword_100953DE0) + 36));
  uint64_t *v37 = v33;
  v37[1] = v35;
  sub_1000AEF2C((uint64_t)v14, (uint64_t)v16, &qword_100958D08);
  sub_10008DB18((uint64_t)v8, &qword_1009531D8);
  sub_10008DB18((uint64_t)v14, &qword_100958D08);
  uint64_t v38 = v48;
  sub_1000980E8((uint64_t)v49, v48, (uint64_t (*)(void))type metadata accessor for MetricFamilyChartView);
  unint64_t v39 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  uint64_t v40 = swift_allocObject();
  sub_10036FC64(v38, v40 + v39);
  sub_10036FD28();
  View.onTapGesture(count:perform:)();
  swift_release();
  return sub_10008DB18((uint64_t)v16, &qword_100958D10);
}

uint64_t sub_10036F224@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v79 = a2;
  uint64_t v92 = sub_1000AFA94(&qword_10094C1E8);
  __chkstk_darwin(v92);
  unint64_t v91 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_10094C3D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v90 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MetricFormattingHelper();
  __chkstk_darwin(v6 - 8);
  uint64_t v88 = (uint64_t)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for MetricDetailViewModel();
  __chkstk_darwin(v8 - 8);
  uint64_t v86 = (uint64_t)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MetricDetailChartView();
  __chkstk_darwin(v10 - 8);
  uint64_t v89 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1000AFA94(&qword_10094C3D8);
  __chkstk_darwin(v87);
  uint64_t v94 = (uint64_t)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v93 = (uint64_t)&v79 - v14;
  uint64_t v15 = type metadata accessor for AttributedString();
  __chkstk_darwin(v15 - 8);
  uint64_t v80 = (uint64_t)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = a1;
  uint64_t v17 = *a1;
  *(void *)&long long v97 = sub_10071BAF4(*a1);
  *((void *)&v97 + 1) = v18;
  sub_1000A06D0();
  uint64_t v19 = StringProtocol.localizedUppercase.getter();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  *(void *)&long long v97 = v19;
  *((void *)&v97 + 1) = v21;
  uint64_t v22 = Text.init<A>(_:)();
  uint64_t v24 = v23;
  char v26 = v25;
  if (qword_10094AA20 != -1) {
    swift_once();
  }
  uint64_t v27 = Text.font(_:)();
  uint64_t v29 = v28;
  char v31 = v30 & 1;
  sub_1000A06C0(v22, v24, v26 & 1);
  swift_bridgeObjectRelease();
  uint64_t v84 = Text.tracking(_:)();
  uint64_t v83 = v32;
  char v34 = v33;
  uint64_t v85 = v35;
  sub_1000A06C0(v27, v29, v31);
  swift_bridgeObjectRelease();
  int v81 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v44 = (int *)type metadata accessor for MetricFamilyChartView();
  uint64_t v45 = v44[8];
  uint64_t v46 = v44[6];
  uint64_t v47 = v82;
  uint64_t v48 = &v82[v44[7]];
  uint64_t v49 = *(void *)v48;
  unsigned __int8 v50 = v48[8];
  if (qword_10094AA18 != -1) {
    swift_once();
  }
  int v95 = v34 & 1;
  uint64_t v51 = (uint64_t)&v47[v46];
  uint64_t v52 = (uint64_t)&v47[v45];
  sub_1000A17E8(v17, (void **)&v47[v46], v49, v50, qword_100997D80, 0, 0, v80);
  uint64_t v53 = Text.init(_:)();
  uint64_t v55 = v54;
  char v57 = v56 & 1;
  sub_1000A3E18(v17);
  *(void *)&long long v97 = Color.init(uiColor:)();
  uint64_t v58 = Text.foregroundStyle<A>(_:)();
  uint64_t v80 = v59;
  uint64_t v82 = v60;
  char v62 = v61 & 1;
  sub_1000A06C0(v53, v55, v57);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v63 = v86;
  sub_1000980E8(v51, v86, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
  uint64_t v64 = v88;
  sub_1000980E8(v52, v88, (uint64_t (*)(void))type metadata accessor for MetricFormattingHelper);
  uint64_t v65 = type metadata accessor for MetricChartData();
  uint64_t v66 = (uint64_t)v91;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v91, 1, 1, v65);
  uint64_t v67 = (uint64_t)v90;
  static Binding.constant(_:)();
  sub_10008DB18(v66, &qword_10094C1E8);
  uint64_t v68 = v89;
  sub_100297BB4(v17, 0, v63, v64, v67, v89);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v69 = v94;
  sub_1000980E8((uint64_t)v68, v94, (uint64_t (*)(void))type metadata accessor for MetricDetailChartView);
  char v70 = (_OWORD *)(v69 + *(int *)(v87 + 36));
  long long v71 = v98;
  _OWORD *v70 = v97;
  v70[1] = v71;
  v70[2] = v99;
  sub_100097D10((uint64_t)v68, (uint64_t (*)(void))type metadata accessor for MetricDetailChartView);
  uint64_t v72 = v93;
  sub_10036FE68(v69, v93);
  LOBYTE(v68) = v95;
  char v96 = v95;
  sub_1000AEF2C(v72, v69, &qword_10094C3D8);
  uint64_t v73 = v84;
  uint64_t v74 = v79;
  uint64_t v75 = v83;
  *uint64_t v79 = v84;
  v74[1] = v75;
  *((unsigned char *)v74 + 16) = (_BYTE)v68;
  v74[3] = v85;
  *((unsigned char *)v74 + 32) = v81;
  v74[5] = v37;
  v74[6] = v39;
  v74[7] = v41;
  v74[8] = v43;
  *((unsigned char *)v74 + 72) = 0;
  uint64_t v76 = v80;
  v74[10] = v58;
  v74[11] = v76;
  *((unsigned char *)v74 + 96) = v62;
  v74[13] = (uint64_t)v82;
  uint64_t v77 = sub_1000AFA94(&qword_100958D38);
  sub_1000AEF2C(v69, (uint64_t)v74 + *(int *)(v77 + 64), &qword_10094C3D8);
  sub_1000A1750(v73, v75, v95);
  swift_bridgeObjectRetain();
  sub_1000A1750(v58, v76, v62);
  swift_bridgeObjectRetain();
  sub_10008DB18(v72, &qword_10094C3D8);
  sub_10008DB18(v69, &qword_10094C3D8);
  sub_1000A06C0(v58, v76, v62);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v73, v75, v96);
  return swift_bridgeObjectRelease();
}

void sub_10036F9D8(unsigned __int8 *a1)
{
  uint64_t v2 = type metadata accessor for MetricFamilyChartView();
  sub_1003F7088(*a1, a1[1], 0, *(void *)&a1[*(int *)(v2 + 28)], a1[*(int *)(v2 + 28) + 8]);
}

uint64_t sub_10036FA34()
{
  uint64_t v1 = (int *)type metadata accessor for MetricFamilyChartView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  uint64_t v4 = (id *)(v3 + v1[6]);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for MetricDetailViewModel();
  uint64_t v6 = (char *)v4 + *(int *)(v5 + 36);
  uint64_t v7 = type metadata accessor for DateInterval();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v9 = (char *)v4 + *(int *)(v5 + 44);
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = (id *)(v3 + v1[8]);

  uint64_t v12 = type metadata accessor for MetricFormattingHelper();
  uint64_t v13 = (char *)v11 + *(int *)(v12 + 20);
  uint64_t v14 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);

  return swift_deallocObject();
}

uint64_t sub_10036FC64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MetricFamilyChartView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10036FCC8()
{
  uint64_t v1 = *(void *)(type metadata accessor for MetricFamilyChartView() - 8);
  uint64_t v2 = (unsigned __int8 *)(v0
                         + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  sub_10036F9D8(v2);
}

unint64_t sub_10036FD28()
{
  unint64_t result = qword_100958D20;
  if (!qword_100958D20)
  {
    sub_1000A1370(&qword_100958D10);
    sub_10036FDC8();
    sub_1000A132C(&qword_100953DD8, &qword_100953DE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100958D20);
  }
  return result;
}

unint64_t sub_10036FDC8()
{
  unint64_t result = qword_100958D28;
  if (!qword_100958D28)
  {
    sub_1000A1370(&qword_100958D08);
    sub_1000A132C(&qword_100958D30, &qword_100958D00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100958D28);
  }
  return result;
}

uint64_t sub_10036FE68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094C3D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10036FED0()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_10036FF2C()
{
  qword_100958D40 = (uint64_t)&off_1008B4BC0;
}

void sub_10036FF40()
{
  qword_100958D48 = (uint64_t)&off_1008B4D80;
}

void sub_10036FF54()
{
  qword_100958D50 = (uint64_t)&off_1008B4F40;
}

void sub_10036FF68()
{
  qword_100958D58 = (uint64_t)&off_1008B5480;
}

void sub_10036FF7C()
{
  qword_100958D60 = (uint64_t)&off_1008B5100;
}

void sub_10036FF90()
{
  qword_100958D68 = (uint64_t)&off_1008B52C0;
}

void sub_10036FFA4()
{
  qword_100958D70 = (uint64_t)&off_1008B59C0;
}

void sub_10036FFB8()
{
  qword_100958D78 = (uint64_t)&off_1008B5800;
}

void sub_10036FFCC()
{
  off_100958D80 = &off_1008B5640;
}

double sub_10036FFE0(uint64_t a1, char a2, double a3)
{
  id v4 = [self quantityWithUnit:a1 doubleValue:a3];
  id v5 = sub_10008CC68(byte_100760170[a2]);
  [v4 doubleValueForUnit:v5];
  double v7 = v6;

  return v7;
}

void *sub_10037007C(uint64_t a1, double (*a2)(uint64_t, double))
{
  int64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v5 = sub_1001C92DC(0, v2, 0);
    double v6 = (double *)(a1 + 32);
    do
    {
      double v7 = a2(v5, *v6);
      unint64_t v9 = _swiftEmptyArrayStorage[2];
      unint64_t v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1) {
        uint64_t v5 = sub_1001C92DC(v8 > 1, v9 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v9 + 1;
      uint64_t v10 = (double *)&_swiftEmptyArrayStorage[2 * v9];
      v10[4] = v7;
      *((unsigned char *)v10 + 40) = 0;
      ++v6;
      --v2;
    }
    while (v2);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_100370178(char a1)
{
  switch(a1)
  {
    case 1:
      if (qword_10094AA30 != -1) {
        swift_once();
      }
      uint64_t v1 = qword_100958D40;
      goto LABEL_35;
    case 2:
      id v14 = [self mileUnit];
      id v15 = v14;
      if (qword_10094AA50 == -1) {
        goto LABEL_21;
      }
      goto LABEL_55;
    case 3:
      uint64_t v16 = self;
      id v17 = [v16 mileUnit];
      id v18 = [v16 hourUnit];
      id v15 = [v17 unitDividedByUnit:v18];

      if (qword_10094AA68 == -1) {
        goto LABEL_21;
      }
      goto LABEL_55;
    case 4:
      if (qword_10094AA70 != -1) {
        swift_once();
      }
      int64_t v2 = (double *)off_100958D80;
      int64_t v3 = *((void *)off_100958D80 + 2);
      id v4 = _swiftEmptyArrayStorage;
      if (!v3) {
        goto LABEL_36;
      }
      swift_bridgeObjectRetain();
      sub_1001C92DC(0, v3, 0);
      uint64_t v5 = 0;
      id v4 = _swiftEmptyArrayStorage;
      uint64_t v6 = _swiftEmptyArrayStorage[2];
      uint64_t v7 = 2 * v6;
      do
      {
        unint64_t v8 = v6 + v5;
        double v9 = v2[v5 + 4];
        if (v9 >= 0.0) {
          double v10 = v2[v5 + 4];
        }
        else {
          double v10 = 0.0;
        }
        unint64_t v11 = _swiftEmptyArrayStorage[3];
        unint64_t v12 = v8 + 1;
        if (v8 >= v11 >> 1) {
          sub_1001C92DC(v11 > 1, v8 + 1, 1);
        }
        ++v5;
        _swiftEmptyArrayStorage[2] = v12;
        uint64_t v13 = (double *)&_swiftEmptyArrayStorage[v7];
        _OWORD v13[4] = v10;
        *((unsigned char *)v13 + 40) = v9 < 0.0;
        v7 += 2;
      }
      while (v3 != v5);
      swift_bridgeObjectRelease();
      uint64_t v23 = _swiftEmptyArrayStorage[2];
      if (!v23) {
        goto LABEL_41;
      }
      goto LABEL_37;
    case 5:
      if (qword_10094AA38 != -1) {
        swift_once();
      }
      uint64_t v1 = qword_100958D48;
      goto LABEL_35;
    case 6:
      if (qword_10094AA48 != -1) {
        swift_once();
      }
      uint64_t v1 = qword_100958D58;
      goto LABEL_35;
    case 7:
      uint64_t v19 = self;
      id v20 = [v19 mileUnit];
      id v21 = [v19 hourUnit];
      id v15 = [v20 unitDividedByUnit:v21];

      if (qword_10094AA60 == -1) {
        goto LABEL_21;
      }
LABEL_55:
      id v14 = (id)swift_once();
LABEL_21:
      __chkstk_darwin(v14);
      uint64_t v22 = swift_bridgeObjectRetain();
      id v4 = sub_10037007C(v22, (double (*)(uint64_t, double))sub_100371DC0);

      swift_bridgeObjectRelease();
      uint64_t v23 = v4[2];
      if (!v23) {
        goto LABEL_41;
      }
      goto LABEL_37;
    case 8:
      if (qword_10094AA58 != -1) {
        swift_once();
      }
      uint64_t v1 = qword_100958D68;
      goto LABEL_35;
    default:
      if (qword_10094AA40 != -1) {
        swift_once();
      }
      uint64_t v1 = qword_100958D50;
LABEL_35:
      id v4 = sub_1001E5518(v1);
LABEL_36:
      uint64_t v23 = v4[2];
      if (v23)
      {
LABEL_37:
        swift_bridgeObjectRetain();
        uint64_t v24 = v4 + 5;
        char v25 = _swiftEmptyArrayStorage;
        do
        {
          uint64_t v26 = *((void *)v24 - 1);
          char v27 = *v24;
          v24 += 16;
          sub_1000AFA94(&qword_10094F400);
          uint64_t v28 = static Array._allocateBufferUninitialized(minimumCapacity:)();
          *(void *)(v28 + 16) = 7;
          *(void *)(v28 + 32) = v26;
          *(unsigned char *)(v28 + 40) = v27;
          *(void *)(v28 + 48) = v26;
          *(unsigned char *)(v28 + 56) = v27;
          *(void *)(v28 + 64) = v26;
          *(unsigned char *)(v28 + 72) = v27;
          *(void *)(v28 + 80) = v26;
          *(unsigned char *)(v28 + 88) = v27;
          *(void *)(v28 + 96) = v26;
          *(unsigned char *)(v28 + 104) = v27;
          *(void *)(v28 + 112) = v26;
          *(unsigned char *)(v28 + 120) = v27;
          *(void *)(v28 + 128) = v26;
          *(unsigned char *)(v28 + 136) = v27;
          swift_bridgeObjectRetain();
          sub_1001E4354(v28);
          swift_bridgeObjectRelease();
          --v23;
        }
        while (v23);
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_41:
        char v25 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRelease();
      unint64_t v29 = _swiftEmptyArrayStorage[2];
      if (v29 > 0x16C) {
        return _swiftEmptyArrayStorage;
      }
      if (!v29)
      {
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        JUMPOUT(0x1003708B0);
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      char v31 = _swiftEmptyArrayStorage;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_45;
      }
      break;
  }
LABEL_54:
  char v31 = sub_100088218(0, v29 + 1, 1, v25);
LABEL_45:
  unint64_t v32 = v29 - 1;
  unint64_t v29 = v25[2];
  do
  {
    if (v32 >= v29)
    {
      __break(1u);
      goto LABEL_54;
    }
    char v33 = &v25[2 * v32];
    uint64_t v34 = v33[4];
    char v35 = *((unsigned char *)v33 + 40);
    unint64_t v32 = v31[2];
    unint64_t v36 = v31[3];
    unint64_t v29 = v32 + 1;
    if (v32 >= v36 >> 1) {
      char v31 = sub_100088218((void *)(v36 > 1), v32 + 1, 1, v31);
    }
    v31[2] = v29;
    uint64_t v37 = &v31[2 * v32];
    v37[4] = v34;
    *((unsigned char *)v37 + 40) = v35;
    char v25 = v31;
  }
  while (v32 < 0x16C);
  return v31;
}

uint64_t sub_1003708D4@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v4 = a1;
  uint64_t v6 = sub_100370178(a1);
  uint64_t v7 = sub_100369B1C((uint64_t)v6);
  swift_bridgeObjectRelease();
  sub_1000AFA94(&qword_10094E7C8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10075CD20;
  unint64_t v9 = sub_100020AC4(0x20000000000001uLL);
  double v10 = (double)v9 * 1.11022302e-16 * 0.4 + -0.2;
  if (v9 == 0x20000000000000) {
    double v10 = 0.2;
  }
  *(double *)(inited + 32) = v10;
  unint64_t v11 = sub_100020AC4(0x20000000000001uLL);
  double v12 = (double)v11 * 1.11022302e-16 * 0.1 + -0.05;
  if (v11 == 0x20000000000000) {
    double v12 = 0.05;
  }
  *(double *)(inited + 40) = v12;
  unint64_t v13 = sub_100020AC4(0x20000000000001uLL);
  double v14 = (double)v13 * 1.11022302e-16 * 0.1 + -0.05;
  if (v13 == 0x20000000000000) {
    double v14 = 0.05;
  }
  *(double *)(inited + 48) = v14;
  unint64_t v15 = sub_100020AC4(0x20000000000001uLL);
  double v16 = (double)v15 * 1.11022302e-16 * 0.1 + -0.05;
  if (v15 == 0x20000000000000) {
    double v16 = 0.05;
  }
  *(double *)(inited + 56) = v16;
  unint64_t v17 = sub_100020AC4(0x20000000000001uLL);
  double v18 = (double)v17 * 1.11022302e-16 * 0.1 + -0.05;
  if (v17 == 0x20000000000000) {
    double v18 = 0.05;
  }
  *(double *)(inited + 64) = v18;
  unint64_t v19 = sub_100020AC4(0x20000000000001uLL);
  double v20 = (double)v19 * 1.11022302e-16 * 0.1 + -0.05;
  if (v19 == 0x20000000000000) {
    double v20 = 0.05;
  }
  *(double *)(inited + 72) = v20;
  unint64_t v21 = sub_100020AC4(0x20000000000001uLL);
  double v22 = (double)v21 * 1.11022302e-16 * 0.2 + -0.1;
  if (v21 == 0x20000000000000) {
    double v22 = 0.1;
  }
  *(double *)(inited + 80) = v22;
  long long v23 = *(_OWORD *)(a2 + 32);
  v150[0] = *(_OWORD *)(a2 + 16);
  v150[1] = v23;
  v150[2] = *(_OWORD *)(a2 + 48);
  uint64_t v151 = *(void *)(a2 + 64);
  uint64_t v24 = *((void *)&v150[0] + 1);
  char v25 = *(void **)&v150[0];
  uint64_t v26 = v23;
  sub_1000B013C((uint64_t)v150);
  sub_100087AC8(7, (uint64_t)v142, 0.0, 6.0);
  char v27 = (void *)v142[0];
  double v28 = *(double *)&v142[3];
  double v126 = *(double *)&v142[4];
  double v29 = *(double *)&v142[5];
  double v138 = *(double *)&v142[6];
  sub_100087AC8(7, (uint64_t)v143, 0.0, 6.0);
  char v31 = (double *)v143[0];
  double v124 = v145;
  double v125 = v28;
  double v32 = v146;
  double v33 = v147;
  uint64_t v34 = v25[2];
  double v123 = v144;
  double v135 = v146;
  double v136 = v29;
  if (v34)
  {
    char v115 = v4;
    uint64_t v116 = v24;
    uint64_t v117 = v26;
    uint64_t v118 = a3;
    unint64_t v35 = 0;
    unint64_t v36 = v7 + 5;
    uint64_t v119 = inited + 32;
    int8x16_t v132 = 0u;
    int8x16_t v133 = (int8x16_t)xmmword_10075A6E0;
    uint64_t v37 = -1;
    uint64_t v38 = 4;
    double v39 = -1.0;
    double v40 = 1.0;
    double v41 = 0.0;
    double v42 = 0.0;
    double v127 = 0.0;
    double v120 = v29;
    double v121 = v144;
    double v122 = v28;
    double v131 = 0.0;
    uint64_t v141 = v27;
    uint64_t v134 = v27;
    uint64_t v137 = v27;
    uint64_t v129 = v25[2];
    uint64_t v130 = v7;
    double v43 = v138;
    do
    {
      if (v35 >= v7[2])
      {
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        __break(1u);
        JUMPOUT(0x100371468);
      }
      if (*v36)
      {
        if (v35 < v25[2])
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v25 = sub_1005EC1D4(v25);
          }
          if (v35 >= v25[2]) {
            goto LABEL_147;
          }
          uint64_t v44 = &v25[v38];
          *uint64_t v44 = 0;
          v44[1] = 0;
          *((unsigned char *)v44 + 16) = 1;
        }
      }
      else
      {
        uint64_t v45 = *((void *)v36 - 1);
        *(void *)&long long v30 = v45;
        uint64_t v46 = v25[2];
        unint64_t v47 = v37 + v46;
        long long v139 = v30;
        if (__CFADD__(v37, v46))
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v25 = sub_1005EC1D4(v25);
          }
          long long v30 = v139;
          if (v47 >= v25[2]) {
            goto LABEL_148;
          }
          uint64_t v48 = &v25[3 * v47];
          v48[4] = v45;
          v48[5] = 0x3FF0000000000000;
          *((unsigned char *)v48 + 48) = 0;
          double v49 = v131;
          int32x2_t v50 = vdup_n_s32(v131 < *(double *)&v139);
          v51.i64[0] = v50.u32[0];
          v51.i64[1] = v50.u32[1];
          __asm { FMOV            V1.2D, #1.0 }
          _Q1.i64[0] = v139;
          int8x16_t v132 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v51, 0x3FuLL)), _Q1, v132);
          if (_NF) {
            double v49 = *(double *)&v139;
          }
          double v131 = v49;
          BOOL v57 = v39 < 0.0;
          if (v39 > *(double *)&v139) {
            BOOL v57 = 1;
          }
          if (v57)
          {
            double v39 = *(double *)&v139;
            unint64_t v58 = -1;
          }
          else
          {
            unint64_t v58 = 0;
          }
          int8x16_t v133 = vbslq_s8((int8x16_t)vdupq_n_s64(v58), _Q1, v133);
        }
        unint64_t v59 = v35 / 7;
        double v60 = v41 * v42 + *(double *)&v30;
        double v41 = v41 + v40;
        double v42 = v60 / v41;
        unint64_t v61 = v35 % 7;
        char v62 = v27;
        uint64_t v63 = v27;
        uint64_t v64 = v27;
        switch(v35 % 7)
        {
          case 0uLL:
          case 6uLL:
            char v62 = v141;
            uint64_t v63 = v134;
            goto LABEL_42;
          case 1uLL:
            goto LABEL_44;
          case 2uLL:
          case 3uLL:
            uint64_t v64 = v137;
            char v62 = v137;
            uint64_t v63 = v137;
            goto LABEL_44;
          case 4uLL:
          case 5uLL:
            uint64_t v63 = v134;
            char v62 = v134;
LABEL_42:
            uint64_t v64 = v137;
LABEL_44:
            uint64_t v65 = 0x1FFFFFFFFFFFFFEBLL * v59;
            if (v61 >= v62[2])
            {
              double v71 = v136;
              double v72 = v43;
              uint64_t v141 = v62;
              uint64_t v134 = v63;
              uint64_t v137 = v64;
            }
            else
            {
              double v128 = v41;
              double v66 = v33;
              uint64_t v67 = (double *)((char *)v62 + v38 * 8 - 168 * v59);
              double v68 = v42;
              if ((_BYTE)v67[2])
              {
                double v69 = 1.0;
                double v70 = 0.0;
              }
              else
              {
                double v69 = v67[1];
                double v70 = *(double *)&v62[v38 + -21 * v59];
              }
              double v73 = *(double *)(v119 - 56 * v59 + 8 * v35);
              if (swift_isUniquelyReferenced_nonNull_native()) {
                char v27 = v62;
              }
              else {
                char v27 = sub_1005EC1D4(v62);
              }
              if (v61 >= v27[2]) {
                goto LABEL_149;
              }
              double v72 = v69 + 1.0;
              double v71 = (v73 * *(double *)&v139 + *(double *)&v139 + v70 * v69) / (v69 + 1.0);
              *(double *)&v27[v65 + v38] = v71;
              uint64_t v74 = (double *)&v27[v38 + v65];
              v74[1] = v72;
              *((unsigned char *)v74 + 16) = 0;
              double v75 = v122;
              if (v122 >= v71) {
                double v76 = v125;
              }
              else {
                double v76 = v71;
              }
              double v77 = v126;
              if (v122 < v71) {
                double v77 = v72;
              }
              double v125 = v76;
              double v126 = v77;
              if (v122 < v71) {
                double v75 = v71;
              }
              double v122 = v75;
              if (v120 < 0.0)
              {
                double v120 = v71;
                uint64_t v141 = v27;
                uint64_t v134 = v27;
                uint64_t v137 = v27;
                double v42 = v68;
              }
              else
              {
                double v42 = v68;
                if (v71 < v120)
                {
                  double v120 = v71;
                }
                else
                {
                  double v71 = v136;
                  double v72 = v43;
                }
                uint64_t v141 = v27;
                uint64_t v134 = v27;
                uint64_t v137 = v27;
              }
              double v40 = 1.0;
              double v33 = v66;
              double v41 = v128;
            }
            unint64_t v78 = *((void *)v31 + 2);
            if (v61 >= v78)
            {
              double v84 = v135;
              double v85 = v33;
              uint64_t v34 = v129;
              uint64_t v7 = v130;
            }
            else
            {
              double v140 = v33;
              double v79 = v32;
              uint64_t v80 = &v31[v38 + v65];
              double v81 = v72;
              if ((_BYTE)v80[2])
              {
                double v82 = 1.0;
                double v83 = 0.0;
              }
              else
              {
                double v82 = v80[1];
                double v83 = v31[v65 + v38];
              }
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                char v31 = (double *)sub_1005EC1D4(v31);
              }
              unint64_t v78 = *((void *)v31 + 2);
              if (v61 >= v78) {
                goto LABEL_150;
              }
              double v72 = v81;
              double v85 = v82 + 1.0;
              double v84 = (v83 * v82 + 1.0) / (v82 + 1.0);
              v31[v65 + v38] = v84;
              uint64_t v86 = &v31[v38 + v65];
              v86[1] = v82 + 1.0;
              *((unsigned char *)v86 + 16) = 0;
              double v87 = v121;
              if (v121 >= v84) {
                double v88 = v123;
              }
              else {
                double v88 = (v83 * v82 + 1.0) / (v82 + 1.0);
              }
              double v89 = v124;
              if (v121 < v84) {
                double v89 = v82 + 1.0;
              }
              double v123 = v88;
              double v124 = v89;
              if (v121 < v84) {
                double v87 = (v83 * v82 + 1.0) / (v82 + 1.0);
              }
              double v121 = v87;
              if (v79 < 0.0)
              {
                double v32 = (v83 * v82 + 1.0) / (v82 + 1.0);
                uint64_t v34 = v129;
                uint64_t v7 = v130;
              }
              else
              {
                double v32 = v79;
                uint64_t v34 = v129;
                uint64_t v7 = v130;
                if (v84 < v79)
                {
                  double v32 = v84;
                }
                else
                {
                  double v84 = v135;
                  double v85 = v140;
                }
              }
              double v40 = 1.0;
            }
            unint64_t v90 = v141[2];
            unint64_t v91 = (double *)(v141 + 4);
            double v93 = 0.0;
            if (v90)
            {
              if ((v141[6] & 1) == 0)
              {
                if (v78)
                {
                  uint64_t v92 = v31 + 4;
                  if (((_BYTE)v31[6] & 1) == 0 && *v92 > 0.0)
                  {
                    if (*v91 / *v92 > 0.0) {
                      double v93 = *v91 / v31[4];
                    }
                    else {
                      double v93 = 0.0;
                    }
                  }
                }
              }
            }
            if (v90 > 1 && (v141[9] & 1) == 0 && v78 > 1)
            {
              uint64_t v94 = v31 + 7;
              if (((_BYTE)v31[9] & 1) == 0 && *v94 > 0.0 && *((double *)v141 + 7) / *v94 > v93) {
                double v93 = *((double *)v141 + 7) / *v94;
              }
            }
            if (v90 > 2 && (v141[12] & 1) == 0 && v78 > 2)
            {
              int v95 = v31 + 10;
              if (((_BYTE)v31[12] & 1) == 0 && *v95 > 0.0 && *((double *)v141 + 10) / *v95 > v93) {
                double v93 = *((double *)v141 + 10) / *v95;
              }
            }
            if (v90 > 3 && (v141[15] & 1) == 0 && v78 > 3)
            {
              char v96 = v31 + 13;
              if (((_BYTE)v31[15] & 1) == 0 && *v96 > 0.0 && *((double *)v141 + 13) / *v96 > v93) {
                double v93 = *((double *)v141 + 13) / *v96;
              }
            }
            if (v90 > 4 && (v141[18] & 1) == 0 && v78 > 4)
            {
              long long v97 = v31 + 16;
              if (((_BYTE)v31[18] & 1) == 0 && *v97 > 0.0 && *((double *)v141 + 16) / *v97 > v93) {
                double v93 = *((double *)v141 + 16) / *v97;
              }
            }
            if (v90 > 5 && (v141[21] & 1) == 0 && v78 > 5)
            {
              long long v98 = v31 + 19;
              if (((_BYTE)v31[21] & 1) == 0 && *v98 > 0.0 && *((double *)v141 + 19) / *v98 > v93) {
                double v93 = *((double *)v141 + 19) / *v98;
              }
            }
            double v127 = v93;
            if (v90 > 6)
            {
              long long v99 = (double *)(v141 + 22);
              if ((v141[24] & 1) == 0 && v78 > 6)
              {
                uint64_t v100 = v31 + 22;
                if (((_BYTE)v31[24] & 1) == 0 && *v100 > 0.0)
                {
                  if (*v99 / *v100 > v93) {
                    double v93 = *v99 / *v100;
                  }
                  double v127 = v93;
                }
              }
            }
            double v135 = v84;
            double v136 = v71;
            double v33 = v85;
            double v43 = v72;
            break;
          default:
            uint64_t v34 = v129;
            uint64_t v7 = v130;
            break;
        }
      }
      ++v35;
      --v37;
      v36 += 16;
      v38 += 3;
    }
    while (v34 != v35);
    double v101 = v42;
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    a3 = v118;
    uint64_t v26 = v117;
    char v4 = v115;
    uint64_t v24 = v116;
    double v103 = v127;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    int8x16_t v132 = 0u;
    int8x16_t v133 = (int8x16_t)xmmword_10075A6E0;
    double v41 = 0.0;
    double v101 = 0.0;
    double v103 = 0.0;
    double v43 = v138;
  }
  if (v4 == 4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    double v33 = 0.0;
    sub_100087AC8(7, (uint64_t)v148, 0.0, 6.0);
    sub_100087AC8(7, (uint64_t)v149, 0.0, 6.0);
    uint64_t v104 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain_n();
    sub_1000B008C((uint64_t)v148);
    swift_bridgeObjectRetain_n();
    sub_1000B008C((uint64_t)v149);
    uint64_t result = swift_bridgeObjectRelease_n();
    char v105 = 6;
    double v106 = -1.0;
    double v107 = 0.0;
    uint64_t v108 = 0x7FF8000000000000;
    double v109 = 0.0;
    char v31 = (double *)_swiftEmptyArrayStorage;
    double v43 = 0.0;
    double v110 = -1.0;
    double v111 = 0.0;
    double v112 = 0.0;
    uint64_t v113 = 0x7FF8000000000000;
    uint64_t v114 = _swiftEmptyArrayStorage;
    char v27 = _swiftEmptyArrayStorage;
    double v103 = 0.0;
  }
  else
  {
    uint64_t v108 = v143[2];
    uint64_t v113 = v142[2];
    uint64_t v104 = (void *)v143[1];
    uint64_t v114 = (void *)v142[1];
    double v112 = v125;
    double v111 = v126;
    double v109 = v123;
    double v107 = v124;
    double v106 = v135;
    double v110 = v136;
    char v105 = 5;
  }
  *(double *)a3 = v101;
  *(double *)(a3 + 8) = v41;
  *(void *)(a3 + 16) = v25;
  *(void *)(a3 + 24) = v24;
  *(void *)(a3 + 32) = v26;
  *(int8x16_t *)(a3 + 40) = v132;
  *(int8x16_t *)(a3 + 56) = v133;
  *(void *)(a3 + 72) = v27;
  *(void *)(a3 + 80) = v114;
  *(void *)(a3 + 88) = v113;
  *(double *)(a3 + 96) = v112;
  *(double *)(a3 + 104) = v111;
  *(double *)(a3 + 112) = v110;
  *(double *)(a3 + 120) = v43;
  *(void *)(a3 + 128) = v31;
  *(void *)(a3 + 136) = v104;
  *(void *)(a3 + 144) = v108;
  *(double *)(a3 + 152) = v109;
  *(double *)(a3 + 160) = v107;
  *(double *)(a3 + 168) = v106;
  *(double *)(a3 + 176) = v33;
  *(double *)(a3 + 184) = v103;
  *(unsigned char *)(a3 + 192) = v105;
  return result;
}

unint64_t sub_1003714A8(uint64_t a1)
{
  uint64_t v1 = __chkstk_darwin(a1);
  int64_t v3 = v2;
  long long v4 = *(_OWORD *)(v1 + 176);
  v105[10] = *(_OWORD *)(v1 + 160);
  v105[11] = v4;
  char v106 = *(unsigned char *)(v1 + 192);
  long long v5 = *(_OWORD *)(v1 + 112);
  v105[6] = *(_OWORD *)(v1 + 96);
  v105[7] = v5;
  long long v6 = *(_OWORD *)(v1 + 128);
  v105[9] = *(_OWORD *)(v1 + 144);
  v105[8] = v6;
  long long v7 = *(_OWORD *)(v1 + 48);
  v105[2] = *(_OWORD *)(v1 + 32);
  v105[3] = v7;
  long long v8 = *(_OWORD *)(v1 + 64);
  v105[5] = *(_OWORD *)(v1 + 80);
  v105[4] = v8;
  long long v9 = *(_OWORD *)v1;
  v105[1] = *(_OWORD *)(v1 + 16);
  v105[0] = v9;
  sub_1003708D4(1, (uint64_t)v105, (uint64_t)&v76);
  long long v10 = *(_OWORD *)(v1 + 376);
  v103[10] = *(_OWORD *)(v1 + 360);
  v103[11] = v10;
  char v104 = *(unsigned char *)(v1 + 392);
  long long v11 = *(_OWORD *)(v1 + 312);
  v103[6] = *(_OWORD *)(v1 + 296);
  v103[7] = v11;
  long long v12 = *(_OWORD *)(v1 + 328);
  v103[9] = *(_OWORD *)(v1 + 344);
  v103[8] = v12;
  long long v13 = *(_OWORD *)(v1 + 216);
  long long v14 = *(_OWORD *)(v1 + 248);
  v103[2] = *(_OWORD *)(v1 + 232);
  v103[3] = v14;
  long long v15 = *(_OWORD *)(v1 + 264);
  v103[5] = *(_OWORD *)(v1 + 280);
  v103[4] = v15;
  long long v16 = *(_OWORD *)(v1 + 200);
  v103[1] = v13;
  v103[0] = v16;
  sub_1003708D4(5, (uint64_t)v103, (uint64_t)v107);
  long long v17 = *(_OWORD *)(v1 + 576);
  v101[10] = *(_OWORD *)(v1 + 560);
  v101[11] = v17;
  char v102 = *(unsigned char *)(v1 + 592);
  long long v18 = *(_OWORD *)(v1 + 512);
  v101[6] = *(_OWORD *)(v1 + 496);
  v101[7] = v18;
  long long v19 = *(_OWORD *)(v1 + 528);
  v101[9] = *(_OWORD *)(v1 + 544);
  v101[8] = v19;
  long long v20 = *(_OWORD *)(v1 + 448);
  v101[2] = *(_OWORD *)(v1 + 432);
  v101[3] = v20;
  long long v21 = *(_OWORD *)(v1 + 464);
  v101[5] = *(_OWORD *)(v1 + 480);
  v101[4] = v21;
  long long v22 = *(_OWORD *)(v1 + 400);
  v101[1] = *(_OWORD *)(v1 + 416);
  v101[0] = v22;
  sub_1003708D4(0, (uint64_t)v101, (uint64_t)v109);
  long long v23 = *(_OWORD *)(v1 + 776);
  v99[10] = *(_OWORD *)(v1 + 760);
  v99[11] = v23;
  char v100 = *(unsigned char *)(v1 + 792);
  long long v24 = *(_OWORD *)(v1 + 712);
  v99[6] = *(_OWORD *)(v1 + 696);
  v99[7] = v24;
  long long v25 = *(_OWORD *)(v1 + 728);
  v99[9] = *(_OWORD *)(v1 + 744);
  v99[8] = v25;
  long long v26 = *(_OWORD *)(v1 + 648);
  v99[2] = *(_OWORD *)(v1 + 632);
  v99[3] = v26;
  long long v27 = *(_OWORD *)(v1 + 664);
  v99[5] = *(_OWORD *)(v1 + 680);
  v99[4] = v27;
  long long v28 = *(_OWORD *)(v1 + 600);
  v99[1] = *(_OWORD *)(v1 + 616);
  v99[0] = v28;
  sub_1003708D4(2, (uint64_t)v99, (uint64_t)v111);
  long long v29 = *(_OWORD *)(v1 + 976);
  v97[10] = *(_OWORD *)(v1 + 960);
  v97[11] = v29;
  char v98 = *(unsigned char *)(v1 + 992);
  long long v30 = *(_OWORD *)(v1 + 912);
  v97[6] = *(_OWORD *)(v1 + 896);
  uint64_t v97[7] = v30;
  long long v31 = *(_OWORD *)(v1 + 928);
  v97[9] = *(_OWORD *)(v1 + 944);
  v97[8] = v31;
  long long v32 = *(_OWORD *)(v1 + 848);
  v97[2] = *(_OWORD *)(v1 + 832);
  v97[3] = v32;
  long long v33 = *(_OWORD *)(v1 + 864);
  v97[5] = *(_OWORD *)(v1 + 880);
  v97[4] = v33;
  long long v34 = *(_OWORD *)(v1 + 800);
  v97[1] = *(_OWORD *)(v1 + 816);
  v97[0] = v34;
  sub_1003708D4(8, (uint64_t)v97, (uint64_t)v113);
  long long v35 = *(_OWORD *)(v1 + 1176);
  v95[10] = *(_OWORD *)(v1 + 1160);
  v95[11] = v35;
  char v96 = *(unsigned char *)(v1 + 1192);
  long long v36 = *(_OWORD *)(v1 + 1112);
  v95[6] = *(_OWORD *)(v1 + 1096);
  v95[7] = v36;
  long long v37 = *(_OWORD *)(v1 + 1128);
  v95[9] = *(_OWORD *)(v1 + 1144);
  v95[8] = v37;
  long long v38 = *(_OWORD *)(v1 + 1048);
  v95[2] = *(_OWORD *)(v1 + 1032);
  v95[3] = v38;
  long long v39 = *(_OWORD *)(v1 + 1064);
  v95[5] = *(_OWORD *)(v1 + 1080);
  v95[4] = v39;
  long long v40 = *(_OWORD *)(v1 + 1000);
  v95[1] = *(_OWORD *)(v1 + 1016);
  v95[0] = v40;
  sub_1003708D4(4, (uint64_t)v95, (uint64_t)v115);
  long long v41 = *(_OWORD *)(v1 + 1344);
  long long v42 = *(_OWORD *)(v1 + 1376);
  v93[10] = *(_OWORD *)(v1 + 1360);
  v93[11] = v42;
  char v94 = *(unsigned char *)(v1 + 1392);
  long long v43 = *(_OWORD *)(v1 + 1280);
  long long v44 = *(_OWORD *)(v1 + 1312);
  v93[6] = *(_OWORD *)(v1 + 1296);
  v93[7] = v44;
  long long v45 = *(_OWORD *)(v1 + 1328);
  v93[9] = v41;
  v93[8] = v45;
  long long v46 = *(_OWORD *)(v1 + 1216);
  long long v47 = *(_OWORD *)(v1 + 1248);
  v93[2] = *(_OWORD *)(v1 + 1232);
  v93[3] = v47;
  long long v48 = *(_OWORD *)(v1 + 1264);
  v93[5] = v43;
  v93[4] = v48;
  long long v49 = *(_OWORD *)(v1 + 1200);
  v93[1] = v46;
  v93[0] = v49;
  sub_1003708D4(6, (uint64_t)v93, (uint64_t)v117);
  long long v50 = *(_OWORD *)(v1 + 1576);
  v91[10] = *(_OWORD *)(v1 + 1560);
  v91[11] = v50;
  char v92 = *(unsigned char *)(v1 + 1592);
  long long v51 = *(_OWORD *)(v1 + 1512);
  v91[6] = *(_OWORD *)(v1 + 1496);
  v91[7] = v51;
  long long v52 = *(_OWORD *)(v1 + 1528);
  v91[9] = *(_OWORD *)(v1 + 1544);
  v91[8] = v52;
  long long v53 = *(_OWORD *)(v1 + 1448);
  v91[2] = *(_OWORD *)(v1 + 1432);
  v91[3] = v53;
  long long v54 = *(_OWORD *)(v1 + 1464);
  v91[5] = *(_OWORD *)(v1 + 1480);
  v91[4] = v54;
  long long v55 = *(_OWORD *)(v1 + 1400);
  v91[1] = *(_OWORD *)(v1 + 1416);
  v91[0] = v55;
  sub_1003708D4(3, (uint64_t)v91, (uint64_t)v119);
  long long v56 = *(_OWORD *)(v1 + 1744);
  long long v57 = *(_OWORD *)(v1 + 1776);
  v89[10] = *(_OWORD *)(v1 + 1760);
  v89[11] = v57;
  char v90 = *(unsigned char *)(v1 + 1792);
  long long v58 = *(_OWORD *)(v1 + 1680);
  long long v59 = *(_OWORD *)(v1 + 1712);
  v89[6] = *(_OWORD *)(v1 + 1696);
  v89[7] = v59;
  long long v60 = *(_OWORD *)(v1 + 1728);
  v89[9] = v56;
  v89[8] = v60;
  long long v61 = *(_OWORD *)(v1 + 1616);
  long long v62 = *(_OWORD *)(v1 + 1648);
  v89[2] = *(_OWORD *)(v1 + 1632);
  v89[3] = v62;
  long long v63 = *(_OWORD *)(v1 + 1664);
  v89[5] = v58;
  v89[4] = v63;
  long long v64 = *(_OWORD *)(v1 + 1600);
  v89[1] = v61;
  v89[0] = v64;
  sub_1003708D4(7, (uint64_t)v89, (uint64_t)v121);
  uint64_t v65 = *(void *)(v77 + 16);
  unint64_t result = sub_100020AC4(0x20000000000001uLL);
  double v67 = (double)result * 1.11022302e-16 * 0.04 + 0.68;
  if (result == 0x20000000000000) {
    double v67 = 0.72;
  }
  double v68 = (double)v65;
  double v69 = round(v67 * (double)v65);
  if ((~*(void *)&v69 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v69 <= -9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v69 >= 9.22337204e18)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  unint64_t result = sub_100020AC4(0x20000000000001uLL);
  double v70 = (double)result * 1.11022302e-16 * 0.04 + 0.78;
  if (result == 0x20000000000000) {
    double v70 = 0.82;
  }
  double v71 = round(v70 * v68);
  if ((~*(void *)&v71 & 0x7FF0000000000000) == 0) {
    goto LABEL_20;
  }
  if (v71 <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v71 >= 9.22337204e18)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t result = sub_100020AC4(0x20000000000001uLL);
  double v72 = (double)result * 1.11022302e-16 * 0.05 + 0.6;
  if (result == 0x20000000000000) {
    double v72 = 0.65;
  }
  double v73 = round(v72 * v68);
  if ((~*(void *)&v73 & 0x7FF0000000000000) == 0) {
    goto LABEL_23;
  }
  if (v73 <= -9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v73 < 9.22337204e18)
  {
    uint64_t v74 = (uint64_t)v73;
    *(_OWORD *)&v75[160] = v86;
    *(_OWORD *)&v75[176] = v87;
    v75[192] = v88;
    *(_OWORD *)&v75[96] = v82;
    *(_OWORD *)&v75[112] = v83;
    *(_OWORD *)&v75[128] = v84;
    *(_OWORD *)&v75[144] = v85;
    *(_OWORD *)&v75[32] = v78;
    *(_OWORD *)&v75[48] = v79;
    *(_OWORD *)&v75[64] = v80;
    *(_OWORD *)&v75[80] = v81;
    *(_OWORD *)double v75 = v76;
    *(_OWORD *)&v75[16] = v77;
    *(_OWORD *)&v75[360] = v107[10];
    *(_OWORD *)&v75[376] = v107[11];
    *(_OWORD *)&v75[296] = v107[6];
    *(_OWORD *)&v75[312] = v107[7];
    *(_OWORD *)&v75[328] = v107[8];
    *(_OWORD *)&v75[344] = v107[9];
    *(_OWORD *)&v75[264] = v107[4];
    *(_OWORD *)&v75[280] = v107[5];
    v75[392] = v108;
    *(_OWORD *)&v75[216] = v107[1];
    *(_OWORD *)&v75[232] = v107[2];
    *(_OWORD *)&v75[248] = v107[3];
    *(_OWORD *)&v75[200] = v107[0];
    *(_OWORD *)&v75[560] = v109[10];
    *(_OWORD *)&v75[576] = v109[11];
    v75[592] = v110;
    *(_OWORD *)&v75[496] = v109[6];
    *(_OWORD *)&v75[512] = v109[7];
    *(_OWORD *)&v75[528] = v109[8];
    *(_OWORD *)&v75[544] = v109[9];
    *(_OWORD *)&v75[432] = v109[2];
    *(_OWORD *)&v75[448] = v109[3];
    *(_OWORD *)&v75[464] = v109[4];
    *(_OWORD *)&v75[480] = v109[5];
    *(_OWORD *)&v75[400] = v109[0];
    *(_OWORD *)&v75[416] = v109[1];
    *(_OWORD *)&v75[760] = v111[10];
    *(_OWORD *)&v75[776] = v111[11];
    *(_OWORD *)&v75[696] = v111[6];
    *(_OWORD *)&v75[712] = v111[7];
    *(_OWORD *)&v75[728] = v111[8];
    *(_OWORD *)&v75[744] = v111[9];
    *(_OWORD *)&v75[632] = v111[2];
    *(_OWORD *)&v75[648] = v111[3];
    *(_OWORD *)&v75[664] = v111[4];
    *(_OWORD *)&v75[680] = v111[5];
    *(_OWORD *)&v75[600] = v111[0];
    *(_OWORD *)&v75[616] = v111[1];
    v75[792] = v112;
    *(_OWORD *)&v75[960] = v113[10];
    *(_OWORD *)&v75[976] = v113[11];
    v75[992] = v114;
    *(_OWORD *)&v75[896] = v113[6];
    *(_OWORD *)&v75[912] = v113[7];
    *(_OWORD *)&v75[928] = v113[8];
    *(_OWORD *)&v75[944] = v113[9];
    *(_OWORD *)&v75[832] = v113[2];
    *(_OWORD *)&v75[848] = v113[3];
    *(_OWORD *)&v75[864] = v113[4];
    *(_OWORD *)&v75[880] = v113[5];
    *(_OWORD *)&v75[800] = v113[0];
    *(_OWORD *)&v75[816] = v113[1];
    *(_OWORD *)&v75[1160] = v115[10];
    *(_OWORD *)&v75[1176] = v115[11];
    *(_OWORD *)&v75[1096] = v115[6];
    *(_OWORD *)&v75[1112] = v115[7];
    *(_OWORD *)&v75[1128] = v115[8];
    *(_OWORD *)&v75[1144] = v115[9];
    *(_OWORD *)&v75[1032] = v115[2];
    *(_OWORD *)&v75[1048] = v115[3];
    *(_OWORD *)&v75[1064] = v115[4];
    *(_OWORD *)&v75[1080] = v115[5];
    *(_OWORD *)&v75[1000] = v115[0];
    *(_OWORD *)&v75[1016] = v115[1];
    v75[1192] = v116;
    *(_OWORD *)&v75[1344] = v117[9];
    *(_OWORD *)&v75[1360] = v117[10];
    *(_OWORD *)&v75[1376] = v117[11];
    v75[1392] = v118;
    *(_OWORD *)&v75[1280] = v117[5];
    *(_OWORD *)&v75[1296] = v117[6];
    *(_OWORD *)&v75[1312] = v117[7];
    *(_OWORD *)&v75[1328] = v117[8];
    *(_OWORD *)&v75[1216] = v117[1];
    *(_OWORD *)&v75[1232] = v117[2];
    *(_OWORD *)&v75[1248] = v117[3];
    *(_OWORD *)&v75[1264] = v117[4];
    *(_OWORD *)&v75[1200] = v117[0];
    *(_OWORD *)&v75[1560] = v119[10];
    *(_OWORD *)&v75[1576] = v119[11];
    *(_OWORD *)&v75[1496] = v119[6];
    *(_OWORD *)&v75[1512] = v119[7];
    *(_OWORD *)&v75[1528] = v119[8];
    *(_OWORD *)&v75[1544] = v119[9];
    *(_OWORD *)&v75[1432] = v119[2];
    *(_OWORD *)&v75[1448] = v119[3];
    *(_OWORD *)&v75[1464] = v119[4];
    *(_OWORD *)&v75[1480] = v119[5];
    *(_OWORD *)&v75[1400] = v119[0];
    *(_OWORD *)&v75[1416] = v119[1];
    v75[1592] = v120;
    *(_OWORD *)&v75[1744] = v121[9];
    *(_OWORD *)&v75[1760] = v121[10];
    *(_OWORD *)&v75[1776] = v121[11];
    v75[1792] = v122;
    *(_OWORD *)&v75[1680] = v121[5];
    *(_OWORD *)&v75[1696] = v121[6];
    *(_OWORD *)&v75[1712] = v121[7];
    *(_OWORD *)&v75[1728] = v121[8];
    *(_OWORD *)&v75[1616] = v121[1];
    *(_OWORD *)&v75[1632] = v121[2];
    *(_OWORD *)&v75[1648] = v121[3];
    *(_OWORD *)&v75[1664] = v121[4];
    *(_OWORD *)&v75[1600] = v121[0];
    unint64_t result = (unint64_t)memcpy(v3, v75, 0x708uLL);
    v3[225] = (uint64_t)v69;
    v3[226] = (uint64_t)v71;
    v3[227] = v74;
    v3[228] = 0;
    return result;
  }
LABEL_25:
  __break(1u);
  return result;
}

double sub_100371DC0(double a1)
{
  return sub_10036FFE0(*(void *)(v1 + 16), *(unsigned char *)(v1 + 24), a1);
}

void sub_100371DCC(void *a1, int a2)
{
  uint64_t v3 = v2;
  LODWORD(v69) = a2;
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  uint64_t v6 = __chkstk_darwin(v5);
  long long v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  long long v11 = (char *)&v65 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  long long v14 = (char *)&v65 - v13;
  __chkstk_darwin(v12);
  long long v16 = (char *)&v65 - v15;
  long long v17 = *(uint64_t (**)(void *))(v2 + 112);
  if (v17)
  {
    swift_retain();
    long long v18 = (void *)v17(a1);
    sub_10005E5F8((uint64_t)v17);
    if (v18)
    {
      int v19 = static os_log_type_t.default.getter();
      long long v20 = HKLogActivity;
      id v21 = a1;
      if (os_log_type_enabled(v20, (os_log_type_t)v19))
      {
        LODWORD(v67) = v19;
        id v22 = v21;
        os_log_t v66 = v20;
        uint64_t v23 = swift_slowAlloc();
        uint64_t v65 = swift_slowAlloc();
        uint64_t v72 = v65;
        *(_DWORD *)uint64_t v23 = 136315394;
        id v24 = [v22 displayName:v65];
        uint64_t v68 = v5;
        if (v24)
        {
          long long v25 = v24;
          uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v28 = v27;
        }
        else
        {
          uint64_t v26 = 0;
          uint64_t v28 = 0;
        }
        uint64_t v70 = v26;
        uint64_t v71 = v28;
        sub_1000AFA94((uint64_t *)&unk_100958790);
        uint64_t v53 = Optional.description.getter();
        unint64_t v55 = v54;
        swift_bridgeObjectRelease();
        uint64_t v70 = sub_10008F1F4(v53, v55, &v72);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 2080;
        id v56 = [v22 UUID];
        if (v56)
        {
          long long v57 = v56;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v58 = type metadata accessor for UUID();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v14, 0, 1, v58);
        }
        else
        {
          uint64_t v59 = type metadata accessor for UUID();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v14, 1, 1, v59);
        }
        sub_1002D5014((uint64_t)v14, (uint64_t)v16);
        uint64_t v60 = Optional.description.getter();
        unint64_t v62 = v61;
        sub_1000CD2E4((uint64_t)v16);
        uint64_t v70 = sub_10008F1F4(v60, v62, &v72);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        os_log_t v63 = v66;
        _os_log_impl((void *)&_mh_execute_header, v66, (os_log_type_t)v67, "Presenting friend detail for %s-%s", (uint8_t *)v23, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        long long v41 = *(void **)(v3 + 144);
        if (!v41) {
          goto LABEL_25;
        }
      }
      else
      {

        long long v41 = *(void **)(v3 + 144);
        if (!v41) {
          goto LABEL_25;
        }
      }
      id v64 = v41;
      [v64 pushViewController:v18 animated:v69 & 1];

LABEL_25:
      return;
    }
  }
  os_log_type_t v29 = static os_log_type_t.default.getter();
  long long v30 = HKLogActivity;
  double v69 = a1;
  if (os_log_type_enabled(v30, v29))
  {
    long long v31 = v69;
    long long v32 = v30;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v72 = v34;
    *(_DWORD *)uint64_t v33 = 136315394;
    id v35 = [v31 displayName];
    uint64_t v68 = v5;
    double v69 = v32;
    uint64_t v67 = v34;
    if (v35)
    {
      long long v36 = v35;
      uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v39 = v38;
    }
    else
    {
      uint64_t v37 = 0;
      uint64_t v39 = 0;
    }
    uint64_t v70 = v37;
    uint64_t v71 = v39;
    sub_1000AFA94((uint64_t *)&unk_100958790);
    uint64_t v42 = Optional.description.getter();
    unint64_t v44 = v43;
    swift_bridgeObjectRelease();
    uint64_t v70 = sub_10008F1F4(v42, v44, &v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    id v45 = [v31 UUID];
    if (v45)
    {
      long long v46 = v45;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v47 = type metadata accessor for UUID();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v8, 0, 1, v47);
    }
    else
    {
      uint64_t v48 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v8, 1, 1, v48);
    }
    long long v49 = v69;
    sub_1002D5014((uint64_t)v8, (uint64_t)v11);
    uint64_t v50 = Optional.description.getter();
    unint64_t v52 = v51;
    sub_1000CD2E4((uint64_t)v11);
    uint64_t v70 = sub_10008F1F4(v50, v52, &v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v49, v29, "Failed to present friend detail for %s-%s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    long long v40 = v69;
  }
}

void sub_1003724B4()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 128);
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = swift_retain();
    id v8 = (id)v1(v3);
    sub_10005E5F8((uint64_t)v1);
    static os_log_type_t.default.getter();
    id v4 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

    id v5 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v8];
    uint64_t v6 = *(void **)(v2 + 144);
    if (v6)
    {
      id v7 = v6;
      [v7 presentViewController:v5 animated:1 completion:0];
    }
  }
  else
  {
    static os_log_type_t.default.getter();
    id v8 = HKLogActivity;
    os_log(_:dso:log:_:_:)();
  }
}

uint64_t sub_10037260C()
{
  sub_10005E5F8(*(void *)(v0 + 112));
  sub_10005E5F8(*(void *)(v0 + 128));

  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_100372654@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ActivitySharingNavigationCoordinator();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

void sub_100372690()
{
  uint64_t v1 = (double *)&v0[OBJC_IVAR____TtC10FitnessApp51ActivitySharingFriendDetailAwardsListViewController____lazy_storage___itemWidth];
  if ((v0[OBJC_IVAR____TtC10FitnessApp51ActivitySharingFriendDetailAwardsListViewController____lazy_storage___itemWidth
         + 8] & 1) != 0)
  {
    id v2 = [v0 collectionView];
    if (v2)
    {
      uint64_t v3 = v2;
      [v2 bounds];
      CGFloat v5 = v4;
      CGFloat v7 = v6;
      CGFloat v9 = v8;
      CGFloat v11 = v10;

      v12.origin.x = v5;
      v12.origin.y = v7;
      v12.size.width = v9;
      v12.size.height = v11;
      *uint64_t v1 = floor(CGRectGetWidth(v12) / 3.0);
      *((unsigned char *)v1 + 8) = 0;
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_10037274C()
{
  sub_10007E2D8(0, &qword_100958E78);
  uint64_t result = _typeName(_:qualified:)();
  qword_100958DB0 = result;
  *(void *)algn_100958DB8 = v1;
  return result;
}

id sub_10037278C(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC10FitnessApp51ActivitySharingFriendDetailAwardsListViewController_cellHeightsCache;
  id v4 = objc_allocWithZone((Class)NSCache);
  CGFloat v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp51ActivitySharingFriendDetailAwardsListViewController_dataProviderObserver] = 0;
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp51ActivitySharingFriendDetailAwardsListViewController_achievementTransitionAnimator] = 0;
  double v6 = &v5[OBJC_IVAR____TtC10FitnessApp51ActivitySharingFriendDetailAwardsListViewController____lazy_storage___itemWidth];
  *(void *)double v6 = 0;
  v6[8] = 1;
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp51ActivitySharingFriendDetailAwardsListViewController_dataProvider] = a1;
  swift_retain();

  id v7 = [objc_allocWithZone((Class)UICollectionViewFlowLayout) init];
  [v7 setMinimumInteritemSpacing:0.0];
  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for ActivitySharingFriendDetailAwardsListViewController();
  id v8 = [super initWithCollectionViewLayout:v7];

  swift_release();
  return v8;
}

id sub_100372898()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for ActivitySharingFriendDetailAwardsListViewController();
  [super viewDidLoad];
  id v3 = [v0 navigationItem];
  [v3 setLargeTitleDisplayMode:1];

  id v4 = [v1 navigationItem];
  id v5 = [self mainBundle];
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v4 setTitle:v8];

  id result = [v1 collectionView];
  if (result)
  {
    objc_super v10 = result;
    sub_10007E2D8(0, &qword_100958E78);
    if (qword_10094AA78 != -1) {
      swift_once();
    }
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    NSString v12 = String._bridgeToObjectiveC()();
    [v10 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v12];

    type metadata accessor for ActivitySharingFriendDetailDataProvider();
    sub_1003746DC((unint64_t *)&unk_100958E80, (void (*)(uint64_t))type metadata accessor for ActivitySharingFriendDetailDataProvider);
    ObservableObject<>.objectWillChange.getter();
    uint64_t v13 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v13;
    *(void *)(v14 + 24) = ObjectType;
    type metadata accessor for ObservableObjectPublisher();
    uint64_t v15 = Publisher<>.sink(receiveValue:)();
    swift_release();
    swift_release();
    *(void *)&v1[OBJC_IVAR____TtC10FitnessApp51ActivitySharingFriendDetailAwardsListViewController_dataProviderObserver] = v15;
    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100372BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  NSString v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v26 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  CGFloat v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v10 = static os_log_type_t.default.getter();
  CGFloat v11 = (void *)HKLogActivity;
  os_log_type_t v12 = v10;
  if (os_log_type_enabled(HKLogActivity, v10))
  {
    os_log_t v23 = v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v24 = a2;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v25 = v7;
    aBlock[0] = v15;
    *(_DWORD *)uint64_t v14 = 136315138;
    uint64_t v16 = _typeName(_:qualified:)();
    uint64_t v27 = sub_10008F1F4(v16, v17, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_t v18 = v23;
    _os_log_impl((void *)&_mh_execute_header, v23, v12, "%s received object will change", v14, 0xCu);
    swift_arrayDestroy();
    uint64_t v7 = v25;
    swift_slowDealloc();
    a2 = v24;
    swift_slowDealloc();
  }
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  int v19 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = (uint64_t)sub_10035DB4C;
  aBlock[5] = a2;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100070394;
  aBlock[3] = (uint64_t)&unk_1008C37A0;
  long long v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_1003746DC((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v9, v7);
}

unint64_t sub_1003731D4(void *a1)
{
  if (qword_10094AA78 != -1) {
    swift_once();
  }
  NSString v3 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v5 = [a1 dequeueReusableCellWithReuseIdentifier:v3 forIndexPath:isa];

  self;
  uint64_t v6 = swift_dynamicCastObjCClass();
  if (!v6) {
    return (unint64_t)v5;
  }
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp51ActivitySharingFriendDetailAwardsListViewController_dataProvider);
  swift_getKeyPath();
  swift_getKeyPath();
  id v12 = v5;
  static Published.subscript.getter();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  unint64_t result = IndexPath.row.getter();
  if ((v16 & 0xC000000000000001) != 0)
  {
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v10 = *(id *)(v16 + 8 * result + 32);
LABEL_8:
    CGFloat v11 = v10;
    swift_bridgeObjectRelease();
    sub_100372690();
    [v7 setPreferredWidth:];
    [v7 configureWithAchievement:v11 badgeImageFactory:*(void *)(v8 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementBadgeImageFactory) locProvider:*(void *)(v8+ OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementLocalizationProvider) shouldShowProgressBar:0 formatForFriend:1];

    return (unint64_t)v5;
  }
  __break(1u);
  return result;
}

void sub_100373644(void *a1)
{
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp51ActivitySharingFriendDetailAwardsListViewController_dataProvider];
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  unint64_t v3 = IndexPath.row.getter();
  id v58 = v1;
  if ((v67 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v3 >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_16:
    __break(1u);
    return;
  }
  id v4 = *(id *)(v67 + 8 * v3 + 32);
LABEL_5:
  uint64_t v53 = v4;
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v59 = v65;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  id v5 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_healthStore);
  uint64_t v6 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_friendListSectionManager);
  uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_awardsDataProvider);
  uint64_t v8 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementBadgeImageFactory);
  CGFloat v9 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementResourceProvider);
  id v10 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_fiuiFormattingManager);
  CGFloat v11 = *(void **)(v2
                 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementLocalizationProvider);
  id v12 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_pauseRingsCoordinator);
  uint64_t v13 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_fitnessAppContext);
  uint64_t v48 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_workoutFormattingManager);
  long long v49 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_workoutDataProvider);
  id v54 = v53;
  id v51 = v5;
  id v50 = v6;
  id v14 = v7;
  id v15 = v8;
  id v16 = v9;
  id v17 = v10;
  id v18 = v11;
  id v19 = v12;
  id v20 = v13;
  id v21 = v48;
  id v22 = v49;
  LOBYTE(v6) = [v65 isMe] ^ 1;
  os_log_t v23 = (char *)objc_allocWithZone((Class)type metadata accessor for TrophyCaseAwardDetailViewController());
  id v24 = sub_100400608(v54, v51, v50, (uint64_t)v14, v15, v16, v17, v18, v19, v20, v21, v22, 0, 0, 1, 0, (char)v6, v23);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v26 = [a1 cellForItemAtIndexPath:isa];

  if (v26)
  {
    self;
    uint64_t v27 = swift_dynamicCastObjCClass();
    if (v27)
    {
      uint64_t v28 = (void *)v27;
      os_log_type_t v29 = (void *)swift_allocObject();
      void v29[2] = v28;
      long long v30 = (void *)swift_allocObject();
      v30[2] = v28;
      id v57 = v26;
      id v55 = v24;
      [v28 badgeRect];
      double v32 = v31;
      double v34 = v33;
      double v36 = v35;
      double v38 = v37;
      id v39 = [v28 contentView];
      id v52 = objc_allocWithZone((Class)AAUIAchievementDetailTransitionAnimator);
      id v64 = sub_100373EFC;
      id v65 = v29;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v61 = 1107296256;
      unint64_t v62 = sub_100070394;
      os_log_t v63 = &unk_1008C3700;
      long long v40 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      long long v41 = (char *)v58;
      swift_release();
      id v64 = sub_100373F10;
      id v65 = v30;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v61 = 1107296256;
      unint64_t v62 = sub_100070394;
      os_log_t v63 = &unk_1008C3728;
      uint64_t v42 = _Block_copy(&aBlock);
      swift_release();
      id v43 = [v52 initWithPresentingViewController:v41 detailViewController:v55 shouldPlayFlipInAnimation:1 initialBadgeFrame:v39 conversionView:v40 didStartAnimationBlock:v42 didFinishAnimationBlock:v32];

      _Block_release(v42);
      _Block_release(v40);
      id v26 = *(id *)&v41[OBJC_IVAR____TtC10FitnessApp51ActivitySharingFriendDetailAwardsListViewController_achievementTransitionAnimator];
      *(void *)&v41[OBJC_IVAR____TtC10FitnessApp51ActivitySharingFriendDetailAwardsListViewController_achievementTransitionAnimator] = v43;

      swift_release();
      swift_release();
    }
  }
  id v44 = [v58 navigationController];
  if (v44)
  {
    id v45 = v44;
    [v44 setDelegate:v58];
  }
  id v46 = [v58 navigationController];
  if (v46)
  {
    uint64_t v47 = v46;
    [v46 pushViewController:v24 animated:1];
  }
}

id sub_100373DE0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySharingFriendDetailAwardsListViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for ActivitySharingFriendDetailAwardsListViewController()
{
  return self;
}

uint64_t sub_100373EC4()
{
  return swift_deallocObject();
}

id sub_100373EFC()
{
  return [*(id *)(v0 + 16) setBadgeHidden:1];
}

id sub_100373F10()
{
  return [*(id *)(v0 + 16) setBadgeHidden:0];
}

void sub_100373F24()
{
  uint64_t v1 = OBJC_IVAR____TtC10FitnessApp51ActivitySharingFriendDetailAwardsListViewController_cellHeightsCache;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)NSCache) init];
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp51ActivitySharingFriendDetailAwardsListViewController_dataProviderObserver] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp51ActivitySharingFriendDetailAwardsListViewController_achievementTransitionAnimator] = 0;
  objc_super v2 = &v0[OBJC_IVAR____TtC10FitnessApp51ActivitySharingFriendDetailAwardsListViewController____lazy_storage___itemWidth];
  *(void *)objc_super v2 = 0;
  v2[8] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100373FDC(uint64_t a1)
{
  uint64_t v4 = v2;
  uint64_t v6 = IndexPath.row.getter();
  uint64_t v7 = IndexPath.row.getter();
  Swift::Int v8 = v6 - v7 % 3;
  if (__OFSUB__(v6, v7 % 3)) {
    goto LABEL_53;
  }
  uint64_t v1 = (char *)(v8 + 2);
  if (__OFADD__(v8, 2)) {
    goto LABEL_54;
  }
  uint64_t v52 = v4;
  CGFloat v9 = *(char **)(v4 + OBJC_IVAR____TtC10FitnessApp51ActivitySharingFriendDetailAwardsListViewController_dataProvider);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v53 = v9;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v3 = (uint64_t)v57;
  a1 = v58;

  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  if (v58 >> 62) {
    goto LABEL_55;
  }
  uint64_t v10 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    id v11 = v53;
    if (__OFSUB__(v10, 1))
    {
      __break(1u);
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    if (v10 - 1 >= (uint64_t)v1) {
      uint64_t v3 = (uint64_t)v1;
    }
    else {
      uint64_t v3 = v10 - 1;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v1 = v55;
    id v11 = v56;
    id v12 = v57;
    a1 = v58;

    swift_bridgeObjectRelease();
    swift_release();

    swift_release();
    if (v3 < v8) {
      goto LABEL_57;
    }
    id v11 = (id)((unint64_t)a1 >> 62);
    if (!((unint64_t)a1 >> 62))
    {
      if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) < v8) {
        goto LABEL_59;
      }
      goto LABEL_12;
    }
LABEL_58:
    swift_bridgeObjectRetain();
    uint64_t v50 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v50 < v8)
    {
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
LABEL_12:
    if (v8 < 0) {
      goto LABEL_60;
    }
    if (v11)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v13 <= v3) {
      goto LABEL_61;
    }
    id v14 = (char *)(v3 + 1);
    if ((a1 & 0xC000000000000001) != 0)
    {
      if ((unint64_t)v14 < v8) {
        goto LABEL_63;
      }
      if ((char *)v8 != v14)
      {
        if (v8 >= (unint64_t)v14) {
          goto LABEL_65;
        }
        sub_10007E2D8(0, (unint64_t *)&qword_1009556B0);
        Swift::Int v15 = v8;
        do
        {
          uint64_t v1 = (char *)(v15 + 1);
          _ArrayBuffer._typeCheckSlowPath(_:)(v15);
          Swift::Int v15 = (Swift::Int)v1;
        }
        while (v14 != v1);
      }
    }
    if (v11)
    {
      if (a1 < 0) {
        uint64_t v1 = (char *)a1;
      }
      else {
        uint64_t v1 = (char *)(a1 & 0xFFFFFFFFFFFFFF8);
      }
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.subscript.getter();
      uint64_t v51 = v16;
      Swift::Int v8 = v17;
      unint64_t v19 = v18;
      swift_bridgeObjectRelease_n();
      id v14 = (char *)(v19 >> 1);
    }
    else
    {
      uint64_t v51 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
    }
    uint64_t v3 = (uint64_t)&v14[-v8];
    if (__OFSUB__(v14, v8)) {
      goto LABEL_62;
    }
    id v20 = _swiftEmptyArrayStorage;
    if (!v3) {
      break;
    }
    id v54 = _swiftEmptyArrayStorage;
    a1 = (uint64_t)&v54;
    sub_1000ABAB8(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0) {
      goto LABEL_64;
    }
    uint64_t v21 = 0;
    id v20 = v54;
    while (1)
    {
      uint64_t v22 = v21 + 1;
      if (__OFADD__(v21, 1)) {
        break;
      }
      if (v8 + v21 >= (uint64_t)v14 || v21 >= v3) {
        goto LABEL_52;
      }
      os_log_t v23 = v20;
      a1 = (uint64_t)*(id *)(v51 + 8 * v8 + 8 * v21);
      id v24 = [(id)a1 template];
      id v25 = [v24 uniqueName];

      if (!v25) {
        goto LABEL_67;
      }
      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v1 = v27;

      id v20 = v23;
      id v54 = v23;
      unint64_t v28 = v23[2];
      unint64_t v29 = v20[3];
      if (v28 >= v29 >> 1)
      {
        a1 = (uint64_t)&v54;
        sub_1000ABAB8(v29 > 1, v28 + 1, 1);
        id v20 = v54;
      }
      v20[2] = v28 + 1;
      long long v30 = &v20[2 * v28];
      v30[4] = v26;
      v30[5] = v1;
      ++v21;
      if (v22 == v3) {
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
LABEL_40:
  id v54 = v20;
  sub_1000AFA94((uint64_t *)&unk_10094B1F0);
  sub_1000A132C((unint64_t *)&qword_100958E70, (uint64_t *)&unk_10094B1F0);
  BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  NSString v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v32 = OBJC_IVAR____TtC10FitnessApp51ActivitySharingFriendDetailAwardsListViewController_cellHeightsCache;
  uint64_t v33 = v52;
  id v34 = [*(id *)(v52+ OBJC_IVAR____TtC10FitnessApp51ActivitySharingFriendDetailAwardsListViewController_cellHeightsCache) objectForKey:v31];
  if (v34)
  {
    double v35 = v34;
    sub_100372690();
    [v35 doubleValue];
    swift_unknownObjectRelease();

    NSString v31 = v35;
LABEL_50:

    return;
  }
  double v36 = 0.0;
  if (v14 == (char *)v8)
  {
LABEL_49:
    id v46 = *(void **)(v33 + v32);
    id v47 = objc_allocWithZone((Class)NSNumber);
    id v48 = v46;
    id v49 = [v47 initWithDouble:v36];
    [v48 setObject:v49 forKey:v31];

    sub_100372690();
    swift_unknownObjectRelease();
    goto LABEL_50;
  }
  uint64_t v37 = self;
  double v38 = &v14[-v8];
  if ((uint64_t)v14 > v8)
  {
    id v39 = (void *)v37;
    uint64_t v40 = OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementLocalizationProvider;
    swift_unknownObjectRetain();
    uint64_t v33 = v52;
    long long v41 = (void **)(v51 + 8 * v8);
    do
    {
      uint64_t v42 = *v41++;
      id v43 = v42;
      sub_100372690();
      [v39 cellHeightForAchievement:v43 preferredWidth:0 appliesLargeCellInsets:v53[v40] locProvider:0 withProgressBar:1 formatForFriend:];
      double v45 = v44;

      if (v45 > v36) {
        double v36 = v45;
      }
      --v38;
    }
    while (v38);
    swift_unknownObjectRelease();
    goto LABEL_49;
  }
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
}

uint64_t sub_100374664()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10037469C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003746D4(uint64_t a1)
{
  return sub_100372BB0(a1, *(void *)(v1 + 16));
}

uint64_t sub_1003746DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100374738()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    if (*(double *)(v1 + 32) <= *(double *)(v1 + 32 + 16 * v2 - 8)) {
      return result;
    }
    __break(1u);
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1003747CC(double a1, double a2)
{
  uint64_t v60 = type metadata accessor for ZoneViewType();
  uint64_t v5 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 > a2)
  {
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
    return;
  }
  Swift::Int v8 = v7;
  sub_100374738();
  if (v10 <= a1 || v9 >= a2 || a1 == a2 || v9 == v10)
  {
    uint64_t v59 = v2;
    uint64_t v14 = enum case for ZoneViewType.heartRateZone(_:);
    Swift::Int v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
    uint64_t v16 = v8;
    Swift::Int v17 = v8;
    uint64_t v18 = v60;
    v15(v17, enum case for ZoneViewType.heartRateZone(_:), v60);
    unint64_t v58 = (void (**)(char *, void, uint64_t))zoneColor(for:index:count:)();
    unint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
    v19(v16, v18);
    v15(v16, v14, v18);
    zoneColor(for:index:count:)();
    v19(v16, v18);
    sub_100374738();
    swift_retain();
    sub_1000AFA94((uint64_t *)&unk_100959030);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1007509E0;
    *(void *)(v20 + 32) = Color.opacity(_:)();
    uint64_t v61 = v20;
    specialized Array._endMutation()();
    Gradient.init(colors:)();
    swift_release();
    swift_release();
    swift_release();
    return;
  }
  uint64_t v21 = *(void *)(v2 + 16);
  uint64_t v22 = *(void *)(v21 + 16);
  if (!v22) {
    goto LABEL_65;
  }
  unint64_t v23 = 0;
  uint64_t v24 = v22 - 1;
  LODWORD(v59) = enum case for ZoneViewType.heartRateZone(_:);
  id v57 = (void (**)(char *, uint64_t))(v5 + 8);
  unint64_t v58 = (void (**)(char *, void, uint64_t))(v5 + 104);
  id v25 = (double *)(v21 + 40);
  uint64_t v26 = _swiftEmptyArrayStorage;
  while (1)
  {
    double v27 = *(v25 - 1);
    double v28 = *v25;
    if (v27 > a1 || v28 <= a1)
    {
      if (v27 <= a2 && v28 > a2) {
        goto LABEL_47;
      }
      if (v27 != v28 && v28 > a1 && v27 < a2)
      {
        uint64_t v33 = v60;
        (*v58)(v8, v59, v60);
        uint64_t v34 = zoneColor(for:index:count:)();
        (*v57)(v8, v33);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v26 = sub_1001E7DD4(0, v26[2] + 1, 1, v26);
        }
        unint64_t v36 = v26[2];
        unint64_t v35 = v26[3];
        if (v36 >= v35 >> 1) {
          uint64_t v26 = sub_1001E7DD4((void *)(v35 > 1), v36 + 1, 1, v26);
        }
        v26[2] = v36 + 1;
        uint64_t v37 = (double *)&v26[2 * v36];
        v37[4] = (v27 + v28) * 0.5;
        goto LABEL_52;
      }
    }
    else
    {
      sub_100374D60(v23, a1);
      uint64_t v39 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v26 = sub_1001E7DD4(0, v26[2] + 1, 1, v26);
      }
      unint64_t v41 = v26[2];
      unint64_t v40 = v26[3];
      if (v41 >= v40 >> 1) {
        uint64_t v26 = sub_1001E7DD4((void *)(v40 > 1), v41 + 1, 1, v26);
      }
      v26[2] = v41 + 1;
      uint64_t v42 = (double *)&v26[2 * v41];
      uint64_t v42[4] = a1;
      *((void *)v42 + 5) = v39;
      if (v27 <= a2 && v28 > a2)
      {
LABEL_47:
        sub_100374D60(v23, a2);
        uint64_t v34 = v44;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v26 = sub_1001E7DD4(0, v26[2] + 1, 1, v26);
        }
        unint64_t v46 = v26[2];
        unint64_t v45 = v26[3];
        if (v46 >= v45 >> 1) {
          uint64_t v26 = sub_1001E7DD4((void *)(v45 > 1), v46 + 1, 1, v26);
        }
        v26[2] = v46 + 1;
        uint64_t v37 = (double *)&v26[2 * v46];
        v37[4] = a2;
LABEL_52:
        *((void *)v37 + 5) = v34;
      }
    }
    if (v24 == v23) {
      break;
    }
    ++v23;
    v25 += 2;
    if (v23 >= *(void *)(v21 + 16))
    {
      __break(1u);
      goto LABEL_64;
    }
  }
  uint64_t v47 = v26[2];
  if (v47)
  {
    id v48 = v26 + 5;
    id v49 = _swiftEmptyArrayStorage;
    do
    {
      swift_retain();
      Color.opacity(_:)();
      uint64_t v50 = Gradient.Stop.init(color:location:)();
      uint64_t v52 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v49 = sub_1001E7CC4(0, v49[2] + 1, 1, v49);
      }
      unint64_t v54 = v49[2];
      unint64_t v53 = v49[3];
      if (v54 >= v53 >> 1) {
        id v49 = sub_1001E7CC4((void *)(v53 > 1), v54 + 1, 1, v49);
      }
      v49[2] = v54 + 1;
      id v55 = &v49[2 * v54];
      v55[4] = v50;
      v55[5] = v52;
      swift_release();
      v48 += 2;
      --v47;
    }
    while (v47);
  }
  swift_bridgeObjectRelease();
  Gradient.init(stops:)();
}

void sub_100374D60(unint64_t a1, double a2)
{
  uint64_t v5 = type metadata accessor for ZoneViewType();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::Int v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v9 = *(void *)(v2 + 16);
  unint64_t v10 = *(void *)(v9 + 16);
  if (v10 <= a1)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v11 = v9 + 32;
  id v12 = (double *)(v9 + 32 + 16 * a1);
  double v13 = *v12 + v12[1];
  double v14 = v13 * 0.5;
  if (v10 - 1 == a1) {
    double v15 = *v12;
  }
  else {
    double v15 = v13 * 0.5;
  }
  uint64_t v16 = (void (**)(char *, uint64_t))(v6 + 8);
  if (v15 >= a2)
  {
    uint64_t v20 = enum case for ZoneViewType.heartRateZone(_:);
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
    v21(v8, enum case for ZoneViewType.heartRateZone(_:), v5);
    if (!a1)
    {
      zoneColor(for:index:count:)();
      (*v16)(v8, v5);
      return;
    }
    uint64_t v26 = zoneColor(for:index:count:)();
    id v25 = *v16;
    v25(v8, v5);
    if (a1 - 1 < *(void *)(v9 + 16))
    {
      double v22 = (*(double *)(v11 + 16 * (a1 - 1)) + *(double *)(v11 + 16 * (a1 - 1) + 8)) * 0.5;
      v21(v8, v20, v5);
      zoneColor(for:index:count:)();
      v25(v8, v5);
      sub_10061ECAC((a2 - v22) / (v15 - v22));
      swift_release();
      swift_release();
      return;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    return;
  }
  Swift::Int v17 = *(void (**)(void))(v6 + 104);
  LODWORD(v25) = enum case for ZoneViewType.heartRateZone(_:);
  uint64_t v24 = (void (*)(char *, void, uint64_t))v17;
  v17(v8);
  zoneColor(for:index:count:)();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v26 = v6 + 8;
  v18(v8, v5);
  if (v10 - 1 != a1)
  {
    if (a1 + 1 < *(void *)(v9 + 16))
    {
      double v19 = (*(double *)(v11 + 16 * (a1 + 1)) + *(double *)(v11 + 16 * (a1 + 1) + 8)) * 0.5;
      v24(v8, v25, v5);
      zoneColor(for:index:count:)();
      v18(v8, v5);
      sub_10061ECAC((a2 - v14) / (v19 - v14));
      swift_release();
      swift_release();
      return;
    }
    goto LABEL_18;
  }
}

BOOL sub_1003750AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutChartDataElement(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v46 - v8;
  __chkstk_darwin(v10);
  __chkstk_darwin(v11);
  __chkstk_darwin(v12);
  double v14 = (char *)&v46 - v13;
  __chkstk_darwin(v15);
  Swift::Int v17 = (char *)&v46 - v16;
  __chkstk_darwin(v18);
  __chkstk_darwin(v19);
  uint64_t v26 = *(void *)(a1 + 16);
  if (v26 == *(void *)(a2 + 16))
  {
    unint64_t v54 = (char *)&v46 - v23;
    uint64_t v55 = v21;
    uint64_t v52 = v20;
    uint64_t v53 = v24;
    if (!v26 || a1 == a2) {
      return 1;
    }
    uint64_t v49 = a1;
    uint64_t v50 = v25;
    unint64_t v27 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v46 = *(void *)(v22 + 72);
    uint64_t v47 = v17;
    uint64_t v28 = v26 - 1;
    uint64_t v51 = v6;
    uint64_t v48 = a2;
    uint64_t v29 = (uint64_t)v54;
    uint64_t v30 = v55;
    while (1)
    {
      sub_1001CBD5C(a1 + v27, v29, type metadata accessor for WorkoutChartDataElement);
      sub_1001CBD5C(a2 + v27, v30, type metadata accessor for WorkoutChartDataElement);
      char v31 = static Date.== infix(_:_:)();
      sub_1001CBD5C(v29, (uint64_t)v17, type metadata accessor for WorkoutChartDataElement);
      sub_1001CBD5C(v30, (uint64_t)v14, type metadata accessor for WorkoutChartDataElement);
      if ((v31 & 1) == 0) {
        break;
      }
      uint64_t v32 = v52;
      double v33 = *(double *)&v17[v52[5]];
      sub_1001CBDC4((uint64_t)v17, type metadata accessor for WorkoutChartDataElement);
      double v34 = *(double *)&v14[v32[5]];
      unint64_t v35 = v14;
      sub_1001CBDC4((uint64_t)v14, type metadata accessor for WorkoutChartDataElement);
      uint64_t v36 = v50;
      sub_1001CBD5C(v29, v50, type metadata accessor for WorkoutChartDataElement);
      uint64_t v37 = v53;
      sub_1001CBD5C(v30, v53, type metadata accessor for WorkoutChartDataElement);
      if (v33 != v34) {
        goto LABEL_16;
      }
      double v38 = *(double *)(v36 + v32[6]);
      sub_1001CBDC4(v36, type metadata accessor for WorkoutChartDataElement);
      double v39 = *(double *)(v37 + v32[6]);
      sub_1001CBDC4(v37, type metadata accessor for WorkoutChartDataElement);
      sub_1001CBD5C(v29, (uint64_t)v9, type metadata accessor for WorkoutChartDataElement);
      uint64_t v40 = (uint64_t)v51;
      sub_1001CBD5C(v30, (uint64_t)v51, type metadata accessor for WorkoutChartDataElement);
      if (v38 != v39) {
        goto LABEL_17;
      }
      double v41 = *(double *)&v9[v32[7]];
      sub_1001CBDC4((uint64_t)v9, type metadata accessor for WorkoutChartDataElement);
      double v42 = *(double *)(v40 + v32[7]);
      sub_1001CBDC4(v40, type metadata accessor for WorkoutChartDataElement);
      sub_1001CBDC4(v30, type metadata accessor for WorkoutChartDataElement);
      sub_1001CBDC4(v29, type metadata accessor for WorkoutChartDataElement);
      BOOL v44 = v28-- != 0;
      BOOL result = v41 == v42;
      if (v41 == v42)
      {
        v27 += v46;
        a2 = v48;
        a1 = v49;
        double v14 = v35;
        Swift::Int v17 = v47;
        if (v44) {
          continue;
        }
      }
      return result;
    }
    sub_1001CBDC4((uint64_t)v14, type metadata accessor for WorkoutChartDataElement);
    sub_1001CBDC4((uint64_t)v17, type metadata accessor for WorkoutChartDataElement);
    uint64_t v36 = v50;
    sub_1001CBD5C(v29, v50, type metadata accessor for WorkoutChartDataElement);
    uint64_t v37 = v53;
    sub_1001CBD5C(v30, v53, type metadata accessor for WorkoutChartDataElement);
LABEL_16:
    sub_1001CBDC4(v37, type metadata accessor for WorkoutChartDataElement);
    sub_1001CBDC4(v36, type metadata accessor for WorkoutChartDataElement);
    sub_1001CBD5C(v29, (uint64_t)v9, type metadata accessor for WorkoutChartDataElement);
    uint64_t v40 = (uint64_t)v51;
    sub_1001CBD5C(v30, (uint64_t)v51, type metadata accessor for WorkoutChartDataElement);
LABEL_17:
    sub_1001CBDC4(v40, type metadata accessor for WorkoutChartDataElement);
    sub_1001CBDC4((uint64_t)v9, type metadata accessor for WorkoutChartDataElement);
    sub_1001CBDC4(v30, type metadata accessor for WorkoutChartDataElement);
    sub_1001CBDC4(v29, type metadata accessor for WorkoutChartDataElement);
  }
  return 0;
}

int32x2_t sub_10037555C(uint64_t a1, uint64_t a2, int32x2_t result)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3 == *(void *)(a2 + 16) && v3 && a1 != a2)
  {
    BOOL result = *(int32x2_t *)(a1 + 40);
    if (*(double *)(a1 + 32) == *(double *)(a2 + 32) && *(double *)&result == *(double *)(a2 + 40))
    {
      uint64_t v5 = (float64x2_t *)(a1 + 48);
      uint64_t v6 = (float64x2_t *)(a2 + 48);
      uint64_t v7 = v3 - 1;
      do
      {
        if (!v7) {
          break;
        }
        float64x2_t v8 = *v5++;
        float64x2_t v9 = v8;
        float64x2_t v10 = *v6++;
        BOOL result = vmovn_s64(vceqq_f64(v9, v10));
        --v7;
      }
      while ((result.i32[0] & result.i32[1] & 1) != 0);
    }
  }
  return result;
}

uint64_t sub_1003755DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (double *)(a2 + 48);
    uint64_t v4 = (double *)(a1 + 48);
    do
    {
      if (*(unsigned char *)v4)
      {
        if (!*(unsigned char *)v3) {
          return 0;
        }
      }
      else
      {
        if (*(unsigned char *)v3) {
          return 0;
        }
        if (*(v4 - 2) != *(v3 - 2) || *(v4 - 1) != *(v3 - 1)) {
          return 0;
        }
      }
      v3 += 3;
      v4 += 3;
      --v2;
    }
    while (v2);
  }
  return 1;
}

BOOL sub_10037564C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32)) {
    return 0;
  }
  uint64_t v3 = (double *)(a1 + 40);
  uint64_t v4 = (double *)(a2 + 40);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    double v7 = *v3++;
    double v8 = v7;
    double v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_1003756B8(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    double v9 = a2 + 7;
    for (unint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_100375780(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CatalogLockup();
  uint64_t v5 = __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  double v9 = (char *)&v28 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10 == *(void *)(a2 + 16))
  {
    if (!v10 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
      uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      uint64_t v12 = v6 + 16;
      uint64_t v31 = v7;
      uint64_t v32 = v13;
      uint64_t v14 = (v11 + 32) & ~v11;
      uint64_t v15 = *(void *)(v12 + 56);
      uint64_t v33 = v12;
      uint64_t v29 = v15;
      uint64_t v30 = (void (**)(uint64_t, uint64_t))(v12 - 8);
      uint64_t v16 = v10 - 1;
      uint64_t v17 = v7;
      do
      {
        uint64_t v18 = a1;
        uint64_t v19 = v9;
        uint64_t v20 = v9;
        uint64_t v21 = v32;
        v32((uint64_t)v19, a1 + v14, v4);
        uint64_t v22 = a2;
        v21(v17, a2 + v14, v4);
        double v9 = v20;
        sub_1003761B4(&qword_100959028, 255, (void (*)(uint64_t))&type metadata accessor for CatalogLockup);
        char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v24 = *v30;
        (*v30)(v17, v4);
        v24((uint64_t)v20, v4);
        BOOL v26 = v16-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v14 += v29;
        a2 = v22;
        a1 = v18;
      }
      while (v26);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

id sub_1003759A4(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v5 == v29) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  if (v5 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v5) {
    goto LABEL_38;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0) {
    uint64_t v6 = v3;
  }
  if (!v4) {
    uint64_t v6 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v9;
  }
  if (v6 == v8)
  {
LABEL_38:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v30 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v3 + 32); ; id result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
  {
    uint64_t v11 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_22:
    uint64_t v13 = v12;
    sub_10007E2D8(0, (unint64_t *)&qword_1009556B0);
    char v14 = static NSObject.== infix(_:_:)();

    if ((v14 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v15 = v5 - 1;
    if (v5 == 1) {
      return (id)(v5 & 1);
    }
    if (((a2 | v3) & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      unint64_t v17 = v5 - 2;
      while (v15 != v16)
      {
        unint64_t v5 = v16 + 1;
        if (v30) {
          id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v18 = *(id *)(v3 + 40 + 8 * v16);
        }
        uint64_t v19 = v18;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v16);
        }
        uint64_t v21 = v20;
        unint64_t v5 = static NSObject.== infix(_:_:)();

        if ((v5 & 1) != 0 && v17 != v16++) {
          continue;
        }
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v7 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      unint64_t v24 = v23 - 1;
      uint64_t v25 = (void **)(v3 + 40);
      uint64_t v7 = a2 + 40;
      while (v15)
      {
        if (!v24) {
          goto LABEL_53;
        }
        unint64_t v27 = *v25++;
        BOOL v26 = v27;
        uint64_t v28 = *(void **)v7;
        v7 += 8;
        a2 = v26;
        uint64_t v3 = v28;
        unint64_t v5 = static NSObject.== infix(_:_:)();

        if (v5)
        {
          --v24;
          if (--v15) {
            continue;
          }
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v7 + 16))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

id sub_100375C90(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v5 == v29) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  if (v5 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v5) {
    goto LABEL_38;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0) {
    uint64_t v6 = v3;
  }
  if (!v4) {
    uint64_t v6 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v9;
  }
  if (v6 == v8)
  {
LABEL_38:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v30 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v3 + 32); ; id result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
  {
    uint64_t v11 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_22:
    uint64_t v13 = v12;
    type metadata accessor for MindfulnessSessionViewModel();
    char v14 = static NSObject.== infix(_:_:)();

    if ((v14 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v15 = v5 - 1;
    if (v5 == 1) {
      return (id)(v5 & 1);
    }
    if (((a2 | v3) & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      unint64_t v17 = v5 - 2;
      while (v15 != v16)
      {
        unint64_t v5 = v16 + 1;
        if (v30) {
          id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v18 = *(id *)(v3 + 40 + 8 * v16);
        }
        uint64_t v19 = v18;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v16);
        }
        uint64_t v21 = v20;
        unint64_t v5 = static NSObject.== infix(_:_:)();

        if ((v5 & 1) != 0 && v17 != v16++) {
          continue;
        }
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v7 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      unint64_t v24 = v23 - 1;
      uint64_t v25 = (void **)(v3 + 40);
      uint64_t v7 = a2 + 40;
      while (v15)
      {
        if (!v24) {
          goto LABEL_53;
        }
        unint64_t v27 = *v25++;
        BOOL v26 = v27;
        uint64_t v28 = *(void **)v7;
        v7 += 8;
        a2 = v26;
        uint64_t v3 = v28;
        unint64_t v5 = static NSObject.== infix(_:_:)();

        if (v5)
        {
          --v24;
          if (--v15) {
            continue;
          }
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v7 + 16))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_100375F6C()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ChartZones()
{
  return self;
}

uint64_t sub_100375FC8(uint64_t a1, uint64_t a2)
{
  return sub_1003761B4(&qword_100959020, a2, (void (*)(uint64_t))type metadata accessor for ChartZones);
}

int32x2_t sub_100376010(uint64_t a1, uint64_t a2, int32x2_t a3)
{
  return sub_10037555C(*(void *)(*(void *)a1 + 16), *(void *)(*(void *)a2 + 16), a3);
}

Swift::Int sub_100376024()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  sub_1001CBAA0((uint64_t)v3, *(void *)(v1 + 16));
  return Hasher._finalize()();
}

void sub_10037606C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  Swift::UInt v2 = *(void *)(v1 + 16);
  Hasher._combine(_:)(v2);
  if (v2)
  {
    uint64_t v3 = (Swift::UInt64 *)(v1 + 40);
    do
    {
      Swift::UInt64 v4 = *v3;
      if ((*(v3 - 1) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v5 = *(v3 - 1);
      }
      else {
        Swift::UInt64 v5 = 0;
      }
      Hasher._combine(_:)(v5);
      if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v6 = v4;
      }
      else {
        Swift::UInt64 v6 = 0;
      }
      Hasher._combine(_:)(v6);
      v3 += 2;
      --v2;
    }
    while (v2);
  }
}

Swift::Int sub_1003760DC()
{
  Hasher.init(_seed:)();
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  Swift::UInt v2 = *(void *)(v1 + 16);
  Hasher._combine(_:)(v2);
  if (v2)
  {
    uint64_t v3 = (Swift::UInt64 *)(v1 + 40);
    do
    {
      Swift::UInt64 v4 = *v3;
      if ((*(v3 - 1) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v5 = *(v3 - 1);
      }
      else {
        Swift::UInt64 v5 = 0;
      }
      Hasher._combine(_:)(v5);
      if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v6 = v4;
      }
      else {
        Swift::UInt64 v6 = 0;
      }
      Hasher._combine(_:)(v6);
      v3 += 2;
      --v2;
    }
    while (v2);
  }
  return Hasher._finalize()();
}

void sub_100376168(double a1, double a2)
{
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  Hasher._combine(_:)(v3);
  if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = *(void *)&a2;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  Hasher._combine(_:)(v4);
}

uint64_t sub_1003761B4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_100376274(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_100376354(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  Swift::UInt64 v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1003763B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100376448(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1003764DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10037656C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1003765FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100376610);
}

uint64_t sub_100376610(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10037667C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100376690);
}

uint64_t sub_100376690(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WorkoutChartDataElement(uint64_t a1)
{
  return sub_10009CFF8(a1, qword_1009590F8);
}

uint64_t sub_100376720()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1003767BC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    a1 = (void *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = a3[7];
    uint64_t v13 = a3[8];
    char v14 = *(void **)((char *)a2 + v12);
    *(void *)((char *)a1 + v12) = v14;
    *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
    uint64_t v15 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    uint64_t v31 = (char *)a1 + v15;
    uint64_t v16 = (char *)a2 + v15;
    uint64_t v17 = type metadata accessor for Date();
    id v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    id v19 = v14;
    swift_bridgeObjectRetain();
    v18(v31, v16, v17);
    v18((char *)a1 + a3[11], (char *)a2 + a3[11], v17);
    uint64_t v20 = a3[13];
    *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
    *(void *)((char *)a1 + v20) = *(void *)((char *)a2 + v20);
    uint64_t v21 = a3[15];
    *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
    *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
    uint64_t v22 = a3[17];
    *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
    *(_OWORD *)((char *)a1 + v22) = *(_OWORD *)((char *)a2 + v22);
    uint64_t v23 = a3[19];
    *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
    unint64_t v24 = *(void **)((char *)a2 + v23);
    *(void *)((char *)a1 + v23) = v24;
    uint64_t v25 = a3[20];
    BOOL v26 = *(void **)((char *)a2 + v25);
    *(void *)((char *)a1 + v25) = v26;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    id v27 = v24;
    id v28 = v26;
  }
  return a1;
}

void sub_1003769CC(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[10];
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(a1 + a2[11], v6);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  uint64_t v8 = *(void **)(a1 + a2[20]);
}

uint64_t sub_100376B04(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = *(void **)(a2 + v11);
  *(void *)(a1 + v11) = v13;
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v14 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v29 = a1 + v14;
  uint64_t v15 = a2 + v14;
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  id v18 = v13;
  swift_bridgeObjectRetain();
  v17(v29, v15, v16);
  v17(a1 + a3[11], a2 + a3[11], v16);
  uint64_t v19 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  uint64_t v20 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  uint64_t v21 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  uint64_t v22 = a3[19];
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  uint64_t v23 = *(void **)(a2 + v22);
  *(void *)(a1 + v22) = v23;
  uint64_t v24 = a3[20];
  uint64_t v25 = *(void **)(a2 + v24);
  *(void *)(a1 + v24) = v25;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  id v26 = v23;
  id v27 = v25;
  return a1;
}

uint64_t sub_100376CC4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = *(void **)(a2 + v10);
  uint64_t v12 = *(void **)(a1 + v10);
  *(void *)(a1 + v10) = v11;
  id v13 = v11;

  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v14 = a3[10];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = type metadata accessor for Date();
  id v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24);
  v18(v15, v16, v17);
  v18(a1 + a3[11], a2 + a3[11], v17);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  uint64_t v19 = a3[17];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  uint64_t v22 = a3[19];
  uint64_t v23 = *(void **)(a2 + v22);
  uint64_t v24 = *(void **)(a1 + v22);
  *(void *)(a1 + v22) = v23;
  id v25 = v23;

  uint64_t v26 = a3[20];
  id v27 = *(void **)(a2 + v26);
  id v28 = *(void **)(a1 + v26);
  *(void *)(a1 + v26) = v27;
  id v29 = v27;

  return a1;
}

uint64_t sub_100376EE8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  id v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  v13(a1 + a3[11], a2 + a3[11], v12);
  uint64_t v14 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  uint64_t v17 = a3[19];
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  return a1;
}

uint64_t sub_10037705C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  id v13 = *(void **)(a1 + v12);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);

  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = type metadata accessor for Date();
  id v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 40);
  v18(v15, v16, v17);
  v18(a1 + a3[11], a2 + a3[11], v17);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_release();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_release();
  uint64_t v19 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  uint64_t v20 = a3[18];
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  uint64_t v21 = a3[19];
  uint64_t v22 = *(void **)(a1 + v21);
  *(void *)(a1 + v21) = *(void *)(a2 + v21);

  uint64_t v23 = a3[20];
  uint64_t v24 = *(void **)(a1 + v23);
  *(void *)(a1 + v23) = *(void *)(a2 + v23);

  return a1;
}

uint64_t sub_100377224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100377238);
}

uint64_t sub_100377238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 40);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_100377368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10037737C);
}

uint64_t sub_10037737C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 40);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for WorkoutChartViewModel(uint64_t a1)
{
  return sub_10009CFF8(a1, qword_100959190);
}

uint64_t sub_1003774CC()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100377610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, void *a12)
{
  uint64_t v93 = a8;
  uint64_t v94 = a7;
  LODWORD(v96) = a6;
  char v92 = a4;
  uint64_t v89 = a3;
  uint64_t v84 = a2;
  uint64_t v95 = a1;
  uint64_t v14 = sub_1000AFA94(&qword_100959218);
  __chkstk_darwin(v14 - 8);
  uint64_t v85 = (uint64_t)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for WorkoutChartDataElement(0);
  uint64_t v90 = *(void *)(v97 - 8);
  uint64_t v16 = __chkstk_darwin(v97);
  id v18 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  long long v83 = (char *)&v81 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v81 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v81 - v25;
  __chkstk_darwin(v24);
  uint64_t v82 = (uint64_t)&v81 - v27;
  uint64_t v28 = sub_1000AFA94((uint64_t *)&unk_10095BF60);
  __chkstk_darwin(v28 - 8);
  unint64_t v30 = (char *)&v81 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v87 = (void *)type metadata accessor for Calendar();
  uint64_t v31 = *(v87 - 1);
  __chkstk_darwin(v87);
  uint64_t v33 = (char *)&v81 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  double v34 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  uint64_t v88 = v34[13];
  *(void *)(a9 + v88) = 0;
  uint64_t v86 = v34[19];
  id v35 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  static Calendar.current.getter();
  static Locale.current.getter();
  uint64_t v36 = type metadata accessor for Locale();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v30, 0, 1, v36);
  Calendar.locale.setter();
  Class isa = Calendar._bridgeToObjectiveC()().super.isa;
  [v35 setCalendar:isa];

  [v35 setUnitsStyle:0];
  [v35 setZeroFormattingBehavior:0];
  [v35 setAllowedUnits:224];
  (*(void (**)(char *, void *))(v31 + 8))(v33, v87);
  *(void *)(a9 + v86) = v35;
  uint64_t v38 = v34[20];
  id v39 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  uint64_t v40 = a9;
  LOBYTE(a9) = v95;
  [v39 setZeroFormattingBehavior:1];
  [v39 setUnitsStyle:4];
  [v39 setAllowedUnits:224];
  uint64_t v41 = v89;
  *(void *)(v40 + v38) = v39;
  *(unsigned char *)(v40 + v34[5]) = a9;
  if (v41) {
    uint64_t v42 = v84;
  }
  else {
    uint64_t v42 = sub_100651900();
  }
  id v43 = (uint64_t *)(v40 + v34[6]);
  *id v43 = v42;
  v43[1] = v41;
  BOOL v44 = v92;
  *(void *)(v40 + v34[7]) = v92;
  char v98 = a5;
  long long v87 = v44;
  swift_bridgeObjectRetain();
  sub_100379134(&v98);
  char v45 = v96 & 1;
  char v92 = a12;
  *(void *)(v40 + v34[8]) = v98;
  uint64_t v89 = a10;
  *(unsigned char *)(v40 + v34[9]) = v45;
  uint64_t v46 = v40 + v34[10];
  uint64_t v47 = type metadata accessor for Date();
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v96 = v40;
  uint64_t v84 = v48;
  uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16);
  v49(v46, v94, v47);
  uint64_t v50 = v96 + v34[11];
  uint64_t v86 = v47;
  v49(v50, v93, v47);
  uint64_t v51 = v96;
  uint64_t v52 = v88;
  *(void *)(v96 + v34[12]) = v89;
  swift_retain();
  swift_release();
  uint64_t v89 = a11;
  *(void *)(v51 + v52) = a11;
  *(void *)(v51 + v34[14]) = v92;
  uint64_t v53 = a5[2];
  unint64_t v91 = v34;
  if (v53)
  {
    uint64_t v54 = v90;
    uint64_t v55 = (uint64_t)a5 + ((*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80));
    sub_10037B17C(v55, (uint64_t)v26, type metadata accessor for WorkoutChartDataElement);
    swift_bridgeObjectRetain();
    swift_retain();
    char v56 = v95;
    uint64_t v57 = (uint64_t)v83;
    if (v53 == 1)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      uint64_t v58 = v82;
      sub_10026984C((uint64_t)v26, v82);
      uint64_t v59 = *(void *)(v58 + *(int *)(v97 + 24));
      sub_10037B1E4(v58, type metadata accessor for WorkoutChartDataElement);
      uint64_t v51 = v96;
      uint64_t v60 = (double *)(v96 + v91[15]);
      *(void *)uint64_t v60 = v59;
      if (!a5[2])
      {
LABEL_45:
        __break(1u);
        swift_release();
        __break(1u);
        JUMPOUT(0x100378014);
      }
      sub_10037B17C(v55, v57, type metadata accessor for WorkoutChartDataElement);
      swift_bridgeObjectRetain();
      if (v53 == 1)
      {
LABEL_8:
        swift_bridgeObjectRelease();
        uint64_t v61 = v85;
        sub_10026984C(v57, v85);
        uint64_t v62 = v97;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v61, 0, 1, v97);
        uint64_t v63 = v54;
        goto LABEL_10;
      }
      unint64_t v73 = 1;
      while (v73 < a5[2])
      {
        sub_10037B17C(v55 + *(void *)(v54 + 72) * v73, (uint64_t)v18, type metadata accessor for WorkoutChartDataElement);
        if (*(double *)(v57 + *(int *)(v97 + 28)) >= *(double *)&v18[*(int *)(v97 + 28)])
        {
          sub_10037B1E4((uint64_t)v18, type metadata accessor for WorkoutChartDataElement);
        }
        else
        {
          sub_10037B1E4(v57, type metadata accessor for WorkoutChartDataElement);
          sub_10026984C((uint64_t)v18, v57);
        }
        if (v53 == ++v73) {
          goto LABEL_8;
        }
      }
    }
    else
    {
      unint64_t v72 = 1;
      while (v72 < a5[2])
      {
        sub_10037B17C(v55 + *(void *)(v54 + 72) * v72, (uint64_t)v23, type metadata accessor for WorkoutChartDataElement);
        if (*(double *)&v23[*(int *)(v97 + 24)] >= *(double *)&v26[*(int *)(v97 + 24)])
        {
          sub_10037B1E4((uint64_t)v23, type metadata accessor for WorkoutChartDataElement);
        }
        else
        {
          sub_10037B1E4((uint64_t)v26, type metadata accessor for WorkoutChartDataElement);
          sub_10026984C((uint64_t)v23, (uint64_t)v26);
        }
        if (v53 == ++v72) {
          goto LABEL_6;
        }
      }
      __break(1u);
    }
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v60 = (double *)(v51 + v34[15]);
  *uint64_t v60 = 0.0;
  uint64_t v63 = v90;
  id v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v90 + 56);
  swift_retain();
  uint64_t v61 = v85;
  uint64_t v62 = v97;
  v64(v85, 1, 1, v97);
  char v56 = v95;
LABEL_10:

  swift_release();
  swift_release();
  id v65 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
  uint64_t v66 = v86;
  v65(v93, v86);
  v65(v94, v66);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62) == 1)
  {
    uint64_t result = sub_1003791DC(v61);
    double v68 = 0.0;
  }
  else
  {
    double v68 = *(double *)(v61 + *(int *)(v62 + 28));
    uint64_t result = sub_10037B1E4(v61, type metadata accessor for WorkoutChartDataElement);
  }
  double v69 = v91;
  *(double *)(v51 + v91[16]) = v68;
  double v70 = *v60;
  double v71 = v68 - *v60;
  switch(v56)
  {
    case 1:
    case 8:
    case 9:
      if (v71 < 0.0) {
        goto LABEL_29;
      }
      break;
    case 4:
    case 10:
      if (v71 < 10.0)
      {
        double v74 = (v68 + v70) * 0.5;
        double v75 = 5.0;
        goto LABEL_39;
      }
      break;
    case 5:
    case 6:
      if (v71 < 50.0)
      {
        double v74 = (v68 + v70) * 0.5;
LABEL_35:
        double v75 = 25.0;
        goto LABEL_39;
      }
      break;
    case 7:
      if (v71 < 200.0)
      {
        double v74 = (v68 + v70) * 0.5;
LABEL_38:
        double v75 = 100.0;
        goto LABEL_39;
      }
      break;
    default:
      if (v71 < 10.0)
      {
LABEL_29:
        double v74 = (v68 + v70) * 0.5;
        double v75 = 5.0;
        switch(v56)
        {
          case 1:
          case 8:
          case 9:
            double v75 = 0.0;
            break;
          case 5:
          case 6:
            goto LABEL_35;
          case 7:
            goto LABEL_38;
          default:
            break;
        }
LABEL_39:
        double v70 = v74 - v75;
        double v68 = v75 + v74;
        double v71 = v75 + v74 - (v74 - v75);
      }
      break;
  }
  double v76 = v71 / 44.0;
  *(double *)(v51 + v69[18]) = v76;
  double v77 = v76 + v76;
  double v78 = v70 - v77;
  double v79 = v68 + v77;
  if (v78 > v79) {
    goto LABEL_44;
  }
  long long v80 = (double *)(v51 + v69[17]);
  *long long v80 = v78;
  v80[1] = v79;
  return result;
}

uint64_t sub_100378068@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for WorkoutChartDataElement(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v25 = v3;
  uint64_t v26 = v4;
  __chkstk_darwin(v3);
  uint64_t v30 = (uint64_t)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = type metadata accessor for WorkoutChartViewModel(0);
  uint64_t v7 = *(int *)(result + 32);
  uint64_t v8 = *(void *)(*(void *)(v1 + v7) + 16);
  if (v8)
  {
    uint64_t v24 = a1;
    uint64_t v9 = 0;
    uint64_t v29 = v7;
    while (1)
    {
      if (__OFSUB__(v8, v9))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
      unint64_t v10 = v9 + (v8 - v9) / 2;
      if (__OFADD__(v9, (v8 - v9) / 2)) {
        goto LABEL_19;
      }
      if ((v10 & 0x8000000000000000) != 0) {
        goto LABEL_20;
      }
      uint64_t v11 = *(void *)(v1 + v7);
      if (v10 >= *(void *)(v11 + 16)) {
        goto LABEL_21;
      }
      uint64_t v27 = v8;
      unint64_t v12 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      uint64_t v13 = *(void *)(v26 + 72) * v10;
      uint64_t v14 = v30;
      sub_10037B17C(v11 + v12 + v13, v30, type metadata accessor for WorkoutChartDataElement);
      int v28 = static Date.== infix(_:_:)();
      uint64_t v15 = type metadata accessor for Date();
      uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
      uint64_t result = v16(v14, v15);
      uint64_t v17 = *(void *)(v1 + v29);
      unint64_t v18 = *(void *)(v17 + 16);
      if (v28) {
        break;
      }
      if (v10 >= v18) {
        goto LABEL_22;
      }
      uint64_t v19 = v17 + v12 + v13;
      uint64_t v20 = v30;
      sub_10037B17C(v19, v30, type metadata accessor for WorkoutChartDataElement);
      char v21 = static Date.< infix(_:_:)();
      uint64_t result = v16(v20, v15);
      uint64_t v7 = v29;
      uint64_t v8 = v27;
      if (v21) {
        uint64_t v9 = v10 + 1;
      }
      else {
        uint64_t v8 = v10;
      }
      if (v9 >= v8)
      {
        uint64_t v22 = 1;
        a1 = v24;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(a1, v22, 1, v25);
      }
    }
    if (v10 < v18)
    {
      a1 = v24;
      sub_10037B17C(v17 + v12 + v13, v24, type metadata accessor for WorkoutChartDataElement);
      uint64_t v22 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(a1, v22, 1, v25);
    }
LABEL_23:
    __break(1u);
  }
  else
  {
    uint64_t v22 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(a1, v22, 1, v25);
  }
  return result;
}

id sub_100378320(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100959218);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v32[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for WorkoutChartDataElement(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = &v32[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100378068((uint64_t)v6);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1003791DC((uint64_t)v6);
    uint64_t v11 = *(void *)(v2 + *(int *)(type metadata accessor for WorkoutChartViewModel(0) + 48));
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      uint64_t v13 = v11 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      uint64_t v14 = *(void *)(v8 + 72);
      swift_bridgeObjectRetain();
      while ((static Date.== infix(_:_:)() & 1) == 0)
      {
        v13 += v14;
        if (!--v12)
        {
          swift_bridgeObjectRelease();
          goto LABEL_7;
        }
      }
      swift_bridgeObjectRelease();
      id v22 = [self mainBundle];
      NSString v23 = String._bridgeToObjectiveC()();
      id v24 = [v22 localizedStringForKey:v23 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000AFA94((uint64_t *)&unk_10095BF70);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1007509E0;
      *(void *)(inited + 32) = NSFontAttributeName;
      *(void *)(inited + 64) = sub_10037B244();
      *(void *)(inited + 40) = a2;
      uint64_t v25 = NSFontAttributeName;
      id v26 = a2;
    }
    else
    {
LABEL_7:
      id v15 = [self mainBundle];
      NSString v16 = String._bridgeToObjectiveC()();
      id v17 = [v15 localizedStringForKey:v16 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000AFA94((uint64_t *)&unk_10095BF70);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1007509E0;
      *(void *)(inited + 32) = NSFontAttributeName;
      *(void *)(inited + 64) = sub_10037B244();
      *(void *)(inited + 40) = a2;
      id v19 = a2;
      uint64_t v20 = NSFontAttributeName;
    }
    sub_1000DFC2C(inited);
    id v27 = objc_allocWithZone((Class)NSAttributedString);
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_100378F18((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v30 = [v27 initWithString:v28 attributes:isa];
  }
  else
  {
    sub_10026984C((uint64_t)v6, (uint64_t)v10);
    switch(*(unsigned char *)(v2 + *(int *)(type metadata accessor for WorkoutChartViewModel(0) + 20)))
    {
      case 1:
      case 8:
      case 9:
        id v21 = sub_1001DB540((uint64_t)v10, a2);
        break;
      case 2:
        id v21 = sub_1001DB124((uint64_t)v10, a2);
        break;
      case 3:
      case 0xA:
        sub_1001DAE98((uint64_t)v10, a2);
        break;
      case 4:
        sub_1001DC9BC((uint64_t)v10, a2);
        break;
      case 5:
        sub_1001DC7B8((uint64_t)v10, a2);
        break;
      case 6:
        id v21 = sub_1001DBBD4((uint64_t)v10, a2);
        break;
      case 7:
        id v21 = sub_1001DBDB8((uint64_t)v10, a2);
        break;
      default:
        id v21 = sub_1001DB328((uint64_t)v10, a2);
        break;
    }
    id v30 = v21;
    sub_10037B1E4((uint64_t)v10, type metadata accessor for WorkoutChartDataElement);
  }
  return v30;
}

id sub_10037885C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for WorkoutChartDataElement(0);
  uint64_t v5 = (int *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Date.now.getter();
  uint64_t v8 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  double v9 = *(double *)(v2 + v8[15]);
  double v10 = *(double *)(v2 + v8[16]);
  *(double *)&v7[v5[8]] = v9;
  *(double *)&v7[v5[9]] = v10;
  *(double *)&v7[v5[7]] = (v9 + v10) * 0.5;
  switch(*(unsigned char *)(v2 + v8[5]))
  {
    case 1:
    case 8:
    case 9:
      id v11 = sub_1001DB540((uint64_t)v7, a1);
      break;
    case 2:
      id v11 = sub_1001DB124((uint64_t)v7, a1);
      break;
    case 3:
    case 0xA:
      sub_1001DAE98((uint64_t)v7, a1);
      break;
    case 4:
      sub_1001DC9BC((uint64_t)v7, a1);
      break;
    case 5:
      sub_1001DC7B8((uint64_t)v7, a1);
      break;
    case 6:
      id v11 = sub_1001DBBD4((uint64_t)v7, a1);
      break;
    case 7:
      id v11 = sub_1001DBDB8((uint64_t)v7, a1);
      break;
    default:
      id v11 = sub_1001DB328((uint64_t)v7, a1);
      break;
  }
  id v12 = v11;
  sub_10037B1E4((uint64_t)v7, type metadata accessor for WorkoutChartDataElement);
  return v12;
}

uint64_t sub_100378A10(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for WorkoutChartViewModel(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.timeIntervalSince(_:)();
  id v8 = [*(id *)(v2 + *(int *)(v5 + 76)) stringFromTimeInterval:];
  if (v8)
  {
    double v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v12 = v11;
  }
  else
  {
    uint64_t v10 = 0;
    unint64_t v12 = 0xE000000000000000;
  }
  sub_10037B17C(v3, (uint64_t)v7, type metadata accessor for WorkoutChartViewModel);
  if (a2)
  {
    uint64_t v13 = *(void *)(*(void *)&v7[*(int *)(v5 + 48)] + 16);
    sub_10037B1E4((uint64_t)v7, type metadata accessor for WorkoutChartViewModel);
    if (v13)
    {
      id v14 = [self mainBundle];
      NSString v15 = String._bridgeToObjectiveC()();
      id v16 = [v14 localizedStringForKey:v15 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000AFA94((uint64_t *)&unk_1009546D0);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1007509E0;
      *(void *)(v17 + 56) = &type metadata for String;
      *(void *)(v17 + 64) = sub_1000AA64C();
      *(void *)(v17 + 32) = v10;
      *(void *)(v17 + 40) = v12;
      uint64_t v10 = String.init(format:_:)();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_10037B1E4((uint64_t)v7, type metadata accessor for WorkoutChartViewModel);
  }
  return v10;
}

void sub_100378C4C(uint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for UUID();
  sub_100378F18((unint64_t *)&qword_10095B840, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v4 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  sub_10065204C(*(unsigned char *)(v1 + v4[5]));
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v1 + v4[8]);
  swift_bridgeObjectRetain();
  sub_1001CBB08(a1, v5);
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(unsigned __int8 *)(v2 + v4[9]));
  type metadata accessor for Date();
  sub_100378F18((unint64_t *)&qword_10094E748, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v6 = *(void *)(v2 + v4[12]);
  swift_bridgeObjectRetain();
  sub_1001CBB08(a1, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v2 + v4[13]);
  if (v7)
  {
    Hasher._combine(_:)(1u);
    uint64_t v8 = *(void *)(v7 + 16);
    sub_1001CBAA0(a1, v8);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_100378E50(uint64_t a1, uint64_t a2)
{
  return sub_100379040(a1, a2, (void (*)(unsigned char *))sub_100378C4C);
}

Swift::Int sub_100378E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003790A4(a1, a2, a3, (void (*)(unsigned char *))sub_100378C4C);
}

uint64_t sub_100378E88()
{
  return sub_100378F18(&qword_100959208, (void (*)(uint64_t))type metadata accessor for WorkoutChartViewModel);
}

uint64_t sub_100378ED0()
{
  return sub_100378F18((unint64_t *)&qword_10095B840, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_100378F18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100378F60()
{
  type metadata accessor for Date();
  sub_100378F18((unint64_t *)&qword_10094E748, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v1 = type metadata accessor for WorkoutChartDataElement(0);
  uint64_t v2 = v1;
  if ((*(void *)(v0 + *(int *)(v1 + 20)) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = *(void *)(v0 + *(int *)(v1 + 20));
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  Hasher._combine(_:)(v3);
  if ((*(void *)(v0 + *(int *)(v2 + 24)) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = *(void *)(v0 + *(int *)(v2 + 24));
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  Hasher._combine(_:)(v4);
  if ((*(void *)(v0 + *(int *)(v2 + 28)) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = *(void *)(v0 + *(int *)(v2 + 28));
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  Hasher._combine(_:)(v5);
}

Swift::Int sub_100379028(uint64_t a1, uint64_t a2)
{
  return sub_100379040(a1, a2, (void (*)(unsigned char *))sub_100378F60);
}

Swift::Int sub_100379040(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *))
{
  Hasher.init(_seed:)();
  a3(v5);
  return Hasher._finalize()();
}

Swift::Int sub_10037908C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003790A4(a1, a2, a3, (void (*)(unsigned char *))sub_100378F60);
}

Swift::Int sub_1003790A4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  Hasher.init(_seed:)();
  a4(v6);
  return Hasher._finalize()();
}

uint64_t sub_1003790EC()
{
  return sub_100378F18(&qword_100959210, (void (*)(uint64_t))type metadata accessor for WorkoutChartDataElement);
}

Swift::Int sub_100379134(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for WorkoutChartDataElement(0) - 8);
  Swift::UInt64 v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    Swift::UInt64 v3 = (void *)sub_1001EEF90(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_10037923C(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1003791DC(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100959218);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

Swift::Int sub_10037923C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for WorkoutChartDataElement(0);
  uint64_t v132 = *(void *)(v4 - 8);
  uint64_t v133 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v129 = (uint64_t)&v123 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v140 = (uint64_t)&v123 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v137 = (uint64_t)&v123 - v10;
  __chkstk_darwin(v9);
  uint64_t v136 = (uint64_t)&v123 - v11;
  Swift::Int v12 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v12);
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_137;
    }
    if (v12) {
      return sub_100379C4C(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_145;
  }
  Swift::Int v126 = result;
  if (v12 < 2)
  {
    unint64_t v18 = (char *)_swiftEmptyArrayStorage;
    unint64_t v131 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
    double v125 = _swiftEmptyArrayStorage;
    if (v12 != 1)
    {
      unint64_t v20 = _swiftEmptyArrayStorage[2];
LABEL_103:
      char v116 = v18;
      if (v20 >= 2)
      {
        uint64_t v117 = *a1;
        do
        {
          unint64_t v118 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_132;
          }
          if (!v117) {
            goto LABEL_144;
          }
          uint64_t v119 = *(void *)&v116[16 * v118 + 32];
          uint64_t v120 = *(void *)&v116[16 * v20 + 24];
          sub_100379ECC(v117 + *(void *)(v132 + 72) * v119, v117 + *(void *)(v132 + 72) * *(void *)&v116[16 * v20 + 16], v117 + *(void *)(v132 + 72) * v120, v131);
          if (v2) {
            break;
          }
          if (v120 < v119) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v116 = sub_1001EEF68((uint64_t)v116);
          }
          if (v118 >= *((void *)v116 + 2)) {
            goto LABEL_134;
          }
          double v121 = &v116[16 * v118 + 32];
          *(void *)double v121 = v119;
          *((void *)v121 + 1) = v120;
          unint64_t v122 = *((void *)v116 + 2);
          if (v20 > v122) {
            goto LABEL_135;
          }
          memmove(&v116[16 * v20 + 16], &v116[16 * v20 + 32], 16 * (v122 - v20));
          *((void *)v116 + 2) = v122 - 1;
          unint64_t v20 = v122 - 1;
        }
        while (v122 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      v125[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v132 + 80);
    double v125 = (void *)v16;
    unint64_t v131 = v16 + ((v17 + 32) & ~v17);
  }
  Swift::Int v19 = 0;
  unint64_t v18 = (char *)_swiftEmptyArrayStorage;
  double v138 = a1;
  while (1)
  {
    Swift::Int v21 = v19;
    Swift::Int v22 = v19 + 1;
    Swift::Int v130 = v19;
    if (v19 + 1 >= v12)
    {
      Swift::Int v31 = v19 + 1;
      Swift::Int v39 = v19;
    }
    else
    {
      Swift::Int v23 = *(void *)(v132 + 72);
      uint64_t v24 = *a1 + v23 * v22;
      uint64_t v134 = *a1;
      uint64_t v25 = v134;
      Swift::Int v139 = v12;
      uint64_t v26 = v136;
      sub_10037B17C(v24, v136, type metadata accessor for WorkoutChartDataElement);
      uint64_t v27 = v25 + v23 * v21;
      uint64_t v28 = v137;
      sub_10037B17C(v27, v137, type metadata accessor for WorkoutChartDataElement);
      LODWORD(v135) = static Date.< infix(_:_:)();
      sub_10037B1E4(v28, type metadata accessor for WorkoutChartDataElement);
      uint64_t v29 = v26;
      Swift::Int v12 = v139;
      sub_10037B1E4(v29, type metadata accessor for WorkoutChartDataElement);
      Swift::Int v30 = v23;
      Swift::Int v31 = v21 + 2;
      Swift::Int v141 = v30;
      if (v21 + 2 < v12)
      {
        uint64_t v124 = v2;
        double v127 = v18;
        uint64_t v32 = v30 * v22;
        uint64_t v33 = v134;
        Swift::Int v34 = v30 * v31;
        while (1)
        {
          Swift::Int v35 = v31;
          uint64_t v36 = v136;
          sub_10037B17C(v33 + v34, v136, type metadata accessor for WorkoutChartDataElement);
          uint64_t v37 = v137;
          sub_10037B17C(v33 + v32, v137, type metadata accessor for WorkoutChartDataElement);
          int v38 = static Date.< infix(_:_:)();
          sub_10037B1E4(v37, type metadata accessor for WorkoutChartDataElement);
          sub_10037B1E4(v36, type metadata accessor for WorkoutChartDataElement);
          if ((v135 ^ v38)) {
            break;
          }
          Swift::Int v31 = v35 + 1;
          v33 += v141;
          Swift::Int v12 = v139;
          if (v139 == v35 + 1)
          {
            Swift::Int v31 = v139;
            unint64_t v18 = v127;
            uint64_t v2 = v124;
            goto LABEL_23;
          }
        }
        unint64_t v18 = v127;
        Swift::Int v31 = v35;
        uint64_t v2 = v124;
        Swift::Int v12 = v139;
      }
LABEL_23:
      Swift::Int v39 = v130;
      if (v135)
      {
        if (v31 < v130) {
          goto LABEL_138;
        }
        if (v130 < v31)
        {
          double v127 = v18;
          uint64_t v40 = 0;
          Swift::Int v41 = v141;
          uint64_t v42 = v141 * (v31 - 1);
          Swift::Int v43 = v31 * v141;
          uint64_t v44 = v130 * v141;
          do
          {
            if (v39 != v31 + v40 - 1)
            {
              Swift::Int v46 = v31;
              uint64_t v47 = v134;
              if (!v134) {
                goto LABEL_143;
              }
              unint64_t v48 = v134 + v44;
              uint64_t v135 = v134 + v42;
              sub_10026984C(v134 + v44, v129);
              if (v44 < v42 || v48 >= v47 + v43)
              {
                uint64_t v45 = v135;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v45 = v135;
                if (v44 != v42) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_10026984C(v129, v45);
              Swift::Int v31 = v46;
              Swift::Int v41 = v141;
            }
            ++v39;
            --v40;
            v42 -= v41;
            v43 -= v41;
            v44 += v41;
          }
          while (v39 < v31 + v40);
          a1 = v138;
          Swift::Int v12 = v139;
          unint64_t v18 = v127;
          Swift::Int v39 = v130;
        }
      }
    }
    if (v31 < v12)
    {
      if (__OFSUB__(v31, v39)) {
        goto LABEL_136;
      }
      if (v31 - v39 < v126) {
        break;
      }
    }
LABEL_55:
    if (v31 < v39) {
      goto LABEL_131;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v139 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v18 = sub_1001EE868(0, *((void *)v18 + 2) + 1, 1, v18);
    }
    unint64_t v65 = *((void *)v18 + 2);
    unint64_t v64 = *((void *)v18 + 3);
    unint64_t v20 = v65 + 1;
    if (v65 >= v64 >> 1) {
      unint64_t v18 = sub_1001EE868((char *)(v64 > 1), v65 + 1, 1, v18);
    }
    *((void *)v18 + 2) = v20;
    uint64_t v66 = v18 + 32;
    uint64_t v67 = &v18[16 * v65 + 32];
    Swift::Int v68 = v139;
    *(void *)uint64_t v67 = v130;
    *((void *)v67 + 1) = v68;
    if (v65)
    {
      while (1)
      {
        unint64_t v69 = v20 - 1;
        if (v20 >= 4)
        {
          double v74 = &v66[16 * v20];
          uint64_t v75 = *((void *)v74 - 8);
          uint64_t v76 = *((void *)v74 - 7);
          BOOL v80 = __OFSUB__(v76, v75);
          uint64_t v77 = v76 - v75;
          if (v80) {
            goto LABEL_120;
          }
          uint64_t v79 = *((void *)v74 - 6);
          uint64_t v78 = *((void *)v74 - 5);
          BOOL v80 = __OFSUB__(v78, v79);
          uint64_t v72 = v78 - v79;
          char v73 = v80;
          if (v80) {
            goto LABEL_121;
          }
          unint64_t v81 = v20 - 2;
          uint64_t v82 = &v66[16 * v20 - 32];
          uint64_t v84 = *(void *)v82;
          uint64_t v83 = *((void *)v82 + 1);
          BOOL v80 = __OFSUB__(v83, v84);
          uint64_t v85 = v83 - v84;
          if (v80) {
            goto LABEL_123;
          }
          BOOL v80 = __OFADD__(v72, v85);
          uint64_t v86 = v72 + v85;
          if (v80) {
            goto LABEL_126;
          }
          if (v86 >= v77)
          {
            char v104 = &v66[16 * v69];
            uint64_t v106 = *(void *)v104;
            uint64_t v105 = *((void *)v104 + 1);
            BOOL v80 = __OFSUB__(v105, v106);
            uint64_t v107 = v105 - v106;
            if (v80) {
              goto LABEL_130;
            }
            BOOL v97 = v72 < v107;
            goto LABEL_92;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v98 = *((void *)v18 + 4);
            uint64_t v99 = *((void *)v18 + 5);
            BOOL v80 = __OFSUB__(v99, v98);
            uint64_t v91 = v99 - v98;
            char v92 = v80;
            goto LABEL_86;
          }
          uint64_t v71 = *((void *)v18 + 4);
          uint64_t v70 = *((void *)v18 + 5);
          BOOL v80 = __OFSUB__(v70, v71);
          uint64_t v72 = v70 - v71;
          char v73 = v80;
        }
        if (v73) {
          goto LABEL_122;
        }
        unint64_t v81 = v20 - 2;
        long long v87 = &v66[16 * v20 - 32];
        uint64_t v89 = *(void *)v87;
        uint64_t v88 = *((void *)v87 + 1);
        BOOL v90 = __OFSUB__(v88, v89);
        uint64_t v91 = v88 - v89;
        char v92 = v90;
        if (v90) {
          goto LABEL_125;
        }
        uint64_t v93 = &v66[16 * v69];
        uint64_t v95 = *(void *)v93;
        uint64_t v94 = *((void *)v93 + 1);
        BOOL v80 = __OFSUB__(v94, v95);
        uint64_t v96 = v94 - v95;
        if (v80) {
          goto LABEL_128;
        }
        if (__OFADD__(v91, v96)) {
          goto LABEL_129;
        }
        if (v91 + v96 >= v72)
        {
          BOOL v97 = v72 < v96;
LABEL_92:
          if (v97) {
            unint64_t v69 = v81;
          }
          goto LABEL_94;
        }
LABEL_86:
        if (v92) {
          goto LABEL_124;
        }
        char v100 = &v66[16 * v69];
        uint64_t v102 = *(void *)v100;
        uint64_t v101 = *((void *)v100 + 1);
        BOOL v80 = __OFSUB__(v101, v102);
        uint64_t v103 = v101 - v102;
        if (v80) {
          goto LABEL_127;
        }
        if (v103 < v91) {
          goto LABEL_14;
        }
LABEL_94:
        unint64_t v108 = v69 - 1;
        if (v69 - 1 >= v20)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        uint64_t v109 = *a1;
        if (!*a1) {
          goto LABEL_142;
        }
        char v110 = v18;
        double v111 = &v66[16 * v108];
        uint64_t v112 = *(void *)v111;
        uint64_t v113 = &v66[16 * v69];
        uint64_t v114 = *((void *)v113 + 1);
        sub_100379ECC(v109 + *(void *)(v132 + 72) * *(void *)v111, v109 + *(void *)(v132 + 72) * *(void *)v113, v109 + *(void *)(v132 + 72) * v114, v131);
        if (v2) {
          goto LABEL_114;
        }
        if (v114 < v112) {
          goto LABEL_117;
        }
        if (v69 > *((void *)v110 + 2)) {
          goto LABEL_118;
        }
        *(void *)double v111 = v112;
        *(void *)&v66[16 * v108 + 8] = v114;
        unint64_t v115 = *((void *)v110 + 2);
        if (v69 >= v115) {
          goto LABEL_119;
        }
        unint64_t v18 = v110;
        unint64_t v20 = v115 - 1;
        memmove(&v66[16 * v69], v113 + 16, 16 * (v115 - 1 - v69));
        *((void *)v110 + 2) = v115 - 1;
        a1 = v138;
        if (v115 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v20 = 1;
LABEL_14:
    Swift::Int v12 = a1[1];
    Swift::Int v19 = v139;
    if (v139 >= v12) {
      goto LABEL_103;
    }
  }
  if (__OFADD__(v39, v126)) {
    goto LABEL_139;
  }
  if (v39 + v126 >= v12) {
    Swift::Int v49 = v12;
  }
  else {
    Swift::Int v49 = v39 + v126;
  }
  if (v49 >= v39)
  {
    if (v31 != v49)
    {
      double v127 = v18;
      Swift::Int v128 = v49;
      uint64_t v124 = v2;
      uint64_t v50 = *(void *)(v132 + 72);
      uint64_t v51 = v50 * (v31 - 1);
      uint64_t v134 = v50;
      Swift::Int v52 = v31 * v50;
      do
      {
        uint64_t v54 = 0;
        Swift::Int v139 = v31;
        uint64_t v135 = v52;
        while (1)
        {
          Swift::Int v141 = v39;
          uint64_t v55 = *a1;
          uint64_t v56 = v52 + v54 + *a1;
          uint64_t v57 = v136;
          sub_10037B17C(v56, v136, type metadata accessor for WorkoutChartDataElement);
          uint64_t v58 = v51;
          uint64_t v59 = v51 + v54 + v55;
          uint64_t v60 = v137;
          sub_10037B17C(v59, v137, type metadata accessor for WorkoutChartDataElement);
          LOBYTE(v55) = static Date.< infix(_:_:)();
          sub_10037B1E4(v60, type metadata accessor for WorkoutChartDataElement);
          sub_10037B1E4(v57, type metadata accessor for WorkoutChartDataElement);
          if ((v55 & 1) == 0) {
            break;
          }
          uint64_t v61 = *a1;
          if (!*a1) {
            goto LABEL_141;
          }
          Swift::Int v52 = v135;
          uint64_t v51 = v58;
          uint64_t v62 = v61 + v58 + v54;
          sub_10026984C(v61 + v135 + v54, v140);
          swift_arrayInitWithTakeFrontToBack();
          sub_10026984C(v140, v62);
          v54 -= v134;
          Swift::Int v39 = v141 + 1;
          a1 = v138;
          Swift::Int v53 = v139;
          if (v139 == v141 + 1) {
            goto LABEL_48;
          }
        }
        Swift::Int v53 = v139;
        uint64_t v51 = v58;
        Swift::Int v52 = v135;
LABEL_48:
        Swift::Int v31 = v53 + 1;
        v51 += v134;
        v52 += v134;
        Swift::Int v39 = v130;
      }
      while (v31 != v128);
      Swift::Int v31 = v128;
      uint64_t v2 = v124;
      unint64_t v18 = v127;
    }
    goto LABEL_55;
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100379C4C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v25 = a1;
  uint64_t v26 = type metadata accessor for WorkoutChartDataElement(0);
  uint64_t v7 = __chkstk_darwin(v26);
  uint64_t v29 = (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v23 - v10;
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v15 = (char *)&v23 - v14;
  uint64_t v28 = a3;
  uint64_t v24 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v31 = v16 * (v28 - 1);
    uint64_t v27 = v16;
    uint64_t v30 = v16 * v28;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v18 = v25;
    while (1)
    {
      uint64_t v19 = *a4;
      unint64_t v20 = a4;
      sub_10037B17C(v30 + v17 + *a4, (uint64_t)v15, type metadata accessor for WorkoutChartDataElement);
      sub_10037B17C(v31 + v17 + v19, (uint64_t)v11, type metadata accessor for WorkoutChartDataElement);
      LOBYTE(v19) = static Date.< infix(_:_:)();
      sub_10037B1E4((uint64_t)v11, type metadata accessor for WorkoutChartDataElement);
      uint64_t result = sub_10037B1E4((uint64_t)v15, type metadata accessor for WorkoutChartDataElement);
      if ((v19 & 1) == 0)
      {
LABEL_4:
        v31 += v27;
        v30 += v27;
        if (++v28 == v24) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v21 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v22 = v21 + v31 + v17;
      sub_10026984C(v21 + v30 + v17, v29);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_10026984C(v29, v22);
      v17 -= v27;
      ++v18;
      a4 = v20;
      if (v28 == v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100379ECC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v43 = type metadata accessor for WorkoutChartDataElement(0);
  uint64_t v8 = __chkstk_darwin(v43);
  uint64_t v44 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v40 - v10;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_61;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_62;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v47 = a1;
  unint64_t v46 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v26 = a4 + v18;
      unint64_t v45 = a4 + v18;
      unint64_t v47 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        unint64_t v41 = a4;
        unint64_t v42 = a1;
        do
        {
          unint64_t v28 = a3 - v13;
          sub_10037B17C(v26 - v13, (uint64_t)v11, type metadata accessor for WorkoutChartDataElement);
          unint64_t v29 = a2 - v13;
          unint64_t v30 = a3;
          uint64_t v31 = (uint64_t)v11;
          uint64_t v32 = v44;
          sub_10037B17C(a2 - v13, v44, type metadata accessor for WorkoutChartDataElement);
          char v33 = static Date.< infix(_:_:)();
          uint64_t v34 = v32;
          uint64_t v11 = (char *)v31;
          sub_10037B1E4(v34, type metadata accessor for WorkoutChartDataElement);
          sub_10037B1E4(v31, type metadata accessor for WorkoutChartDataElement);
          if (v33)
          {
            if (v30 < a2 || v28 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v36 = v41;
              unint64_t v37 = v42;
            }
            else
            {
              BOOL v35 = v30 == a2;
              unint64_t v36 = v41;
              unint64_t v37 = v42;
              if (!v35) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v47 -= v13;
          }
          else
          {
            unint64_t v38 = v45;
            v45 -= v13;
            if (v30 < v38 || v28 >= v38)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v29 = a2;
              unint64_t v36 = v41;
              unint64_t v37 = v42;
            }
            else
            {
              unint64_t v37 = v42;
              if (v30 != v38) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v29 = a2;
              unint64_t v36 = v41;
            }
          }
          unint64_t v26 = v45;
          if (v45 <= v36) {
            break;
          }
          a2 = v29;
          a3 = v28;
        }
        while (v29 > v37);
      }
      goto LABEL_59;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v19 = a4 + v17;
    unint64_t v45 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      do
      {
        sub_10037B17C(a2, (uint64_t)v11, type metadata accessor for WorkoutChartDataElement);
        uint64_t v21 = v44;
        sub_10037B17C(a4, v44, type metadata accessor for WorkoutChartDataElement);
        char v22 = static Date.< infix(_:_:)();
        sub_10037B1E4(v21, type metadata accessor for WorkoutChartDataElement);
        sub_10037B1E4((uint64_t)v11, type metadata accessor for WorkoutChartDataElement);
        unint64_t v23 = v47;
        if (v22)
        {
          unint64_t v24 = a2 + v13;
          if (v47 < a2 || v47 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 == a2)
          {
            unint64_t v23 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v25 = v46 + v13;
          if (v47 < v46 || v47 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 != v46)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v46 = v25;
          unint64_t v24 = a2;
        }
        unint64_t v47 = v23 + v13;
        a4 = v46;
        if (v46 >= v19) {
          break;
        }
        a2 = v24;
      }
      while (v24 < a3);
    }
LABEL_59:
    sub_1001EE968(&v47, &v46, (uint64_t *)&v45);
    return 1;
  }
LABEL_63:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10037A3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutChartViewModel(0);
  __chkstk_darwin(v4);
  uint64_t v85 = (uint64_t)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v86 = (uint64_t)&v81 - v7;
  __chkstk_darwin(v8);
  uint64_t v84 = (char *)&v81 - v9;
  __chkstk_darwin(v10);
  uint64_t v83 = (char *)&v81 - v11;
  __chkstk_darwin(v12);
  BOOL v90 = (char *)&v81 - v13;
  __chkstk_darwin(v14);
  uint64_t v91 = (char *)&v81 - v15;
  __chkstk_darwin(v16);
  uint64_t v89 = (char *)&v81 - v17;
  __chkstk_darwin(v18);
  uint64_t v92 = (uint64_t)&v81 - v19;
  __chkstk_darwin(v20);
  uint64_t v88 = (char *)&v81 - v21;
  __chkstk_darwin(v22);
  uint64_t v87 = (uint64_t)&v81 - v23;
  __chkstk_darwin(v24);
  uint64_t v82 = (uint64_t)&v81 - v25;
  __chkstk_darwin(v26);
  unint64_t v28 = (char *)&v81 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v81 - v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v81 - v33;
  __chkstk_darwin(v35);
  unint64_t v37 = (char *)&v81 - v36;
  __chkstk_darwin(v38);
  uint64_t v40 = (char *)&v81 - v39;
  char v41 = static UUID.== infix(_:_:)();
  sub_10037B17C(a1, (uint64_t)v40, type metadata accessor for WorkoutChartViewModel);
  sub_10037B17C(a2, (uint64_t)v37, type metadata accessor for WorkoutChartViewModel);
  if ((v41 & 1) == 0)
  {
    sub_10037B1E4((uint64_t)v37, type metadata accessor for WorkoutChartViewModel);
    sub_10037B1E4((uint64_t)v40, type metadata accessor for WorkoutChartViewModel);
    sub_10037B17C(a1, (uint64_t)v34, type metadata accessor for WorkoutChartViewModel);
    sub_10037B17C(a2, (uint64_t)v31, type metadata accessor for WorkoutChartViewModel);
    uint64_t v50 = (uint64_t)v89;
    goto LABEL_9;
  }
  unint64_t v81 = (int *)v4;
  uint64_t v42 = *(int *)(v4 + 20);
  char v43 = v37[v42];
  unint64_t v44 = sub_10065204C(v40[v42]);
  uint64_t v46 = v45;
  BOOL v48 = v44 == sub_10065204C(v43) && v46 == v47;
  if (!v48)
  {
    char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10037B1E4((uint64_t)v37, type metadata accessor for WorkoutChartViewModel);
    sub_10037B1E4((uint64_t)v40, type metadata accessor for WorkoutChartViewModel);
    sub_10037B17C(a1, (uint64_t)v34, type metadata accessor for WorkoutChartViewModel);
    sub_10037B17C(a2, (uint64_t)v31, type metadata accessor for WorkoutChartViewModel);
    uint64_t v50 = (uint64_t)v89;
    if (v49) {
      goto LABEL_19;
    }
LABEL_9:
    sub_10037B1E4((uint64_t)v34, type metadata accessor for WorkoutChartViewModel);
    sub_10037B1E4((uint64_t)v31, type metadata accessor for WorkoutChartViewModel);
    sub_10037B17C(a1, (uint64_t)v28, type metadata accessor for WorkoutChartViewModel);
    uint64_t v51 = v82;
    sub_10037B17C(a2, v82, type metadata accessor for WorkoutChartViewModel);
    uint64_t v53 = (uint64_t)v83;
    uint64_t v52 = (uint64_t)v84;
    uint64_t v54 = v92;
    uint64_t v55 = (uint64_t)v88;
    goto LABEL_10;
  }
  swift_bridgeObjectRelease_n();
  sub_10037B1E4((uint64_t)v37, type metadata accessor for WorkoutChartViewModel);
  sub_10037B1E4((uint64_t)v40, type metadata accessor for WorkoutChartViewModel);
  sub_10037B17C(a1, (uint64_t)v34, type metadata accessor for WorkoutChartViewModel);
  sub_10037B17C(a2, (uint64_t)v31, type metadata accessor for WorkoutChartViewModel);
  uint64_t v50 = (uint64_t)v89;
LABEL_19:
  uint64_t v64 = v81[6];
  uint64_t v65 = *(void *)&v34[v64];
  uint64_t v66 = *(void *)&v34[v64 + 8];
  uint64_t v67 = &v31[v64];
  uint64_t v55 = (uint64_t)v88;
  if (v65 == *(void *)v67 && v66 == *((void *)v67 + 1))
  {
    sub_10037B1E4((uint64_t)v34, type metadata accessor for WorkoutChartViewModel);
    sub_10037B1E4((uint64_t)v31, type metadata accessor for WorkoutChartViewModel);
    sub_10037B17C(a1, (uint64_t)v28, type metadata accessor for WorkoutChartViewModel);
    uint64_t v51 = v82;
    sub_10037B17C(a2, v82, type metadata accessor for WorkoutChartViewModel);
    uint64_t v53 = (uint64_t)v83;
    uint64_t v52 = (uint64_t)v84;
    goto LABEL_23;
  }
  char v68 = _stringCompareWithSmolCheck(_:_:expecting:)();
  sub_10037B1E4((uint64_t)v34, type metadata accessor for WorkoutChartViewModel);
  sub_10037B1E4((uint64_t)v31, type metadata accessor for WorkoutChartViewModel);
  sub_10037B17C(a1, (uint64_t)v28, type metadata accessor for WorkoutChartViewModel);
  uint64_t v51 = v82;
  sub_10037B17C(a2, v82, type metadata accessor for WorkoutChartViewModel);
  uint64_t v53 = (uint64_t)v83;
  uint64_t v52 = (uint64_t)v84;
  uint64_t v54 = v92;
  if ((v68 & 1) == 0)
  {
LABEL_10:
    sub_10037B1E4((uint64_t)v28, type metadata accessor for WorkoutChartViewModel);
    sub_10037B1E4(v51, type metadata accessor for WorkoutChartViewModel);
    uint64_t v56 = v87;
    sub_10037B17C(a1, v87, type metadata accessor for WorkoutChartViewModel);
    sub_10037B17C(a2, v55, type metadata accessor for WorkoutChartViewModel);
LABEL_11:
    sub_10037B1E4(v55, type metadata accessor for WorkoutChartViewModel);
    sub_10037B1E4(v56, type metadata accessor for WorkoutChartViewModel);
    sub_10037B17C(a1, v54, type metadata accessor for WorkoutChartViewModel);
    sub_10037B17C(a2, v50, type metadata accessor for WorkoutChartViewModel);
    uint64_t v57 = (uint64_t)v90;
    uint64_t v58 = (uint64_t)v91;
LABEL_12:
    sub_10037B1E4(v50, type metadata accessor for WorkoutChartViewModel);
    sub_10037B1E4(v54, type metadata accessor for WorkoutChartViewModel);
    sub_10037B17C(a1, v58, type metadata accessor for WorkoutChartViewModel);
    sub_10037B17C(a2, v57, type metadata accessor for WorkoutChartViewModel);
LABEL_13:
    sub_10037B1E4(v57, type metadata accessor for WorkoutChartViewModel);
    sub_10037B1E4(v58, type metadata accessor for WorkoutChartViewModel);
    sub_10037B17C(a1, v53, type metadata accessor for WorkoutChartViewModel);
    sub_10037B17C(a2, v52, type metadata accessor for WorkoutChartViewModel);
LABEL_14:
    sub_10037B1E4(v53, type metadata accessor for WorkoutChartViewModel);
    sub_10037B1E4(v52, type metadata accessor for WorkoutChartViewModel);
    uint64_t v59 = a1;
    uint64_t v60 = v86;
    sub_10037B17C(v59, v86, type metadata accessor for WorkoutChartViewModel);
    uint64_t v61 = v85;
    sub_10037B17C(a2, v85, type metadata accessor for WorkoutChartViewModel);
LABEL_15:
    sub_10037B1E4(v61, type metadata accessor for WorkoutChartViewModel);
    sub_10037B1E4(v60, type metadata accessor for WorkoutChartViewModel);
    goto LABEL_16;
  }
LABEL_23:
  BOOL v69 = sub_1003750AC(*(void *)&v28[v81[8]], *(void *)(v51 + v81[8]));
  sub_10037B1E4((uint64_t)v28, type metadata accessor for WorkoutChartViewModel);
  sub_10037B1E4(v51, type metadata accessor for WorkoutChartViewModel);
  uint64_t v56 = v87;
  sub_10037B17C(a1, v87, type metadata accessor for WorkoutChartViewModel);
  uint64_t v54 = v92;
  sub_10037B17C(a2, v55, type metadata accessor for WorkoutChartViewModel);
  if (!v69) {
    goto LABEL_11;
  }
  uint64_t v70 = v81;
  int v71 = *(unsigned __int8 *)(v56 + v81[9]);
  sub_10037B1E4(v56, type metadata accessor for WorkoutChartViewModel);
  int v72 = *(unsigned __int8 *)(v55 + v70[9]);
  sub_10037B1E4(v55, type metadata accessor for WorkoutChartViewModel);
  sub_10037B17C(a1, v92, type metadata accessor for WorkoutChartViewModel);
  sub_10037B17C(a2, v50, type metadata accessor for WorkoutChartViewModel);
  BOOL v48 = v71 == v72;
  uint64_t v58 = (uint64_t)v91;
  uint64_t v54 = v92;
  uint64_t v57 = (uint64_t)v90;
  if (!v48) {
    goto LABEL_12;
  }
  LODWORD(v89) = static Date.== infix(_:_:)();
  sub_10037B1E4(v50, type metadata accessor for WorkoutChartViewModel);
  sub_10037B1E4(v54, type metadata accessor for WorkoutChartViewModel);
  sub_10037B17C(a1, v58, type metadata accessor for WorkoutChartViewModel);
  sub_10037B17C(a2, v57, type metadata accessor for WorkoutChartViewModel);
  if ((v89 & 1) == 0) {
    goto LABEL_13;
  }
  char v73 = static Date.== infix(_:_:)();
  sub_10037B1E4(v57, type metadata accessor for WorkoutChartViewModel);
  sub_10037B1E4(v58, type metadata accessor for WorkoutChartViewModel);
  sub_10037B17C(a1, v53, type metadata accessor for WorkoutChartViewModel);
  sub_10037B17C(a2, v52, type metadata accessor for WorkoutChartViewModel);
  if ((v73 & 1) == 0) {
    goto LABEL_14;
  }
  BOOL v74 = sub_1003750AC(*(void *)(v53 + v70[12]), *(void *)(v52 + v70[12]));
  sub_10037B1E4(v53, type metadata accessor for WorkoutChartViewModel);
  sub_10037B1E4(v52, type metadata accessor for WorkoutChartViewModel);
  uint64_t v75 = a1;
  uint64_t v60 = v86;
  sub_10037B17C(v75, v86, type metadata accessor for WorkoutChartViewModel);
  uint64_t v61 = v85;
  sub_10037B17C(a2, v85, type metadata accessor for WorkoutChartViewModel);
  if (!v74) {
    goto LABEL_15;
  }
  uint64_t v77 = v70[13];
  uint64_t v78 = *(void *)(v60 + v77);
  uint64_t v79 = *(void *)(v61 + v77);
  if (v78)
  {
    if (v79)
    {
      sub_10037555C(*(void *)(v78 + 16), *(void *)(v79 + 16), v76);
      char v62 = v80;
      swift_retain();
      sub_10037B1E4(v61, type metadata accessor for WorkoutChartViewModel);
      sub_10037B1E4(v60, type metadata accessor for WorkoutChartViewModel);
      swift_release();
      return v62 & 1;
    }
    swift_retain();
    sub_10037B1E4(v61, type metadata accessor for WorkoutChartViewModel);
    sub_10037B1E4(v60, type metadata accessor for WorkoutChartViewModel);
  }
  else
  {
    swift_retain();
    sub_10037B1E4(v61, type metadata accessor for WorkoutChartViewModel);
    sub_10037B1E4(v60, type metadata accessor for WorkoutChartViewModel);
    if (!v79)
    {
      char v62 = 1;
      return v62 & 1;
    }
  }
  swift_release();
LABEL_16:
  char v62 = 0;
  return v62 & 1;
}

BOOL sub_10037AE10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for WorkoutChartDataElement(0);
  __chkstk_darwin(v4);
  uint64_t v33 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v32 - v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v32 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v32 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v32 - v16;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v32 - v19;
  char v21 = static Date.== infix(_:_:)();
  sub_10037B17C(a1, (uint64_t)v20, type metadata accessor for WorkoutChartDataElement);
  sub_10037B17C(a2, (uint64_t)v17, type metadata accessor for WorkoutChartDataElement);
  if ((v21 & 1) == 0)
  {
    sub_10037B1E4((uint64_t)v17, type metadata accessor for WorkoutChartDataElement);
    sub_10037B1E4((uint64_t)v20, type metadata accessor for WorkoutChartDataElement);
    sub_10037B17C(a1, (uint64_t)v14, type metadata accessor for WorkoutChartDataElement);
    sub_10037B17C(a2, (uint64_t)v11, type metadata accessor for WorkoutChartDataElement);
    goto LABEL_6;
  }
  double v22 = *(double *)&v20[v4[5]];
  sub_10037B1E4((uint64_t)v20, type metadata accessor for WorkoutChartDataElement);
  double v23 = *(double *)&v17[v4[5]];
  sub_10037B1E4((uint64_t)v17, type metadata accessor for WorkoutChartDataElement);
  sub_10037B17C(a1, (uint64_t)v14, type metadata accessor for WorkoutChartDataElement);
  sub_10037B17C(a2, (uint64_t)v11, type metadata accessor for WorkoutChartDataElement);
  if (v22 != v23)
  {
LABEL_6:
    sub_10037B1E4((uint64_t)v11, type metadata accessor for WorkoutChartDataElement);
    sub_10037B1E4((uint64_t)v14, type metadata accessor for WorkoutChartDataElement);
    sub_10037B17C(a1, (uint64_t)v8, type metadata accessor for WorkoutChartDataElement);
    uint64_t v31 = a2;
    uint64_t v27 = v33;
    sub_10037B17C(v31, v33, type metadata accessor for WorkoutChartDataElement);
    goto LABEL_7;
  }
  double v24 = *(double *)&v14[v4[6]];
  sub_10037B1E4((uint64_t)v14, type metadata accessor for WorkoutChartDataElement);
  double v25 = *(double *)&v11[v4[6]];
  sub_10037B1E4((uint64_t)v11, type metadata accessor for WorkoutChartDataElement);
  sub_10037B17C(a1, (uint64_t)v8, type metadata accessor for WorkoutChartDataElement);
  uint64_t v26 = a2;
  uint64_t v27 = v33;
  sub_10037B17C(v26, v33, type metadata accessor for WorkoutChartDataElement);
  if (v24 == v25)
  {
    double v28 = *(double *)&v8[v4[7]];
    sub_10037B1E4((uint64_t)v8, type metadata accessor for WorkoutChartDataElement);
    double v29 = *(double *)(v27 + v4[7]);
    sub_10037B1E4(v27, type metadata accessor for WorkoutChartDataElement);
    return v28 == v29;
  }
LABEL_7:
  sub_10037B1E4(v27, type metadata accessor for WorkoutChartDataElement);
  sub_10037B1E4((uint64_t)v8, type metadata accessor for WorkoutChartDataElement);
  return 0;
}

uint64_t sub_10037B17C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10037B1E4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10037B244()
{
  unint64_t result = qword_1009587A0;
  if (!qword_1009587A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1009587A0);
  }
  return result;
}

char *sub_10037B284(double a1, double a2, double a3, double a4)
{
  v4[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxLabelView_bucket] = 3;
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxLabelView_label;
  sub_10007E2D8(0, &qword_100953458);
  uint64_t v10 = v4;
  *(void *)&v4[v9] = sub_1005CA0D4();
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxLabelView_separator;
  sub_10007E2D8(0, (unint64_t *)&qword_10094E530);
  *(void *)&v10[v11] = sub_1006D13E4();

  v62.receiver = v10;
  v62.super_class = (Class)type metadata accessor for TrendDetailVO2MaxLabelView();
  uint64_t v12 = (char *)[super initWithFrame:a1, a2, a3, a4];
  uint64_t v13 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxLabelView_label;
  uint64_t v14 = *(void **)&v12[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxLabelView_label];
  uint64_t v15 = self;
  uint64_t v16 = v12;
  id v17 = v14;
  id v18 = [v15 preferredFontForTextStyle:UIFontTextStyleFootnote];
  [v17 setFont:v18];

  uint64_t v19 = *(void **)&v12[v13];
  [v19 setTextAlignment:0];
  uint64_t v20 = self;
  id v21 = v19;
  id v22 = [v20 secondaryLabelColor];
  [v21 setTextColor:v22];

  [v16 addSubview:*(void *)&v12[v13]];
  uint64_t v23 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxLabelView_separator;
  id v24 = *(id *)&v16[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxLabelView_separator];
  id v25 = [v20 separatorColor];
  [v24 setBackgroundColor:v25];

  [v16 addSubview:*(void *)&v16[v23]];
  id v26 = [*(id *)&v12[v13] leftAnchor];
  id v27 = [v16 leftAnchor];
  id v60 = [v26 constraintEqualToAnchor:v27 constant:15.0];

  id v28 = [*(id *)&v12[v13] rightAnchor];
  id v29 = [v16 rightAnchor];
  id v58 = [v28 constraintLessThanOrEqualToAnchor:v29 constant:-15.0];

  id v30 = [*(id *)&v12[v13] topAnchor];
  id v31 = [v16 topAnchor];
  id v57 = [v30 constraintEqualToAnchor:v31 constant:1.0];

  id v32 = [*(id *)&v12[v13] bottomAnchor];
  id v33 = [v16 bottomAnchor];
  id v55 = [v32 constraintEqualToAnchor:v33 constant:-1.0];

  id v34 = [*(id *)&v16[v23] leftAnchor];
  id v35 = [*(id *)&v12[v13] leftAnchor];
  id v36 = [v34 constraintEqualToAnchor:v35];

  id v37 = [*(id *)&v16[v23] rightAnchor];
  id v38 = [v16 rightAnchor];
  id v39 = [v37 constraintEqualToAnchor:v38 constant:-15.0];

  id v40 = [*(id *)&v16[v23] heightAnchor];
  if (qword_10094AE08 != -1) {
    swift_once();
  }
  id v41 = [v40 constraintEqualToConstant:*(double *)&qword_100998308];

  id v42 = [*(id *)&v16[v23] bottomAnchor];
  id v43 = [v16 bottomAnchor];
  uint64_t v56 = v16;
  id v44 = [v42 constraintEqualToAnchor:v43];

  id v54 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_100752640;
  *(void *)(v45 + 32) = v60;
  *(void *)(v45 + 40) = v58;
  *(void *)(v45 + 48) = v57;
  *(void *)(v45 + 56) = v55;
  *(void *)(v45 + 64) = v36;
  *(void *)(v45 + 72) = v39;
  *(void *)(v45 + 80) = v41;
  *(void *)(v45 + 88) = v44;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  id v61 = v60;
  id v59 = v58;
  id v46 = v57;
  id v47 = v55;
  id v48 = v36;
  id v49 = v39;
  id v50 = v41;
  id v51 = v44;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v54 activateConstraints:isa];

  return v56;
}

uint64_t sub_10037B918(void *a1)
{
  uint64_t v2 = v1;
  v1[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxLabelView_bucket] = 3;
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxLabelView_label;
  sub_10007E2D8(0, &qword_100953458);
  uint64_t v5 = v1;
  *(void *)&v1[v4] = sub_1005CA0D4();
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxLabelView_separator;
  sub_10007E2D8(0, (unint64_t *)&qword_10094E530);
  id v7 = sub_1006D13E4();

  *(void *)&v5[v6] = v7;
  uint64_t v8 = *(void **)&v5[v6];

  type metadata accessor for TrendDetailVO2MaxLabelView();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_10037BA20()
{
  return sub_10037F1EC(type metadata accessor for TrendDetailVO2MaxLabelView);
}

uint64_t type metadata accessor for TrendDetailVO2MaxLabelView()
{
  return self;
}

char *sub_10037BAA8(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp21TrendDetailVO2MaxPill_pill;
  type metadata accessor for TrendAveragePlatterView();
  uint64_t v10 = v4;
  *(void *)&v4[v9] = sub_1006D13E4();
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp21TrendDetailVO2MaxPill_dashContainer;
  sub_10007E2D8(0, (unint64_t *)&qword_10094E530);
  *(void *)&v10[v11] = sub_1006D13E4();
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp21TrendDetailVO2MaxPill_dashLayer;
  *(void *)&v10[v12] = [objc_allocWithZone((Class)CAShapeLayer) init];

  v20.receiver = v10;
  v20.super_class = (Class)type metadata accessor for TrendDetailVO2MaxPill();
  uint64_t v13 = (char *)[super initWithFrame:a1, a2, a3, a4];
  uint64_t v14 = *(void **)&v13[OBJC_IVAR____TtC10FitnessApp21TrendDetailVO2MaxPill_dashContainer];
  uint64_t v15 = v13;
  [v15 addSubview:v14];
  [v15 addSubview:*(void *)&v15[OBJC_IVAR____TtC10FitnessApp21TrendDetailVO2MaxPill_pill]];
  id v16 = [v14 layer];
  uint64_t v17 = OBJC_IVAR____TtC10FitnessApp21TrendDetailVO2MaxPill_dashLayer;
  [v16 addSublayer:*(void *)&v15[OBJC_IVAR____TtC10FitnessApp21TrendDetailVO2MaxPill_dashLayer]];

  id v18 = *(void **)&v15[v17];
  [v18 setLineCap:kCALineCapRound];
  [v18 setLineWidth:1.0];
  sub_10037BD88();

  return v15;
}

uint64_t sub_10037BC6C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp21TrendDetailVO2MaxPill_pill;
  type metadata accessor for TrendAveragePlatterView();
  uint64_t v5 = v1;
  *(void *)&v1[v4] = sub_1006D13E4();
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp21TrendDetailVO2MaxPill_dashContainer;
  sub_10007E2D8(0, (unint64_t *)&qword_10094E530);
  *(void *)&v5[v6] = sub_1006D13E4();
  uint64_t v7 = OBJC_IVAR____TtC10FitnessApp21TrendDetailVO2MaxPill_dashLayer;
  id v8 = [objc_allocWithZone((Class)CAShapeLayer) init];

  *(void *)&v5[v7] = v8;
  uint64_t v9 = *(void **)&v5[v7];

  type metadata accessor for TrendDetailVO2MaxPill();
  swift_deallocPartialClassInstance();
  return 0;
}

void sub_10037BD88()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrendDetailVO2MaxPill_dashContainer];
  id v2 = [v1 widthAnchor];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrendDetailVO2MaxPill_pill];
  id v4 = [v3 widthAnchor];
  id v36 = [v2 constraintEqualToAnchor:v4 constant:10.0];

  id v5 = [v3 centerXAnchor];
  id v6 = [v1 centerXAnchor];
  id v34 = [v5 constraintEqualToAnchor:v6];

  id v7 = [v3 topAnchor];
  id v8 = [v0 topAnchor];
  id v33 = [v7 constraintEqualToAnchor:v8];

  id v9 = [v3 bottomAnchor];
  id v10 = [v0 bottomAnchor];
  id v32 = [v9 constraintEqualToAnchor:v10];

  id v11 = [v1 topAnchor];
  id v12 = [v0 topAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12];

  id v14 = [v1 bottomAnchor];
  id v15 = [v0 bottomAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15];

  id v17 = [v1 leftAnchor];
  id v18 = [v0 leftAnchor];
  id v30 = [v17 constraintEqualToAnchor:v18];

  id v19 = [v1 rightAnchor];
  id v20 = [v0 rightAnchor];
  id v28 = [v19 constraintEqualToAnchor:v20];

  id v31 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_100752640;
  *(void *)(v21 + 32) = v36;
  *(void *)(v21 + 40) = v34;
  *(void *)(v21 + 48) = v33;
  *(void *)(v21 + 56) = v32;
  *(void *)(v21 + 64) = v13;
  *(void *)(v21 + 72) = v16;
  *(void *)(v21 + 80) = v30;
  *(void *)(v21 + 88) = v28;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  id v29 = v36;
  id v35 = v34;
  id v22 = v33;
  id v23 = v32;
  id v24 = v13;
  id v25 = v16;
  id v26 = v30;
  id v27 = v28;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v31 activateConstraints:isa];
}

void sub_10037C1D4()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for TrendDetailVO2MaxPill();
  [super layoutSubviews];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrendDetailVO2MaxPill_dashLayer];
  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp21TrendDetailVO2MaxPill_dashContainer] bounds];
  [v1 setFrame:];
  id v2 = [objc_allocWithZone((Class)UIBezierPath) init];
  [v1 bounds];
  double MidY = CGRectGetMidY(v6);
  [v2 moveToPoint:0.0, MidY];
  [v2 addLineToPoint:4.0, MidY];
  [v1 bounds];
  [v2 moveToPoint:CGRectGetMaxX(v7) + -4.0, MidY];
  [v1 bounds];
  [v2 addLineToPoint:CGRectGetMaxX(v8), MidY];
  id v4 = [v2 CGPath];
  [v1 setPath:v4];
}

id sub_10037C384()
{
  return sub_10037F1EC(type metadata accessor for TrendDetailVO2MaxPill);
}

uint64_t type metadata accessor for TrendDetailVO2MaxPill()
{
  return self;
}

char *sub_10037C430(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp22TrendDetailVO2MaxMeter_gradientLayer;
  id v10 = objc_allocWithZone((Class)CAGradientLayer);
  id v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp22TrendDetailVO2MaxMeter_shapeLayer;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)CAShapeLayer) init];

  v23.receiver = v11;
  v23.super_class = (Class)type metadata accessor for TrendDetailVO2MaxMeter();
  id v13 = [super initWithFrame:a1, a2, a3, a4];
  id v14 = [v13 layer];
  [v14 addSublayer:*(void *)&v13[OBJC_IVAR____TtC10FitnessApp22TrendDetailVO2MaxMeter_shapeLayer]];

  id v15 = [v13 layer];
  uint64_t v16 = OBJC_IVAR____TtC10FitnessApp22TrendDetailVO2MaxMeter_gradientLayer;
  [v15 addSublayer:*(void *)&v13[OBJC_IVAR____TtC10FitnessApp22TrendDetailVO2MaxMeter_gradientLayer]];

  id v17 = *(void **)&v13[v16];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v18 = objc_allocWithZone((Class)CAFilter);
  id v19 = v17;
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v21 = [v18 initWithType:v20];

  [v19 setCompositingFilter:v21];
  return v13;
}

uint64_t sub_10037C618(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC10FitnessApp22TrendDetailVO2MaxMeter_gradientLayer;
  id v4 = objc_allocWithZone((Class)CAGradientLayer);
  objc_super v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp22TrendDetailVO2MaxMeter_shapeLayer;
  id v7 = [objc_allocWithZone((Class)CAShapeLayer) init];

  *(void *)&v5[v6] = v7;
  CGRect v8 = *(void **)&v5[v6];

  type metadata accessor for TrendDetailVO2MaxMeter();
  swift_deallocPartialClassInstance();
  return 0;
}

void sub_10037C708(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp22TrendDetailVO2MaxMeter_gradientLayer);
  sub_1000AFA94((uint64_t *)&unk_1009556C0);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient);
  *(_OWORD *)(v4 + 16) = xmmword_10074E640;
  id v6 = [*(id *)(v5 + OBJC_IVAR____TtC10FitnessApp14GradientColors_light) CGColor];
  type metadata accessor for CGColor(0);
  uint64_t v8 = v7;
  *(void *)(v4 + 56) = v7;
  *(void *)(v4 + 32) = v6;
  id v9 = [*(id *)(v5 + OBJC_IVAR____TtC10FitnessApp14GradientColors_dark) CGColor];
  *(void *)(v4 + 88) = v8;
  *(void *)(v4 + 64) = v9;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v3 setColors:isa];
}

void sub_10037C830(char *a1)
{
  id v2 = *(void **)&a1[OBJC_IVAR____TtC10FitnessApp22TrendDetailVO2MaxMeter_shapeLayer];
  [a1 bounds];
  [v2 setFrame:];
  uint64_t v3 = *(void **)&a1[OBJC_IVAR____TtC10FitnessApp22TrendDetailVO2MaxMeter_gradientLayer];
  [a1 bounds];
  [v3 setFrame:];
  [v2 bounds];
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;
  [v2 bounds];
  CGFloat v12 = CGRectGetWidth(v16) * 0.5;
  id v13 = [self bezierPathWithRoundedRect:v5 cornerRadius:v7 v9, v11, v12];
  id v14 = [v13 CGPath];

  [v2 setPath:v14];
}

id sub_10037CA14()
{
  return sub_10037F1EC(type metadata accessor for TrendDetailVO2MaxMeter);
}

uint64_t type metadata accessor for TrendDetailVO2MaxMeter()
{
  return self;
}

char *sub_10037CA9C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_titleLabel;
  sub_10007E2D8(0, &qword_100953458);
  double v10 = v4;
  *(void *)&v4[v9] = sub_1005CA0D4();
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_labelStack;
  sub_10007E2D8(0, &qword_100957898);
  *(void *)&v10[v11] = sub_1006D13E4();
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_labelRightLayoutGuide;
  *(void *)&v10[v12] = [objc_allocWithZone((Class)UILayoutGuide) init];
  uint64_t v13 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_title365;
  *(void *)&v10[v13] = sub_1005CA0D4();
  uint64_t v14 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_title90;
  *(void *)&v10[v14] = sub_1005CA0D4();
  uint64_t v15 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_meter365;
  type metadata accessor for TrendDetailVO2MaxMeter();
  *(void *)&v10[v15] = sub_1006D13E4();
  uint64_t v16 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_meter90;
  *(void *)&v10[v16] = sub_1006D13E4();
  uint64_t v17 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_pill365;
  type metadata accessor for TrendDetailVO2MaxPill();
  *(void *)&v10[v17] = sub_1006D13E4();
  uint64_t v18 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_pill90;
  uint64_t v134 = v10;
  *(void *)&v10[v18] = sub_1006D13E4();
  uint64_t v149 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  type metadata accessor for TrendDetailVO2MaxLabelView();
  uint64_t v19 = 0;
  id v137 = self;
  do
  {
    char v25 = *((unsigned char *)&off_1008B5F98 + v19 + 37);
    id v26 = (char *)sub_1006D13E4();
    id v27 = v26;
    id v20 = *(id *)&v26[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxLabelView_label];
    id v21 = [v137 mainBundle];
    NSString v22 = String._bridgeToObjectiveC()();
    id v23 = [v21 localizedStringForKey:v22 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();

    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v20 setText:v24];

    v27[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxLabelView_bucket] = v25;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    --v19;
  }
  while (v19 != -6);
  unint64_t v28 = (unint64_t)v149;
  *(void *)&v134[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_labels] = v149;
  *(void *)&v134[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_pill90CenterYConstraint] = 0;
  *(void *)&v134[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_pill365CenterYConstraint] = 0;
  *(void *)&v134[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_normalizedValue90] = 0;
  *(void *)&v134[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_normalizedValue365] = 0;
  if ((v28 & 0x8000000000000000) != 0 || (v28 & 0x4000000000000000) != 0) {
    goto LABEL_29;
  }
  uint64_t v29 = *(void *)(v28 + 16);
  swift_retain_n();
  while (v29)
  {
    id v30 = _swiftEmptyDictionarySingleton;
    uint64_t v31 = 4;
    while (1)
    {
      uint64_t v33 = v31 - 4;
      if ((v28 & 0xC000000000000001) == 0) {
        break;
      }
      id v34 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      id v35 = (void *)(v31 - 3);
      if (__OFADD__(v33, 1)) {
        goto LABEL_26;
      }
LABEL_15:
      id v138 = v35;
      id v36 = (id)v29;
      id v37 = v34;
      unsigned __int8 v38 = v34[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxLabelView_bucket];
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v149 = v30;
      unint64_t v41 = sub_100529538(v38);
      uint64_t v42 = v30[2];
      BOOL v43 = (v40 & 1) == 0;
      uint64_t v44 = v42 + v43;
      if (__OFADD__(v42, v43)) {
        goto LABEL_27;
      }
      char v45 = v40;
      if (v30[3] >= v44)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          id v48 = v149;
          if (v40) {
            goto LABEL_8;
          }
        }
        else
        {
          sub_1004F3D44();
          id v48 = v149;
          if (v45) {
            goto LABEL_8;
          }
        }
      }
      else
      {
        sub_1004EB870(v44, isUniquelyReferenced_nonNull_native);
        unint64_t v46 = sub_100529538(v38);
        if ((v45 & 1) != (v47 & 1))
        {
LABEL_49:
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
          JUMPOUT(0x10037DB54);
        }
        unint64_t v41 = v46;
        id v48 = v149;
        if (v45)
        {
LABEL_8:
          uint64_t v32 = v48[7];

          *(void *)(v32 + 8 * v41) = v37;
          goto LABEL_9;
        }
      }
      v48[(v41 >> 6) + 8] |= 1 << v41;
      *(unsigned char *)(v48[6] + v41) = v38;
      *(void *)(v48[7] + 8 * v41) = v37;
      uint64_t v49 = v48[2];
      BOOL v50 = __OFADD__(v49, 1);
      uint64_t v51 = v49 + 1;
      if (v50) {
        goto LABEL_28;
      }
      v48[2] = v51;
LABEL_9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v31;
      id v30 = v48;
      uint64_t v29 = (uint64_t)v36;
      if (v138 == v36) {
        goto LABEL_31;
      }
    }
    id v34 = *(id *)(v28 + 8 * v31);
    id v35 = (void *)(v31 - 3);
    if (!__OFADD__(v33, 1)) {
      goto LABEL_15;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
  }
  id v48 = _swiftEmptyDictionarySingleton;
LABEL_31:
  swift_release_n();
  *(void *)&v134[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_labelsByBucket] = v48;

  v148.receiver = v134;
  v148.super_class = (Class)type metadata accessor for TrendDetailVO2MaxChartView();
  uint64_t v52 = (char *)objc_msgSendSuper2(&v148, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v53 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_titleLabel;
  id v54 = *(void **)&v52[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_titleLabel];
  id v55 = self;
  uint64_t v56 = v52;
  id v57 = v54;
  id v58 = [v55 labelColor];
  [v57 setTextColor:v58];

  id v59 = *(void **)&v52[v53];
  id v60 = self;
  id v61 = v59;
  id v139 = v60;
  id v62 = [v60 preferredFontForTextStyle:UIFontTextStyleCallout];
  [v61 setFont:v62];

  uint64_t v63 = *(void **)&v52[v53];
  [v63 setNumberOfLines:0];
  [v56 addSubview:v63];
  uint64_t v64 = *(void **)&v56[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_meter365];
  [v56 addSubview:v64];
  sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
  id v65 = v64;
  Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
  Class v67 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.75686, 0.77647, 0.78431, 1.0).super.isa;
  char v68 = (objc_class *)type metadata accessor for GradientColors();
  BOOL v69 = (char *)objc_allocWithZone(v68);
  *(void *)&v69[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = isa;
  *(void *)&v69[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v67;
  v147.receiver = v69;
  v147.super_class = v68;
  id v70 = [super init];
  Class v71 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
  int v72 = (objc_class *)type metadata accessor for MetricColors();
  char v73 = (char *)objc_allocWithZone(v72);
  *(void *)&v73[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v70;
  *(void *)&v73[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v71;
  v146.receiver = v73;
  v146.super_class = v72;
  id v74 = [super init];
  sub_10037C708((uint64_t)v74);

  uint64_t v75 = *(void **)&v56[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_meter90];
  [v56 addSubview:v75];
  id v76 = v75;
  Class v77 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.43922, 0.22353, 1.0).super.isa;
  Class v78 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.61961, 0.12549, 1.0).super.isa;
  uint64_t v79 = (char *)objc_allocWithZone(v68);
  *(void *)&v79[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v77;
  *(void *)&v79[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v78;
  v145.receiver = v79;
  v145.super_class = v68;
  uint64_t v136 = v68;
  id v80 = [super init];
  Class v81 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.43922, 0.22353, 1.0).super.isa;
  uint64_t v82 = (char *)objc_allocWithZone(v72);
  *(void *)&v82[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v80;
  *(void *)&v82[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v81;
  v144.receiver = v82;
  v144.super_class = v72;
  uint64_t v135 = v72;
  id v83 = [super init];
  sub_10037C708((uint64_t)v83);

  uint64_t v84 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_labelStack;
  uint64_t v85 = *(void **)&v56[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_labelStack];
  [v85 setAxis:1];
  [v85 setAlignment:0];
  [v85 setSpacing:0.0];
  [v85 setDistribution:0];
  [v56 addSubview:v85];
  uint64_t v86 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_labels;
  uint64_t v87 = v56;
  unint64_t v88 = *(void *)&v56[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_labels];
  if (v88 >> 62) {
    goto LABEL_46;
  }
  uint64_t v89 = *(void *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v89)
  {
LABEL_33:
    if (v89 < 1)
    {
      __break(1u);
      goto LABEL_49;
    }
    uint64_t v90 = 0;
    do
    {
      if ((v88 & 0xC000000000000001) != 0) {
        uint64_t v93 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v93 = (char *)*(id *)(v88 + 8 * v90 + 32);
      }
      uint64_t v94 = v93;
      unint64_t v95 = *(void *)&v87[v86];
      if (v95 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v98 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v97 = v98 - 1;
        if (__OFSUB__(v98, 1))
        {
LABEL_45:
          __break(1u);
LABEL_46:
          swift_bridgeObjectRetain();
          uint64_t v89 = _CocoaArrayWrapper.endIndex.getter();
          if (!v89) {
            break;
          }
          goto LABEL_33;
        }
      }
      else
      {
        uint64_t v96 = *(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v97 = v96 - 1;
        if (__OFSUB__(v96, 1)) {
          goto LABEL_45;
        }
      }
      if (v90 == v97) {
        [*(id *)&v94[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxLabelView_separator] setHidden:1];
      }
      ++v90;
      [v87[v84] addArrangedSubview:v94 v134];
      id v91 = [v94 heightAnchor];
      id v92 = [v91 constraintGreaterThanOrEqualToConstant:19.66667];

      [v92 setActive:1];
    }
    while (v89 != v90);
  }
  swift_bridgeObjectRelease();
  [v87 addLayoutGuide:*(void *)&v87[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_labelRightLayoutGuide]];
  [v87 addSubview:*(void *)&v87[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_pill90]];
  [v87 addSubview:*(void *)&v87[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_pill365]];
  uint64_t v99 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_title365;
  id v100 = *(id *)&v87[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_title365];
  id v101 = [v137 mainBundle];
  NSString v102 = String._bridgeToObjectiveC()();
  id v103 = [v101 localizedStringForKey:v102 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v104 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v100 setText:v104];

  id v105 = *(id *)&v87[v99];
  id v106 = [v139 _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1024];
  [v105 setFont:v106];

  id v107 = *(id *)&v87[v99];
  Class v108 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
  Class v109 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.75686, 0.77647, 0.78431, 1.0).super.isa;
  char v110 = (char *)objc_allocWithZone(v136);
  *(void *)&v110[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v108;
  *(void *)&v110[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v109;
  v143.receiver = v110;
  v143.super_class = v136;
  id v111 = [super init];
  Class v112 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
  uint64_t v113 = (char *)objc_allocWithZone(v135);
  *(void *)&v113[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v111;
  *(void *)&v113[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v112;
  v142.receiver = v113;
  v142.super_class = v135;
  uint64_t v114 = (char *)[super init];
  id v115 = *(id *)&v114[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

  [v107 setTextColor:v115];
  [v87 addSubview:*(void *)&v87[v99]];
  uint64_t v116 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_title90;
  id v117 = *(id *)&v87[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_title90];
  id v118 = [v137 mainBundle];
  NSString v119 = String._bridgeToObjectiveC()();
  id v120 = [v118 localizedStringForKey:v119 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v121 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v117 setText:v121];

  id v122 = *(id *)&v87[v116];
  id v123 = [v139 _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1024];
  [v122 setFont:v123];

  id v124 = *(id *)&v87[v116];
  Class v125 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.43922, 0.22353, 1.0).super.isa;
  Class v126 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.61961, 0.12549, 1.0).super.isa;
  double v127 = (char *)objc_allocWithZone(v136);
  *(void *)&v127[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v125;
  *(void *)&v127[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v126;
  v141.receiver = v127;
  v141.super_class = v136;
  id v128 = [super init];
  Class v129 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.43922, 0.22353, 1.0).super.isa;
  Swift::Int v130 = (char *)objc_allocWithZone(v135);
  *(void *)&v130[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v128;
  *(void *)&v130[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v129;
  v140.receiver = v130;
  v140.super_class = v135;
  unint64_t v131 = (char *)[super init];
  id v132 = *(id *)&v131[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

  [v124 setTextColor:v132];
  [v87 addSubview:*(void *)&v87[v116]];
  sub_10037DD60();

  return v87;
}

void sub_10037DB90()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_title365);
  id v2 = self;
  id v3 = [v2 _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1024];
  [v1 setFont:v3];

  double v4 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_title90);
  id v5 = [v2 _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1024];
  [v4 setFont:v5];
}

void sub_10037DD60()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_titleLabel];
  id v2 = [v1 leadingAnchor];
  id v3 = [v0 leadingAnchor];
  id v95 = [v2 constraintEqualToAnchor:v3 constant:16.0];

  id v4 = [v1 trailingAnchor];
  id v5 = [v0 trailingAnchor];
  id v93 = [v4 constraintEqualToAnchor:v5 constant:-16.0];

  id v6 = [v1 topAnchor];
  id v7 = [v0 topAnchor];
  id v91 = [v6 constraintEqualToAnchor:v7 constant:12.0];

  double v8 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_title365];
  id v9 = [v8 topAnchor];
  id v10 = [v1 bottomAnchor];
  id v89 = [v9 constraintEqualToAnchor:v10 constant:1.0];

  id v11 = [v8 centerXAnchor];
  id v107 = *(id *)&v0[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_pill365];
  id v12 = [v107 centerXAnchor];
  id v87 = [v11 constraintEqualToAnchor:v12];

  uint64_t v13 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_title90];
  id v14 = [v13 centerYAnchor];
  id v15 = [v8 centerYAnchor];
  id v130 = [v14 constraintEqualToAnchor:v15];

  id v16 = [v13 centerXAnchor];
  id v104 = *(id *)&v0[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_pill90];
  id v17 = [v104 centerXAnchor];
  id v85 = [v16 constraintEqualToAnchor:v17];

  uint64_t v18 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_labelStack];
  id v19 = [v18 leadingAnchor];
  id v20 = [v0 leadingAnchor];
  id v128 = [v19 constraintEqualToAnchor:v20];

  id v21 = [v18 trailingAnchor];
  id v22 = [v0 trailingAnchor];
  id v124 = [v21 constraintEqualToAnchor:v22];

  id v23 = [v18 topAnchor];
  id v24 = [v8 bottomAnchor];
  id v126 = [v23 constraintEqualToAnchor:v24 constant:5.0];

  id v25 = [v18 bottomAnchor];
  id v26 = [v0 bottomAnchor];
  id v122 = [v25 constraintEqualToAnchor:v26];

  id v27 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_labelRightLayoutGuide];
  id v28 = [v27 leftAnchor];
  id v29 = [v0 leftAnchor];
  id v120 = [v28 constraintEqualToAnchor:v29 constant:15.0];

  id v30 = [v27 topAnchor];
  id v31 = [v18 topAnchor];
  id v118 = [v30 constraintEqualToAnchor:v31];

  id v32 = [v27 bottomAnchor];
  id v33 = [v18 bottomAnchor];
  id v116 = [v32 constraintEqualToAnchor:v33 constant:-12.0];

  id v34 = [v104 centerYAnchor];
  id v35 = [v18 bottomAnchor];
  id v101 = [v34 constraintEqualToAnchor:v35 constant:0.0];

  id v36 = [v107 leftAnchor];
  id v37 = [v27 rightAnchor];
  id v114 = [v36 constraintGreaterThanOrEqualToAnchor:v37 constant:7.0];

  LODWORD(v38) = 1144750080;
  [v114 setPriority:v38];
  id v39 = [v107 rightAnchor];
  id v40 = [v104 leftAnchor];
  id v112 = [v39 constraintLessThanOrEqualToAnchor:v40 constant:-15.0];

  LODWORD(v41) = 1148846080;
  [v112 setPriority:v41];
  id v42 = [v107 rightAnchor];
  id v43 = [v104 leftAnchor];
  id v110 = [v42 constraintEqualToAnchor:v43 constant:-29.0];

  LODWORD(v44) = 1144750080;
  [v110 setPriority:v44];
  id v45 = [v107 centerYAnchor];
  id v46 = [v18 bottomAnchor];
  id v47 = [v45 constraintEqualToAnchor:v46 constant:0.0];

  id v48 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_pill90CenterYConstraint];
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_pill90CenterYConstraint] = v101;
  id v82 = v101;

  uint64_t v49 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_pill365CenterYConstraint];
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_pill365CenterYConstraint] = v47;
  id v80 = v47;

  BOOL v50 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_meter365];
  id v51 = [v50 centerXAnchor];
  id v52 = [v107 centerXAnchor];
  id v108 = [v51 constraintEqualToAnchor:v52];

  id v53 = [v50 topAnchor];
  id v84 = v18;
  id v54 = [v18 topAnchor];
  id v102 = [v53 constraintEqualToAnchor:v54 constant:-1.0];

  id v55 = [v50 bottomAnchor];
  id v56 = [v18 bottomAnchor];
  id v99 = [v55 constraintEqualToAnchor:v56];

  id v57 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_meter90];
  id v58 = [v57 centerXAnchor];
  id v59 = [v104 centerXAnchor];
  id v105 = [v58 constraintEqualToAnchor:v59];

  id v60 = [v57 topAnchor];
  id v61 = [v50 topAnchor];
  id v97 = [v60 constraintEqualToAnchor:v61];

  id v62 = [v57 bottomAnchor];
  id v63 = [v50 bottomAnchor];
  id v64 = [v62 constraintEqualToAnchor:v63];

  id v79 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = xmmword_100760530;
  *(void *)(v65 + 32) = v95;
  *(void *)(v65 + 40) = v93;
  *(void *)(v65 + 48) = v91;
  *(void *)(v65 + 56) = v89;
  *(void *)(v65 + 64) = v87;
  *(void *)(v65 + 72) = v85;
  *(void *)(v65 + 80) = v130;
  *(void *)(v65 + 88) = v128;
  *(void *)(v65 + 96) = v124;
  *(void *)(v65 + 104) = v126;
  *(void *)(v65 + 112) = v122;
  *(void *)(v65 + 120) = v120;
  *(void *)(v65 + 128) = v118;
  *(void *)(v65 + 136) = v116;
  *(void *)(v65 + 144) = v82;
  *(void *)(v65 + 152) = v114;
  *(void *)(v65 + 160) = v112;
  *(void *)(v65 + 168) = v110;
  *(void *)(v65 + 176) = v80;
  *(void *)(v65 + 184) = v108;
  *(void *)(v65 + 192) = v102;
  *(void *)(v65 + 200) = v99;
  *(void *)(v65 + 208) = v105;
  *(void *)(v65 + 216) = v97;
  *(void *)(v65 + 224) = v64;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  id v78 = v82;
  id v83 = v80;
  id v96 = v95;
  id v94 = v93;
  id v92 = v91;
  id v90 = v89;
  id v88 = v87;
  id v86 = v85;
  id v131 = v130;
  id v129 = v128;
  id v125 = v124;
  id v127 = v126;
  id v123 = v122;
  id v121 = v120;
  id v119 = v118;
  id v117 = v116;
  id v115 = v114;
  id v113 = v112;
  id v111 = v110;
  id v109 = v108;
  id v103 = v102;
  id v100 = v99;
  id v106 = v105;
  id v98 = v97;
  id v81 = v64;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v79 activateConstraints:isa];

  id v67 = [v84 arrangedSubviews];
  sub_10007E2D8(0, (unint64_t *)&qword_10094E530);
  unint64_t v68 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v68 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v69 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v69) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v69 = *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v69) {
      goto LABEL_12;
    }
  }
  if (v69 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v69; ++i)
  {
    if ((v68 & 0xC000000000000001) != 0) {
      id v71 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v71 = *(id *)(v68 + 8 * i + 32);
    }
    id v72 = v71;
    type metadata accessor for TrendDetailVO2MaxLabelView();
    uint64_t v73 = swift_dynamicCastClass();
    if (v73)
    {
      uint64_t v74 = v73;
      id v75 = v72;
      id v76 = [v27 rightAnchor];
      id v77 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v74
                                                                  + OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxLabelView_label), "rightAnchor"));
      id v72 = [v76 constraintGreaterThanOrEqualToAnchor:v77];

      [v72 setActive:1];
    }
  }
LABEL_12:

  swift_bridgeObjectRelease();
}

uint64_t sub_10037EC1C(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_titleLabel;
  sub_10007E2D8(0, &qword_100953458);
  id v3 = v1;
  uint64_t v30 = v2;
  id v31 = v1;
  *(void *)&v1[v2] = sub_1005CA0D4();
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_labelStack;
  sub_10007E2D8(0, &qword_100957898);
  uint64_t v28 = v4;
  *(void *)&v3[v4] = sub_1006D13E4();
  uint64_t v27 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_labelRightLayoutGuide;
  *(void *)&v3[v27] = [objc_allocWithZone((Class)UILayoutGuide) init];
  uint64_t v26 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_title365;
  *(void *)&v3[v26] = sub_1005CA0D4();
  uint64_t v25 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_title90;
  *(void *)&v3[v25] = sub_1005CA0D4();
  uint64_t v5 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_meter365;
  type metadata accessor for TrendDetailVO2MaxMeter();
  uint64_t v24 = v5;
  *(void *)&v3[v5] = sub_1006D13E4();
  uint64_t v23 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_meter90;
  *(void *)&v3[v23] = sub_1006D13E4();
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_pill365;
  type metadata accessor for TrendDetailVO2MaxPill();
  uint64_t v22 = v6;
  *(void *)&v3[v6] = sub_1006D13E4();
  id v32 = v3;
  uint64_t v21 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_pill90;
  *(void *)&v3[v21] = sub_1006D13E4();
  specialized ContiguousArray.reserveCapacity(_:)();
  type metadata accessor for TrendDetailVO2MaxLabelView();
  uint64_t v7 = 0;
  id v33 = self;
  do
  {
    char v13 = *((unsigned char *)&off_1008B5FC0 + v7 + 37);
    id v14 = (char *)sub_1006D13E4();
    id v15 = v14;
    id v8 = *(id *)&v14[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxLabelView_label];
    id v9 = [v33 mainBundle];
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [v9 localizedStringForKey:v10 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();

    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v8 setText:v12];

    v15[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxLabelView_bucket] = v13;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    --v7;
  }
  while (v7 != -6);
  uint64_t v16 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_labels;

  *(void *)&v32[v16] = _swiftEmptyArrayStorage;
  uint64_t v17 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_pill90CenterYConstraint;
  *(void *)&v32[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_pill90CenterYConstraint] = 0;
  uint64_t v18 = OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_pill365CenterYConstraint;
  *(void *)&v32[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_pill365CenterYConstraint] = 0;
  *(void *)&v32[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_normalizedValue90] = 0;
  *(void *)&v32[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_normalizedValue365] = 0;

  swift_bridgeObjectRelease();
  id v19 = *(void **)&v32[v18];

  type metadata accessor for TrendDetailVO2MaxChartView();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_10037F0D4()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for TrendDetailVO2MaxChartView();
  [super layoutSubviews];
  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_labelStack] frame];
  double Height = CGRectGetHeight(v6);
  double v2 = Height;
  id v3 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_pill90CenterYConstraint];
  if (v3) {
    [v3 setConstant:-(Height * *(double *)&v0[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_normalizedValue90])];
  }
  id result = *(id *)&v0[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_pill365CenterYConstraint];
  if (result) {
    return [result setConstant:-(v2 * *(double *)&v0[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_normalizedValue365])];
  }
  return result;
}

id sub_10037F1D4()
{
  return sub_10037F1EC(type metadata accessor for TrendDetailVO2MaxChartView);
}

id sub_10037F1EC(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for TrendDetailVO2MaxChartView()
{
  return self;
}

id sub_10037F344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = OBJC_IVAR____TtC10FitnessApp22CatalogTipActivityTile_catalogTipView;
  id v8 = objc_allocWithZone((Class)type metadata accessor for CatalogTipPlainView());
  id v9 = v4;
  id v10 = [v8 initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v11 = sub_10005DB50();
  [v10 setBackgroundColor:v11];

  id v12 = [v10 layer];
  [v12 setCornerRadius:12.0];

  [v10 setClipsToBounds:1];
  uint64_t v13 = UIView.forAutoLayout()();

  *(void *)&v4[v7] = v13;
  id v14 = &v9[OBJC_IVAR____TtC10FitnessApp22CatalogTipActivityTile_tipSectionItem];
  uint64_t v15 = type metadata accessor for CatalogTipSectionItem();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);

  if (a3)
  {
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v16 = 0;
  }
  v20.receiver = v9;
  v20.super_class = (Class)type metadata accessor for CatalogTipActivityTile();
  [super initWithStyle:a1 reuseIdentifier:v16];

  id v18 = v17;
  sub_10037F6B4();

  return v18;
}

void sub_10037F6B4()
{
  swift_getObjectType();
  id v1 = [v0 contentView];
  double v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp22CatalogTipActivityTile_catalogTipView];
  [v1 addSubview:v2];

  uint64_t v23 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100751160;
  id v4 = [v2 topAnchor];
  id v5 = [v0 contentView];
  id v6 = [v5 topAnchor];

  id v7 = [v4 constraintEqualToAnchor:v6 constant:sub_10049E1C0()];
  *(void *)(v3 + 32) = v7;
  id v8 = [v2 leadingAnchor];
  id v9 = [v0 contentView];
  id v10 = [v9 leadingAnchor];

  sub_10049E1C0();
  id v12 = [v8 constraintEqualToAnchor:v10 constant:v11];

  *(void *)(v3 + 40) = v12;
  id v13 = [v2 trailingAnchor];
  id v14 = [v0 contentView];
  id v15 = [v14 trailingAnchor];

  sub_10049E1C0();
  id v17 = [v13 constraintEqualToAnchor:v15 constant:-v16];

  *(void *)(v3 + 48) = v17;
  id v18 = [v2 bottomAnchor];
  id v19 = [v0 contentView];
  id v20 = [v19 bottomAnchor];

  sub_10049E1C0();
  id v22 = [v18 constraintEqualToAnchor:v20 constant:-v21];

  *(void *)(v3 + 56) = v22;
  specialized Array._endMutation()();
  sub_1001ABF94();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v23 activateConstraints:isa];
}

id sub_10037F9E8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CatalogTipActivityTile();
  [super dealloc];
}

uint64_t sub_10037FA6C()
{
  return type metadata accessor for CatalogTipActivityTile();
}

uint64_t type metadata accessor for CatalogTipActivityTile()
{
  uint64_t result = qword_1009593B0;
  if (!qword_1009593B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10037FAC0()
{
  sub_10037FB60();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10037FB60()
{
  if (!qword_1009593C0)
  {
    type metadata accessor for CatalogTipSectionItem();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1009593C0);
    }
  }
}

uint64_t sub_10037FBB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void v27[3] = a2;
  v27[4] = a3;
  void v27[2] = a1;
  uint64_t v6 = type metadata accessor for ScalarDictionary();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for MetricClickElement();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_1009556A0);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CatalogTipSectionItem();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v4 + OBJC_IVAR____TtC10FitnessApp22CatalogTipActivityTile_tipSectionItem;
  swift_beginAccess();
  sub_10037FF64(v18, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_10037FFCC((uint64_t)v13);
    uint64_t v19 = type metadata accessor for ImpressionMetrics();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a4, 1, 1, v19);
  }
  else
  {
    sub_100042D14((uint64_t)v13, (uint64_t)v17);
    double v21 = &v17[*(int *)(v14 + 28)];
    uint64_t v22 = *(void *)v21;
    v27[0] = *((void *)v21 + 1);
    v27[1] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v23 = (void *)ShelfLockupAttributedTagStrings.title.getter();
    uint64_t v24 = a4;
    id v25 = [v23 string];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for MetricClickElement.button(_:), v7);
    static MetricConstants.itemIdentifierType.getter();
    sub_10035193C((uint64_t)_swiftEmptyArrayStorage);
    ScalarDictionary.init()();
    ImpressionMetrics.init(parentId:elementId:name:clickElement:index:idType:additionalFields:custom:)();
    sub_1000E7B9C((uint64_t)v17);
    uint64_t v26 = type metadata accessor for ImpressionMetrics();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v24, 0, 1, v26);
  }
}

unint64_t sub_10037FF44()
{
  return 0xD000000000000016;
}

uint64_t sub_10037FF64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_1009556A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10037FFCC(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_1009556A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10038002C()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC10FitnessApp22CatalogTipActivityTile_catalogTipView;
  id v3 = [objc_allocWithZone((Class)type metadata accessor for CatalogTipPlainView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v4 = sub_10005DB50();
  [v3 setBackgroundColor:v4];

  id v5 = [v3 layer];
  [v5 setCornerRadius:12.0];

  [v3 setClipsToBounds:1];
  uint64_t v6 = UIView.forAutoLayout()();

  *(void *)&v1[v2] = v6;
  uint64_t v7 = &v1[OBJC_IVAR____TtC10FitnessApp22CatalogTipActivityTile_tipSectionItem];
  uint64_t v8 = type metadata accessor for CatalogTipSectionItem();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t getEnumTagSinglePayload for TrendsCoachingGoalInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 6;
  int v5 = v3 - 6;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TrendsCoachingGoalInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 5;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrendsCoachingGoalInfo()
{
  return &type metadata for TrendsCoachingGoalInfo;
}

id sub_100380248(void *a1, void *a2, void *a3)
{
  uint64_t v7 = &v3[OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_activityMoveMode];
  *(void *)uint64_t v7 = 0;
  v7[8] = 1;
  uint64_t v8 = &v3[OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_keyAwards];
  *((void *)v8 + 1) = 0;
  *((void *)v8 + 2) = 0;
  *(void *)uint64_t v8 = 0;
  uint64_t v9 = &v3[OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_onModelDidUpdate];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_observers] = _swiftEmptyArrayStorage;
  sub_10008E75C((uint64_t)a1, (uint64_t)&v3[OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_achievementsDataProvider]);
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_achievementLocalizationProvider] = a2;
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_activityDataProvider] = a3;
  v16.receiver = v3;
  v16.super_class = (Class)type metadata accessor for AwardsActivityTileDataModel();
  id v10 = a2;
  uint64_t v11 = a3;
  id v12 = [super init];
  sub_10007E4EC(a1, a1[3]);
  sub_1000679A4(&qword_100959508, v13, (void (*)(uint64_t))type metadata accessor for AwardsActivityTileDataModel);
  id v14 = v12;
  dispatch thunk of AAUIAwardsDataProviding.add(observer:)();
  [*(id *)(*(void *)&v11[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_activitySummaryListener]+ OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_observers) addObject:v14];
  sub_1003803F4();

  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)a1);
  return v14;
}

uint64_t sub_1003803F4()
{
  uint64_t result = (uint64_t)sub_1000592C0();
  if ((result & 1) == 0)
  {
    uint64_t v2 = self;
    id v3 = [v2 defaultCenter];
    if (qword_10094A6E0 != -1) {
      swift_once();
    }
    BOOL v4 = (void *)qword_100997870;
    int v5 = self;
    id v6 = v4;
    id v7 = [v5 mainQueue];
    uint64_t v8 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v22 = sub_100382838;
    uint64_t v23 = v8;
    uint64_t v18 = _NSConcreteStackBlock;
    uint64_t v19 = 1107296256;
    id v20 = sub_1000711BC;
    double v21 = &unk_1008C3990;
    uint64_t v9 = _Block_copy(&v18);
    swift_release();
    id v10 = [v3 addObserverForName:v6 object:0 queue:v7 usingBlock:v9];
    _Block_release(v9);

    id v11 = [v2 defaultCenter];
    uint64_t v12 = kFIUIFitnessUnitPreferencesDidChangeNotification;
    id v13 = [v5 mainQueue];
    uint64_t v14 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v22 = sub_100382840;
    uint64_t v23 = v14;
    uint64_t v18 = _NSConcreteStackBlock;
    uint64_t v19 = 1107296256;
    id v20 = sub_1000711BC;
    double v21 = &unk_1008C39B8;
    uint64_t v15 = _Block_copy(&v18);
    swift_release();
    id v16 = [v11 addObserverForName:v12 object:0 queue:v13 usingBlock:v15];
    _Block_release(v15);

    sub_1000AFA94((uint64_t *)&unk_1009556C0);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_10074E640;
    *(void *)(v17 + 56) = swift_getObjectType();
    *(void *)(v17 + 32) = v10;
    *(void *)(v17 + 88) = swift_getObjectType();
    *(void *)(v17 + 64) = v16;
    *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_observers) = v17;
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_10038070C()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (v0)
  {
    uint64_t v1 = v0;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v1 + 16) && (unint64_t v2 = sub_1000DE24C((uint64_t)v11), (v3 & 1) != 0))
    {
      sub_10008F484(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v12);
    }
    else
    {
      long long v12 = 0u;
      long long v13 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1000DEDB4((uint64_t)v11);
    if (*((void *)&v13 + 1))
    {
      if (swift_dynamicCast())
      {
        static os_log_type_t.default.getter();
        id v4 = HKLogActivity;
        os_log(_:dso:log:_:_:)();

        swift_beginAccess();
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          id v6 = (void *)Strong;
          id v7 = objc_retain(*(id *)(Strong
                                 + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_achievementLocalizationProvider));

          [v7 setWheelchairUser:16];
        }
        swift_beginAccess();
        uint64_t v8 = swift_unknownObjectWeakLoadStrong();
        if (v8)
        {
          uint64_t v9 = (void *)v8;
          id v10 = *(void (**)(void))(v8 + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_onModelDidUpdate);
          sub_10008A670((uint64_t)v10);

          if (v10)
          {
            v10();
            sub_10005E5F8((uint64_t)v10);
          }
        }
      }
    }
    else
    {
      sub_100074898((uint64_t)&v12);
    }
  }
}

void sub_100380904()
{
  static os_log_type_t.default.getter();
  id v0 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v2 = (void *)Strong;
    char v3 = *(void (**)(void))(Strong + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_onModelDidUpdate);
    sub_10008A670((uint64_t)v3);

    if (v3)
    {
      v3();
      sub_10005E5F8((uint64_t)v3);
    }
  }
}

void sub_1003809DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  id v77 = *(void (***)(void, uint64_t))(v2 - 8);
  __chkstk_darwin(v2);
  id v4 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E4EC((void *)(v0 + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_achievementsDataProvider), *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_achievementsDataProvider + 24));
  unint64_t v9 = dispatch thunk of AAUIAwardsDataProviding.topThreeAchievements()();
  unint64_t v10 = v9;
  if (v9 >> 62) {
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v75 = v4;
  uint64_t v76 = v5;
  uint64_t v73 = v8;
  uint64_t v74 = v6;
  if (v11 < 3)
  {
    swift_bridgeObjectRelease();
    long long v12 = 0;
    id v13 = 0;
    id v14 = 0;
    if (!*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_keyAwards)) {
      goto LABEL_22;
    }
LABEL_17:
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    uint64_t v72 = static OS_dispatch_queue.main.getter();
    uint64_t v47 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v48 = (void *)swift_allocObject();
    v48[2] = v14;
    v48[3] = v13;
    v48[4] = v12;
    v48[5] = v47;
    aBlock[4] = sub_10038282C;
    aBlock[5] = v48;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100070394;
    aBlock[3] = &unk_1008C3968;
    uint64_t v49 = _Block_copy(aBlock);
    sub_1002D5604(v14, v13, v12);
    swift_release();
    BOOL v50 = v77;
    id v51 = v12;
    id v52 = v13;
    id v53 = v73;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1000679A4((unint64_t *)&qword_100953B50, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    id v54 = v75;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v55 = (void *)v72;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v49);

    sub_100382788(v14, v52, v51);
    ((void (**)(char *, uint64_t))v50)[1](v54, v2);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v53, v76);
    return;
  }
  if ((v10 & 0xC000000000000001) == 0)
  {
    unint64_t v15 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v15)
    {
      if (v15 != 1)
      {
        if (v15 >= 3)
        {
          id v16 = *(void **)(v10 + 40);
          uint64_t v17 = *(void **)(v10 + 48);
          id v14 = *(id *)(v10 + 32);
          id v13 = v16;
          id v18 = v17;
          goto LABEL_11;
        }
LABEL_29:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_29;
  }
  id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_11:
  long long v12 = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = v1 + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_keyAwards;
  id v20 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_keyAwards);
  if (v20)
  {
    if (v14)
    {
      uint64_t v69 = v1;
      uint64_t v65 = v2;
      double v21 = *(void **)(v19 + 8);
      uint64_t v66 = *(void **)(v19 + 16);
      uint64_t v22 = v66;
      id v67 = v21;
      uint64_t v68 = sub_10007E2D8(0, (unint64_t *)&qword_1009556B0);
      id v23 = v20;
      id v24 = v21;
      id v25 = v22;
      id v26 = v14;
      id v27 = v13;
      id v28 = v12;
      uint64_t v72 = (uint64_t)v12;
      id v29 = v13;
      id v30 = v28;
      id v31 = v23;
      id v64 = v24;
      id v32 = v25;
      id v33 = v26;
      id v34 = v27;
      id v35 = v30;
      id v13 = v29;
      long long v12 = (void *)v72;
      id v36 = v35;
      sub_1002D5604(v20, v67, v66);
      sub_1002D5604(v14, v13, v12);
      id v67 = v31;
      char v37 = static NSObject.== infix(_:_:)();
      id v70 = v32;
      id v71 = v36;
      if (v37)
      {
        id v62 = v33;
        id v38 = v64;
        id v39 = v64;
        id v40 = v32;
        id v41 = v34;
        id v42 = v36;
        uint64_t v66 = v39;
        id v61 = v41;
        char v43 = static NSObject.== infix(_:_:)();
        id v63 = v40;
        if (v43)
        {
          char v44 = static NSObject.== infix(_:_:)();

          id v45 = v61;
          char v46 = v44 ^ 1;
        }
        else
        {

          id v45 = v61;
          char v46 = 1;
        }
        uint64_t v2 = v65;
        id v57 = v67;
        id v33 = v62;

        id v56 = v63;
      }
      else
      {
        char v46 = 1;
        id v56 = v34;
        uint64_t v66 = v33;
        id v38 = v64;
        uint64_t v2 = v65;
        id v57 = v67;
      }

      id v58 = v70;
      id v59 = v71;

      if ((v46 & 1) == 0) {
        goto LABEL_22;
      }
    }
    goto LABEL_17;
  }
  if (v14) {
    goto LABEL_17;
  }
LABEL_22:
  static os_log_type_t.default.getter();
  id v77 = (void (**)(void, uint64_t))HKLogActivity;
  os_log(_:dso:log:_:_:)();
  sub_100382788(v14, v13, v12);
  id v60 = v77;
}

void sub_1003810A4(void *a1, void *a2, void *a3)
{
  static os_log_type_t.default.getter();
  uint64_t v6 = (void *)HKLogActivity;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1007509E0;
  id v8 = v6;
  if (a1)
  {
    sub_1000AFA94((uint64_t *)&unk_1009594F8);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v10 = 0;
    unint64_t v9 = 0xE000000000000000;
  }
  else
  {
    unint64_t v9 = 0xE300000000000000;
    uint64_t v10 = 7104878;
  }
  *(void *)(v7 + 56) = &type metadata for String;
  *(void *)(v7 + 64) = sub_1000AA64C();
  *(void *)(v7 + 32) = v10;
  *(void *)(v7 + 40) = v9;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    long long v12 = (void *)Strong;
    id v13 = (void *)(Strong + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_keyAwards);
    id v14 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_keyAwards);
    unint64_t v15 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_keyAwards + 8);
    id v16 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_keyAwards + 16);
    void *v13 = a1;
    v13[1] = a2;
    v13[2] = a3;
    sub_1002D5604(a1, a2, a3);
    sub_100382788(v14, v15, v16);
  }
  swift_beginAccess();
  uint64_t v17 = swift_unknownObjectWeakLoadStrong();
  if (v17)
  {
    id v18 = (void *)v17;
    uint64_t v19 = *(void (**)(void))(v17 + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_onModelDidUpdate);
    sub_10008A670((uint64_t)v19);

    if (v19)
    {
      v19();
      sub_10005E5F8((uint64_t)v19);
    }
  }
}

void sub_10038129C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Calendar();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  long long v12 = (char *)&v20 - v11;
  static Calendar.current.getter();
  Date.init()();
  Calendar.startOfDay(for:)();
  id v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v9, v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v14 = [*(id *)(*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_activityDataProvider)+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_summaryCache) activitySummaryForCacheIndex:sub_1000CBADC()];
  if (v14)
  {
    unint64_t v15 = v14;
    uint64_t v16 = v1 + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_activityMoveMode;
    id v17 = *(id *)(v1 + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_activityMoveMode);
    char v18 = *(unsigned char *)(v1 + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_activityMoveMode + 8);
    id v19 = [v14 activityMoveMode];
    if ((v18 & 1) == 0 && v17 == v19)
    {
      v13(v12, v6);

      return;
    }
    *(void *)uint64_t v16 = [v15 activityMoveMode];
    *(unsigned char *)(v16 + 8) = 0;
    sub_1003809DC();
  }
  v13(v12, v6);
}

id sub_1003814F8()
{
  uint64_t v1 = v0;
  sub_10007E4EC(&v0[OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_achievementsDataProvider], *(void *)&v0[OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_achievementsDataProvider + 24]);
  sub_1000679A4(&qword_100959508, v2, (void (*)(uint64_t))type metadata accessor for AwardsActivityTileDataModel);
  dispatch thunk of AAUIAwardsDataProviding.remove(observer:)();
  [*(id *)(*(void *)(*(void *)&v1[OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_activityDataProvider]+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_activitySummaryListener)+ OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_observers) removeObject:v1];
  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_observers];
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = self;
    uint64_t v6 = v3 + 32;
    swift_bridgeObjectRetain_n();
    do
    {
      sub_10008F484(v6, (uint64_t)v10);
      id v7 = [v5 defaultCenter];
      sub_10007E4EC(v10, v10[3]);
      [v7 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];

      swift_unknownObjectRelease();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v10);
      v6 += 32;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease_n();
  }
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for AwardsActivityTileDataModel();
  return [super dealloc];
}

uint64_t type metadata accessor for AwardsActivityTileDataModel()
{
  return self;
}

void sub_1003817C0(uint64_t a1, unint64_t a2, unint64_t a3, char a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v7 = (void *)Strong;
    sub_10008E75C(Strong + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_achievementsDataProvider, (uint64_t)v25);

    sub_10007E4EC(v25, v25[3]);
    id v23 = (void *)dispatch thunk of AAUIAwardsDataProviding.topThreeAchievements()();
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v25);
    if (!(a2 >> 62))
    {
LABEL_3:
      uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  else
  {
    id v23 = _swiftEmptyArrayStorage;
    if (!(a2 >> 62)) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_4:
  objc_super v9 = _swiftEmptyArrayStorage;
  if (v8)
  {
    v25[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v8 < 0)
    {
      __break(1u);
      goto LABEL_31;
    }
    uint64_t v10 = 0;
    do
    {
      if ((a2 & 0xC000000000000001) != 0) {
        id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v11 = *(id *)(a2 + 8 * v10 + 32);
      }
      long long v12 = v11;
      ++v10;
      id v13 = [v11 template];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v8 != v10);
    objc_super v9 = (void *)v25[0];
  }
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v15 = _swiftEmptyArrayStorage;
  if (v14)
  {
    v25[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v14 & 0x8000000000000000) == 0)
    {
      uint64_t v16 = 0;
      do
      {
        if ((a3 & 0xC000000000000001) != 0) {
          id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v17 = *(id *)(a3 + 8 * v16 + 32);
        }
        char v18 = v17;
        ++v16;
        id v19 = [v17 template];

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      while (v14 != v16);
      unint64_t v15 = (void *)v25[0];
      goto LABEL_22;
    }
LABEL_31:
    __break(1u);
    return;
  }
LABEL_22:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v20 = sub_100381C50((unint64_t)v23, (unint64_t)v9, (uint64_t)v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if (a4 & 1) != 0 && (v20)
  {
    swift_beginAccess();
    uint64_t v21 = swift_unknownObjectWeakLoadStrong();
    if (v21)
    {
      uint64_t v22 = (void *)v21;
      sub_1003809DC();
    }
  }
}

uint64_t sub_100381AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  return sub_100382120(a1, a2, a6);
}

void sub_100381B78()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1003809DC();
  }
}

uint64_t sub_100381C50(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if (a1 >> 62) {
    goto LABEL_66;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v5)
  {
    uint64_t v6 = 0;
    unint64_t v40 = v4 & 0xC000000000000001;
    uint64_t v35 = v4 + 32;
    unint64_t v39 = a2 & 0xC000000000000001;
    uint64_t v7 = a3 & 0xFFFFFFFFFFFFFF8;
    if (a3 < 0) {
      uint64_t v7 = a3;
    }
    uint64_t v34 = v7;
    uint64_t v37 = v5;
    unint64_t v38 = a3 & 0xC000000000000001;
    uint64_t v8 = &selRef_setModalPresentationStyle_;
    uint64_t v36 = v4;
    while (1)
    {
      if (v40)
      {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v10 = __OFADD__(v6++, 1);
        if (v10) {
          goto LABEL_65;
        }
      }
      else
      {
        id v9 = *(id *)(v35 + 8 * v6);
        BOOL v10 = __OFADD__(v6++, 1);
        if (v10) {
          goto LABEL_65;
        }
      }
      id v41 = v9;
      id v11 = [v9 v8[461] v34];
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
        if (!v12)
        {
LABEL_19:

          swift_bridgeObjectRelease();
          goto LABEL_32;
        }
      }
      else
      {
        uint64_t v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v12) {
          goto LABEL_19;
        }
      }
      if (v39) {
        id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v13 = *(id *)(a2 + 32);
      }
      uint64_t v14 = v13;
      sub_10007E2D8(0, &qword_1009594F0);
      char v15 = static NSObject.== infix(_:_:)();

      if (v15)
      {
LABEL_57:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return 1;
      }
      if (v12 != 1)
      {
        if (v39)
        {
          uint64_t v16 = 1;
          while (1)
          {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
            uint64_t v4 = v16 + 1;
            if (__OFADD__(v16, 1)) {
              break;
            }
            char v17 = static NSObject.== infix(_:_:)();
            swift_unknownObjectRelease();
            if (v17) {
              goto LABEL_57;
            }
            ++v16;
            if (v4 == v12) {
              goto LABEL_30;
            }
          }
          __break(1u);
LABEL_62:
          __break(1u);
        }
        else
        {
          uint64_t v18 = 5;
          while (1)
          {
            uint64_t v4 = v18 - 3;
            if (__OFADD__(v18 - 4, 1)) {
              break;
            }
            id v19 = *(id *)(a2 + 8 * v18);
            char v20 = static NSObject.== infix(_:_:)();

            if (v20) {
              goto LABEL_57;
            }
            ++v18;
            if (v4 == v12)
            {
LABEL_30:

              swift_bridgeObjectRelease();
              uint64_t v4 = v36;
              goto LABEL_31;
            }
          }
        }
        __break(1u);
        goto LABEL_64;
      }

      swift_bridgeObjectRelease();
LABEL_31:
      uint64_t v8 = &selRef_setModalPresentationStyle_;
LABEL_32:
      id v21 = [v41 v8[461]];
      if ((unint64_t)a3 >> 62) {
        break;
      }
      uint64_t v22 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v22) {
        goto LABEL_34;
      }
LABEL_52:

      swift_bridgeObjectRelease();
      uint64_t v31 = v37;
      id v32 = v41;
LABEL_53:

      if (v6 == v31) {
        goto LABEL_67;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    if (!v22) {
      goto LABEL_52;
    }
LABEL_34:
    if (v38) {
      id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v23 = *(id *)(a3 + 32);
    }
    id v24 = v23;
    sub_10007E2D8(0, &qword_1009594F0);
    char v25 = static NSObject.== infix(_:_:)();

    if (v25)
    {
LABEL_58:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      return 1;
    }
    if (v22 == 1)
    {

      swift_bridgeObjectRelease();
LABEL_50:
      uint64_t v31 = v37;
      id v32 = v41;
      uint64_t v8 = &selRef_setModalPresentationStyle_;
      goto LABEL_53;
    }
    if (v38)
    {
      uint64_t v26 = 1;
      while (1)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v4 = v26 + 1;
        if (__OFADD__(v26, 1)) {
          goto LABEL_62;
        }
        char v27 = static NSObject.== infix(_:_:)();
        swift_unknownObjectRelease();
        if (v27) {
          goto LABEL_58;
        }
        ++v26;
        if (v4 == v22) {
          goto LABEL_49;
        }
      }
    }
    uint64_t v28 = 5;
    while (1)
    {
      uint64_t v4 = v28 - 3;
      if (__OFADD__(v28 - 4, 1)) {
        break;
      }
      id v29 = *(id *)(a3 + 8 * v28);
      char v30 = static NSObject.== infix(_:_:)();

      if (v30) {
        goto LABEL_58;
      }
      ++v28;
      if (v4 == v22)
      {
LABEL_49:

        swift_bridgeObjectRelease();
        uint64_t v4 = v36;
        goto LABEL_50;
      }
    }
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  }
LABEL_67:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100382120(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v18 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = a1;
  *(void *)(v14 + 32) = a2;
  *(unsigned char *)(v14 + 40) = a3;
  aBlock[4] = sub_1003824A8;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008C38C8;
  char v15 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000679A4((unint64_t *)&qword_100953B50, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v17);
}

uint64_t sub_100382428()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100382460()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1003824A8()
{
  sub_1003817C0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_1003824B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  id v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = a1;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = a2;
  uint64_t v13 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000679A4((unint64_t *)&qword_100953B50, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v16);
}

void sub_10038276C()
{
}

void sub_100382788(void *a1, void *a2, void *a3)
{
  if (a1)
  {
  }
}

uint64_t sub_1003827D8()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1)
  {
  }
  swift_release();

  return swift_deallocObject();
}

void sub_10038282C()
{
  sub_1003810A4(v0[2], v0[3], v0[4]);
}

void sub_100382838()
{
}

void sub_100382840()
{
}

uint64_t sub_100382868(uint64_t a1, int16x8_t a2)
{
  a2.i64[0] = 0x8002000010002;
  return sub_100382908(a2, a1, (uint64_t)"SeymourDiscoverySheetCoordinator: Failed to query content availability: %s");
}

uint64_t sub_100382890(uint64_t a1, int16x8_t a2)
{
  a2.i64[0] = 0x8002200010002;
  return sub_100382908(a2, a1, (uint64_t)"SeymourDiscoverySheetCoordinator: Unable to fetch notice privacy preference: %{public}s.");
}

uint64_t sub_1003828B8(uint64_t a1, int16x8_t a2)
{
  a2.i64[0] = 0x8002200010002;
  return sub_100382908(a2, a1, (uint64_t)"SeymourDiscoverySheetCoordinator: Unable to fetch intro sheet configuration: %{public}s.");
}

uint64_t sub_1003828E0(uint64_t a1, int16x8_t a2)
{
  a2.i64[0] = 0x8002200010002;
  return sub_100382908(a2, a1, (uint64_t)"SeymourDiscoverySheetCoordinator: Unable to fetch what's new sheet configuration: %{public}s.");
}

uint64_t sub_100382908(int16x8_t a1, uint64_t a2, uint64_t a3)
{
  int16x8_t v21 = a1;
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v19 = v5;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v20 = v3;
    uint64_t v23 = v13;
    unsigned __int32 v14 = vmovn_s16(v21).u32[0];
    v21.i64[0] = a3;
    *(_DWORD *)uint64_t v12 = v14;
    v18[1] = v12 + 4;
    swift_getErrorValue();
    uint64_t v15 = Error.logOutput.getter();
    uint64_t v22 = sub_10008F1F4(v15, v16, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, (const char *)v21.i64[0], v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

id sub_100382B58()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100959610);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IntroSheet();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_introSheetConfiguration];
  swift_beginAccess();
  sub_1000AEF2C(v13, (uint64_t)v8, &qword_100959610);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10008DB18((uint64_t)v8, &qword_100959610);
    static Log.default.getter();
    unsigned __int32 v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      unint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "SeymourDiscoverySheetCoordinator: unexpected nil for intro sheet configuration", v16, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    char v18 = sub_10057FCB8();
    uint64_t v30 = v19;
    uint64_t v21 = v20;
    uint64_t v23 = v22;
    char v24 = v18 & 1;
    uint64_t v26 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_eventHub];
    uint64_t v25 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_eventHub + 8];
    char v27 = (char *)objc_allocWithZone((Class)type metadata accessor for DiscoverySheetViewController());
    swift_unknownObjectRetain();
    uint64_t v28 = v1;
    id v17 = sub_100384AB0(v24, v30, v21, v23, v28, v26, v25, 0, v27);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v17;
}

id sub_100382E88()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100959608);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WhatsNewSheet();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_whatsNewSheetConfiguraion];
  swift_beginAccess();
  sub_1000AEF2C(v13, (uint64_t)v8, &qword_100959608);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10008DB18((uint64_t)v8, &qword_100959608);
    static Log.default.getter();
    unsigned __int32 v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      unint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "SeymourDiscoverySheetCoordinator: unexpected nil for what's new sheet configuration", v16, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    char v18 = sub_10057FF04();
    uint64_t v30 = v19;
    uint64_t v21 = v20;
    uint64_t v23 = v22;
    char v24 = v18 & 1;
    uint64_t v26 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_eventHub];
    uint64_t v25 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_eventHub + 8];
    char v27 = (char *)objc_allocWithZone((Class)type metadata accessor for DiscoverySheetViewController());
    swift_unknownObjectRetain();
    uint64_t v28 = v1;
    id v17 = sub_100384AB0(v24, v30, v21, v23, v28, v26, v25, 1, v27);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v17;
}

void sub_1003831B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v31[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v7 = &v31[-v6];
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v31[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  os_log_type_t v15 = &v31[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static Log.default.getter();
  v16._countAndFlagsBits = 0xD000000000000015;
  v17._countAndFlagsBits = 0xD00000000000007BLL;
  v17._object = (void *)0x80000001007C3030;
  v16._object = (void *)0x80000001007C30B0;
  Logger.trace(file:function:)(v17, v16);
  (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
  char v18 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_userDefaults);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v11, v1 + OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_firstAppLaunchDate, v8);
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  uint64_t v20 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v20(v11, v8);
  NSString v21 = String._bridgeToObjectiveC()();
  [v18 setObject:isa forKey:v21];

  uint64_t v22 = v1 + OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_lastIntroSheetViewDate;
  swift_beginAccess();
  sub_1000AEF2C(v22, (uint64_t)v7, (uint64_t *)&unk_10095B890);
  uint64_t v23 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48);
  Class v24 = 0;
  if (v23(v7, 1, v8) != 1)
  {
    Class v24 = Date._bridgeToObjectiveC()().super.isa;
    v20(v7, v8);
  }
  NSString v25 = String._bridgeToObjectiveC()();
  [v18 setObject:v24 forKey:v25];
  swift_unknownObjectRelease();

  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_lastWhatsNewSheetViewVersion + 8)) {
    Class v26 = 0;
  }
  else {
    Class v26 = Int._bridgeToObjectiveC()().super.super.isa;
  }
  NSString v27 = String._bridgeToObjectiveC()();
  [v18 setObject:v26 forKey:v27];
  swift_unknownObjectRelease();

  uint64_t v28 = v1 + OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_lastWhatsNewSheetViewDate;
  swift_beginAccess();
  sub_1000AEF2C(v28, (uint64_t)v4, (uint64_t *)&unk_10095B890);
  Class v29 = 0;
  if (v23(v4, 1, v8) != 1)
  {
    Class v29 = Date._bridgeToObjectiveC()().super.isa;
    v20(v4, v8);
  }
  NSString v30 = String._bridgeToObjectiveC()();
  [v18 setObject:v29 forKey:v30];
  swift_unknownObjectRelease();
}

id sub_100383670()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SeymourDiscoverySheetCoordinator();
  [super dealloc];
}

void sub_10038380C(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for WhatsNewSheet();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v36 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_100959608);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  Swift::String v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v34 - v18;
  if (a1)
  {
    static Log.default.getter();
    NSString v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      NSString v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = v4;
      *(_WORD *)NSString v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "SeymourDiscoverySheetCoordinator what's new sheet appeared", v27, 2u);
      uint64_t v4 = v35;
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    Date.init()();
    uint64_t v28 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v12, 0, 1, v28);
    uint64_t v29 = v2 + OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_lastWhatsNewSheetViewDate;
    swift_beginAccess();
    sub_1000B1774((uint64_t)v12, v29, (uint64_t *)&unk_10095B890);
    swift_endAccess();
    uint64_t v30 = v2 + OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_whatsNewSheetConfiguraion;
    swift_beginAccess();
    sub_1000AEF2C(v30, (uint64_t)v9, &qword_100959608);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4))
    {
      sub_10008DB18((uint64_t)v9, &qword_100959608);
      uint64_t v31 = 1;
    }
    else
    {
      id v32 = v36;
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v36, v9, v4);
      sub_10008DB18((uint64_t)v9, &qword_100959608);
      uint64_t v31 = WhatsNewSheet.version.getter();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v32, v4);
    }
    uint64_t v33 = v2 + OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_lastWhatsNewSheetViewVersion;
    *(void *)uint64_t v33 = v31;
    *(unsigned char *)(v33 + 8) = 0;
    sub_1003831B8();
  }
  else
  {
    static Log.default.getter();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "SeymourDiscoverySheetCoordinator: intro sheet appeared", v22, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    Date.init()();
    uint64_t v23 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v12, 0, 1, v23);
    uint64_t v24 = v2 + OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_lastIntroSheetViewDate;
    swift_beginAccess();
    sub_1000B1774((uint64_t)v12, v24, (uint64_t *)&unk_10095B890);
    swift_endAccess();
    sub_1003831B8();
    [*(id *)(v2 + OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_badgingProvider) refreshBadgeCount];
  }
}

uint64_t sub_100383D48(void *a1)
{
  id v42 = a1;
  uint64_t v1 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v44 = *(void *)(v1 - 8);
  uint64_t v45 = v1;
  __chkstk_darwin(v1);
  char v43 = (char *)v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v39 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NoticePrivacyPreference();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v35 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v35 - v14;
  static NoticePrivacyPreference.Version.current.getter();
  NoticePrivacyPreference.init(state:version:)();
  static Log.default.getter();
  Swift::String v16 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  unint64_t v40 = v15;
  uint64_t v17 = v6;
  v16(v12, v15, v6);
  unint64_t v38 = v5;
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v37 = v3;
    os_log_type_t v21 = (uint8_t *)v20;
    uint64_t v36 = swift_slowAlloc();
    uint64_t v47 = v36;
    *(_DWORD *)os_log_type_t v21 = 136446210;
    v35[1] = v21 + 4;
    v16(v9, v12, v17);
    uint64_t v22 = String.init<A>(describing:)();
    uint64_t v46 = sub_10008F1F4(v22, v23, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v7 + 8);
    v24(v12, v17);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "SeymourDiscoverySheetCoordinator updating preference: %{public}s", v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v39 + 8))(v38, v37);
  }
  else
  {
    uint64_t v24 = *(void (**)(char *, uint64_t))(v7 + 8);
    v24(v12, v17);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v38, v3);
  }
  sub_10007E4EC((void *)(v41 + OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_privacyPreferenceClient), *(void *)(v41 + OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_privacyPreferenceClient + 24));
  NSString v25 = v43;
  os_log_type_t v26 = v40;
  dispatch thunk of PrivacyPreferenceClientProtocol.updateNoticePrivacyPreference(_:)();
  uint64_t v27 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v28 = swift_allocObject();
  uint64_t v29 = v42;
  *(void *)(v28 + 16) = v42;
  *(void *)(v28 + 24) = v27;
  id v30 = v29;
  uint64_t v31 = v45;
  id v32 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_100384684;
  *(void *)(v33 + 24) = v28;
  swift_retain();
  v32(sub_10006D8B4, v33);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v25, v31);
  return ((uint64_t (*)(char *, uint64_t))v24)(v26, v17);
}

void sub_10038424C(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DiscoverySheetPrivacyAcknowledged();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v26 - v13;
  if (*(unsigned char *)(a1 + 8) != 1)
  {
    static Log.default.getter();
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v15, v19)) {
      goto LABEL_8;
    }
    uint64_t v27 = v5;
    uint64_t v17 = a2;
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v19, "SeymourDiscoverySheetCoordinator updated Notice Privacy Preference", v20, 2u);
    goto LABEL_6;
  }
  static Log.default.getter();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v27 = v5;
    uint64_t v17 = a2;
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "SeymourDiscoverySheetCoordinator error updating Notice Privacy Preference", v18, 2u);
    uint64_t v14 = v11;
LABEL_6:
    swift_slowDealloc();
    a2 = v17;
    uint64_t v5 = v27;
    goto LABEL_8;
  }
  uint64_t v14 = v11;
LABEL_8:

  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  [a2 dismissViewControllerAnimated:1 completion:0];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v22 = (void *)Strong;
    swift_unknownObjectRetain();

    swift_getObjectType();
    DiscoverySheetPrivacyAcknowledged.init()();
    sub_1000293DC(&qword_100959600, (void (*)(uint64_t))&type metadata accessor for DiscoverySheetPrivacyAcknowledged);
    dispatch thunk of EventHubProtocol.publish<A>(_:)();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  swift_beginAccess();
  uint64_t v23 = swift_unknownObjectWeakLoadStrong();
  if (v23)
  {
    uint64_t v24 = (void *)v23;
    NSString v25 = (void *)swift_unknownObjectWeakLoadStrong();

    if (v25)
    {
      [v25 navigateToSeymourTab];
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_10038460C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100384644()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100384684(uint64_t a1)
{
  sub_10038424C(a1, *(void **)(v1 + 16));
}

uint64_t sub_10038468C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v22 = a2;
  uint64_t v23 = a4;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v21 = v4;
    uint64_t v13 = v12;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v25 = v19;
    *(_DWORD *)uint64_t v13 = 136446722;
    uint64_t v20 = v6;
    swift_getErrorValue();
    uint64_t v14 = Error.logOutput.getter();
    uint64_t v24 = sub_10008F1F4(v14, v15, &v25);
    uint64_t v18 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v13 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_10008F1F4(v22, a3, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 22) = 2050;
    uint64_t v24 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Caught %{public}s at %{public}s:%{public}lu", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v9, v20);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_100384974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  void v6[2] = a2;
  v6[3] = a3;
  void v6[4] = a1;
  swift_retain();
  swift_errorRetain();

  return Promise.init(asyncOperation:)();
}

uint64_t sub_100384A18(void (*a1)(uint64_t *), uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t), uint64_t a4, uint64_t a5)
{
  a3(&v8, a5);
  uint64_t v6 = v8;
  char v9 = 0;
  a1(&v8);

  return sub_10006D814(v6, 0);
}

id sub_100384AB0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, int a8, char *a9)
{
  int v41 = a8;
  uint64_t v39 = a6;
  uint64_t v40 = a7;
  id v44 = a5;
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v42 = a2;
  char v12 = a1 & 1;
  uint64_t v13 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v13 - 8);
  unint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AFA94((uint64_t *)&unk_10095F630);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for MetricPage();
  uint64_t v19 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&a9[OBJC_IVAR____TtC10FitnessApp28DiscoverySheetViewController_delegate + 8] = 0;
  uint64_t v22 = swift_unknownObjectWeakInit();
  uint64_t v23 = &a9[OBJC_IVAR____TtC10FitnessApp28DiscoverySheetViewController_dataModel];
  *uint64_t v23 = v12;
  *((void *)v23 + 1) = a2;
  *((void *)v23 + 2) = a3;
  *((void *)v23 + 3) = a4;
  *(void *)(v22 + 8) = &off_1008C39E0;
  swift_unknownObjectWeakAssign();
  uint64_t v24 = &a9[OBJC_IVAR____TtC10FitnessApp28DiscoverySheetViewController_eventHub];
  uint64_t v25 = v40;
  *(void *)uint64_t v24 = v39;
  *((void *)v24 + 1) = v25;
  BOOL v26 = (v41 & 1) == 0;
  v41 &= 1u;
  uint64_t v27 = 0x77654E7374616857;
  if (v26) {
    uint64_t v27 = 0x6F72746E49;
  }
  uint64_t v40 = v27;
  uint64_t v28 = enum case for MetricPageCategory.discovery(_:);
  uint64_t v29 = type metadata accessor for MetricPageCategory();
  uint64_t v30 = *(void *)(v29 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 104))(v18, v28, v29);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v18, 0, 1, v29);
  uint64_t v31 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v15, 1, 1, v31);
  id v32 = a9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  MetricPage.init(pageIdentifier:pageType:pageContext:pageUrl:pageName:)();
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v32[OBJC_IVAR____TtC10FitnessApp28DiscoverySheetViewController_metricPage], v21, v43);
  v32[OBJC_IVAR____TtC10FitnessApp28DiscoverySheetViewController_pageIdentifier] = v41;

  NSString v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v34 = (objc_class *)type metadata accessor for DiscoverySheetViewController();
  v45.receiver = v32;
  v45.super_class = v34;
  id v35 = [super initWithTitle:v33 detailText:0 icon:0 contentLayout:2 v37 v38];

  swift_unknownObjectRelease();
  return v35;
}

uint64_t sub_100384E78()
{
  return sub_10001EC00(&qword_100959618);
}

uint64_t sub_100384E84()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100384E90()
{
  return sub_10001EC00(&qword_100959620);
}

uint64_t sub_100384E9C()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100384EA8()
{
  return sub_10001EC00(&qword_100950218);
}

uint64_t sub_100384EB4()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100384EC0()
{
  return sub_10001EC00(&qword_100950088);
}

uint64_t sub_100384ECC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100384F04()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100384F10()
{
  return swift_deallocObject();
}

uint64_t sub_100384F48()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100384F54()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100384F8C(uint64_t a1)
{
  return sub_10038468C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100384FAC(uint64_t a1)
{
  return sub_100384974(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100384FB4()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100384FC4()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100385008()
{
  swift_release();
  swift_errorRelease();

  return swift_deallocObject();
}

uint64_t sub_100385048(void (*a1)(uint64_t *), uint64_t a2)
{
  return sub_100384A18(a1, a2, *(void (**)(uint64_t *__return_ptr, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

unsigned char *storeEnumTagSinglePayload for CardLoadingState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100385148);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unint64_t sub_100385174()
{
  unint64_t result = qword_100959638;
  if (!qword_100959638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100959638);
  }
  return result;
}

void *sub_1003851C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(os_unfair_lock_s **)(*(void *)&v0[OBJC_IVAR___CHCloudDeviceProvider_accountDeviceProvider] + 32);
  int v3 = v2 + 4;
  unsigned int v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  uint64_t v5 = 0;
  sub_1002365A4(v3, v39);
  os_unfair_lock_unlock(v4);
  uint64_t v6 = *(void *)&v39[0];
  uint64_t v7 = sub_100368940();
  id v8 = v1;
  swift_bridgeObjectRetain();
  char v9 = sub_100386220((unint64_t)v7, v6);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  uint64_t v10 = v9[2];
  if (v10)
  {
    swift_bridgeObjectRetain();
    os_log_type_t v11 = v9 + 8;
    char v12 = _swiftEmptyArrayStorage;
    do
    {
      long long v14 = *(v11 - 1);
      v39[0] = *(v11 - 2);
      v39[1] = v14;
      long long v15 = v11[1];
      v39[2] = *v11;
      v39[3] = v15;
      long long v16 = v11[3];
      v39[4] = v11[2];
      v39[5] = v16;
      sub_1003853D8((uint64_t *)v39, (uint64_t)&v30);
      uint64_t v17 = v31;
      if (v31)
      {
        uint64_t v29 = v5;
        uint64_t v18 = v30;
        uint64_t v19 = v33;
        uint64_t v20 = v35;
        uint64_t v25 = v34;
        uint64_t v26 = v32;
        __int16 v21 = v36;
        uint64_t v27 = v38;
        uint64_t v28 = v37;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v12 = sub_1001E7848(0, v12[2] + 1, 1, v12);
        }
        unint64_t v23 = v12[2];
        unint64_t v22 = v12[3];
        if (v23 >= v22 >> 1) {
          char v12 = sub_1001E7848((void *)(v22 > 1), v23 + 1, 1, v12);
        }
        v12[2] = v23 + 1;
        uint64_t v13 = &v12[9 * v23];
        _OWORD v13[4] = v18;
        v13[5] = v17;
        v13[6] = v26;
        v13[7] = v19;
        v13[8] = v25;
        v13[9] = v20;
        *((unsigned char *)v13 + 80) = v21 & 1;
        *((unsigned char *)v13 + 81) = HIBYTE(v21) & 1;
        uint64_t v5 = v29;
        v13[11] = v28;
        v13[12] = v27;
      }
      v11 += 6;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  return v12;
}

double sub_1003853D8@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = a1[3];
  uint64_t v52 = a1[1];
  uint64_t v4 = a1[6];
  uint64_t v3 = a1[7];
  uint64_t v53 = a1[9];
  uint64_t v5 = a1[10];
  uint64_t v6 = a1[11];
  uint64_t v51 = a1[8];
  if (!v52 || !v2 || !v6)
  {
    os_log_type_t v19 = static os_log_type_t.error.getter();
    uint64_t v20 = (void *)HKLogActivity;
    os_log_type_t v21 = v19;
    if (!os_log_type_enabled(HKLogActivity, v19))
    {
LABEL_20:
      *(void *)(a2 + 64) = 0;
      double result = 0.0;
      *(_OWORD *)(a2 + 32) = 0u;
      *(_OWORD *)(a2 + 48) = 0u;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return result;
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    loga = v20;
    unint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    *(_DWORD *)unint64_t v22 = 136315138;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v23 = String.init<A>(describing:)();
    sub_10008F1F4(v23, v24, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v25 = loga;
    _os_log_impl((void *)&_mh_execute_header, loga, v21, "Account device missing info %s", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
LABEL_19:
    swift_slowDealloc();

    goto LABEL_20;
  }
  *(void *)type = a1[2];
  if (!v3 || !v53)
  {
    os_log_type_t v26 = static os_log_type_t.error.getter();
    uint64_t v27 = (void *)HKLogActivity;
    os_log_type_t v28 = v26;
    if (!os_log_type_enabled(HKLogActivity, v26)) {
      goto LABEL_20;
    }
    os_log_type_t log = v28;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    objc_super v45 = v27;
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136315138;
    uint64_t v30 = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v31 = String.init<A>(describing:)();
    sub_10008F1F4(v31, v32, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v33 = "Account device missing operating system info %s";
    goto LABEL_23;
  }
  uint64_t v50 = *a1;
  if (v4 == 5459817 && v3 == 0xE300000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    uint64_t v7 = 0;
    goto LABEL_10;
  }
  if ((v4 != 0x534F6863746177 || v3 != 0xE700000000000000)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    os_log_type_t v40 = static os_log_type_t.error.getter();
    int v41 = (void *)HKLogActivity;
    os_log_type_t v42 = v40;
    if (!os_log_type_enabled(HKLogActivity, v40)) {
      goto LABEL_20;
    }
    swift_bridgeObjectRetain_n();
    os_log_type_t log = v42;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    objc_super v45 = v41;
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 136315138;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v43 = String.init<A>(describing:)();
    sub_10008F1F4(v43, v44, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v33 = "Account device isn't a phone or watch %s";
LABEL_23:
    uint64_t v25 = v45;
    _os_log_impl((void *)&_mh_execute_header, v45, log, v33, v30, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    goto LABEL_19;
  }
  uint64_t v7 = 1;
LABEL_10:
  uint64_t v8 = qword_10094A9B0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_100997CB8;
  if (!*(void *)(qword_100997CB8 + 16) || (unint64_t v11 = sub_1000DA1C0(v5, v9), (v12 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    os_log_type_t v34 = static os_log_type_t.error.getter();
    uint64_t v35 = (void *)HKLogActivity;
    os_log_type_t v36 = v34;
    if (!os_log_type_enabled(HKLogActivity, v34)) {
      goto LABEL_20;
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    logb = v35;
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 136315138;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v38 = String.init<A>(describing:)();
    sub_10008F1F4(v38, v39, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v25 = logb;
    _os_log_impl((void *)&_mh_execute_header, logb, v36, "Account device model doesn't match list %s", v37, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    goto LABEL_19;
  }
  uint64_t v13 = *(void *)(v10 + 56) + 24 * v11;
  uint64_t v15 = *(void *)v13;
  uint64_t v14 = *(void *)(v13 + 8);
  int v16 = *(unsigned __int8 *)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = 256;
  if (!v16) {
    uint64_t v18 = 0;
  }
  *(void *)a2 = *(void *)type;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v50;
  *(void *)(a2 + 24) = v52;
  *(void *)(a2 + 32) = v15;
  *(void *)(a2 + 40) = v14;
  *(void *)(a2 + 48) = v18 | v7;
  *(void *)(a2 + 56) = v51;
  *(void *)(a2 + 64) = v53;
  return result;
}

id sub_100385EB8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CloudDeviceProvider();
  return [super dealloc];
}

uint64_t sub_100385F38(uint64_t result, void *a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v3 = 0;
  unint64_t v27 = v2 - 1;
  uint64_t v4 = result + 64;
  uint64_t v5 = _swiftEmptyArrayStorage;
  unint64_t v29 = *(void *)(result + 16);
  uint64_t v26 = result + 64;
  do
  {
    os_log_type_t v28 = v5;
    if (v3 <= v2) {
      unint64_t v6 = v2;
    }
    else {
      unint64_t v6 = v3;
    }
    unint64_t v36 = v6;
    uint64_t v7 = (uint64_t *)(v4 + 96 * v3);
    unint64_t v8 = v3;
    while (1)
    {
      if (v36 == v8)
      {
        __break(1u);
        return result;
      }
      uint64_t v9 = *(v7 - 3);
      uint64_t v10 = *(v7 - 1);
      uint64_t v33 = *(v7 - 2);
      uint64_t v34 = *(v7 - 4);
      uint64_t v11 = v7[1];
      uint64_t v12 = v7[3];
      uint64_t v31 = v7[2];
      uint64_t v32 = *v7;
      uint64_t v13 = v7[4];
      uint64_t v14 = v7[5];
      uint64_t v15 = v7[7];
      uint64_t v30 = v7[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v39 = v9;
      swift_bridgeObjectRetain();
      uint64_t v38 = v10;
      swift_bridgeObjectRetain();
      uint64_t v37 = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v16 = [a2 osVersion];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;

      if (!v14)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      if (v13 == v17 && v14 == v19) {
        break;
      }
      char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v20) {
        goto LABEL_16;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_8:
      ++v8;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double result = swift_bridgeObjectRelease();
      v7 += 12;
      if (v29 == v8) {
        return (uint64_t)v28;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_16:
    double result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v5 = v28;
    if ((result & 1) == 0)
    {
      double result = sub_1001C9394(0, v28[2] + 1, 1);
      uint64_t v5 = v28;
    }
    uint64_t v21 = v12;
    unint64_t v23 = v5[2];
    unint64_t v22 = v5[3];
    uint64_t v24 = v15;
    if (v23 >= v22 >> 1)
    {
      double result = sub_1001C9394(v22 > 1, v23 + 1, 1);
      uint64_t v24 = v15;
      uint64_t v21 = v12;
      uint64_t v5 = v28;
    }
    unint64_t v3 = v8 + 1;
    v5[2] = v23 + 1;
    uint64_t v25 = &v5[12 * v23];
    void v25[4] = v34;
    v25[5] = v39;
    v25[6] = v33;
    v25[7] = v38;
    v25[8] = v32;
    v25[9] = v37;
    v25[10] = v31;
    v25[11] = v21;
    v25[12] = v13;
    v25[13] = v14;
    v25[14] = v30;
    v25[15] = v24;
    uint64_t v4 = v26;
    unint64_t v2 = v29;
  }
  while (v27 != v8);
  return (uint64_t)v5;
}

void *sub_100386220(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      unint64_t v5 = v3 & 0xC000000000000001;
      uint64_t v6 = 4;
      uint64_t v22 = a2;
      unint64_t v23 = v3;
      uint64_t v21 = v4;
      unint64_t v25 = v3 & 0xC000000000000001;
      do
      {
        uint64_t v8 = v6 - 4;
        if (v5)
        {
          id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v10 = v6 - 3;
          if (__OFADD__(v8, 1)) {
            goto LABEL_15;
          }
        }
        else
        {
          id v9 = *(id *)(v3 + 8 * v6);
          uint64_t v10 = v6 - 3;
          if (__OFADD__(v8, 1))
          {
LABEL_15:
            __break(1u);
            goto LABEL_16;
          }
        }
        uint64_t v11 = v9;
        uint64_t v12 = swift_bridgeObjectRetain();
        uint64_t v7 = (void *)sub_100385F38(v12, v11);
        swift_bridgeObjectRelease();

        if (!v7[2])
        {
          swift_bridgeObjectRelease();
          os_log_type_t v13 = static os_log_type_t.error.getter();
          uint64_t v14 = (void *)HKLogActivity;
          os_log_type_t v15 = v13;
          if (os_log_type_enabled(HKLogActivity, v13))
          {
            id v16 = v11;
            uint64_t v11 = v14;
            uint64_t v17 = (uint8_t *)swift_slowAlloc();
            uint64_t v18 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v17 = 138412290;
            os_log_type_t type = v15;
            uint64_t v19 = v16;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *uint64_t v18 = v16;
            uint64_t v4 = v21;

            _os_log_impl((void *)&_mh_execute_header, v11, type, "No device on account that match %@", v17, 0xCu);
            sub_1000AFA94((uint64_t *)&unk_100955620);
            swift_arrayDestroy();
            a2 = v22;
            swift_slowDealloc();
            unint64_t v3 = v23;
            swift_slowDealloc();
          }
          uint64_t v7 = _swiftEmptyArrayStorage;
          unint64_t v5 = v25;
        }

        sub_1001E41E0((uint64_t)v7);
        ++v6;
      }
      while (v10 != v4);
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1003864C4()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100386504(unint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  if (a2 || !a1) {
    return a3(0);
  }
  unint64_t v13 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v5 = result;
    if (result) {
      goto LABEL_5;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    ((void (*)(void *, void))a3)(_swiftEmptyArrayStorage, 0);
    return swift_bridgeObjectRelease();
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_18;
  }
LABEL_5:
  if (v5 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v8 = *(id *)(a1 + 8 * i + 32);
    }
    id v9 = v8;
    uint64_t v10 = (objc_class *)type metadata accessor for DownhillRunBridge();
    uint64_t v11 = (char *)objc_allocWithZone(v10);
    *(void *)&v11[OBJC_IVAR___CHWorkoutDownhillRun_downhillRun] = v9;
    v12.receiver = v11;
    v12.super_class = v10;
    if (objc_msgSendSuper2(&v12, "init"))
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  swift_bridgeObjectRelease();
  ((void (*)(unint64_t, void))a3)(v13, 0);
  return swift_bridgeObjectRelease();
}

void sub_1003867AC(objc_class *a1, uint64_t a2, uint64_t a3)
{
  Class isa = a1;
  if (a1)
  {
    type metadata accessor for DownhillRunBridge();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
  }
  if (a2) {
    uint64_t v6 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, Class))(a3 + 16))(a3, isa);
}

uint64_t sub_1003868EC()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

void sub_100386924(objc_class *a1, uint64_t a2)
{
  sub_1003867AC(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_10038692C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100386964(unint64_t a1, uint64_t a2)
{
  return sub_100386504(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

unint64_t sub_100386970()
{
  unint64_t result = qword_100959680;
  if (!qword_100959680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100959680);
  }
  return result;
}

unint64_t sub_1003869C8()
{
  unint64_t result = qword_100959688[0];
  if (!qword_100959688[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100959688);
  }
  return result;
}

uint64_t sub_100386A1C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(_OWORD *)(v2 + 24) = *v1;
  return _swift_task_switch(sub_100386A44, 0, 0);
}

uint64_t sub_100386A44()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  swift_retain();
  uint64_t v2 = sub_100387E50(v1);
  swift_release();
  swift_release();
  unint64_t v3 = *(uint64_t (**)(void *))(v0 + 8);
  return v3(v2);
}

uint64_t sub_100386AE4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100386B04, 0, 0);
}

uint64_t sub_100386B04()
{
  **(void **)(v0 + 16) = &off_1008B6128;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_100386B30()
{
  unint64_t result = qword_1009596A0[0];
  if (!qword_1009596A0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1009596A0);
  }
  return result;
}

uint64_t sub_100386B84(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10024D294();
  *uint64_t v5 = v2;
  v5[1] = sub_10005DB5C;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_100386C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v7 = *(void *)(v3 + 8);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1009596C0 + dword_1009596C0);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_1001A0E60;
  return v10(a2, a3, v7);
}

ValueMetadata *type metadata accessor for HistoryFilterEntityQuery()
{
  return &type metadata for HistoryFilterEntityQuery;
}

unsigned __int8 *sub_100386D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_100388934();
  swift_bridgeObjectRetain();
  uint64_t v7 = String.init<A>(_:)();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    id v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_10025BCC4();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    id v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    id v9 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  unint64_t v13 = sub_100386E00(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_100386E00(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v14 = v9 * a3;
              unsigned __int8 v15 = v11 + v12;
              BOOL v16 = v14 >= v15;
              unint64_t v9 = v14 - v15;
              if (!v16) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_67;
    }
    if (a2)
    {
      unsigned __int8 v26 = a3 + 48;
      unsigned __int8 v27 = a3 + 55;
      unsigned __int8 v28 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v26 = 58;
      }
      else
      {
        unsigned __int8 v28 = 97;
        unsigned __int8 v27 = 65;
      }
      if (result)
      {
        unint64_t v29 = 0;
        do
        {
          unsigned int v30 = *result;
          if (v30 < 0x30 || v30 >= v26)
          {
            if (v30 < 0x41 || v30 >= v27)
            {
              uint64_t v13 = 0;
              if (v30 < 0x61 || v30 >= v28) {
                return (unsigned __int8 *)v13;
              }
              char v31 = -87;
            }
            else
            {
              char v31 = -55;
            }
          }
          else
          {
            char v31 = -48;
          }
          if (!is_mul_ok(v29, a3)) {
            return 0;
          }
          unint64_t v32 = v29 * a3;
          unsigned __int8 v33 = v30 + v31;
          BOOL v16 = __CFADD__(v32, v33);
          unint64_t v29 = v32 + v33;
          if (v16) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v29;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_67:
    __break(1u);
    return result;
  }
  uint64_t v17 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v18 = a3 + 48;
  unsigned __int8 v19 = a3 + 55;
  unsigned __int8 v20 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v18 = 58;
  }
  else
  {
    unsigned __int8 v20 = 97;
    unsigned __int8 v19 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  uint64_t v21 = result + 1;
  do
  {
    unsigned int v22 = *v21;
    if (v22 < 0x30 || v22 >= v18)
    {
      if (v22 < 0x41 || v22 >= v19)
      {
        uint64_t v13 = 0;
        if (v22 < 0x61 || v22 >= v20) {
          return (unsigned __int8 *)v13;
        }
        char v23 = -87;
      }
      else
      {
        char v23 = -55;
      }
    }
    else
    {
      char v23 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v24 = v9 * a3;
    unsigned __int8 v25 = v22 + v23;
    BOOL v16 = __CFADD__(v24, v25);
    unint64_t v9 = v24 + v25;
    if (v16) {
      return 0;
    }
    ++v21;
    --v17;
  }
  while (v17);
  return (unsigned __int8 *)v9;
}

uint64_t sub_10038707C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, int64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    unsigned int v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    unsigned int v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    unsigned int v11 = (void *)_StringObject.sharedUTF8.getter();
  }
  uint64_t result = sub_100387150((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    char v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

uint64_t sub_100387150(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, int64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    uint64_t result = sub_1003B13A0(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_96;
  }
  uint64_t result = String.UTF8View._foreignDistance(from:to:)();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    uint64_t result = sub_1003B13A0(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    uint64_t result = sub_1003B13A0(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    uint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_92;
  }
  if (v17 < a3 >> 16)
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  uint64_t result = String.UTF8View._foreignDistance(from:to:)();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_91;
  }
  if (v18 < v15)
  {
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  unsigned __int8 v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    unsigned __int8 v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v33 = a6 + 48;
        unsigned __int8 v34 = a6 + 55;
        unsigned __int8 v35 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v33 = 58;
        }
        else
        {
          unsigned __int8 v35 = 97;
          unsigned __int8 v34 = 65;
        }
        if (v19)
        {
          unint64_t v24 = 0;
          unint64_t v36 = v19 + 1;
          uint64_t v37 = result - 1;
          do
          {
            unsigned int v38 = *v36;
            if (v38 < 0x30 || v38 >= v33)
            {
              if (v38 < 0x41 || v38 >= v34)
              {
                uint64_t v29 = 0;
                if (v38 < 0x61 || v38 >= v35) {
                  return v29;
                }
                char v39 = -87;
              }
              else
              {
                char v39 = -55;
              }
            }
            else
            {
              char v39 = -48;
            }
            if (!is_mul_ok(v24, a6)) {
              return 0;
            }
            unint64_t v40 = v24 * a6;
            unsigned __int8 v41 = v38 + v39;
            BOOL v32 = __CFADD__(v40, v41);
            unint64_t v24 = v40 + v41;
            if (v32) {
              return 0;
            }
            ++v36;
            --v37;
          }
          while (v37);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_95;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v42 = a6 + 48;
      unsigned __int8 v43 = a6 + 55;
      unsigned __int8 v44 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v42 = 58;
      }
      else
      {
        unsigned __int8 v44 = 97;
        unsigned __int8 v43 = 65;
      }
      if (v19)
      {
        unint64_t v24 = 0;
        while (1)
        {
          unsigned int v45 = *v19;
          if (v45 < 0x30 || v45 >= v42)
          {
            if (v45 < 0x41 || v45 >= v43)
            {
              uint64_t v29 = 0;
              if (v45 < 0x61 || v45 >= v44) {
                return v29;
              }
              char v46 = -87;
            }
            else
            {
              char v46 = -55;
            }
          }
          else
          {
            char v46 = -48;
          }
          if (!is_mul_ok(v24, a6)) {
            return 0;
          }
          unint64_t v47 = v24 * a6;
          unsigned __int8 v48 = v45 + v46;
          BOOL v32 = __CFADD__(v47, v48);
          unint64_t v24 = v47 + v48;
          if (v32) {
            return 0;
          }
          ++v19;
          if (!--result) {
            return v24;
          }
        }
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 48;
      unsigned __int8 v22 = a6 + 55;
      unsigned __int8 v23 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v21 = 58;
      }
      else
      {
        unsigned __int8 v23 = 97;
        unsigned __int8 v22 = 65;
      }
      if (v19)
      {
        unint64_t v24 = 0;
        unsigned __int8 v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              uint64_t v29 = 0;
              if (v27 < 0x61 || v27 >= v23) {
                return v29;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          if (!is_mul_ok(v24, a6)) {
            return 0;
          }
          unint64_t v30 = v24 * a6;
          unsigned __int8 v31 = v27 + v28;
          BOOL v32 = v30 >= v31;
          unint64_t v24 = v30 - v31;
          if (!v32) {
            return 0;
          }
          ++v25;
          if (!--v26) {
            return v24;
          }
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
  return result;
}

uint64_t sub_100387570(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a6) & 0xF;
  }
  else {
    uint64_t v6 = a5 & 0xFFFFFFFFFFFFLL;
  }
  if (a3 == a5 && a4 == a6 && !(a1 >> 16) && a2 >> 16 == v6) {
    return 1;
  }
  else {
    return _stringCompareInternal(_:_:_:_:expecting:)() & 1;
  }
}

unsigned __int8 *sub_1003875E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnyRegexOutput.Element();
  uint64_t v59 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v9 = (char *)v56 - v8;
  uint64_t v10 = sub_1000AFA94(&qword_1009596C8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_1009596D0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v60 = v13;
  uint64_t v61 = v14;
  __chkstk_darwin(v13);
  unint64_t v16 = (char *)v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_1009596D8);
  __chkstk_darwin(v17 - 8);
  unsigned __int8 v19 = (char *)v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000AFA94(&qword_1009596E0);
  __chkstk_darwin(v20);
  unint64_t v24 = (char *)v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 0x79726F74736968 && a2 == 0xE700000000000000) {
    return 0;
  }
  uint64_t v57 = v21;
  uint64_t v58 = v22;
  if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
    return 0;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x80000001007BB630
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    return 0;
  }
  if (a1 == 0x2F79726F74736968 && a2 == 0xED00007365766964
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    return 0;
  }
  if (a1 == 0xD000000000000013 && a2 == 0x80000001007BB5F0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    return 0;
  }
  if (a1 == 0x2F79726F74736968 && a2 == 0xEE00736B63617473
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    return 0;
  }
  Regex<A>.init(_:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v19, 0, 1, v57);
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v24, v19, v57);
  Regex.firstMatch(in:)();
  v56[4] = 0;
  uint64_t v28 = v60;
  uint64_t v27 = v61;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v12, 1, v60) == 1)
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v24, v57);
    sub_10008DB18((uint64_t)v12, &qword_1009596C8);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v16, v12, v28);
  swift_getKeyPath();
  Regex.Match.subscript.getter();
  uint64_t v29 = swift_release();
  if (v62 != 3)
  {
    (*(void (**)(char *, uint64_t))(v61 + 8))(v16, v28);
LABEL_39:
    (*(void (**)(char *, uint64_t))(v58 + 8))(v24, v57);
    return 0;
  }
  __chkstk_darwin(v29);
  v56[-2] = 1;
  swift_getKeyPath();
  Regex.Match.subscript.getter();
  swift_release();
  uint64_t v30 = AnyRegexOutput.Element.range.getter();
  uint64_t v56[2] = v31;
  v56[3] = v30;
  char v33 = v32;
  unsigned __int8 v34 = *(uint64_t (**)(char *, uint64_t))(v59 + 8);
  uint64_t v35 = v34(v9, v4);
  if (v33) {
    goto LABEL_38;
  }
  __chkstk_darwin(v35);
  v56[-2] = 2;
  swift_getKeyPath();
  Regex.Match.subscript.getter();
  swift_release();
  uint64_t v59 = AnyRegexOutput.Element.range.getter();
  v56[1] = v36;
  char v38 = v37;
  v34(v6, v4);
  if (v38) {
    goto LABEL_38;
  }
  unint64_t v39 = String.subscript.getter();
  uint64_t v43 = v42;
  if (!((v39 ^ v40) >> 14))
  {
    swift_bridgeObjectRelease();
    goto LABEL_38;
  }
  uint64_t v44 = v39;
  uint64_t v45 = v40;
  uint64_t v46 = v41;
  uint64_t v47 = sub_10038707C(v39, v40, v41, v42, 10);
  if ((v48 & 0x100) != 0)
  {
    unsigned __int8 v25 = sub_100386D0C(v44, v45, v46, v43, 10);
    char v51 = v50;
    swift_bridgeObjectRelease();
    if ((v51 & 1) == 0) {
      goto LABEL_34;
    }
LABEL_38:
    (*(void (**)(char *, uint64_t))(v61 + 8))(v16, v60);
    goto LABEL_39;
  }
  unsigned __int8 v25 = (unsigned __int8 *)v47;
  char v49 = v48;
  swift_bridgeObjectRelease();
  if (v49) {
    goto LABEL_38;
  }
LABEL_34:
  if ([self historyFilterDisambiguatesLocationForActivityType:v25])
  {
    unint64_t v52 = String.subscript.getter();
    sub_100387570(v52, v53, v54, v55, 0x726F6F646E69, 0xE600000000000000);
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v61 + 8))(v16, v60);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v24, v57);
  return v25;
}

void *sub_100387E50(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  uint64_t v3 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v5 = *(v2 - 1);
    uint64_t v6 = *v2;
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1003875E8(v5, v6);
    __int16 v9 = v8;
    swift_bridgeObjectRelease();
    if ((v9 & 0xFF00) != 0x700)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_1001E7EE4(0, v3[2] + 1, 1, v3);
      }
      unint64_t v11 = v3[2];
      unint64_t v10 = v3[3];
      if (v11 >= v10 >> 1) {
        uint64_t v3 = sub_1001E7EE4((void *)(v10 > 1), v11 + 1, 1, v3);
      }
      v3[2] = v11 + 1;
      uint64_t v4 = &v3[2 * v11];
      v4[4] = v7;
      *((_WORD *)v4 + 20) = v9;
    }
    v2 += 2;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_100387F78(uint64_t result)
{
  unint64_t v1 = 0;
  unint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = result + 40;
  unint64_t v16 = _swiftEmptyArrayStorage;
  uint64_t v15 = result + 40;
LABEL_2:
  if (v1 <= v2) {
    unint64_t v4 = v2;
  }
  else {
    unint64_t v4 = v1;
  }
  unint64_t v5 = v4 + 1;
  uint64_t v6 = (__int16 *)(v3 + 16 * v1);
  while (1)
  {
    if (v2 == v1) {
      return (uint64_t)v16;
    }
    if (v5 == ++v1) {
      break;
    }
    uint64_t v7 = v6 + 8;
    uint64_t v8 = *((void *)v6 - 1);
    __int16 v9 = *v6;
    sub_1004B79C0(v8, *v6);
    sub_1000A06D0();
    char v10 = StringProtocol.localizedCaseInsensitiveContains<A>(_:)();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v6 = v7;
    if (v10)
    {
      unint64_t v11 = v16;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_1001C93B4(0, v16[2] + 1, 1);
        unint64_t v11 = v16;
      }
      unint64_t v13 = v11[2];
      unint64_t v12 = v11[3];
      if (v13 >= v12 >> 1)
      {
        uint64_t result = sub_1001C93B4(v12 > 1, v13 + 1, 1);
        unint64_t v11 = v16;
      }
      v11[2] = v13 + 1;
      unint64_t v16 = v11;
      uint64_t v14 = &v11[2 * v13];
      v14[4] = v8;
      *((_WORD *)v14 + 20) = v9;
      uint64_t v3 = v15;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1003880F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchTimeInterval();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (id *)((char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  char v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v32 - v11;
  AppDependency.wrappedValue.getter();
  unint64_t v13 = v39;
  uint64_t v14 = *(void *)&v39[OBJC_IVAR___CHHistoryDataProvider_historyFilterValues];
  swift_bridgeObjectRetain();

  if (*(void *)(v14 + 16) <= 1uLL)
  {
    uint64_t v34 = v7;
    uint64_t v35 = v6;
    uint64_t v36 = v3;
    swift_bridgeObjectRelease();
    dispatch_semaphore_t v15 = dispatch_semaphore_create(0);
    AppDependency.wrappedValue.getter();
    unint64_t v16 = v39;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v15;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = sub_1003888B0;
    *(void *)(v18 + 24) = v17;
    id v32 = v16;
    unsigned __int8 v19 = &v16[OBJC_IVAR___CHHistoryDataProvider_onChangeHandlers];
    swift_beginAccess();
    uint64_t v20 = *(void **)v19;
    char v33 = v15;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)unsigned __int8 v19 = v20;
    uint64_t v37 = v2;
    uint64_t v38 = a1;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v20 = sub_10001E94C(0, v20[2] + 1, 1, v20);
      *(void *)unsigned __int8 v19 = v20;
    }
    unint64_t v23 = v20[2];
    unint64_t v22 = v20[3];
    if (v23 >= v22 >> 1)
    {
      uint64_t v20 = sub_10001E94C((void *)(v22 > 1), v23 + 1, 1, v20);
      *(void *)unsigned __int8 v19 = v20;
    }
    v20[2] = v23 + 1;
    unint64_t v24 = &v20[2 * v23];
    v24[4] = sub_100020A64;
    v24[5] = v18;
    swift_endAccess();

    swift_release();
    static DispatchTime.now()();
    *unint64_t v5 = 15;
    uint64_t v26 = v36;
    uint64_t v25 = v37;
    (*(void (**)(void *, void, uint64_t))(v36 + 104))(v5, enum case for DispatchTimeInterval.seconds(_:), v37);
    + infix(_:_:)();
    (*(void (**)(void *, uint64_t))(v26 + 8))(v5, v25);
    uint64_t v27 = v35;
    uint64_t v28 = *(void (**)(char *, uint64_t))(v34 + 8);
    v28(v10, v35);
    uint64_t v29 = v33;
    OS_dispatch_semaphore.wait(timeout:)();
    v28(v12, v27);
    AppDependency.wrappedValue.getter();

    uint64_t v30 = v39;
    uint64_t v14 = *(void *)&v39[OBJC_IVAR___CHHistoryDataProvider_historyFilterValues];
    swift_bridgeObjectRetain();
  }
  return v14;
}

uint64_t sub_10038849C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1003884BC, 0, 0);
}

uint64_t sub_1003884BC()
{
  uint64_t v1 = sub_1003880F0(*(void *)(v0 + 16));
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    sub_1001C8F04(0, v2, 0);
    uint64_t v3 = 0;
    unint64_t v4 = _swiftEmptyArrayStorage[2];
    uint64_t v5 = 2 * v4;
    do
    {
      uint64_t v6 = *(void *)(v1 + v3 * 8 + 32);
      __int16 v7 = *(_WORD *)(v1 + v3 * 8 + 40);
      unint64_t v8 = _swiftEmptyArrayStorage[3];
      unint64_t v9 = v4 + 1;
      if (v4 >= v8 >> 1) {
        sub_1001C8F04(v8 > 1, v4 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v9;
      char v10 = &_swiftEmptyArrayStorage[v5 + v3];
      void v10[4] = v6;
      *((_WORD *)v10 + 20) = v7;
      v3 += 2;
      unint64_t v4 = v9;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = *(uint64_t (**)(void *))(v0 + 8);
  return v11(_swiftEmptyArrayStorage);
}

uint64_t sub_100388604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return _swift_task_switch(sub_100388628, 0, 0);
}

uint64_t sub_100388628()
{
  uint64_t v1 = sub_1003880F0(v0[8]);
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_100387F78(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = v2;
    unint64_t v4 = (__int16 *)(v2 + 40);
    do
    {
      uint64_t v5 = v0[6];
      uint64_t v6 = v0[7];
      __int16 v7 = *v4;
      uint64_t v8 = *((void *)v4 - 1);
      v0[2] = sub_1004B79C0(v8, *v4);
      v0[3] = v9;
      v0[4] = v5;
      v0[5] = v6;
      sub_1000A06D0();
      uint64_t v10 = StringProtocol.localizedCaseInsensitiveCompare<A>(_:)();
      swift_bridgeObjectRelease();
      if (!v10)
      {
        swift_bridgeObjectRelease_n();
        sub_1000AFA94(&qword_10094E930);
        uint64_t v13 = (void *)swift_allocObject();
        *((_OWORD *)v13 + 1) = xmmword_1007509E0;
        _OWORD v13[4] = v8;
        *((_WORD *)v13 + 20) = v7;
        goto LABEL_13;
      }
      v4 += 8;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    int64_t v11 = *(void *)(v23 + 16);
    if (!v11) {
      goto LABEL_11;
    }
    sub_1001C8F04(0, v11, 0);
    uint64_t v12 = 0;
    uint64_t v13 = _swiftEmptyArrayStorage;
    unint64_t v14 = _swiftEmptyArrayStorage[2];
    uint64_t v15 = 2 * v14;
    do
    {
      uint64_t v16 = *(void *)(v23 + v12 * 8 + 32);
      __int16 v17 = *(_WORD *)(v23 + v12 * 8 + 40);
      unint64_t v18 = _swiftEmptyArrayStorage[3];
      unint64_t v19 = v14 + 1;
      if (v14 >= v18 >> 1) {
        sub_1001C8F04(v18 > 1, v14 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v19;
      uint64_t v20 = &_swiftEmptyArrayStorage[v15 + v12];
      v20[4] = v16;
      *((_WORD *)v20 + 20) = v17;
      v12 += 2;
      unint64_t v14 = v19;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
LABEL_13:
  uint64_t v21 = (uint64_t (*)(void *))v0[1];
  return v21(v13);
}

uint64_t sub_100388878()
{
  return swift_deallocObject();
}

Swift::Int sub_1003888B0()
{
  return OS_dispatch_semaphore.signal()();
}

uint64_t sub_1003888D4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100388914()
{
  return 8;
}

void *sub_100388928(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_100388934()
{
  unint64_t result = qword_1009596E8;
  if (!qword_1009596E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009596E8);
  }
  return result;
}

uint64_t *sub_100388988(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v8 = *(int *)(sub_1000AFA94((uint64_t *)&unk_100966460) + 48);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for ArtworkDimension();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100388AA0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    uint64_t v3 = a1 + *(int *)(sub_1000AFA94((uint64_t *)&unk_100966460) + 48);
    uint64_t v4 = type metadata accessor for ArtworkDimension();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(v3, v4);
  }
  return result;
}

_OWORD *sub_100388B2C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(sub_1000AFA94((uint64_t *)&unk_100966460) + 48);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for ArtworkDimension();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_100388C00(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100388CE4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(sub_1000AFA94((uint64_t *)&unk_100966460) + 48);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = type metadata accessor for ArtworkDimension();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100388CE4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SeymourArtworkSizingBehavior();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for SeymourArtworkSizingBehavior()
{
  uint64_t result = qword_100959768;
  if (!qword_100959768) {
    return swift_getSingletonMetadata();
  }
  return result;
}

_OWORD *sub_100388D8C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(sub_1000AFA94((uint64_t *)&unk_100966460) + 48);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for ArtworkDimension();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_100388E60(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100388CE4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(sub_1000AFA94((uint64_t *)&unk_100966460) + 48);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = type metadata accessor for ArtworkDimension();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100388F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_100388F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_100388F98()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100388FA8()
{
  uint64_t result = type metadata accessor for ArtworkDimension();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[4] = v2;
    v2[5] = &unk_100760A70;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for OvernightMetricsView()
{
  return &type metadata for OvernightMetricsView;
}

uint64_t sub_100389060()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10038907C(void *a1, char a2)
{
  char v3 = a2 & 1;
  uint64_t v4 = type metadata accessor for OvernightMetricsViewModel.Summary();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v46 = v4;
  uint64_t v47 = v5;
  __chkstk_darwin(v4);
  uint64_t v44 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for OvernightMetricsViewModel.Summary.Variant();
  uint64_t v48 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v45 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v41 = (char *)v38 - v10;
  uint64_t v11 = type metadata accessor for OvernightMetricsViewModel();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  __int16 v17 = (char *)v38 - v16;
  sub_1001AEDAC(a1, v3);
  id v18 = sub_1004E75C0(a1, v3);
  sub_1001AEDC8(a1, v3);
  swift_retain();

  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  swift_release();
  char v19 = OvernightMetricsViewModel.watchExperienceRequiresSetup.getter();
  unint64_t v42 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v43 = v11;
  v42(v17, v11);
  if (v19 == 2 || (v19 & 1) != 0) {
    goto LABEL_7;
  }
  sub_1001AEDAC(a1, v3);
  id v21 = sub_1004E75C0(a1, v3);
  sub_1001AEDC8(a1, v3);
  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  unint64_t v22 = v44;
  OvernightMetricsViewModel.summary.getter();
  v42(v14, v43);
  uint64_t v23 = v41;
  OvernightMetricsViewModel.Summary.variant.getter();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v47 + 8);
  v47 += 8;
  unint64_t v40 = v24;
  v24(v22, v46);

  uint64_t v25 = v48;
  uint64_t v26 = v45;
  unint64_t v39 = *(void (**)(char *, void, uint64_t))(v48 + 104);
  v39(v45, enum case for OvernightMetricsViewModel.Summary.Variant.noData(_:), v7);
  v38[1] = sub_10038CCF0(&qword_1009598B0, (void (*)(uint64_t))&type metadata accessor for OvernightMetricsViewModel.Summary.Variant);
  char v27 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v28 = v26;
  uint64_t v29 = v23;
  uint64_t v30 = *(void (**)(char *, uint64_t))(v25 + 8);
  v30(v28, v7);
  uint64_t v48 = v25 + 8;
  v30(v29, v7);
  if ((v27 & 1) == 0)
  {
    sub_1001AEDAC(a1, v3);
    id v32 = sub_1004E75C0(a1, v3);
    sub_1001AEDC8(a1, v3);
    char v33 = v32;
    dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
    uint64_t v34 = v44;
    OvernightMetricsViewModel.summary.getter();
    v42(v14, v43);
    OvernightMetricsViewModel.Summary.variant.getter();
    v40(v34, v46);

    uint64_t v35 = v45;
    v39(v45, enum case for OvernightMetricsViewModel.Summary.Variant.insufficientData(_:), v7);
    char v36 = dispatch thunk of static Equatable.== infix(_:_:)();
    v30(v35, v7);
    v30(v29, v7);
    char v31 = v36 ^ 1;
  }
  else
  {
LABEL_7:
    char v31 = 0;
  }
  return v31 & 1;
}

uint64_t sub_100389574@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v5 = a2 & 1;
  uint64_t v6 = sub_1000AFA94(&qword_1009597A0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_1009597A8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_1009597B0);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = static VerticalAlignment.center.getter();
  *((void *)v8 + 1) = 0;
  v8[16] = 1;
  uint64_t v16 = sub_1000AFA94(&qword_1009597B8);
  sub_1003897FC(a1, v5, (uint64_t)&v8[*(int *)(v16 + 44)]);
  uint64_t v17 = static Alignment.center.getter();
  sub_1004DDD60(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v11, 0.0, 1, 0.0, 1, v17, v18);
  sub_10008DB18((uint64_t)v8, &qword_1009597A0);
  LOBYTE(v8) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  sub_1000AEF2C((uint64_t)v11, (uint64_t)v15, &qword_1009597A8);
  char v27 = &v15[*(int *)(v13 + 44)];
  char *v27 = (char)v8;
  *((void *)v27 + 1) = v20;
  *((void *)v27 + 2) = v22;
  *((void *)v27 + 3) = v24;
  *((void *)v27 + 4) = v26;
  v27[40] = 0;
  sub_10008DB18((uint64_t)v11, &qword_1009597A8);
  uint64_t v28 = static Alignment.center.getter();
  uint64_t v30 = v29;
  sub_10038C168(a1, v5, &v36);
  uint64_t v31 = v36;
  __int16 v32 = v37;
  char v33 = v38;
  sub_1000AEF2C((uint64_t)v15, a3, &qword_1009597B0);
  uint64_t v34 = a3 + *(int *)(sub_1000AFA94(&qword_1009597C0) + 36);
  *(void *)uint64_t v34 = v31;
  *(_WORD *)(v34 + 8) = v32;
  *(unsigned char *)(v34 + 10) = v33;
  *(void *)(v34 + 16) = v28;
  *(void *)(v34 + 24) = v30;
  return sub_10008DB18((uint64_t)v15, &qword_1009597B0);
}

uint64_t sub_1003897FC@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v256 = a3;
  int v262 = a2 & 1;
  uint64_t v4 = sub_1000AFA94(&qword_100957768);
  __chkstk_darwin(v4 - 8);
  uint64_t v227 = (char *)&v216 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_1009597E0);
  __chkstk_darwin(v6 - 8);
  v230 = (char *)&v216 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v222 = type metadata accessor for BalanceMetricsTimeScope();
  uint64_t v221 = *(void *)(v222 - 8);
  __chkstk_darwin(v222);
  v229 = (char *)&v216 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v226 = type metadata accessor for OvernightMetricsChart();
  uint64_t v225 = *(void *)(v226 - 8);
  __chkstk_darwin(v226);
  char v224 = (char *)&v216 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v233 = sub_1000AFA94(&qword_1009597E8);
  __chkstk_darwin(v233);
  uint64_t v223 = (char *)&v216 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v228 = (uint64_t)&v216 - v12;
  uint64_t v231 = sub_1000AFA94(&qword_1009597F0);
  __chkstk_darwin(v231);
  v232 = (uint64_t *)((char *)&v216 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v254 = sub_1000AFA94(&qword_1009597F8);
  __chkstk_darwin(v254);
  v234 = (char *)&v216 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v239 = type metadata accessor for OvernightMetricsViewModel.Summary();
  uint64_t v259 = *(void *)(v239 - 8);
  __chkstk_darwin(v239);
  uint64_t v257 = (char *)&v216 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v240 = type metadata accessor for OvernightMetricsViewModel.Summary.Variant();
  uint64_t v245 = *(void *)(v240 - 8);
  __chkstk_darwin(v240);
  uint64_t v238 = (char *)&v216 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  unint64_t v249 = (void (*)(void))((char *)&v216 - v18);
  uint64_t v19 = sub_1000AFA94(&qword_100959800);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v216 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v244 = type metadata accessor for LocalizationFeature();
  uint64_t v243 = *(void *)(v244 - 8);
  __chkstk_darwin(v244);
  long long v242 = (char *)&v216 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1000AFA94(&qword_100959808);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v216 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v253 = (char *)&v216 - v27;
  uint64_t v28 = sub_1000AFA94(&qword_100959810);
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)&v216 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v248 = sub_1000AFA94(&qword_100959818);
  __chkstk_darwin(v248);
  __int16 v32 = (char *)&v216 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v216 - v34;
  uint64_t v246 = sub_1000AFA94(&qword_100959820);
  __chkstk_darwin(v246);
  __int16 v37 = (char *)&v216 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v237 = type metadata accessor for Font.Leading();
  uint64_t v236 = *(void *)(v237 - 8);
  __chkstk_darwin(v237);
  v235 = (char *)&v216 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v260 = type metadata accessor for OvernightMetricsViewModel();
  unint64_t v258 = *(void (***)(char *, uint64_t))(v260 - 8);
  __chkstk_darwin(v260);
  uint64_t v220 = (char *)&v216 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  uint64_t v219 = (char *)&v216 - v41;
  __chkstk_darwin(v42);
  uint64_t v218 = (char *)&v216 - v43;
  __chkstk_darwin(v44);
  uint64_t v217 = (char *)&v216 - v45;
  __chkstk_darwin(v46);
  uint64_t v247 = (char *)&v216 - v47;
  __chkstk_darwin(v48);
  char v50 = (char *)&v216 - v49;
  uint64_t v51 = sub_1000AFA94(&qword_100959828);
  __chkstk_darwin(v51 - 8);
  unint64_t v53 = (char *)&v216 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v54);
  uint64_t v261 = (uint64_t)&v216 - v55;
  char v56 = sub_10038907C(a1, v262);
  uint64_t v255 = v25;
  uint64_t v252 = v21;
  uint64_t v251 = v19;
  uint64_t v250 = v53;
  uint64_t v241 = v50;
  if (v56)
  {
    *(void *)uint64_t v30 = static HorizontalAlignment.leading.getter();
    *((void *)v30 + 1) = 0;
    v30[16] = 1;
    uint64_t v57 = sub_1000AFA94(&qword_100959860);
    sub_10038B414(a1, v262, (uint64_t *)&v30[*(int *)(v57 + 44)]);
    uint64_t v58 = static Font.body.getter();
    uint64_t KeyPath = swift_getKeyPath();
    sub_1000AEF2C((uint64_t)v30, (uint64_t)v32, &qword_100959810);
    uint64_t v60 = (uint64_t *)&v32[*(int *)(v248 + 36)];
    *uint64_t v60 = KeyPath;
    v60[1] = v58;
    sub_10008DB18((uint64_t)v30, &qword_100959810);
    sub_1000AEEC8((uint64_t)v32, (uint64_t)v35, &qword_100959818);
    sub_1000AEF2C((uint64_t)v35, (uint64_t)v37, &qword_100959818);
    swift_storeEnumTagMultiPayload();
    sub_10038C8DC();
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18((uint64_t)v35, &qword_100959818);
  }
  else
  {
    uint64_t v216 = a1;
    char v61 = v262;
    sub_1001AEDAC(a1, v262);
    id v62 = sub_1004E75C0(a1, v61);
    sub_1001AEDC8(a1, v61);
    swift_retain();

    dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
    swift_release();
    uint64_t v63 = OvernightMetricsViewModel.localizedTitle.getter();
    uint64_t v65 = v64;
    v258[1](v50, v260);
    *(void *)&long long v268 = v63;
    *((void *)&v268 + 1) = v65;
    sub_1000A06D0();
    uint64_t v66 = Text.init<A>(_:)();
    uint64_t v68 = v67;
    char v70 = v69 & 1;
    id v71 = [self secondaryLabelColor];
    *(void *)&long long v268 = Color.init(_:)();
    uint64_t v72 = Text.foregroundStyle<A>(_:)();
    uint64_t v74 = v73;
    char v76 = v75 & 1;
    sub_1000A06C0(v66, v68, v70);
    swift_release();
    swift_bridgeObjectRelease();
    static Font.subheadline.getter();
    static Font.Weight.semibold.getter();
    Font.weight(_:)();
    swift_release();
    uint64_t v77 = v236;
    id v78 = v235;
    uint64_t v79 = v237;
    (*(void (**)(char *, void, uint64_t))(v236 + 104))(v235, enum case for Font.Leading.tight(_:), v237);
    Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v79);
    uint64_t v80 = Text.font(_:)();
    uint64_t v82 = v81;
    LOBYTE(v77) = v83;
    uint64_t v85 = v84;
    swift_release();
    char v86 = v76;
    a1 = v216;
    sub_1000A06C0(v72, v74, v86);
    swift_bridgeObjectRelease();
    *(void *)__int16 v37 = v80;
    *((void *)v37 + 1) = v82;
    v37[16] = v77 & 1;
    *((void *)v37 + 3) = v85;
    swift_storeEnumTagMultiPayload();
    sub_10038C8DC();
    _ConditionalContent<>.init(storage:)();
  }
  uint64_t v87 = v260;
  id v88 = v258;
  uint64_t v89 = v259;
  id v90 = v257;
  id v91 = v249;
  id v92 = v247;
  char v93 = v262;
  sub_1001AEDAC(a1, v262);
  id v94 = sub_1004E75C0(a1, v93);
  sub_1001AEDC8(a1, v93);
  swift_retain();

  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  swift_release();
  LOBYTE(v94) = OvernightMetricsViewModel.watchExperienceRequiresSetup.getter();
  id v95 = v92;
  id v96 = v88[1];
  v96(v95, v87);
  if (v94)
  {
    uint64_t v130 = v243;
    id v131 = v242;
    uint64_t v132 = v244;
    (*(void (**)(char *, void, uint64_t))(v243 + 104))(v242, enum case for LocalizationFeature.workout(_:), v244);
    uint64_t v133 = static Localization.workoutUILocalizedString(_:feature:)();
    uint64_t v135 = v134;
    (*(void (**)(char *, uint64_t))(v130 + 8))(v131, v132);
    *(void *)&long long v268 = v133;
    *((void *)&v268 + 1) = v135;
    sub_1000A06D0();
    uint64_t v136 = Text.init<A>(_:)();
    uint64_t v138 = v137;
    LOBYTE(v130) = v139 & 1;
    static Font.subheadline.getter();
    uint64_t v140 = Text.font(_:)();
    uint64_t v142 = v141;
    char v144 = v143;
    swift_release();
    sub_1000A06C0(v136, v138, v130);
    swift_bridgeObjectRelease();
    id v145 = [self secondaryLabelColor];
    *(void *)&long long v268 = Color.init(_:)();
    uint64_t v123 = Text.foregroundStyle<A>(_:)();
    uint64_t v125 = v146;
    uint64_t v148 = v147;
    uint64_t v129 = v149 & 1;
    sub_1000A06C0(v140, v142, v144 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v263 = v123;
    uint64_t v264 = v125;
    uint64_t v265 = v129;
    uint64_t v266 = v148;
    char v267 = 0;
    goto LABEL_8;
  }
  char v97 = v262;
  sub_1001AEDAC(a1, v262);
  id v98 = sub_1004E75C0(a1, v97);
  sub_1001AEDC8(a1, v97);
  id v99 = v241;
  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  OvernightMetricsViewModel.summary.getter();
  uint64_t v248 = (uint64_t)v96;
  v96(v99, v87);
  OvernightMetricsViewModel.Summary.variant.getter();
  id v100 = *(void (***)(char *, uint64_t))(v89 + 8);
  uint64_t v259 = v89 + 8;
  unint64_t v258 = v100;
  ((void (*)(char *, uint64_t))v100)(v90, v239);

  uint64_t v101 = v245;
  id v102 = v238;
  uint64_t v103 = v240;
  unint64_t v249 = *(void (**)(void))(v245 + 104);
  v249();
  LOBYTE(v98) = static OvernightMetricsViewModel.Summary.Variant.== infix(_:_:)();
  id v106 = *(void (**)(char *, uint64_t))(v101 + 8);
  uint64_t v104 = v101 + 8;
  id v105 = v106;
  v106(v102, v103);
  v106((char *)v91, v103);
  if (v98)
  {
    uint64_t v107 = v243;
    id v108 = v242;
    uint64_t v109 = v244;
    (*(void (**)(char *, void, uint64_t))(v243 + 104))(v242, enum case for LocalizationFeature.workout(_:), v244);
    uint64_t v110 = static Localization.workoutUILocalizedString(_:feature:)();
    uint64_t v112 = v111;
    (*(void (**)(char *, uint64_t))(v107 + 8))(v108, v109);
    *(void *)&long long v268 = v110;
    *((void *)&v268 + 1) = v112;
    sub_1000A06D0();
    uint64_t v113 = Text.init<A>(_:)();
    uint64_t v115 = v114;
    LOBYTE(v107) = v116 & 1;
    static Font.subheadline.getter();
    uint64_t v117 = Text.font(_:)();
    uint64_t v119 = v118;
    char v121 = v120;
    swift_release();
    sub_1000A06C0(v113, v115, v107);
    swift_bridgeObjectRelease();
    id v122 = [self secondaryLabelColor];
    *(void *)&long long v268 = Color.init(_:)();
    uint64_t v123 = Text.foregroundStyle<A>(_:)();
    uint64_t v125 = v124;
    uint64_t v127 = v126;
    uint64_t v129 = v128 & 1;
    sub_1000A06C0(v117, v119, v121 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v263 = v123;
    uint64_t v264 = v125;
    uint64_t v265 = v129;
    uint64_t v266 = v127;
    char v267 = 1;
LABEL_8:
    sub_1000A1750(v123, v125, v129);
    swift_bridgeObjectRetain();
    _ConditionalContent<>.init(storage:)();
    char v150 = v270;
    long long v151 = v269;
    uint64_t v152 = v252;
    *uint64_t v252 = v268;
    v152[1] = v151;
    *((unsigned char *)v152 + 32) = v150;
    swift_storeEnumTagMultiPayload();
    sub_1000AFA94(&qword_100953E60);
    sub_10038CA4C();
    sub_10038CAB8();
    uint64_t v153 = (uint64_t)v253;
    _ConditionalContent<>.init(storage:)();
    uint64_t v154 = v123;
    uint64_t v155 = v125;
    char v156 = v129;
    goto LABEL_9;
  }
  uint64_t v245 = v104;
  char v164 = v262;
  sub_1001AEDAC(a1, v262);
  id v165 = sub_1004E75C0(a1, v164);
  sub_1001AEDC8(a1, v164);
  uint64_t v166 = v241;
  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  uint64_t v167 = v257;
  OvernightMetricsViewModel.summary.getter();
  uint64_t v168 = v166;
  uint64_t v169 = (void (*)(char *, uint64_t))v248;
  ((void (*)(char *, uint64_t))v248)(v168, v260);
  OvernightMetricsViewModel.Summary.variant.getter();
  ((void (*)(char *, uint64_t))v258)(v167, v239);

  uint64_t v170 = v240;
  ((void (*)(char *, void, uint64_t))v249)(v102, enum case for OvernightMetricsViewModel.Summary.Variant.insufficientData(_:), v240);
  LOBYTE(v165) = static OvernightMetricsViewModel.Summary.Variant.== infix(_:_:)();
  v105(v102, v170);
  v105((char *)v91, v170);
  if ((v165 & 1) == 0)
  {
    (*(void (**)(char *, void, uint64_t))(v221 + 104))(v229, enum case for BalanceMetricsTimeScope.oneDay(_:), v222);
    char v195 = v262;
    sub_1001AEDAC(a1, v262);
    id v196 = sub_1004E75C0(a1, v195);
    sub_1001AEDC8(a1, v195);
    swift_retain();

    char v197 = v241;
    dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
    swift_release();
    uint64_t v259 = OvernightMetricsViewModel.chartPoints.getter();
    uint64_t v198 = v260;
    v169(v197, v260);
    sub_1001AEDAC(a1, v195);
    id v199 = sub_1004E75C0(a1, v195);
    sub_1001AEDC8(a1, v195);
    swift_retain();

    uint64_t v200 = v217;
    dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
    swift_release();
    OvernightMetricsViewModel.emphasizedChartPoint.getter();
    v169(v200, v198);
    uint64_t v201 = type metadata accessor for SleepingSampleDataType();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v201 - 8) + 56))(v227, 1, 1, v201);
    sub_1001AEDAC(a1, v195);
    id v202 = sub_1004E75C0(a1, v195);
    sub_1001AEDC8(a1, v195);
    swift_retain();

    uint64_t v203 = v218;
    dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
    swift_release();
    OvernightMetricsViewModel.medialRange.getter();
    v169(v203, v198);
    sub_1001AEDAC(a1, v195);
    id v204 = sub_1004E75C0(a1, v195);
    sub_1001AEDC8(a1, v195);
    swift_retain();

    uint64_t v205 = v219;
    dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
    swift_release();
    OvernightMetricsViewModel.visibleDataTypes.getter();
    v169(v205, v198);
    sub_1001AEDAC(a1, v195);
    id v206 = sub_1004E75C0(a1, v195);
    sub_1001AEDC8(a1, v195);
    swift_retain();

    uint64_t v207 = v220;
    dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
    swift_release();
    OvernightMetricsViewModel.keyDatesForTimeAxis.getter();
    v169(v207, v198);
    uint64_t v208 = v224;
    OvernightMetricsChart.init(timeScope:chartPoints:emphasizedChartPoint:emphasizedDataType:medialRange:visibleDataTypes:keyDates:)();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v209 = v225;
    uint64_t v210 = (uint64_t)v223;
    uint64_t v211 = v226;
    (*(void (**)(char *, char *, uint64_t))(v225 + 16))(v223, v208, v226);
    char v212 = (_OWORD *)(v210 + *(int *)(v233 + 36));
    long long v213 = v269;
    *char v212 = v268;
    v212[1] = v213;
    v212[2] = v270;
    (*(void (**)(char *, uint64_t))(v209 + 8))(v208, v211);
    uint64_t v214 = v228;
    sub_1000AEEC8(v210, v228, &qword_1009597E8);
    sub_1000AEF2C(v214, (uint64_t)v232, &qword_1009597E8);
    swift_storeEnumTagMultiPayload();
    sub_10038C9A0();
    uint64_t v215 = (uint64_t)v234;
    _ConditionalContent<>.init(storage:)();
    sub_1000AEF2C(v215, (uint64_t)v252, &qword_1009597F8);
    swift_storeEnumTagMultiPayload();
    sub_1000AFA94(&qword_100953E60);
    sub_10038CA4C();
    sub_10038CAB8();
    uint64_t v153 = (uint64_t)v253;
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v215, &qword_1009597F8);
    sub_10008DB18(v214, &qword_1009597E8);
    goto LABEL_10;
  }
  uint64_t v171 = v243;
  uint64_t v172 = v242;
  uint64_t v173 = v244;
  (*(void (**)(char *, void, uint64_t))(v243 + 104))(v242, enum case for LocalizationFeature.workout(_:), v244);
  uint64_t v174 = static Localization.workoutUILocalizedString(_:feature:)();
  uint64_t v176 = v175;
  (*(void (**)(char *, uint64_t))(v171 + 8))(v172, v173);
  *(void *)&long long v268 = v174;
  *((void *)&v268 + 1) = v176;
  sub_1000A06D0();
  uint64_t v177 = Text.init<A>(_:)();
  uint64_t v179 = v178;
  LOBYTE(v171) = v180 & 1;
  static Font.subheadline.getter();
  uint64_t v181 = Text.font(_:)();
  uint64_t v183 = v182;
  char v185 = v184;
  swift_release();
  sub_1000A06C0(v177, v179, v171);
  swift_bridgeObjectRelease();
  id v186 = [self secondaryLabelColor];
  *(void *)&long long v268 = Color.init(_:)();
  uint64_t v187 = Text.foregroundStyle<A>(_:)();
  uint64_t v189 = v188;
  uint64_t v191 = v190;
  LOBYTE(v171) = v192 & 1;
  sub_1000A06C0(v181, v183, v185 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  char v193 = v232;
  uint64_t *v232 = v187;
  v193[1] = v189;
  *((unsigned char *)v193 + 16) = v171;
  v193[3] = v191;
  swift_storeEnumTagMultiPayload();
  sub_1000A1750(v187, v189, v171);
  sub_10038C9A0();
  swift_bridgeObjectRetain();
  uint64_t v194 = (uint64_t)v234;
  _ConditionalContent<>.init(storage:)();
  sub_1000AEF2C(v194, (uint64_t)v252, &qword_1009597F8);
  swift_storeEnumTagMultiPayload();
  sub_1000AFA94(&qword_100953E60);
  sub_10038CA4C();
  sub_10038CAB8();
  uint64_t v153 = (uint64_t)v253;
  _ConditionalContent<>.init(storage:)();
  sub_10008DB18(v194, &qword_1009597F8);
  uint64_t v154 = v187;
  uint64_t v155 = v189;
  char v156 = v171;
LABEL_9:
  sub_1000A06C0(v154, v155, v156);
  swift_bridgeObjectRelease();
LABEL_10:
  uint64_t v157 = (uint64_t)v255;
  uint64_t v158 = (uint64_t)v250;
  uint64_t v159 = v261;
  sub_1000AEF2C(v261, (uint64_t)v250, &qword_100959828);
  sub_1000AEF2C(v153, v157, &qword_100959808);
  uint64_t v160 = v256;
  sub_1000AEF2C(v158, v256, &qword_100959828);
  uint64_t v161 = sub_1000AFA94(&qword_100959858);
  uint64_t v162 = v160 + *(int *)(v161 + 48);
  *(void *)uint64_t v162 = 0;
  *(unsigned char *)(v162 + 8) = 1;
  sub_1000AEF2C(v157, v160 + *(int *)(v161 + 64), &qword_100959808);
  sub_10008DB18(v153, &qword_100959808);
  sub_10008DB18(v159, &qword_100959828);
  sub_10008DB18(v157, &qword_100959808);
  return sub_10008DB18(v158, &qword_100959828);
}

uint64_t sub_10038B414@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  id v106 = a3;
  uint64_t v5 = sub_1000AFA94(&qword_100959868);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v104 = v5;
  uint64_t v105 = v6;
  __chkstk_darwin(v5);
  id v100 = (char *)v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_100959870);
  uint64_t v102 = *(void *)(v8 - 8);
  uint64_t v103 = v8;
  __chkstk_darwin(v8);
  id v108 = (char *)v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v101 = (char *)v81 - v11;
  uint64_t v12 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v12 - 8);
  uint64_t v107 = (char *)v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for Font.Leading();
  uint64_t v93 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  id v92 = (char *)v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for OvernightMetricsViewModel();
  uint64_t v98 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v19 = a2 & 1;
  int v90 = a2 & 1;
  id v95 = a1;
  sub_1001AEDAC(a1, a2 & 1);
  id v20 = sub_1004E75C0(a1, a2 & 1);
  sub_1001AEDC8(a1, v19);
  swift_retain();

  id v96 = v18;
  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  swift_release();
  uint64_t v21 = OvernightMetricsViewModel.localizedTitle.getter();
  uint64_t v23 = v22;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v97 = v16 + 8;
  id v99 = v24;
  v24(v18, v15);
  *(void *)&long long v109 = v21;
  *((void *)&v109 + 1) = v23;
  sub_1000A06D0();
  uint64_t v25 = Text.init<A>(_:)();
  uint64_t v27 = v26;
  LOBYTE(v15) = v28 & 1;
  id v29 = [self secondaryLabelColor];
  *(void *)&long long v109 = Color.init(_:)();
  uint64_t v30 = Text.foregroundStyle<A>(_:)();
  uint64_t v32 = v31;
  char v34 = v33 & 1;
  sub_1000A06C0(v25, v27, v15);
  swift_release();
  swift_bridgeObjectRelease();
  static Font.subheadline.getter();
  static Font.Weight.medium.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v35 = v93;
  uint64_t v36 = v92;
  uint64_t v37 = v94;
  (*(void (**)(char *, void, uint64_t))(v93 + 104))(v92, enum case for Font.Leading.tight(_:), v94);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
  uint64_t v38 = Text.font(_:)();
  uint64_t v40 = v39;
  LOBYTE(v35) = v41;
  swift_release();
  sub_1000A06C0(v30, v32, v34);
  swift_bridgeObjectRelease();
  uint64_t v42 = enum case for Font.Design.rounded(_:);
  unsigned int v88 = enum case for Font.Design.rounded(_:);
  uint64_t v43 = type metadata accessor for Font.Design();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = *(void (**)(char *, void, uint64_t))(v44 + 104);
  uint64_t v87 = v44 + 104;
  uint64_t v89 = v45;
  uint64_t v46 = (uint64_t)v107;
  uint64_t v85 = v43;
  v45(v107, v42, v43);
  uint64_t v47 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56);
  uint64_t v84 = v44 + 56;
  char v86 = v47;
  v47(v46, 0, 1, v43);
  uint64_t v94 = Text.fontDesign(_:)();
  id v92 = v48;
  uint64_t v93 = v49;
  int v91 = v50 & 1;
  sub_1000A06C0(v38, v40, v35 & 1);
  swift_bridgeObjectRelease();
  sub_10008DB18(v46, &qword_10094C448);
  uint64_t v51 = v95;
  LOBYTE(v38) = v90;
  sub_10038BD98(v95, v90, &v109);
  long long v52 = v109;
  uint64_t v82 = v109;
  uint64_t v53 = v110;
  uint64_t v54 = v111;
  v81[1] = v111;
  int v83 = v112;
  sub_1001AEDAC(v51, v38);
  id v55 = sub_1004E75C0(v51, v38);
  sub_1001AEDC8(v51, v38);
  swift_retain();

  char v56 = v96;
  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  swift_release();
  uint64_t v57 = (void *)OvernightMetricsViewModel.primaryTintColor.getter();
  id v95 = v57;
  v99(v56, v98);
  uint64_t v58 = static Font.title2.getter();
  uint64_t KeyPath = swift_getKeyPath();
  long long v109 = v52;
  uint64_t v110 = v53;
  uint64_t v111 = v54;
  unsigned __int8 v112 = v83;
  uint64_t v113 = v57;
  uint64_t v114 = KeyPath;
  uint64_t v115 = v58;
  static Font.Weight.medium.getter();
  uint64_t v60 = sub_1000AFA94(&qword_100959878);
  unint64_t v61 = sub_10038CB3C();
  id v62 = v100;
  View.fontWeight(_:)();
  sub_1001BB654(v82, *((uint64_t *)&v52 + 1), v53);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v63 = (uint64_t)v107;
  uint64_t v64 = v85;
  v89(v107, v88, v85);
  v86(v63, 0, 1, v64);
  *(void *)&long long v109 = v60;
  *((void *)&v109 + 1) = v61;
  swift_getOpaqueTypeConformance2();
  uint64_t v65 = v108;
  uint64_t v66 = v104;
  View.fontDesign(_:)();
  sub_10008DB18(v63, &qword_10094C448);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v62, v66);
  uint64_t v68 = v101;
  uint64_t v67 = v102;
  uint64_t v69 = v103;
  (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v101, v65, v103);
  uint64_t v70 = v67;
  id v71 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
  uint64_t v72 = v65;
  uint64_t v73 = v69;
  v71(v72, v68, v69);
  uint64_t v74 = v106;
  uint64_t v75 = v94;
  uint64_t v76 = (uint64_t)v92;
  *id v106 = v94;
  v74[1] = v76;
  LOBYTE(v67) = v91;
  *((unsigned char *)v74 + 16) = v91;
  v74[3] = v93;
  uint64_t v77 = (char *)v74 + *(int *)(sub_1000AFA94(&qword_1009598A8) + 48);
  id v78 = v108;
  v71(v77, v108, v73);
  sub_1000A1750(v75, v76, v67);
  uint64_t v79 = *(void (**)(char *, uint64_t))(v70 + 8);
  swift_bridgeObjectRetain();
  v79(v68, v73);
  v79(v78, v73);
  sub_1000A06C0(v75, v76, v67);
  return swift_bridgeObjectRelease();
}

double sub_10038BD98@<D0>(void *a1@<X0>, char a2@<W1>, _OWORD *a3@<X8>)
{
  uint64_t v43 = a3;
  char v4 = a2 & 1;
  uint64_t v5 = type metadata accessor for LocalizationFeature();
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OvernightMetricsViewModel();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v41 - v13;
  sub_1001AEDAC(a1, v4);
  id v15 = sub_1004E75C0(a1, v4);
  sub_1001AEDC8(a1, v4);
  swift_retain();

  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  swift_release();
  uint64_t v16 = OvernightMetricsViewModel.changeCountDescription.getter();
  uint64_t v18 = v17;
  char v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v14, v8);
  if (v18)
  {
    *(void *)&long long v49 = v16;
    *((void *)&v49 + 1) = v18;
    sub_1000A06D0();
    uint64_t v44 = Text.init<A>(_:)();
    uint64_t v45 = v20;
    uint64_t v46 = v21 & 1;
    uint64_t v47 = v22;
    char v48 = 0;
  }
  else
  {
    sub_1001AEDAC(a1, v4);
    id v23 = sub_1004E75C0(a1, v4);
    sub_1001AEDC8(a1, v4);
    swift_retain();

    dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
    swift_release();
    uint64_t v24 = OvernightMetricsViewModel.changeDetectedCountToday.getter();
    char v26 = v25;
    v19(v11, v8);
    if (v26) {
      uint64_t v27 = 0;
    }
    else {
      uint64_t v27 = v24;
    }
    uint64_t v29 = v41;
    uint64_t v28 = v42;
    (*(void (**)(char *, void, uint64_t))(v41 + 104))(v7, enum case for LocalizationFeature.workout(_:), v42);
    static Localization.workoutUILocalizedString(_:feature:)();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v28);
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1007509E0;
    *(void *)(v30 + 56) = &type metadata for Int;
    *(void *)(v30 + 64) = &protocol witness table for Int;
    *(void *)(v30 + 32) = v27;
    uint64_t v31 = static String.localizedStringWithFormat(_:_:)();
    uint64_t v33 = v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&long long v49 = v31;
    *((void *)&v49 + 1) = v33;
    sub_1000A06D0();
    uint64_t v44 = Text.init<A>(_:)();
    uint64_t v45 = v35;
    uint64_t v46 = v34 & 1;
    uint64_t v47 = v36;
    char v48 = 1;
  }
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v49;
  long long v38 = v50;
  char v39 = v51;
  uint64_t v40 = v43;
  *uint64_t v43 = v49;
  v40[1] = v38;
  *((unsigned char *)v40 + 32) = v39;
  return result;
}

uint64_t sub_10038C168@<X0>(void *a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  uint64_t v36 = a3;
  char v4 = a2 & 1;
  uint64_t v5 = type metadata accessor for OvernightMetricsViewModel.Summary.Variant();
  uint64_t v34 = *(void *)(v5 - 8);
  uint64_t v35 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for OvernightMetricsViewModel.Summary();
  uint64_t v8 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for OvernightMetricsViewModel();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v31 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v31 - v15;
  sub_1001AEDAC(a1, v4);
  id v17 = sub_1004E75C0(a1, v4);
  sub_1001AEDC8(a1, v4);
  swift_retain();

  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  swift_release();
  OvernightMetricsViewModel.summary.getter();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v32 = v11;
  v18(v16, v11);
  OvernightMetricsViewModel.Summary.variant.getter();
  uint64_t v19 = v34;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v33);
  uint64_t v20 = v35;
  int v21 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v7, v35);
  if (v21 == enum case for OvernightMetricsViewModel.Summary.Variant.allMetricsInRange(_:)
    || v21 == enum case for OvernightMetricsViewModel.Summary.Variant.someMetricsOutOfRange(_:))
  {
    sub_1001AEDAC(a1, v4);
    id v27 = sub_1004E75C0(a1, v4);
    sub_1001AEDC8(a1, v4);
    swift_retain();

    uint64_t v28 = v31;
    dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
    swift_release();
    uint64_t v29 = OvernightMetricsViewModel.primaryTintColor.getter();
    v18(v28, v32);
    uint64_t v37 = v29;
    __int16 v38 = 0;
    char v39 = 0;
    sub_1000AFA94(&qword_1009597C8);
    sub_10038C888();
    sub_1000A132C(&qword_1009597D8, &qword_1009597C8);
    uint64_t result = _ConditionalContent<>.init(storage:)();
    uint64_t v23 = v40;
    __int16 v24 = v41;
    char v25 = v42;
  }
  else
  {
    id v22 = [self secondarySystemBackgroundColor];
    uint64_t v37 = Color.init(_:)();
    __int16 v38 = 256;
    char v39 = 1;
    sub_1000AFA94(&qword_1009597C8);
    sub_10038C888();
    sub_1000A132C(&qword_1009597D8, &qword_1009597C8);
    _ConditionalContent<>.init(storage:)();
    uint64_t v23 = v40;
    __int16 v24 = v41;
    char v25 = v42;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v7, v20);
  }
  uint64_t v30 = v36;
  void *v36 = v23;
  *((_WORD *)v30 + 4) = v24;
  *((unsigned char *)v30 + 10) = v25;
  return result;
}

uint64_t sub_10038C5E8@<X0>(uint64_t a1@<X8>)
{
  return sub_100389574(*(void **)v1, *(unsigned char *)(v1 + 8), a1);
}

__n128 sub_10038C5F4@<Q0>(uint64_t a1@<X8>)
{
  sub_1000AFA94((uint64_t *)&unk_100959030);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10074E640;
  char v3 = self;
  id v4 = [v3 secondarySystemBackgroundColor];
  Color.init(_:)();
  uint64_t v5 = Color.opacity(_:)();
  swift_release();
  *(void *)(v2 + 32) = v5;
  id v6 = [v3 secondarySystemBackgroundColor];
  Color.init(_:)();
  uint64_t v7 = Color.opacity(_:)();
  swift_release();
  *(void *)(v2 + 40) = v7;
  uint64_t v28 = v2;
  specialized Array._endMutation()();
  static UnitPoint.bottom.getter();
  static UnitPoint.top.getter();
  Gradient.init(colors:)();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  uint64_t v8 = v24;
  long long v23 = v25;
  uint64_t v9 = v26;
  uint64_t v10 = v27;
  sub_1000AFA94(&qword_10094F3E8);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100752410;
  Color.opacity(_:)();
  *(void *)(v11 + 32) = Gradient.Stop.init(color:location:)();
  *(void *)(v11 + 40) = v12;
  Color.opacity(_:)();
  *(void *)(v11 + 48) = Gradient.Stop.init(color:location:)();
  *(void *)(v11 + 56) = v13;
  Color.opacity(_:)();
  *(void *)(v11 + 64) = Gradient.Stop.init(color:location:)();
  *(void *)(v11 + 72) = v14;
  static UnitPoint.bottom.getter();
  static UnitPoint.top.getter();
  Gradient.init(stops:)();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  uint64_t v15 = v28;
  __n128 v22 = v29;
  uint64_t v16 = v30;
  uint64_t v17 = v31;
  uint64_t v18 = static Alignment.center.getter();
  uint64_t v20 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001CE648((uint64_t)&v24);
  sub_1001CE648((uint64_t)&v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000B1AE0((uint64_t)&v24);
  sub_1000B1AE0((uint64_t)&v28);
  *(void *)a1 = v18;
  *(void *)(a1 + 8) = v20;
  *(void *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 24) = v23;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v15;
  __n128 result = v22;
  *(__n128 *)(a1 + 64) = v22;
  *(void *)(a1 + 80) = v16;
  *(void *)(a1 + 88) = v17;
  return result;
}

double sub_10038C880@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_10038C5F4(a1).n128_u64[0];
  return result;
}

unint64_t sub_10038C888()
{
  unint64_t result = qword_1009597D0;
  if (!qword_1009597D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009597D0);
  }
  return result;
}

unint64_t sub_10038C8DC()
{
  unint64_t result = qword_100959830;
  if (!qword_100959830)
  {
    sub_1000A1370(&qword_100959818);
    sub_1000A132C(&qword_100959838, &qword_100959810);
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100959830);
  }
  return result;
}

unint64_t sub_10038C9A0()
{
  unint64_t result = qword_100959840;
  if (!qword_100959840)
  {
    sub_1000A1370(&qword_1009597E8);
    sub_10038CCF0(&qword_100959848, (void (*)(uint64_t))&type metadata accessor for OvernightMetricsChart);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100959840);
  }
  return result;
}

unint64_t sub_10038CA4C()
{
  unint64_t result = qword_100953E58;
  if (!qword_100953E58)
  {
    sub_1000A1370(&qword_100953E60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953E58);
  }
  return result;
}

unint64_t sub_10038CAB8()
{
  unint64_t result = qword_100959850;
  if (!qword_100959850)
  {
    sub_1000A1370(&qword_1009597F8);
    sub_10038C9A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100959850);
  }
  return result;
}

unint64_t sub_10038CB3C()
{
  unint64_t result = qword_100959880;
  if (!qword_100959880)
  {
    sub_1000A1370(&qword_100959878);
    sub_10038CBDC();
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100959880);
  }
  return result;
}

unint64_t sub_10038CBDC()
{
  unint64_t result = qword_100959888;
  if (!qword_100959888)
  {
    sub_1000A1370(&qword_100959890);
    sub_10038CC7C();
    sub_1000A132C(&qword_10094E300, &qword_10094E308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100959888);
  }
  return result;
}

unint64_t sub_10038CC7C()
{
  unint64_t result = qword_100959898;
  if (!qword_100959898)
  {
    sub_1000A1370(&qword_1009598A0);
    sub_10038CA4C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100959898);
  }
  return result;
}

uint64_t sub_10038CCF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for OvernightMetricsViewBackground()
{
  return &type metadata for OvernightMetricsViewBackground;
}

unint64_t sub_10038CD4C()
{
  unint64_t result = qword_1009598B8;
  if (!qword_1009598B8)
  {
    sub_1000A1370(&qword_1009597C0);
    sub_10038CDEC();
    sub_1000A132C(&qword_1009598D8, &qword_1009598E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009598B8);
  }
  return result;
}

unint64_t sub_10038CDEC()
{
  unint64_t result = qword_1009598C0;
  if (!qword_1009598C0)
  {
    sub_1000A1370(&qword_1009597B0);
    sub_10038CE68();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009598C0);
  }
  return result;
}

unint64_t sub_10038CE68()
{
  unint64_t result = qword_1009598C8;
  if (!qword_1009598C8)
  {
    sub_1000A1370(&qword_1009597A8);
    sub_1000A132C(&qword_1009598D0, &qword_1009597A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009598C8);
  }
  return result;
}

uint64_t sub_10038CF08()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10038CF24()
{
  return sub_1000A132C(&qword_1009598E8, &qword_1009598F0);
}

id sub_10038CF60(uint64_t a1)
{
  return sub_1002E1A58(a1, &UIFontTextStyleBody, &qword_1009598F8);
}

id sub_10038CF74(uint64_t a1)
{
  return sub_1002E1A58(a1, &UIFontTextStyleCaption2, &qword_100959900);
}

char *sub_10038CF88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  uint64_t v5 = &v3[OBJC_IVAR___CHStackListTableViewCell_fitnessPlusStackViewModel];
  uint64_t v6 = type metadata accessor for FitnessPlusStackViewModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = OBJC_IVAR___CHStackListTableViewCell_insetContentView;
  id v8 = objc_allocWithZone((Class)UIView);
  uint64_t v9 = v3;
  id v10 = [v8 initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v3[v7] = v10;
  uint64_t v11 = OBJC_IVAR___CHStackListTableViewCell_iconImageView;
  id v12 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v13 = (void *)UIView.withContentMode(_:)();

  id v14 = [v13 layer];
  [v14 setCornerRadius:3.0];

  [v13 setClipsToBounds:1];
  [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v9[v11] = v13;
  uint64_t v15 = OBJC_IVAR___CHStackListTableViewCell_labelStackView;
  id v16 = [objc_allocWithZone((Class)UIStackView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v16 setAxis:1];
  [v16 setDistribution:3];
  [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v9[v15] = v16;
  uint64_t v17 = OBJC_IVAR___CHStackListTableViewCell_titleLabel;
  id v18 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  LODWORD(v19) = 1148846080;
  [v18 setContentCompressionResistancePriority:1 forAxis:v19];
  if (qword_10094AA80 != -1) {
    swift_once();
  }
  uint64_t v20 = (void *)UILabel.withFont(_:)();

  [v20 setLineBreakMode:0];
  [v20 setNumberOfLines:0];
  [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v9[v17] = v20;
  uint64_t v21 = OBJC_IVAR___CHStackListTableViewCell_subtitleLabel;
  id v22 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v22 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v9[v21] = v22;
  uint64_t v23 = OBJC_IVAR___CHStackListTableViewCell_dateLabel;
  id v24 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  if (qword_10094AA88 != -1) {
    swift_once();
  }
  long long v25 = (void *)UILabel.withFont(_:)();

  id v26 = [self secondaryLabelColor];
  uint64_t v27 = (void *)UILabel.withTextColor(_:)();

  [v27 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v9[v23] = v27;

  if (a3)
  {
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v28 = 0;
  }
  v41.receiver = v9;
  v41.super_class = (Class)type metadata accessor for StackListTableViewCell();
  __n128 v29 = (char *)[super initWithStyle:a1 reuseIdentifier:v28];

  uint64_t v30 = OBJC_IVAR___CHStackListTableViewCell_insetContentView;
  uint64_t v31 = *(void **)&v29[OBJC_IVAR___CHStackListTableViewCell_insetContentView];
  uint64_t v32 = v29;
  id v33 = v31;
  id v34 = sub_10049E184();
  [v33 setBackgroundColor:v34];

  id v35 = [*(id *)&v29[v30] layer];
  [v35 setCornerRadius:sub_10049E1B0()];

  uint64_t v36 = *(void **)&v29[v30];
  [v36 addSubview:*(void *)&v32[OBJC_IVAR___CHStackListTableViewCell_iconImageView]];
  uint64_t v37 = *(void **)&v32[OBJC_IVAR___CHStackListTableViewCell_labelStackView];
  [v37 addArrangedSubview:*(void *)&v32[OBJC_IVAR___CHStackListTableViewCell_titleLabel]];
  [v37 addArrangedSubview:*(void *)&v32[OBJC_IVAR___CHStackListTableViewCell_subtitleLabel]];
  [v36 addSubview:v37];
  [v36 addSubview:*(void *)&v32[OBJC_IVAR___CHStackListTableViewCell_dateLabel]];
  id v38 = [v32 contentView];
  [v38 addSubview:v36];

  sub_10038D538();
  return v32;
}

void sub_10038D538()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v58 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10075A430;
  char v3 = *(void **)&v0[OBJC_IVAR___CHStackListTableViewCell_insetContentView];
  id v4 = [v3 topAnchor];
  id v5 = [v0 contentView];
  id v6 = [v5 topAnchor];

  id v7 = [v4 constraintEqualToAnchor:v6 constant:sub_10049E1C0()];
  *(void *)(v2 + 32) = v7;
  id v8 = [v3 leadingAnchor];
  id v9 = [v0 contentView];
  id v10 = [v9 leadingAnchor];

  sub_10049E1C0();
  id v12 = [v8 constraintEqualToAnchor:v10 constant:v11];

  *(void *)(v2 + 40) = v12;
  id v13 = [v3 trailingAnchor];
  id v14 = [v0 contentView];
  id v15 = [v14 trailingAnchor];

  sub_10049E1C0();
  id v17 = [v13 constraintEqualToAnchor:v15 constant:-v16];

  *(void *)(v2 + 48) = v17;
  id v18 = [v3 bottomAnchor];
  id v19 = [v0 contentView];
  id v20 = [v19 bottomAnchor];

  sub_10049E1C0();
  id v22 = [v18 constraintEqualToAnchor:v20 constant:-v21];

  *(void *)(v2 + 56) = v22;
  uint64_t v23 = *(void **)&v1[OBJC_IVAR___CHStackListTableViewCell_iconImageView];
  id v24 = [v23 leadingAnchor];
  id v25 = [v3 leadingAnchor];
  id v26 = [v24 constraintEqualToAnchor:v25 constant:16.0];

  *(void *)(v2 + 64) = v26;
  id v27 = [v23 centerYAnchor];
  NSString v28 = *(void **)&v1[OBJC_IVAR___CHStackListTableViewCell_labelStackView];
  id v29 = [v28 centerYAnchor];
  id v30 = [v27 constraintEqualToAnchor:v29];

  *(void *)(v2 + 72) = v30;
  id v31 = [v23 widthAnchor];
  id v32 = [v31 constraintEqualToConstant:50.0];

  *(void *)(v2 + 80) = v32;
  id v33 = [v23 heightAnchor];
  id v34 = [v33 constraintEqualToConstant:50.0];

  *(void *)(v2 + 88) = v34;
  id v35 = [v28 topAnchor];
  id v36 = [v3 topAnchor];
  id v37 = [v35 constraintEqualToAnchor:v36 constant:12.0];

  *(void *)(v2 + 96) = v37;
  id v38 = [v28 leadingAnchor];
  id v39 = [v23 trailingAnchor];
  id v40 = [v38 constraintEqualToAnchor:v39 constant:9.0];

  *(void *)(v2 + 104) = v40;
  id v41 = [v28 trailingAnchor];
  id v42 = [v3 trailingAnchor];
  id v43 = [v41 constraintLessThanOrEqualToAnchor:v42 constant:-16.0];

  *(void *)(v2 + 112) = v43;
  id v44 = [v28 bottomAnchor];
  id v45 = [v3 bottomAnchor];
  id v46 = [v44 constraintEqualToAnchor:v45 constant:-12.0];

  *(void *)(v2 + 120) = v46;
  uint64_t v47 = *(void **)&v1[OBJC_IVAR___CHStackListTableViewCell_subtitleLabel];
  id v48 = [v47 topAnchor];
  id v49 = [*(id *)&v1[OBJC_IVAR___CHStackListTableViewCell_titleLabel] bottomAnchor];
  id v50 = [v48 constraintEqualToAnchor:v49];

  *(void *)(v2 + 128) = v50;
  char v51 = *(void **)&v1[OBJC_IVAR___CHStackListTableViewCell_dateLabel];
  id v52 = [v51 trailingAnchor];
  id v53 = [v3 trailingAnchor];
  id v54 = [v52 constraintEqualToAnchor:v53 constant:-16.0];

  *(void *)(v2 + 136) = v54;
  id v55 = [v51 lastBaselineAnchor];
  id v56 = [v47 lastBaselineAnchor];
  id v57 = [v55 constraintEqualToAnchor:v56];

  *(void *)(v2 + 144) = v57;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v58 activateConstraints:isa];
}

void sub_10038DC88()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_3;
  }
  uint64_t v1 = (void *)Strong;
  uint64_t v2 = self;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_10038F734;
  *(void *)(v4 + 24) = v3;
  aBlock[4] = sub_1001B6080;
  aBlock[5] = v4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100535118;
  aBlock[3] = &unk_1008C4210;
  id v5 = _Block_copy(aBlock);
  id v6 = v1;
  swift_retain();
  swift_release();
  [(id)v2 performWithoutAnimation:v5];
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();

  swift_release();
  swift_release();
  if (v2)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_beginAccess();
    id v7 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v7)
    {
      id v8 = v7;
      [v7 setNeedsLayout];
    }
    swift_beginAccess();
    id v9 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v9)
    {
      id v10 = v9;
      [v9 layoutIfNeeded];
    }
  }
}

void sub_10038DE88(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v62 = a6;
  uint64_t v61 = a5;
  uint64_t v59 = a4;
  uint64_t v65 = a3;
  uint64_t v63 = a1;
  uint64_t v6 = type metadata accessor for FitnessPlusStackViewModel();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v60 = v8;
  uint64_t v64 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100959978);
  __chkstk_darwin(v9);
  double v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100950DA8);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  id v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  id v18 = (char *)&v59 - v17;
  __chkstk_darwin(v16);
  id v20 = (char *)&v59 - v19;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v22 = (void *)Strong;
    uint64_t v23 = Strong + OBJC_IVAR___CHStackListTableViewCell_fitnessPlusStackViewModel;
    swift_beginAccess();
    sub_1003605D4(v23, (uint64_t)v20);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v20, 1, 1, v6);
  }
  sub_1001F0F7C(v65, (uint64_t)v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
  uint64_t v24 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_1003605D4((uint64_t)v20, (uint64_t)v11);
  sub_1003605D4((uint64_t)v18, v24);
  id v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v25((uint64_t)v11, 1, v6) != 1)
  {
    sub_1003605D4((uint64_t)v11, (uint64_t)v15);
    if (v25(v24, 1, v6) != 1)
    {
      uint64_t v26 = v64;
      sub_100350DA4(v24, v64);
      char v27 = static UUID.== infix(_:_:)();
      sub_1001F0FE0(v26);
      sub_10008DB18((uint64_t)v18, &qword_100950DA8);
      sub_10008DB18((uint64_t)v20, &qword_100950DA8);
      sub_1001F0FE0((uint64_t)v15);
      sub_10008DB18((uint64_t)v11, &qword_100950DA8);
      if ((v27 & 1) == 0) {
        return;
      }
      goto LABEL_11;
    }
    sub_10008DB18((uint64_t)v18, &qword_100950DA8);
    sub_10008DB18((uint64_t)v20, &qword_100950DA8);
    sub_1001F0FE0((uint64_t)v15);
LABEL_9:
    sub_10008DB18((uint64_t)v11, &qword_100959978);
    return;
  }
  sub_10008DB18((uint64_t)v18, &qword_100950DA8);
  sub_10008DB18((uint64_t)v20, &qword_100950DA8);
  if (v25(v24, 1, v6) != 1) {
    goto LABEL_9;
  }
  sub_10008DB18((uint64_t)v11, &qword_100950DA8);
LABEL_11:
  NSString v28 = v63;
  if (v63)
  {
    uint64_t v29 = *(void *)&v63[OBJC_IVAR___CHCatalogItemViewModel_title];
    id v30 = objc_allocWithZone((Class)NSMutableAttributedString);
    id v31 = v28;
    id v32 = [v30 initWithAttributedString:v29, v59];
    id v33 = [v32 length];
    sub_1000AFA94((uint64_t *)&unk_10095BF70);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10074E640;
    *(void *)(inited + 32) = NSForegroundColorAttributeName;
    id v35 = self;
    id v36 = NSForegroundColorAttributeName;
    id v37 = [v35 whiteColor];
    uint64_t v38 = sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
    *(void *)(inited + 40) = v37;
    *(void *)(inited + 64) = v38;
    *(void *)(inited + 72) = NSFontAttributeName;
    uint64_t v39 = qword_10094AA80;
    id v40 = NSFontAttributeName;
    if (v39 != -1) {
      swift_once();
    }
    id v41 = (void *)qword_1009598F8;
    *(void *)(inited + 104) = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
    *(void *)(inited + 80) = v41;
    id v42 = v41;
    sub_1000DFC2C(inited);
    type metadata accessor for Key(0);
    sub_1001DCBD0();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v32 addAttributes:isa range:0 v33];

    swift_beginAccess();
    uint64_t v44 = swift_unknownObjectWeakLoadStrong();
    if (v44)
    {
      id v45 = (void *)v44;
      id v46 = *(id *)(v44 + OBJC_IVAR___CHStackListTableViewCell_titleLabel);

      [v46 setAttributedText:v32];
    }
    uint64_t v47 = swift_allocObject();
    swift_beginAccess();
    id v48 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    uint64_t v49 = v64;
    sub_1001F0F7C(v65, v64);
    unint64_t v50 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    unint64_t v51 = (v60 + v50 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v52 = swift_allocObject();
    *(void *)(v52 + 16) = v47;
    sub_100350DA4(v49, v52 + v50);
    id v53 = (uint64_t *)(v52 + v51);
    uint64_t v54 = v61;
    uint64_t v55 = v62;
    *id v53 = v61;
    v53[1] = v55;
    swift_retain();
    sub_10008A670(v54);
    sub_100485D1C(v31, (uint64_t)sub_10038F658, v52);
    swift_release();
    swift_release();
  }
  else
  {
    static os_log_type_t.error.getter();
    id v56 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = xmmword_1007509E0;
    *(void *)(v57 + 56) = &type metadata for String;
    *(void *)(v57 + 64) = sub_1000AA64C();
    *(void *)(v57 + 32) = 0xD000000000000043;
    *(void *)(v57 + 40) = 0x80000001007C2440;
    id v58 = v56;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
  }
}

void sub_10038E65C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v38 = a5;
  uint64_t v39 = a4;
  uint64_t v37 = a1;
  uint64_t v7 = type metadata accessor for FitnessPlusStackViewModel();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  v36[0] = (uint64_t)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100959978);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_100950DA8);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)v36 - v18;
  __chkstk_darwin(v17);
  double v21 = (char *)v36 - v20;
  swift_beginAccess();
  v36[1] = a2 + 16;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v23 = (void *)Strong;
    uint64_t v24 = a3;
    uint64_t v25 = Strong + OBJC_IVAR___CHStackListTableViewCell_fitnessPlusStackViewModel;
    swift_beginAccess();
    uint64_t v26 = v25;
    a3 = v24;
    sub_1003605D4(v26, (uint64_t)v21);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v21, 1, 1, v7);
  }
  sub_1001F0F7C(a3, (uint64_t)v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v19, 0, 1, v7);
  uint64_t v27 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_1003605D4((uint64_t)v21, (uint64_t)v12);
  sub_1003605D4((uint64_t)v19, v27);
  NSString v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v28((uint64_t)v12, 1, v7) == 1)
  {
    sub_10008DB18((uint64_t)v19, &qword_100950DA8);
    sub_10008DB18((uint64_t)v21, &qword_100950DA8);
    if (v28(v27, 1, v7) == 1)
    {
      uint64_t v29 = sub_10008DB18((uint64_t)v12, &qword_100950DA8);
      uint64_t v30 = v37;
      if (!v37) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v29 = sub_10008DB18((uint64_t)v12, &qword_100959978);
    goto LABEL_15;
  }
  sub_1003605D4((uint64_t)v12, (uint64_t)v16);
  if (v28(v27, 1, v7) == 1)
  {
    sub_10008DB18((uint64_t)v19, &qword_100950DA8);
    sub_10008DB18((uint64_t)v21, &qword_100950DA8);
    sub_1001F0FE0((uint64_t)v16);
    goto LABEL_10;
  }
  uint64_t v31 = v27;
  uint64_t v32 = v36[0];
  sub_100350DA4(v31, v36[0]);
  char v33 = static UUID.== infix(_:_:)();
  sub_1001F0FE0(v32);
  sub_10008DB18((uint64_t)v19, &qword_100950DA8);
  sub_10008DB18((uint64_t)v21, &qword_100950DA8);
  sub_1001F0FE0((uint64_t)v16);
  uint64_t v29 = sub_10008DB18((uint64_t)v12, &qword_100950DA8);
  uint64_t v30 = v37;
  if ((v33 & 1) == 0 || !v37) {
    goto LABEL_15;
  }
LABEL_13:
  swift_beginAccess();
  uint64_t v29 = swift_unknownObjectWeakLoadStrong();
  if (v29)
  {
    id v34 = (void *)v29;
    id v35 = *(id *)(v29 + OBJC_IVAR___CHStackListTableViewCell_iconImageView);

    [v35 setImage:v30];
  }
LABEL_15:
  if (v39) {
    v39(v29);
  }
}

id sub_10038EBFC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StackListTableViewCell();
  [super dealloc];
}

uint64_t sub_10038ECD8()
{
  return type metadata accessor for StackListTableViewCell();
}

uint64_t type metadata accessor for StackListTableViewCell()
{
  uint64_t result = qword_100959968;
  if (!qword_100959968) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10038ED2C()
{
  sub_100360208();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10038EDD4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  id v42 = a2;
  uint64_t v7 = type metadata accessor for FitnessPlusStackViewModel();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_100950DA8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001F0F7C(a1, (uint64_t)v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  uint64_t v14 = v5 + OBJC_IVAR___CHStackListTableViewCell_fitnessPlusStackViewModel;
  swift_beginAccess();
  sub_1003604E0((uint64_t)v13, v14);
  swift_endAccess();
  uint64_t v15 = *(void **)(v5 + OBJC_IVAR___CHStackListTableViewCell_titleLabel);
  id v16 = sub_1004761A4();
  [v15 setAttributedText:v16];

  uint64_t v17 = *(void **)(v5 + OBJC_IVAR___CHStackListTableViewCell_subtitleLabel);
  id v18 = sub_100475CC4();
  [v17 setAttributedText:v18];

  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = [self smm_systemImageNamed:v19];

  if (v20)
  {
    [*(id *)(v5 + OBJC_IVAR___CHStackListTableViewCell_iconImageView) setImage:v20];
  }
  double v21 = self;
  v22.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
  if (qword_10094AC48 != -1) {
    swift_once();
  }
  id v23 = [v21 formattedListStringForDate:v22.super.isa font:qword_10095D848];
  id v41 = v23;

  id v24 = objc_allocWithZone((Class)NSAttributedString);
  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = [v24 initWithString:v25];
  id v40 = v26;

  id v27 = [objc_allocWithZone((Class)NSMutableAttributedString) init];
  [v27 appendAttributedString:v23];
  [v27 appendAttributedString:v26];
  [*(id *)(v5 + OBJC_IVAR___CHStackListTableViewCell_dateLabel) setAttributedText:v27];
  NSString v28 = v42;
  uint64_t v29 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1001F0F7C(a1, (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v30 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v31 = a1;
  uint64_t v32 = v28;
  uint64_t v33 = (v30 + 24) & ~v30;
  unint64_t v34 = (v9 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v29;
  sub_100350DA4((uint64_t)v10, v35 + v33);
  *(void *)(v35 + v34) = v32;
  id v36 = (uint64_t *)(v35 + ((v34 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v38 = v43;
  uint64_t v37 = v44;
  uint64_t *v36 = v43;
  v36[1] = v37;
  swift_retain();
  id v39 = v32;
  sub_10008A670(v38);
  sub_100483D24(v31, (void (*)(void))sub_10038F414, v35);
  swift_release();
  swift_release();
}

uint64_t sub_10038F230()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10038F268()
{
  uint64_t v1 = (int *)(type metadata accessor for FitnessPlusStackViewModel() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v4 = v0 + v2;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6(v4 + v1[10], v5);
  uint64_t v7 = v4 + v1[11];
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  if (*(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8))) {
    swift_release();
  }

  return swift_deallocObject();
}

void sub_10038F414(char *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FitnessPlusStackViewModel() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = (uint64_t *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];

  sub_10038DE88(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_10038F4C4()
{
  uint64_t v1 = (int *)(type metadata accessor for FitnessPlusStackViewModel() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v4 = v0 + v2;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6(v4 + v1[10], v5);
  uint64_t v7 = v4 + v1[11];
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  if (*(void *)(v0 + v3)) {
    swift_release();
  }

  return swift_deallocObject();
}

void sub_10038F658(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FitnessPlusStackViewModel() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + v4;
  uint64_t v7 = v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *(void (**)(uint64_t))v7;
  uint64_t v9 = *(void *)(v7 + 8);

  sub_10038E65C(a1, v5, v6, v8, v9);
}

uint64_t sub_10038F6FC()
{
  return swift_deallocObject();
}

id sub_10038F734()
{
  return [*(id *)(v0 + 16) invalidateIntrinsicContentSize];
}

uint64_t sub_10038F744()
{
  return swift_deallocObject();
}

void sub_10038F754()
{
  uint64_t v1 = v0;
  unint64_t v2 = &v0[OBJC_IVAR___CHStackListTableViewCell_fitnessPlusStackViewModel];
  uint64_t v3 = type metadata accessor for FitnessPlusStackViewModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = OBJC_IVAR___CHStackListTableViewCell_insetContentView;
  id v5 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v4] = v5;
  uint64_t v6 = OBJC_IVAR___CHStackListTableViewCell_iconImageView;
  id v7 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v8 = (void *)UIView.withContentMode(_:)();

  id v9 = [v8 layer];
  [v9 setCornerRadius:3.0];

  [v8 setClipsToBounds:1];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v6] = v8;
  uint64_t v10 = OBJC_IVAR___CHStackListTableViewCell_labelStackView;
  id v11 = [objc_allocWithZone((Class)UIStackView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v11 setAxis:1];
  [v11 setDistribution:3];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v10] = v11;
  uint64_t v12 = OBJC_IVAR___CHStackListTableViewCell_titleLabel;
  id v13 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  LODWORD(v14) = 1148846080;
  [v13 setContentCompressionResistancePriority:1 forAxis:v14];
  if (qword_10094AA80 != -1) {
    swift_once();
  }
  uint64_t v15 = (void *)UILabel.withFont(_:)();

  [v15 setLineBreakMode:0];
  [v15 setNumberOfLines:0];
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v12] = v15;
  uint64_t v16 = OBJC_IVAR___CHStackListTableViewCell_subtitleLabel;
  id v17 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v17 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v16] = v17;
  uint64_t v18 = OBJC_IVAR___CHStackListTableViewCell_dateLabel;
  id v19 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  if (qword_10094AA88 != -1) {
    swift_once();
  }
  id v20 = (void *)UILabel.withFont(_:)();

  id v21 = [self secondaryLabelColor];
  NSDate v22 = (void *)UILabel.withTextColor(_:)();

  [v22 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v18] = v22;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_10038FB14()
{
  return sub_10038FB64(&OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile____lazy_storage___insetContentViewHeightAnchor, &OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_insetContentView);
}

id sub_10038FB28()
{
  return sub_10038FB64(&OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile____lazy_storage___leftCellContentViewHeightAnchor, &OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_leftCellContentView);
}

id sub_10038FB3C()
{
  return sub_10038FB64(&OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile____lazy_storage___middleCellContentViewHeightAnchor, &OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_middleCellContentView);
}

id sub_10038FB50()
{
  return sub_10038FB64(&OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile____lazy_storage___rightCellContentViewHeightAnchor, &OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_rightCellContentView);
}

id sub_10038FB64(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = [*(id *)(v2 + *a2) heightAnchor];
    id v7 = [v6 constraintEqualToConstant:177.0];

    uint64_t v8 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v7;
    id v5 = v7;

    uint64_t v4 = 0;
  }
  id v9 = v4;
  return v5;
}

char *sub_10038FC0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_leftAchievement] = 0;
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_middleAchievement] = 0;
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_rightAchievement] = 0;
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_activeEnergyUnit] = 0;
  v3[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_isWheelchairUser] = 2;
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_insetContentView;
  id v7 = objc_allocWithZone((Class)UIView);
  uint64_t v8 = v3;
  id v9 = [v7 initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v3[v6] = v9;
  uint64_t v10 = OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_leftCellContentView;
  id v11 = [objc_allocWithZone((Class)CHAchievementsCellContentView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v8[v10] = v11;
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_middleCellContentView;
  id v13 = [objc_allocWithZone((Class)CHAchievementsCellContentView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v8[v12] = v13;
  uint64_t v14 = OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_rightCellContentView;
  id v15 = [objc_allocWithZone((Class)CHAchievementsCellContentView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v8[v14] = v15;
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile____lazy_storage___insetContentViewHeightAnchor] = 0;
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile____lazy_storage___leftCellContentViewHeightAnchor] = 0;
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile____lazy_storage___middleCellContentViewHeightAnchor] = 0;
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile____lazy_storage___rightCellContentViewHeightAnchor] = 0;
  uint64_t v16 = &v8[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_onDidTapAchievement];
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = 0;

  if (a3)
  {
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v17 = 0;
  }
  v29.receiver = v8;
  v29.super_class = (Class)type metadata accessor for AwardsActivityTile();
  uint64_t v18 = (char *)[super initWithStyle:a1 reuseIdentifier:v17];

  uint64_t v19 = OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_insetContentView;
  id v20 = *(void **)&v18[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_insetContentView];
  id v21 = v18;
  id v22 = v20;
  id v23 = sub_10049E184();
  [v22 setBackgroundColor:v23];

  id v24 = [*(id *)&v18[v19] layer];
  [v24 setCornerRadius:sub_10049E1B0()];

  NSString v25 = *(void **)&v18[v19];
  [v25 addSubview:*(void *)&v21[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_leftCellContentView]];
  [v25 addSubview:*(void *)&v21[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_middleCellContentView]];
  [v25 addSubview:*(void *)&v21[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_rightCellContentView]];
  id v26 = [v21 contentView];
  [v26 addSubview:v25];

  id v27 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v21 action:"didTapAchievementWithTapGestureRecognizer:"];
  [*(id *)&v18[v19] addGestureRecognizer:v27];
  sub_10038FFF4();

  return v21;
}

void sub_10038FFF4()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  id v53 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100760BE0;
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_insetContentView];
  id v4 = [v3 topAnchor];
  id v5 = [v0 contentView];
  id v6 = [v5 topAnchor];

  id v7 = [v4 constraintEqualToAnchor:v6 constant:sub_10049E1C0()];
  *(void *)(v2 + 32) = v7;
  id v8 = [v3 leadingAnchor];
  id v9 = [v0 contentView];
  id v10 = [v9 leadingAnchor];

  sub_10049E1C0();
  id v12 = [v8 constraintEqualToAnchor:v10 constant:v11];

  *(void *)(v2 + 40) = v12;
  id v13 = [v3 trailingAnchor];
  id v14 = [v0 contentView];
  id v15 = [v14 trailingAnchor];

  sub_10049E1C0();
  id v17 = [v13 constraintEqualToAnchor:v15 constant:-v16];

  *(void *)(v2 + 48) = v17;
  id v18 = [v3 bottomAnchor];
  id v19 = [v0 contentView];
  id v20 = [v19 bottomAnchor];

  sub_10049E1C0();
  id v22 = [v18 constraintEqualToAnchor:v20 constant:-v21];

  *(void *)(v2 + 56) = v22;
  *(void *)(v2 + 64) = sub_10038FB14();
  id v23 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_leftCellContentView];
  id v24 = [v23 topAnchor];
  id v25 = [v3 topAnchor];
  id v26 = [v24 constraintEqualToAnchor:v25 constant:10.0];

  *(void *)(v2 + 72) = v26;
  id v27 = [v23 leadingAnchor];
  id v28 = [v3 leadingAnchor];
  id v29 = [v27 constraintEqualToAnchor:v28 constant:10.0];

  *(void *)(v2 + 80) = v29;
  id v30 = [v23 widthAnchor];
  uint64_t v31 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_middleCellContentView];
  id v32 = [v31 widthAnchor];
  id v33 = [v30 constraintEqualToAnchor:v32];

  *(void *)(v2 + 88) = v33;
  *(void *)(v2 + 96) = sub_10038FB28();
  id v34 = [v31 topAnchor];
  id v35 = [v3 topAnchor];
  id v36 = [v34 constraintEqualToAnchor:v35 constant:10.0];

  *(void *)(v2 + 104) = v36;
  id v37 = [v31 leadingAnchor];
  id v38 = [v23 trailingAnchor];
  id v39 = [v37 constraintEqualToAnchor:v38 constant:10.0];

  *(void *)(v2 + 112) = v39;
  *(void *)(v2 + 120) = sub_10038FB3C();
  id v40 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_rightCellContentView];
  id v41 = [v40 topAnchor];
  id v42 = [v3 topAnchor];
  id v43 = [v41 constraintEqualToAnchor:v42 constant:10.0];

  *(void *)(v2 + 128) = v43;
  id v44 = [v40 leadingAnchor];
  id v45 = [v31 trailingAnchor];
  id v46 = [v44 constraintEqualToAnchor:v45 constant:10.0];

  *(void *)(v2 + 136) = v46;
  id v47 = [v40 widthAnchor];
  id v48 = [v31 widthAnchor];
  id v49 = [v47 constraintEqualToAnchor:v48];

  *(void *)(v2 + 144) = v49;
  id v50 = [v40 trailingAnchor];
  id v51 = [v3 trailingAnchor];
  id v52 = [v50 constraintEqualToAnchor:v51 constant:-10.0];

  *(void *)(v2 + 152) = v52;
  *(void *)(v2 + 160) = sub_10038FB50();
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v53 activateConstraints:isa];
}

double sub_1003906DC()
{
  uint64_t v0 = self;
  id v1 = [v0 mainScreen];
  [v1 nativeBounds];
  CGFloat v3 = v2;
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;

  v17.origin.x = v3;
  v17.origin.y = v5;
  v17.size.width = v7;
  v17.size.height = v9;
  double Width = CGRectGetWidth(v17);
  id v11 = [v0 mainScreen];
  [v11 nativeScale];
  double v13 = v12;

  sub_10049E1C0();
  return (Width / v13 - v14 - v15 + -40.0) / 3.0;
}

void sub_1003907D0(void *a1, objc_class *a2, void *a3, uint64_t a4, void *a5, int a6)
{
  uint64_t v7 = v6;
  int v107 = a6;
  uint64_t v110 = a4;
  id v111 = a5;
  id v108 = a3;
  Class v109 = a2;
  swift_getObjectType();
  uint64_t v102 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v102);
  uint64_t v101 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_leftAchievement;
  double v12 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_leftAchievement);
  if (v12)
  {
    sub_10007E2D8(0, (unint64_t *)&qword_1009556B0);
    id v13 = a1;
    id v14 = v12;
    char v15 = static NSObject.== infix(_:_:)();

    if (v15)
    {
      double v16 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_middleAchievement);
      if (v16)
      {
        if (!v109) {
          goto LABEL_23;
        }
        CGRect v17 = v109;
        id v18 = v16;
        char v19 = static NSObject.== infix(_:_:)();

        if ((v19 & 1) == 0) {
          goto LABEL_23;
        }
      }
      else if (v109)
      {
        goto LABEL_23;
      }
      id v20 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_rightAchievement);
      if (v20)
      {
        if (!v108) {
          goto LABEL_23;
        }
        id v21 = v108;
        id v22 = v20;
        char v23 = static NSObject.== infix(_:_:)();

        if ((v23 & 1) == 0) {
          goto LABEL_23;
        }
      }
      else if (v108)
      {
        goto LABEL_23;
      }
      id v24 = *(void **)(v7 + OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_activeEnergyUnit);
      id v25 = v24;
      id v26 = [v111 achUnitManager];
      if (v26)
      {
        id v27 = [v26 userActiveEnergyBurnedUnit];
        swift_unknownObjectRelease();
        if (v24)
        {
          if (v27)
          {
            sub_10007E2D8(0, (unint64_t *)&qword_100954740);
            id v28 = v25;
            char v29 = static NSObject.== infix(_:_:)();

            if ((v29 & 1) == 0) {
              goto LABEL_23;
            }
LABEL_21:
            int v30 = *(unsigned __int8 *)(v7 + OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_isWheelchairUser);
            unsigned int v31 = [v111 wheelchairUser];
            if (v30 != 2 && ((v31 ^ v30) & 1) == 0) {
              return;
            }
            goto LABEL_23;
          }
        }
        else
        {
          id v25 = v27;
          if (!v27) {
            goto LABEL_21;
          }
        }
      }
      else if (!v24)
      {
        goto LABEL_21;
      }
    }
  }
LABEL_23:
  id v32 = *(void **)(v7 + v11);
  *(void *)(v7 + v11) = a1;
  id v33 = a1;

  id v34 = *(void **)(v7 + OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_middleAchievement);
  Class v35 = v109;
  *(void *)(v7 + OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_middleAchievement) = v109;
  id v36 = v35;

  id v37 = *(void **)(v7 + OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_rightAchievement);
  id v38 = v108;
  *(void *)(v7 + OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_rightAchievement) = v108;
  id v39 = v38;

  id v40 = [v111 achUnitManager];
  id v100 = v36;
  id v99 = v39;
  if (v40)
  {
    id v41 = [v40 userActiveEnergyBurnedUnit];
    swift_unknownObjectRelease();
  }
  else
  {
    id v41 = 0;
  }
  id v42 = *(void **)(v7 + OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_activeEnergyUnit);
  *(void *)(v7 + OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_activeEnergyUnit) = v41;

  id v43 = v111;
  unsigned __int8 v44 = [v111 wheelchairUser];
  *(unsigned char *)(v7 + OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_isWheelchairUser) = v44;
  double v45 = sub_1003906DC();
  id v97 = *(id *)(v7 + OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_leftCellContentView);
  id v46 = v97;
  [v97 setPreferredWidth:];
  id v47 = *(void **)(v7 + OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_middleCellContentView);
  [v47 setPreferredWidth:v45];
  uint64_t v96 = v7;
  id v106 = *(id *)(v7 + OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_rightCellContentView);
  [v106 setPreferredWidth:v45];
  uint64_t v48 = v107 & 1;
  [v46 configureWithAchievement:v33 badgeImageFactory:v110 locProvider:v43 shouldShowProgressBar:0 formatForFriend:v48];
  uint64_t v49 = sub_1000AFA94((uint64_t *)&unk_10096AA70);
  id v50 = v33;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v105 = v49;
  uint64_t v51 = EntityProperty<>.init(title:)();
  id v52 = v50;
  swift_retain();
  LOBYTE(v112) = [v52 unearned] ^ 1;
  EntityProperty.wrappedValue.setter();

  swift_release();
  unsigned __int8 v112 = _swiftEmptyArrayStorage;
  unint64_t v53 = sub_1003915D0();
  uint64_t v54 = sub_1000AFA94((uint64_t *)&unk_10096AA80);
  sub_1001B5C10();
  uint64_t v104 = v54;
  unint64_t v103 = v53;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  unsigned __int8 v112 = (void *)v51;
  uint64_t v113 = (objc_class *)v52;
  uint64_t v55 = v47;
  id v98 = v52;
  id v56 = (objc_class *)type metadata accessor for AppEntityViewAnnotation();
  id v57 = objc_allocWithZone(v56);
  unint64_t v58 = sub_1000818CC();
  uint64_t v59 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
  UIView.annotate(with:)();

  unint64_t v95 = (unint64_t)v55;
  uint64_t v60 = v100;
  LODWORD(v97) = v48;
  [v55 configureWithAchievement:v100 badgeImageFactory:v110 locProvider:v111 shouldShowProgressBar:0 formatForFriend:v48];
  if (v109)
  {
    uint64_t v61 = v60;
    LocalizedStringResource.init(stringLiteral:)();
    uint64_t v62 = v60;
    uint64_t v63 = EntityProperty<>.init(title:)();
    uint64_t v64 = v61;
    swift_retain();
    LOBYTE(v112) = [(objc_class *)v64 unearned] ^ 1;
    EntityProperty.wrappedValue.setter();

    swift_release();
    unsigned __int8 v112 = _swiftEmptyArrayStorage;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    unsigned __int8 v112 = (void *)v63;
    uint64_t v113 = v64;
    id v65 = objc_allocWithZone(v56);
    uint64_t v66 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
    UIView.annotate(with:)();

    uint64_t v60 = v62;
  }
  unint64_t v95 = v58;
  Class v109 = v56;
  uint64_t v67 = v99;
  [v106 configureWithAchievement:v99 badgeImageFactory:v110 locProvider:v111 shouldShowProgressBar:0 formatForFriend:v97];
  if (v108)
  {
    id v68 = v67;
    LocalizedStringResource.init(stringLiteral:)();
    uint64_t v69 = v67;
    uint64_t v70 = EntityProperty<>.init(title:)();
    id v71 = v68;
    swift_retain();
    LOBYTE(v112) = [v71 unearned] ^ 1;
    EntityProperty.wrappedValue.setter();

    swift_release();
    unsigned __int8 v112 = _swiftEmptyArrayStorage;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    unsigned __int8 v112 = (void *)v70;
    uint64_t v113 = (objc_class *)v71;
    uint64_t v67 = v69;
    id v72 = objc_allocWithZone(v109);
    uint64_t v73 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
    UIView.annotate(with:)();
  }
  uint64_t v74 = self;
  uint64_t v75 = v107 & 1;
  id v76 = v111;
  [v74 cellHeightForAchievement:v98 preferredWidth:0 appliesLargeCellInsets:v111 locProvider:0 withProgressBar:v75 formatForFriend:v45];
  double v78 = v77;
  [v74 cellHeightForAchievement:v60 preferredWidth:0 appliesLargeCellInsets:v76 locProvider:0 withProgressBar:v75 formatForFriend:v45];
  double v80 = v79;
  [v74 cellHeightForAchievement:v67 preferredWidth:0 appliesLargeCellInsets:v76 locProvider:0 withProgressBar:v75 formatForFriend:v45];
  double v82 = v81;
  sub_1000AFA94(&qword_10094E770);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100752410;
  *(double *)(inited + 32) = v78;
  *(double *)(inited + 40) = v80;
  *(double *)(inited + 48) = v82;
  double v84 = COERCE_DOUBLE(sub_1000C2B68(inited));
  LOBYTE(v76) = v85;
  swift_setDeallocating();
  if (v76) {
    double v86 = 177.0;
  }
  else {
    double v86 = v84;
  }
  int v87 = AAUIShouldUseNewTrophyCase();
  id v88 = sub_10038FB28();
  uint64_t v89 = v88;
  if (v87)
  {
    [v88 setConstant:v86];

    id v90 = sub_10038FB3C();
    [v90 setConstant:v86];

    id v91 = sub_10038FB50();
    [v91 setConstant:v86];
  }
  else
  {
    [v88 setConstant:v78];

    id v92 = sub_10038FB3C();
    [v92 setConstant:v80];

    id v91 = sub_10038FB50();
    [v91 setConstant:v82];
  }

  id v93 = sub_10038FB14();
  [v93 setConstant:v86 + 20.0];
}

void sub_100391178(void *a1)
{
  [a1 locationInView:*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_insetContentView)];
  CGFloat v3 = v2;
  CGFloat v5 = v4;
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_leftCellContentView);
  [v6 frame];
  v15.x = v3;
  v15.y = v5;
  if (CGRectContainsPoint(v18, v15))
  {
    uint64_t v7 = &OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_leftAchievement;
  }
  else
  {
    uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_middleCellContentView);
    [v6 frame];
    v16.x = v3;
    v16.y = v5;
    if (CGRectContainsPoint(v19, v16))
    {
      uint64_t v7 = &OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_middleAchievement;
    }
    else
    {
      uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_rightCellContentView);
      [v6 frame];
      v17.x = v3;
      v17.y = v5;
      if (!CGRectContainsPoint(v20, v17)) {
        return;
      }
      uint64_t v7 = &OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_rightAchievement;
    }
  }
  double v8 = *(void **)(v1 + *v7);
  id v13 = v8;
  id v9 = v6;
  uint64_t v10 = v9;
  if (v8)
  {
    uint64_t v11 = *(void (**)(id, id))(v1 + OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_onDidTapAchievement);
    if (v11)
    {
      id v12 = v13;
      id v13 = v10;
      sub_10008A670((uint64_t)v11);
      [v13 badgeRect];
      v11(v12, v13);

      sub_10005E5F8((uint64_t)v11);
    }
    else
    {
    }
    id v9 = v13;
  }
}

id sub_10039145C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AwardsActivityTile();
  return [super dealloc];
}

uint64_t type metadata accessor for AwardsActivityTile()
{
  return self;
}

unint64_t sub_1003915B4()
{
  return 0xD000000000000012;
}

unint64_t sub_1003915D0()
{
  unint64_t result = qword_10094C758;
  if (!qword_10094C758)
  {
    type metadata accessor for AppEntityVisualState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C758);
  }
  return result;
}

void sub_100391628()
{
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_leftAchievement] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_middleAchievement] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_rightAchievement] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_activeEnergyUnit] = 0;
  v0[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_isWheelchairUser] = 2;
  uint64_t v1 = OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_insetContentView;
  id v2 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v1] = v2;
  uint64_t v3 = OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_leftCellContentView;
  id v4 = [objc_allocWithZone((Class)CHAchievementsCellContentView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v3] = v4;
  uint64_t v5 = OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_middleCellContentView;
  id v6 = [objc_allocWithZone((Class)CHAchievementsCellContentView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v5] = v6;
  uint64_t v7 = OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_rightCellContentView;
  id v8 = [objc_allocWithZone((Class)CHAchievementsCellContentView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v7] = v8;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile____lazy_storage___insetContentViewHeightAnchor] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile____lazy_storage___leftCellContentViewHeightAnchor] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile____lazy_storage___middleCellContentViewHeightAnchor] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile____lazy_storage___rightCellContentViewHeightAnchor] = 0;
  id v9 = &v0[OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_onDidTapAchievement];
  *id v9 = 0;
  v9[1] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100391814()
{
  type metadata accessor for TrainingLoadOnboardingStateHandler();
  uint64_t v0 = swift_allocObject();
  id v1 = [self standardUserDefaults];
  NSString v2 = String._bridgeToObjectiveC()();
  unsigned int v3 = [v1 BOOLForKey:v2];

  if (v3 && (FIHasSeenTrainingLoadOnboarding() & 1) == 0) {
    FISetHasSeenTrainingLoadOnboarding();
  }
  *(unsigned char *)(v0 + 16) = v3;
  uint64_t result = ObservationRegistrar.init()();
  qword_100997DB0 = v0;
  return result;
}

uint64_t sub_1003918E4()
{
  swift_getKeyPath();
  sub_100391BCC();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 16);
}

void sub_100391954(uint64_t a1, char a2)
{
  *(unsigned char *)(a1 + 16) = a2;
  swift_getKeyPath();
  sub_100391BCC();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  id v4 = [self standardUserDefaults];
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 setBool:v3 forKey:v5];
}

uint64_t sub_100391A34()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10FitnessApp34TrainingLoadOnboardingStateHandler___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100391AD4()
{
  return type metadata accessor for TrainingLoadOnboardingStateHandler();
}

uint64_t type metadata accessor for TrainingLoadOnboardingStateHandler()
{
  uint64_t result = qword_100959A48;
  if (!qword_100959A48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100391B28()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_100391BCC()
{
  unint64_t result = qword_10094E130;
  if (!qword_10094E130)
  {
    type metadata accessor for TrainingLoadOnboardingStateHandler();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094E130);
  }
  return result;
}

id sub_100391C24()
{
  [*(id *)(*(void *)(*(void *)&v0[OBJC_IVAR____TtC10FitnessApp26TodayActivityTileDataModel_activityDataProvider]+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_activitySummaryListener)+ OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_observers) removeObject:v0];
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC10FitnessApp26TodayActivityTileDataModel_observers];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = self;
    uint64_t v4 = v1 + 32;
    swift_bridgeObjectRetain_n();
    do
    {
      sub_10008F484(v4, (uint64_t)v8);
      id v5 = [v3 defaultCenter];
      sub_10007E4EC(v8, v8[3]);
      [v5 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];

      swift_unknownObjectRelease();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v8);
      v4 += 32;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
  }
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for TodayActivityTileDataModel();
  return [super dealloc];
}

uint64_t sub_100391E04()
{
  uint64_t result = (uint64_t)sub_1000592C0();
  if ((result & 1) == 0)
  {
    uint64_t v2 = self;
    id v3 = [v2 defaultCenter];
    uint64_t v4 = self;
    id v5 = [v4 mainQueue];
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v26 = sub_100392C8C;
    uint64_t v27 = v6;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v23 = 1107296256;
    id v24 = sub_1000711BC;
    id v25 = &unk_1008C4298;
    objc_super v7 = _Block_copy(&aBlock);
    swift_release();
    id v21 = [v3 addObserverForName:UIApplicationSignificantTimeChangeNotification object:0 queue:v5 usingBlock:v7];
    _Block_release(v7);

    id v8 = [v2 defaultCenter];
    if (qword_10094A6E0 != -1) {
      swift_once();
    }
    id v9 = (id)qword_100997870;
    id v10 = [v4 mainQueue];
    uint64_t v11 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v26 = sub_100392C94;
    uint64_t v27 = v11;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v23 = 1107296256;
    id v24 = sub_1000711BC;
    id v25 = &unk_1008C42C0;
    id v12 = _Block_copy(&aBlock);
    swift_release();
    id v13 = [v8 addObserverForName:v9 object:0 queue:v10 usingBlock:v12];
    _Block_release(v12);

    id v14 = [v2 defaultCenter];
    uint64_t v15 = kFIUIFitnessUnitPreferencesDidChangeNotification;
    id v16 = [v4 mainQueue];
    uint64_t v17 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v26 = sub_100392C9C;
    uint64_t v27 = v17;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v23 = 1107296256;
    id v24 = sub_1000711BC;
    id v25 = &unk_1008C42E8;
    CGRect v18 = _Block_copy(&aBlock);
    swift_release();
    id v19 = [v14 addObserverForName:v15 object:0 queue:v16 usingBlock:v18];
    _Block_release(v18);

    sub_1000AFA94((uint64_t *)&unk_1009556C0);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_100752410;
    *(void *)(v20 + 56) = swift_getObjectType();
    *(void *)(v20 + 32) = v21;
    *(void *)(v20 + 88) = swift_getObjectType();
    *(void *)(v20 + 64) = v13;
    *(void *)(v20 + 120) = swift_getObjectType();
    *(void *)(v20 + 96) = v19;
    *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp26TodayActivityTileDataModel_observers) = v20;
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100392230()
{
  static os_log_type_t.default.getter();
  id v0 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    sub_1003926B0();
  }
}

void sub_1003922D8()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (v0)
  {
    uint64_t v1 = v0;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v1 + 16) && (unint64_t v2 = sub_1000DE24C((uint64_t)v16), (v3 & 1) != 0))
    {
      sub_10008F484(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v17);
    }
    else
    {
      long long v17 = 0u;
      long long v18 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1000DEDB4((uint64_t)v16);
    if (*((void *)&v18 + 1))
    {
      if (swift_dynamicCast())
      {
        static os_log_type_t.default.getter();
        id v4 = HKLogActivity;
        os_log(_:dso:log:_:_:)();

        swift_beginAccess();
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v6 = (void *)Strong;
          objc_super v7 = (void *)swift_unknownObjectWeakLoadStrong();

          if (v7)
          {
            sub_1001FF420(16);
          }
        }
        swift_beginAccess();
        uint64_t v8 = swift_unknownObjectWeakLoadStrong();
        if (v8)
        {
          id v9 = (void *)v8;
          id v10 = (void *)swift_unknownObjectWeakLoadStrong();

          if (v10)
          {
            swift_beginAccess();
            uint64_t v11 = swift_unknownObjectWeakLoadStrong();
            if (v11
              && (id v12 = (void *)v11,
                  id v13 = *(void **)(v11 + OBJC_IVAR____TtC10FitnessApp26TodayActivityTileDataModel_activitySummary),
                  id v14 = v13,
                  v12,
                  v13))
            {
              id v15 = v14;
              sub_1001FE568(v13, 16, 0, 0, 2);
            }
            else
            {
            }
          }
        }
      }
    }
    else
    {
      sub_100074898((uint64_t)&v17);
    }
  }
}

void sub_100392524()
{
  static os_log_type_t.default.getter();
  id v0 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v2 = (void *)Strong;
    char v3 = (void *)swift_unknownObjectWeakLoadStrong();

    if (v3)
    {
      swift_beginAccess();
      uint64_t v4 = swift_unknownObjectWeakLoadStrong();
      if (v4
        && (id v5 = (void *)v4,
            uint64_t v6 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp26TodayActivityTileDataModel_activitySummary),
            id v7 = v6,
            v5,
            v6))
      {
        swift_beginAccess();
        uint64_t v8 = swift_unknownObjectWeakLoadStrong();
        if (v8)
        {
          id v9 = (void *)v8;
          id v10 = (unsigned __int8 *)objc_retain(*(id *)(v8
                                                     + OBJC_IVAR____TtC10FitnessApp26TodayActivityTileDataModel_activityDataProvider));

          LODWORD(v9) = v10[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser];
          id v11 = v7;
          sub_1001FE568(v6, (int)v9, 0, 0, 2);

          char v3 = v11;
        }
      }
      else
      {
        id v7 = v3;
      }
    }
  }
}

uint64_t sub_1003926B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Calendar();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)v41 - v11;
  static Calendar.current.getter();
  Date.init()();
  Calendar.startOfDay(for:)();
  id v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v10, v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v15 = (id)Strong;
    id v16 = *(unsigned __int8 **)(v1 + OBJC_IVAR____TtC10FitnessApp26TodayActivityTileDataModel_activityDataProvider);
    id v17 = [*(id *)&v16[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_summaryCache] activitySummaryForCacheIndex:sub_1000CBADC()];
    if (v17)
    {
      long long v18 = v17;
      uint64_t v19 = OBJC_IVAR____TtC10FitnessApp26TodayActivityTileDataModel_activitySummary;
      uint64_t v20 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp26TodayActivityTileDataModel_activitySummary);
      if (v20 && ([v20 _allFieldsAreEqual:v18] & 1) != 0)
      {
        static os_log_type_t.default.getter();
        id v21 = HKLogActivity;
        os_log(_:dso:log:_:_:)();
      }
      else
      {
        v41[3] = static os_log_type_t.default.getter();
        uint64_t v43 = v6;
        id v22 = (void *)HKLogActivity;
        sub_1000AFA94((uint64_t *)&unk_1009546D0);
        uint64_t v23 = swift_allocObject();
        id v42 = v16;
        uint64_t v24 = v23;
        *(_OWORD *)(v23 + 16) = xmmword_1007509E0;
        *(void *)(v23 + 56) = sub_100392BBC();
        *(void *)(v24 + 64) = sub_100392BFC();
        *(void *)(v24 + 32) = v18;
        id v25 = v22;
        id v26 = v18;
        os_log(_:dso:log:_:_:)();

        uint64_t v6 = v43;
        swift_bridgeObjectRelease();
        uint64_t v27 = *(void **)(v1 + v19);
        *(void *)(v1 + v19) = v18;
        id v28 = v26;

        int v29 = v42[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser];
        id v30 = v28;
        sub_1001FE568(v18, v29, 0, 0, 2);

        id v15 = v30;
      }
    }
    else
    {
      id v42 = (unsigned __int8 *)v13;
      uint64_t v43 = v6;
      static os_log_type_t.default.getter();
      unsigned int v31 = (void *)HKLogActivity;
      sub_1000AFA94((uint64_t *)&unk_1009546D0);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_1007509E0;
      id v33 = v31;
      uint64_t v34 = Date.description.getter();
      uint64_t v36 = v35;
      *(void *)(v32 + 56) = &type metadata for String;
      *(void *)(v32 + 64) = sub_1000AA64C();
      *(void *)(v32 + 32) = v34;
      *(void *)(v32 + 40) = v36;
      os_log(_:dso:log:_:_:)();

      swift_bridgeObjectRelease();
      id v37 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp26TodayActivityTileDataModel_activitySummary);
      *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp26TodayActivityTileDataModel_activitySummary) = 0;

      uint64_t v38 = swift_unknownObjectWeakLoadStrong();
      if (v38)
      {
        id v39 = (void *)v38;
        sub_1001FFCF0();

        id v15 = v39;
      }
      id v13 = (void (*)(char *, uint64_t))v42;
      uint64_t v6 = v43;
    }
  }
  else
  {
    static os_log_type_t.default.getter();
    id v15 = HKLogActivity;
    os_log(_:dso:log:_:_:)();
  }

  return ((uint64_t (*)(char *, uint64_t))v13)(v12, v6);
}

uint64_t type metadata accessor for TodayActivityTileDataModel()
{
  return self;
}

unint64_t sub_100392BBC()
{
  unint64_t result = qword_100959B60;
  if (!qword_100959B60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100959B60);
  }
  return result;
}

unint64_t sub_100392BFC()
{
  unint64_t result = qword_100959B68;
  if (!qword_100959B68)
  {
    sub_100392BBC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100959B68);
  }
  return result;
}

uint64_t sub_100392C54()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100392C8C()
{
}

void sub_100392C94()
{
}

void sub_100392C9C()
{
}

unint64_t sub_100392CB0()
{
  unint64_t result = qword_100959B70;
  if (!qword_100959B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100959B70);
  }
  return result;
}

uint64_t sub_100392D04()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_1000258C4(v0, qword_100997DB8);
  sub_1000876DC(v0, (uint64_t)qword_100997DB8);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_100392D68()
{
  uint64_t v0 = sub_1000AFA94(&qword_100959BD0);
  __chkstk_darwin(v0);
  uint64_t v1 = sub_1000AFA94(&qword_100959BC8);
  sub_1000258C4(v1, qword_100997DD0);
  sub_1000876DC(v1, (uint64_t)qword_100997DD0);
  sub_100392CB0();
  IntentURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x80000001007B75C0;
  v2._countAndFlagsBits = 0xD000000000000016;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_1000AFA94(&qword_100959BC0);
  IntentURLRepresentation.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v3);
  return IntentURLRepresentation.init(stringInterpolation:)();
}

uint64_t sub_100392EB8()
{
  uint64_t v0 = sub_1000AFA94(&qword_100959BB0);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000AFA94(&qword_100959BB8);
  __chkstk_darwin(v1);
  sub_100392CB0();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x80000001007C39C0;
  v2._countAndFlagsBits = 0xD000000000000011;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_1000AFA94(&qword_100959BC0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_100393048@<X0>(uint64_t a1@<X8>)
{
  if (qword_10094AAA0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000AFA94(&qword_100959BC8);
  uint64_t v3 = sub_1000876DC(v2, (uint64_t)qword_100997DD0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_1003930F8()
{
  unint64_t result = qword_100959B78;
  if (!qword_100959B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100959B78);
  }
  return result;
}

unint64_t sub_100393150()
{
  unint64_t result = qword_100959B80;
  if (!qword_100959B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100959B80);
  }
  return result;
}

uint64_t sub_1003931A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003931C0@<X0>(uint64_t a1@<X8>)
{
  if (qword_10094AA98 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_1000876DC(v2, (uint64_t)qword_100997DB8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_10039326C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  unint64_t v5 = sub_1003936F4();
  *uint64_t v4 = v2;
  v4[1] = sub_1001A15A8;
  return URLRepresentableIntent.perform()(a2, v5);
}

uint64_t sub_100393318@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1003933EC();
  *a1 = result;
  return result;
}

uint64_t sub_100393340(uint64_t a1)
{
  unint64_t v2 = sub_100392CB0();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenSettingsIntent()
{
  return &type metadata for OpenSettingsIntent;
}

unint64_t sub_100393390()
{
  unint64_t result = qword_100959B90;
  if (!qword_100959B90)
  {
    sub_1000A1370(&qword_100959B98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100959B90);
  }
  return result;
}

uint64_t sub_1003933EC()
{
  uint64_t v17 = type metadata accessor for InputConnectionBehavior();
  uint64_t v0 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AFA94(&qword_10094D320);
  __chkstk_darwin(v3 - 8);
  unint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_1000AFA94(&qword_100959BA0);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  char v18 = 0;
  uint64_t v14 = type metadata accessor for IntentDialog();
  id v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v5, 1, 1, v14);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v17);
  sub_1001B87D4();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

unint64_t sub_1003936F4()
{
  unint64_t result = qword_100959BA8;
  if (!qword_100959BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100959BA8);
  }
  return result;
}

uint64_t sub_100393748@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100393774@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_100398098(&qword_100959D80, (void (*)(uint64_t))type metadata accessor for EffortHolder);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC10FitnessApp12EffortHolder__effort;
  swift_beginAccess();
  return sub_1000AEF2C(v3, a1, &qword_10094F480);
}

uint64_t sub_100393848@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100398098(&qword_100959D80, (void (*)(uint64_t))type metadata accessor for EffortHolder);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC10FitnessApp12EffortHolder__effort;
  swift_beginAccess();
  return sub_1000AEF2C(v4, a2, &qword_10094F480);
}

uint64_t sub_10039391C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094F480);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000AEF2C(a1, (uint64_t)v6, &qword_10094F480);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_100398098(&qword_100959D80, (void (*)(uint64_t))type metadata accessor for EffortHolder);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return sub_10008DB18((uint64_t)v6, &qword_10094F480);
}

uint64_t sub_100393A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC10FitnessApp12EffortHolder__effort;
  swift_beginAccess();
  sub_100397CD4(a2, v3);
  return swift_endAccess();
}

uint64_t sub_100393AC8()
{
  sub_10008DB18(v0 + OBJC_IVAR____TtC10FitnessApp12EffortHolder__effort, &qword_10094F480);
  uint64_t v1 = v0 + OBJC_IVAR____TtC10FitnessApp12EffortHolder___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100393B80()
{
  return type metadata accessor for EffortHolder();
}

uint64_t type metadata accessor for EffortHolder()
{
  uint64_t result = qword_100959C10;
  if (!qword_100959C10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100393BD4()
{
  sub_100393CA0();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ObservationRegistrar();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_100393CA0()
{
  if (!qword_100959C20)
  {
    type metadata accessor for AppleExertionScale();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100959C20);
    }
  }
}

id sub_100393CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_effortController] = 0;
  *(void *)&v3[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_effortView] = 0;
  *(void *)&v3[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_cellPadding] = 0x4028000000000000;
  *(void *)&v3[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_cellInset] = 0x4030000000000000;
  uint64_t v6 = OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_effortHolder;
  type metadata accessor for EffortHolder();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = v7 + OBJC_IVAR____TtC10FitnessApp12EffortHolder__effort;
  uint64_t v9 = type metadata accessor for AppleExertionScale();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  v10(v8, 1, 1, v9);
  uint64_t v11 = v3;
  ObservationRegistrar.init()();
  *(void *)&v3[v6] = v7;
  *(void *)&v11[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_dataCalculator] = 0;
  *(void *)&v11[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_workout] = 0;
  *(void *)&v11[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_workoutActivity] = 0;
  *(void *)&v11[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_noteSink] = 0;

  if (a3)
  {
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v12 = 0;
  }
  v22.receiver = v11;
  v22.super_class = (Class)type metadata accessor for WorkoutDetailEffortTableViewCell();
  id v13 = [super initWithStyle:a1 reuseIdentifier:v12];

  uint64_t v14 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100751040;
  id v16 = v13;
  id v17 = [v16 contentView];
  id v18 = [v17 heightAnchor];

  id v19 = [v18 constraintGreaterThanOrEqualToConstant:74.0];
  *(void *)(v15 + 32) = v19;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v14 activateConstraints:isa];

  return v16;
}

void sub_100394024()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_dataCalculator);
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_workout);
    uint64_t v3 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_workoutActivity);
    uint64_t v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v9[4] = sub_1003983BC;
    v9[5] = v4;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_1006B866C;
    v9[3] = &unk_1008C43B0;
    uint64_t v5 = _Block_copy(v9);
    id v6 = v3;
    id v7 = v1;
    id v8 = v2;
    swift_release();
    [v7 effortForWorkout:v8 workoutActivity:v6 completion:v5];
    _Block_release(v5);
  }
}

uint64_t sub_10039415C(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v9 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v10 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_100398404;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008C4400;
  id v13 = _Block_copy(aBlock);
  id v14 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100398098((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v16);
}

void sub_100394490(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1000AFA94(&qword_10094F480);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    uint64_t v8 = *(void *)(Strong + OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_effortHolder);
    if (a2)
    {
      id v9 = a2;
      AppleExertionScale.init(quantity:)();
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      *(void *)&v13[-16] = v8;
      *(void *)&v13[-8] = v5;
      uint64_t v14 = v8;
      sub_100398098(&qword_100959D80, (void (*)(uint64_t))type metadata accessor for EffortHolder);
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_release();
      sub_10008DB18((uint64_t)v5, &qword_10094F480);

      uint64_t v7 = v9;
    }
    else
    {
      uint64_t v11 = type metadata accessor for AppleExertionScale();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 1, v11);
      uint64_t v12 = swift_getKeyPath();
      __chkstk_darwin(v12);
      *(void *)&v13[-16] = v8;
      *(void *)&v13[-8] = v5;
      uint64_t v14 = v8;
      sub_100398098(&qword_100959D80, (void (*)(uint64_t))type metadata accessor for EffortHolder);
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_release();
      sub_10008DB18((uint64_t)v5, &qword_10094F480);
    }
  }
}

id sub_10039475C(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v5 = v4;
  id v71 = a4;
  uint64_t v9 = sub_1000AFA94(&qword_100959EB0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AFA94(&qword_100959EB8);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v72 = v16;
  uint64_t v73 = v17;
  __chkstk_darwin(v16);
  id v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void **)&v5[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_workout];
  *(void *)&v5[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_workout] = a1;
  id v21 = a1;

  objc_super v22 = *(void **)&v5[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_workoutActivity];
  *(void *)&v5[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_workoutActivity] = a2;
  id v23 = a2;

  uint64_t v24 = *(void **)&v5[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_dataCalculator];
  *(void *)&v5[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_dataCalculator] = a3;
  id v25 = a3;

  id v26 = [self defaultCenter];
  NSNotificationCenter.publisher(for:object:)();

  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  id v74 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v27 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v11, 1, 1, v27);
  sub_100398098(&qword_100959EC0, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  sub_1003982D4();
  Publisher.subscribe<A>(on:options:)();
  sub_10008DB18((uint64_t)v11, &qword_100959EB0);

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v28 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v21;
  *(void *)(v29 + 24) = v28;
  sub_1000A132C(&qword_100959ED0, &qword_100959EB8);
  id v30 = v21;
  uint64_t v31 = v72;
  uint64_t v32 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v19, v31);
  *(void *)&v5[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_noteSink] = v32;
  swift_release();
  sub_100394024();
  uint64_t v33 = OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_effortView;
  *(void *)&v5[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_effortView] = *(void *)&v5[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_effortHolder];
  swift_retain();
  id result = (id)swift_release();
  uint64_t v35 = *(void **)&v5[v33];
  if (v35)
  {
    uint64_t v36 = OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_effortController;
    id v37 = *(void **)&v5[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_effortController];
    if (v37)
    {
      id v74 = v35;
      swift_retain_n();
      id v38 = v37;
      dispatch thunk of UIHostingController.rootView.setter();
      id result = [v38 view];
      if (result)
      {
        id v39 = result;
LABEL_13:
        [v39 layoutIfNeeded:v71];

        return (id)swift_release();
      }
      __break(1u);
    }
    else
    {
      id v74 = v35;
      id v40 = objc_allocWithZone((Class)sub_1000AFA94(&qword_100959ED8));
      swift_retain_n();
      id v41 = (void *)UIHostingController.init(rootView:)();
      id v42 = *(void **)&v5[v36];
      *(void *)&v5[v36] = v41;
      id v38 = v41;

      id result = [v38 view];
      if (result)
      {
        uint64_t v43 = result;
        [result setTranslatesAutoresizingMaskIntoConstraints:0];

        id result = [v38 view];
        if (result)
        {
          unsigned __int8 v44 = result;
          id v45 = [self clearColor];
          [v44 setBackgroundColor:v45];

          id v46 = [v5 contentView];
          id result = [v38 view];
          if (result)
          {
            id v47 = result;
            [v46 addSubview:result];

            [v71 addChildViewController:v38];
            sub_1000AFA94((uint64_t *)&unk_10095B850);
            uint64_t v48 = swift_allocObject();
            *(_OWORD *)(v48 + 16) = xmmword_100751160;
            id result = [v38 view];
            if (result)
            {
              uint64_t v49 = result;
              id v50 = [result topAnchor];

              id v51 = [v5 contentView];
              id v52 = [v51 topAnchor];

              id v53 = [v50 constraintEqualToAnchor:v52 constant:12.0];
              *(void *)(v48 + 32) = v53;
              id result = [v38 view];
              if (result)
              {
                uint64_t v54 = result;
                id v55 = [result leadingAnchor];

                id v56 = [v5 contentView];
                id v57 = [v56 leadingAnchor];

                id v58 = [v55 constraintEqualToAnchor:v57 constant:12.0];
                *(void *)(v48 + 40) = v58;
                id result = [v38 view];
                if (result)
                {
                  uint64_t v59 = result;
                  id v60 = [result trailingAnchor];

                  id v61 = [v5 contentView];
                  id v62 = [v61 trailingAnchor];

                  id v63 = [v60 constraintEqualToAnchor:v62 constant:-12.0];
                  *(void *)(v48 + 48) = v63;
                  id result = [v38 view];
                  if (result)
                  {
                    uint64_t v64 = result;
                    id v65 = self;
                    id v66 = [v64 bottomAnchor];

                    id v67 = [v5 contentView];
                    id v68 = [v67 bottomAnchor];

                    id v69 = [v66 constraintEqualToAnchor:v68 constant:-12.0];
                    *(void *)(v48 + 56) = v69;
                    id v74 = (id)v48;
                    specialized Array._endMutation()();
                    sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
                    Class isa = Array._bridgeToObjectiveC()().super.isa;
                    swift_bridgeObjectRelease();
                    [v65 activateConstraints:isa];

                    [v38 didMoveToParentViewController:v71];
                    id result = [v38 view];
                    id v39 = result;
                    if (result) {
                      goto LABEL_13;
                    }
LABEL_23:
                    __break(1u);
                    return result;
                  }
LABEL_22:
                  __break(1u);
                  goto LABEL_23;
                }
LABEL_21:
                __break(1u);
                goto LABEL_22;
              }
LABEL_20:
              __break(1u);
              goto LABEL_21;
            }
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
    }
    __break(1u);
    goto LABEL_17;
  }
  return result;
}

uint64_t sub_100395074(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v24 - v11;
  uint64_t v13 = Notification.userInfo.getter();
  if (!v13)
  {
    long long v26 = 0u;
    long long v27 = 0u;
LABEL_13:
    sub_10008DB18((uint64_t)&v26, &qword_100955A00);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    return sub_10008DB18((uint64_t)v5, (uint64_t *)&unk_1009555F0);
  }
  uint64_t v14 = v13;
  v24[1] = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v24[2] = v15;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v14 + 16) && (unint64_t v16 = sub_1000DE24C((uint64_t)v25), (v17 & 1) != 0))
  {
    sub_10008F484(*(void *)(v14 + 56) + 32 * v16, (uint64_t)&v26);
  }
  else
  {
    long long v26 = 0u;
    long long v27 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1000DEDB4((uint64_t)v25);
  if (!*((void *)&v27 + 1)) {
    goto LABEL_13;
  }
  int v18 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, v18 ^ 1u, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1) {
    return sub_10008DB18((uint64_t)v5, (uint64_t *)&unk_1009555F0);
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
  id v19 = [a2 UUID];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(v19) = static UUID.== infix(_:_:)();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  if (v19)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      objc_super v22 = (void *)Strong;
      sub_100394024();
    }
  }
  return ((uint64_t (*)(char *, uint64_t))v20)(v12, v6);
}

id sub_100395444()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailEffortTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutDetailEffortTableViewCell()
{
  return self;
}

ValueMetadata *type metadata accessor for WorkoutDetailEffortView()
{
  return &type metadata for WorkoutDetailEffortView;
}

uint64_t sub_100395548()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100395564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_10094F480);
  __chkstk_darwin(v3 - 8);
  uint64_t v36 = (uint64_t)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for EffortMiniGraph();
  uint64_t v5 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_100959D60);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100959D68);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v37 = (uint64_t)&v35 - v17;
  uint64_t v18 = sub_1000AFA94(&qword_100959D70);
  __chkstk_darwin(v18 - 8);
  uint64_t v35 = (uint64_t)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  objc_super v22 = (char *)&v35 - v21;
  *(void *)objc_super v22 = static HorizontalAlignment.center.getter();
  *((void *)v22 + 1) = 0;
  unsigned char v22[16] = 1;
  uint64_t v23 = sub_1000AFA94(&qword_100959D78);
  sub_100395A00(a1, (uint64_t)&v22[*(int *)(v23 + 44)]);
  swift_getKeyPath();
  *(void *)&long long v40 = a1;
  sub_100398098(&qword_100959D80, (void (*)(uint64_t))type metadata accessor for EffortHolder);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v24 = a1 + OBJC_IVAR____TtC10FitnessApp12EffortHolder__effort;
  swift_beginAccess();
  sub_1000AEF2C(v24, v36, &qword_10094F480);
  EffortMiniGraph.init(effort:)();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v25 = v38;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v11, v7, v38);
  long long v26 = &v11[*(int *)(v9 + 44)];
  long long v27 = v41;
  *(_OWORD *)long long v26 = v40;
  *((_OWORD *)v26 + 1) = v27;
  *((_OWORD *)v26 + 2) = v42;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v25);
  LOBYTE(v25) = static Edge.Set.trailing.getter();
  sub_1000AEF2C((uint64_t)v11, (uint64_t)v15, &qword_100959D60);
  uint64_t v28 = &v15[*(int *)(v13 + 44)];
  *uint64_t v28 = v25;
  *(_OWORD *)(v28 + 8) = 0u;
  *(_OWORD *)(v28 + 24) = 0u;
  v28[40] = 1;
  sub_10008DB18((uint64_t)v11, &qword_100959D60);
  uint64_t v29 = v37;
  sub_1000AEEC8((uint64_t)v15, v37, &qword_100959D68);
  uint64_t v30 = v35;
  sub_1000AEF2C((uint64_t)v22, v35, &qword_100959D70);
  sub_1000AEF2C(v29, (uint64_t)v15, &qword_100959D68);
  uint64_t v31 = v39;
  sub_1000AEF2C(v30, v39, &qword_100959D70);
  uint64_t v32 = sub_1000AFA94(&qword_100959D88);
  uint64_t v33 = v31 + *(int *)(v32 + 48);
  *(void *)uint64_t v33 = 0;
  *(unsigned char *)(v33 + 8) = 1;
  sub_1000AEF2C((uint64_t)v15, v31 + *(int *)(v32 + 64), &qword_100959D68);
  sub_10008DB18(v29, &qword_100959D68);
  sub_10008DB18((uint64_t)v22, &qword_100959D70);
  sub_10008DB18((uint64_t)v15, &qword_100959D68);
  return sub_10008DB18(v30, &qword_100959D70);
}

uint64_t sub_100395A00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v3 - 8);
  long long v41 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_100959D90);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1000AFA94(&qword_100959D98);
  __chkstk_darwin(v38);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100959DA0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  long long v40 = (char *)&v37 - v15;
  uint64_t v16 = sub_1000AFA94(&qword_100959DA8);
  __chkstk_darwin(v16 - 8);
  uint64_t v39 = (uint64_t)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v37 - v19;
  *(void *)uint64_t v20 = static VerticalAlignment.center.getter();
  *((void *)v20 + 1) = 0;
  v20[16] = 1;
  uint64_t v21 = sub_1000AFA94(&qword_100959DB0);
  sub_100395E74((uint64_t *)&v20[*(int *)(v21 + 44)]);
  *(void *)uint64_t v7 = static VerticalAlignment.center.getter();
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  uint64_t v22 = sub_1000AFA94(&qword_100959DB8);
  sub_100396268(a1, (uint64_t)&v7[*(int *)(v22 + 44)]);
  uint64_t v23 = static Font.title.getter();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1000AEF2C((uint64_t)v7, (uint64_t)v9, &qword_100959D90);
  uint64_t v25 = (uint64_t *)&v9[*(int *)(v38 + 36)];
  uint64_t *v25 = KeyPath;
  v25[1] = v23;
  sub_10008DB18((uint64_t)v7, &qword_100959D90);
  uint64_t v26 = enum case for Font.Design.rounded(_:);
  uint64_t v27 = type metadata accessor for Font.Design();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = (uint64_t)v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 104))(v41, v26, v27);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(v29, 0, 1, v27);
  sub_100397D44();
  View.fontDesign(_:)();
  sub_10008DB18(v29, &qword_10094C448);
  sub_10008DB18((uint64_t)v9, &qword_100959D98);
  uint64_t v30 = v40;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v40, v13, v10);
  uint64_t v31 = v39;
  sub_1000AEF2C((uint64_t)v20, v39, &qword_100959DA8);
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v32(v13, v30, v10);
  uint64_t v33 = v42;
  sub_1000AEF2C(v31, v42, &qword_100959DA8);
  uint64_t v34 = sub_1000AFA94(&qword_100959DD0);
  v32((char *)(v33 + *(int *)(v34 + 48)), v13, v10);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v11 + 8);
  v35(v30, v10);
  sub_10008DB18((uint64_t)v20, &qword_100959DA8);
  v35(v13, v10);
  return sub_10008DB18(v31, &qword_100959DA8);
}

uint64_t sub_100395E74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v1 = sub_1000AFA94(&qword_100959E78);
  uint64_t v2 = v1 - 8;
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)&v32[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for Image.Scale();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v32[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000AFA94(&qword_100959E80);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)&v32[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v38 = sub_1000AFA94(&qword_100959EA0) - 8;
  __chkstk_darwin(v38);
  uint64_t v14 = &v32[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  uint64_t v37 = &v32[-v16];
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v17 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v35 = v18;
  uint64_t v36 = v17;
  uint64_t v34 = v19;
  int v33 = v20 & 1;
  uint64_t v21 = Image.init(systemName:)();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for Image.Scale.small(_:), v5);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, unsigned char *, uint64_t))(v6 + 16))((char *)v4 + *(int *)(v2 + 36), v8, v5);
  *uint64_t v4 = KeyPath;
  sub_1000AEF2C((uint64_t)v4, (uint64_t)v12 + *(int *)(v10 + 44), &qword_100959E78);
  *uint64_t v12 = v21;
  swift_retain();
  sub_10008DB18((uint64_t)v4, &qword_100959E78);
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  LODWORD(v5) = static HierarchicalShapeStyle.secondary.getter();
  sub_1000AEF2C((uint64_t)v12, (uint64_t)v14, &qword_100959E80);
  *(_DWORD *)&v14[*(int *)(v38 + 44)] = v5;
  sub_10008DB18((uint64_t)v12, &qword_100959E80);
  uint64_t v23 = v37;
  sub_1000AEEC8((uint64_t)v14, (uint64_t)v37, &qword_100959EA0);
  sub_1000AEF2C((uint64_t)v23, (uint64_t)v14, &qword_100959EA0);
  uint64_t v24 = v39;
  uint64_t v25 = v35;
  uint64_t v26 = v36;
  uint64_t v27 = v34;
  uint64_t *v39 = v36;
  v24[1] = v27;
  LOBYTE(v8) = v33;
  *((unsigned char *)v24 + 16) = v33;
  void v24[3] = v25;
  uint64_t v28 = v24;
  uint64_t v29 = sub_1000AFA94(&qword_100959EA8);
  sub_1000AEF2C((uint64_t)v14, (uint64_t)v28 + *(int *)(v29 + 48), &qword_100959EA0);
  uint64_t v30 = (uint64_t)v28 + *(int *)(v29 + 64);
  *(void *)uint64_t v30 = 0;
  *(unsigned char *)(v30 + 8) = 1;
  sub_1000A1750(v26, v27, (char)v8);
  swift_bridgeObjectRetain();
  sub_10008DB18((uint64_t)v23, &qword_100959EA0);
  sub_10008DB18((uint64_t)v14, &qword_100959EA0);
  sub_1000A06C0(v26, v27, (char)v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100396268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v111 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_100959DD8);
  __chkstk_darwin(v3 - 8);
  double v86 = &v80[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v95 = sub_1000AFA94(&qword_100959DE0);
  __chkstk_darwin(v95);
  char v85 = &v80[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v89 = &v80[-v7];
  uint64_t v91 = type metadata accessor for ExertionValue();
  uint64_t v88 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  double v84 = &v80[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  int v87 = &v80[-v10];
  uint64_t v108 = sub_1000AFA94(&qword_100959DE8);
  __chkstk_darwin(v108);
  Class v109 = &v80[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v92 = sub_1000AFA94(&qword_100959DF0);
  __chkstk_darwin(v92);
  id v93 = &v80[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v107 = sub_1000AFA94(&qword_100959DF8);
  __chkstk_darwin(v107);
  uint64_t v94 = &v80[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_1000AFA94(&qword_100959E00);
  __chkstk_darwin(v14 - 8);
  uint64_t v102 = &v80[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v106 = sub_1000AFA94(&qword_100959E08);
  __chkstk_darwin(v106);
  uint64_t v101 = &v80[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  unint64_t v103 = &v80[-v18];
  uint64_t v19 = type metadata accessor for AppleExertionScale();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v90 = &v80[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = sub_1000AFA94(&qword_100959E10);
  uint64_t v23 = v22 - 8;
  __chkstk_darwin(v22);
  uint64_t v25 = &v80[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = sub_1000AFA94(&qword_10094F480);
  __chkstk_darwin(v26 - 8);
  int v83 = &v80[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v28);
  id v97 = &v80[-v29];
  __chkstk_darwin(v30);
  uint64_t v104 = &v80[-v31];
  __chkstk_darwin(v32);
  uint64_t v34 = &v80[-v33];
  __chkstk_darwin(v35);
  uint64_t v37 = &v80[-v36];
  uint64_t v38 = sub_1000AFA94(&qword_100959E18);
  __chkstk_darwin(v38 - 8);
  uint64_t v110 = &v80[-((v39 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v40);
  uint64_t v105 = &v80[-v41];
  swift_getKeyPath();
  uint64_t v42 = a1 + OBJC_IVAR____TtC10FitnessApp12EffortHolder___observationRegistrar;
  uint64_t v113 = a1;
  uint64_t v100 = sub_100398098(&qword_100959D80, (void (*)(uint64_t))type metadata accessor for EffortHolder);
  uint64_t v96 = v42;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v98 = a1;
  uint64_t v43 = a1 + OBJC_IVAR____TtC10FitnessApp12EffortHolder__effort;
  swift_beginAccess();
  sub_1000AEF2C(v43, (uint64_t)v37, &qword_10094F480);
  (*(void (**)(unsigned char *, void, uint64_t))(v20 + 104))(v34, enum case for AppleExertionScale.skipped(_:), v19);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v20 + 56))(v34, 0, 1, v19);
  uint64_t v44 = (uint64_t)&v25[*(int *)(v23 + 56)];
  sub_1000AEF2C((uint64_t)v37, (uint64_t)v25, &qword_10094F480);
  sub_1000AEF2C((uint64_t)v34, v44, &qword_10094F480);
  uint64_t v99 = v20;
  id v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (v45((uint64_t)v25, 1, v19) == 1)
  {
    sub_10008DB18((uint64_t)v34, &qword_10094F480);
    sub_10008DB18((uint64_t)v37, &qword_10094F480);
    if (v45(v44, 1, v19) == 1)
    {
      sub_10008DB18((uint64_t)v25, &qword_10094F480);
LABEL_8:
      id v51 = v102;
      sub_100397048((uint64_t)v102);
      uint64_t v52 = static Color.gray.getter();
      id v53 = v101;
      sub_1000AEF2C((uint64_t)v51, (uint64_t)v101, &qword_100959E00);
      *(void *)&v53[*(int *)(v106 + 36)] = v52;
      sub_10008DB18((uint64_t)v51, &qword_100959E00);
      uint64_t v54 = v103;
      sub_1000AEEC8((uint64_t)v53, (uint64_t)v103, &qword_100959E08);
      sub_1000AEF2C((uint64_t)v54, (uint64_t)v93, &qword_100959E08);
      swift_storeEnumTagMultiPayload();
      sub_100397E84();
      sub_100397F44();
      uint64_t v55 = (uint64_t)v94;
      _ConditionalContent<>.init(storage:)();
      sub_1000AEF2C(v55, (uint64_t)v109, &qword_100959DF8);
      swift_storeEnumTagMultiPayload();
      sub_100397E08();
      uint64_t v56 = (uint64_t)v105;
      _ConditionalContent<>.init(storage:)();
      sub_10008DB18(v55, &qword_100959DF8);
      uint64_t v57 = (uint64_t)v54;
      goto LABEL_11;
    }
    goto LABEL_6;
  }
  sub_1000AEF2C((uint64_t)v25, (uint64_t)v104, &qword_10094F480);
  if (v45(v44, 1, v19) == 1)
  {
    sub_10008DB18((uint64_t)v34, &qword_10094F480);
    sub_10008DB18((uint64_t)v37, &qword_10094F480);
    (*(void (**)(unsigned char *, uint64_t))(v99 + 8))(v104, v19);
LABEL_6:
    sub_10008DB18((uint64_t)v25, &qword_100959E10);
    goto LABEL_9;
  }
  uint64_t v46 = v99;
  id v47 = v90;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v99 + 32))(v90, v44, v19);
  sub_100398098(&qword_100959E70, (void (*)(uint64_t))&type metadata accessor for AppleExertionScale);
  uint64_t v82 = v43;
  uint64_t v48 = v104;
  int v81 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v49 = *(void (**)(unsigned char *, uint64_t))(v46 + 8);
  v49(v47, v19);
  sub_10008DB18((uint64_t)v34, &qword_10094F480);
  sub_10008DB18((uint64_t)v37, &qword_10094F480);
  id v50 = v48;
  uint64_t v43 = v82;
  v49(v50, v19);
  sub_10008DB18((uint64_t)v25, &qword_10094F480);
  if (v81) {
    goto LABEL_8;
  }
LABEL_9:
  swift_getKeyPath();
  uint64_t v58 = v98;
  uint64_t v112 = v98;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v59 = v97;
  sub_1000AEF2C(v43, (uint64_t)v97, &qword_10094F480);
  if (!v45((uint64_t)v59, 1, v19))
  {
    uint64_t v65 = v99;
    id v66 = v90;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v99 + 16))(v90, v59, v19);
    sub_10008DB18((uint64_t)v59, &qword_10094F480);
    id v67 = v84;
    AppleExertionScale.exertionValue.getter();
    (*(void (**)(unsigned char *, uint64_t))(v65 + 8))(v66, v19);
    uint64_t v68 = v88;
    uint64_t v69 = (uint64_t)v87;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v88 + 32))(v87, v67, v91);
    uint64_t v70 = v86;
    sub_10039744C(v69, (uint64_t)v86);
    swift_getKeyPath();
    uint64_t v112 = v58;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    id v71 = v83;
    sub_1000AEF2C(v43, (uint64_t)v83, &qword_10094F480);
    uint64_t v72 = static EffortColors.textColor(exertion:)();
    sub_10008DB18((uint64_t)v71, &qword_10094F480);
    uint64_t v73 = v85;
    sub_1000AEF2C((uint64_t)v70, (uint64_t)v85, &qword_100959DD8);
    *(void *)&v73[*(int *)(v95 + 36)] = v72;
    sub_10008DB18((uint64_t)v70, &qword_100959DD8);
    id v74 = v89;
    sub_1000AEEC8((uint64_t)v73, (uint64_t)v89, &qword_100959DE0);
    sub_1000AEF2C((uint64_t)v74, (uint64_t)v93, &qword_100959DE0);
    swift_storeEnumTagMultiPayload();
    sub_100397E84();
    sub_100397F44();
    uint64_t v75 = (uint64_t)v94;
    _ConditionalContent<>.init(storage:)();
    sub_1000AEF2C(v75, (uint64_t)v109, &qword_100959DF8);
    swift_storeEnumTagMultiPayload();
    sub_100397E08();
    uint64_t v56 = (uint64_t)v105;
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v75, &qword_100959DF8);
    sub_10008DB18((uint64_t)v74, &qword_100959DE0);
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v69, v91);
    goto LABEL_13;
  }
  sub_10008DB18((uint64_t)v59, &qword_10094F480);
  id v60 = v102;
  sub_100397914((uint64_t)v102);
  uint64_t v61 = static Color.gray.getter();
  id v62 = v101;
  sub_1000AEF2C((uint64_t)v60, (uint64_t)v101, &qword_100959E00);
  *(void *)&v62[*(int *)(v106 + 36)] = v61;
  sub_10008DB18((uint64_t)v60, &qword_100959E00);
  uint64_t v63 = (uint64_t)v62;
  uint64_t v64 = v103;
  sub_1000AEEC8(v63, (uint64_t)v103, &qword_100959E08);
  sub_1000AEF2C((uint64_t)v64, (uint64_t)v109, &qword_100959E08);
  swift_storeEnumTagMultiPayload();
  sub_100397E08();
  sub_100397E84();
  uint64_t v56 = (uint64_t)v105;
  _ConditionalContent<>.init(storage:)();
  uint64_t v57 = (uint64_t)v64;
LABEL_11:
  sub_10008DB18(v57, &qword_100959E08);
LABEL_13:
  id v76 = v110;
  sub_1000AEF2C(v56, (uint64_t)v110, &qword_100959E18);
  uint64_t v77 = v111;
  sub_1000AEF2C((uint64_t)v76, v111, &qword_100959E18);
  uint64_t v78 = v77 + *(int *)(sub_1000AFA94(&qword_100959E68) + 48);
  *(void *)uint64_t v78 = 0;
  *(unsigned char *)(v78 + 8) = 1;
  sub_10008DB18(v56, &qword_100959E18);
  return sub_10008DB18((uint64_t)v76, &qword_100959E18);
}

uint64_t sub_100397048@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v1 = type metadata accessor for LocalizationFeature();
  uint64_t v36 = *(void *)(v1 - 8);
  uint64_t v37 = v1;
  __chkstk_darwin(v1);
  uint64_t v35 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AFA94(&qword_100959E78);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for Image.Scale();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_100959E80);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (uint64_t *)((char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v35 - v16;
  uint64_t v18 = Image.init(_internalSystemName:)();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Image.Scale.small(_:), v7);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v6 + *(int *)(v4 + 36), v10, v7);
  *uint64_t v6 = KeyPath;
  sub_1000AEF2C((uint64_t)v6, (uint64_t)v14 + *(int *)(v12 + 44), &qword_100959E78);
  *uint64_t v14 = v18;
  swift_retain();
  sub_10008DB18((uint64_t)v6, &qword_100959E78);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  sub_1000AEEC8((uint64_t)v14, (uint64_t)v17, &qword_100959E80);
  uint64_t v21 = v35;
  uint64_t v20 = v36;
  uint64_t v22 = v37;
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v35, enum case for LocalizationFeature.workout(_:), v37);
  uint64_t v23 = static Localization.workoutUILocalizedString(_:feature:)();
  uint64_t v25 = v24;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
  uint64_t v39 = v23;
  uint64_t v40 = v25;
  sub_1000A06D0();
  uint64_t v26 = Text.init<A>(_:)();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  LOBYTE(v20) = v31 & 1;
  sub_1000AEF2C((uint64_t)v17, (uint64_t)v14, &qword_100959E80);
  uint64_t v32 = v38;
  sub_1000AEF2C((uint64_t)v14, v38, &qword_100959E80);
  uint64_t v33 = v32 + *(int *)(sub_1000AFA94(&qword_100959E88) + 48);
  *(void *)uint64_t v33 = v26;
  *(void *)(v33 + 8) = v28;
  *(unsigned char *)(v33 + 16) = v20;
  *(void *)(v33 + 24) = v30;
  sub_1000A1750(v26, v28, v20);
  swift_bridgeObjectRetain();
  sub_10008DB18((uint64_t)v17, &qword_100959E80);
  sub_1000A06C0(v26, v28, v20);
  swift_bridgeObjectRelease();
  return sub_10008DB18((uint64_t)v14, &qword_100959E80);
}

uint64_t sub_10039744C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v47 = a2;
  uint64_t v2 = sub_1000AFA94(&qword_10094E320);
  __chkstk_darwin(v2 - 8);
  uint64_t v46 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_100959E78);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for Image.Scale();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100959E80);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v43 = (uint64_t *)((char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_1000AFA94(&qword_100959E90);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v44 = (uint64_t)&v43 - v20;
  uint64_t v48 = ExertionValue.level.getter();
  uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v50 = v21;
  v22._countAndFlagsBits = 0x2E656C637269632ELL;
  v22._object = (void *)0xEC0000006C6C6966;
  String.append(_:)(v22);
  uint64_t v23 = Image.init(systemName:)();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for Image.Scale.medium(_:), v8);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)v7 + *(int *)(v5 + 36), v11, v8);
  *uint64_t v7 = KeyPath;
  uint64_t v25 = *(int *)(v13 + 44);
  uint64_t v26 = v43;
  sub_1000AEF2C((uint64_t)v7, (uint64_t)v43 + v25, &qword_100959E78);
  uint64_t *v26 = v23;
  swift_retain();
  sub_10008DB18((uint64_t)v7, &qword_100959E78);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_release();
  uint64_t v27 = (uint64_t)v46;
  static SymbolRenderingMode.hierarchical.getter();
  uint64_t v28 = type metadata accessor for SymbolRenderingMode();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 0, 1, v28);
  uint64_t v29 = swift_getKeyPath();
  uint64_t v30 = (uint64_t *)&v18[*(int *)(v16 + 44)];
  uint64_t v31 = sub_1000AFA94(&qword_10094E2F8);
  sub_1000AEF2C(v27, (uint64_t)v30 + *(int *)(v31 + 28), &qword_10094E320);
  uint64_t *v30 = v29;
  sub_1000AEF2C((uint64_t)v26, (uint64_t)v18, &qword_100959E80);
  sub_10008DB18(v27, &qword_10094E320);
  sub_10008DB18((uint64_t)v26, &qword_100959E80);
  uint64_t v32 = v44;
  sub_1000AEEC8((uint64_t)v18, v44, &qword_100959E90);
  uint64_t v49 = ExertionValue.shortDescription.getter();
  uint64_t v50 = v33;
  sub_1000A06D0();
  uint64_t v34 = Text.init<A>(_:)();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  LOBYTE(v27) = v39 & 1;
  sub_1000AEF2C(v32, (uint64_t)v18, &qword_100959E90);
  uint64_t v40 = v47;
  sub_1000AEF2C((uint64_t)v18, v47, &qword_100959E90);
  uint64_t v41 = v40 + *(int *)(sub_1000AFA94(&qword_100959E98) + 48);
  *(void *)uint64_t v41 = v34;
  *(void *)(v41 + 8) = v36;
  *(unsigned char *)(v41 + 16) = v27;
  *(void *)(v41 + 24) = v38;
  sub_1000A1750(v34, v36, v27);
  swift_bridgeObjectRetain();
  sub_10008DB18(v32, &qword_100959E90);
  sub_1000A06C0(v34, v36, v27);
  swift_bridgeObjectRelease();
  return sub_10008DB18((uint64_t)v18, &qword_100959E90);
}

uint64_t sub_100397914@<X0>(uint64_t a1@<X8>)
{
  v27[0] = a1;
  uint64_t v1 = sub_1000AFA94(&qword_100959E78);
  uint64_t v2 = v1 - 8;
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for Image.Scale();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100959E80);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v27 - v14;
  uint64_t v16 = Image.init(systemName:)();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Image.Scale.small(_:), v5);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v4 + *(int *)(v2 + 36), v8, v5);
  *uint64_t v4 = KeyPath;
  sub_1000AEF2C((uint64_t)v4, (uint64_t)v12 + *(int *)(v10 + 44), &qword_100959E78);
  *uint64_t v12 = v16;
  swift_retain();
  sub_10008DB18((uint64_t)v4, &qword_100959E78);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  sub_1000AEEC8((uint64_t)v12, (uint64_t)v15, &qword_100959E80);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v18 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  LOBYTE(v5) = v23 & 1;
  sub_1000AEF2C((uint64_t)v15, (uint64_t)v12, &qword_100959E80);
  uint64_t v24 = v27[0];
  sub_1000AEF2C((uint64_t)v12, v27[0], &qword_100959E80);
  uint64_t v25 = v24 + *(int *)(sub_1000AFA94(&qword_100959E88) + 48);
  *(void *)uint64_t v25 = v18;
  *(void *)(v25 + 8) = v20;
  *(unsigned char *)(v25 + 16) = v5;
  *(void *)(v25 + 24) = v22;
  sub_1000A1750(v18, v20, v5);
  swift_bridgeObjectRetain();
  sub_10008DB18((uint64_t)v15, &qword_100959E80);
  sub_1000A06C0(v18, v20, v5);
  swift_bridgeObjectRelease();
  return sub_10008DB18((uint64_t)v12, &qword_100959E80);
}

uint64_t sub_100397C60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  *(void *)a1 = static VerticalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v4 = sub_1000AFA94(&qword_100959D58);
  return sub_100395564(v3, a1 + *(int *)(v4 + 44));
}

uint64_t sub_100397CB8()
{
  return sub_100393A5C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100397CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094F480);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_100397D44()
{
  unint64_t result = qword_100959DC0;
  if (!qword_100959DC0)
  {
    sub_1000A1370(&qword_100959D98);
    sub_1000A132C(&qword_100959DC8, &qword_100959D90);
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100959DC0);
  }
  return result;
}

unint64_t sub_100397E08()
{
  unint64_t result = qword_100959E20;
  if (!qword_100959E20)
  {
    sub_1000A1370(&qword_100959DF8);
    sub_100397E84();
    sub_100397F44();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100959E20);
  }
  return result;
}

unint64_t sub_100397E84()
{
  unint64_t result = qword_100959E28;
  if (!qword_100959E28)
  {
    sub_1000A1370(&qword_100959E08);
    sub_100398004(&qword_100959E30, &qword_100959E00, &qword_100959E38, &qword_100959E40);
    sub_1000A132C(&qword_10094E300, &qword_10094E308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100959E28);
  }
  return result;
}

unint64_t sub_100397F44()
{
  unint64_t result = qword_100959E48;
  if (!qword_100959E48)
  {
    sub_1000A1370(&qword_100959DE0);
    sub_100398004(&qword_100959E50, &qword_100959DD8, &qword_100959E58, &qword_100959E60);
    sub_1000A132C(&qword_10094E300, &qword_10094E308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100959E48);
  }
  return result;
}

uint64_t sub_100398004(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    sub_1000A132C(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100398098(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003980E0()
{
  return EnvironmentValues.symbolRenderingMode.getter();
}

uint64_t sub_100398104(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094E320);
  __chkstk_darwin(v2 - 8);
  sub_1000AEF2C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10094E320);
  return EnvironmentValues.symbolRenderingMode.setter();
}

uint64_t sub_100398198()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_1003981BC()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_1003981E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Image.Scale();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return EnvironmentValues.imageScale.setter();
}

uint64_t sub_1003982AC()
{
  return EnvironmentValues.symbolRenderingMode.getter();
}

unint64_t sub_1003982D4()
{
  unint64_t result = qword_100959EC8;
  if (!qword_100959EC8)
  {
    sub_10007E2D8(255, (unint64_t *)&qword_1009555D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100959EC8);
  }
  return result;
}

uint64_t sub_10039833C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100398374()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003983B4(uint64_t a1)
{
  return sub_100395074(a1, *(void **)(v1 + 16));
}

uint64_t sub_1003983BC(void *a1)
{
  return sub_10039415C(a1);
}

uint64_t sub_1003983C4()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100398404()
{
  sub_100394490(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_10039840C()
{
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_effortController] = 0;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_effortView] = 0;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_cellPadding] = 0x4028000000000000;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_cellInset] = 0x4030000000000000;
  uint64_t v1 = OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_effortHolder;
  type metadata accessor for EffortHolder();
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2 + OBJC_IVAR____TtC10FitnessApp12EffortHolder__effort;
  uint64_t v4 = type metadata accessor for AppleExertionScale();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  v5(v3, 1, 1, v4);
  ObservationRegistrar.init()();
  *(void *)&v0[v1] = v2;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_dataCalculator] = 0;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_workout] = 0;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_workoutActivity] = 0;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailEffortTableViewCell_noteSink] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100398584()
{
  return sub_1000A132C(&qword_100959EE0, &qword_100959EE8);
}

uint64_t sub_1003985C8()
{
  return sub_100397CB8();
}

id sub_100398608()
{
  sub_10007E4EC(&v0[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_achievementDataProvider], *(void *)&v0[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_achievementDataProvider + 24]);
  sub_1000679EC(&qword_100959FC0, (void (*)(uint64_t))type metadata accessor for TrophyCaseSectionViewController);
  uint64_t v1 = v0;
  dispatch thunk of AAUIAwardsDataProviding.remove(observer:)();

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for TrophyCaseSectionViewController();
  return [super dealloc];
}

uint64_t sub_1003988F4()
{
  return type metadata accessor for TrophyCaseSectionViewController();
}

uint64_t type metadata accessor for TrophyCaseSectionViewController()
{
  uint64_t result = qword_100959FA8;
  if (!qword_100959FA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_1003989E8(char a1)
{
  objc_super v3 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_transitionAnimatorFromViewController];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_transitionAnimatorFromViewController] = 0;

  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_transitionAnimator];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_transitionAnimator] = 0;

  id v5 = [v1 navigationController];
  if (v5)
  {
    uint64_t v6 = v5;
    [v5 setDelegate:v1];
  }
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for TrophyCaseSectionViewController();
  return [super viewDidAppear:a1 & 1];
}

id sub_100398C00()
{
  id v1 = [self sharedApplication];
  id v2 = [v1 preferredContentSizeCategory];

  LOBYTE(v1) = UIContentSizeCategory.isAccessibilityCategory.getter();
  if (v1) {
    uint64_t v3 = 2;
  }
  else {
    uint64_t v3 = 3;
  }
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_numberOfCellPerRow;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_numberOfCellPerRow] = v3;
  id result = [v0 view];
  if (result)
  {
    uint64_t v6 = result;
    [result bounds];
    double v8 = v7;

    *(double *)&v0[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_cellWidth] = floor((v8+ (double)(v3 + 1)* -10.0)/ (double)*(uint64_t *)&v0[v4]);
    uint64_t v9 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_cellHeightsCache];
    return [v9 removeAllObjects];
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100398D20(void *a1, void *a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  double v8 = v7;
  id v75 = a2;
  uint64_t v76 = a3;
  uint64_t v14 = type metadata accessor for IndexPath();
  uint64_t v73 = *(void *)(v14 - 8);
  uint64_t v74 = v14;
  __chkstk_darwin(v14);
  uint64_t v71 = v15;
  uint64_t v72 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for AAUIAwardsDataProviderSection();
  uint64_t v17 = *(void *)(v16 - 8);
  *(void *)&double v18 = __chkstk_darwin(v16).n128_u64[0];
  uint64_t v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v70 = a1;
  if (objc_msgSend(a1, "unearned", v18))
  {
    LODWORD(v69) = 0;
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v17 + 104))(v20, enum case for AAUIAwardsDataProviderSection.goForIt(_:), v16);
    sub_1000679EC(&qword_1009555A8, (void (*)(uint64_t))&type metadata accessor for AAUIAwardsDataProviderSection);
    int v21 = dispatch thunk of static Equatable.== infix(_:_:)();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    LODWORD(v69) = v21 ^ 1;
  }
  uint64_t v68 = (void (*)(char *, uint64_t, uint64_t))type metadata accessor for TrophyCaseAwardDetailViewController();
  uint64_t v22 = *(void **)&v8[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_healthStore];
  char v23 = *(void **)&v8[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_friendListManager];
  sub_10008E75C((uint64_t)&v8[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_achievementDataProvider], (uint64_t)&aBlock);
  uint64_t v24 = *(void **)&v8[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_badgeImageFactory];
  uint64_t v25 = *(void **)&v8[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_resourceProvider];
  uint64_t v26 = *(void **)&v8[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_formattingManager];
  uint64_t v27 = *(void **)&v8[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_localizationProvider];
  uint64_t v28 = *(void **)&v8[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_pauseRingsCoordinator];
  uint64_t v29 = *(void **)&v8[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_fitnessAppContext];
  id v61 = *(id *)&v8[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_workoutFormattingManager];
  id v62 = *(id *)&v8[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_workoutDataProvider];
  uint64_t v30 = (uint64_t)v80;
  uint64_t v64 = v81;
  uint64_t v66 = sub_1000DDC00((uint64_t)&aBlock, (uint64_t)v80);
  id v65 = v70;
  id v63 = v22;
  id v60 = v23;
  id v31 = v24;
  id v32 = v25;
  id v33 = v26;
  id v34 = v27;
  id v35 = v28;
  id v36 = v29;
  id v37 = v61;
  id v38 = v62;
  LODWORD(v70) = v69 & 1;
  *(void *)&long long v59 = v35;
  *((void *)&v59 + 1) = v36;
  id v69 = sub_1006C8960(v65, v63, v60, v66, v31, v32, v33, v34, v59, v37, v38, 0, 0, v69 & 1, 1, 0, (uint64_t)v68, v30, (uint64_t)v64);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&aBlock);
  uint64_t v39 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v41 = v72;
  uint64_t v40 = v73;
  uint64_t v68 = *(void (**)(char *, uint64_t, uint64_t))(v73 + 16);
  id v67 = v8;
  uint64_t v42 = v74;
  v68(v72, v76, v74);
  unint64_t v43 = (*(unsigned __int8 *)(v40 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v71 += v43;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v39;
  uint64_t v45 = *(void (**)(unint64_t, char *, uint64_t))(v40 + 32);
  v45(v44 + v43, v41, v42);
  uint64_t v46 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v68(v41, v76, v42);
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = v46;
  v45(v47 + v43, v41, v42);
  id v48 = objc_allocWithZone((Class)AAUIAchievementDetailTransitionAnimator);
  int v81 = sub_10039B418;
  uint64_t v82 = v44;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v78 = 1107296256;
  double v79 = sub_100070394;
  double v80 = &unk_1008C44C8;
  uint64_t v49 = _Block_copy(&aBlock);
  id v50 = v69;
  swift_retain();
  swift_retain();
  id v51 = v75;
  uint64_t v52 = (char *)v67;
  swift_release();
  int v81 = sub_10039B424;
  uint64_t v82 = v47;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v78 = 1107296256;
  double v79 = sub_100070394;
  double v80 = &unk_1008C44F0;
  id v53 = _Block_copy(&aBlock);
  swift_release();
  id v54 = [v48 initWithPresentingViewController:v52 detailViewController:v50 shouldPlayFlipInAnimation:v70 initialBadgeFrame:v51 conversionView:v49 didStartAnimationBlock:a4 didFinishAnimationBlock:a5];

  _Block_release(v53);
  _Block_release(v49);
  uint64_t v55 = *(void **)&v52[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_transitionAnimator];
  *(void *)&v52[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_transitionAnimator] = v54;

  id v56 = [v52 navigationController];
  if (v56)
  {
    uint64_t v57 = v56;
    [v56 pushViewController:v50 animated:1];
  }
  swift_release();
  return swift_release();
}

void sub_1003993F8(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = Strong;
    id v6 = [Strong collectionView];

    if (v6)
    {
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v8 = [v6 cellForItemAtIndexPath:isa];

      if (v8)
      {
        self;
        uint64_t v9 = (void *)swift_dynamicCastObjCClass();
        if (v9) {
          [v9 setBadgeHidden:a3 & 1];
        }
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100399544()
{
  uint64_t result = type metadata accessor for AAUIAwardsDataProviderSection();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

void sub_100399624()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v1 = (char *)Strong;
    id v2 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_pauseRingsCoordinator);
    id v3 = *(id *)(Strong + OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_localizationProvider);
    [v3 setPaused:[v2 isPaused]];

    sub_10007E4EC(&v1[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_achievementDataProvider], *(void *)&v1[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_achievementDataProvider + 24]);
    *(void *)&v1[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_achievements] = dispatch thunk of AAUIAwardsDataProviding.achievements(forSection:)();
    swift_bridgeObjectRelease();
    sub_100398C00();
    id v4 = [v1 collectionView];
    if (v4)
    {
      id v5 = v4;
      [v4 reloadData];
    }
    else
    {
      __break(1u);
    }
  }
}

unint64_t sub_1003997E4(void *a1)
{
  uint64_t v2 = v1;
  NSString v4 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v6 = [a1 dequeueReusableCellWithReuseIdentifier:v4 forIndexPath:isa];

  self;
  double v7 = (void *)swift_dynamicCastObjCClass();
  if (v7) {
    id v8 = v6;
  }
  unint64_t result = IndexPath.row.getter();
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_achievements);
  if ((v10 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    if (!v7)
    {
      swift_unknownObjectRelease();
      return (unint64_t)v6;
    }
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    if (!v7) {
      return (unint64_t)v6;
    }
    id v11 = *(id *)(v10 + 8 * result + 32);
LABEL_8:
    [v7 setPreferredWidth:*(double *)(v2 + OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_cellWidth)];
    uint64_t v12 = *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_badgeImageFactory);
    uint64_t v13 = *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_localizationProvider);
    sub_10007E4EC((void *)(v2 + OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_achievementDataProvider), *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_achievementDataProvider + 24));
    id v14 = v7;
    [v14 configureWithAchievement:v11 badgeImageFactory:v12 locProvider:v13 shouldShowProgressBar:dispatch thunk of AAUIAwardsDataProviding.shouldShowProgressBar(for:)() & 1 formatForFriend:0];

    return (unint64_t)v6;
  }
  __break(1u);
  return result;
}

id sub_100399AC8(void *a1, uint64_t a2, uint64_t a3)
{
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == a2 && v5 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      id v8 = objc_allocWithZone((Class)UICollectionReusableView);
      return [v8 init];
    }
  }
  uint64_t v10 = UICollectionElementKindSectionHeader;
  NSString v11 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v13 = [a1 dequeueReusableSupplementaryViewOfKind:v10 withReuseIdentifier:v11 forIndexPath:isa];

  type metadata accessor for TrophyCaseSectionHeaderView();
  uint64_t v14 = swift_dynamicCastClass();
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = *(void **)(v14 + OBJC_IVAR____TtC10FitnessApp27TrophyCaseSectionHeaderView_titleLabel);
    id v13 = v13;
    id v17 = sub_1006D4FDC();
    [v16 setAttributedText:v17];

    double v18 = *(void **)(v15 + OBJC_IVAR____TtC10FitnessApp27TrophyCaseSectionHeaderView_descriptionLabel);
    id v19 = sub_1006D5158();
    [v18 setAttributedText:v19];
  }
  return v13;
}

void sub_100399DD0(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [a1 deselectItemAtIndexPath:isa animated:1];

  unint64_t v7 = IndexPath.row.getter();
  uint64_t v8 = *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_achievements);
  if ((v8 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v7 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_14:
    __break(1u);
    return;
  }
  id v17 = *(id *)(v8 + 8 * v7 + 32);
LABEL_5:
  Class v9 = IndexPath._bridgeToObjectiveC()().super.isa;
  id v10 = [a1 cellForItemAtIndexPath:v9];

  if (v10)
  {
    self;
    NSString v11 = (void *)swift_dynamicCastObjCClass();
    if (v11)
    {
      uint64_t v12 = v11;
      [v11 badgeRect];
      sub_100398D20(v17, v12, a2, v13, v14, v15, v16);
    }
  }
}

id sub_10039A2BC(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12)
{
  *(void *)&v12[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_transitionAnimator] = 0;
  *(void *)&v12[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_transitionAnimatorFromViewController] = 0;
  *(void *)&v12[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_numberOfCellPerRow] = 3;
  *(void *)&v12[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_cellWidth] = 0;
  uint64_t v18 = OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_cellHeightsCache;
  id v19 = objc_allocWithZone((Class)NSCache);
  uint64_t v20 = v12;
  *(void *)&v12[v18] = [v19 init];
  int v21 = &v20[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_section];
  uint64_t v22 = type metadata accessor for AAUIAwardsDataProviderSection();
  uint64_t v49 = *(void *)(v22 - 8);
  uint64_t v50 = v22;
  (*(void (**)(char *, uint64_t))(v49 + 16))(v21, a1);
  *(void *)&v20[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_healthStore] = a2;
  *(void *)&v20[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_friendListManager] = a3;
  sub_10008E75C((uint64_t)a4, (uint64_t)&v20[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_achievementDataProvider]);
  *(void *)&v20[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_badgeImageFactory] = a5;
  *(void *)&v20[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_formattingManager] = a6;
  *(void *)&v20[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_resourceProvider] = a7;
  *(void *)&v20[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_localizationProvider] = a8;
  *(void *)&v20[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_pauseRingsCoordinator] = a9;
  *(void *)&v20[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_fitnessAppContext] = a10;
  *(void *)&v20[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_workoutFormattingManager] = a11;
  *(void *)&v20[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_workoutDataProvider] = a12;
  id v51 = a4;
  sub_10007E4EC(a4, a4[3]);
  id v23 = a2;
  id v24 = a3;
  id v25 = a5;
  id v26 = a6;
  id v27 = a7;
  id v28 = a8;
  id v29 = a9;
  id v30 = a10;
  id v31 = a11;
  id v32 = a12;
  *(void *)&v20[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_achievements] = dispatch thunk of AAUIAwardsDataProviding.achievements(forSection:)();

  id v33 = [objc_allocWithZone((Class)UICollectionViewLayout) init];
  v57.receiver = v20;
  v57.super_class = (Class)type metadata accessor for TrophyCaseSectionViewController();
  [super initWithCollectionViewLayout:v33];

  id v35 = v34;
  id v36 = [v35 navigationItem];
  [v36 setLargeTitleDisplayMode:2];

  id result = [v35 collectionView];
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v38 = result;
  id v39 = [objc_allocWithZone((Class)UICollectionViewFlowLayout) init];
  [v39 setItemSize:UICollectionViewFlowLayoutAutomaticSize.width, UICollectionViewFlowLayoutAutomaticSize.height];
  [v39 setMinimumInteritemSpacing:10.0];
  [v39 setSectionInset:0.0, 10.0, 0.0, 10.0];
  [v38 setCollectionViewLayout:v39];

  id result = [v35 collectionView];
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v40 = result;
  sub_10007E2D8(0, &qword_100958E78);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v42 = String._bridgeToObjectiveC()();
  [v40 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v42];

  id result = [v35 collectionView];
  if (result)
  {
    unint64_t v43 = result;
    type metadata accessor for TrophyCaseSectionHeaderView();
    uint64_t v44 = swift_getObjCClassFromMetadata();
    uint64_t v45 = UICollectionElementKindSectionHeader;
    NSString v46 = String._bridgeToObjectiveC()();
    [v43 registerClass:v44 forSupplementaryViewOfKind:v45 withReuseIdentifier:v46];

    id v47 = [self defaultCenter];
    [v47 addObserver:v35 selector:"preferredContentSizeDidChange:" name:UIContentSizeCategoryDidChangeNotification object:0];

    sub_10007E4EC(v51, v51[3]);
    sub_1000679EC(&qword_100959FC0, (void (*)(uint64_t))type metadata accessor for TrophyCaseSectionViewController);
    id v48 = v35;
    dispatch thunk of AAUIAwardsDataProviding.add(observer:)();

    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(a1, v50);
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v51);
    return v48;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_10039A838()
{
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_transitionAnimator] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_transitionAnimatorFromViewController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_numberOfCellPerRow] = 3;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_cellWidth] = 0;
  uint64_t v1 = OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_cellHeightsCache;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)NSCache) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10039A8F4()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v4 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  unint64_t v7 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_10039AC10;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008C4450;
  Class v9 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000679EC((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v12);
}

uint64_t sub_10039ABD8()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_10039AC10()
{
}

void *sub_10039AC18(void *a1, void *a2, void *a3)
{
  uint64_t v4 = a1;
  if (!a1) {
    return v4;
  }
  uint64_t v5 = v3;
  if (a1 != (void *)2)
  {
    if (a1 == (void *)1)
    {
      type metadata accessor for TrophyCaseAwardDetailViewController();
      uint64_t v4 = 0;
      if (![a3 isKindOfClass:swift_getObjCClassFromMetadata()]) {
        return v4;
      }
      type metadata accessor for TrophyCaseSectionViewController();
      uint64_t v4 = 0;
      if (![a2 isKindOfClass:swift_getObjCClassFromMetadata()]) {
        return v4;
      }
      uint64_t v8 = *(void **)(v5
                    + OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_transitionAnimatorFromViewController);
      *(void *)(v5 + OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_transitionAnimatorFromViewController) = a2;
      id v9 = a2;

      goto LABEL_9;
    }
    os_log_type_t v15 = static os_log_type_t.fault.getter();
    double v16 = (void *)HKLogActivity;
    os_log_type_t v17 = v15;
    if (os_log_type_enabled(HKLogActivity, v15))
    {
      uint64_t v18 = v16;
      id v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)id v19 = 136315138;
      sub_10008F1F4(0xD000000000000037, 0x80000001007BE490, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v18, v17, "%s found unexpected UINavigationController.Operation; skipping transition",
        v19,
        0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    return 0;
  }
  id v10 = *(void **)(v3
                 + OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_transitionAnimatorFromViewController);
  if (!v10) {
    return 0;
  }
  sub_10007E2D8(0, (unint64_t *)&qword_1009559C0);
  id v11 = a3;
  id v12 = v10;
  char v13 = static NSObject.== infix(_:_:)();

  uint64_t v4 = 0;
  if ((v13 & 1) == 0) {
    return v4;
  }
LABEL_9:
  uint64_t v4 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_transitionAnimator);
  if (v4) {
    id v14 = v4;
  }
  return v4;
}

void sub_10039AE54(unint64_t a1)
{
  unint64_t v5 = v2;
  uint64_t v7 = IndexPath.row.getter();
  uint64_t v8 = IndexPath.row.getter();
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_numberOfCellPerRow;
  uint64_t v10 = *(void *)(v5 + OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_numberOfCellPerRow);
  if (!v10) {
    goto LABEL_53;
  }
  if (v8 != 0x8000000000000000 || v10 != -1)
  {
    Swift::Int v4 = v7 - v8 % v10;
    if (__OFSUB__(v7, v8 % v10)) {
      goto LABEL_54;
    }
    BOOL v11 = __OFSUB__(v10, 1);
    uint64_t v12 = v10 - 1;
    if (v11) {
      goto LABEL_55;
    }
    uint64_t v1 = v4 + v12;
    if (__OFADD__(v4, v12)) {
      goto LABEL_56;
    }
    uint64_t v7 = OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_achievements;
    a1 = *(void *)(v5 + OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_achievements);
    if (a1 >> 62) {
      goto LABEL_57;
    }
    uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v14 = v13 - 1;
    if (!__OFSUB__(v13, 1)) {
      goto LABEL_9;
    }
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    swift_bridgeObjectRetain_n();
    uint64_t v54 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v54 >= v4)
    {
      while ((v4 & 0x8000000000000000) == 0)
      {
        if (v3)
        {
          swift_bridgeObjectRetain();
          uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v16 <= v1) {
          goto LABEL_64;
        }
        uint64_t v17 = v1 + 1;
        if ((a1 & 0xC000000000000001) != 0)
        {
          if (v17 < (unint64_t)v4) {
            goto LABEL_66;
          }
          if (v4 != v17)
          {
            if (v4 >= (unint64_t)v17) {
              goto LABEL_69;
            }
            sub_10007E2D8(0, (unint64_t *)&qword_1009556B0);
            Swift::Int v18 = v4;
            do
            {
              Swift::Int v19 = v18 + 1;
              _ArrayBuffer._typeCheckSlowPath(_:)(v18);
              Swift::Int v18 = v19;
            }
            while (v17 != v19);
          }
        }
        if (v3)
        {
          swift_bridgeObjectRetain();
          _CocoaArrayWrapper.subscript.getter();
          uint64_t v1 = v20;
          Swift::Int v4 = v21;
          unint64_t v5 = v22;
          swift_bridgeObjectRelease_n();
          uint64_t v17 = v5 >> 1;
        }
        else
        {
          uint64_t v1 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
        }
        uint64_t v23 = v17 - v4;
        unint64_t v24 = v57;
        if (__OFSUB__(v17, v4)) {
          goto LABEL_65;
        }
        uint64_t v56 = v9;
        id v25 = _swiftEmptyArrayStorage;
        uint64_t v55 = v1;
        if (!v23)
        {
LABEL_40:
          long long v59 = v25;
          sub_1000AFA94((uint64_t *)&unk_10094B1F0);
          sub_1000A132C((unint64_t *)&qword_100958E70, (uint64_t *)&unk_10094B1F0);
          BidirectionalCollection<>.joined(separator:)();
          swift_bridgeObjectRelease();
          NSString v35 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          uint64_t v36 = OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_cellHeightsCache;
          id v37 = [*(id *)(v24 + OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_cellHeightsCache) objectForKey:v35];
          if (v37)
          {
            id v38 = v37;
            [v37 doubleValue];
            swift_unknownObjectRelease();

            NSString v35 = v38;
          }
          else
          {
            double v39 = 0.0;
            if (v17 != v4)
            {
              uint64_t v40 = self;
              uint64_t v41 = v17 - v4;
              if (v17 <= v4) {
                goto LABEL_70;
              }
              NSString v42 = (void *)v40;
              uint64_t v43 = OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_cellWidth;
              uint64_t v44 = *(void *)(v24 + OBJC_IVAR____TtC10FitnessApp31TrophyCaseSectionViewController_localizationProvider);
              swift_unknownObjectRetain();
              unint64_t v45 = v24;
              NSString v46 = (uint64_t *)(v55 + 8 * v4);
              do
              {
                uint64_t v47 = *v46++;
                [v42 cellHeightForAchievement:v47 preferredWidth:*(void *)(v45 + v56) < 3 appliesLargeCellInsets:v44 locProvider:*(double *)(v45 + v43)];
                if (v48 > v39) {
                  double v39 = v48;
                }
                --v41;
              }
              while (v41);
              swift_unknownObjectRelease();
              unint64_t v24 = v45;
            }
            uint64_t v49 = *(void **)(v24 + v36);
            id v50 = objc_allocWithZone((Class)NSNumber);
            id v51 = v49;
            id v52 = [v50 initWithDouble:v39];
            [v51 setObject:v52 forKey:v35];

            swift_unknownObjectRelease();
          }

          return;
        }
        long long v59 = _swiftEmptyArrayStorage;
        a1 = (unint64_t)&v59;
        sub_1000ABAB8(0, v23 & ~(v23 >> 63), 0);
        if (v23 < 0) {
          goto LABEL_67;
        }
        int64_t v3 = 0;
        id v25 = v59;
        uint64_t v58 = v1 + 8 * v4;
        while (1)
        {
          uint64_t v7 = v3 + 1;
          if (__OFADD__(v3, 1)) {
            break;
          }
          if (v4 + v3 >= v17 || v3 >= v23) {
            goto LABEL_52;
          }
          id v26 = v25;
          uint64_t v9 = v23;
          uint64_t v27 = v17;
          uint64_t v1 = v4;
          a1 = (unint64_t)*(id *)(v58 + 8 * v3);
          id v28 = [(id)a1 template];
          id v29 = [v28 uniqueName];

          if (!v29) {
            goto LABEL_71;
          }
          uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v32 = v31;

          id v25 = v26;
          long long v59 = v26;
          unint64_t v5 = v26[2];
          unint64_t v33 = v25[3];
          if (v5 >= v33 >> 1)
          {
            a1 = (unint64_t)&v59;
            sub_1000ABAB8(v33 > 1, v5 + 1, 1);
            id v25 = v59;
          }
          v25[2] = v5 + 1;
          id v34 = &v25[2 * v5];
          v34[4] = v30;
          v34[5] = v32;
          ++v3;
          uint64_t v23 = v9;
          Swift::Int v4 = v1;
          uint64_t v17 = v27;
          if (v7 == v9)
          {
            unint64_t v24 = v57;
            goto LABEL_40;
          }
        }
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        swift_bridgeObjectRetain();
        uint64_t v53 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v14 = v53 - 1;
        if (__OFSUB__(v53, 1)) {
          goto LABEL_59;
        }
LABEL_9:
        if (v14 < v1) {
          uint64_t v1 = v14;
        }
        if (v1 < v4) {
          goto LABEL_60;
        }
        unint64_t v57 = v5;
        a1 = *(void *)(v5 + v7);
        int64_t v3 = a1 >> 62;
        if (a1 >> 62) {
          goto LABEL_61;
        }
        Swift::Int v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v15 < v4) {
          goto LABEL_62;
        }
      }
    }
    else
    {
LABEL_62:
      __break(1u);
    }
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
  }
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
}

void sub_10039B418()
{
}

void sub_10039B424()
{
}

void sub_10039B42C(char a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for IndexPath() - 8);
  sub_1003993F8(*(void *)(v1 + 16), v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_10039B4A0(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  type metadata accessor for MetricIdentifier();
  v3[10] = swift_task_alloc();
  sub_1000AFA94(&qword_100959FD0);
  v3[11] = swift_task_alloc();
  sub_1000AFA94(&qword_100959FD8);
  v3[12] = swift_task_alloc();
  sub_1000AFA94(&qword_100959FE0);
  v3[13] = swift_task_alloc();
  sub_1000AFA94(&qword_100959FE8);
  v3[14] = swift_task_alloc();
  sub_1000AFA94(&qword_100959FF0);
  v3[15] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for MetricClickStreamType();
  v3[16] = v4;
  v3[17] = *(void *)(v4 - 8);
  v3[18] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for MetricClickStream();
  v3[19] = v5;
  v3[20] = *(void *)(v5 - 8);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  sub_1000AFA94(&qword_100959FF8);
  v3[23] = swift_task_alloc();
  sub_1000AFA94((uint64_t *)&unk_10095B7B0);
  v3[24] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for MetricClickAction();
  v3[25] = v6;
  v3[26] = *(void *)(v6 - 8);
  v3[27] = swift_task_alloc();
  sub_1000AFA94(&qword_10095A000);
  v3[28] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for MetricClick();
  v3[29] = v7;
  v3[30] = *(void *)(v7 - 8);
  v3[31] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Date();
  v3[32] = v8;
  v3[33] = *(void *)(v8 - 8);
  v3[34] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for ImpressionsTrackerFormat();
  v3[35] = v9;
  v3[36] = *(void *)(v9 - 8);
  v3[37] = swift_task_alloc();
  sub_1000AFA94((uint64_t *)&unk_10094B790);
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  sub_1000AFA94((uint64_t *)&unk_10095F630);
  v3[40] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MetricPage();
  v3[41] = v10;
  v3[42] = *(void *)(v10 - 8);
  v3[43] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for MetricClickElement();
  v3[44] = v11;
  v3[45] = *(void *)(v11 - 8);
  v3[46] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for MetricLocation();
  v3[47] = v12;
  v3[48] = *(void *)(v12 - 8);
  v3[49] = swift_task_alloc();
  v3[50] = swift_task_alloc();
  v3[51] = swift_task_alloc();
  type metadata accessor for MainActor();
  v3[52] = static MainActor.shared.getter();
  uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[53] = v13;
  v3[54] = v14;
  return _swift_task_switch(sub_10039BAF4, v13, v14);
}

uint64_t sub_10039BAF4()
{
  id v1 = [*(id *)(v0 + 72) collectionView];
  if (!v1) {
    __break(1u);
  }
  uint64_t v2 = v1;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v4 = [v2 cellForItemAtIndexPath:isa];
  *(void *)(v0 + 440) = v4;

  if (v4)
  {
    type metadata accessor for SeymourWorkoutRecommendationCollectionViewCell();
    uint64_t v5 = swift_dynamicCastClass();
    if (v5)
    {
      uint64_t v6 = (void *)(v5 + OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_recommendation);
      if (*(void *)(v5
                     + OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_recommendation
                     + 8))
      {
        uint64_t v20 = *(void *)(v0 + 408);
        uint64_t v18 = *(void *)(v0 + 400);
        uint64_t v7 = *(void *)(v0 + 384);
        uint64_t v19 = *(void *)(v0 + 376);
        uint64_t v8 = *(void *)(v0 + 360);
        uint64_t v9 = *(void *)(v0 + 368);
        swift_bridgeObjectRetain_n();
        IndexPath.row.getter();
        *(_DWORD *)(v0 + 496) = enum case for MetricClickElement.lockup(_:);
        uint64_t v10 = *(void (**)(uint64_t))(v8 + 104);
        *(void *)(v0 + 448) = v10;
        *(void *)(v0 + 456) = (v8 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
        v10(v9);
        sub_1004E7AF8((uint64_t)_swiftEmptyArrayStorage);
        MetricLocation.init(identifier:identifierType:index:name:elementType:metadata:)();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v20, v18, v19);
        *(void *)(v0 + 464) = *v6;
        uint64_t v11 = v6[1];
        *(void *)(v0 + 472) = v11;
        if (v11)
        {
          swift_bridgeObjectRetain();
          uint64_t v12 = (void *)swift_task_alloc();
          *(void *)(v0 + 480) = v12;
          *uint64_t v12 = v0;
          v12[1] = sub_10039BF3C;
          uint64_t v13 = *(void *)(v0 + 64);
          return sub_10039D0D8(v13);
        }
        (*(void (**)(void, void))(*(void *)(v0 + 384) + 8))(*(void *)(v0 + 408), *(void *)(v0 + 376));
      }
    }
  }
  uint64_t v15 = *(void *)(v0 + 56);
  swift_release();
  uint64_t v16 = type metadata accessor for MetricClickStreamOccurred();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_10039BF3C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 488) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 424);
    uint64_t v4 = *(void *)(v2 + 432);
    uint64_t v5 = sub_10039CED0;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 424);
    uint64_t v4 = *(void *)(v2 + 432);
    uint64_t v5 = sub_10039C08C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10039C08C()
{
  uint64_t v78 = *(void (**)(uint64_t, void, uint64_t))(v0 + 448);
  uint64_t v91 = *(void *)(v0 + 408);
  uint64_t v1 = *(void *)(v0 + 384);
  uint64_t v80 = *(void *)(v0 + 392);
  uint64_t v85 = *(void *)(v0 + 376);
  uint64_t v74 = *(void *)(v0 + 368);
  uint64_t v76 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 320);
  uint64_t v103 = *(void *)(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 288);
  uint64_t v5 = *(void *)(v0 + 272);
  uint64_t v67 = *(void *)(v0 + 280);
  uint64_t v69 = *(void *)(v0 + 296);
  uint64_t v6 = *(void *)(v0 + 264);
  uint64_t v71 = *(void *)(v0 + 256);
  uint64_t v88 = *(void *)(v0 + 224);
  uint64_t v94 = *(void *)(v0 + 208);
  uint64_t v97 = *(void *)(v0 + 200);
  uint64_t v99 = *(void *)(v0 + 216);
  swift_release();
  uint64_t v7 = enum case for MetricPageCategory.summary(_:);
  uint64_t v8 = type metadata accessor for MetricPageCategory();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 104))(v3, v7, v8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v3, 0, 1, v8);
  uint64_t v10 = type metadata accessor for URL();
  int v83 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v83(v2, 1, 1, v10);
  MetricPage.init(pageIdentifier:pageType:pageContext:pageUrl:pageName:)();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v69, enum case for ImpressionsTrackerFormat.v4(_:), v67);
  Date.init()();
  uint64_t v11 = BasicImpressionsTracker.consumeImpressions(in:on:)();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v71);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v69, v67);
  v78(v74, enum case for MetricClickElement.swoosh(_:), v76);
  unint64_t v56 = sub_1004E7AF8((uint64_t)_swiftEmptyArrayStorage);
  MetricLocation.init(identifier:identifierType:index:name:elementType:metadata:)();
  sub_1000AFA94(&qword_100955680);
  uint64_t v12 = *(void *)(v1 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10074E640;
  unint64_t v15 = v14 + v13;
  uint64_t v16 = *(void (**)(unint64_t, uint64_t, uint64_t))(v1 + 16);
  v16(v15, v80, v85);
  v16(v15 + v12, v91, v85);
  uint64_t v17 = type metadata accessor for MetricClickActionContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v88, 1, 1, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v94 + 104))(v99, enum case for MetricClickAction.navigate(_:), v97);
  v83(v103, 1, 1, v10);
  int64_t v18 = *(void *)(v11 + 16);
  if (v18)
  {
    sub_1001C93DC(0, v18, 0);
    uint64_t v100 = self;
    uint64_t v19 = v11 + 32;
    while (1)
    {
      sub_10008F484(v19, v0 + 16);
      sub_10007E4EC((void *)(v0 + 16), *(void *)(v0 + 40));
      uint64_t v20 = _bridgeAnythingToObjectiveC<A>(_:)();
      *(void *)(v0 + 48) = 0;
      id v21 = [v100 dataWithJSONObject:v20 options:0 error:v0 + 48];
      swift_unknownObjectRelease();
      unint64_t v22 = *(void **)(v0 + 48);
      if (!v21) {
        break;
      }
      id v23 = v22;
      uint64_t v24 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v26 = v25;

      _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 16);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1001C93DC(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v28 = _swiftEmptyArrayStorage[2];
      unint64_t v27 = _swiftEmptyArrayStorage[3];
      if (v28 >= v27 >> 1) {
        sub_1001C93DC(v27 > 1, v28 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v28 + 1;
      id v29 = &_swiftEmptyArrayStorage[2 * v28];
      v29[4] = v24;
      v29[5] = v26;
      v19 += 32;
      if (!--v18) {
        goto LABEL_9;
      }
    }
    uint64_t v30 = *(void **)(v0 + 440);
    uint64_t v31 = *(void *)(v0 + 384);
    uint64_t v32 = *(void *)(v0 + 376);
    uint64_t v33 = *(void *)(v0 + 336);
    uint64_t v101 = *(void *)(v0 + 344);
    uint64_t v104 = *(void *)(v0 + 408);
    uint64_t v92 = *(void *)(v0 + 392);
    uint64_t v95 = *(void *)(v0 + 328);
    uint64_t v34 = *(void *)(v0 + 304);
    uint64_t v89 = *(void *)(v0 + 224);
    uint64_t v35 = *(void *)(v0 + 208);
    uint64_t v86 = *(void *)(v0 + 216);
    uint64_t v81 = *(void *)(v0 + 200);
    id v36 = v22;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 16);
    swift_release();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10008DB18(v34, (uint64_t *)&unk_10094B790);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v86, v81);
    sub_10008DB18(v89, &qword_10095A000);
    id v37 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v37(v92, v32);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v101, v95);
    v37(v104, v32);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v54 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    unsigned int v57 = *(_DWORD *)(v0 + 496);
    uint64_t v58 = *(void (**)(uint64_t, void, uint64_t))(v0 + 448);
    double v79 = *(void **)(v0 + 440);
    uint64_t v87 = *(void *)(v0 + 392);
    uint64_t v90 = *(void *)(v0 + 408);
    uint64_t v38 = *(void *)(v0 + 368);
    uint64_t v82 = *(void *)(v0 + 384);
    uint64_t v84 = *(void *)(v0 + 376);
    uint64_t v39 = *(void *)(v0 + 352);
    uint64_t v63 = *(void *)(v0 + 344);
    uint64_t v61 = *(void *)(v0 + 336);
    uint64_t v98 = *(void *)(v0 + 328);
    uint64_t v102 = *(void *)(v0 + 248);
    uint64_t v105 = *(void *)(v0 + 240);
    uint64_t v60 = *(void *)(v0 + 232);
    uint64_t v41 = *(void *)(v0 + 184);
    uint64_t v40 = *(void *)(v0 + 192);
    uint64_t v70 = *(void *)(v0 + 176);
    uint64_t v75 = *(void *)(v0 + 168);
    uint64_t v73 = *(void *)(v0 + 160);
    uint64_t v77 = *(void *)(v0 + 152);
    uint64_t v42 = *(void *)(v0 + 136);
    uint64_t v96 = *(void *)(v0 + 144);
    uint64_t v59 = *(void *)(v0 + 128);
    uint64_t v43 = enum case for MetricClickDestination.workout(_:);
    uint64_t v93 = *(void *)(v0 + 120);
    uint64_t v62 = *(void *)(v0 + 112);
    uint64_t v64 = *(void *)(v0 + 104);
    uint64_t v65 = *(void *)(v0 + 96);
    uint64_t v66 = *(void *)(v0 + 88);
    uint64_t v68 = *(void *)(v0 + 80);
    uint64_t v72 = *(void *)(v0 + 56);
    uint64_t v44 = type metadata accessor for MetricClickDestination();
    uint64_t v45 = *(void *)(v44 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 104))(v40, v43, v44);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v45 + 56))(v40, 0, 1, v44);
    v58(v38, v57, v39);
    uint64_t v46 = type metadata accessor for MetricClickMarketingFields();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v41, 1, 1, v46);
    MetricClick.init(actionContext:actionType:actionURL:impressionsData:locations:offerType:targetIdentifier:targetIdentifierType:targetType:marketingFields:marketingMessageIdentifier:marketingPlacement:)();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v105 + 16))(v96, v102, v60);
    (*(void (**)(uint64_t, void, uint64_t))(v42 + 104))(v96, enum case for MetricClickStreamType.click(_:), v59);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v93, v63, v98);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 56))(v93, 0, 1, v98);
    uint64_t v47 = type metadata accessor for MetricBadgingCounts();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v62, 1, 1, v47);
    uint64_t v48 = type metadata accessor for MetricGroupActivity();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v64, 1, 1, v48);
    static MetricEnvironment.current()();
    uint64_t v49 = type metadata accessor for MetricEnvironment();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v65, 0, 1, v49);
    uint64_t v50 = sub_1000AFA94(&qword_10095A010);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v66, 1, 1, v50);
    uint64_t v51 = type metadata accessor for MetricRemoteIdentifier();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v68, 1, 1, v51);
    MetricClickStream.init(type:page:identifier:badgingCounts:groupActivity:environment:remoteParticipantDeviceType:topicRoutingBehavior:metadata:)();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 16))(v75, v70, v77);
    MetricClickStreamOccurred.init(_:)();

    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v70, v77);
    (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v102, v60);
    id v52 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
    v52(v87, v84);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v63, v98);
    v52(v90, v84);
    uint64_t v53 = type metadata accessor for MetricClickStreamOccurred();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v72, 0, 1, v53);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v54 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v54();
}

uint64_t sub_10039CED0()
{
  uint64_t v1 = (void *)v0[55];
  uint64_t v2 = v0[51];
  uint64_t v3 = v0[47];
  uint64_t v4 = v0[48];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10039D0D8(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = type metadata accessor for Date();
  v2[5] = v3;
  void v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for ImpressionMetrics();
  v2[8] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[9] = v5;
  v2[10] = *(void *)(v5 + 64);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for IndexSet();
  v2[13] = v6;
  v2[14] = *(void *)(v6 - 8);
  v2[15] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[16] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[17] = v8;
  v2[18] = v7;
  return _swift_task_switch(sub_10039D29C, v8, v7);
}

uint64_t sub_10039D29C()
{
  uint64_t v1 = (uint64_t)[*(id *)(v0 + 32) collectionView];
  if (!v1)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v6 = (void *)v1;
  id v7 = [(id)v1 collectionViewLayout];
  *(void *)(v0 + 152) = v7;

  self;
  uint64_t v8 = (void *)swift_dynamicCastObjCClass();
  if (v8)
  {
    uint64_t v10 = *(void *)(v0 + 112);
    uint64_t v9 = *(void *)(v0 + 120);
    uint64_t v11 = *(void *)(v0 + 104);
    id v12 = [v8 _orthogonalScrollingSections];
    static IndexSet._unconditionallyBridgeFromObjectiveC(_:)();

    Swift::Int v13 = IndexPath.section.getter();
    Swift::Bool v14 = IndexSet.contains(_:)(v13);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    if (v14)
    {
      uint64_t v16 = *(void *)(v0 + 48);
      uint64_t v15 = *(void *)(v0 + 56);
      int64_t v18 = *(void **)(v0 + 32);
      uint64_t v17 = *(void *)(v0 + 40);
      sub_10039D8E4(*(void *)(v0 + 96));
      Date.init()();
      BasicImpressionsTracker.elementDidEnterView(_:on:)();
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
      uint64_t v1 = (uint64_t)[v18 collectionView];
      if (v1)
      {
        uint64_t v19 = (void *)v1;
        uint64_t v20 = *(void *)(v0 + 88);
        uint64_t v21 = *(void *)(v0 + 96);
        uint64_t v22 = *(void *)(v0 + 72);
        uint64_t v23 = *(void *)(v0 + 64);
        id v24 = [(id)v1 visibleCells];

        sub_10039E924();
        uint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        *(void *)(v0 + 16) = v25;
        uint64_t v26 = swift_allocObject();
        swift_unknownObjectWeakInit();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v20, v21, v23);
        unint64_t v27 = (*(unsigned __int8 *)(v22 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
        uint64_t v28 = swift_allocObject();
        *(void *)(v0 + 160) = v28;
        *(void *)(v28 + 16) = v26;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(v28 + v27, v20, v23);
        id v29 = (void *)swift_task_alloc();
        *(void *)(v0 + 168) = v29;
        uint64_t v30 = sub_1000AFA94(&qword_10095A028);
        unint64_t v5 = sub_10039EB4C();
        *id v29 = v0;
        v29[1] = sub_10039D61C;
        uint64_t v2 = &unk_10095A020;
        uint64_t v1 = 5;
        uint64_t v3 = v28;
        uint64_t v4 = v30;
        return Collection.parallelForEach(parallelism:block:)(v1, v2, v3, v4, v5);
      }
LABEL_14:
      __break(1u);
      return Collection.parallelForEach(parallelism:block:)(v1, v2, v3, v4, v5);
    }
    swift_release();
  }
  else
  {

    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_10039D61C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 136);
  uint64_t v4 = *(void *)(v2 + 144);
  if (v0) {
    unint64_t v5 = sub_10039D81C;
  }
  else {
    unint64_t v5 = sub_10039D760;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10039D760()
{
  uint64_t v1 = (void *)v0[19];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10039D81C()
{
  uint64_t v1 = (void *)v0[19];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10039D8E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v1 = type metadata accessor for ScalarDictionary();
  __chkstk_darwin(v1 - 8);
  uint64_t v21 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for MetricClickElement();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for ImpressionMetrics.ID();
  uint64_t v7 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v19 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v18 - v10;
  ImpressionMetrics.ID.init(parent:element:index:)();
  sub_1000AFA94(&qword_10094DBA8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007526C0;
  *(void *)(inited + 32) = 1701667182;
  *(void *)(inited + 40) = 0xE400000000000000;
  *(void *)(inited + 48) = 0xD000000000000011;
  *(void *)(inited + 56) = 0x80000001007C3CB0;
  *(void *)(inited + 72) = &type metadata for String;
  strcpy((char *)(inited + 80), "impressionType");
  *(unsigned char *)(inited + 95) = -18;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for MetricClickElement.shelf(_:), v3);
  uint64_t v13 = MetricClickElement.rawValue.getter();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *(void *)(inited + 96) = v13;
  *(void *)(inited + 104) = v15;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 128) = 0x6973736572706D69;
  *(void *)(inited + 136) = 0xEF7865646E496E6FLL;
  *(void *)(inited + 144) = 0;
  *(void *)(inited + 168) = &type metadata for Int;
  *(void *)(inited + 176) = 0x657079546469;
  *(void *)(inited + 216) = &type metadata for String;
  *(void *)(inited + 184) = 0xE600000000000000;
  *(void *)(inited + 192) = 0x64695F737469;
  *(void *)(inited + 200) = 0xE600000000000000;
  sub_100522E98(inited);
  uint64_t v16 = v20;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v11, v20);
  ScalarDictionary.init()();
  sub_10035193C((uint64_t)_swiftEmptyArrayStorage);
  sub_10035193C((uint64_t)_swiftEmptyArrayStorage);
  ImpressionMetrics.init(id:fields:custom:commonFields:clickLocationFields:)();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v11, v16);
}

uint64_t sub_10039DC7C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  uint64_t v5 = type metadata accessor for Date();
  v3[13] = v5;
  v3[14] = *(void *)(v5 - 8);
  v3[15] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for ImpressionMetrics.ID();
  v3[16] = v6;
  v3[17] = *(void *)(v6 - 8);
  v3[18] = swift_task_alloc();
  sub_1000AFA94((uint64_t *)&unk_10095F740);
  v3[19] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for ImpressionMetrics();
  v3[20] = v7;
  v3[21] = *(void *)(v7 - 8);
  v3[22] = swift_task_alloc();
  sub_1000AFA94(&qword_1009556D0);
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for IndexPath();
  v3[25] = v8;
  v3[26] = *(void *)(v8 - 8);
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = *a1;
  v3[27] = v9;
  v3[28] = v10;
  type metadata accessor for MainActor();
  v3[29] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[30] = v12;
  v3[31] = v11;
  return _swift_task_switch(sub_10039DEFC, v12, v11);
}

void sub_10039DEFC()
{
  type metadata accessor for SeymourWorkoutRecommendationCollectionViewCell();
  uint64_t v1 = swift_dynamicCastClass();
  *(void *)(v0 + 256) = v1;
  if (!v1)
  {
    swift_release();
LABEL_12:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(void (**)(void))(v0 + 8);
    v13();
    return;
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 208) + 56))(*(void *)(v0 + 192), 1, 1, *(void *)(v0 + 200));
LABEL_11:
    uint64_t v12 = *(void *)(v0 + 192);
    swift_release();
    sub_10008DB18(v12, &qword_1009556D0);
    goto LABEL_12;
  }
  uint64_t v3 = (void *)Strong;
  id v4 = *(id *)(v0 + 224);
  id v5 = [v3 collectionView];

  if (!v5)
  {
    __break(1u);
    return;
  }
  id v6 = [v5 indexPathForCell:*(void *)(v0 + 224)];

  if (v6)
  {
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 1;
  }
  uint64_t v8 = *(void *)(v0 + 200);
  uint64_t v9 = *(void *)(v0 + 208);
  uint64_t v11 = *(void *)(v0 + 184);
  uint64_t v10 = *(void *)(v0 + 192);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v11, v7, 1, v8);
  sub_10039EBA8(v11, v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) == 1)
  {

    goto LABEL_11;
  }
  uint64_t v15 = *(void *)(v0 + 136);
  uint64_t v14 = *(void *)(v0 + 144);
  uint64_t v16 = *(void *)(v0 + 128);
  (*(void (**)(void, void, void))(*(void *)(v0 + 208) + 32))(*(void *)(v0 + 216), *(void *)(v0 + 192), *(void *)(v0 + 200));
  ImpressionMetrics.id.getter();
  uint64_t v17 = ImpressionMetrics.ID.element.getter();
  uint64_t v19 = v18;
  *(void *)(v0 + 264) = v18;
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_10039E1FC;
  uint64_t v21 = *(void *)(v0 + 216);
  uint64_t v22 = *(void *)(v0 + 152);
  sub_10045F34C(v22, v17, v19, v21);
}

uint64_t sub_10039E1FC()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 240);
    uint64_t v4 = *(void *)(v2 + 248);
    id v5 = sub_10039E808;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 240);
    uint64_t v4 = *(void *)(v2 + 248);
    id v5 = sub_10039E340;
  }
  return _swift_task_switch(v5, v3, v4);
}

void sub_10039E340()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 152);
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 216);
    uint64_t v5 = *(void *)(v0 + 200);
    uint64_t v6 = *(void *)(v0 + 208);
    uint64_t v7 = *(void *)(v0 + 152);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    sub_10008DB18(v7, (uint64_t *)&unk_10095F740);
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 168) + 32))(*(void *)(v0 + 176), *(void *)(v0 + 152), *(void *)(v0 + 160));
    swift_beginAccess();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (!Strong) {
      goto LABEL_9;
    }
    uint64_t v9 = Strong;
    id v10 = [Strong view];

    if (!v10)
    {
      __break(1u);
      return;
    }
    id v11 = [v10 window];

    if (v11)
    {
      id v12 = [*(id *)(v0 + 256) superview];
      if (v12)
      {
        uint64_t v13 = v12;
        uint64_t v14 = *(void **)(v0 + 256);
        [v14 frame];
        [v11 convertRect:v13 fromCoordinateSpace:];
        CGFloat v16 = v15;
        CGFloat v18 = v17;
        CGFloat v20 = v19;
        CGFloat v22 = v21;
        [v11 bounds];
        v76.origin.CGFloat x = v23;
        v76.origin.CGFloat y = v24;
        v76.size.CGFloat width = v25;
        v76.size.CGFloat height = v26;
        v71.origin.CGFloat x = v16;
        v71.origin.CGFloat y = v18;
        v71.size.CGFloat width = v20;
        v71.size.CGFloat height = v22;
        CGRect v72 = CGRectIntersection(v71, v76);
        CGFloat x = v72.origin.x;
        CGFloat y = v72.origin.y;
        CGFloat width = v72.size.width;
        CGFloat height = v72.size.height;
        double v31 = CGRectGetWidth(v72);
        v73.origin.CGFloat x = x;
        v73.origin.CGFloat y = y;
        v73.size.CGFloat width = width;
        v73.size.CGFloat height = height;
        double v32 = v31 * CGRectGetHeight(v73);
        [v14 frame];
        double v33 = CGRectGetWidth(v74);
        [v14 frame];
        if (v32 / (v33 * CGRectGetHeight(v75)) >= 0.5)
        {
          swift_beginAccess();
          uint64_t v55 = swift_unknownObjectWeakLoadStrong();
          uint64_t v56 = *(void *)(v0 + 216);
          uint64_t v69 = *(void **)(v0 + 224);
          uint64_t v58 = *(void *)(v0 + 200);
          uint64_t v57 = *(void *)(v0 + 208);
          uint64_t v60 = *(void *)(v0 + 168);
          uint64_t v59 = *(void *)(v0 + 176);
          uint64_t v61 = *(void *)(v0 + 160);
          if (v55)
          {
            uint64_t v62 = (void *)v55;
            uint64_t v66 = *(void *)(v0 + 160);
            uint64_t v68 = *(void *)(v0 + 200);
            uint64_t v63 = *(void *)(v0 + 112);
            uint64_t v64 = *(void *)(v0 + 120);
            uint64_t v65 = *(void *)(v0 + 104);
            uint64_t v67 = *(void *)(v0 + 216);
            swift_retain();

            Date.init()();
            BasicImpressionsTracker.elementDidEnterView(_:on:)();
            swift_release();

            (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v64, v65);
            (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v66);
            (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v67, v68);
          }
          else
          {

            (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
            (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v56, v58);
          }
        }
        else
        {
          uint64_t v34 = *(void *)(v0 + 216);
          uint64_t v35 = *(void **)(v0 + 224);
          uint64_t v36 = *(void *)(v0 + 200);
          uint64_t v37 = *(void *)(v0 + 208);
          uint64_t v39 = *(void *)(v0 + 168);
          uint64_t v38 = *(void *)(v0 + 176);
          uint64_t v40 = *(void *)(v0 + 160);

          (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
          (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v34, v36);
        }
      }
      else
      {
        uint64_t v48 = *(void *)(v0 + 216);
        uint64_t v49 = *(void **)(v0 + 224);
        uint64_t v50 = *(void *)(v0 + 200);
        uint64_t v51 = *(void *)(v0 + 208);
        uint64_t v53 = *(void *)(v0 + 168);
        uint64_t v52 = *(void *)(v0 + 176);
        uint64_t v54 = *(void *)(v0 + 160);

        (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v54);
        (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v48, v50);
      }
    }
    else
    {
LABEL_9:
      uint64_t v41 = *(void *)(v0 + 216);
      uint64_t v42 = *(void *)(v0 + 200);
      uint64_t v43 = *(void *)(v0 + 208);
      uint64_t v45 = *(void *)(v0 + 168);
      uint64_t v44 = *(void *)(v0 + 176);
      uint64_t v46 = *(void *)(v0 + 160);

      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v47 = *(void (**)(void))(v0 + 8);
  v47();
}

uint64_t sub_10039E808()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 152);
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  uint64_t v4 = *(void *)(v0 + 216);
  uint64_t v5 = *(void *)(v0 + 200);
  uint64_t v6 = *(void *)(v0 + 208);
  uint64_t v7 = *(void *)(v0 + 152);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  sub_10008DB18(v7, (uint64_t *)&unk_10095F740);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

unint64_t sub_10039E924()
{
  unint64_t result = qword_100958778;
  if (!qword_100958778)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100958778);
  }
  return result;
}

uint64_t sub_10039E964()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10039E99C()
{
  uint64_t v1 = type metadata accessor for ImpressionMetrics();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_10039EA68(uint64_t *a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ImpressionMetrics() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10005DB5C;
  return sub_10039DC7C(a1, v5, v6);
}

unint64_t sub_10039EB4C()
{
  unint64_t result = qword_10095A030;
  if (!qword_10095A030)
  {
    sub_1000A1370(&qword_10095A028);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095A030);
  }
  return result;
}

uint64_t sub_10039EBA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_1009556D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10039EC10()
{
}

void sub_10039EC38(unint64_t a1)
{
  if (a1 < 2)
  {
    id v4 = [self energyColors];
    if (!v4)
    {
      __break(1u);
      goto LABEL_21;
    }
    uint64_t v5 = v4;
    id v6 = [v4 nonGradientTextColor];

    if (v6) {
      goto LABEL_14;
    }
    __break(1u);
LABEL_12:
    id v7 = [self briskColors];
    if (!v7)
    {
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    uint64_t v8 = v7;
    id v9 = [v7 nonGradientTextColor];

    if (!v9)
    {
LABEL_24:
      __break(1u);
      return;
    }
LABEL_14:
    Color.init(uiColor:)();
    return;
  }
  if (a1 == 2) {
    goto LABEL_12;
  }
  if (a1 == 3)
  {
    id v1 = [self sedentaryColors];
    if (v1)
    {
      uint64_t v2 = v1;
      id v3 = [v1 nonGradientTextColor];

      if (v3)
      {
        Color.init(_:)();
        return;
      }
      goto LABEL_22;
    }
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }

  static Color.red.getter();
}

char *sub_10039EDA8(void *a1, void *a2, void *a3)
{
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_dataSource] = 0;
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_sharingImage] = 0;
  id v11 = &v3[OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_trainer];
  uint64_t v12 = type metadata accessor for Trainer();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_mindfulnessSessionViewModel] = a1;
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_fitnessAppContext] = a2;
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_mindfulnessSessionFormattingManager] = a3;
  uint64_t v13 = (objc_class *)type metadata accessor for MindfulnessSessionDetailViewController();
  v43.receiver = v3;
  v43.super_class = v13;
  id v14 = a1;
  id v41 = a2;
  id v15 = a3;
  id v16 = [super initWithNibName:0 bundle:0];
  double v17 = self;
  CGFloat v18 = (char *)v16;
  id v19 = [v17 detailViewDateFormatter];
  MindfulnessSessionViewModel.startDate.getter();
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  id v21 = [v19 stringFromDate:isa];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v18 setTitle:v22];

  id v23 = [v18 navigationItem];
  [v23 setLargeTitleDisplayMode:2];

  id v24 = [v18 navigationItem];
  id v25 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:9 target:v18 action:"didTapShareButton"];
  [v24 setRightBarButtonItem:v25];

  unint64_t result = (char *)[v18 tableView];
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  unint64_t v27 = result;
  [result setSeparatorStyle:0];

  uint64_t v28 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t result = (char *)[v18 tableView];
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  id v29 = result;
  id v30 = objc_allocWithZone((Class)UITableViewDiffableDataSource);
  aBlock[4] = sub_1003A0CB4;
  aBlock[5] = v28;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003A0CBC;
  aBlock[3] = &unk_1008C45B8;
  double v31 = _Block_copy(aBlock);
  swift_retain();
  id v32 = [v30 initWithTableView:v29 cellProvider:v31];

  _Block_release(v31);
  swift_release();
  double v33 = *(void **)&v18[OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_dataSource];
  *(void *)&v18[OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_dataSource] = v32;

  unint64_t result = (char *)[v18 tableView];
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v34 = result;
  type metadata accessor for MindfulnessSessionDetailHeaderCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v36 = String._bridgeToObjectiveC()();
  [v34 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v36];

  unint64_t result = (char *)[v18 tableView];
  if (result)
  {
    uint64_t v37 = result;
    type metadata accessor for MindfulnessSessionDetailSideBySideItemsCell();
    uint64_t v38 = swift_getObjCClassFromMetadata();
    NSString v39 = String._bridgeToObjectiveC()();
    [v37 registerClass:v38 forCellReuseIdentifier:v39];

    sub_10039F3AC();
    swift_release();

    return v18;
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_10039F3AC()
{
  swift_getObjectType();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  uint64_t v2 = (void *)HKLogActivity;
  os_log_type_t v3 = v1;
  if (os_log_type_enabled(HKLogActivity, v1))
  {
    id v4 = v2;
    uint64_t v5 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v6 = _typeName(_:qualified:)();
    sub_10008F1F4(v6, v7, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    sub_10008F1F4(0xD000000000000012, 0x80000001007B7F90, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v4, v3, "%s::%s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  id v8 = sub_10039F574();
  uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_dataSource);
  if (v9)
  {
    id v10 = v9;
    [v10 applySnapshot:v8 animatingDifferences:1];
  }
}

id sub_10039F574()
{
  swift_getObjectType();
  id v0 = [objc_allocWithZone((Class)NSDiffableDataSourceSnapshot) init];
  sub_1000AFA94((uint64_t *)&unk_1009556C0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1007509E0;
  *(void *)(v1 + 56) = &type metadata for String;
  *(void *)(v1 + 32) = 0xD000000000000011;
  *(void *)(v1 + 40) = 0x80000001007C0020;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v0 appendSectionsWithIdentifiers:isa];

  sub_1001E5134((uint64_t)&off_1008B2BD0);
  swift_arrayDestroy();
  Class v3 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v0 appendItemsWithIdentifiers:v3];

  os_log_type_t v4 = static os_log_type_t.default.getter();
  uint64_t v5 = (void *)HKLogActivity;
  os_log_type_t v6 = v4;
  if (os_log_type_enabled(HKLogActivity, v4))
  {
    id v7 = v0;
    os_log_type_t log = v5;
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    uint64_t v10 = _typeName(_:qualified:)();
    sub_10008F1F4(v10, v11, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    sub_10008F1F4(0x70616E53656B616DLL, 0xEE002928746F6873, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 22) = 2112;
    id v12 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v9 = v7;

    _os_log_impl((void *)&_mh_execute_header, log, v6, "%s::%s snapshot %@", (uint8_t *)v8, 0x20u);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  return v0;
}

id sub_10039F890(void *a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v5 = (char *)Strong;
  if (IndexPath.row.getter())
  {
    NSString v6 = String._bridgeToObjectiveC()();
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v8 = [a1 dequeueReusableCellWithIdentifier:v6 forIndexPath:isa];

    id v9 = v8;
    int v10 = sub_1003A0E14(a2);
    type metadata accessor for MindfulnessSessionDetailSideBySideItemsCell();
    if (swift_dynamicCastClass())
    {
      unint64_t v11 = *(void **)&v5[OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_mindfulnessSessionFormattingManager];
      id v12 = *(id *)&v5[OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_mindfulnessSessionViewModel];
      id v13 = v11;
      sub_1004608A8((uint64_t)v12, v13, v10 & 0xFFFFFF);
    }
    else
    {
    }
  }
  else
  {
    NSString v14 = String._bridgeToObjectiveC()();
    Class v15 = IndexPath._bridgeToObjectiveC()().super.isa;
    id v9 = [a1 dequeueReusableCellWithIdentifier:v14 forIndexPath:v15];

    type metadata accessor for MindfulnessSessionDetailHeaderCell();
    if (swift_dynamicCastClass())
    {
      id v16 = *(void **)&v5[OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_mindfulnessSessionViewModel];
      double v17 = *(void **)&v5[OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_fitnessAppContext];
      CGFloat v18 = *(void **)&v5[OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_mindfulnessSessionFormattingManager];
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = a1;
      id v9 = v9;
      id v20 = v16;
      id v21 = v17;
      id v22 = v18;
      id v23 = a1;
      sub_1006AAF04(v20, v21, v22, (uint64_t)sub_1003A0F78, v19);

      swift_release();
    }
    else
    {
    }
  }
  return v9;
}

uint64_t sub_10039FB14(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000DF004();
  int v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  aBlock[4] = sub_1002F83DC;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008C4630;
  id v12 = _Block_copy(aBlock);
  id v13 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100075B54();
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_10039FF3C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94(&qword_100950BA8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_mindfulnessSessionViewModel);
  uint64_t v6 = dispatch thunk of MindfulnessSessionViewModel.sessionType.getter();
  if ((v7 & 1) != 0 || v6 != 3) {
    goto LABEL_18;
  }
  unint64_t v8 = MindfulnessSessionViewModel.mindfulnessSessions.getter();
  unint64_t v9 = v8;
  if (v8 >> 62)
  {
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_5;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_17;
  }
LABEL_5:
  if ((v9 & 0xC000000000000001) != 0)
  {
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v10 = *(id *)(v9 + 32);
  }
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  id v12 = [v11 metadata];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    if (*(void *)(v14 + 16) && (unint64_t v17 = sub_1000DA1C0(v15, v16), (v18 & 1) != 0))
    {
      sub_10008F484(*(void *)(v14 + 56) + 32 * v17, (uint64_t)&v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v33 + 1))
      {
        sub_10005C2B0(&v32, v34);
        *(void *)&long long v32 = 0;
        *((void *)&v32 + 1) = 0xE000000000000000;
        _print_unlocked<A, B>(_:_:)();
        long long v19 = v32;
        id v20 = *(void **)(*(void *)(v1
                                   + OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_fitnessAppContext)
                       + OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider);
        uint64_t v21 = swift_allocObject();
        swift_unknownObjectWeakInit();
        id v22 = v20;
        sub_100492FBC(v19, *((uint64_t *)&v19 + 1), v22, v21);

        swift_bridgeObjectRelease();
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v34);
        swift_release();
        return;
      }
    }
    else
    {
      long long v32 = 0u;
      long long v33 = 0u;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    long long v32 = 0u;
    long long v33 = 0u;
  }

  sub_10008DB18((uint64_t)&v32, &qword_100955A00);
LABEL_18:
  uint64_t v23 = *(void *)(v1
                  + OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_mindfulnessSessionFormattingManager);
  uint64_t v24 = type metadata accessor for Trainer();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v4, 1, 1, v24);
  id v25 = (void *)MindfulnessSessionViewModel.sourceRevision.getter();
  id v26 = [v25 source];

  unsigned int v27 = [v26 _hasFirstPartyBundleID];
  if (v27) {
    uint64_t v28 = sub_1003A12AC;
  }
  else {
    uint64_t v28 = sub_1003A12A8;
  }
  if (v27) {
    double v29 = 200.0;
  }
  else {
    double v29 = 68.0;
  }
  v35.CGFloat width = 270.0;
  v35.CGFloat height = v29;
  UIGraphicsBeginImageContextWithOptions(v35, 0, 0.0);
  ((void (*)(uint64_t, char *, uint64_t, double, double, double, double))v28)(v5, v4, v23, 0.0, 0.0, 270.0, v29);
  id v30 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();
  sub_10008DB18((uint64_t)v4, &qword_100950BA8);
  double v31 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_sharingImage);
  *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_sharingImage) = v30;

  sub_1003A0760();
}

uint64_t sub_1003A0344(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100950BA8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v7 = (char *)&v28 - v6;
  __chkstk_darwin(v8);
  id v10 = (char *)&v28 - v9;
  uint64_t v11 = type metadata accessor for Trainer();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v16 = (char *)result;
    sub_1003A1240(a1, (uint64_t)v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {

      return sub_10008DB18((uint64_t)v10, &qword_100950BA8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
      double v29 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
      v29(v7, v14, v11);
      unint64_t v17 = *(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
      v17(v7, 0, 1, v11);
      uint64_t v18 = (uint64_t)&v16[OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_trainer];
      swift_beginAccess();
      sub_1003A12B0((uint64_t)v7, v18);
      swift_endAccess();
      uint64_t v19 = *(void *)&v16[OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_mindfulnessSessionFormattingManager];
      uint64_t v20 = *(void *)&v16[OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_mindfulnessSessionViewModel];
      v29(v4, v14, v11);
      v17(v4, 0, 1, v11);
      uint64_t v21 = (void *)MindfulnessSessionViewModel.sourceRevision.getter();
      id v22 = [v21 source];

      LODWORD(v21) = [v22 _hasFirstPartyBundleID];
      BOOL v23 = v21 == 0;
      if (v21) {
        uint64_t v24 = sub_1003A12AC;
      }
      else {
        uint64_t v24 = sub_1003A12A8;
      }
      if (v23) {
        double v25 = 68.0;
      }
      else {
        double v25 = 200.0;
      }
      v30.CGFloat width = 270.0;
      v30.CGFloat height = v25;
      UIGraphicsBeginImageContextWithOptions(v30, 0, 0.0);
      ((void (*)(uint64_t, char *, uint64_t, double, double, double, double))v24)(v20, v4, v19, 0.0, 0.0, 270.0, v25);
      id v26 = UIGraphicsGetImageFromCurrentImageContext();
      UIGraphicsEndImageContext();
      sub_10008DB18((uint64_t)v4, &qword_100950BA8);
      unsigned int v27 = *(void **)&v16[OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_sharingImage];
      *(void *)&v16[OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_sharingImage] = v26;

      sub_1003A0760();
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
  }
  return result;
}

void sub_1003A0760()
{
  sub_1000AFA94((uint64_t *)&unk_1009556C0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10074E640;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_sharingImage];
  *(void *)(v1 + 56) = sub_1000AFA94(&qword_1009547D8);
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 88) = type metadata accessor for MindfulnessSessionDetailViewController();
  *(void *)(v1 + 64) = v0;
  id v3 = objc_allocWithZone((Class)UIActivityViewController);
  id v4 = v2;
  uint64_t v5 = v0;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v8 = [v3 initWithActivityItems:isa applicationActivities:0];

  Class v7 = (Class)sub_1000FCD04();
  if (!v7)
  {
    type metadata accessor for ActivityType(0);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class v7 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  [v8 setExcludedActivityTypes:v7];

  [v5 presentViewController:v8 animated:1 completion:0];
}

id sub_1003A0A04()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MindfulnessSessionDetailViewController();
  return [super dealloc];
}

uint64_t sub_1003A0AC4()
{
  return type metadata accessor for MindfulnessSessionDetailViewController();
}

uint64_t type metadata accessor for MindfulnessSessionDetailViewController()
{
  uint64_t result = qword_10095A0A8;
  if (!qword_10095A0A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1003A0B18()
{
  sub_1003A0BC8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1003A0BC8()
{
  if (!qword_10095A0B8)
  {
    type metadata accessor for Trainer();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10095A0B8);
    }
  }
}

uint64_t sub_1003A0C7C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

id sub_1003A0CB4(void *a1, uint64_t a2)
{
  return sub_10039F890(a1, a2);
}

id sub_1003A0CBC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(uint64_t (**)(id, char *, void *))(a1 + 32);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  v15[3] = swift_getObjectType();
  v15[0] = a4;
  swift_retain();
  id v12 = a2;
  swift_unknownObjectRetain();
  uint64_t v13 = (void *)v11(v12, v10, v15);

  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v15);

  return v13;
}

uint64_t sub_1003A0E14(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v6 = IndexPath.row.getter();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    uint64_t v11 = &type metadata for Health;
    unint64_t v12 = sub_1003A0F80();
    char v8 = isFeatureEnabled(_:)();
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v10);
    if (v8) {
      return 8519936;
    }
    else {
      return 256;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003A0F40()
{
  return swift_deallocObject();
}

uint64_t sub_1003A0F78()
{
  return sub_10039FB14(*(void **)(v0 + 16));
}

unint64_t sub_1003A0F80()
{
  unint64_t result = qword_10095A120;
  if (!qword_10095A120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095A120);
  }
  return result;
}

id sub_1003A0FD4()
{
  uint64_t v1 = sub_1000AFA94(&qword_100950BA8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [objc_allocWithZone((Class)LPLinkMetadata) init];
  uint64_t v5 = OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_sharingImage;
  uint64_t v6 = *(UIImage **)(v0 + OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_sharingImage);
  if (v6)
  {
    uint64_t v7 = UIImagePNGRepresentation(v6);
    if (v7)
    {
      char v8 = v7;
      uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v11 = v10;

      id v12 = [objc_allocWithZone((Class)LPFileMetadata) init];
      uint64_t v13 = *(void *)(v0
                      + OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_mindfulnessSessionViewModel);
      uint64_t v14 = v0 + OBJC_IVAR____TtC10FitnessApp38MindfulnessSessionDetailViewController_trainer;
      swift_beginAccess();
      sub_1003A1240(v14, (uint64_t)v3);
      id v15 = sub_1005CBFB4(v13, (uint64_t)v3);
      sub_10008DB18((uint64_t)v3, &qword_100950BA8);
      NSString v16 = [v15 string];

      if (!v16)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v16 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      [v12 setName:v16];

      id v17 = objc_allocWithZone((Class)LPImage);
      sub_10025C56C(v9, v11);
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      NSString v19 = String._bridgeToObjectiveC()();
      id v20 = [v17 initWithData:isa MIMEType:v19];
      sub_1000939A4(v9, v11);

      [v12 setThumbnail:v20];
      [v4 setSpecialization:v12];

      sub_1000939A4(v9, v11);
    }
  }
  uint64_t v21 = *(void **)(v0 + v5);
  *(void *)(v0 + v5) = 0;

  return v4;
}

uint64_t sub_1003A1240(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100950BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003A12B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100950BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for DayRangeForStackedLoadCharts(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003A13F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DayRangeForStackedLoadCharts()
{
  return &type metadata for DayRangeForStackedLoadCharts;
}

unint64_t sub_1003A142C()
{
  unint64_t result = qword_10095A128;
  if (!qword_10095A128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095A128);
  }
  return result;
}

uint64_t sub_1003A1480@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v76 = a2;
  uint64_t v73 = sub_1000AFA94(&qword_100950758);
  __chkstk_darwin(v73);
  CGRect v74 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v69 = (char *)&v62 - v5;
  uint64_t v71 = sub_1000AFA94(&qword_100950728);
  __chkstk_darwin(v71);
  uint64_t v70 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v72 = (uint64_t)&v62 - v8;
  uint64_t v75 = type metadata accessor for DayIndex();
  uint64_t v68 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v80 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  double v79 = (char *)&v62 - v11;
  uint64_t v12 = type metadata accessor for Calendar.Component();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Calendar.Identifier();
  uint64_t v77 = *(char **)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for Calendar();
  uint64_t v19 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v78 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v62 - v22;
  uint64_t v24 = type metadata accessor for Date();
  uint64_t v81 = *(void *)(v24 - 8);
  uint64_t v82 = v24;
  __chkstk_darwin(v24);
  id v26 = (char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  double v29 = (char *)&v62 - v28;
  __chkstk_darwin(v30);
  int v83 = (char *)&v62 - v31;
  Date.init()();
  if (a1)
  {
    uint64_t v67 = (void (*)(void, void, void))v16;
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for Calendar.Component.month(_:), v12);
    static Calendar.current.getter();
    Date.bySubtracting(component:value:calendar:)();
    uint64_t v65 = *(void (**)(char *, uint64_t))(v19 + 8);
    uint64_t v66 = v19 + 8;
    v65(v23, v84);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    long long v32 = v77;
    long long v33 = v67;
    (*((void (**)(char *, void, void))v77 + 13))(v18, enum case for Calendar.Identifier.gregorian(_:), v67);
    Calendar.init(identifier:)();
    (*((void (**)(char *, void (*)(void, void, void)))v32 + 1))(v18, v33);
    uint64_t v34 = v82;
    CGSize v35 = *(void (**)(char *, char *, uint64_t))(v81 + 16);
    uint64_t v77 = v29;
    v35(v26, v29, v82);
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
    uint64_t v36 = v19 + 16;
    uint64_t v38 = v78;
    uint64_t v39 = v84;
    v37(v78, v23, v84);
    uint64_t v40 = v79;
    DayIndex.init(date:calendar:)();
    v35(v26, v83, v34);
    uint64_t v67 = (void (*)(void, void, void))v37;
    v37(v38, v23, v39);
    id v41 = v80;
    DayIndex.init(date:calendar:)();
    sub_1003A209C();
    uint64_t v42 = v75;
    uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
    if (result)
    {
      uint64_t v64 = v36;
      uint64_t v63 = v23;
      uint64_t v44 = v73;
      uint64_t v46 = v68;
      uint64_t v45 = v69;
      uint64_t v47 = &v69[*(int *)(v73 + 48)];
      uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
      v48(v69, v40, v42);
      uint64_t v62 = v47;
      v48(v47, v41, v42);
      uint64_t v49 = v74;
      uint64_t v50 = &v74[*(int *)(v44 + 48)];
      v48(v74, v45, v42);
      v48(v50, v47, v42);
      uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
      uint64_t v52 = (uint64_t)v70;
      v51(v70, v49, v42);
      uint64_t v53 = *(void (**)(char *, uint64_t))(v46 + 8);
      v53(v50, v42);
      uint64_t v54 = &v49[*(int *)(v44 + 48)];
      v51(v49, v45, v42);
      v51(v54, v62, v42);
      v51((char *)(v52 + *(int *)(v71 + 36)), v54, v42);
      v53(v49, v42);
      sub_1003A20F4(v52, v72);
      uint64_t v55 = v63;
      uint64_t v56 = v84;
      v67(v78, v63, v84);
      GregorianDayRange.init(dayIndexRange:gregorianCalendar:)();
      v53(v80, v42);
      v53(v79, v42);
      v65(v55, v56);
      uint64_t v57 = v82;
      uint64_t v58 = *(void (**)(char *, uint64_t))(v81 + 8);
      v58(v77, v82);
      return ((uint64_t (*)(char *, uint64_t))v58)(v83, v57);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    type metadata accessor for TrainingLoadViewModelProvider();
    static Date.now.getter();
    uint64_t v59 = (void (**)(char *, uint64_t))v77;
    (*((void (**)(char *, void, uint64_t))v77 + 13))(v18, enum case for Calendar.Identifier.gregorian(_:), v16);
    Calendar.init(identifier:)();
    v59[1](v18, v16);
    static TrainingLoadViewModelProvider.createDayRange(now:days:gregorianCalendar:)();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v84);
    uint64_t v60 = v82;
    uint64_t v61 = *(void (**)(char *, uint64_t))(v81 + 8);
    v61(v26, v82);
    return ((uint64_t (*)(char *, uint64_t))v61)(v83, v60);
  }
  return result;
}

uint64_t sub_1003A1D38(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10047E5EC(*a1, *a2);
}

Swift::Int sub_1003A1D44()
{
  return Hasher._finalize()();
}

uint64_t sub_1003A1DF0()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1003A1E88()
{
  return Hasher._finalize()();
}

unint64_t sub_1003A1F30@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1003A215C(*a1);
  *a2 = result;
  return result;
}

void sub_1003A1F60(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xEB00000000736874;
  uint64_t v5 = 0x6E6F4D6565726874;
  if (v2 != 1)
  {
    uint64_t v5 = 0x68746E6F4D786973;
    unint64_t v4 = 0xE900000000000073;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x68746E6F6DLL;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

void sub_1003A1FC8(void *a1@<X8>)
{
  *a1 = &off_1008B6218;
}

void sub_1003A1FD8(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unint64_t sub_1003A1FE8()
{
  unint64_t result = qword_10095A130;
  if (!qword_10095A130)
  {
    sub_1000A1370(&qword_10095A138);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095A130);
  }
  return result;
}

unint64_t sub_1003A2048()
{
  unint64_t result = qword_10095A140;
  if (!qword_10095A140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095A140);
  }
  return result;
}

unint64_t sub_1003A209C()
{
  unint64_t result = qword_100950740;
  if (!qword_100950740)
  {
    type metadata accessor for DayIndex();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100950740);
  }
  return result;
}

uint64_t sub_1003A20F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100950728);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1003A215C(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B61B0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

char *sub_1003A21A8(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    BOOL v6 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    BOOL v6 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v7 = (int *)type metadata accessor for ActivitySharingFriendListItem();
    uint64_t v8 = v7[6];
    uint64_t v31 = &v6[v8];
    uint64_t v9 = (uint64_t)a2 + v8;
    uint64_t v10 = type metadata accessor for AttributedString();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v13 = v4;
    swift_retain();
    v12(v31, v9, v10);
    v12(&v6[v7[7]], (uint64_t)a2 + v7[7], v10);
    uint64_t v14 = v7[8];
    id v15 = &v6[v14];
    uint64_t v16 = (char *)a2 + v14;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))((char *)a2 + v14, 1, v10))
    {
      uint64_t v17 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v12(v15, (uint64_t)v16, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
    }
    uint64_t v18 = v7[9];
    uint64_t v19 = *(char **)((char *)a2 + v18);
    *(void *)&v6[v18] = v19;
    v6[v7[10]] = *((unsigned char *)a2 + v7[10]);
    uint64_t v20 = v7[11];
    uint64_t v21 = &v6[v20];
    uint64_t v22 = (char **)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *(void *)uint64_t v21 = *v22;
    *((void *)v21 + 1) = v23;
    uint64_t v24 = *(int *)(a3 + 20);
    uint64_t v25 = &v6[v24];
    id v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    *(void *)uint64_t v25 = v28;
    *((void *)v25 + 1) = v27;
    id v29 = v19;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v6;
}

uint64_t sub_1003A23DC(id *a1)
{
  swift_release();
  Swift::String v2 = (int *)type metadata accessor for ActivitySharingFriendListItem();
  int v3 = (char *)a1 + v2[6];
  uint64_t v4 = type metadata accessor for AttributedString();
  uint64_t v5 = *(void *)(v4 - 8);
  BOOL v6 = *(void (**)(char *, uint64_t))(v5 + 8);
  v6(v3, v4);
  v6((char *)a1 + v2[7], v4);
  uint64_t v7 = (char *)a1 + v2[8];
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4)) {
    v6(v7, v4);
  }

  swift_bridgeObjectRelease();

  return swift_release();
}

char *sub_1003A2518(char *a1, uint64_t a2, uint64_t a3)
{
  BOOL v6 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v5;
  uint64_t v7 = (int *)type metadata accessor for ActivitySharingFriendListItem();
  uint64_t v8 = v7[6];
  uint64_t v31 = &a1[v8];
  uint64_t v9 = a2 + v8;
  uint64_t v10 = type metadata accessor for AttributedString();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  id v13 = v6;
  swift_retain();
  v12(v31, v9, v10);
  v12(&a1[v7[7]], a2 + v7[7], v10);
  uint64_t v14 = v7[8];
  id v15 = &a1[v14];
  uint64_t v16 = (const void *)(a2 + v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v14, 1, v10))
  {
    uint64_t v17 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v12(v15, (uint64_t)v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = v7[9];
  uint64_t v19 = *(void **)(a2 + v18);
  *(void *)&a1[v18] = v19;
  a1[v7[10]] = *(unsigned char *)(a2 + v7[10]);
  uint64_t v20 = v7[11];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = v22[1];
  *(void *)uint64_t v21 = *v22;
  *((void *)v21 + 1) = v23;
  uint64_t v24 = *(int *)(a3 + 20);
  uint64_t v25 = &a1[v24];
  id v26 = (uint64_t *)(a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *(void *)uint64_t v25 = v28;
  *((void *)v25 + 1) = v27;
  id v29 = v19;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1003A2700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void **)a2;
  BOOL v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v7 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v8 = (int *)type metadata accessor for ActivitySharingFriendListItem();
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for AttributedString();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 24);
  v14(v10, v11, v12);
  v14(a1 + v8[7], a2 + v8[7], v12);
  long long v33 = v8;
  uint64_t v15 = v8[8];
  uint64_t v16 = (const void *)(a2 + v15);
  uint64_t v17 = *(uint64_t (**)(void))(v13 + 48);
  long long v32 = (void *)(a1 + v15);
  LODWORD(v8) = v17();
  int v18 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v17)(v16, 1, v12);
  if (v8)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v32, v16, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v32, 0, 1, v12);
      goto LABEL_9;
    }
    size_t v19 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_10095BFD0) - 8) + 64);
    uint64_t v20 = v32;
  }
  else
  {
    if (!v18)
    {
      v14((uint64_t)v32, (uint64_t)v16, v12);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v32, v12);
    size_t v19 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_10095BFD0) - 8) + 64);
    uint64_t v20 = v32;
  }
  memcpy(v20, v16, v19);
LABEL_9:
  uint64_t v21 = v33[9];
  uint64_t v22 = *(void **)(a1 + v21);
  uint64_t v23 = *(void **)(a2 + v21);
  *(void *)(a1 + v21) = v23;
  id v24 = v23;

  *(unsigned char *)(a1 + v33[10]) = *(unsigned char *)(a2 + v33[10]);
  uint64_t v25 = v33[11];
  id v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  void *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = *(int *)(a3 + 20);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  *(void *)(a1 + v28) = *(void *)(a2 + v28);
  swift_retain();
  swift_release();
  *(void *)(v29 + 8) = *(void *)(v30 + 8);
  return a1;
}

char *sub_1003A29B8(char *a1, char *a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  BOOL v6 = (int *)type metadata accessor for ActivitySharingFriendListItem();
  uint64_t v7 = v6[6];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for AttributedString();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  v12(&a1[v6[7]], &a2[v6[7]], v10);
  uint64_t v13 = v6[8];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(&a2[v13], 1, v10))
  {
    uint64_t v16 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  *(void *)&a1[v6[9]] = *(void *)&a2[v6[9]];
  a1[v6[10]] = a2[v6[10]];
  *(_OWORD *)&a1[v6[11]] = *(_OWORD *)&a2[v6[11]];
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t sub_1003A2B60(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_release();
  BOOL v6 = (int *)type metadata accessor for ActivitySharingFriendListItem();
  uint64_t v7 = v6[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for AttributedString();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v12(a1 + v6[7], &a2[v6[7]], v10);
  uint64_t v31 = v6;
  uint64_t v13 = v6[8];
  uint64_t v14 = &a2[v13];
  uint64_t v15 = *(uint64_t (**)(void))(v11 + 48);
  uint64_t v30 = (void *)(a1 + v13);
  LODWORD(v6) = v15();
  int v16 = ((uint64_t (*)(char *, uint64_t, uint64_t))v15)(v14, 1, v10);
  if (v6)
  {
    if (!v16)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 32))(v30, v14, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v30, 0, 1, v10);
      goto LABEL_9;
    }
    size_t v17 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_10095BFD0) - 8) + 64);
    int v18 = v30;
  }
  else
  {
    if (!v16)
    {
      v12((uint64_t)v30, v14, v10);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v30, v10);
    size_t v17 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_10095BFD0) - 8) + 64);
    int v18 = v30;
  }
  memcpy(v18, v14, v17);
LABEL_9:
  uint64_t v19 = v31[9];
  uint64_t v20 = *(void **)(a1 + v19);
  *(void *)(a1 + v19) = *(void *)&a2[v19];

  *(unsigned char *)(a1 + v31[10]) = a2[v31[10]];
  uint64_t v21 = v31[11];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)&a2[v21];
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = *(int *)(a3 + 20);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = &a2[v26];
  *(void *)(a1 + v26) = *(void *)v28;
  swift_release();
  *(void *)(v27 + 8) = *((void *)v28 + 1);
  return a1;
}

uint64_t sub_1003A2DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003A2E04);
}

uint64_t sub_1003A2E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActivitySharingFriendListItem();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1003A2ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003A2EE4);
}

uint64_t sub_1003A2EE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ActivitySharingFriendListItem();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

uint64_t type metadata accessor for ActivitySharingFriendListItemView()
{
  uint64_t result = qword_10095A1A0;
  if (!qword_10095A1A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003A2FEC()
{
  uint64_t result = type metadata accessor for ActivitySharingFriendListItem();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1003A3080()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003A309C@<X0>(uint64_t a1@<X8>)
{
  Swift::String v2 = v1;
  uint64_t v90 = a1;
  uint64_t v3 = type metadata accessor for AccessibilityActionKind();
  uint64_t v88 = *(void *)(v3 - 8);
  uint64_t v89 = v3;
  __chkstk_darwin(v3);
  uint64_t v87 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ActivitySharingFriendListItemView();
  uint64_t v86 = *(void *)(v5 - 8);
  uint64_t v85 = *(void *)(v86 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v84 = (uint64_t)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AccessibilityTraits();
  uint64_t v82 = *(void *)(v7 - 8);
  uint64_t v83 = v7;
  __chkstk_darwin(v7);
  uint64_t v81 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v79 = *(void *)(v9 - 8);
  uint64_t v80 = v9;
  __chkstk_darwin(v9);
  uint64_t v78 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1000AFA94(&qword_10094E460) - 8;
  __chkstk_darwin(v72);
  uint64_t v66 = (uint64_t)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for RoundedRectangle();
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v70 = sub_1000AFA94(&qword_100958408) - 8;
  __chkstk_darwin(v70);
  uint64_t v67 = (uint64_t *)((char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_1000AFA94(&qword_10095A1D8);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000AFA94(&qword_10095A1E0);
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000AFA94(&qword_10095A1E8);
  uint64_t v25 = v24 - 8;
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1000AFA94(&qword_10095A1F0);
  __chkstk_darwin(v71);
  uint64_t v29 = (char *)&v66 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1000AFA94(&qword_10095A1F8);
  __chkstk_darwin(v73);
  uint64_t v68 = (char *)&v66 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1000AFA94(&qword_10095A200);
  uint64_t v75 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v69 = (char *)&v66 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1000AFA94(&qword_10095A208);
  __chkstk_darwin(v77);
  uint64_t v92 = (char *)&v66 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v76 = (char *)&v66 - v34;
  *(void *)uint64_t v19 = static VerticalAlignment.center.getter();
  *((void *)v19 + 1) = 0;
  v19[16] = 1;
  uint64_t v35 = sub_1000AFA94(&qword_10095A210);
  sub_1003A3B34(v2, (uint64_t)&v19[*(int *)(v35 + 44)]);
  LOBYTE(v2) = static Edge.Set.all.getter();
  sub_1000AEF2C((uint64_t)v19, (uint64_t)v23, &qword_10095A1D8);
  uint64_t v36 = &v23[*(int *)(v21 + 44)];
  char *v36 = (char)v2;
  *(_OWORD *)(v36 + 8) = xmmword_10075F860;
  *(_OWORD *)(v36 + 24) = xmmword_1007613C0;
  v36[40] = 0;
  sub_10008DB18((uint64_t)v19, &qword_10095A1D8);
  id v37 = sub_10005DB50();
  uint64_t v38 = Color.init(uiColor:)();
  uint64_t v39 = (char *)v15 + *(int *)(v13 + 28);
  uint64_t v40 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v41 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 104))(v39, v40, v41);
  *uint64_t v15 = 0x4028000000000000;
  v15[1] = 0x4028000000000000;
  uint64_t v42 = v66;
  sub_100098150((uint64_t)v15, v66, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v42 + *(int *)(v72 + 44)) = 256;
  objc_super v43 = v67;
  sub_1000AEF2C(v42, (uint64_t)v67 + *(int *)(v70 + 44), &qword_10094E460);
  *objc_super v43 = v38;
  swift_retain();
  sub_10008DB18(v42, &qword_10094E460);
  sub_1002854A8((uint64_t)v15);
  swift_release();
  uint64_t v44 = static Alignment.center.getter();
  uint64_t v46 = v45;
  uint64_t v47 = (uint64_t)&v27[*(int *)(v25 + 44)];
  sub_1000AEF2C((uint64_t)v43, v47, &qword_100958408);
  uint64_t v48 = (uint64_t *)(v47 + *(int *)(sub_1000AFA94(&qword_100958448) + 36));
  *uint64_t v48 = v44;
  v48[1] = v46;
  sub_1000AEF2C((uint64_t)v23, (uint64_t)v27, &qword_10095A1E0);
  sub_10008DB18((uint64_t)v43, &qword_100958408);
  sub_10008DB18((uint64_t)v23, &qword_10095A1E0);
  LOBYTE(v44) = static Edge.Set.all.getter();
  sub_1000AEF2C((uint64_t)v27, (uint64_t)v29, &qword_10095A1E8);
  uint64_t v49 = &v29[*(int *)(v71 + 36)];
  char *v49 = v44;
  *((void *)v49 + 1) = 0;
  *((void *)v49 + 2) = 0;
  *(_OWORD *)(v49 + 24) = xmmword_1007509A0;
  v49[40] = 0;
  sub_10008DB18((uint64_t)v27, &qword_10095A1E8);
  type metadata accessor for ActivitySharingFriendListItem();
  uint64_t v50 = v91;
  sub_1003A48C4();
  uint64_t v51 = (uint64_t)v68;
  View.accessibilityIdentifier(_:)();
  sub_10008DB18((uint64_t)v29, &qword_10095A1F0);
  uint64_t v52 = v78;
  static AccessibilityChildBehavior.combine.getter();
  unint64_t v53 = sub_1003A4A80();
  uint64_t v54 = v69;
  uint64_t v55 = v73;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v52, v80);
  sub_10008DB18(v51, &qword_10095A1F8);
  uint64_t v56 = v81;
  static AccessibilityTraits.isButton.getter();
  uint64_t v93 = v55;
  unint64_t v94 = v53;
  swift_getOpaqueTypeConformance2();
  uint64_t v57 = v74;
  View.accessibilityAddTraits(_:)();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v56, v83);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v54, v57);
  uint64_t v58 = v84;
  sub_100098150(v50, v84, (uint64_t (*)(void))type metadata accessor for ActivitySharingFriendListItemView);
  unint64_t v59 = (*(unsigned __int8 *)(v86 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
  uint64_t v60 = swift_allocObject();
  sub_1003A4B30(v58, v60 + v59);
  uint64_t v61 = v87;
  static AccessibilityActionKind.default.getter();
  uint64_t v62 = (uint64_t)v76;
  uint64_t v63 = (uint64_t)v92;
  ModifiedContent<>.accessibilityAction(_:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v61, v89);
  sub_10008DB18(v63, &qword_10095A208);
  sub_100098150(v91, v58, (uint64_t (*)(void))type metadata accessor for ActivitySharingFriendListItemView);
  uint64_t v64 = swift_allocObject();
  sub_1003A4B30(v58, v64 + v59);
  sub_1003A4BF0();
  View.onTapGesture(count:perform:)();
  swift_release();
  return sub_10008DB18(v62, &qword_10095A208);
}

uint64_t sub_1003A3B34@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_10095A248);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - v7;
  *(void *)uint64_t v8 = static HorizontalAlignment.leading.getter();
  *((void *)v8 + 1) = 0xC014000000000000;
  v8[16] = 0;
  uint64_t v9 = sub_1000AFA94(&qword_10095A250);
  sub_1003A3D94(a1, (uint64_t)&v8[*(int *)(v9 + 44)]);
  uint64_t v10 = type metadata accessor for ActivitySharingFriendListItem();
  uint64_t v11 = *(void **)((char *)a1 + *(int *)(v10 + 36));
  int v28 = *((unsigned __int8 *)a1 + *(int *)(v10 + 40));
  uint64_t v12 = *a1;
  id v29 = v11;
  id v13 = [v12 currentCacheIndex];
  unsigned int v27 = [v12 estimatedIsStandaloneForSnapshotIndex:v13];

  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v14 = v31;
  char v15 = v32;
  uint64_t v16 = v33;
  LOBYTE(a1) = v34;
  uint64_t v18 = v35;
  uint64_t v17 = v36;
  uint64_t v26 = v5;
  sub_1000AEF2C((uint64_t)v8, (uint64_t)v5, &qword_10095A248);
  uint64_t v19 = (uint64_t)v5;
  uint64_t v20 = v30;
  sub_1000AEF2C(v19, v30, &qword_10095A248);
  uint64_t v21 = sub_1000AFA94(&qword_10095A258);
  uint64_t v22 = v20 + *(int *)(v21 + 48);
  *(void *)uint64_t v22 = 0;
  *(unsigned char *)(v22 + 8) = 1;
  uint64_t v23 = v20 + *(int *)(v21 + 64);
  *(void *)uint64_t v23 = v11;
  *(unsigned char *)(v23 + 8) = v28;
  *(void *)(v23 + 12) = 0x41000000428A0000;
  *(_DWORD *)(v23 + 20) = 0x40000000;
  *(unsigned char *)(v23 + 24) = v27;
  *(_DWORD *)(v23 + 25) = 0;
  *(void *)(v23 + 32) = 0;
  *(void *)(v23 + 40) = 0;
  *(void *)(v23 + 48) = v14;
  *(unsigned char *)(v23 + 56) = v15;
  *(void *)(v23 + 64) = v16;
  *(unsigned char *)(v23 + 72) = (_BYTE)a1;
  *(void *)(v23 + 80) = v18;
  *(void *)(v23 + 88) = v17;
  id v24 = v29;
  sub_10008A670(0);
  sub_10008DB18((uint64_t)v8, &qword_10095A248);

  sub_10005E5F8(0);
  return sub_10008DB18((uint64_t)v26, &qword_10095A248);
}

uint64_t sub_1003A3D94@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v3 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
  __chkstk_darwin(v3 - 8);
  uint64_t v66 = &v62[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v67 = type metadata accessor for AttributedString();
  uint64_t v64 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v68 = &v62[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v8 = &v62[-v7];
  uint64_t v9 = sub_1000AFA94(&qword_10095A260);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v62[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  uint64_t v14 = &v62[-v13];
  uint64_t v15 = sub_1000AFA94(&qword_10095A268);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = &v62[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  uint64_t v20 = &v62[-v19];
  __chkstk_darwin(v21);
  uint64_t v23 = &v62[-v22];
  *(void *)uint64_t v20 = static VerticalAlignment.center.getter();
  *((void *)v20 + 1) = 0x4024000000000000;
  v20[16] = 0;
  id v24 = (uint64_t *)&v20[*(int *)(sub_1000AFA94(&qword_10095A270) + 44)];
  type metadata accessor for ActivitySharingAvatarProvider();
  sub_1005B6D30(*a1, 32.0);
  uint64_t v25 = Image.init(uiImage:)();
  *(void *)uint64_t v14 = static VerticalAlignment.center.getter();
  *((void *)v14 + 1) = 0x4010000000000000;
  v14[16] = 0;
  uint64_t v26 = sub_1000AFA94(&qword_10095A278);
  sub_1003A4390((uint64_t)a1, (uint64_t)&v14[*(int *)(v26 + 44)]);
  sub_1000AEF2C((uint64_t)v14, (uint64_t)v11, &qword_10095A260);
  uint64_t *v24 = v25;
  uint64_t v27 = (uint64_t)v24 + *(int *)(sub_1000AFA94(&qword_10095A280) + 48);
  uint64_t v28 = v64;
  sub_1000AEF2C((uint64_t)v11, v27, &qword_10095A260);
  swift_retain();
  sub_10008DB18((uint64_t)v14, &qword_10095A260);
  uint64_t v29 = (uint64_t)v11;
  uint64_t v30 = (uint64_t)v66;
  sub_10008DB18(v29, &qword_10095A260);
  swift_release();
  uint64_t v31 = (uint64_t)v23;
  uint64_t v32 = (uint64_t)v23;
  uint64_t v33 = v67;
  sub_1000AEEC8((uint64_t)v20, v32, &qword_10095A268);
  uint64_t v34 = type metadata accessor for ActivitySharingFriendListItem();
  (*(void (**)(unsigned char *, char *, uint64_t))(v28 + 16))(v8, (char *)a1 + *(int *)(v34 + 28), v33);
  uint64_t v35 = Text.init(_:)();
  uint64_t v37 = v36;
  char v39 = v38;
  uint64_t v65 = v40;
  int v63 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  sub_1000AEF2C((uint64_t)a1 + *(int *)(v34 + 32), v30, (uint64_t *)&unk_10095BFD0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v30, 1, v33) == 1)
  {
    AttributedString.init(stringLiteral:)();
    sub_10008DB18(v30, (uint64_t *)&unk_10095BFD0);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v28 + 32))(v68, v30, v33);
  }
  uint64_t v49 = Text.init(_:)();
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  char v55 = v54 & 1;
  sub_1000AEF2C(v31, (uint64_t)v17, &qword_10095A268);
  char v70 = v39 & 1;
  uint64_t v56 = (uint64_t)v17;
  uint64_t v68 = v17;
  uint64_t v57 = v69;
  sub_1000AEF2C(v56, v69, &qword_10095A268);
  uint64_t v58 = sub_1000AFA94(&qword_10095A288);
  uint64_t v59 = v57 + *(int *)(v58 + 48);
  *(void *)uint64_t v59 = v35;
  *(void *)(v59 + 8) = v37;
  *(unsigned char *)(v59 + 16) = v39 & 1;
  *(void *)(v59 + 24) = v65;
  *(unsigned char *)(v59 + 32) = v63;
  *(void *)(v59 + 40) = v42;
  *(void *)(v59 + 48) = v44;
  *(void *)(v59 + 56) = v46;
  *(void *)(v59 + 64) = v48;
  *(unsigned char *)(v59 + 72) = 0;
  uint64_t v60 = v57 + *(int *)(v58 + 64);
  *(void *)uint64_t v60 = v49;
  *(void *)(v60 + 8) = v51;
  *(unsigned char *)(v60 + 16) = v55;
  *(void *)(v60 + 24) = v53;
  sub_1000A1750(v35, v37, v39 & 1);
  swift_bridgeObjectRetain();
  sub_1000A1750(v49, v51, v55);
  swift_bridgeObjectRetain();
  sub_10008DB18(v31, &qword_10095A268);
  sub_1000A06C0(v49, v51, v55);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v35, v37, v70);
  swift_bridgeObjectRelease();
  return sub_10008DB18((uint64_t)v68, &qword_10095A268);
}

uint64_t sub_1003A42D0(void **a1)
{
  if (*(void **)((char *)a1 + *(int *)(type metadata accessor for ActivitySharingFriendListItemView() + 20)))
  {
    Swift::String v2 = *a1;
    swift_retain();
    sub_100371DCC(v2, 1);
    return swift_release();
  }
  else
  {
    type metadata accessor for ActivitySharingNavigationCoordinator();
    sub_10000CD8C(&qword_10094BF10, (void (*)(uint64_t))type metadata accessor for ActivitySharingNavigationCoordinator);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1003A4390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v3 = type metadata accessor for AttributedString();
  uint64_t v49 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v48 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1000AFA94(&qword_100959E78);
  __chkstk_darwin(v44);
  uint64_t v6 = (uint64_t *)((char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for Image.Scale();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1000AFA94(&qword_100959E80);
  __chkstk_darwin(v43);
  uint64_t v12 = (uint64_t *)((char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_1000AFA94(&qword_10095A290);
  uint64_t v45 = *(void *)(v13 - 8);
  uint64_t v46 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AFA94(&qword_10095A298);
  __chkstk_darwin(v16 - 8);
  uint64_t v47 = (uint64_t)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v41 - v19;
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    swift_retain();
    uint64_t v22 = Image.init(systemName:)();
    uint64_t v41 = v3;
    uint64_t v23 = v22;
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Image.Scale.small(_:), v7);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v42 = a1;
    uint64_t v25 = KeyPath;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v6 + *(int *)(v44 + 28), v10, v7);
    *uint64_t v6 = v25;
    sub_1000AEF2C((uint64_t)v6, (uint64_t)v12 + *(int *)(v43 + 36), &qword_100959E78);
    *uint64_t v12 = v23;
    swift_retain();
    sub_10008DB18((uint64_t)v6, &qword_100959E78);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v3 = v41;
    swift_release();
    uint64_t v26 = swift_getKeyPath();
    sub_1000AEF2C((uint64_t)v12, (uint64_t)v15, &qword_100959E80);
    uint64_t v27 = v46;
    uint64_t v28 = (uint64_t *)&v15[*(int *)(v46 + 36)];
    *uint64_t v28 = v26;
    v28[1] = v21;
    a1 = v42;
    sub_10008DB18((uint64_t)v12, &qword_100959E80);
    sub_1000AEEC8((uint64_t)v15, (uint64_t)v20, &qword_10095A290);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v20, 0, 1, v27);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))((char *)&v41 - v19, 1, 1, v46);
  }
  uint64_t v29 = type metadata accessor for ActivitySharingFriendListItem();
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, a1 + *(int *)(v29 + 24), v3);
  uint64_t v30 = Text.init(_:)();
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  char v36 = v35 & 1;
  uint64_t v37 = v47;
  sub_1000AEF2C((uint64_t)v20, v47, &qword_10095A298);
  uint64_t v38 = v50;
  sub_1000AEF2C(v37, v50, &qword_10095A298);
  uint64_t v39 = v38 + *(int *)(sub_1000AFA94(&qword_10095A2A0) + 48);
  *(void *)uint64_t v39 = v30;
  *(void *)(v39 + 8) = v32;
  *(unsigned char *)(v39 + 16) = v36;
  *(void *)(v39 + 24) = v34;
  sub_1000A1750(v30, v32, v36);
  swift_bridgeObjectRetain();
  sub_10008DB18((uint64_t)v20, &qword_10095A298);
  sub_1000A06C0(v30, v32, v36);
  swift_bridgeObjectRelease();
  return sub_10008DB18(v37, &qword_10095A298);
}

unint64_t sub_1003A48C4()
{
  unint64_t result = qword_10095A218;
  if (!qword_10095A218)
  {
    sub_1000A1370(&qword_10095A1F0);
    sub_1003A4940();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095A218);
  }
  return result;
}

unint64_t sub_1003A4940()
{
  unint64_t result = qword_10095A220;
  if (!qword_10095A220)
  {
    sub_1000A1370(&qword_10095A1E8);
    sub_1003A49E0();
    sub_1000A132C(&qword_100958480, &qword_100958448);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095A220);
  }
  return result;
}

unint64_t sub_1003A49E0()
{
  unint64_t result = qword_10095A228;
  if (!qword_10095A228)
  {
    sub_1000A1370(&qword_10095A1E0);
    sub_1000A132C(&qword_10095A230, &qword_10095A1D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095A228);
  }
  return result;
}

unint64_t sub_1003A4A80()
{
  unint64_t result = qword_10095A238;
  if (!qword_10095A238)
  {
    sub_1000A1370(&qword_10095A1F8);
    sub_1003A48C4();
    sub_10000CD8C((unint64_t *)&qword_10094C0F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095A238);
  }
  return result;
}

uint64_t sub_1003A4B30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActivitySharingFriendListItemView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003A4B9C()
{
  uint64_t v1 = *(void *)(type metadata accessor for ActivitySharingFriendListItemView() - 8);
  return sub_1003A42D0((void **)(v0
                               + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))));
}

unint64_t sub_1003A4BF0()
{
  unint64_t result = qword_10095A240;
  if (!qword_10095A240)
  {
    sub_1000A1370(&qword_10095A208);
    sub_1000A1370(&qword_10095A1F8);
    sub_1003A4A80();
    swift_getOpaqueTypeConformance2();
    sub_10000CD8C((unint64_t *)&qword_10094C0F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095A240);
  }
  return result;
}

uint64_t sub_1003A4CE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t FIUIUnitManager.activeEnergyUnitIdentifier.getter()
{
  return sub_1003A4D78((SEL *)&selRef_userActiveEnergyBurnedUnit);
}

uint64_t FIUIUnitManager.basalEnergyUnitIdentifier.getter()
{
  return sub_1003A4D78((SEL *)&selRef_userBasalEnergyBurnedUnit);
}

uint64_t FIUIUnitManager.cyclingDistanceUnitIdentifier.getter()
{
  return sub_1003A4D78((SEL *)&selRef_userDistanceCyclingHKUnit);
}

uint64_t FIUIUnitManager.lapLengthUnitIdentifier.getter()
{
  return sub_1003A4D78((SEL *)&selRef_userLapLengthHKUnit);
}

uint64_t FIUIUnitManager.walkRunDistanceUnitIdentifier.getter()
{
  return sub_1003A4D78((SEL *)&selRef_userDistanceWalkingRunningHKUnit);
}

uint64_t sub_1003A4D78(SEL *a1)
{
  id v2 = [v1 *a1];
  id v3 = [v2 unitString];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

uint64_t sub_1003A4DEC(uint64_t a1, uint64_t a2)
{
  return sub_1003A4E1C(a1, a2, (SEL *)&selRef_userActiveEnergyBurnedUnit);
}

uint64_t sub_1003A4DF8(uint64_t a1, uint64_t a2)
{
  return sub_1003A4E1C(a1, a2, (SEL *)&selRef_userBasalEnergyBurnedUnit);
}

uint64_t sub_1003A4E04(uint64_t a1, uint64_t a2)
{
  return sub_1003A4E1C(a1, a2, (SEL *)&selRef_userDistanceCyclingHKUnit);
}

uint64_t sub_1003A4E10(uint64_t a1, uint64_t a2)
{
  return sub_1003A4E1C(a1, a2, (SEL *)&selRef_userDistanceWalkingRunningHKUnit);
}

uint64_t sub_1003A4E1C(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = [v3 *a3];
  id v5 = [v4 unitString];

  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v6;
}

uint64_t destroy for ActivitySharingSectionHeaderView(id *a1)
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for ActivitySharingSectionHeaderView(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  id v5 = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ActivitySharingSectionHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for ActivitySharingSectionHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for ActivitySharingSectionHeaderView()
{
  return &type metadata for ActivitySharingSectionHeaderView;
}

uint64_t sub_1003A5028()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003A5044@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v60 = type metadata accessor for MenuPickerStyle();
  uint64_t v59 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v58 = (char *)v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1000AFA94(&qword_10095A2C0);
  uint64_t v56 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  char v55 = (char *)v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1000AFA94(&qword_10095A2C8);
  uint64_t v63 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  char v54 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_10095A2D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v61 = (uint64_t)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v64 = (char *)v51 - v9;
  uint64_t v53 = (void **)a1;
  int v10 = *(unsigned __int8 *)(a1 + 8);
  uint64_t aBlock = sub_1004CE640();
  uint64_t v69 = v11;
  sub_1000A06D0();
  uint64_t v12 = Text.init<A>(_:)();
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  static Font.title2.getter();
  uint64_t v17 = Text.font(_:)();
  uint64_t v19 = v18;
  char v21 = v20;
  swift_release();
  sub_1000A06C0(v12, v14, v16);
  swift_bridgeObjectRelease();
  uint64_t v22 = Text.bold()();
  uint64_t v24 = v23;
  LOBYTE(v14) = v25 & 1;
  sub_1000A06C0(v17, v19, v21 & 1);
  swift_bridgeObjectRelease();
  static Color.white.getter();
  uint64_t v26 = Text.foregroundColor(_:)();
  uint64_t v28 = v27;
  LODWORD(v30) = v29;
  uint64_t v32 = v31;
  swift_release();
  sub_1000A06C0(v22, v24, v14);
  swift_bridgeObjectRelease();
  uint64_t v33 = 1;
  if (v10 == 2)
  {
    int v52 = (int)v30;
    uint64_t v34 = v53;
    char v35 = *v53;
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = _swiftEmptyArrayStorage;
    uint64_t v72 = sub_1003A5B18;
    uint64_t v73 = v36;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v69 = 1107296256;
    char v70 = sub_1004C489C;
    uint64_t v71 = &unk_1008C47E8;
    uint64_t v37 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v35 enumerateValidDisplayModesForFilter:0 usingBlock:v37];
    _Block_release(v37);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_release();
    v51[3] = LocalizedStringKey.init(stringLiteral:)();
    v51[2] = v38;
    v51[1] = v39;
    long long v66 = *((_OWORD *)v34 + 1);
    uint64_t v67 = v34[4];
    sub_1000AFA94(&qword_100953950);
    uint64_t v40 = Binding.projectedValue.getter();
    __chkstk_darwin(v40);
    type metadata accessor for ASFriendListDisplayMode(0);
    sub_1000AFA94(&qword_10095A2E0);
    sub_1003A5CDC(&qword_10095A2E8);
    sub_1003A5B28();
    uint64_t v30 = v55;
    Picker<>.init(_:selection:content:)();
    swift_bridgeObjectRelease();
    uint64_t v41 = v58;
    MenuPickerStyle.init()();
    sub_1000A132C(&qword_10095A338, &qword_10095A2C0);
    uint64_t v42 = v54;
    uint64_t v43 = v57;
    uint64_t v44 = v60;
    View.pickerStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v41, v44);
    uint64_t v45 = v30;
    LOBYTE(v30) = v52;
    (*(void (**)(char *, uint64_t))(v56 + 8))(v45, v43);
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v64, v42, v65);
    uint64_t v33 = 0;
  }
  uint64_t v46 = (uint64_t)v64;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56))(v64, v33, 1, v65);
  uint64_t v47 = v61;
  sub_1000AEF2C(v46, v61, &qword_10095A2D0);
  uint64_t v48 = v62;
  *uint64_t v62 = v26;
  v48[1] = v28;
  *((unsigned char *)v48 + 16) = v30 & 1;
  v48[3] = v32;
  v48[4] = 0;
  *((unsigned char *)v48 + 40) = 1;
  uint64_t v49 = sub_1000AFA94(&qword_10095A2D8);
  sub_1000AEF2C(v47, (uint64_t)v48 + *(int *)(v49 + 64), &qword_10095A2D0);
  sub_1000A1750(v26, v28, v30 & 1);
  swift_bridgeObjectRetain();
  sub_10008DB18(v46, &qword_10095A2D0);
  sub_10008DB18(v47, &qword_10095A2D0);
  sub_1000A06C0(v26, v28, v30 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003A5788()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_1003A587C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  id v4 = (id)ASDisplayModeToString();
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  sub_1000A06D0();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v6;
  *(unsigned char *)(a2 + 16) = v7 & 1;
  *(void *)(a2 + 24) = v8;
  *(void *)(a2 + 32) = v3;
  *(unsigned char *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = v3;
  *(_WORD *)(a2 + 56) = 0;
  return result;
}

uint64_t sub_1003A5914@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000AFA94(&qword_10094DDC8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_10095A2A8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = *(_OWORD *)(v1 + 16);
  v16[0] = *(_OWORD *)v1;
  v16[1] = v9;
  uint64_t v17 = *(void *)(v1 + 32);
  *(void *)uint64_t v8 = static VerticalAlignment.center.getter();
  *((void *)v8 + 1) = 0;
  v8[16] = 1;
  uint64_t v10 = sub_1000AFA94(&qword_10095A2B0);
  sub_1003A5044((uint64_t)v16, (uint64_t *)&v8[*(int *)(v10 + 44)]);
  uint64_t v11 = type metadata accessor for Text.Case();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 1, v11);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v13 = (uint64_t *)(a1 + *(int *)(sub_1000AFA94(&qword_10095A2B8) + 36));
  uint64_t v14 = sub_1000AFA94(&qword_10094DDC0);
  sub_1000AEF2C((uint64_t)v5, (uint64_t)v13 + *(int *)(v14 + 28), &qword_10094DDC8);
  uint64_t *v13 = KeyPath;
  sub_1000AEF2C((uint64_t)v8, a1, &qword_10095A2A8);
  sub_10008DB18((uint64_t)v5, &qword_10094DDC8);
  return sub_10008DB18((uint64_t)v8, &qword_10095A2A8);
}

uint64_t sub_1003A5AE0()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1003A5B18(uint64_t a1)
{
  return sub_1004C47C8(a1, v1);
}

uint64_t sub_1003A5B20()
{
  return sub_1003A5788();
}

unint64_t sub_1003A5B28()
{
  unint64_t result = qword_10095A2F0;
  if (!qword_10095A2F0)
  {
    sub_1000A1370(&qword_10095A2E0);
    sub_1003A5B9C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095A2F0);
  }
  return result;
}

unint64_t sub_1003A5B9C()
{
  unint64_t result = qword_10095A2F8;
  if (!qword_10095A2F8)
  {
    sub_1000A1370(&qword_10095A300);
    sub_1003A5C3C();
    sub_1000A132C(&qword_10095A328, &qword_10095A330);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095A2F8);
  }
  return result;
}

unint64_t sub_1003A5C3C()
{
  unint64_t result = qword_10095A308;
  if (!qword_10095A308)
  {
    sub_1000A1370(&qword_10095A310);
    sub_1000A132C(&qword_10095A318, &qword_10095A320);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095A308);
  }
  return result;
}

uint64_t sub_1003A5CDC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ASFriendListDisplayMode(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1003A5D24()
{
  unint64_t result = qword_10095A358;
  if (!qword_10095A358)
  {
    sub_1000A1370(&qword_10095A2B8);
    sub_1000A132C(&qword_10095A360, &qword_10095A2A8);
    sub_1000A132C(&qword_10095A368, &qword_10094DDC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095A358);
  }
  return result;
}

id sub_1003A5DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR___CHWorkoutDetailHeartRateTableViewCell_heartRateController] = 0;
  *(void *)&v3[OBJC_IVAR___CHWorkoutDetailHeartRateTableViewCell_cellPadding] = 0x4028000000000000;
  *(void *)&v3[OBJC_IVAR___CHWorkoutDetailHeartRateTableViewCell_cellInset] = 0x4030000000000000;
  if (a3)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v15.receiver = v3;
  v15.super_class = (Class)type metadata accessor for WorkoutDetailHeartRateTableViewCell();
  id v6 = [super initWithStyle:a1 reuseIdentifier:v5];

  uint64_t v7 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100751040;
  id v9 = v6;
  id v10 = [v9 contentView];
  id v11 = [v10 heightAnchor];

  id v12 = [v11 constraintGreaterThanOrEqualToConstant:132.0];
  *(void *)(v8 + 32) = v12;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v7 activateConstraints:isa];

  return v9;
}

id sub_1003A6094(void *a1, void *a2, void *a3, void *a4, char *a5, char *a6, void *a7)
{
  id v125 = a7;
  uint64_t v137 = a5;
  uint64_t v138 = a6;
  id v133 = a3;
  id v134 = a4;
  id v141 = a1;
  uint64_t v126 = type metadata accessor for WorkoutDetailChartView();
  __chkstk_darwin(v126);
  uint64_t v127 = (uint64_t)&v124 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v11 = (char *)&v124 - v10;
  uint64_t v12 = sub_1000AFA94(&qword_10094D448);
  __chkstk_darwin(v12 - 8);
  char v139 = (char *)&v124 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for WorkoutChartViewModel(0);
  uint64_t v135 = *(void *)(v14 - 8);
  uint64_t v136 = v14;
  __chkstk_darwin(v14);
  uint64_t v130 = (uint64_t)&v124 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v124 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  char v21 = (char *)&v124 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v124 - v23;
  uint64_t v25 = type metadata accessor for Date();
  uint64_t v26 = *(char **)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v132 = (char *)&v124 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v140 = (char *)&v124 - v29;
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v124 - v31;
  __n128 v34 = __chkstk_darwin(v33);
  id v142 = a2;
  char v143 = (char *)&v124 - v35;
  uint64_t v129 = v11;
  id v131 = v32;
  if (a2)
  {
    id v36 = [a2 startDate:v34.n128_f64[0]];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v37 = (void (*)(char *, char *, uint64_t))*((void *)v26 + 4);
    v37(v24, v32, v25);
    uint64_t v38 = (void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))*((void *)v26 + 7);
    ((void (*)(char *, void, uint64_t, uint64_t))v38)(v24, 0, 1, v25);
    uint64_t v39 = v26;
    if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v26 + 6))(v24, 1, v25) != 1)
    {
      uint64_t v40 = (void *)v25;
      v37(v143, v24, v25);
      id v42 = v142;
      uint64_t v43 = &selRef_configurePlayer;
      goto LABEL_8;
    }
    uint64_t v40 = (void *)v25;
  }
  else
  {
    uint64_t v39 = v26;
    uint64_t v38 = (void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))*((void *)v26 + 7);
    uint64_t v40 = (void *)v25;
    v38(v24, 1, 1, v25, v34);
  }
  id v41 = [v141 startDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10008DB18((uint64_t)v24, (uint64_t *)&unk_10095B890);
  id v42 = v142;
  uint64_t v43 = &selRef_configurePlayer;
  if (!v142)
  {
    uint64_t v44 = v40;
    ((void (*)(char *, uint64_t, uint64_t, void *))v38)(v21, 1, 1, v40);
    uint64_t v45 = v39;
    id v46 = v141;
LABEL_12:
    id v50 = v46;
    id v51 = [v46 v43[222]];
    int v52 = v140;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v53 = (uint64_t)v21;
    char v54 = v50;
    sub_10008DB18(v53, (uint64_t *)&unk_10095B890);
    goto LABEL_14;
  }
LABEL_8:
  id v47 = [v42 v43[222]];
  if (v47)
  {
    uint64_t v48 = v47;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v49 = 0;
  }
  else
  {
    uint64_t v49 = 1;
  }
  id v46 = v141;
  uint64_t v44 = v40;
  ((void (*)(char *, uint64_t, uint64_t, void *))v38)(v18, v49, 1, v40);
  uint64_t v45 = v39;
  sub_1000CBFEC((uint64_t)v18, (uint64_t)v21);
  if ((*((unsigned int (**)(char *, uint64_t, void *))v39 + 6))(v21, 1, v40) == 1) {
    goto LABEL_12;
  }
  int v52 = v140;
  (*((void (**)(char *, char *, void *))v39 + 4))(v140, v21, v40);
  char v54 = v46;
LABEL_14:
  char v55 = (void (*)(char *, char *, void *))*((void *)v45 + 2);
  uint64_t v56 = (uint64_t)v131;
  uint64_t v57 = v143;
  v55(v131, v143, v44);
  uint64_t v58 = (uint64_t)v132;
  v55(v132, v52, v44);
  id v59 = [self mainScreen];
  [v59 bounds];
  CGFloat v61 = v60;
  CGFloat v63 = v62;
  CGFloat v65 = v64;
  CGFloat v67 = v66;

  v145.origin.CGFloat x = v61;
  v145.origin.CGFloat y = v63;
  v145.size.CGFloat width = v65;
  v145.size.CGFloat height = v67;
  *(double *)&uint64_t v68 = CGRectGetWidth(v145) + -56.0;
  type metadata accessor for WorkoutChartProperties();
  swift_allocObject();
  uint64_t v69 = (char *)sub_10033A6D0(v56, v58, 0, 1, v68, 0, 1, 10.0, 90.0);
  type metadata accessor for WorkoutDetailHeartRateDataStore();
  swift_allocObject();
  id v70 = v54;
  id v71 = v142;
  id v72 = v142;
  id v73 = v133;
  id v74 = v134;
  uint64_t v75 = sub_1001A54F0(v70, v71, v73, v74);
  uint64_t v76 = v57;
  uint64_t v77 = v75;

  sub_1001A2590(v137, v138);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  uint64_t v78 = (uint64_t)v139;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v135 + 48))(v78, 1, v136) == 1)
  {
    swift_release();
    swift_release();
    uint64_t v79 = (void (*)(char *, void *))*((void *)v45 + 1);
    v79(v52, v44);
    v79(v76, v44);
    return (id)sub_10008DB18(v78, &qword_10094D448);
  }
  id v142 = v77;
  uint64_t v81 = v130;
  sub_1001BB6FC(v78, v130);
  uint64_t v82 = (uint64_t)v129;
  sub_1001BB760(v81, (uint64_t)v129, type metadata accessor for WorkoutChartViewModel);
  *(void *)(v82 + *(int *)(v126 + 20)) = v69;
  uint64_t v83 = OBJC_IVAR___CHWorkoutDetailHeartRateTableViewCell_heartRateController;
  uint64_t v84 = v128;
  uint64_t v85 = *(void **)&v128[OBJC_IVAR___CHWorkoutDetailHeartRateTableViewCell_heartRateController];
  if (v85)
  {
    sub_1001BB760(v82, v127, (uint64_t (*)(void))type metadata accessor for WorkoutDetailChartView);
    swift_retain();
    id v86 = v85;
    dispatch thunk of UIHostingController.rootView.setter();
    id result = [v86 view];
    if (result)
    {
      uint64_t v87 = result;
      [result layoutIfNeeded];
      swift_release();
      swift_release();

      sub_1003A7054(v82, (uint64_t (*)(void))type metadata accessor for WorkoutDetailChartView);
      sub_1003A7054(v81, type metadata accessor for WorkoutChartViewModel);
      uint64_t v88 = (void (*)(char *, void *))*((void *)v45 + 1);
      v88(v52, v44);
      return (id)((uint64_t (*)(char *, void *))v88)(v143, v44);
    }
    __break(1u);
    goto LABEL_29;
  }
  id v141 = v44;
  sub_1001BB760(v82, v127, (uint64_t (*)(void))type metadata accessor for WorkoutDetailChartView);
  id v89 = objc_allocWithZone((Class)sub_1000AFA94(&qword_10095A3B0));
  swift_retain();
  uint64_t v90 = (void *)UIHostingController.init(rootView:)();
  uint64_t v91 = *(void **)&v84[v83];
  *(void *)&v84[v83] = v90;
  id v92 = v90;

  id result = [v92 view];
  if (!result)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v93 = result;
  char v139 = v45;
  [result setTranslatesAutoresizingMaskIntoConstraints:0];

  id result = [v92 view];
  if (!result)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  unint64_t v94 = result;
  id v95 = [self clearColor];
  [v94 setBackgroundColor:v95];

  id v96 = [v84 contentView];
  id result = [v92 view];
  if (!result)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v97 = result;
  uint64_t v138 = v69;
  [v96 addSubview:result];

  [v125 addChildViewController:v92];
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v98 = swift_allocObject();
  *(_OWORD *)(v98 + 16) = xmmword_100751160;
  id result = [v92 view];
  if (!result)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v99 = result;
  id v100 = [result topAnchor];

  id v101 = [v84 contentView];
  id v102 = [v101 topAnchor];

  id v103 = [v100 constraintEqualToAnchor:v102 constant:12.0];
  *(void *)(v98 + 32) = v103;
  id result = [v92 view];
  if (!result)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v104 = result;
  id v105 = [result leadingAnchor];

  id v106 = [v84 contentView];
  id v107 = [v106 leadingAnchor];

  id v108 = [v105 constraintEqualToAnchor:v107 constant:12.0];
  *(void *)(v98 + 40) = v108;
  id result = [v92 view];
  if (!result)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  Class v109 = result;
  id v110 = [result trailingAnchor];

  id v111 = [v84 contentView];
  id v112 = [v111 trailingAnchor];

  id v113 = [v110 constraintEqualToAnchor:v112 constant:-12.0];
  *(void *)(v98 + 48) = v113;
  id result = [v92 view];
  if (!result)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v114 = result;
  uint64_t v115 = self;
  id v116 = [v114 bottomAnchor];

  id v117 = [v84 contentView];
  id v118 = [v117 bottomAnchor];

  id v119 = [v116 constraintEqualToAnchor:v118 constant:-12.0];
  *(void *)(v98 + 56) = v119;
  uint64_t v144 = v98;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v115 activateConstraints:isa];

  [v92 didMoveToParentViewController:v125];
  id result = [v92 view];
  if (result)
  {
    char v121 = result;
    [result layoutIfNeeded];
    swift_release();
    swift_release();

    sub_1003A7054((uint64_t)v129, (uint64_t (*)(void))type metadata accessor for WorkoutDetailChartView);
    sub_1003A7054(v130, type metadata accessor for WorkoutChartViewModel);
    id v122 = (void (*)(char *, id))*((void *)v139 + 1);
    id v123 = v141;
    v122(v140, v141);
    return (id)((uint64_t (*)(char *, id))v122)(v143, v123);
  }
LABEL_36:
  __break(1u);
  return result;
}

id sub_1003A6FE4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailHeartRateTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutDetailHeartRateTableViewCell()
{
  return self;
}

uint64_t sub_1003A7054(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1003A70B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, unsigned char *a9@<X8>, unsigned __int8 a10, unsigned __int8 a11)
{
  uint64_t v100 = a5;
  int v96 = a8;
  uint64_t v98 = a4;
  uint64_t v99 = a7;
  uint64_t v97 = a6;
  uint64_t v103 = a3;
  uint64_t v14 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for AttributedString();
  uint64_t v102 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v93 - v21;
  uint64_t v23 = *(void *)(a2 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsByTrendType90);
  if (!*(void *)(v23 + 16)) {
    goto LABEL_9;
  }
  unint64_t v24 = sub_1000D5C14(a1);
  if ((v25 & 1) == 0) {
    goto LABEL_9;
  }
  unint64_t v94 = a9;
  uint64_t v95 = a1;
  uint64_t v26 = *(void *)(v23 + 56) + 200 * v24;
  long long v27 = *(_OWORD *)(v26 + 48);
  long long v28 = *(_OWORD *)(v26 + 64);
  long long v29 = *(_OWORD *)(v26 + 32);
  v117[1] = *(_OWORD *)(v26 + 16);
  v117[2] = v29;
  v117[0] = *(_OWORD *)v26;
  v117[3] = v27;
  v117[4] = v28;
  long long v30 = *(_OWORD *)(v26 + 80);
  long long v31 = *(_OWORD *)(v26 + 96);
  long long v32 = *(_OWORD *)(v26 + 128);
  v117[7] = *(_OWORD *)(v26 + 112);
  v117[8] = v32;
  v117[5] = v30;
  v117[6] = v31;
  long long v33 = *(_OWORD *)(v26 + 144);
  long long v34 = *(_OWORD *)(v26 + 160);
  long long v35 = *(_OWORD *)(v26 + 176);
  char v118 = *(unsigned char *)(v26 + 192);
  v117[10] = v34;
  v117[11] = v35;
  v117[9] = v33;
  uint64_t v36 = *(void *)(a2 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsByTrendType365);
  if (!*(void *)(v36 + 16)) {
    goto LABEL_9;
  }
  unint64_t v37 = sub_1000D5C14(v95);
  if ((v38 & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v39 = *(void *)(v36 + 56) + 200 * v37;
  long long v104 = *(_OWORD *)v39;
  long long v40 = *(_OWORD *)(v39 + 48);
  long long v41 = *(_OWORD *)(v39 + 64);
  long long v42 = *(_OWORD *)(v39 + 32);
  long long v105 = *(_OWORD *)(v39 + 16);
  long long v106 = v42;
  long long v107 = v40;
  long long v108 = v41;
  long long v43 = *(_OWORD *)(v39 + 80);
  long long v44 = *(_OWORD *)(v39 + 96);
  long long v45 = *(_OWORD *)(v39 + 128);
  long long v111 = *(_OWORD *)(v39 + 112);
  long long v112 = v45;
  long long v109 = v43;
  long long v110 = v44;
  long long v46 = *(_OWORD *)(v39 + 144);
  long long v47 = *(_OWORD *)(v39 + 160);
  long long v48 = *(_OWORD *)(v39 + 176);
  char v116 = *(unsigned char *)(v39 + 192);
  long long v114 = v47;
  long long v115 = v48;
  long long v113 = v46;
  uint64_t v49 = (uint64_t *)(a2 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_mannKendallTestByTrendType90);
  swift_beginAccess();
  uint64_t v50 = *v49;
  if (!*(void *)(v50 + 16) || (v51 = v95, unint64_t v52 = sub_1000D5C14(v95), (v53 & 1) == 0))
  {
LABEL_9:
    sub_1000D8248();
    swift_allocError();
    *CGFloat v61 = 1;
    return swift_willThrow();
  }
  uint64_t v54 = *(void *)(v50 + 56) + 40 * v52;
  double v55 = *(double *)(v54 + 8);
  double v56 = *(double *)(v54 + 32);
  double v57 = *(double *)v117;
  sub_1000B7C20((uint64_t)v117);
  sub_1000B7C20((uint64_t)&v104);
  id v58 = sub_10008CC68(byte_1007616C2[v51]);
  id v59 = [self quantityWithUnit:v58 doubleValue:v57];

  uint64_t v60 = v101;
  sub_10067521C(v59, v95, a11, (uint64_t)v16);
  if (v60)
  {
    swift_errorRelease();

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v102 + 56))(v16, 1, 1, v17);
LABEL_12:
    sub_1000D7E40((uint64_t)&v104);
    sub_1000D7E40((uint64_t)v117);
    sub_1003A77A0((uint64_t)v16);
    sub_10032B234();
    swift_allocError();
    *double v64 = 0;
    return swift_willThrow();
  }

  uint64_t v63 = v102;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v16, 0, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v16, 1, v17) == 1) {
    goto LABEL_12;
  }
  LODWORD(v101) = a10;
  double v66 = *(void (**)(char *, char *, uint64_t))(v63 + 32);
  uint64_t v65 = v63 + 32;
  v66(v22, v16, v17);
  id v67 = [*(id *)(a2 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_pregnancyStateProvider) currentModel];
  uint64_t v93 = v66;
  if (v67)
  {
    uint64_t v68 = v67;
    id v69 = [v67 state];

    BOOL v70 = v69 == (id)1;
  }
  else
  {
    BOOL v70 = 0;
  }
  uint64_t v71 = v99;
  uint64_t v72 = v97;
  if (v96)
  {
    uint64_t v72 = 0;
    uint64_t v71 = 0;
  }
  v120[0] = v98;
  v120[1] = v100;
  _OWORD v120[2] = v71;
  char v121 = v96 & 1;
  uint64_t v122 = v72;
  char v123 = v96 & 1;
  char v124 = v101 & 1;
  BOOL v125 = v70;
  id v73 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_unitManager);
  swift_bridgeObjectRetain();
  char v74 = v95;
  double v75 = sub_1005F2D50(v73, v95, v57);
  BOOL v76 = sub_1005F2D50(v73, v74, *(double *)&v104) > v75;
  sub_1000D7E40((uint64_t)v117);
  long long v77 = v105;
  long long v78 = v106;
  long long v79 = v107;
  uint64_t v80 = v108;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000D7E40((uint64_t)&v104);
  if (v56 >= 0.9)
  {
    if (v55 > 0.0)
    {
      char v81 = 0;
      goto LABEL_24;
    }
    if (v55 < 0.0)
    {
      char v81 = 2;
      goto LABEL_24;
    }
  }
  char v81 = 1;
LABEL_24:
  v126[0] = v77;
  v126[1] = v78;
  v126[2] = v79;
  uint64_t v127 = v80;
  char v128 = 2 * v76;
  char v129 = v81;
  char v82 = v95;
  char v130 = v95;
  uint64_t v131 = 0x3FF199999999999ALL;
  uint64_t v132 = 0;
  char v133 = 1;
  uint64_t v134 = 0;
  char v135 = 1;
  sub_1001EF0DC((uint64_t)v120, (uint64_t)v126, *(id *)(v103 + OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter), (uint64_t)v119);
  uint64_t v83 = sub_1000AAF10();
  uint64_t v100 = v84;
  uint64_t v101 = v83;
  uint64_t v103 = v65;
  uint64_t v85 = v102;
  (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v20, v22, v17);
  uint64_t v86 = sub_1001E5BC4(0, 0);
  uint64_t v99 = v87;
  sub_1001EF728((uint64_t)v119);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v22, v17);
  uint64_t v88 = v94;
  *unint64_t v94 = v82;
  v88[1] = 2 * v76;
  uint64_t v89 = v100;
  *((void *)v88 + 1) = v101;
  *((void *)v88 + 2) = v89;
  uint64_t v90 = type metadata accessor for TrendListMetric();
  uint64_t result = ((uint64_t (*)(unsigned char *, char *, uint64_t))v93)(&v88[*(int *)(v90 + 28)], v20, v17);
  uint64_t v91 = (uint64_t *)&v88[*(int *)(v90 + 32)];
  uint64_t v92 = v99;
  *uint64_t v91 = v86;
  v91[1] = v92;
  return result;
}

uint64_t sub_1003A77A0(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1003A7800(uint64_t a1)
{
  uint64_t v1 = (char *)__chkstk_darwin(a1);
  char v3 = v2;
  char v5 = v4;
  uint64_t v7 = v6;
  unint64_t v9 = v8;
  id v11 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = v1;
  uint64_t v15 = *v1;
  uint64_t v16 = v1[1];
  sub_100681790(*v1, v16, v2);
  uint64_t v17 = *(void *)(v13 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsByTrendType90);
  if (*(void *)(v17 + 16))
  {
    unint64_t v18 = sub_1000D5C14(v15);
    if (v19)
    {
      uint64_t v20 = *(void *)(v17 + 56) + 200 * v18;
      long long v21 = *(_OWORD *)(v20 + 48);
      long long v22 = *(_OWORD *)(v20 + 64);
      long long v23 = *(_OWORD *)(v20 + 16);
      v118[2] = *(_OWORD *)(v20 + 32);
      v118[1] = v23;
      long long v24 = *(_OWORD *)v20;
      v118[4] = v22;
      v118[0] = v24;
      v118[3] = v21;
      long long v25 = *(_OWORD *)(v20 + 80);
      long long v26 = *(_OWORD *)(v20 + 96);
      long long v27 = *(_OWORD *)(v20 + 112);
      v118[8] = *(_OWORD *)(v20 + 128);
      v118[7] = v27;
      v118[6] = v26;
      v118[5] = v25;
      long long v28 = *(_OWORD *)(v20 + 144);
      long long v29 = *(_OWORD *)(v20 + 160);
      long long v30 = *(_OWORD *)(v20 + 176);
      char v119 = *(unsigned char *)(v20 + 192);
      _OWORD v118[11] = v30;
      v118[10] = v29;
      v118[9] = v28;
      uint64_t v31 = *(void *)(v13 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsByTrendType365);
      if (*(void *)(v31 + 16))
      {
        unint64_t v32 = sub_1000D5C14(v15);
        if (v33)
        {
          uint64_t v34 = *(void *)(v31 + 56) + 200 * v32;
          v120[0] = *(_OWORD *)v34;
          long long v35 = *(_OWORD *)(v34 + 48);
          long long v36 = *(_OWORD *)(v34 + 64);
          long long v37 = *(_OWORD *)(v34 + 32);
          v120[1] = *(_OWORD *)(v34 + 16);
          _OWORD v120[2] = v37;
          v120[4] = v36;
          void v120[3] = v35;
          long long v38 = *(_OWORD *)(v34 + 80);
          long long v39 = *(_OWORD *)(v34 + 96);
          long long v40 = *(_OWORD *)(v34 + 112);
          v120[8] = *(_OWORD *)(v34 + 128);
          v120[7] = v40;
          v120[6] = v39;
          v120[5] = v38;
          long long v41 = *(_OWORD *)(v34 + 144);
          long long v42 = *(_OWORD *)(v34 + 160);
          long long v43 = *(_OWORD *)(v34 + 176);
          char v121 = *(unsigned char *)(v34 + 192);
          v120[11] = v43;
          v120[10] = v42;
          v120[9] = v41;
          if (v16 == 1)
          {
            uint64_t v98 = 0;
            uint64_t v96 = 0;
            uint64_t v101 = 0;
            uint64_t v102 = 0;
            uint64_t v103 = 0;
            uint64_t v104 = 0;
            uint64_t v44 = 0;
            uint64_t v45 = 0;
            uint64_t v46 = 0;
            uint64_t v47 = 0;
            uint64_t v48 = 0;
            uint64_t v49 = 0;
            uint64_t v50 = 0;
            uint64_t v51 = 0;
            uint64_t v52 = 0;
            uint64_t v53 = 0;
            char v54 = 1;
            unsigned __int8 v97 = 1;
            unsigned __int8 v99 = 1;
            char v100 = 1;
LABEL_7:
            char v94 = v5 & 1;
            v113[0] = v44;
            v113[1] = v45;
            v113[2] = v46;
            _OWORD v113[3] = v47;
            v113[4] = v48;
            char v114 = v54;
            v111[0] = v49;
            v111[1] = v50;
            v111[2] = v51;
            v111[3] = v52;
            v111[4] = v53;
            BOOL v112 = v16 == 1;
            uint64_t v55 = *(void *)(v13 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_pairedWatchManager);
            double v56 = (uint64_t *)&v14[*(int *)(type metadata accessor for TrendListMetric() + 32)];
            uint64_t v58 = *v56;
            uint64_t v57 = v56[1];
            objc_allocWithZone((Class)type metadata accessor for TrendDetailViewController());
            sub_1000B7C20((uint64_t)v118);
            sub_1000B7C20((uint64_t)v120);
            id v59 = v11;
            swift_retain();
            swift_bridgeObjectRetain();
            return sub_10033735C(v15, v16, (uint64_t)v118, (uint64_t)v120, (uint64_t)v111, v104, v103, v16 == 1, (uint64_t)v113, v102, v101, v100, v59, v55, v96, v99, v98, v97, v58,
                     v57,
                     v3 & 1,
                     v9,
                     v7,
                     v94);
          }
          CGFloat v61 = (uint64_t *)(v13 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_mannKendallTestByTrendType90);
          swift_beginAccess();
          uint64_t v62 = *v61;
          if (*(void *)(v62 + 16) && (unint64_t v63 = sub_1000D5C14(v15), (v64 & 1) != 0))
          {
            char v105 = 0;
            uint64_t v65 = (uint64_t *)(*(void *)(v62 + 56) + 40 * v63);
            uint64_t v93 = v65[1];
            uint64_t v95 = *v65;
            uint64_t v91 = v65[3];
            uint64_t v92 = v65[2];
            uint64_t v90 = v65[4];
          }
          else
          {
            uint64_t v93 = 0;
            uint64_t v95 = 0;
            uint64_t v91 = 0;
            uint64_t v92 = 0;
            uint64_t v90 = 0;
            char v105 = 1;
          }
          double v66 = (uint64_t *)(v13 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_fitsByTrendType90);
          swift_beginAccess();
          uint64_t v67 = *v66;
          if (*(void *)(v67 + 16))
          {
            unint64_t v68 = sub_1000D5C14(v15);
            if ((v69 & 1) != 0 && (v105 & 1) == 0)
            {
              BOOL v70 = (uint64_t *)(*(void *)(v67 + 56) + 16 * v68);
              uint64_t v103 = v70[1];
              uint64_t v104 = *v70;
              uint64_t v71 = (uint64_t *)(v13 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_fitsByTrendType365);
              swift_beginAccess();
              uint64_t v72 = *v71;
              if (*(void *)(v72 + 16) && (unint64_t v73 = sub_1000D5C14(v15), (v74 & 1) != 0))
              {
                char v100 = 0;
                double v75 = (uint64_t *)(*(void *)(v72 + 56) + 16 * v73);
                uint64_t v101 = v75[1];
                uint64_t v102 = *v75;
              }
              else
              {
                uint64_t v101 = 0;
                uint64_t v102 = 0;
                char v100 = 1;
              }
              BOOL v76 = (uint64_t *)(v13 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_mannKendallTestByTrendType365);
              swift_beginAccess();
              uint64_t v77 = *v76;
              if (*(void *)(v77 + 16) && (unint64_t v78 = sub_1000D5C14(v15), (v79 & 1) != 0))
              {
                char v84 = 0;
                uint64_t v80 = (uint64_t *)(*(void *)(v77 + 56) + 40 * v78);
                uint64_t v88 = v80[2];
                uint64_t v89 = *v80;
                uint64_t v86 = v80[1];
                uint64_t v87 = v80[3];
                uint64_t v85 = v80[4];
              }
              else
              {
                uint64_t v88 = 0;
                uint64_t v89 = 0;
                uint64_t v86 = 0;
                uint64_t v87 = 0;
                uint64_t v85 = 0;
                char v84 = 1;
              }
              sub_1000D8EAC(v13 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsCompilation365, (uint64_t)v111);
              sub_1000D8EAC((uint64_t)v111, (uint64_t)v113);
              if (sub_100088F34((uint64_t)v113) == 1)
              {
                uint64_t v81 = 0;
                char v82 = 1;
              }
              else
              {
                char v82 = 1;
                uint64_t v81 = 0;
                switch(v15)
                {
                  case 1:
                    char v82 = 0;
                    uint64_t v81 = v115;
                    break;
                  case 2:
                  case 3:
                  case 4:
                  case 6:
                  case 7:
                  case 8:
                    break;
                  case 5:
                    char v82 = 0;
                    uint64_t v81 = v116;
                    break;
                  default:
                    char v82 = 0;
                    uint64_t v81 = v117;
                    break;
                }
              }
              unsigned __int8 v99 = v82;
              sub_1000D8EAC(v13 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsCompilation90, (uint64_t)v106);
              sub_1000D8EAC((uint64_t)v106, (uint64_t)v107);
              uint64_t v96 = v81;
              if (sub_100088F34((uint64_t)v107) == 1)
              {
                uint64_t v98 = 0;
                unsigned __int8 v97 = 1;
                uint64_t v50 = v93;
                uint64_t v49 = v95;
                uint64_t v52 = v91;
                uint64_t v51 = v92;
                uint64_t v44 = v89;
                uint64_t v53 = v90;
                uint64_t v45 = v86;
                uint64_t v47 = v87;
                uint64_t v46 = v88;
                uint64_t v48 = v85;
                char v54 = v84;
              }
              else
              {
                uint64_t v50 = v93;
                uint64_t v49 = v95;
                uint64_t v52 = v91;
                uint64_t v51 = v92;
                uint64_t v44 = v89;
                uint64_t v53 = v90;
                uint64_t v48 = v85;
                uint64_t v45 = v86;
                char v54 = v84;
                switch(v15)
                {
                  case 1:
                    unsigned __int8 v97 = 0;
                    uint64_t v83 = v108;
                    goto LABEL_38;
                  case 2:
                  case 3:
                  case 4:
                  case 6:
                  case 7:
                  case 8:
                    uint64_t v98 = 0;
                    unsigned __int8 v97 = 1;
                    goto LABEL_39;
                  case 5:
                    unsigned __int8 v97 = 0;
                    uint64_t v83 = v109;
                    goto LABEL_38;
                  default:
                    unsigned __int8 v97 = 0;
                    uint64_t v83 = v110;
LABEL_38:
                    uint64_t v98 = v83;
LABEL_39:
                    uint64_t v47 = v87;
                    uint64_t v46 = v88;
                    break;
                }
              }
              goto LABEL_7;
            }
          }
        }
      }
    }
  }
  return 0;
}

uint64_t sub_1003A7EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutEffort();
  char v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_1003A7F24(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WorkoutEffort();
  char v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1003A7F88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutEffort();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1003A7FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutEffort();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1003A8050(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutEffort();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1003A80B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutEffort();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1003A8118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003A812C);
}

uint64_t sub_1003A812C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutEffort();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1003A8198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003A81AC);
}

uint64_t sub_1003A81AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutEffort();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WorkoutItemEffortLabelView()
{
  uint64_t result = qword_10095A420;
  if (!qword_10095A420) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003A8268()
{
  uint64_t result = type metadata accessor for WorkoutEffort();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1003A82F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003A8310@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000AFA94(&qword_10095A458);
  __chkstk_darwin(v3 - 8);
  char v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_10095A460);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)char v5 = static VerticalAlignment.center.getter();
  *((void *)v5 + 1) = 0x4000000000000000;
  v5[16] = 0;
  uint64_t v10 = sub_1000AFA94(&qword_10095A468);
  sub_1003A8490(v1, (uint64_t)&v5[*(int *)(v10 + 44)]);
  WorkoutEffort.effortTextColor.getter();
  uint64_t v11 = Color.init(_:)();
  sub_1000AEF2C((uint64_t)v5, (uint64_t)v9, &qword_10095A458);
  *(void *)&v9[*(int *)(v7 + 44)] = v11;
  sub_10008DB18((uint64_t)v5, &qword_10095A458);
  uint64_t KeyPath = swift_getKeyPath();
  sub_1000AEF2C((uint64_t)v9, a1, &qword_10095A460);
  uint64_t v13 = a1 + *(int *)(sub_1000AFA94(&qword_10095A470) + 36);
  *(void *)uint64_t v13 = KeyPath;
  *(void *)(v13 + 8) = 1;
  *(unsigned char *)(v13 + 16) = 0;
  return sub_10008DB18((uint64_t)v9, &qword_10095A460);
}

uint64_t sub_1003A8490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_10094E320);
  __chkstk_darwin(v3 - 8);
  char v5 = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1000AFA94(&qword_100959E78);
  __chkstk_darwin(v47);
  uint64_t v7 = (void *)((char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for Image.Scale();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100959E80);
  __chkstk_darwin(v12);
  uint64_t v14 = (void *)((char *)v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_1000AFA94(&qword_100959E90);
  uint64_t v48 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000AFA94(&qword_10095A478);
  __chkstk_darwin(v18 - 8);
  uint64_t v50 = (uint64_t)v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v51 = (uint64_t)v45 - v21;
  WorkoutEffort.effortSymbolSystemName.getter();
  if (v22)
  {
    uint64_t v23 = Image.init(_internalSystemName:)();
    v45[1] = a1;
    uint64_t v46 = v15;
    uint64_t v24 = v23;
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for Image.Scale.small(_:), v8);
    uint64_t KeyPath = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)v7 + *(int *)(v47 + 28), v11, v8);
    *uint64_t v7 = KeyPath;
    sub_1000AEF2C((uint64_t)v7, (uint64_t)v14 + *(int *)(v12 + 36), &qword_100959E78);
    *uint64_t v14 = v24;
    swift_retain();
    sub_10008DB18((uint64_t)v7, &qword_100959E78);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    swift_release();
    WorkoutEffort.effortSymbolRenderingMode.getter();
    uint64_t v26 = type metadata accessor for SymbolRenderingMode();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v5, 0, 1, v26);
    uint64_t v27 = swift_getKeyPath();
    uint64_t v28 = v46;
    long long v29 = (uint64_t *)&v17[*(int *)(v46 + 36)];
    uint64_t v30 = sub_1000AFA94(&qword_10094E2F8);
    sub_1000AEF2C((uint64_t)v5, (uint64_t)v29 + *(int *)(v30 + 28), &qword_10094E320);
    *long long v29 = v27;
    sub_1000AEF2C((uint64_t)v14, (uint64_t)v17, &qword_100959E80);
    sub_10008DB18((uint64_t)v5, &qword_10094E320);
    sub_10008DB18((uint64_t)v14, &qword_100959E80);
    uint64_t v31 = v51;
    sub_1003A8B50((uint64_t)v17, v51);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v31, 0, 1, v28);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56))(v51, 1, 1, v15);
  }
  LODWORD(v48) = static Axis.Set.horizontal.getter();
  sub_1003A89FC((uint64_t)v52);
  uint64_t v32 = v52[0];
  uint64_t v33 = v52[1];
  char v34 = v53;
  uint64_t v36 = v54;
  uint64_t v35 = v55;
  uint64_t v37 = v56;
  uint64_t v38 = v57;
  uint64_t v39 = v58;
  uint64_t v40 = v50;
  sub_1000AEF2C(v51, v50, &qword_10095A478);
  uint64_t v41 = v40;
  uint64_t v42 = v49;
  sub_1000AEF2C(v41, v49, &qword_10095A478);
  uint64_t v43 = v42 + *(int *)(sub_1000AFA94(&qword_10095A480) + 48);
  *(unsigned char *)uint64_t v43 = v48;
  *(void *)(v43 + 8) = v32;
  *(void *)(v43 + 16) = v33;
  *(unsigned char *)(v43 + 24) = v34;
  *(void *)(v43 + 32) = v36;
  *(void *)(v43 + 40) = v35;
  *(void *)(v43 + 48) = v37;
  *(void *)(v43 + 56) = v38;
  *(void *)(v43 + 64) = v39;
  sub_1000A1750(v32, v33, v34);
  swift_bridgeObjectRetain();
  sub_1000A17A4(v35, v37, v38, v39);
  sub_10008DB18(v51, &qword_10095A478);
  sub_1000A06C0(v32, v33, v34);
  swift_bridgeObjectRelease();
  sub_1000A1760(v35, v37, v38, v39);
  return sub_10008DB18(v50, &qword_10095A478);
}

uint64_t sub_1003A89FC@<X0>(uint64_t a1@<X8>)
{
  WorkoutEffort.effortDescription.getter();
  sub_1000A06D0();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5;
  uint64_t v8 = v7;
  if (WorkoutEffort.needsToAddEffort.getter())
  {
    WorkoutEffort.addEffortDescriptionShortened.getter();
    uint64_t v9 = Text.init<A>(_:)();
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    uint64_t v15 = v14 & 1;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v11 = 0;
    uint64_t v15 = 0;
    uint64_t v13 = 0;
  }
  char v16 = v6 & 1;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v16;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = v15;
  *(void *)(a1 + 56) = v13;
  sub_1000A1750(v2, v4, v16);
  swift_bridgeObjectRetain();
  sub_1000A17A4(v9, v11, v15, v13);
  sub_1000A1760(v9, v11, v15, v13);
  sub_1000A06C0(v2, v4, v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003A8B50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100959E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1003A8BBC()
{
  unint64_t result = qword_10095A488;
  if (!qword_10095A488)
  {
    sub_1000A1370(&qword_10095A470);
    sub_1003A8C5C();
    sub_1000A132C(&qword_100952828, &qword_100952830);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095A488);
  }
  return result;
}

unint64_t sub_1003A8C5C()
{
  unint64_t result = qword_10095A490;
  if (!qword_10095A490)
  {
    sub_1000A1370(&qword_10095A460);
    sub_1000A132C(&qword_10095A498, &qword_10095A458);
    sub_1000A132C(&qword_10094E300, &qword_10094E308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095A490);
  }
  return result;
}

void *sub_1003A8D20(uint64_t a1)
{
  uint64_t v1 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  unint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v5) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v9);
    ++v7;
    if (!v10)
    {
      int64_t v7 = v9 + 1;
      if (v9 + 1 >= v5) {
        goto LABEL_23;
      }
      uint64_t v10 = *(void *)(v1 + 8 * v7);
      if (!v10)
      {
        int64_t v7 = v9 + 2;
        if (v9 + 2 >= v5) {
          goto LABEL_23;
        }
        uint64_t v10 = *(void *)(v1 + 8 * v7);
        if (!v10)
        {
          int64_t v7 = v9 + 3;
          if (v9 + 3 >= v5) {
            goto LABEL_23;
          }
          uint64_t v10 = *(void *)(v1 + 8 * v7);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v4 = (v10 - 1) & v10;
LABEL_5:
    uint64_t v8 = swift_bridgeObjectRetain();
    unint64_t result = (void *)sub_1001E44F8(v8);
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v5)
  {
LABEL_23:
    swift_release();
    return _swiftEmptyArrayStorage;
  }
  uint64_t v10 = *(void *)(v1 + 8 * v11);
  if (v10)
  {
    int64_t v7 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v7);
    ++v11;
    if (v10) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1003A8E90(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = __CocoaDictionary.makeIterator()();
    unint64_t v17 = 0;
    uint64_t v3 = 0;
    unint64_t v4 = 0;
    unint64_t v1 = v2 | 0x8000000000000000;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    unint64_t v17 = a1 + 64;
    uint64_t v3 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 64);
  }
  uint64_t v8 = 0;
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  while ((v1 & 0x8000000000000000) != 0)
  {
    if (!__CocoaDictionary.Iterator.next()()) {
      goto LABEL_35;
    }
    swift_unknownObjectRelease();
    sub_10007E2D8(0, &qword_100961E00);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v13 = v18;
    swift_unknownObjectRelease();
    uint64_t v12 = v8;
    uint64_t v10 = v4;
    if (!v18) {
      goto LABEL_35;
    }
LABEL_33:
    if (ASAllGoalsMetForSnapshot())
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
    }
    uint64_t v8 = v12;
    unint64_t v4 = v10;
  }
  if (v4)
  {
    uint64_t v10 = (v4 - 1) & v4;
    unint64_t v11 = __clz(__rbit64(v4)) | (v8 << 6);
    uint64_t v12 = v8;
LABEL_32:
    id v13 = *(id *)(*(void *)(v1 + 56) + 8 * v11);
    if (!v13) {
      goto LABEL_35;
    }
    goto LABEL_33;
  }
  int64_t v14 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v14 >= v9) {
      goto LABEL_35;
    }
    unint64_t v15 = *(void *)(v17 + 8 * v14);
    uint64_t v12 = v8 + 1;
    if (!v15)
    {
      uint64_t v12 = v8 + 2;
      if (v8 + 2 >= v9) {
        goto LABEL_35;
      }
      unint64_t v15 = *(void *)(v17 + 8 * v12);
      if (!v15)
      {
        uint64_t v12 = v8 + 3;
        if (v8 + 3 >= v9) {
          goto LABEL_35;
        }
        unint64_t v15 = *(void *)(v17 + 8 * v12);
        if (!v15)
        {
          uint64_t v12 = v8 + 4;
          if (v8 + 4 >= v9) {
            goto LABEL_35;
          }
          unint64_t v15 = *(void *)(v17 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v8 + 5;
            if (v8 + 5 >= v9) {
              goto LABEL_35;
            }
            unint64_t v15 = *(void *)(v17 + 8 * v12);
            if (!v15)
            {
              uint64_t v16 = v8 + 6;
              while (v9 != v16)
              {
                unint64_t v15 = *(void *)(v17 + 8 * v16++);
                if (v15)
                {
                  uint64_t v12 = v16 - 1;
                  goto LABEL_31;
                }
              }
LABEL_35:
              sub_1000D9B04();
              return;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

uint64_t sub_1003A913C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1003A91B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_100012D00, a4, 0);
}

uint64_t sub_1003A91D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_1000CD3AC, a4, 0);
}

uint64_t sub_1003A91F0@<X0>(void **a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  uint64_t v30 = (void *)sub_100221368();
  swift_bridgeObjectRetain();
  sub_1003AB0FC(&v30);
  if (v3)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    long long v29 = a3;
    uint64_t v8 = swift_bridgeObjectRelease();
    int64_t v9 = v30;
    __chkstk_darwin(v8);
    uint64_t v10 = sub_1003AD638((uint64_t)v9, (void (*)(void))sub_1003ADBE0);
    swift_release();
    id v11 = [v7 snapshots];
    uint64_t v28 = v6;
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = v6;
      uint64_t v27 = v10;
      sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
      sub_10007E2D8(0, &qword_100961E00);
      sub_1000CD998((unint64_t *)&qword_100955BF0, (unint64_t *)&qword_100955BE0);
      static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v14 = swift_bridgeObjectRetain();
      sub_1003A8E90(v14);
      unint64_t v16 = v15;
      id v17 = v7;
      swift_retain();
      uint64_t v18 = sub_1003AD8BC(v16, (uint64_t)v17, (uint64_t)a2, v13, (void (*)(id **, uint64_t, uint64_t, uint64_t))sub_1003AA218);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();

      uint64_t v10 = v27;
    }
    else
    {
      uint64_t v18 = _swiftEmptyArrayStorage;
    }
    uint64_t v30 = v10;
    sub_1001E44B0((uint64_t)v18);
    uint64_t v19 = v30;
    id v20 = [v7 friendWorkouts];
    if (v20)
    {
      uint64_t v21 = v20;
      sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
      sub_1000AFA94(&qword_10094ECD8);
      sub_1000CD998((unint64_t *)&qword_100955BF0, (unint64_t *)&qword_100955BE0);
      uint64_t v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v23 = sub_1003A8D20(v22);
      swift_bridgeObjectRelease();
      id v24 = v7;
      swift_retain();
      long long v25 = sub_1003AD8BC((unint64_t)v23, (uint64_t)v24, (uint64_t)a2, v28, (void (*)(id **, uint64_t, uint64_t, uint64_t))sub_1003AABD0);
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      long long v25 = _swiftEmptyArrayStorage;
    }
    uint64_t v30 = v19;
    uint64_t result = sub_1001E44B0((uint64_t)v25);
    *long long v29 = v30;
  }
  return result;
}

id sub_1003A956C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v94[1] = a5;
  uint64_t v102 = a4;
  id v112 = a3;
  uint64_t v103 = type metadata accessor for UUID();
  uint64_t v101 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  char v100 = (char *)v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v108 = *(char **)(v10 - 8);
  uint64_t v109 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  unsigned __int8 v99 = (char *)v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  long long v107 = (char *)v94 - v13;
  uint64_t v14 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  char v105 = (char *)v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v94 - v17;
  uint64_t v19 = type metadata accessor for DateComponents();
  uint64_t v106 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  long long v111 = (char *)v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for TimeZone();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  id v24 = (char *)v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000AFA94(&qword_1009511B8);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)v94 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for Calendar();
  uint64_t v113 = *(void *)(v28 - 8);
  uint64_t v114 = v28;
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v104 = (char *)v94 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = (char *)v94 - v32;
  __chkstk_darwin(v31);
  uint64_t v115 = (char *)v94 - v34;
  id v110 = a1;
  id v35 = sub_100429E54(a1);
  if (v35)
  {
    if (a2 < 0)
    {
LABEL_22:
      id result = (id)_assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
    uint64_t v36 = v35;
    [v35 setEarnedInstanceCount:a2];
    id v98 = self;
    id v37 = [v98 hk_gregorianCalendar];
    static Calendar._unconditionallyBridgeFromObjectiveC(_:)();

    id v38 = [v112 timeZone];
    if (v38)
    {
      uint64_t v39 = v38;
      uint64_t v96 = v19;
      uint64_t v97 = a6;
      static TimeZone._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v27, v24, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v27, 0, 1, v21);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v27, 1, v21) != 1)
      {
        uint64_t v40 = v115;
        Calendar.timeZone.setter();
        (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v33, v40, v114);
        sub_1000AFA94((uint64_t *)&unk_1009559B0);
        uint64_t v41 = type metadata accessor for Calendar.Component();
        uint64_t v42 = *(void *)(v41 - 8);
        uint64_t v43 = *(void *)(v42 + 72);
        unint64_t v44 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
        uint64_t v45 = swift_allocObject();
        *(_OWORD *)(v45 + 16) = xmmword_100752410;
        unint64_t v46 = v45 + v44;
        uint64_t v47 = *(void (**)(unint64_t, void, uint64_t))(v42 + 104);
        v47(v46, enum case for Calendar.Component.year(_:), v41);
        v47(v46 + v43, enum case for Calendar.Component.month(_:), v41);
        v47(v46 + 2 * v43, enum case for Calendar.Component.day(_:), v41);
        sub_1000C6A18(v45);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        id v48 = [v110 completedDate];
        if (v48)
        {
          uint64_t v49 = v48;
          id v95 = v36;
          uint64_t v50 = v107;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v51 = v108;
          uint64_t v52 = v109;
          char v53 = (void (*)(char *, char *, uint64_t))*((void *)v108 + 4);
          long long v107 = v108 + 32;
          v94[0] = v53;
          v53(v18, v50, v109);
          (*((void (**)(char *, void, uint64_t, uint64_t))v51 + 7))(v18, 0, 1, v52);
          uint64_t v54 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((void *)v51 + 6);
          if (v54((uint64_t)v18, 1, v52) != 1)
          {
            uint64_t v55 = v111;
            Calendar.dateComponents(_:from:)();
            swift_bridgeObjectRelease();
            uint64_t v57 = v113 + 8;
            uint64_t v56 = *(void (**)(char *, uint64_t))(v113 + 8);
            uint64_t v58 = v33;
            uint64_t v59 = v114;
            v56(v58, v114);
            (*((void (**)(char *, uint64_t))v51 + 1))(v18, v52);
            id v60 = [v98 hk_gregorianCalendarWithLocalTimeZone];
            CGFloat v61 = v104;
            static Calendar._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v62 = (uint64_t)v105;
            Calendar.date(from:)();
            unint64_t v63 = v61;
            char v64 = (char *)v56;
            v56(v63, v59);
            if (v54(v62, 1, v52) == 1)
            {
              sub_10008DB18(v62, (uint64_t *)&unk_10095B890);
              os_log_type_t v65 = static os_log_type_t.error.getter();
              double v66 = (void *)HKLogActivity;
              os_log_type_t v67 = v65;
              if (os_log_type_enabled(HKLogActivity, v65))
              {
                id v68 = v95;
                id v69 = v95;
                uint64_t v108 = v64;
                id v70 = v69;
                uint64_t v71 = v66;
                uint64_t v72 = swift_slowAlloc();
                uint64_t v113 = v57;
                uint64_t v73 = v72;
                char v74 = (void *)swift_slowAlloc();
                uint64_t v117 = swift_slowAlloc();
                *(_DWORD *)uint64_t v73 = 136315394;
                uint64_t v75 = _typeName(_:qualified:)();
                uint64_t v116 = sub_10008F1F4(v75, v76, &v117);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                *(_WORD *)(v73 + 12) = 2112;
                uint64_t v116 = (uint64_t)v70;
                id v77 = v70;
                uint64_t v78 = v97;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                *char v74 = v68;

                _os_log_impl((void *)&_mh_execute_header, v71, v67, "%s Failed to convert date for friend achievement %@", (uint8_t *)v73, 0x16u);
                sub_1000AFA94((uint64_t *)&unk_100955620);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                (*(void (**)(char *, uint64_t))(v106 + 8))(v111, v96);
                ((void (*)(char *, uint64_t))v108)(v115, v114);
              }
              else
              {

                (*(void (**)(char *, uint64_t))(v106 + 8))(v55, v96);
                v56(v115, v114);
                uint64_t v78 = v97;
              }
              uint64_t v93 = type metadata accessor for ActivitySharingHighlight();
              return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v78, 1, 1, v93);
            }
            else
            {
              char v82 = v99;
              uint64_t v83 = (void (*)(uint64_t, char *, uint64_t))v94[0];
              ((void (*)(char *, uint64_t, uint64_t))v94[0])(v99, v62, v52);
              uint64_t v108 = v64;
              id v84 = v95;
              id v85 = v95;
              id v86 = [v110 UUID];
              uint64_t v87 = v100;
              static UUID._unconditionallyBridgeFromObjectiveC(_:)();

              (*(void (**)(char *, uint64_t))(v106 + 8))(v111, v96);
              ((void (*)(char *, uint64_t))v108)(v115, v59);
              uint64_t v88 = (int *)type metadata accessor for ActivitySharingHighlight();
              uint64_t v89 = v97;
              v83(v97 + v88[6], v82, v52);
              uint64_t v90 = v103;
              uint64_t v91 = *(void *)(v102 + OBJC_IVAR____TtC10FitnessApp36ActivitySharingHighlightDataProvider_experienceType);
              *(void *)uint64_t v89 = v84;
              *(unsigned char *)(v89 + 8) = 0;
              (*(void (**)(uint64_t, char *, uint64_t))(v101 + 32))(v89 + v88[5], v87, v90);
              *(void *)(v89 + v88[7]) = v112;
              *(void *)(v89 + v88[8]) = v91;
              (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v88 - 1) + 56))(v89, 0, 1, v88);
              id v92 = v112;
              return v92;
            }
          }
          goto LABEL_21;
        }
LABEL_20:
        (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v108 + 7))(v18, 1, 1, v109);
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v27, 1, 1, v21);
    }
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v79 = type metadata accessor for ActivitySharingHighlight();
  uint64_t v80 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56);

  return (id)v80(a6, 1, 1, v79);
}

id sub_1003AA218@<X0>(id *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v82 = a4;
  uint64_t v74 = a3;
  unint64_t v76 = a2;
  uint64_t v87 = a5;
  uint64_t v75 = type metadata accessor for UUID();
  uint64_t v73 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v72 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v8 - 8);
  uint64_t v78 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(NSObject **)(v10 - 8);
  uint64_t v80 = v10;
  os_log_t v81 = v11;
  __chkstk_darwin(v10);
  id v77 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_10094E8A8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DateComponents();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v71 - v21;
  uint64_t v23 = type metadata accessor for Calendar();
  Class isa = v23[-1].isa;
  os_log_t v85 = v23;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v26 = *a1;
  id v27 = [*a1 activitySummary];
  if (v27)
  {
    id v79 = v27;
    uint64_t v86 = v5;
    id v28 = [self hk_gregorianCalendar];
    uint64_t v83 = v25;
    static Calendar._unconditionallyBridgeFromObjectiveC(_:)();

    [v26 snapshotIndex];
    id v29 = (id)_HKActivityCacheDateComponentsFromCacheIndex();
    if (v29)
    {
      uint64_t v30 = v29;
      static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
      v31(v15, v20, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
      {
        v31(v22, v15, v16);
        uint64_t v32 = (uint64_t)v78;
        uint64_t v33 = v83;
        Calendar.date(from:)();
        uint64_t v34 = v80;
        os_log_t v35 = v81;
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v81[6].isa)(v32, 1, v80) != 1)
        {
          CGFloat v61 = (void (*)(char *, uint64_t, uint64_t))v35[4].isa;
          os_log_t v81 = v35 + 4;
          v61(v77, v32, v34);
          id v62 = v79;
          id v63 = v79;
          id v64 = [v26 UUID];
          os_log_type_t v65 = v72;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
          (*((void (**)(char *, os_log_t))isa + 1))(v33, v85);
          double v66 = (int *)type metadata accessor for ActivitySharingHighlight();
          uint64_t v67 = v87;
          v61((char *)(v87 + v66[6]), (uint64_t)v77, v80);
          uint64_t v68 = v75;
          uint64_t v69 = *(void *)(v74 + OBJC_IVAR____TtC10FitnessApp36ActivitySharingHighlightDataProvider_experienceType);
          *(void *)uint64_t v67 = v62;
          *(unsigned char *)(v67 + 8) = 1;
          (*(void (**)(uint64_t, char *, uint64_t))(v73 + 32))(v67 + v66[5], v65, v68);
          id v70 = v76;
          *(void *)(v67 + v66[7]) = v76;
          *(void *)(v67 + v66[8]) = v69;
          (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v66 - 1) + 56))(v67, 0, 1, v66);
          return v70;
        }
        (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
        sub_10008DB18(v32, (uint64_t *)&unk_10095B890);
        goto LABEL_11;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
    }
    sub_10008DB18((uint64_t)v15, &qword_10094E8A8);
    uint64_t v33 = v83;
LABEL_11:
    os_log_type_t v49 = static os_log_type_t.error.getter();
    uint64_t v50 = (void *)HKLogActivity;
    os_log_type_t v51 = v49;
    if (os_log_type_enabled(HKLogActivity, v49))
    {
      id v52 = v26;
      os_log_t v81 = v50;
      uint64_t v53 = swift_slowAlloc();
      uint64_t v54 = (void *)swift_slowAlloc();
      uint64_t v89 = swift_slowAlloc();
      *(_DWORD *)uint64_t v53 = 136315394;
      uint64_t v55 = _typeName(_:qualified:)();
      uint64_t v88 = sub_10008F1F4(v55, v56, &v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v53 + 12) = 2112;
      uint64_t v88 = (uint64_t)v52;
      id v57 = v52;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v54 = v52;

      os_log_t v58 = v81;
      _os_log_impl((void *)&_mh_execute_header, v81, v51, "%s failed to create snapshot date for %@", (uint8_t *)v53, 0x16u);
      sub_1000AFA94((uint64_t *)&unk_100955620);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*((void (**)(char *, os_log_t))isa + 1))(v83, v85);
    }
    else
    {

      (*((void (**)(char *, os_log_t))isa + 1))(v33, v85);
    }
    uint64_t v59 = v87;
    uint64_t v60 = type metadata accessor for ActivitySharingHighlight();
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v59, 1, 1, v60);
  }
  os_log_type_t v36 = static os_log_type_t.error.getter();
  id v37 = (void *)HKLogActivity;
  os_log_type_t v38 = v36;
  if (os_log_type_enabled(HKLogActivity, v36))
  {
    id v39 = v26;
    os_log_t v85 = v37;
    uint64_t v40 = swift_slowAlloc();
    uint64_t v86 = v5;
    uint64_t v41 = v40;
    uint64_t v42 = (void *)swift_slowAlloc();
    uint64_t v89 = swift_slowAlloc();
    *(_DWORD *)uint64_t v41 = 136315394;
    uint64_t v43 = _typeName(_:qualified:)();
    uint64_t v88 = sub_10008F1F4(v43, v44, &v89);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2112;
    uint64_t v88 = (uint64_t)v39;
    id v45 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v42 = v39;

    os_log_t v46 = v85;
    _os_log_impl((void *)&_mh_execute_header, v85, v38, "%s failed to create activity summary for %@", (uint8_t *)v41, 0x16u);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  uint64_t v47 = type metadata accessor for ActivitySharingHighlight();
  return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v87, 1, 1, v47);
}

id sub_1003AABD0@<X0>(id *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  id v7 = *a1;
  id v8 = [*a1 hkWorkoutFromFriendWorkout];
  if (v8)
  {
    id v9 = v8;
    id v10 = v8;
    id v11 = [v7 UUID];
    uint64_t v12 = type metadata accessor for ActivitySharingHighlight();
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    id v13 = [v7 endDate];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v14 = *(void *)(a3 + OBJC_IVAR____TtC10FitnessApp36ActivitySharingHighlightDataProvider_experienceType);
    *(void *)a4 = v9;
    *(unsigned char *)(a4 + 8) = 2;
    *(void *)(a4 + *(int *)(v12 + 28)) = a2;
    *(void *)(a4 + *(int *)(v12 + 32)) = v14;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a4, 0, 1, v12);
    return a2;
  }
  else
  {
    os_log_type_t v16 = static os_log_type_t.error.getter();
    uint64_t v17 = (void *)HKLogActivity;
    os_log_type_t v18 = v16;
    if (os_log_type_enabled(HKLogActivity, v16))
    {
      id v19 = v7;
      os_log_type_t log = v17;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v25 = (void *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315394;
      uint64_t v21 = _typeName(_:qualified:)();
      sub_10008F1F4(v21, v22, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2112;
      id v23 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v25 = v19;

      _os_log_impl((void *)&_mh_execute_header, log, v18, "%s failed to create workout for %@", (uint8_t *)v20, 0x16u);
      sub_1000AFA94((uint64_t *)&unk_100955620);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v24 = type metadata accessor for ActivitySharingHighlight();
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a4, 1, 1, v24);
  }
}

uint64_t sub_1003AAF08()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10FitnessApp36ActivitySharingHighlightDataProvider__state;
  uint64_t v2 = sub_1000AFA94(&qword_10095A608);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_1003AAFA8()
{
  return type metadata accessor for ActivitySharingHighlightDataProvider();
}

void *assignWithTake for ActivitySharingHighlightDataProvider.State(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1003AAFE4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ActivitySharingHighlightDataProvider();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003AB028()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1003AB064()
{
  return Date.isBeforeOrEqualTo(date:)() & 1;
}

uint64_t sub_1003AB0B4()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1003AB0FC(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_1001EEFE0(v2);
  }
  uint64_t v3 = v2[2];
  v4[0] = (uint64_t)(v2 + 4);
  v4[1] = v3;
  sub_1003AB168(v4);
  *a1 = v2;
}

void sub_1003AB168(uint64_t *a1)
{
  uint64_t v3 = (void *)type metadata accessor for Date();
  unint64_t v4 = *(v3 - 1);
  __chkstk_darwin(v3);
  uint64_t v174 = (char *)&v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  id v9 = (char *)&v148 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v170 = (char *)&v148 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v158 = (char *)&v148 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v162 = (char *)&v148 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  os_log_type_t v18 = (char *)&v148 - v17;
  __chkstk_darwin(v16);
  char v156 = (char *)&v148 - v19;
  uint64_t v154 = a1;
  Swift::Int v20 = a1[1];
  Swift::Int v21 = _minimumMergeRunLength(_:)(v20);
  if (v21 >= v20)
  {
    if (v20 < 0) {
      goto LABEL_145;
    }
    if (v20) {
      sub_1003AC244(0, v20, 1, v154);
    }
    return;
  }
  if (v20 >= 0) {
    uint64_t v22 = v20;
  }
  else {
    uint64_t v22 = v20 + 1;
  }
  if (v20 < -1) {
    goto LABEL_165;
  }
  uint64_t v159 = (char *)v20;
  Swift::Int v152 = v21;
  if (v20 < 2)
  {
    uint64_t v24 = _swiftEmptyArrayStorage;
    uint64_t v163 = (void **)&_swiftEmptyArrayStorage[4];
    if (v20 != 1)
    {
      unint64_t v4 = _swiftEmptyArrayStorage[2];
      uint64_t v1 = (char *)_swiftEmptyArrayStorage;
LABEL_112:
      uint64_t v155 = v24;
      uint64_t v141 = v164;
      if (v4 >= 2)
      {
        uint64_t v142 = *v154;
        do
        {
          unint64_t v143 = v4 - 2;
          if (v4 < 2) {
            goto LABEL_140;
          }
          if (!v142) {
            goto LABEL_160;
          }
          uint64_t v144 = *(void *)&v1[16 * v143 + 32];
          uint64_t v145 = *(void *)&v1[16 * v4 + 24];
          sub_1003ACAB0((char *)(v142 + 16 * v144), (void **)(v142 + 16 * *(void *)&v1[16 * v4 + 16]), (char *)(v142 + 16 * v145), v163);
          if (v141) {
            break;
          }
          if (v145 < v144) {
            goto LABEL_141;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v1 = sub_1001EEF68((uint64_t)v1);
          }
          if (v143 >= *((void *)v1 + 2)) {
            goto LABEL_142;
          }
          uint64_t v146 = &v1[16 * v143 + 32];
          *(void *)uint64_t v146 = v144;
          *((void *)v146 + 1) = v145;
          unint64_t v147 = *((void *)v1 + 2);
          if (v4 > v147) {
            goto LABEL_143;
          }
          memmove(&v1[16 * v4 + 16], &v1[16 * v4 + 32], 16 * (v147 - v4));
          *((void *)v1 + 2) = v147 - 1;
          unint64_t v4 = v147 - 1;
        }
        while (v147 > 2);
      }
LABEL_123:
      swift_bridgeObjectRelease();
      v155[2] = 0;
      swift_bridgeObjectRelease();
      return;
    }
    long long v151 = v18;
  }
  else
  {
    long long v151 = v18;
    uint64_t v23 = v22 >> 1;
    sub_1000AFA94(&qword_10094E810);
    uint64_t v24 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
    v24[2] = v23;
    uint64_t v163 = (void **)(v24 + 4);
  }
  uint64_t v155 = v24;
  uint64_t v25 = 0;
  uint64_t v26 = *v154;
  uint64_t v172 = (char **)(v4 + 32);
  uint64_t v173 = (char **)(v4 + 56);
  uint64_t v171 = (id *)(v4 + 48);
  uint64_t v166 = (char **)(v4 + 8);
  uint64_t v150 = v26 + 32;
  uint64_t v148 = v26 - 16;
  uint64_t v1 = (char *)_swiftEmptyArrayStorage;
  id v165 = v9;
  uint64_t v27 = v159;
  uint64_t v167 = v26;
  while (1)
  {
    uint64_t v28 = v25 + 1;
    uint64_t v160 = v25;
    if (v25 + 1 < (uint64_t)v27)
    {
      uint64_t v153 = v1;
      unint64_t v4 = 16 * v25;
      id v29 = *(void **)(v26 + 16 * v25);
      id v30 = *(id *)(v26 + 16 * v28);
      uint64_t v31 = v29;
      id v32 = [v30 completedDate];
      if (!v32) {
        goto LABEL_161;
      }
      uint64_t v33 = v32;
      uint64_t v34 = v174;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      os_log_t v35 = *v172;
      os_log_type_t v36 = v156;
      ((void (*)(char *, char *, void *))*v172)(v156, v34, v3);
      uint64_t v1 = *v173;
      ((void (*)(char *, void, uint64_t, void *))*v173)(v36, 0, 1, v3);
      uint64_t v175 = (unsigned int (*)(char *, uint64_t, void *))*v171;
      if (v175(v36, 1, v3) == 1) {
        goto LABEL_162;
      }
      id v37 = [v31 completedDate];
      if (!v37) {
        goto LABEL_163;
      }
      os_log_type_t v38 = v37;
      uint64_t v168 = v31;
      id v169 = v30;
      id v39 = v174;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v40 = v151;
      ((void (*)(char *, char *, void *))v35)(v151, v39, v3);
      ((void (*)(char *, void, uint64_t, void *))v1)(v40, 0, 1, v3);
      if (v175(v40, 1, v3) == 1) {
        goto LABEL_164;
      }
      uint64_t v41 = v156;
      LODWORD(v161) = static Date.> infix(_:_:)();
      uint64_t v42 = *v166;
      ((void (*)(char *, void *))*v166)(v40, v3);
      uint64_t v157 = v42;
      ((void (*)(char *, void *))v42)(v41, v3);

      uint64_t v25 = v160;
      uint64_t v28 = v160 + 2;
      if (v160 + 2 < (uint64_t)v27)
      {
        unint64_t v149 = v4;
        uint64_t v43 = (id *)(v150 + 16 * v160);
        while (1)
        {
          uint64_t v168 = (char *)v28;
          unint64_t v44 = *(v43 - 2);
          id v45 = *v43;
          id v46 = v44;
          id v47 = [v45 completedDate];
          if (!v47) {
            goto LABEL_155;
          }
          id v48 = v47;
          os_log_type_t v49 = v174;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v50 = v162;
          ((void (*)(char *, char *, void *))v35)(v162, v49, v3);
          ((void (*)(char *, void, uint64_t, void *))v1)(v50, 0, 1, v3);
          if (v175(v50, 1, v3) == 1) {
            goto LABEL_156;
          }
          id v169 = v46;
          id v51 = [v46 completedDate];
          if (!v51) {
            goto LABEL_157;
          }
          id v52 = v51;
          uint64_t v53 = v45;
          uint64_t v54 = v174;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v55 = v158;
          ((void (*)(char *, char *, void *))v35)(v158, v54, v3);
          ((void (*)(char *, void, uint64_t, void *))v1)(v55, 0, 1, v3);
          if (v175(v55, 1, v3) == 1) {
            goto LABEL_158;
          }
          unint64_t v56 = v162;
          int v57 = static Date.> infix(_:_:)();
          os_log_t v58 = v55;
          int v59 = v57;
          uint64_t v60 = v157;
          ((void (*)(char *, void *))v157)(v58, v3);
          ((void (*)(char *, void *))v60)(v56, v3);

          if ((v161 ^ v59)) {
            break;
          }
          uint64_t v28 = (uint64_t)(v168 + 1);
          v43 += 2;
          uint64_t v27 = v159;
          if (v159 == v168 + 1)
          {
            uint64_t v28 = (uint64_t)v159;
            goto LABEL_31;
          }
        }
        uint64_t v27 = v159;
        uint64_t v28 = (uint64_t)v168;
LABEL_31:
        uint64_t v25 = v160;
        unint64_t v4 = v149;
      }
      uint64_t v26 = v167;
      uint64_t v1 = v153;
      if (v161)
      {
        if (v28 < v25) {
          goto LABEL_146;
        }
        if (v25 < v28)
        {
          uint64_t v61 = 16 * v28;
          uint64_t v62 = v28;
          uint64_t v63 = v25;
          do
          {
            if (v63 != --v62)
            {
              if (!v26) {
                goto LABEL_159;
              }
              uint64_t v64 = v26 + v61;
              uint64_t v65 = *(void *)(v26 + v4);
              uint64_t v66 = *(void *)(v26 + v4 + 8);
              *(_OWORD *)(v26 + v4) = *(_OWORD *)(v26 + v61 - 16);
              *(void *)(v64 - 16) = v65;
              *(void *)(v64 - 8) = v66;
            }
            ++v63;
            v61 -= 16;
            v4 += 16;
          }
          while (v63 < v62);
        }
      }
    }
    if (v28 < (uint64_t)v27)
    {
      if (__OFSUB__(v28, v25)) {
        goto LABEL_144;
      }
      if (v28 - v25 < v152) {
        break;
      }
    }
LABEL_62:
    if (v28 < v25) {
      goto LABEL_139;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v168 = (char *)v28;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v1 = sub_1001EE868(0, *((void *)v1 + 2) + 1, 1, v1);
    }
    unint64_t v91 = *((void *)v1 + 2);
    unint64_t v90 = *((void *)v1 + 3);
    unint64_t v4 = v91 + 1;
    uint64_t v26 = v167;
    if (v91 >= v90 >> 1)
    {
      uint64_t v140 = sub_1001EE868((char *)(v90 > 1), v91 + 1, 1, v1);
      uint64_t v26 = v167;
      uint64_t v1 = v140;
    }
    *((void *)v1 + 2) = v4;
    id v92 = v1 + 32;
    uint64_t v93 = &v1[16 * v91 + 32];
    char v94 = v168;
    *(void *)uint64_t v93 = v160;
    *((void *)v93 + 1) = v94;
    if (v91)
    {
      while (1)
      {
        unint64_t v95 = v4 - 1;
        if (v4 >= 4)
        {
          char v100 = &v92[16 * v4];
          uint64_t v101 = *((void *)v100 - 8);
          uint64_t v102 = *((void *)v100 - 7);
          BOOL v106 = __OFSUB__(v102, v101);
          uint64_t v103 = v102 - v101;
          if (v106) {
            goto LABEL_128;
          }
          uint64_t v105 = *((void *)v100 - 6);
          uint64_t v104 = *((void *)v100 - 5);
          BOOL v106 = __OFSUB__(v104, v105);
          uint64_t v98 = v104 - v105;
          char v99 = v106;
          if (v106) {
            goto LABEL_129;
          }
          unint64_t v107 = v4 - 2;
          uint64_t v108 = &v92[16 * v4 - 32];
          uint64_t v110 = *(void *)v108;
          uint64_t v109 = *((void *)v108 + 1);
          BOOL v106 = __OFSUB__(v109, v110);
          uint64_t v111 = v109 - v110;
          if (v106) {
            goto LABEL_131;
          }
          BOOL v106 = __OFADD__(v98, v111);
          uint64_t v112 = v98 + v111;
          if (v106) {
            goto LABEL_134;
          }
          if (v112 >= v103)
          {
            char v130 = &v92[16 * v95];
            uint64_t v132 = *(void *)v130;
            uint64_t v131 = *((void *)v130 + 1);
            BOOL v106 = __OFSUB__(v131, v132);
            uint64_t v133 = v131 - v132;
            if (v106) {
              goto LABEL_138;
            }
            BOOL v123 = v98 < v133;
            goto LABEL_99;
          }
        }
        else
        {
          if (v4 != 3)
          {
            uint64_t v124 = *((void *)v1 + 4);
            uint64_t v125 = *((void *)v1 + 5);
            BOOL v106 = __OFSUB__(v125, v124);
            uint64_t v117 = v125 - v124;
            char v118 = v106;
            goto LABEL_93;
          }
          uint64_t v97 = *((void *)v1 + 4);
          uint64_t v96 = *((void *)v1 + 5);
          BOOL v106 = __OFSUB__(v96, v97);
          uint64_t v98 = v96 - v97;
          char v99 = v106;
        }
        if (v99) {
          goto LABEL_130;
        }
        unint64_t v107 = v4 - 2;
        uint64_t v113 = &v92[16 * v4 - 32];
        uint64_t v115 = *(void *)v113;
        uint64_t v114 = *((void *)v113 + 1);
        BOOL v116 = __OFSUB__(v114, v115);
        uint64_t v117 = v114 - v115;
        char v118 = v116;
        if (v116) {
          goto LABEL_133;
        }
        char v119 = &v92[16 * v95];
        uint64_t v121 = *(void *)v119;
        uint64_t v120 = *((void *)v119 + 1);
        BOOL v106 = __OFSUB__(v120, v121);
        uint64_t v122 = v120 - v121;
        if (v106) {
          goto LABEL_136;
        }
        if (__OFADD__(v117, v122)) {
          goto LABEL_137;
        }
        if (v117 + v122 >= v98)
        {
          BOOL v123 = v98 < v122;
LABEL_99:
          if (v123) {
            unint64_t v95 = v107;
          }
          goto LABEL_101;
        }
LABEL_93:
        if (v118) {
          goto LABEL_132;
        }
        uint64_t v126 = &v92[16 * v95];
        uint64_t v128 = *(void *)v126;
        uint64_t v127 = *((void *)v126 + 1);
        BOOL v106 = __OFSUB__(v127, v128);
        uint64_t v129 = v127 - v128;
        if (v106) {
          goto LABEL_135;
        }
        if (v129 < v117) {
          goto LABEL_15;
        }
LABEL_101:
        unint64_t v134 = v95 - 1;
        if (v95 - 1 >= v4)
        {
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
          goto LABEL_148;
        }
        if (!v26) {
          goto LABEL_154;
        }
        char v135 = (unint64_t *)&v92[16 * v134];
        unint64_t v4 = *v135;
        uint64_t v136 = &v92[16 * v95];
        int64_t v137 = *((void *)v136 + 1);
        uint64_t v138 = v164;
        sub_1003ACAB0((char *)(v26 + 16 * *v135), (void **)(v26 + 16 * *(void *)v136), (char *)(v26 + 16 * v137), v163);
        uint64_t v164 = v138;
        if (v138) {
          goto LABEL_123;
        }
        if (v137 < (uint64_t)v4) {
          goto LABEL_125;
        }
        if (v95 > *((void *)v1 + 2)) {
          goto LABEL_126;
        }
        *char v135 = v4;
        *(void *)&v92[16 * v134 + 8] = v137;
        unint64_t v139 = *((void *)v1 + 2);
        if (v95 >= v139) {
          goto LABEL_127;
        }
        unint64_t v4 = v139 - 1;
        memmove(&v92[16 * v95], v136 + 16, 16 * (v139 - 1 - v95));
        *((void *)v1 + 2) = v139 - 1;
        uint64_t v26 = v167;
        if (v139 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v4 = 1;
LABEL_15:
    uint64_t v27 = v159;
    uint64_t v25 = (uint64_t)v168;
    uint64_t v24 = v155;
    if ((uint64_t)v168 >= (uint64_t)v159) {
      goto LABEL_112;
    }
  }
  if (__OFADD__(v25, v152)) {
    goto LABEL_147;
  }
  if (v25 + v152 >= (uint64_t)v27) {
    uint64_t v67 = v27;
  }
  else {
    uint64_t v67 = (char *)(v25 + v152);
  }
  if ((uint64_t)v67 >= v25)
  {
    if ((char *)v28 != v67)
    {
      uint64_t v153 = v1;
      uint64_t v68 = v148 + 16 * v28;
      uint64_t v157 = v67;
      do
      {
        id v70 = *(void **)(v26 + 16 * v28);
        uint64_t v161 = v68;
        uint64_t v168 = (char *)v28;
        while (1)
        {
          uint64_t v71 = *(void **)v68;
          id v72 = v70;
          uint64_t v175 = v71;
          id v169 = v72;
          id v73 = [v72 completedDate];
          if (!v73) {
            goto LABEL_151;
          }
          uint64_t v74 = v73;
          uint64_t v75 = v174;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v1 = *v172;
          unint64_t v76 = v170;
          ((void (*)(char *, char *, void *))*v172)(v170, v75, v3);
          id v77 = (void (*)(void, void, void, void))v3;
          uint64_t v3 = *v173;
          ((void (*)(char *, void, uint64_t, void))*v173)(v76, 0, 1, v77);
          uint64_t v78 = (unsigned int (*)(char *, uint64_t, unint64_t))*v171;
          unint64_t v4 = (unint64_t)v77;
          if (((unsigned int (*)(char *, uint64_t, void (*)(void, void, void, void)))*v171)(v76, 1, v77) == 1)goto LABEL_152; {
          id v79 = [v175 completedDate];
          }
          if (!v79) {
            goto LABEL_149;
          }
          uint64_t v80 = v79;
          os_log_t v81 = v174;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v82 = v165;
          ((void (*)(char *, char *, unint64_t))v1)(v165, v81, v4);
          ((void (*)(char *, void, uint64_t, unint64_t))v3)(v82, 0, 1, v4);
          uint64_t v3 = (void *)v4;
          if (v78(v82, 1, v4) == 1) {
            goto LABEL_150;
          }
          uint64_t v83 = v170;
          char v84 = static Date.> infix(_:_:)();
          os_log_t v85 = v82;
          char v86 = v84;
          unint64_t v4 = (unint64_t)v166;
          uint64_t v87 = *v166;
          ((void (*)(char *, void *))*v166)(v85, v3);
          ((void (*)(char *, void *))v87)(v83, v3);

          if ((v86 & 1) == 0) {
            break;
          }
          uint64_t v26 = v167;
          uint64_t v69 = v168;
          if (!v167) {
            goto LABEL_153;
          }
          id v70 = *(void **)(v68 + 16);
          uint64_t v88 = *(void *)(v68 + 24);
          *(_OWORD *)(v68 + 16) = *(_OWORD *)v68;
          *(void *)uint64_t v68 = v70;
          *(void *)(v68 + 8) = v88;
          v68 -= 16;
          if (v69 == (char *)++v25) {
            goto LABEL_51;
          }
        }
        uint64_t v26 = v167;
        uint64_t v69 = v168;
LABEL_51:
        uint64_t v28 = (uint64_t)(v69 + 1);
        uint64_t v25 = v160;
        uint64_t v68 = v161 + 16;
      }
      while ((char *)v28 != v157);
      uint64_t v28 = (uint64_t)v157;
      uint64_t v1 = v153;
    }
    goto LABEL_62;
  }
LABEL_148:
  __break(1u);
LABEL_149:
  ((void (*)(char *, uint64_t, uint64_t, unint64_t))v3)(v165, 1, 1, v4);
LABEL_150:
  __break(1u);
LABEL_151:
  ((void (*)(char *, uint64_t, uint64_t, void *))*v173)(v170, 1, 1, v3);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  ((void (*)(char *, uint64_t, uint64_t, void *))v1)(v162, 1, 1, v3);
LABEL_156:
  __break(1u);
LABEL_157:
  ((void (*)(char *, uint64_t, uint64_t, void *))v1)(v158, 1, 1, v3);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  ((void (*)(char *, uint64_t, uint64_t, void *))*v173)(v156, 1, 1, v3);
LABEL_162:
  __break(1u);
LABEL_163:
  ((void (*)(char *, uint64_t, uint64_t, void *))v1)(v151, 1, 1, v3);
LABEL_164:
  __break(1u);
LABEL_165:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1003ABFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v24 = a1;
  uint64_t v27 = type metadata accessor for ActivitySharingHighlight();
  uint64_t v7 = __chkstk_darwin(v27);
  uint64_t v28 = (uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v22 - v10;
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v15 = (char *)&v22 - v14;
  uint64_t v26 = a3;
  uint64_t v23 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v30 = v16 * (v26 - 1);
    uint64_t v25 = v16;
    uint64_t v29 = v16 * v26;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v18 = v24;
    while (1)
    {
      uint64_t v19 = *a4;
      sub_10017FF5C(v29 + v17 + *a4, (uint64_t)v15);
      sub_10017FF5C(v30 + v17 + v19, (uint64_t)v11);
      LOBYTE(v19) = Date.isAfter(date:)();
      sub_10017F544((uint64_t)v11);
      uint64_t result = sub_10017F544((uint64_t)v15);
      if ((v19 & 1) == 0)
      {
LABEL_4:
        v30 += v25;
        v29 += v25;
        if (++v26 == v23) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v20 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v21 = v20 + v30 + v17;
      sub_1003ADBEC(v20 + v29 + v17, v28);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_1003ADBEC(v28, v21);
      v17 -= v25;
      if (v26 == ++v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

void sub_1003AC244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v40 = a1;
  uint64_t v7 = (void *)type metadata accessor for Date();
  uint64_t v8 = (void *)*(v7 - 1);
  __chkstk_darwin(v7);
  id v51 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v43 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v50 = (char *)&v38 - v13;
  uint64_t v39 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = *a4;
    id v48 = (void (**)(char *, char *, void *))(v8 + 4);
    os_log_type_t v49 = (void **)(v8 + 7);
    id v47 = (unsigned int (**)(char *, uint64_t, void *))(v8 + 6);
    uint64_t v42 = (void (**)(char *, void *))(v8 + 1);
    uint64_t v44 = v14;
    uint64_t v15 = v14 + 16 * a3 - 16;
LABEL_5:
    uint64_t v16 = *(void **)(v44 + 16 * a3);
    uint64_t v17 = v40;
    uint64_t v41 = v15;
    uint64_t v45 = a3;
    while (1)
    {
      uint64_t v18 = *(void **)v15;
      id v19 = v16;
      id v52 = v18;
      id v20 = [v19 completedDate];
      if (!v20) {
        break;
      }
      uint64_t v21 = v20;
      id v46 = v19;
      uint64_t v22 = v51;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v23 = *v48;
      uint64_t v24 = v50;
      (*v48)(v50, v22, v7);
      uint64_t v25 = v7;
      uint64_t v7 = *v49;
      ((void (*)(char *, void, uint64_t, void *))*v49)(v24, 0, 1, v25);
      uint64_t v26 = *v47;
      uint64_t v8 = v25;
      if ((*v47)(v24, 1, v25) == 1) {
        goto LABEL_15;
      }
      id v27 = [v52 completedDate];
      if (!v27) {
        goto LABEL_16;
      }
      uint64_t v28 = v27;
      uint64_t v29 = v51;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v30 = v43;
      v23(v43, v29, v8);
      ((void (*)(char *, void, uint64_t, void *))v7)(v30, 0, 1, v8);
      uint64_t v7 = v8;
      if (v26(v30, 1, v8) == 1) {
        goto LABEL_17;
      }
      uint64_t v31 = v50;
      char v32 = static Date.> infix(_:_:)();
      uint64_t v33 = v30;
      char v34 = v32;
      os_log_t v35 = *v42;
      (*v42)(v33, v8);
      v35(v31, v8);

      uint64_t v36 = v45;
      if (v34)
      {
        if (!v44) {
          goto LABEL_18;
        }
        uint64_t v16 = *(void **)(v15 + 16);
        uint64_t v37 = *(void *)(v15 + 24);
        *(_OWORD *)(v15 + 16) = *(_OWORD *)v15;
        *(void *)uint64_t v15 = v16;
        *(void *)(v15 + 8) = v37;
        v15 -= 16;
        if (v36 != ++v17) {
          continue;
        }
      }
      a3 = v36 + 1;
      uint64_t v15 = v41 + 16;
      if (a3 == v39) {
        return;
      }
      goto LABEL_5;
    }
    ((void (*)(char *, uint64_t, uint64_t, void *))*v49)(v50, 1, 1, v7);
LABEL_15:
    __break(1u);
LABEL_16:
    ((void (*)(char *, uint64_t, uint64_t, void *))v7)(v43, 1, 1, v8);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
}

uint64_t sub_1003AC628(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v35 = type metadata accessor for ActivitySharingHighlight();
  uint64_t v8 = __chkstk_darwin(v35);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v33 - v11;
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_61;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_62;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v38 = a1;
  unint64_t v37 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v25 = a4 + v19;
      unint64_t v36 = a4 + v19;
      unint64_t v38 = a2;
      unint64_t v34 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        uint64_t v27 = -v14;
        do
        {
          unint64_t v28 = a3 + v27;
          sub_10017FF5C(v25 + v27, (uint64_t)v12);
          unint64_t v29 = a2 + v27;
          sub_10017FF5C(a2 + v27, (uint64_t)v10);
          char v30 = Date.isAfter(date:)();
          sub_10017F544((uint64_t)v10);
          sub_10017F544((uint64_t)v12);
          if (v30)
          {
            if (a3 < a2 || v28 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v38 += v27;
          }
          else
          {
            unint64_t v31 = v36;
            v36 += v27;
            if (a3 < v31 || v28 >= v31)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v31)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v29 = a2;
          }
          unint64_t v25 = v36;
          if (v36 <= a4) {
            break;
          }
          a2 = v29;
          a3 += v27;
        }
        while (v29 > v34);
      }
      goto LABEL_59;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v34 = a4 + v18;
    unint64_t v36 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_10017FF5C(a2, (uint64_t)v12);
        sub_10017FF5C(a4, (uint64_t)v10);
        char v21 = Date.isAfter(date:)();
        sub_10017F544((uint64_t)v10);
        sub_10017F544((uint64_t)v12);
        unint64_t v22 = v38;
        if (v21)
        {
          unint64_t v23 = a2 + v14;
          if (v38 < a2 || v38 >= v23)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v38 == a2)
          {
            unint64_t v22 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v24 = v37 + v14;
          if (v38 < v37 || v38 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v38 != v37)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v37 = v24;
          unint64_t v23 = a2;
        }
        unint64_t v38 = v22 + v14;
        a4 = v37;
        if (v37 >= v34) {
          break;
        }
        a2 = v23;
      }
      while (v23 < a3);
    }
LABEL_59:
    sub_1001EEBE0(&v38, &v37, (uint64_t *)&v36);
    return 1;
  }
LABEL_63:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003ACAB0(char *a1, void **a2, char *a3, void **a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = (void *)type metadata accessor for Date();
  uint64_t v83 = (void (**)(char *, void *))*(v10 - 1);
  __chkstk_darwin(v10);
  uint64_t v96 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  char v86 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  unint64_t v91 = (char *)&v81 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v88 = (char *)&v81 - v18;
  __chkstk_darwin(v17);
  uint64_t v93 = (char *)&v81 - v19;
  char v94 = v10;
  uint64_t v20 = (char *)a2 - a1;
  uint64_t v21 = (char *)a2 - a1 + 15;
  if ((char *)a2 - a1 >= 0) {
    uint64_t v21 = (char *)a2 - a1;
  }
  uint64_t v22 = v21 >> 4;
  unint64_t v23 = a2;
  uint64_t v89 = a3;
  uint64_t v24 = a3 - (char *)a2;
  uint64_t v25 = v24 / 16;
  unint64_t v95 = (void **)a1;
  char v99 = (void **)a1;
  uint64_t v98 = a4;
  os_log_t v81 = (void (*)(void, void, void, void))v4;
  if (v21 >> 4 >= v24 / 16)
  {
    if (v24 < -15) {
      goto LABEL_60;
    }
    id v52 = v23;
    if (a4 != v23 || &v23[2 * v25] <= a4) {
      memmove(a4, v23, 16 * v25);
    }
    uint64_t v53 = &a4[2 * v25];
    uint64_t v97 = v53;
    char v99 = v23;
    if (v24 < 16 || v95 >= v23) {
      goto LABEL_51;
    }
    uint64_t v54 = v83;
    uint64_t v55 = (void (**)(void))(v83 + 4);
    unint64_t v28 = (id *)(v83 + 7);
    unint64_t v90 = (unsigned int (**)(char *, uint64_t, void *))(v83 + 6);
    ++v83;
    char v84 = (void (**)(void))(v54 + 4);
    unint64_t v56 = v89 - 16;
    int v57 = v52;
    os_log_t v85 = a4;
    uint64_t v82 = v28;
    while (1)
    {
      id v92 = v56;
      uint64_t v88 = (char *)v53;
      uint64_t v89 = (char *)v52;
      os_log_t v58 = v53 - 2;
      int v59 = *(v57 - 2);
      v57 -= 2;
      uint64_t v60 = *(v53 - 2);
      uint64_t v93 = v59;
      uint64_t v87 = v60;
      id v61 = [v60 completedDate];
      if (!v61) {
        goto LABEL_56;
      }
      uint64_t v62 = v61;
      uint64_t v63 = v96;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v64 = *v55;
      uint64_t v65 = v91;
      ((void (*)(char *, char *, void *))*v55)(v91, v63, v10);
      uint64_t v66 = v10;
      uint64_t v10 = *v28;
      ((void (*)(char *, void, uint64_t, void *))*v28)(v65, 0, 1, v66);
      uint64_t v67 = *v90;
      if ((*v90)(v65, 1, v66) == 1) {
        goto LABEL_57;
      }
      id v68 = [v93 completedDate];
      if (!v68) {
        goto LABEL_58;
      }
      uint64_t v69 = v68;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      id v70 = v86;
      uint64_t v71 = v94;
      v64();
      ((void (*)(char *, void, uint64_t, void *))v10)(v70, 0, 1, v71);
      if (v67(v70, 1, v71) == 1) {
        goto LABEL_59;
      }
      id v72 = v91;
      id v73 = v92 + 16;
      char v74 = static Date.> infix(_:_:)();
      uint64_t v75 = *v83;
      (*v83)(v70, v71);
      v75(v72, v71);

      uint64_t v10 = v71;
      if (v74)
      {
        uint64_t v53 = (void **)v88;
        unint64_t v76 = v92;
        if (v73 != v89 || v92 >= v89) {
          *(_OWORD *)id v92 = *(_OWORD *)v57;
        }
        char v99 = v57;
      }
      else
      {
        uint64_t v97 = v58;
        unint64_t v76 = v92;
        if (v73 >= v88 && v92 < v88)
        {
          id v77 = v95;
          unint64_t v28 = v82;
          if (v73 != v88) {
            *(_OWORD *)id v92 = *(_OWORD *)v58;
          }
          int v57 = (void **)v89;
          uint64_t v53 = v58;
          uint64_t v78 = v85;
          goto LABEL_49;
        }
        *(_OWORD *)id v92 = *(_OWORD *)v58;
        int v57 = (void **)v89;
        uint64_t v53 = v58;
      }
      uint64_t v78 = v85;
      id v77 = v95;
      unint64_t v28 = v82;
LABEL_49:
      uint64_t v55 = v84;
      if (v53 > v78)
      {
        unint64_t v56 = v76 - 16;
        id v52 = v57;
        if (v57 > v77) {
          continue;
        }
      }
      goto LABEL_51;
    }
  }
  if (v20 >= -15)
  {
    uint64_t v26 = v95;
    if (a4 != v95 || &v95[2 * v22] <= a4) {
      memmove(a4, v95, 16 * v22);
    }
    uint64_t v87 = &a4[2 * v22];
    uint64_t v97 = v87;
    if (v20 >= 16)
    {
      uint64_t v27 = v23;
      if (v23 < (void **)v89)
      {
        unint64_t v91 = (char *)(v83 + 4);
        id v92 = (char *)(v83 + 7);
        unint64_t v90 = (unsigned int (**)(char *, uint64_t, void *))(v83 + 6);
        char v86 = (char *)(v83 + 1);
        while (1)
        {
          unint64_t v95 = v26;
          unint64_t v28 = v27;
          unint64_t v29 = a4;
          char v30 = *a4;
          id v31 = *v27;
          uint64_t v10 = v30;
          id v32 = [v31 completedDate];
          if (!v32) {
            break;
          }
          uint64_t v33 = v32;
          unint64_t v34 = v96;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v35 = *(void (**)(char *, char *, void *))v91;
          unint64_t v37 = v93;
          unint64_t v36 = v94;
          (*(void (**)(char *, char *, void *))v91)(v93, v34, v94);
          uint64_t v5 = *(void (**)(char *, uint64_t, uint64_t, void *))v92;
          (*(void (**)(char *, void, uint64_t, void *))v92)(v37, 0, 1, v36);
          unint64_t v38 = *v90;
          if ((*v90)(v37, 1, v36) == 1) {
            goto LABEL_53;
          }
          id v39 = [v10 completedDate];
          if (!v39) {
            goto LABEL_54;
          }
          uint64_t v40 = v39;
          uint64_t v41 = v96;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v42 = v88;
          uint64_t v43 = v41;
          uint64_t v44 = v94;
          v35(v88, v43, v94);
          v5(v42, 0, 1, v44);
          if (v38(v42, 1, v44) == 1) {
            goto LABEL_55;
          }
          uint64_t v45 = v93;
          char v46 = static Date.> infix(_:_:)();
          id v47 = v42;
          char v48 = v46;
          uint64_t v5 = (void (*)(char *, uint64_t, uint64_t, void *))v86;
          os_log_type_t v49 = *(void (**)(char *, void *))v86;
          (*(void (**)(char *, void *))v86)(v47, v44);
          v49(v45, v44);

          if (v48)
          {
            unint64_t v50 = (unint64_t)(v28 + 2);
            id v51 = v95;
            a4 = v29;
            if (v95 < v28 || (unint64_t)v95 >= v50 || v95 != v28) {
              *(_OWORD *)unint64_t v95 = *(_OWORD *)v28;
            }
          }
          else
          {
            id v51 = v95;
            if (v95 != v29) {
              *(_OWORD *)unint64_t v95 = *(_OWORD *)v29;
            }
            a4 = v29 + 2;
            uint64_t v98 = v29 + 2;
            unint64_t v50 = (unint64_t)v28;
          }
          uint64_t v26 = v51 + 2;
          char v99 = v26;
          if (a4 < v87)
          {
            uint64_t v27 = (id *)v50;
            if (v50 < (unint64_t)v89) {
              continue;
            }
          }
          goto LABEL_51;
        }
        (*(void (**)(char *, uint64_t, uint64_t, void *))v92)(v93, 1, 1, v94);
LABEL_53:
        __break(1u);
LABEL_54:
        v5(v88, 1, 1, v94);
LABEL_55:
        __break(1u);
LABEL_56:
        ((void (*)(char *, uint64_t, uint64_t, id))*v28)(v91, 1, 1, v10);
LABEL_57:
        __break(1u);
LABEL_58:
        ((void (*)(char *, uint64_t, uint64_t, void *))v10)(v86, 1, 1, v94);
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
    }
LABEL_51:
    sub_1001EE99C((void **)&v99, (const void **)&v98, &v97);
    return 1;
  }
LABEL_60:
  int v80 = 0;
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003AD2F0(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v11 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    sub_1003AD454((unint64_t *)((char *)&v11 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    uint64_t v7 = v6;
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v5);
    sub_1003AD454((unint64_t *)v8, v4, v2);
    uint64_t v7 = v9;
    swift_release();
    swift_slowDealloc();
  }
  return v7;
}

void sub_1003AD454(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = 0;
  int64_t v4 = 0;
  uint64_t v5 = a3 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_18;
    }
    BOOL v12 = __OFADD__(v4++, 1);
    if (v12)
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v4 >= v9) {
      goto LABEL_28;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    if (!v13) {
      break;
    }
LABEL_17:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_18:
    id v15 = *(id *)(*(void *)(a3 + 48) + 8 * v11);
    if (([v15 isMe] & 1) != 0
      || ![v15 isFriendshipCurrentlyActive])
    {
    }
    else
    {
      unsigned int v16 = [v15 isActivityDataCurrentlyVisibleToMe];

      if (v16)
      {
        *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        BOOL v12 = __OFADD__(v19++, 1);
        if (v12) {
          goto LABEL_31;
        }
      }
    }
  }
  int64_t v14 = v4 + 1;
  if (v4 + 1 >= v9) {
    goto LABEL_28;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v4 + 2;
  if (v4 + 2 >= v9) {
    goto LABEL_28;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v4 + 3;
  if (v4 + 3 >= v9)
  {
LABEL_28:
    swift_retain();
    sub_100522364(a1, a2, v19, a3);
    return;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
LABEL_16:
    int64_t v4 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      goto LABEL_28;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_17;
    }
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
}

void *sub_1003AD638(uint64_t a1, void (*a2)(void))
{
  uint64_t v24 = a2;
  uint64_t v4 = sub_1000AFA94(&qword_10095A640);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for ActivitySharingHighlight();
  uint64_t v7 = __chkstk_darwin(v23);
  uint64_t v22 = (uint64_t)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v11 = (char *)v20 - v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return _swiftEmptyArrayStorage;
  }
  v20[2] = v2;
  uint64_t v21 = v9;
  unint64_t v13 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  v20[1] = a1;
  uint64_t v14 = a1 + 40;
  id v15 = _swiftEmptyArrayStorage;
  do
  {
    id v16 = *(id *)(v14 - 8);
    v24();

    if ((*v13)(v6, 1, v23) == 1)
    {
      sub_10008DB18((uint64_t)v6, &qword_10095A640);
    }
    else
    {
      sub_1003ADBEC((uint64_t)v6, (uint64_t)v11);
      sub_1003ADBEC((uint64_t)v11, v22);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v15 = (void *)sub_1001E7EF0(0, v15[2] + 1, 1, (unint64_t)v15);
      }
      unint64_t v18 = v15[2];
      unint64_t v17 = v15[3];
      if (v18 >= v17 >> 1) {
        id v15 = (void *)sub_1001E7EF0(v17 > 1, v18 + 1, 1, (unint64_t)v15);
      }
      v15[2] = v18 + 1;
      sub_1003ADBEC(v22, (uint64_t)v15+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * v18);
    }
    v14 += 16;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v15;
}

void *sub_1003AD8BC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(id **, uint64_t, uint64_t, uint64_t))
{
  uint64_t v31 = a4;
  id v32 = a5;
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v7 = sub_1000AFA94(&qword_10095A640);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for ActivitySharingHighlight();
  uint64_t v24 = *(void *)(v28 - 8);
  uint64_t v10 = __chkstk_darwin(v28);
  uint64_t v27 = (uint64_t)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v23 = (uint64_t)&v23 - v12;
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v13; uint64_t v13 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v26 = a1 & 0xC000000000000001;
    uint64_t v14 = (unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    id v15 = _swiftEmptyArrayStorage;
    uint64_t v16 = 4;
    uint64_t v25 = (id *)a1;
    while (1)
    {
      unint64_t v17 = v26 ? (id *)specialized _ArrayBuffer._getElementSlowPath(_:)() : (id *)*(id *)(a1 + 8 * v16);
      a1 = (unint64_t)v17;
      uint64_t v18 = v16 - 3;
      if (__OFADD__(v16 - 4, 1)) {
        break;
      }
      uint64_t v33 = v17;
      v32(&v33, v29, v30, v31);
      if (v5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v15;
      }

      if ((*v14)(v9, 1, v28) == 1)
      {
        sub_10008DB18((uint64_t)v9, &qword_10095A640);
      }
      else
      {
        uint64_t v19 = v23;
        sub_1003ADBEC((uint64_t)v9, v23);
        sub_1003ADBEC(v19, v27);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v15 = (void *)sub_1001E7EF0(0, v15[2] + 1, 1, (unint64_t)v15);
        }
        unint64_t v21 = v15[2];
        unint64_t v20 = v15[3];
        if (v21 >= v20 >> 1) {
          id v15 = (void *)sub_1001E7EF0(v20 > 1, v21 + 1, 1, (unint64_t)v15);
        }
        v15[2] = v21 + 1;
        sub_1003ADBEC(v27, (uint64_t)v15+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v21);
      }
      a1 = (unint64_t)v25;
      ++v16;
      if (v18 == v13)
      {
        swift_bridgeObjectRelease();
        return v15;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

id sub_1003ADBE0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1003A956C(a1, a2, *(void **)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), a3);
}

uint64_t sub_1003ADBEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActivitySharingHighlight();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1003ADC58()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_isWheelchair);
  uint64_t v2 = self;
  uint64_t v3 = &selRef_wheelchairSpriteSheet;
  if (!v1) {
    uint64_t v3 = &selRef_defaultSpriteSheet;
  }
  id v8 = [v2 *v3];
  int v4 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_isPaused);
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_ringsView);
  id v6 = [v5 ringGroup];
  id v7 = v6;
  if (v4 == 1)
  {
    [v6 setSpriteSheet:0];
  }
  else
  {
    [v6 setSpriteSheet:v8];

    id v7 = [v5 ringGroup];
    [v7 playSpriteAnimation];
  }
}

void sub_1003ADD60()
{
  id v0 = [objc_allocWithZone((Class)NSDateFormatter) init];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setLocalizedDateFormatFromTemplate:v1];

  qword_10095A648 = (uint64_t)v0;
}

char *sub_1003ADDD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4 = v3;
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_activitySummary] = 0;
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_pauseRingsCoordinator] = 0;
  v3[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_isPaused] = 0;
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_layoutConstraints] = _swiftEmptyArrayStorage;
  uint64_t v5 = OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_pauseRingsLabelsView;
  id v6 = objc_allocWithZone((Class)UIView);
  id v7 = v4;
  id v8 = [v6 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v9 = UIView.forAutoLayout()();

  *(void *)&v4[v5] = v9;
  uint64_t v10 = OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_pauseRingsDescriptionLabel;
  id v11 = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v12 = self;
  id v13 = [v12 labelColor];
  uint64_t v14 = (void *)UILabel.withTextColor(_:)();

  [v14 setLineBreakMode:0];
  [v14 setNumberOfLines:0];
  sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  char v39 = 1;
  id v15 = (void *)static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)();
  uint64_t v16 = (void *)UILabel.withFont(_:)();

  [v16 setTextAlignment:1];
  [v16 setHidden:1];
  [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v7[v10] = v16;
  uint64_t v17 = OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_pauseRingsResumeDateLabel;
  id v18 = [objc_allocWithZone((Class)UILabel) init];
  id v19 = [v12 secondaryLabelColor];
  unint64_t v20 = (void *)UILabel.withTextColor(_:)();

  [v20 setLineBreakMode:0];
  [v20 setNumberOfLines:0];
  id v21 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
  uint64_t v22 = (void *)UILabel.withFont(_:)();

  [v22 setTextAlignment:1];
  [v22 setHidden:1];
  [v22 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v7[v17] = v22;
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_diameterScreenRatio] = 0x3FE596DE8CA11BFDLL;
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_margin] = 0x402E000000000000;
  v7[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_isWheelchair] = 0;
  id v23 = [self activityRingGroupForRingType:3];
  id v24 = [v23 forCompanion];

  id v25 = [objc_allocWithZone((Class)ARUIRingsView) initWithRingGroup:v24];
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_ringsView] = v25;
  [v25 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v26 = v25;
  id v27 = [v12 systemBackgroundColor];
  [v26 setBackgroundColor:v27];

  if (a3)
  {
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v28 = 0;
  }
  v38.receiver = v7;
  v38.super_class = (Class)type metadata accessor for DayViewActivityRingsTableViewCell();
  [super initWithStyle:a1 reuseIdentifier:v28];

  uint64_t v30 = (char *)v29;
  id v31 = [v12 systemBackgroundColor];
  [v30 setBackgroundColor:v31];

  [v30 setSeparatorStyle:0];
  id v32 = [v30 contentView];
  [v32 addSubview:*(void *)&v30[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_ringsView]];

  uint64_t v33 = *(void **)&v30[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_pauseRingsLabelsView];
  [v33 addSubview:*(void *)&v30[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_pauseRingsDescriptionLabel]];
  [v33 addSubview:*(void *)&v30[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_pauseRingsResumeDateLabel]];
  id v34 = [v30 contentView];
  [v34 addSubview:v33];

  sub_1003AE35C();
  return v30;
}

void sub_1003AE35C()
{
  NSString v1 = v0;
  id v2 = [self mainScreen];
  [v2 bounds];
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;

  v47.origin.CGFloat x = v4;
  v47.origin.CGFloat y = v6;
  v47.size.CGFloat width = v8;
  v47.size.CGFloat height = v10;
  CGRectGetWidth(v47);
  UIRoundToViewScale();
  double v12 = v11;
  id v13 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_ringsView];
  uint64_t v14 = (void *)ARUIRingsView.withRingGroupDiameter(_:)();
  id v15 = self;
  [v15 preferredActivityRingThicknessForDiameter:v12];
  uint64_t v16 = (void *)ARUIRingsView.withRingGroupThickness(_:)();

  [v15 preferredActivityRingInterspacingForDiameter:v12];
  id v17 = [v13 centerXAnchor];
  id v18 = [v1 contentView];
  id v19 = [v18 centerXAnchor];

  id v43 = [v17 constraintEqualToAnchor:v19];
  id v20 = [v13 heightAnchor];
  id v21 = [v20 constraintEqualToConstant:v12 + 2.0];

  LODWORD(v22) = 1148829696;
  [v21 setPriority:v22];
  id v23 = [v13 widthAnchor];
  id v24 = [v13 heightAnchor];
  id v42 = [v23 constraintEqualToAnchor:v24];

  id v25 = [v13 topAnchor];
  id v26 = [v1 contentView];
  id v27 = [v26 topAnchor];

  id v28 = [v25 constraintEqualToAnchor:v27 constant:18.0];
  id v29 = [v13 bottomAnchor];
  id v30 = [v1 contentView];
  id v31 = [v30 bottomAnchor];

  id v32 = [v29 constraintEqualToAnchor:v31 constant:-15.0];
  id v41 = self;
  uint64_t v33 = OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_layoutConstraints;
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v41 deactivateConstraints:isa];

  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_10075C680;
  *(void *)(v35 + 32) = v43;
  *(void *)(v35 + 40) = v28;
  *(void *)(v35 + 48) = v32;
  *(void *)(v35 + 56) = v21;
  *(void *)(v35 + 64) = v42;
  uint64_t v45 = v35;
  specialized Array._endMutation()();
  *(void *)&v1[v33] = v45;
  id v36 = v43;
  id v37 = v28;
  id v38 = v32;
  id v39 = v21;
  id v40 = v42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  Class v44 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v41 activateConstraints:v44];
}

void sub_1003AE7F8()
{
  NSString v1 = v0;
  id v2 = [self mainScreen];
  [v2 bounds];
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;

  v103.origin.CGFloat x = v4;
  v103.origin.CGFloat y = v6;
  v103.size.CGFloat width = v8;
  v103.size.CGFloat height = v10;
  CGRectGetWidth(v103);
  UIRoundToViewScale();
  double v12 = v11;
  id v13 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_ringsView];
  uint64_t v14 = (void *)ARUIRingsView.withRingGroupDiameter(_:)();
  id v15 = self;
  [v15 preferredActivityRingThicknessForDiameter:v12];
  uint64_t v16 = (void *)ARUIRingsView.withRingGroupThickness(_:)();

  [v15 preferredActivityRingInterspacingForDiameter:v12];
  id v17 = [v13 centerXAnchor];
  id v18 = [v1 contentView];
  id v19 = [v18 centerXAnchor];

  id v86 = [v17 constraintEqualToAnchor:v19];
  id v20 = [v13 heightAnchor];
  id v84 = [v20 constraintEqualToConstant:v12 + 2.0];

  LODWORD(v21) = 1148829696;
  [v84 setPriority:v21];
  id v22 = [v13 widthAnchor];
  id v23 = [v13 heightAnchor];
  id v82 = [v22 constraintEqualToAnchor:v23];

  id v24 = [v13 topAnchor];
  id v25 = [v1 contentView];
  id v26 = [v25 topAnchor];

  id v80 = [v24 constraintEqualToAnchor:v26 constant:20.0];
  id v27 = [v13 bottomAnchor];
  id v28 = [v1 contentView];
  id v29 = [v28 bottomAnchor];

  id v78 = [v27 constraintLessThanOrEqualToAnchor:v29 constant:-20.0];
  id v30 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_pauseRingsLabelsView];
  id v31 = [v30 centerXAnchor];
  id v32 = [v1 contentView];
  id v33 = [v32 centerXAnchor];

  id v76 = [v31 constraintEqualToAnchor:v33];
  id v34 = [v30 centerYAnchor];
  id v35 = [v1 contentView];
  id v36 = [v35 centerYAnchor];

  id v75 = [v34 constraintEqualToAnchor:v36];
  id v37 = [v30 widthAnchor];
  id v38 = [v1 contentView];
  id v39 = [v38 widthAnchor];

  id v74 = [v37 constraintEqualToAnchor:v39 multiplier:0.5];
  id v40 = [v30 bottomAnchor];
  id v41 = [v1 contentView];
  id v42 = [v41 topAnchor];

  id v99 = [v40 constraintGreaterThanOrEqualToAnchor:v42 constant:20.0];
  id v43 = [v30 bottomAnchor];
  id v44 = [v1 contentView];
  id v45 = [v44 bottomAnchor];

  id v97 = [v43 constraintLessThanOrEqualToAnchor:v45 constant:-20.0];
  char v46 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_pauseRingsDescriptionLabel];
  id v47 = [v46 topAnchor];
  id v48 = [v30 topAnchor];
  id v95 = [v47 constraintEqualToAnchor:v48];

  id v49 = [v46 leadingAnchor];
  id v50 = [v30 leadingAnchor];
  id v94 = [v49 constraintEqualToAnchor:v50];

  id v51 = [v46 trailingAnchor];
  id v52 = [v30 trailingAnchor];
  id v93 = [v51 constraintEqualToAnchor:v52];

  uint64_t v53 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_pauseRingsResumeDateLabel];
  id v54 = [v53 topAnchor];
  id v55 = [v46 bottomAnchor];
  id v92 = [v54 constraintEqualToAnchor:v55 constant:6.0];

  id v56 = [v53 leadingAnchor];
  id v57 = [v30 leadingAnchor];
  id v91 = [v56 constraintEqualToAnchor:v57];

  id v58 = [v53 trailingAnchor];
  id v59 = [v30 trailingAnchor];
  id v90 = [v58 constraintEqualToAnchor:v59];

  id v60 = [v53 bottomAnchor];
  id v61 = [v30 bottomAnchor];
  id v89 = [v60 constraintEqualToAnchor:v61];

  id v73 = self;
  uint64_t v88 = OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_layoutConstraints;
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v73 deactivateConstraints:isa];

  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v63 = swift_allocObject();
  *(_OWORD *)(v63 + 16) = xmmword_100760BE0;
  *(void *)(v63 + 32) = v86;
  *(void *)(v63 + 40) = v80;
  *(void *)(v63 + 48) = v84;
  *(void *)(v63 + 56) = v82;
  *(void *)(v63 + 64) = v78;
  *(void *)(v63 + 72) = v76;
  *(void *)(v63 + 80) = v75;
  *(void *)(v63 + 88) = v74;
  *(void *)(v63 + 96) = v99;
  *(void *)(v63 + 104) = v97;
  *(void *)(v63 + 112) = v95;
  *(void *)(v63 + 120) = v94;
  *(void *)(v63 + 128) = v93;
  *(void *)(v63 + 136) = v92;
  *(void *)(v63 + 144) = v91;
  *(void *)(v63 + 152) = v90;
  *(void *)(v63 + 160) = v89;
  uint64_t v101 = v63;
  specialized Array._endMutation()();
  *(void *)&v1[v88] = v101;
  id v72 = v86;
  id v87 = v80;
  id v81 = v84;
  id v71 = v82;
  id v85 = v78;
  id v83 = v76;
  id v79 = v75;
  id v64 = v74;
  id v77 = v99;
  id v98 = v97;
  id v96 = v95;
  id v65 = v94;
  id v66 = v93;
  id v67 = v92;
  id v68 = v91;
  id v69 = v90;
  id v70 = v89;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v100.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v73 activateConstraints:v100.super.isa];
}

void sub_1003AF2A4(uint64_t a1, void *a2, void *a3, int a4, char a5)
{
  uint64_t v6 = v5;
  LODWORD(v65) = a4;
  uint64_t v11 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v63 = v14;
  uint64_t v64 = v15;
  __chkstk_darwin(v14);
  id v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v62 = (char *)&v59 - v19;
  uint64_t v20 = OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_activitySummary;
  double v21 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_activitySummary);
  *(void *)(v6 + OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_activitySummary) = a2;
  id v22 = a2;

  id v23 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_pauseRingsCoordinator);
  *(void *)(v6 + OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_pauseRingsCoordinator) = a3;
  id v24 = a3;

  id v66 = a2;
  if (a2)
  {
    unsigned int v25 = [v24 isPausedForActivitySummary:v22];
    *(unsigned char *)(v6 + OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_isPaused) = v25;
    if (v25) {
      goto LABEL_3;
    }
LABEL_10:
    [*(id *)(v6 + OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_pauseRingsDescriptionLabel) setHidden:1];
    [*(id *)(v6 + OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_pauseRingsResumeDateLabel) setHidden:1];
    sub_1003AE35C();
    id v51 = v66;
    goto LABEL_16;
  }
  unsigned __int8 v50 = [v24 isPausedForActivitySummaryCacheIndex:a1];
  *(unsigned char *)(v6 + OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_isPaused) = v50;
  if ((v50 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_3:
  uint64_t v61 = v20;
  id v26 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_pauseRingsDescriptionLabel);
  [v26 setHidden:0];
  if (a5)
  {
    id v60 = v22;
    id v27 = v26;
    id v65 = self;
    id v28 = [v65 mainBundle];
    NSString v29 = String._bridgeToObjectiveC()();
    id v30 = [v28 localizedStringForKey:v29 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();

    NSString v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v27 setText:v31];

    id v32 = [v24 resumeDate];
    if (v32)
    {
      id v33 = v32;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v35 = v63;
      uint64_t v34 = v64;
      id v36 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
      v36(v13, v17, v63);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v13, 0, 1, v35);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v13, 1, v35) != 1)
      {
        id v37 = v62;
        v36(v62, v13, v35);
        if (qword_10094AAA8 != -1) {
          swift_once();
        }
        id v38 = (void *)qword_10095A648;
        Class isa = Date._bridgeToObjectiveC()().super.isa;
        id v40 = [v38 stringFromDate:isa];

        uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v43 = v42;

        id v44 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_pauseRingsResumeDateLabel);
        [v44 setHidden:0];
        id v45 = [v65 mainBundle];
        NSString v46 = String._bridgeToObjectiveC()();
        id v47 = [v45 localizedStringForKey:v46 value:0 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_1000AFA94((uint64_t *)&unk_1009546D0);
        uint64_t v48 = swift_allocObject();
        *(_OWORD *)(v48 + 16) = xmmword_1007509E0;
        *(void *)(v48 + 56) = &type metadata for String;
        *(void *)(v48 + 64) = sub_1000AA64C();
        *(void *)(v48 + 32) = v41;
        *(void *)(v48 + 40) = v43;
        String.init(format:_:)();
        swift_bridgeObjectRelease();
        NSString v49 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v44 setText:v49];

        (*(void (**)(char *, uint64_t))(v64 + 8))(v37, v35);
        goto LABEL_14;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56))(v13, 1, 1, v63);
    }
    sub_10023636C((uint64_t)v13);
LABEL_14:
    id v22 = v60;
    goto LABEL_15;
  }
  [*(id *)(v6 + OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_pauseRingsResumeDateLabel) setHidden:1];
  id v52 = [self mainBundle];
  NSString v53 = String._bridgeToObjectiveC()();
  id v54 = [v52 localizedStringForKey:v53 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRelease();

  NSString v55 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v26 setText:v55];

LABEL_15:
  id v51 = v66;
  sub_1003AE7F8();
  uint64_t v20 = v61;
LABEL_16:
  uint64_t v56 = OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_isPaused;
  if (v51) {
    [v22 setDeprecatedPauseForInternalSwiftClient:*(unsigned __int8 *)(v6 + OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_isPaused)];
  }
  id v57 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_ringsView);
  [v57 hk_configureWithActivitySummary:*(void *)(v6 + v20) animated:1];
  id v58 = [v57 ringGroup];
  [v58 setIsPaused:*(unsigned __int8 *)(v6 + v56)];
}

uint64_t sub_1003AFA08(void *a1)
{
  id v2 = v1;
  uint64_t v25 = OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_activitySummary;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_activitySummary] = 0;
  uint64_t v26 = OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_pauseRingsCoordinator;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_pauseRingsCoordinator] = 0;
  v1[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_isPaused] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_layoutConstraints] = _swiftEmptyArrayStorage;
  uint64_t v3 = OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_pauseRingsLabelsView;
  uint64_t v23 = OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_pauseRingsLabelsView;
  id v4 = objc_allocWithZone((Class)UIView);
  uint64_t v5 = v2;
  id v6 = [v4 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v7 = UIView.forAutoLayout()();

  *(void *)&v2[v3] = v7;
  uint64_t v8 = OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_pauseRingsDescriptionLabel;
  id v9 = [objc_allocWithZone((Class)UILabel) init];
  CGFloat v10 = self;
  id v11 = [v10 labelColor];
  uint64_t v12 = (void *)UILabel.withTextColor(_:)();

  [v12 setLineBreakMode:0];
  [v12 setNumberOfLines:0];
  sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  id v13 = (void *)static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)();
  uint64_t v14 = (void *)UILabel.withFont(_:)();

  [v14 setTextAlignment:1];
  [v14 setHidden:1];
  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v5[v8] = v14;
  uint64_t v15 = OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_pauseRingsResumeDateLabel;
  id v16 = [objc_allocWithZone((Class)UILabel) init];
  id v17 = [v10 secondaryLabelColor];
  uint64_t v18 = (void *)UILabel.withTextColor(_:)();

  [v18 setLineBreakMode:0];
  [v18 setNumberOfLines:0];
  id v19 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
  uint64_t v20 = (void *)UILabel.withFont(_:)();

  [v20 setTextAlignment:1];
  [v20 setHidden:1];
  [v20 setTranslatesAutoresizingMaskIntoConstraints:0];

  *(void *)&v5[v15] = v20;
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_diameterScreenRatio] = 0x3FE596DE8CA11BFDLL;
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_margin] = 0x402E000000000000;
  v5[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_isWheelchair] = 0;

  swift_bridgeObjectRelease();
  double v21 = *(void **)&v5[v15];

  type metadata accessor for DayViewActivityRingsTableViewCell();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_1003AFDDC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DayViewActivityRingsTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for DayViewActivityRingsTableViewCell()
{
  return self;
}

void destroy for TrendsCardFactory(uint64_t a1)
{
  swift_bridgeObjectRelease();
  objc_super v2 = *(void **)(a1 + 64);
}

uint64_t initializeWithCopy for TrendsCardFactory(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  id v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v7;
  id v8 = v3;
  id v9 = v4;
  id v10 = v5;
  swift_bridgeObjectRetain();
  id v11 = v7;
  return a1;
}

uint64_t assignWithCopy for TrendsCardFactory(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  id v10 = *(void **)(a2 + 16);
  id v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  long long v13 = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v13;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void **)(a2 + 64);
  uint64_t v15 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v14;
  id v16 = v14;

  return a1;
}

uint64_t assignWithTake for TrendsCardFactory(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);

  return a1;
}

ValueMetadata *type metadata accessor for TrendsCardFactory()
{
  return &type metadata for TrendsCardFactory;
}

BOOL sub_1003B00E0(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = result;
  if (*(unsigned char *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 33; ; ++i)
  {
    uint64_t v5 = i - 31;
    if (__OFADD__(i - 32, 1)) {
      break;
    }
    int v6 = *(unsigned __int8 *)(a2 + i);
    uint64_t result = v6 == v3;
    if (v6 == v3 || v5 == v2) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1003B0140(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + 16);
  if (v4)
  {
    BOOL v8 = a1 != 7;
    BOOL v9 = a1 != 6;
    BOOL v10 = a1 != 5;
    BOOL v11 = a1 != 4;
    BOOL v12 = a1 != 3;
    BOOL v13 = a1 != 2;
    BOOL v14 = a1 != 1;
    if (a2)
    {
      BOOL v8 = 1;
      BOOL v9 = 1;
      BOOL v10 = 1;
      BOOL v11 = 1;
      BOOL v12 = 1;
      BOOL v13 = 1;
      BOOL v14 = 1;
    }
    if (a3 != 3) {
      BOOL v8 = 1;
    }
    BOOL v30 = v8;
    char v15 = a3 != 3 || v9;
    char v29 = v15;
    char v16 = a3 != 3 || v10;
    char v28 = v16;
    char v17 = a3 != 3 || v11;
    char v18 = a3 != 3 || v12;
    char v19 = a3 != 3 || v13;
    char v20 = a3 != 3 || v14;
    if (a2 | a1) {
      BOOL v21 = 0;
    }
    else {
      BOOL v21 = a3 == 3;
    }
    id v22 = (unsigned __int8 *)(a4 + 48);
    while (1)
    {
      uint64_t v23 = *((void *)v22 - 2);
      uint64_t v24 = *((void *)v22 - 1);
      int v25 = *v22;
      v22 += 24;
      switch(v25)
      {
        case 1:
          if (a3 == 1)
          {
            BOOL v26 = v23 == a1 && v24 == a2;
            if (v26 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
              return 1;
            }
          }
          goto LABEL_30;
        case 2:
          if (a3 != 2) {
            goto LABEL_30;
          }
          goto LABEL_29;
        case 3:
          switch(v23)
          {
            case 1:
              if ((v20 & 1) == 0) {
                return 1;
              }
              goto LABEL_30;
            case 2:
              if ((v19 & 1) == 0) {
                return 1;
              }
              goto LABEL_30;
            case 3:
              if ((v18 & 1) == 0) {
                return 1;
              }
              goto LABEL_30;
            case 4:
              if ((v17 & 1) == 0) {
                return 1;
              }
              goto LABEL_30;
            case 5:
              if ((v28 & 1) == 0) {
                return 1;
              }
              goto LABEL_30;
            case 6:
              if ((v29 & 1) == 0) {
                return 1;
              }
              goto LABEL_30;
            case 7:
              if (!v30) {
                return 1;
              }
              goto LABEL_30;
            default:
              if (v21) {
                return 1;
              }
              goto LABEL_30;
          }
        default:
          if (a3) {
            goto LABEL_30;
          }
LABEL_29:
          if (v23 == a1) {
            return 1;
          }
LABEL_30:
          if (!--v4) {
            return 0;
          }
          break;
      }
    }
  }
  return 0;
}

uint64_t sub_1003B0364(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
      int v6 = v5;
      sub_1003B1708();
      char v7 = static NSObject.== infix(_:_:)();

      if (v7)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1) {
        goto LABEL_18;
      }
      if (v4) {
        break;
      }
      unint64_t v4 = 5;
      while (1)
      {
        unint64_t v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1)) {
          break;
        }
        id v13 = *(id *)(a2 + 8 * v4);
        char v14 = static NSObject.== infix(_:_:)();

        if (v14) {
          goto LABEL_6;
        }
        ++v4;
        if (v12 == v3) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    uint64_t v9 = 1;
    while (1)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      char v11 = static NSObject.== infix(_:_:)();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++v9;
      if (v10 == v3) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1003B04DC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    uint64_t v3 = (unsigned __int8 *)(a2 + 32);
    while (1)
    {
      int v5 = *v3++;
      int v4 = v5;
      switch(v5)
      {
        case '\'':
          if (a1 != 39) {
            goto LABEL_4;
          }
          return 1;
        case '(':
          if (a1 == 40) {
            return 1;
          }
          goto LABEL_4;
        case ')':
          if (a1 == 41) {
            return 1;
          }
          goto LABEL_4;
        case '*':
          if (a1 == 42) {
            return 1;
          }
          goto LABEL_4;
        case '+':
          if (a1 == 43) {
            return 1;
          }
          goto LABEL_4;
        case ',':
          if (a1 == 44) {
            return 1;
          }
          goto LABEL_4;
        case '-':
          if (a1 == 45) {
            return 1;
          }
          goto LABEL_4;
        case '.':
          if (a1 == 46) {
            return 1;
          }
          goto LABEL_4;
        case '/':
          if (a1 == 47) {
            return 1;
          }
          goto LABEL_4;
        case '0':
          if (a1 == 48) {
            return 1;
          }
          goto LABEL_4;
        case '1':
          if (a1 == 49) {
            return 1;
          }
          goto LABEL_4;
        case '2':
          if (a1 != 50) {
            goto LABEL_4;
          }
          return 1;
        default:
          if (a1 - 51 <= 0xFFFFFFF3 && v4 == a1) {
            return 1;
          }
LABEL_4:
          if (!--v2) {
            return 0;
          }
          break;
      }
    }
  }
  return 0;
}

uint64_t sub_1003B0608(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1003B06D0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_69;
  }
  uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v4)
  {
    while (1)
    {
      uint64_t v5 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      uint64_t v33 = v4;
      if ((a2 & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v7 = 0;
      while (1)
      {
        uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v9 = v7 + 1;
        if (__OFADD__(v7, 1)) {
          break;
        }
        uint64_t v10 = v8;
        BOOL v11 = *(void *)(v8 + 16) == v5 && *(void *)(v8 + 24) == v6;
        if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          goto LABEL_5;
        }
        uint64_t v12 = *(unsigned char *)(v10 + 32) ? 0x6D6F74737563 : 0x647261646E617473;
        unint64_t v13 = *(unsigned char *)(v10 + 32) ? 0xE600000000000000 : 0xE800000000000000;
        uint64_t v14 = *(unsigned char *)(a1 + 32) ? 0x6D6F74737563 : 0x647261646E617473;
        unint64_t v15 = *(unsigned char *)(a1 + 32) ? 0xE600000000000000 : 0xE800000000000000;
        if (v12 == v14 && v13 == v15)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v17 & 1) == 0) {
            goto LABEL_5;
          }
        }
        if (*(void *)(v10 + 40) != *(void *)(a1 + 40))
        {
LABEL_5:
          swift_unknownObjectRelease();
          goto LABEL_6;
        }
        uint64_t v18 = *(void *)(v10 + 48);
        uint64_t v19 = *(void *)(a1 + 48);
        swift_unknownObjectRelease();
        if (v18 == v19) {
          goto LABEL_66;
        }
LABEL_6:
        ++v7;
        if (v9 == v33) {
          goto LABEL_70;
        }
      }
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      swift_bridgeObjectRetain();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      if (!v4) {
        goto LABEL_70;
      }
    }
    uint64_t v20 = 0;
    do
    {
      uint64_t v21 = v20 + 1;
      if (__OFADD__(v20, 1)) {
        goto LABEL_68;
      }
      uint64_t v22 = *(void *)(a2 + 8 * v20 + 32);
      BOOL v23 = *(void *)(v22 + 16) == v5 && *(void *)(v22 + 24) == v6;
      if (!v23 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_37;
      }
      if (*(unsigned char *)(v22 + 32)) {
        uint64_t v24 = 0x6D6F74737563;
      }
      else {
        uint64_t v24 = 0x647261646E617473;
      }
      if (*(unsigned char *)(v22 + 32)) {
        unint64_t v25 = 0xE600000000000000;
      }
      else {
        unint64_t v25 = 0xE800000000000000;
      }
      if (*(unsigned char *)(a1 + 32)) {
        uint64_t v26 = 0x6D6F74737563;
      }
      else {
        uint64_t v26 = 0x647261646E617473;
      }
      if (*(unsigned char *)(a1 + 32)) {
        unint64_t v27 = 0xE600000000000000;
      }
      else {
        unint64_t v27 = 0xE800000000000000;
      }
      if (v24 == v26 && v25 == v27)
      {
        swift_retain();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v29 & 1) == 0) {
          goto LABEL_36;
        }
      }
      if (*(void *)(v22 + 40) != *(void *)(a1 + 40))
      {
LABEL_36:
        swift_release();
        uint64_t v4 = v33;
        goto LABEL_37;
      }
      uint64_t v30 = *(void *)(v22 + 48);
      uint64_t v31 = *(void *)(a1 + 48);
      swift_release();
      BOOL v11 = v30 == v31;
      uint64_t v4 = v33;
      if (v11)
      {
LABEL_66:
        swift_bridgeObjectRelease();
        return 1;
      }
LABEL_37:
      ++v20;
    }
    while (v21 != v4);
  }
LABEL_70:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1003B09BC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    uint64_t v4 = (_WORD *)(a3 + 40);
    while (1)
    {
      unsigned int v5 = (unsigned __int16)*v4;
      switch(v5 >> 8)
      {
        case 2u:
          if ((a2 & 0xFF00) != 0x200) {
            goto LABEL_4;
          }
          return 1;
        case 3u:
          if ((a2 & 0xFF00) == 0x300) {
            return 1;
          }
          goto LABEL_4;
        case 4u:
          if ((a2 & 0xFF00) == 0x400) {
            return 1;
          }
          goto LABEL_4;
        case 5u:
          if ((a2 & 0xFF00) == 0x500) {
            return 1;
          }
          goto LABEL_4;
        case 6u:
          if ((a2 & 0xFF00) != 0x600) {
            goto LABEL_4;
          }
          return 1;
        default:
          if ((BYTE1(a2) - 7) > 0xFAu || *((void *)v4 - 1) != a1) {
            goto LABEL_4;
          }
          if (*v4 == 2)
          {
            if (a2 == 2 && (((a2 ^ v5) >> 8) & 1) == 0) {
              return 1;
            }
          }
          else if (a2 != 2 && ((a2 ^ ((v5 & 1) == 0)) & 1) != 0 && (((a2 ^ v5) >> 8) & 1) == 0)
          {
            return 1;
          }
LABEL_4:
          v4 += 8;
          if (!--v3) {
            return 0;
          }
          break;
      }
    }
  }
  return 0;
}

uint64_t sub_1003B0AF0(uint64_t a1, unint64_t a2, char a3, uint64_t a4)
{
  if (*(void *)(a4 + 16))
  {
    Hasher.init(_seed:)();
    v37._countAndFlagsBits = a1;
    v37._object = (void *)a2;
    sub_1000932C0(v37, a3);
    String.hash(into:)();
    swift_bridgeObjectRelease();
    if (!a3 || a3 == 2)
    {
      Hasher._combine(_:)(a1);
    }
    else if (a3 == 1)
    {
      String.hash(into:)();
    }
    Swift::Int v8 = Hasher._finalize()();
    uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v10 = v8 & ~v9;
    uint64_t v11 = a4 + 56;
    if ((*(void *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
    {
      uint64_t v12 = ~v9;
      uint64_t v13 = *(void *)(a4 + 48);
      BOOL v14 = a1 != 7;
      BOOL v15 = a1 != 6;
      BOOL v16 = a1 != 5;
      BOOL v17 = a1 != 4;
      BOOL v18 = a1 != 3;
      BOOL v19 = a1 != 2;
      BOOL v20 = a1 == 1;
      if (a2)
      {
        BOOL v14 = 1;
        BOOL v15 = 1;
        BOOL v16 = 1;
        BOOL v17 = 1;
        BOOL v18 = 1;
        BOOL v19 = 1;
        BOOL v20 = 0;
      }
      if (a3 != 3) {
        BOOL v20 = 0;
      }
      BOOL v36 = v20;
      if (a3 != 3) {
        BOOL v14 = 1;
      }
      BOOL v35 = v14;
      char v21 = a3 != 3 || v15;
      char v34 = v21;
      char v22 = a3 != 3 || v16;
      char v23 = a3 != 3 || v17;
      char v32 = v23;
      char v33 = v22;
      char v24 = a3 != 3 || v18;
      char v31 = v24;
      char v25 = a3 != 3 || v19;
      if (a2 | a1) {
        BOOL v26 = 0;
      }
      else {
        BOOL v26 = a3 == 3;
      }
      while (1)
      {
        unint64_t v27 = (uint64_t *)(v13 + 24 * v10);
        uint64_t v28 = *v27;
        switch(*((unsigned char *)v27 + 16))
        {
          case 1:
            if (a3 == 1)
            {
              BOOL v29 = v28 == a1 && v27[1] == a2;
              if (v29 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                return 1;
              }
            }
            goto LABEL_34;
          case 2:
            if (a3 != 2) {
              goto LABEL_34;
            }
            goto LABEL_33;
          case 3:
            switch(v28)
            {
              case 1:
                if (v36) {
                  return 1;
                }
                goto LABEL_34;
              case 2:
                if ((v25 & 1) == 0) {
                  return 1;
                }
                goto LABEL_34;
              case 3:
                if ((v31 & 1) == 0) {
                  return 1;
                }
                goto LABEL_34;
              case 4:
                if ((v32 & 1) == 0) {
                  return 1;
                }
                goto LABEL_34;
              case 5:
                if ((v33 & 1) == 0) {
                  return 1;
                }
                goto LABEL_34;
              case 6:
                if ((v34 & 1) == 0) {
                  return 1;
                }
                goto LABEL_34;
              case 7:
                if (!v35) {
                  return 1;
                }
                goto LABEL_34;
              default:
                if (v26) {
                  return 1;
                }
                goto LABEL_34;
            }
          default:
            if (a3) {
              goto LABEL_34;
            }
LABEL_33:
            if (v28 == a1) {
              return 1;
            }
LABEL_34:
            unint64_t v10 = (v10 + 1) & v12;
            if (((*(void *)(v11 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
              return 0;
            }
            break;
        }
      }
    }
  }
  return 0;
}

uint64_t sub_1003B0DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          BOOL v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1003B0F28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for Feature();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::Int v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_1003B16C4(&qword_10095A6D8),
        uint64_t v7 = dispatch thunk of Hashable._rawHashValue(seed:)(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    BOOL v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_1003B16C4(&qword_10095A6E0);
      char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

int64_t sub_1003B1114(BOOL a1, char a2, char a3)
{
  char v7 = a3 & 1;
  uint64_t v8 = *v3;
  unint64_t v9 = (uint64_t *)(*v3 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidUpTrends);
  swift_beginAccess();
  if (sub_1003B00E0(a1, *v9)
    || (uint64_t v10 = (uint64_t *)(v8 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidDownTrends),
        swift_beginAccess(),
        sub_1003B00E0(a1, *v10)))
  {
    sub_1000AFA94(&qword_10094E710);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1007509E0;
    *(unsigned char *)(inited + 32) = a1;
    sub_1000D4E38((uint64_t)v3);
    BOOL v12 = sub_1000D4E90(inited, (uint64_t)v3, a2 & 1, v7);
    if (!v4)
    {
      int64_t v14 = (int64_t)v12;
      goto LABEL_7;
    }
    sub_1000D4DE0((uint64_t)v3);
    swift_errorRelease();
    swift_setDeallocating();
  }
  sub_1000AFA94(&qword_10094E710);
  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1007509E0;
  *(unsigned char *)(v13 + 32) = a1;
  sub_1000D4E38((uint64_t)v3);
  int64_t v14 = sub_1000A9768(v13, (uint64_t)v3, a2 & 1, v7);
LABEL_7:
  sub_1000D4DE0((uint64_t)v3);
  swift_setDeallocating();
  return v14;
}

uint64_t sub_1003B12A4(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1003B12B4(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

unsigned char **sub_1003B12F0(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  *uint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t sub_1003B1300(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1003B1328(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_10008F1F4(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1003B13A0(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = String.UTF16View.index(_:offsetBy:)();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = String.UTF8View._foreignIndex(_:offsetBy:)();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_1003B141C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000AFA94(&qword_10095A6D0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_1003B156C(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t sub_1003B1610(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_1003B163C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1003B1664@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1003B1694@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1003B16C4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Feature();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1003B1708()
{
  unint64_t result = qword_100955BE0;
  if (!qword_100955BE0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100955BE0);
  }
  return result;
}

void destroy for IntervalsActiveTargetZoneView(uint64_t a1)
{
  swift_release();
  swift_release();

  uint64_t v2 = *(void **)(a1 + 32);
}

uint64_t initializeWithCopy for IntervalsActiveTargetZoneView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_retain();
  swift_retain();
  id v6 = v4;
  id v7 = v5;
  return a1;
}

void *assignWithCopy for IntervalsActiveTargetZoneView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a2[3];
  uint64_t v5 = (void *)a1[3];
  a1[3] = v4;
  id v6 = v4;

  id v7 = (void *)a2[4];
  int64_t v8 = (void *)a1[4];
  a1[4] = v7;
  id v9 = v7;

  a1[5] = a2[5];
  a1[6] = a2[6];
  return a1;
}

uint64_t assignWithTake for IntervalsActiveTargetZoneView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();

  uint64_t v4 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for IntervalsActiveTargetZoneView()
{
  return &type metadata for IntervalsActiveTargetZoneView;
}

uint64_t sub_1003B190C()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1003B1928()
{
  uint64_t v1 = type metadata accessor for TargetZone.ZoneType();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  TargetZone.type.getter();
  int v5 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, v1);
  if (v5 == enum case for TargetZone.ZoneType.rollingPace(_:))
  {
    long long v19 = *v0;
    swift_retain();
    MetricsPublisher.rollingPace.getter();
LABEL_7:
    double v7 = v6;
    sub_1000E2384((uint64_t)&v19);
    return v7;
  }
  if (v5 == enum case for TargetZone.ZoneType.averagePace(_:))
  {
    long long v19 = *v0;
    swift_retain();
    MetricsPublisher.averagePace.getter();
    goto LABEL_7;
  }
  if (v5 == enum case for TargetZone.ZoneType.instantaneousPace(_:))
  {
    long long v19 = *v0;
    swift_retain();
    MetricsPublisher.currentPace.getter();
    goto LABEL_7;
  }
  if (v5 == enum case for TargetZone.ZoneType.instantaneousCadence(_:))
  {
    long long v19 = *v0;
    swift_retain();
    uint64_t v9 = MetricsPublisher.currentCadence.getter();
LABEL_13:
    uint64_t v11 = v9;
    char v12 = v10;
    sub_1000E2384((uint64_t)&v19);
    double v13 = *(double *)&v11;
    BOOL v14 = (v12 & 1) == 0;
    goto LABEL_19;
  }
  if (v5 == enum case for TargetZone.ZoneType.averageCadence(_:))
  {
    long long v19 = *v0;
    swift_retain();
    uint64_t v9 = MetricsPublisher.averageCadence.getter();
    goto LABEL_13;
  }
  if (v5 == enum case for TargetZone.ZoneType.instantaneousPower(_:))
  {
    long long v19 = *v0;
    swift_retain();
    MetricsPublisher.powerMetricsPublisher.getter();
    sub_1000E2384((uint64_t)&v19);
    uint64_t v15 = PowerMetricsPublisher.currentPower.getter();
LABEL_18:
    uint64_t v17 = v15;
    char v18 = v16;
    swift_release();
    double v13 = *(double *)&v17;
    BOOL v14 = (v18 & 1) == 0;
LABEL_19:
    if (v14) {
      return v13;
    }
    else {
      return 0.0;
    }
  }
  if (v5 == enum case for TargetZone.ZoneType.averagePower(_:))
  {
    long long v19 = *v0;
    swift_retain();
    MetricsPublisher.powerMetricsPublisher.getter();
    sub_1000E2384((uint64_t)&v19);
    uint64_t v15 = PowerMetricsPublisher.averagePower.getter();
    goto LABEL_18;
  }
  double v7 = 0.0;
  if (v5 != enum case for TargetZone.ZoneType.none(_:)) {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v7;
}

BOOL sub_1003B1BF0()
{
  uint64_t v0 = type metadata accessor for TargetZone.ZoneType();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v4 = dispatch thunk of TargetZone.isSingleThreshold.getter();
  double v5 = sub_1003B1928();
  dispatch thunk of TargetZone.min.getter();
  if (v4)
  {
    double v7 = vabdd_f64(v5, v6);
    TargetZone.type.getter();
    int v8 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
    if (v8 == enum case for TargetZone.ZoneType.rollingPace(_:)
      || v8 == enum case for TargetZone.ZoneType.averagePace(_:)
      || v8 == enum case for TargetZone.ZoneType.instantaneousPace(_:))
    {
      v9.n128_u64[0] = 0x3FCC9C4DA9003EEALL;
    }
    else
    {
      v9.n128_u64[0] = 5.0;
      if (v8 != enum case for TargetZone.ZoneType.instantaneousCadence(_:)
        && v8 != enum case for TargetZone.ZoneType.averageCadence(_:)
        && v8 != enum case for TargetZone.ZoneType.instantaneousPower(_:)
        && v8 != enum case for TargetZone.ZoneType.averagePower(_:))
      {
        (*(void (**)(char *, uint64_t, __n128))(v1 + 8))(v3, v0, v9);
        v9.n128_u64[0] = 0;
      }
    }
  }
  else
  {
    if (v6 > v5) {
      return 0;
    }
    double v7 = sub_1003B1928();
    dispatch thunk of TargetZone.max.getter();
  }
  return v7 <= v9.n128_f64[0];
}

uint64_t sub_1003B1DD4()
{
  double v0 = sub_1003B1928();
  dispatch thunk of TargetZone.max.getter();
  if (v1 < v0) {
    return 1;
  }
  double v3 = sub_1003B1928();
  dispatch thunk of TargetZone.min.getter();
  if (v3 >= v4)
  {
    if (sub_1003B1BF0())
    {
      double v5 = sub_1003B1928();
      dispatch thunk of TargetZone.min.getter();
      double v7 = v5 - v6;
      dispatch thunk of TargetZone.max.getter();
      double v9 = v8;
      dispatch thunk of TargetZone.min.getter();
      *(double *)&uint64_t result = v7 / (v9 - v10);
    }
    else
    {
      *(double *)&uint64_t result = 0.0;
    }
  }
  else
  {
    *(double *)&uint64_t result = 0.0;
  }
  return result;
}

uint64_t sub_1003B1EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_10095A700);
  __chkstk_darwin(v3 - 8);
  uint64_t v36 = (uint64_t)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  double v7 = (char *)&v31 - v6;
  uint64_t v8 = type metadata accessor for Color.RGBColorSpace();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1000AFA94(&qword_10095A708);
  uint64_t v12 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  BOOL v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000AFA94(&qword_10095A710);
  __chkstk_darwin(v32);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  long long v19 = (char *)&v31 - v18;
  __chkstk_darwin(v20);
  char v22 = (char *)&v31 - v21;
  uint64_t v34 = a1;
  sub_1003B1BF0();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for Color.RGBColorSpace.sRGB(_:), v8);
  *(void *)&long long v37 = Color.init(_:red:green:blue:opacity:)();
  sub_1000AFA94(&qword_10095A718);
  sub_1003B32E8();
  View.cornerRadius(_:corners:)();
  swift_release();
  if (qword_10094A7D0 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v23 = v33;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v19, v14, v33);
  char v24 = &v19[*(int *)(v32 + 36)];
  long long v25 = v38;
  *(_OWORD *)char v24 = v37;
  *((_OWORD *)v24 + 1) = v25;
  *((_OWORD *)v24 + 2) = v39;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v23);
  sub_1000AEEC8((uint64_t)v19, (uint64_t)v22, &qword_10095A710);
  *(void *)double v7 = static VerticalAlignment.center.getter();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  uint64_t v26 = sub_1000AFA94(&qword_10095A730);
  sub_1003B2310(v34, (uint64_t)&v7[*(int *)(v26 + 44)]);
  sub_1000AEF2C((uint64_t)v22, (uint64_t)v16, &qword_10095A710);
  uint64_t v27 = v36;
  sub_1000AEF2C((uint64_t)v7, v36, &qword_10095A700);
  uint64_t v28 = v35;
  sub_1000AEF2C((uint64_t)v16, v35, &qword_10095A710);
  uint64_t v29 = sub_1000AFA94(&qword_10095A738);
  sub_1000AEF2C(v27, v28 + *(int *)(v29 + 48), &qword_10095A700);
  sub_10008DB18((uint64_t)v7, &qword_10095A700);
  sub_10008DB18((uint64_t)v22, &qword_10095A710);
  sub_10008DB18(v27, &qword_10095A700);
  return sub_10008DB18((uint64_t)v16, &qword_10095A710);
}

uint64_t sub_1003B2310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v71 = a2;
  uint64_t v68 = type metadata accessor for Color.RGBColorSpace();
  uint64_t v74 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  id v70 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_10095A740);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_10095A748);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_10095A750);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1000AFA94(&qword_10095A758);
  __chkstk_darwin(v65);
  BOOL v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1000AFA94(&qword_10095A760);
  __chkstk_darwin(v67);
  uint64_t v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000AFA94(&qword_10095A768);
  __chkstk_darwin(v66);
  uint64_t v69 = (uint64_t)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v65 - v19;
  __chkstk_darwin(v21);
  uint64_t v72 = (uint64_t)&v65 - v22;
  *(void *)uint64_t v6 = static HorizontalAlignment.leading.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v23 = (uint64_t *)&v6[*(int *)(sub_1000AFA94(&qword_10095A770) + 44)];
  uint64_t v73 = a1;
  sub_1003B2A24(a1, v23);
  char v24 = static Edge.Set.bottom.getter();
  if (qword_10094A7C8 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  sub_1000AEF2C((uint64_t)v6, (uint64_t)v9, &qword_10095A740);
  uint64_t v33 = &v9[*(int *)(v7 + 36)];
  *uint64_t v33 = v24;
  *((void *)v33 + 1) = v26;
  *((void *)v33 + 2) = v28;
  *((void *)v33 + 3) = v30;
  *((void *)v33 + 4) = v32;
  v33[40] = 0;
  sub_10008DB18((uint64_t)v6, &qword_10095A740);
  char v34 = static Edge.Set.leading.getter();
  if (qword_10094AFD0 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  sub_1000AEF2C((uint64_t)v9, (uint64_t)v12, &qword_10095A748);
  uint64_t v43 = &v12[*(int *)(v10 + 36)];
  *uint64_t v43 = v34;
  *((void *)v43 + 1) = v36;
  *((void *)v43 + 2) = v38;
  *((void *)v43 + 3) = v40;
  *((void *)v43 + 4) = v42;
  v43[40] = 0;
  sub_10008DB18((uint64_t)v9, &qword_10095A748);
  sub_1000AEF2C((uint64_t)v12, (uint64_t)v14, &qword_10095A750);
  *(_OWORD *)&v14[*(int *)(v65 + 36)] = xmmword_1007619C0;
  sub_10008DB18((uint64_t)v12, &qword_10095A750);
  sub_1003B1BF0();
  uint64_t v44 = enum case for Color.RGBColorSpace.sRGB(_:);
  id v45 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 104);
  NSString v46 = v70;
  uint64_t v47 = v68;
  v74 += 104;
  v45(v70, enum case for Color.RGBColorSpace.sRGB(_:), v68);
  uint64_t v48 = Color.init(_:red:green:blue:opacity:)();
  sub_1000AEF2C((uint64_t)v14, (uint64_t)v16, &qword_10095A758);
  *(void *)&v16[*(int *)(v67 + 36)] = v48;
  sub_10008DB18((uint64_t)v14, &qword_10095A758);
  sub_1000AEF2C((uint64_t)v16, (uint64_t)v20, &qword_10095A760);
  *(void *)&v20[*(int *)(v66 + 36)] = 0x3FF0000000000000;
  sub_10008DB18((uint64_t)v16, &qword_10095A760);
  sub_1000AEEC8((uint64_t)v20, v72, &qword_10095A768);
  if (qword_10094A7D8 != -1) {
    swift_once();
  }
  uint64_t v49 = qword_1009979C0;
  if (dispatch thunk of TargetZone.isSingleThreshold.getter())
  {
    uint64_t v50 = 0;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    uint64_t v53 = 0;
    uint64_t v54 = 0;
    uint64_t v55 = 0;
  }
  else
  {
    uint64_t v50 = sub_1003B1DD4();
    uint64_t v51 = v56 & 1;
    sub_1003B1BF0();
    v45(v46, v44, v47);
    uint64_t v52 = Color.init(_:red:green:blue:opacity:)();
    static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
    uint64_t v55 = v57;
    uint64_t v54 = 0x4014000000000000;
    uint64_t v53 = 0x4018000000000000;
  }
  uint64_t v58 = v72;
  uint64_t v59 = v69;
  sub_1000AEF2C(v72, v69, &qword_10095A768);
  uint64_t v60 = v71;
  sub_1000AEF2C(v59, v71, &qword_10095A768);
  uint64_t v61 = sub_1000AFA94(&qword_10095A778);
  uint64_t v62 = v60 + *(int *)(v61 + 48);
  *(void *)uint64_t v62 = v49;
  *(unsigned char *)(v62 + 8) = 0;
  uint64_t v63 = (uint64_t *)(v60 + *(int *)(v61 + 64));
  *uint64_t v63 = v50;
  v63[1] = v51;
  v63[2] = v52;
  v63[3] = v53;
  v63[4] = v55;
  v63[5] = v54;
  swift_retain();
  sub_10008DB18(v58, &qword_10095A768);
  swift_release();
  return sub_10008DB18(v59, &qword_10095A768);
}

uint64_t sub_1003B2A24@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v41 = sub_1000AFA94(&qword_10095A780);
  __chkstk_darwin(v41);
  uint64_t v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_10095A788);
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v40 = v6;
  __chkstk_darwin(v6);
  uint64_t v37 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_10095A790);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v38 = (uint64_t)v33 - v13;
  long long v42 = *(_OWORD *)a1;
  v33[1] = *((void *)&v42 + 1);
  BOOL v14 = *(void **)(a1 + 24);
  uint64_t v36 = *(void *)(a1 + 16);
  uint64_t v15 = *(void **)(a1 + 32);
  sub_1000E2358((uint64_t)&v42);
  type metadata accessor for MetricsPublisher();
  sub_1003B33DC();
  swift_retain();
  id v35 = v14;
  id v34 = v15;
  uint64_t v16 = ObservedObject.init(wrappedValue:)();
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(a1 + 40);
  *(void *)uint64_t v5 = static VerticalAlignment.firstTextBaseline.getter();
  *((void *)v5 + 1) = 0x4010000000000000;
  v5[16] = 0;
  uint64_t v20 = sub_1000AFA94(&qword_10095A798);
  sub_1003B2DA4(a1, (uint64_t)&v5[*(int *)(v20 + 44)]);
  sub_1000A132C(&qword_10095A7A0, &qword_10095A780);
  uint64_t v21 = v37;
  View.metricDescriptionFont(multiline:)();
  sub_10008DB18((uint64_t)v5, &qword_10095A780);
  uint64_t v22 = *(void *)(a1 + 48);
  uint64_t v24 = v39;
  uint64_t v23 = v40;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v11, v21, v40);
  uint64_t v25 = &v11[*(int *)(v9 + 44)];
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = v22;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
  uint64_t v26 = v38;
  sub_1000AEEC8((uint64_t)v11, v38, &qword_10095A790);
  sub_1000AEF2C(v26, (uint64_t)v11, &qword_10095A790);
  *a2 = v16;
  a2[1] = v18;
  uint64_t v27 = v35;
  a2[2] = v36;
  a2[3] = (uint64_t)v27;
  uint64_t v28 = v34;
  a2[4] = (uint64_t)v34;
  a2[5] = 0;
  a2[6] = v19;
  uint64_t v29 = sub_1000AFA94(&qword_10095A7A8);
  sub_1000AEF2C((uint64_t)v11, (uint64_t)a2 + *(int *)(v29 + 48), &qword_10095A790);
  swift_retain();
  swift_retain();
  id v30 = v27;
  id v31 = v28;
  sub_10008DB18(v26, &qword_10095A790);
  sub_10008DB18((uint64_t)v11, &qword_10095A790);

  swift_release();
  return swift_release();
}

uint64_t sub_1003B2DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  uint64_t v2 = sub_1000AFA94(&qword_100959E78);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for Image.Scale();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100959E80);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_1000AFA94(&qword_10095A7B0);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v38 = (uint64_t)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v39 = (uint64_t)&v38 - v18;
  uint64_t v19 = Image.init(_internalSystemName:)();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Image.Scale.small(_:), v6);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v5 + *(int *)(v3 + 36), v9, v6);
  *uint64_t v5 = KeyPath;
  sub_1000AEF2C((uint64_t)v5, (uint64_t)v13 + *(int *)(v11 + 44), &qword_100959E78);
  uint64_t *v13 = v19;
  swift_retain();
  sub_10008DB18((uint64_t)v5, &qword_100959E78);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release();
  uint64_t v21 = static VerticalAlignment.firstTextBaseline.getter();
  uint64_t v22 = v38;
  sub_1000AEF2C((uint64_t)v13, v38, &qword_100959E80);
  uint64_t v23 = (uint64_t *)(v22 + *(int *)(v15 + 44));
  *uint64_t v23 = v21;
  v23[1] = (uint64_t)sub_1003B31A8;
  _OWORD v23[2] = 0;
  sub_10008DB18((uint64_t)v13, &qword_100959E80);
  uint64_t v24 = v39;
  sub_1000AEEC8(v22, v39, &qword_10095A7B0);
  uint64_t v42 = TargetZone.displayString(formattingManager:activityType:)();
  uint64_t v43 = v25;
  sub_1000A06D0();
  uint64_t v26 = StringProtocol.localizedUppercase.getter();
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  uint64_t v42 = v26;
  uint64_t v43 = v28;
  uint64_t v29 = Text.init<A>(_:)();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  LOBYTE(v6) = v34 & 1;
  sub_1000AEF2C(v24, v22, &qword_10095A7B0);
  uint64_t v35 = v41;
  sub_1000AEF2C(v22, v41, &qword_10095A7B0);
  uint64_t v36 = v35 + *(int *)(sub_1000AFA94(qword_10095A7B8) + 48);
  *(void *)uint64_t v36 = v29;
  *(void *)(v36 + 8) = v31;
  *(unsigned char *)(v36 + 16) = v6;
  *(void *)(v36 + 24) = v33;
  sub_1000A1750(v29, v31, v6);
  swift_bridgeObjectRetain();
  sub_10008DB18(v24, &qword_10095A7B0);
  sub_1000A06C0(v29, v31, v6);
  swift_bridgeObjectRelease();
  return sub_10008DB18(v22, &qword_10095A7B0);
}

double sub_1003B31A8()
{
  static VerticalAlignment.firstTextBaseline.getter();
  ViewDimensions.subscript.getter();
  return v0 + -1.0;
}

uint64_t sub_1003B31D8()
{
  uint64_t v1 = sub_1000AFA94(&qword_10095A6E8);
  __chkstk_darwin(v1);
  uint64_t v3 = (uint64_t *)((char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v4 = *(_OWORD *)(v0 + 16);
  v8[0] = *(_OWORD *)v0;
  v8[1] = v4;
  v8[2] = *(_OWORD *)(v0 + 32);
  uint64_t v9 = *(void *)(v0 + 48);
  *uint64_t v3 = static Alignment.center.getter();
  v3[1] = v5;
  uint64_t v6 = sub_1000AFA94(&qword_10095A6F0);
  sub_1003B1EA0((uint64_t)v8, (uint64_t)v3 + *(int *)(v6 + 44));
  sub_1000A132C(&qword_10095A6F8, &qword_10095A6E8);
  View.metricRow(padding:)();
  return sub_10008DB18((uint64_t)v3, &qword_10095A6E8);
}

unint64_t sub_1003B32E8()
{
  unint64_t result = qword_10095A720;
  if (!qword_10095A720)
  {
    sub_1000A1370(&qword_10095A718);
    sub_1003B3388();
    sub_1000A132C(&qword_10094E300, &qword_10094E308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095A720);
  }
  return result;
}

unint64_t sub_1003B3388()
{
  unint64_t result = qword_10095A728;
  if (!qword_10095A728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095A728);
  }
  return result;
}

unint64_t sub_1003B33DC()
{
  unint64_t result = qword_100953590;
  if (!qword_100953590)
  {
    type metadata accessor for MetricsPublisher();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953590);
  }
  return result;
}

uint64_t sub_1003B343C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003B34BC(uint64_t a1)
{
  swift_release();
  uint64_t result = swift_release();
  if (*(void *)(a1 + 16))
  {
    return swift_release();
  }
  return result;
}

void *sub_1003B3514(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v6 = a2 + 2;
  uint64_t v5 = a2[2];
  swift_retain();
  swift_retain();
  if (v5)
  {
    uint64_t v7 = a2[3];
    a1[2] = v5;
    a1[3] = v7;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *v6;
  }
  return a1;
}

void *sub_1003B3588(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v4 = a2[2];
  if (!a1[2])
  {
    if (v4)
    {
      uint64_t v6 = a2[3];
      a1[2] = v4;
      a1[3] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[3];
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1003B3640(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v4;
      *(void *)(a1 + 24) = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for AsyncView()
{
  return sub_100049E84();
}

uint64_t sub_1003B36EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003B3730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v26 = a5;
  uint64_t v27 = a4;
  uint64_t v28 = a7;
  uint64_t v11 = type metadata accessor for _TaskModifier();
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for TaskPriority();
  uint64_t v15 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  sub_1000AFA94(&qword_10095A840);
  State.wrappedValue.getter();
  uint64_t v18 = v31;
  uint64_t v19 = (void *)swift_allocObject();
  long long v19[2] = v26;
  v19[3] = a6;
  v19[4] = a1;
  v19[5] = a2;
  v19[6] = a3;
  v19[7] = v27;
  swift_retain();
  swift_retain();
  sub_10008A670(a3);
  static TaskPriority.userInitiated.getter();
  uint64_t v20 = v25;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(&v14[*(int *)(v12 + 28)], v17, v25);
  *(void *)uint64_t v14 = &unk_10095A850;
  *((void *)v14 + 1) = v19;
  uint64_t v21 = sub_1000AFA94(&qword_10095A858);
  uint64_t v22 = v28;
  sub_1003B4018((uint64_t)v14, (uint64_t)v28 + *(int *)(v21 + 36));
  *uint64_t v22 = v18;
  swift_retain();
  sub_1003B407C((uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v20);
  return swift_release();
}

uint64_t sub_1003B3954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  void v6[6] = a2;
  uint64_t v8 = type metadata accessor for Optional();
  v6[11] = v8;
  v6[12] = *(void *)(v8 - 8);
  v6[13] = swift_task_alloc();
  v6[14] = *(void *)(a5 - 8);
  v6[15] = swift_task_alloc();
  v6[16] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[17] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[18] = v10;
  v6[19] = v9;
  return _swift_task_switch(sub_1003B3AB8, v10, v9);
}

uint64_t sub_1003B3AB8()
{
  uint64_t v1 = (int *)v0[7];
  if (v1)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[20] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1003B3BF8;
    uint64_t v3 = v0[13];
    return v6(v3);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_1003B3BF8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 152);
  uint64_t v3 = *(void *)(v1 + 144);
  return _swift_task_switch(sub_1003B3D18, v3, v2);
}

uint64_t sub_1003B3D18()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[9];
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    uint64_t v5 = v0[12];
    uint64_t v4 = v0[13];
    uint64_t v6 = v0[11];
    sub_10005E5F8(v0[7]);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  else
  {
    uint64_t v8 = v0[15];
    uint64_t v7 = v0[16];
    uint64_t v9 = v0[14];
    uint64_t v10 = v0[9];
    uint64_t v11 = v0[7];
    uint64_t v13 = v0[5];
    uint64_t v12 = v0[6];
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 32))(v7, v0[13], v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v7, v10);
    v0[4] = AnyView.init<A>(_:)();
    v0[2] = v13;
    v0[3] = v12;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000AFA94(&qword_10095A840);
    State.wrappedValue.setter();
    sub_10005E5F8(v11);
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v10);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1003B3EF4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1003B3730(*v2, v2[1], v2[2], v2[3], *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_1003B3F08()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1003B3F58()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_10005DB5C;
  return sub_1003B3954(v4, v5, v7, v6, v2, v3);
}

uint64_t sub_1003B4018(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _TaskModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003B407C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for _TaskModifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1003B40DC()
{
  unint64_t result = qword_10095A860;
  if (!qword_10095A860)
  {
    sub_1000A1370(&qword_10095A858);
    sub_1003B4158();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095A860);
  }
  return result;
}

unint64_t sub_1003B4158()
{
  unint64_t result = qword_100950478;
  if (!qword_100950478)
  {
    type metadata accessor for _TaskModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100950478);
  }
  return result;
}

uint64_t sub_1003B41B0(uint64_t a1)
{
  uint64_t v35 = a1;
  uint64_t v34 = sub_1000AFA94(&qword_10095ABF0);
  uint64_t v1 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_10095AC00);
  __chkstk_darwin(v4);
  sub_1003128D4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x206F642074616857;
  v5._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  unint64_t v33 = sub_1003D0610();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._object = (void *)0x80000001007C5D30;
  v6._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v8 = v1 + 8;
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v9 = v34;
  v7(v3, v34);
  uint64_t v31 = v8;
  uint64_t v32 = v7;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0x206F642074616857;
  v10._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0xD000000000000019;
  v11._object = (void *)0x80000001007C5D50;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v7(v3, v9);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 0x6469642074616857;
  v12._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0xD000000000000014;
  v13._object = (void *)0x80000001007C5D70;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v32(v3, v34);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0x6469642074616857;
  v14._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0xD000000000000015;
  v15._object = (void *)0x80000001007C5D90;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v16 = v34;
  uint64_t v17 = v32;
  v32(v3, v34);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._countAndFlagsBits = 0x6469642074616857;
  v18._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._countAndFlagsBits = 0xD000000000000018;
  v19._object = (void *)0x80000001007C5DB0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v17(v3, v16);
  sub_1000AFA94(&qword_10095ABF8);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_100752870;
  uint64_t v22 = v29;
  *(void *)(v21 + 32) = v30;
  *(void *)(v21 + 40) = v22;
  uint64_t v23 = v27;
  *(void *)(v21 + 48) = v28;
  *(void *)(v21 + 56) = v23;
  *(void *)(v21 + 64) = v20;
  uint64_t v24 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1003B47C8(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1000AEF2C(a1, (uint64_t)&v9 - v6, (uint64_t *)&unk_10095B890);
  sub_1000AEF2C((uint64_t)v7, (uint64_t)v4, (uint64_t *)&unk_10095B890);
  IntentParameter.wrappedValue.setter();
  return sub_10008DB18((uint64_t)v7, (uint64_t *)&unk_10095B890);
}

uint64_t sub_1003B48A4(uint64_t a1)
{
  return sub_1003CCE6C(a1, (uint64_t)&unk_1007622D0, (void (*)(void))sub_1003D0610, (void (*)(uint64_t))sub_1003128D4);
}

uint64_t sub_1003B48EC()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000AFA94(&qword_10094F270);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100752410;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1003B49B8(uint64_t a1)
{
  uint64_t v44 = a1;
  uint64_t v45 = sub_1000AFA94(&qword_10095ABF0);
  uint64_t v1 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_10095AC00);
  __chkstk_darwin(v4);
  sub_1003128D4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0xD000000000000011;
  v5._object = (void *)0x80000001007C5C30;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  unint64_t v6 = sub_1003D0610();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v40 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v8 = v45;
  v43(v3, v45);
  uint64_t v41 = v1 + 8;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0xD000000000000017;
  v9._object = (void *)0x80000001007C5C50;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v43(v3, v8);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0xD000000000000012;
  v11._object = (void *)0x80000001007C5C70;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  unint64_t v42 = v6;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v38 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v13 = v43;
  v43(v3, v45);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0xD00000000000001BLL;
  v14._object = (void *)0x80000001007C5C90;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v37 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v16 = v45;
  v13(v3, v45);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._object = (void *)0x80000001007C5CB0;
  v17._countAndFlagsBits = 0xD000000000000018;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v36 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v13(v3, v16);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v19._countAndFlagsBits = 0xD000000000000014;
  v19._object = (void *)0x80000001007C5CD0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v43(v3, v45);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v21._countAndFlagsBits = 0xD000000000000015;
  v21._object = (void *)0x80000001007C5CF0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v23 = v45;
  uint64_t v24 = v43;
  v43(v3, v45);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v25._object = (void *)0x80000001007C5D10;
  v25._countAndFlagsBits = 0xD000000000000018;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v24(v3, v23);
  sub_1000AFA94(&qword_10095ABF8);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_100750560;
  uint64_t v29 = v39;
  *(void *)(v28 + 32) = v40;
  *(void *)(v28 + 40) = v29;
  uint64_t v30 = v37;
  *(void *)(v28 + 48) = v38;
  *(void *)(v28 + 56) = v30;
  uint64_t v31 = v35;
  *(void *)(v28 + 64) = v36;
  *(void *)(v28 + 72) = v31;
  *(void *)(v28 + 80) = v34;
  *(void *)(v28 + 88) = v27;
  uint64_t v32 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_1003B5224(uint64_t a1)
{
  return sub_1003CCE6C(a1, (uint64_t)&unk_1007622D0, (void (*)(void))sub_1003D0610, (void (*)(uint64_t))sub_1003128D4);
}

uint64_t sub_1003B526C()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000AFA94(&qword_10094F270);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100752410;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1003B532C(uint64_t a1)
{
  uint64_t v55 = sub_1000AFA94(&qword_10095ABF0);
  uint64_t v2 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10095AC00);
  __chkstk_darwin(v5);
  sub_1003128D4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._countAndFlagsBits = 0xD000000000000015;
  v6._object = (void *)0x80000001007C5AF0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  swift_getKeyPath();
  unint64_t v7 = sub_1003D0610();
  uint64_t v52 = a1;
  unint64_t v53 = v7;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v51 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v9 = *(void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v56 = v2 + 8;
  uint64_t v54 = v9;
  uint64_t v10 = v55;
  v9(v4, v55);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0xD000000000000018;
  v11._object = (void *)0x80000001007C5B10;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v13 = v54;
  v54(v4, v10);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0xD000000000000019;
  v14._object = (void *)0x80000001007C5B30;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v16 = v55;
  v13(v4, v55);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._countAndFlagsBits = 0xD00000000000001CLL;
  unint64_t v46 = 0xD00000000000001CLL;
  v17._object = (void *)0x80000001007C5B50;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v19 = v16;
  Swift::String v20 = v54;
  v54(v4, v19);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v21._countAndFlagsBits = 0xD00000000000001ELL;
  v21._object = (void *)0x80000001007C5B70;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v20(v4, v55);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v23._object = (void *)0x80000001007C5B90;
  v23._countAndFlagsBits = 0xD00000000000001BLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v45 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v54(v4, v55);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v25._object = (void *)0x80000001007C5BB0;
  v25._countAndFlagsBits = 0xD00000000000001BLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v44 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v54(v4, v55);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v27._countAndFlagsBits = 0xD000000000000017;
  v27._object = (void *)0x80000001007C5BD0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v43 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v29 = v54;
  uint64_t v30 = v55;
  v54(v4, v55);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v31._object = (void *)0x80000001007C5BF0;
  v31._countAndFlagsBits = v46;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v32._countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v46 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v29(v4, v30);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v33._object = (void *)0x80000001007C5C10;
  v33._countAndFlagsBits = 0xD00000000000001BLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v34._countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v29(v4, v30);
  sub_1000AFA94(&qword_10095ABF8);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_100761B10;
  uint64_t v37 = v50;
  *(void *)(v36 + 32) = v51;
  *(void *)(v36 + 40) = v37;
  uint64_t v38 = v48;
  *(void *)(v36 + 48) = v49;
  *(void *)(v36 + 56) = v38;
  uint64_t v39 = v45;
  *(void *)(v36 + 64) = v47;
  *(void *)(v36 + 72) = v39;
  uint64_t v40 = v43;
  *(void *)(v36 + 80) = v44;
  *(void *)(v36 + 88) = v40;
  *(void *)(v36 + 96) = v46;
  *(void *)(v36 + 104) = v35;
  uint64_t v41 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_1003B5D50(uint64_t a1)
{
  return sub_1003CCE6C(a1, (uint64_t)&unk_1007622D0, (void (*)(void))sub_1003D0610, (void (*)(uint64_t))sub_1003128D4);
}

uint64_t sub_1003B5D98()
{
  uint64_t v0 = sub_1000AFA94(&qword_10095ABF0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003128D4();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v22 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v19 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v17 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  sub_1000AFA94(&qword_10095ABF8);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100761B20;
  uint64_t v10 = v21;
  *(void *)(v9 + 32) = v22;
  *(void *)(v9 + 40) = v10;
  uint64_t v11 = v19;
  *(void *)(v9 + 48) = v20;
  *(void *)(v9 + 56) = v11;
  uint64_t v12 = v17;
  *(void *)(v9 + 64) = v18;
  *(void *)(v9 + 72) = v12;
  *(void *)(v9 + 80) = v16;
  *(void *)(v9 + 88) = v5;
  *(void *)(v9 + 96) = v6;
  *(void *)(v9 + 104) = v7;
  *(void *)(v9 + 112) = v8;
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1003B6240(uint64_t a1)
{
  uint64_t v38 = a1;
  uint64_t v1 = sub_1000AFA94(&qword_10095ABD8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v39 = v1;
  uint64_t v40 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10095ABE0);
  __chkstk_darwin(v5);
  sub_1002FDE60();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._countAndFlagsBits = 0xD000000000000014;
  v6._object = (void *)0x80000001007C58C0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  swift_getKeyPath();
  unint64_t v37 = sub_100312408();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v9 = v39;
  uint64_t v11 = v40 + 8;
  uint64_t v10 = *(void (**)(char *, uint64_t))(v40 + 8);
  uint64_t v35 = v8;
  uint64_t v36 = v10;
  v10(v4, v39);
  uint64_t v40 = v11;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 0xD000000000000013;
  v12._object = (void *)0x80000001007C58E0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v14 = v36;
  v36(v4, v9);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._countAndFlagsBits = 0xD00000000000001CLL;
  v15._object = (void *)0x80000001007C5900;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._countAndFlagsBits = 0x6569726F6C616320;
  v16._object = (void *)0xE900000000000073;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v33 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v14(v4, v39);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._object = (void *)0x80000001007C5920;
  v17._countAndFlagsBits = 0xD00000000000001BLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0x756F6A6F6C696B20;
  v18._object = (void *)0xEB0000000073656CLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v19 = v36;
  v36(v4, v39);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._object = (void *)0x80000001007C5940;
  v20._countAndFlagsBits = 0xD00000000000001BLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 0x736574756E696D20;
  v21._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v31 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v22 = v39;
  v19(v4, v39);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v23._countAndFlagsBits = 0xD000000000000016;
  v23._object = (void *)0x80000001007C5960;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v24._countAndFlagsBits = 0x6569726F6C616320;
  v24._object = (void *)0xE900000000000073;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v19(v4, v22);
  sub_1000AFA94(&qword_10095ABE8);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_10075FCD0;
  uint64_t v27 = v34;
  *(void *)(v26 + 32) = v35;
  *(void *)(v26 + 40) = v27;
  uint64_t v28 = v32;
  *(void *)(v26 + 48) = v33;
  *(void *)(v26 + 56) = v28;
  *(void *)(v26 + 64) = v31;
  *(void *)(v26 + 72) = v25;
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_1003B6910(uint64_t a1)
{
  return sub_1003CCE6C(a1, (uint64_t)&unk_1007622A8, (void (*)(void))sub_100312408, (void (*)(uint64_t))sub_1002FDE60);
}

uint64_t sub_1003B6958()
{
  return sub_1003B9AEC();
}

uint64_t sub_1003B6988(uint64_t a1)
{
  uint64_t v32 = sub_1000AFA94(&qword_10095ABC0);
  uint64_t v2 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10095ABC8);
  __chkstk_darwin(v5);
  sub_1002FFFB0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._object = (void *)0x80000001007C5830;
  v6._countAndFlagsBits = 0xD000000000000018;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  swift_getKeyPath();
  unint64_t v33 = sub_100312408();
  v25[1] = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._countAndFlagsBits = 0x736574756E696D20;
  v7._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v31 = v2 + 8;
  uint64_t v9 = v32;
  v8(v4, v32);
  uint64_t v30 = v8;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0xD000000000000020;
  v10._object = (void *)0x80000001007C5850;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v8(v4, v9);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 0xD00000000000001FLL;
  unint64_t v26 = 0xD00000000000001FLL;
  v12._object = (void *)0x80000001007C5880;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v30(v4, v9);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._object = (void *)0x80000001007C58A0;
  v14._countAndFlagsBits = v26;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0x736574756E696D20;
  v15._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v26 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v16 = v30;
  v30(v4, v32);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._object = (void *)0x80000001007C5810;
  v17._countAndFlagsBits = 0xD000000000000018;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0x736574756E696D20;
  v18._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v19 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v16(v4, v32);
  sub_1000AFA94(&qword_10095ABD0);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_100752870;
  uint64_t v21 = v28;
  *(void *)(v20 + 32) = v29;
  *(void *)(v20 + 40) = v21;
  unint64_t v22 = v26;
  *(void *)(v20 + 48) = v27;
  *(void *)(v20 + 56) = v22;
  *(void *)(v20 + 64) = v19;
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1003B6F78(uint64_t a1)
{
  return sub_1003CCE6C(a1, (uint64_t)&unk_100762280, (void (*)(void))sub_100312408, (void (*)(uint64_t))sub_1002FFFB0);
}

uint64_t sub_1003B6FC0()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000AFA94(&qword_10094F270);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10075FCD0;
  *(void *)(v6 + 32) = v0;
  *(void *)(v6 + 40) = v1;
  *(void *)(v6 + 48) = v2;
  *(void *)(v6 + 56) = v3;
  *(void *)(v6 + 64) = v4;
  *(void *)(v6 + 72) = v5;
  uint64_t v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1003B70DC(uint64_t a1)
{
  uint64_t v35 = a1;
  uint64_t v34 = sub_1000AFA94(&qword_10095ABA8);
  uint64_t v1 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_10095ABB0);
  __chkstk_darwin(v4);
  sub_10030110C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0xD000000000000015;
  v5._object = (void *)0x80000001007C5790;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  unint64_t v33 = sub_100312408();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x7372756F6820;
  v6._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v8 = v1 + 8;
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v9 = v34;
  v7(v3, v34);
  uint64_t v31 = v8;
  uint64_t v32 = v7;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0xD00000000000001DLL;
  v10._object = (void *)0x80000001007C57B0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v7(v3, v9);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._object = (void *)0x80000001007C57D0;
  v12._countAndFlagsBits = 0xD00000000000001CLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v32(v3, v34);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._object = (void *)0x80000001007C57F0;
  v14._countAndFlagsBits = 0xD00000000000001CLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0x7372756F6820;
  v15._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v16 = v34;
  Swift::String v17 = v32;
  v32(v3, v34);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._countAndFlagsBits = 0xD000000000000018;
  v18._object = (void *)0x80000001007C5810;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._countAndFlagsBits = 0x7372756F6820;
  v19._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v17(v3, v16);
  sub_1000AFA94(&qword_10095ABB8);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_100752870;
  uint64_t v22 = v29;
  *(void *)(v21 + 32) = v30;
  *(void *)(v21 + 40) = v22;
  uint64_t v23 = v27;
  *(void *)(v21 + 48) = v28;
  *(void *)(v21 + 56) = v23;
  *(void *)(v21 + 64) = v20;
  uint64_t v24 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1003B76B8(uint64_t a1)
{
  return sub_1003CCE6C(a1, (uint64_t)&unk_100762258, (void (*)(void))sub_100312408, (void (*)(uint64_t))sub_10030110C);
}

uint64_t sub_1003B7704(uint64_t a1)
{
  uint64_t v38 = a1;
  uint64_t v1 = sub_1000AFA94(&qword_10095AB90);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v39 = v1;
  uint64_t v40 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10095AB98);
  __chkstk_darwin(v5);
  sub_1003043EC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._countAndFlagsBits = 0x20796D20746553;
  v6._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  swift_getKeyPath();
  unint64_t v37 = sub_1003038D4();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._countAndFlagsBits = 0x73676E697220;
  v7._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v9 = v39;
  uint64_t v11 = v40 + 8;
  Swift::String v10 = *(void (**)(char *, uint64_t))(v40 + 8);
  uint64_t v35 = v8;
  uint64_t v36 = v10;
  v10(v4, v39);
  uint64_t v40 = v11;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 0x20796D20746553;
  v12._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0x73676E697220;
  v13._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v14 = v36;
  v36(v4, v9);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._countAndFlagsBits = 0x6D207473756A6441;
  v15._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._countAndFlagsBits = 0x6F6720676E697220;
  v16._object = (void *)0xEB00000000736C61;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v33 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v14(v4, v39);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._countAndFlagsBits = 0x20796D20746553;
  v17._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0x617420676E697220;
  v18._object = (void *)0xED00007374656772;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v19 = v36;
  v36(v4, v39);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._countAndFlagsBits = 0x6D20657461647055;
  v20._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 0x616220676E697220;
  v21._object = (void *)0xEF73656E696C6573;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v31 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v22 = v39;
  v19(v4, v39);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v23._countAndFlagsBits = 0x6D2065676E616843;
  v23._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v24._countAndFlagsBits = 0x73676E697220;
  v24._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v19(v4, v22);
  sub_1000AFA94(&qword_10095ABA0);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_10075FCD0;
  uint64_t v27 = v34;
  *(void *)(v26 + 32) = v35;
  *(void *)(v26 + 40) = v27;
  uint64_t v28 = v32;
  *(void *)(v26 + 48) = v33;
  *(void *)(v26 + 56) = v28;
  *(void *)(v26 + 64) = v31;
  *(void *)(v26 + 72) = v25;
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_1003B7DD4(uint64_t a1)
{
  return sub_1003CCE6C(a1, (uint64_t)&unk_100762140, (void (*)(void))sub_1003038D4, (void (*)(uint64_t))sub_1003043EC);
}

uint64_t sub_1003B7E1C()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000AFA94(&qword_10094F270);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100752410;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1003B7ED4(uint64_t a1)
{
  uint64_t v38 = a1;
  uint64_t v1 = sub_1000AFA94(&qword_10095AB90);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v39 = v1;
  uint64_t v40 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10095AB98);
  __chkstk_darwin(v5);
  sub_1003043EC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._countAndFlagsBits = 0x20796D20746553;
  v6._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  swift_getKeyPath();
  unint64_t v37 = sub_1003038D4();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._countAndFlagsBits = 0x6C616F6720;
  v7._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v9 = v39;
  uint64_t v11 = v40 + 8;
  Swift::String v10 = *(void (**)(char *, uint64_t))(v40 + 8);
  uint64_t v35 = v8;
  uint64_t v36 = v10;
  v10(v4, v39);
  uint64_t v40 = v11;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 0x20796D20746553;
  v12._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0x676E697220;
  v13._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v14 = v36;
  v36(v4, v9);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._countAndFlagsBits = 0x6D207473756A6441;
  v15._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._countAndFlagsBits = 0x6F6720676E697220;
  v16._object = (void *)0xEA00000000006C61;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v33 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v14(v4, v39);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._countAndFlagsBits = 0x20796D20746553;
  v17._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0x617420676E697220;
  v18._object = (void *)0xEC00000074656772;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v19 = v36;
  v36(v4, v39);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._countAndFlagsBits = 0x6D20657461647055;
  v20._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 0x6E696C6573616220;
  v21._object = (void *)0xE900000000000065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v31 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v22 = v39;
  v19(v4, v39);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v23._countAndFlagsBits = 0x6D2065676E616843;
  v23._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v24._countAndFlagsBits = 0x676E697220;
  v24._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v19(v4, v22);
  sub_1000AFA94(&qword_10095ABA0);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_10075FCD0;
  uint64_t v27 = v34;
  *(void *)(v26 + 32) = v35;
  *(void *)(v26 + 40) = v27;
  uint64_t v28 = v32;
  *(void *)(v26 + 48) = v33;
  *(void *)(v26 + 56) = v28;
  *(void *)(v26 + 64) = v31;
  *(void *)(v26 + 72) = v25;
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_1003B8594(uint64_t a1)
{
  return sub_1003CCE6C(a1, (uint64_t)&unk_100762140, (void (*)(void))sub_1003038D4, (void (*)(uint64_t))sub_1003043EC);
}

uint64_t sub_1003B85DC()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000AFA94(&qword_10094F270);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10075CD20;
  *(void *)(v7 + 32) = v0;
  *(void *)(v7 + 40) = v1;
  *(void *)(v7 + 48) = v2;
  *(void *)(v7 + 56) = v3;
  *(void *)(v7 + 64) = v4;
  *(void *)(v7 + 72) = v5;
  *(void *)(v7 + 80) = v6;
  uint64_t v8 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1003B86F8(uint64_t a1)
{
  uint64_t v50 = sub_1000AFA94(&qword_10095AB90);
  uint64_t v54 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v3 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_10095AB98);
  __chkstk_darwin(v4);
  unint64_t v5 = sub_1003043EC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._countAndFlagsBits = 0x20796D20746553;
  v6._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  swift_getKeyPath();
  unint64_t v7 = sub_1003038D4();
  uint64_t v52 = a1;
  unint64_t v53 = v7;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._object = (void *)0xE900000000000020;
  uint64_t v48 = (void *)0xE900000000000020;
  v8._countAndFlagsBits = 0x6F74206C616F6720;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  uint64_t v51 = sub_1003D0058(&qword_10095AB70, &qword_10094E9F0, (void (*)(void))sub_100312408);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0x6569726F6C616320;
  v9._object = (void *)0xE900000000000073;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  Swift::String v10 = v3;
  unint64_t v11 = v5;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v46 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v49 = *(void (**)(char *, uint64_t))(v54 + 8);
  v54 += 8;
  uint64_t v12 = v50;
  v49(v10, v50);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0x20796D20746553;
  v13._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0x6F7420676E697220;
  v14._object = v48;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0x6569726F6C616320;
  v15._object = (void *)0xE900000000000073;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  uint64_t v47 = v10;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v45 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v16 = v49;
  v49(v10, v12);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._countAndFlagsBits = 0x6D207473756A6441;
  v17._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0x6F6720676E697220;
  v18._object = (void *)0xEE00206F74206C61;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._countAndFlagsBits = 0x6569726F6C616320;
  v19._object = (void *)0xE900000000000073;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  Swift::String v20 = v47;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v44 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v21 = v50;
  v16(v20, v50);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v22._countAndFlagsBits = 0x20796D20746553;
  v22._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v23._object = (void *)0x80000001007C5720;
  v23._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  uint64_t v25 = v47;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v41 = v11;
  uint64_t v43 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v26 = v21;
  uint64_t v27 = v49;
  v49(v25, v26);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v28._countAndFlagsBits = 0x6D20657461647055;
  v28._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v29._countAndFlagsBits = 0x6E696C6573616220;
  v29._object = (void *)0xED0000206F742065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v42 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v31 = v50;
  v27(v25, v50);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v32._countAndFlagsBits = 0x6D2065676E616843;
  v32._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v33._countAndFlagsBits = 0x6F7420676E697220;
  v33._object = v48;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v34._countAndFlagsBits = 0x6569726F6C616320;
  v34._object = (void *)0xE900000000000073;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v49(v25, v31);
  sub_1000AFA94(&qword_10095ABA0);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_10075FCD0;
  uint64_t v37 = v45;
  *(void *)(v36 + 32) = v46;
  *(void *)(v36 + 40) = v37;
  uint64_t v38 = v43;
  *(void *)(v36 + 48) = v44;
  *(void *)(v36 + 56) = v38;
  *(void *)(v36 + 64) = v42;
  *(void *)(v36 + 72) = v35;
  uint64_t v39 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v39;
}

uint64_t sub_1003B907C()
{
  return sub_1003BB9CC();
}

uint64_t sub_1003B90B0()
{
  return sub_1003CB6A0();
}

uint64_t sub_1003B90CC()
{
  return sub_1003B9AEC();
}

uint64_t sub_1003B90FC(uint64_t a1)
{
  uint64_t v47 = sub_1000AFA94(&qword_10095AB90);
  uint64_t v50 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v3 = (char *)v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_10095AB98);
  __chkstk_darwin(v4);
  unint64_t v5 = sub_1003043EC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._countAndFlagsBits = 0x20796D20746553;
  v6._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  swift_getKeyPath();
  unint64_t v48 = sub_1003038D4();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._countAndFlagsBits = 0x6F74206C616F6720;
  v7._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  uint64_t v46 = sub_1003D0058(&qword_10095AB70, &qword_10094E9F0, (void (*)(void))sub_100312408);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0x756F6A6F6C696B20;
  v8._object = (void *)0xEB0000000073656CLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v45 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v49 = *(void (**)(char *, uint64_t))(v50 + 8);
  v50 += 8;
  uint64_t v9 = v47;
  v49(v3, v47);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0x20796D20746553;
  v10._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0x6F7420676E697220;
  v11._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0x756F6A6F6C696B20;
  v12._object = (void *)0xEB0000000073656CLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v44 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v49(v3, v9);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0x6D207473756A6441;
  v13._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0x6F6720676E697220;
  v14._object = (void *)0xEE00206F74206C61;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  uint64_t v15 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  uint64_t v40 = v3;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  v39[2] = v5;
  uint64_t v43 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v17 = v47;
  v49(v3, v47);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._countAndFlagsBits = 0x20796D20746553;
  v18._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  v39[1] = v15;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._object = (void *)0x80000001007C5720;
  v19._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v20._countAndFlagsBits = 0x756F6A6F6C696B20;
  v20._object = (void *)0xEB0000000073656CLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  uint64_t v21 = v40;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v42 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v22 = v17;
  Swift::String v23 = v49;
  v49(v21, v22);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v24._countAndFlagsBits = 0x6D20657461647055;
  v24._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v25._countAndFlagsBits = 0x6E696C6573616220;
  v25._object = (void *)0xED0000206F742065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  uint64_t v27 = v21;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v41 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v28 = v21;
  uint64_t v29 = v47;
  v23(v28, v47);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v30._countAndFlagsBits = 0x6D2065676E616843;
  v30._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v31._countAndFlagsBits = 0x6F7420676E697220;
  v31._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v32._countAndFlagsBits = 0x756F6A6F6C696B20;
  v32._object = (void *)0xEB0000000073656CLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v33 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v49(v27, v29);
  sub_1000AFA94(&qword_10095ABA0);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_10075FCD0;
  uint64_t v35 = v44;
  *(void *)(v34 + 32) = v45;
  *(void *)(v34 + 40) = v35;
  uint64_t v36 = v42;
  *(void *)(v34 + 48) = v43;
  *(void *)(v34 + 56) = v36;
  *(void *)(v34 + 64) = v41;
  *(void *)(v34 + 72) = v33;
  uint64_t v37 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v37;
}

uint64_t sub_1003B9A84()
{
  return sub_1003BB9CC();
}

uint64_t sub_1003B9AB8()
{
  return sub_1003B9AEC();
}

uint64_t sub_1003B9AEC()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000AFA94(&qword_10094F270);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10075CD20;
  *(void *)(v7 + 32) = v0;
  *(void *)(v7 + 40) = v1;
  *(void *)(v7 + 48) = v2;
  *(void *)(v7 + 56) = v3;
  *(void *)(v7 + 64) = v4;
  *(void *)(v7 + 72) = v5;
  *(void *)(v7 + 80) = v6;
  uint64_t v8 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1003B9C34(uint64_t a1)
{
  uint64_t v46 = sub_1000AFA94(&qword_10095AB90);
  uint64_t v48 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_10095AB98);
  __chkstk_darwin(v4);
  sub_1003043EC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x20796D20746553;
  v5._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  unint64_t v47 = sub_1003038D4();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x6F74206C616F6720;
  v6._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  swift_getKeyPath();
  uint64_t v45 = sub_1003D0058(&qword_10095AB70, &qword_10094E9F0, (void (*)(void))sub_100312408);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._countAndFlagsBits = 0x736574756E696D20;
  v7._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v41 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v48 + 8);
  v48 += 8;
  uint64_t v8 = v46;
  v44(v3, v46);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0x20796D20746553;
  v9._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0x6F7420676E697220;
  v10._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0x736574756E696D20;
  v11._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  uint64_t v42 = v3;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v40 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v12 = v44;
  v44(v3, v8);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0x6D207473756A6441;
  v13._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  uint64_t v43 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0x6F6720676E697220;
  v14._object = (void *)0xEE00206F74206C61;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  Swift::String v16 = v42;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v17 = v46;
  v12(v16, v46);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._countAndFlagsBits = 0x20796D20746553;
  v18._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._object = (void *)0x80000001007C5720;
  v19._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  uint64_t v21 = v42;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v38 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v22 = v17;
  Swift::String v23 = v44;
  v44(v21, v22);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v24._countAndFlagsBits = 0x6D20657461647055;
  v24._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v25._countAndFlagsBits = 0x6E696C6573616220;
  v25._object = (void *)0xED0000206F742065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v26._countAndFlagsBits = 0x736574756E696D20;
  v26._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v37 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v27 = v46;
  v23(v21, v46);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v28._countAndFlagsBits = 0x6D2065676E616843;
  v28._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v29._countAndFlagsBits = 0x6F7420676E697220;
  v29._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v30._countAndFlagsBits = 0x736574756E696D20;
  v30._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v31 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v44(v21, v27);
  sub_1000AFA94(&qword_10095ABA0);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_10075FCD0;
  uint64_t v33 = v40;
  *(void *)(v32 + 32) = v41;
  *(void *)(v32 + 40) = v33;
  uint64_t v34 = v38;
  *(void *)(v32 + 48) = v39;
  *(void *)(v32 + 56) = v34;
  *(void *)(v32 + 64) = v37;
  *(void *)(v32 + 72) = v31;
  uint64_t v35 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v35;
}

uint64_t sub_1003BA5A4()
{
  return sub_1003BB9CC();
}

uint64_t sub_1003BA5D8()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v7 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v8 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000AFA94(&qword_10094F270);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100761B30;
  *(void *)(v9 + 32) = v0;
  *(void *)(v9 + 40) = v1;
  *(void *)(v9 + 48) = v2;
  *(void *)(v9 + 56) = v3;
  *(void *)(v9 + 64) = v4;
  *(void *)(v9 + 72) = v5;
  *(void *)(v9 + 80) = v6;
  *(void *)(v9 + 88) = v7;
  *(void *)(v9 + 96) = v8;
  uint64_t v10 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1003BA774(uint64_t a1)
{
  uint64_t v40 = sub_1000AFA94(&qword_10095AB90);
  uint64_t v42 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_10095AB98);
  __chkstk_darwin(v4);
  sub_1003043EC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x20796D20746553;
  v5._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  unint64_t v39 = sub_1003038D4();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x6F74206C616F6720;
  v6._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  swift_getKeyPath();
  uint64_t v41 = sub_1003D0058(&qword_10095AB70, &qword_10094E9F0, (void (*)(void))sub_100312408);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._countAndFlagsBits = 0x736574756E696D20;
  v7._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v36 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v42 + 8);
  v42 += 8;
  uint64_t v9 = v40;
  v8(v3, v40);
  uint64_t v38 = v8;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0x6D207473756A6441;
  v10._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  uint64_t v37 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0x6F6720676E697220;
  v11._object = (void *)0xEE00206F74206C61;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  uint64_t v32 = v3;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v8(v3, v9);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0x20796D20746553;
  v13._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._object = (void *)0x80000001007C5720;
  v14._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  Swift::String v16 = v32;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v38(v16, v40);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._countAndFlagsBits = 0x6D20657461647055;
  v17._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0x6E696C6573616220;
  v18._object = (void *)0xED0000206F742065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._countAndFlagsBits = 0x736574756E696D20;
  v19._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v33 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v20 = v40;
  uint64_t v21 = v38;
  v38(v16, v40);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v22._countAndFlagsBits = 0x6D2065676E616843;
  v22._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v23._countAndFlagsBits = 0x6F7420676E697220;
  v23._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v24._countAndFlagsBits = 0x736574756E696D20;
  v24._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v21(v16, v20);
  sub_1000AFA94(&qword_10095ABA0);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_100752870;
  uint64_t v27 = v35;
  *(void *)(v26 + 32) = v36;
  *(void *)(v26 + 40) = v27;
  uint64_t v28 = v33;
  *(void *)(v26 + 48) = v34;
  *(void *)(v26 + 56) = v28;
  *(void *)(v26 + 64) = v25;
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_1003BAFA0()
{
  return sub_1003BB9CC();
}

uint64_t sub_1003BAFD4()
{
  return sub_1003CB6A0();
}

uint64_t sub_1003BAFFC()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000AFA94(&qword_10094F270);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10075FCD0;
  *(void *)(v6 + 32) = v0;
  *(void *)(v6 + 40) = v1;
  *(void *)(v6 + 48) = v2;
  *(void *)(v6 + 56) = v3;
  *(void *)(v6 + 64) = v4;
  *(void *)(v6 + 72) = v5;
  uint64_t v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1003BB118(uint64_t a1)
{
  return sub_1003BB124(a1, (uint64_t)&unk_100762190);
}

uint64_t sub_1003BB124(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10095AB90);
  uint64_t v46 = *(void *)(v4 - 8);
  uint64_t v47 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_10095AB98);
  __chkstk_darwin(v7);
  unint64_t v8 = sub_1003043EC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0x20796D20746553;
  v9._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  unint64_t v45 = sub_1003038D4();
  uint64_t v40 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0x6F74206C616F6720;
  v10._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  uint64_t v42 = a2;
  swift_getKeyPath();
  uint64_t v44 = sub_1003D0058(&qword_10095AB70, &qword_10094E9F0, (void (*)(void))sub_100312408);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0x7372756F6820;
  v11._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  uint64_t v41 = v6;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v12 = v47;
  uint64_t v43 = *(void (**)(char *, uint64_t))(v46 + 8);
  v46 += 8;
  v43(v6, v47);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0x6D207473756A6441;
  v13._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0x6F6720676E697220;
  v14._object = (void *)0xEE00206F74206C61;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  Swift::String v16 = v41;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  v35[1] = v8;
  uint64_t v38 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v17 = v43;
  v43(v16, v12);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._countAndFlagsBits = 0x20796D20746553;
  v18._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._object = (void *)0x80000001007C5720;
  v19._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  uint64_t v21 = v41;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v37 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v17(v21, v47);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v22._countAndFlagsBits = 0x6D20657461647055;
  v22._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v23._countAndFlagsBits = 0x6E696C6573616220;
  v23._object = (void *)0xED0000206F742065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v24._countAndFlagsBits = 0x7372756F6820;
  v24._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v36 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v25 = v43;
  v43(v21, v47);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v26._countAndFlagsBits = 0x6D2065676E616843;
  v26._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v27._countAndFlagsBits = 0x6F7420676E697220;
  v27._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v28._countAndFlagsBits = 0x7372756F6820;
  v28._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v25(v21, v47);
  sub_1000AFA94(&qword_10095ABA0);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_100752870;
  uint64_t v31 = v38;
  *(void *)(v30 + 32) = v39;
  *(void *)(v30 + 40) = v31;
  uint64_t v32 = v36;
  *(void *)(v30 + 48) = v37;
  *(void *)(v30 + 56) = v32;
  *(void *)(v30 + 64) = v29;
  uint64_t v33 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v33;
}